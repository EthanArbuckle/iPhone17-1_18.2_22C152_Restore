uint64_t sub_1C0321588()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0321608(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for PuzzleStatistic();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = type metadata accessor for PuzzleStatisticCategory(0);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  sub_1C032BB9C(0);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  sub_1C0153798(0);
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0321814, v1, 0);
}

uint64_t sub_1C0321814()
{
  uint64_t v49 = v0;
  sub_1C0325F6C(*(void **)(v0 + 16), *(void *)(v0 + 96));
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16);
  sub_1C032BE04(*(void *)(v0 + 96), (uint64_t)v1 + *(int *)(v2 + 20), (uint64_t (*)(void))sub_1C032BB9C);
  type metadata accessor for PuzzleStatisticValue(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  *uint64_t v1 = v4;
  v5 = *(void (**)(void *, void, uint64_t, uint64_t))(v3 + 56);
  v5(v1, 0, 1, v2);
  swift_unknownObjectRetain();
  *(void *)(v0 + 192) = v5;
  uint64_t v6 = sub_1C0325A10(*(void **)(v0 + 16));
  v7 = *(void **)(v0 + 176);
  v8 = *(uint64_t **)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t *v8 = v6;
  type metadata accessor for PuzzleStatisticValue(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  void *v7 = v10;
  sub_1C032BE04((uint64_t)v8, (uint64_t)v7 + *(int *)(v9 + 20), type metadata accessor for PuzzleStatisticCategory);
  v5(v7, 0, 1, v9);
  swift_unknownObjectRetain();
  uint64_t v11 = sub_1C0325C14(*(void **)(v0 + 16));
  v12 = *(void **)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 32);
  uint64_t v15 = *(void *)(v0 + 16);
  *(void *)uint64_t v13 = v11;
  *(unsigned char *)(v13 + 8) = v16 & 1;
  type metadata accessor for PuzzleStatisticValue(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  void *v12 = v15;
  sub_1C032BE04(v13, (uint64_t)v12 + *(int *)(v14 + 20), type metadata accessor for PuzzleStatisticCategory);
  v5(v12, 0, 1, v14);
  swift_unknownObjectRetain();
  sub_1C0327500(*(void **)(v0 + 16), (uint64_t)&v43);
  v17 = *(void **)(v0 + 160);
  uint64_t v18 = *(void *)(v0 + 32);
  uint64_t v19 = *(void *)(v0 + 16);
  char v20 = v44;
  uint64_t v21 = v45;
  LOBYTE(v14) = v46;
  uint64_t v41 = v47;
  char v39 = v48;
  v22 = (char *)v17 + *(int *)(v18 + 20);
  *(void *)v22 = v43;
  v22[8] = v20;
  type metadata accessor for PuzzleStatisticValue(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  v24 = &v22[*(int *)(v23 + 20)];
  *(void *)v24 = v21;
  v24[8] = v14;
  swift_storeEnumTagMultiPayload();
  v25 = &v22[*(int *)(v23 + 24)];
  *(void *)v25 = v41;
  v25[8] = v39;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  void *v17 = v19;
  v5(v17, 0, 1, v18);
  swift_unknownObjectRetain();
  sub_1C03276A4(*(void **)(v0 + 16), (uint64_t)&v43);
  v26 = *(void **)(v0 + 152);
  uint64_t v27 = *(void *)(v0 + 32);
  uint64_t v28 = *(void *)(v0 + 16);
  char v29 = v44;
  uint64_t v30 = v45;
  LOBYTE(v14) = v46;
  uint64_t v42 = v47;
  char v40 = v48;
  v31 = (char *)v26 + *(int *)(v27 + 20);
  *(void *)v31 = v43;
  v31[8] = v29;
  type metadata accessor for PuzzleStatisticValue(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  v33 = &v31[*(int *)(v32 + 20)];
  *(void *)v33 = v30;
  v33[8] = v14;
  swift_storeEnumTagMultiPayload();
  v34 = &v31[*(int *)(v32 + 24)];
  *(void *)v34 = v42;
  v34[8] = v40;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  void *v26 = v28;
  v5(v26, 0, 1, v27);
  swift_unknownObjectRetain();
  v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v35;
  void *v35 = v0;
  v35[1] = sub_1C0321DA4;
  uint64_t v36 = *(void *)(v0 + 88);
  uint64_t v37 = *(void *)(v0 + 16);
  return sub_1C0326494(v36, v37);
}

uint64_t sub_1C0321DA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_1C0322010;
  }
  else {
    uint64_t v4 = sub_1C0321ED0;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C0321ED0()
{
  uint64_t v1 = (void (*)(void *, void, uint64_t, uint64_t))v0[24];
  uint64_t v2 = (void *)v0[18];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  sub_1C032BE04(v0[11], (uint64_t)v2 + *(int *)(v3 + 20), (uint64_t (*)(void))sub_1C032BB9C);
  type metadata accessor for PuzzleStatisticValue(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  void *v2 = v4;
  swift_unknownObjectRetain();
  v1(v2, 0, 1, v3);
  v5 = (void *)swift_task_alloc();
  v0[27] = v5;
  void *v5 = v0;
  v5[1] = sub_1C03220E4;
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[2];
  return sub_1C031F334(v6, v7);
}

uint64_t sub_1C0322010()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 32);

  v1(v2, 1, 1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C03220E4;
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 16);
  return sub_1C031F334(v5, v6);
}

uint64_t sub_1C03220E4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0)
  {

    uint64_t v4 = sub_1C03226B0;
  }
  else
  {
    uint64_t v4 = sub_1C032221C;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C032221C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v32 = *(void *)(v0 + 168);
  uint64_t v33 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v34 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 40);
  (*(void (**)(uint64_t, void, uint64_t, void))(v0 + 192))(v4, 0, 1, *(void *)(v0 + 32));
  sub_1BFF97CF0(0, (unint64_t *)&unk_1EA199CE8, (uint64_t (*)(uint64_t))sub_1C0153798, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = *(void *)(v5 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C152FC70;
  uint64_t v10 = v9 + v8;
  sub_1C032BE6C(v4, v9 + v8, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v3, v10 + v7, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v1, v10 + 2 * v7, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v2, v10 + 3 * v7, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v32, v10 + 4 * v7, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v33, v10 + 5 * v7, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v34, v10 + 6 * v7, (uint64_t (*)(void))sub_1C0153798);
  unint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v12 = 7;
  do
  {
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 32);
    sub_1C032BE6C(v10, v13, (uint64_t (*)(void))sub_1C0153798);
    sub_1C032BE04(v13, v14, (uint64_t (*)(void))sub_1C0153798);
    int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v14, 1, v15);
    uint64_t v17 = *(void *)(v0 + 120);
    if (v16 == 1)
    {
      sub_1C032CA9C(v17, (uint64_t (*)(void))sub_1C0153798);
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 48);
      uint64_t v18 = *(void *)(v0 + 56);
      sub_1C032BE04(v17, v18, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1C032BE04(v18, v19, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v11 = sub_1C0EE07BC(0, *(void *)(v11 + 16) + 1, 1, v11);
      }
      unint64_t v21 = *(void *)(v11 + 16);
      unint64_t v20 = *(void *)(v11 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v11 = sub_1C0EE07BC(v20 > 1, v21 + 1, 1, v11);
      }
      uint64_t v22 = *(void *)(v0 + 48);
      *(void *)(v11 + 16) = v21 + 1;
      sub_1C032BE04(v22, v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v21, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    }
    v10 += v7;
    --v12;
  }
  while (v12);
  uint64_t v24 = *(void *)(v0 + 176);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v25 = *(void *)(v0 + 168);
  uint64_t v26 = *(void *)(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 152);
  uint64_t v28 = *(void *)(v0 + 136);
  uint64_t v31 = *(void *)(v0 + 160);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C032CA9C(v28, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v26, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v27, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v31, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v25, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v24, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v23, (uint64_t (*)(void))sub_1C0153798);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v29 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v29(v11);
}

uint64_t sub_1C03226B0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v33 = *(void *)(v0 + 160);
  uint64_t v34 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 192))(v5, 1, 1, *(void *)(v0 + 32));
  sub_1BFF97CF0(0, (unint64_t *)&unk_1EA199CE8, (uint64_t (*)(uint64_t))sub_1C0153798, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = *(void *)(v6 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C152FC70;
  uint64_t v11 = v10 + v9;
  sub_1C032BE6C(v5, v10 + v9, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v4, v11 + v8, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v1, v11 + 2 * v8, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v3, v11 + 3 * v8, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v2, v11 + 4 * v8, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v33, v11 + 5 * v8, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032BE6C(v34, v11 + 6 * v8, (uint64_t (*)(void))sub_1C0153798);
  unint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v13 = 7;
  do
  {
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 32);
    sub_1C032BE6C(v11, v14, (uint64_t (*)(void))sub_1C0153798);
    sub_1C032BE04(v14, v15, (uint64_t (*)(void))sub_1C0153798);
    int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v15, 1, v16);
    uint64_t v18 = *(void *)(v0 + 120);
    if (v17 == 1)
    {
      sub_1C032CA9C(v18, (uint64_t (*)(void))sub_1C0153798);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 48);
      uint64_t v19 = *(void *)(v0 + 56);
      sub_1C032BE04(v18, v19, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1C032BE04(v19, v20, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v12 = sub_1C0EE07BC(0, *(void *)(v12 + 16) + 1, 1, v12);
      }
      unint64_t v22 = *(void *)(v12 + 16);
      unint64_t v21 = *(void *)(v12 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v12 = sub_1C0EE07BC(v21 > 1, v22 + 1, 1, v12);
      }
      uint64_t v23 = *(void *)(v0 + 48);
      *(void *)(v12 + 16) = v22 + 1;
      sub_1C032BE04(v23, v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v22, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    }
    v11 += v8;
    --v13;
  }
  while (v13);
  uint64_t v25 = *(void *)(v0 + 176);
  uint64_t v24 = *(void *)(v0 + 184);
  uint64_t v26 = *(void *)(v0 + 168);
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v28 = *(void *)(v0 + 152);
  uint64_t v29 = *(void *)(v0 + 136);
  uint64_t v32 = *(void *)(v0 + 160);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C032CA9C(v29, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v27, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v28, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v32, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v26, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v25, (uint64_t (*)(void))sub_1C0153798);
  sub_1C032CA9C(v24, (uint64_t (*)(void))sub_1C0153798);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v30(v12);
}

uint64_t sub_1C0322B40(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  v2[4] = swift_task_alloc();
  v2[5] = type metadata accessor for PuzzleStatisticValue(0);
  v2[6] = swift_task_alloc();
  v2[7] = type metadata accessor for PuzzleStatisticCategory(0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = type metadata accessor for PuzzleStatistic();
  v2[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0322C70, v1, 0);
}

uint64_t sub_1C0322C70()
{
  uint64_t v1 = sub_1C0325A10(*(void **)(v0 + 16));
  uint64_t v2 = *(void **)(v0 + 88);
  uint64_t v3 = *(uint64_t **)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 16);
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  void *v2 = v6;
  uint64_t v7 = (uint64_t)v2 + *(int *)(v4 + 20);
  sub_1C032BE04((uint64_t)v3, v7, type metadata accessor for PuzzleStatisticCategory);
  sub_1C032BE6C(v7, v5, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      uint64_t v11 = *(void *)(v0 + 32);
      sub_1C032BE04(*(void *)(v0 + 64), v11, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      swift_unknownObjectRetain();
      double v10 = PuzzleStatisticValue.primaryValue.getter();
      unint64_t v12 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
    }
    else
    {
      uint64_t v11 = *(void *)(v0 + 48);
      sub_1C032BE04(*(void *)(v0 + 64), v11, type metadata accessor for PuzzleStatisticValue);
      swift_unknownObjectRetain();
      double v10 = PuzzleStatisticValue.primaryValue.getter();
      unint64_t v12 = type metadata accessor for PuzzleStatisticValue;
    }
    sub_1C032CA9C(v11, v12);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 64);
    swift_unknownObjectRetain();
    sub_1C032CA9C(v9, type metadata accessor for PuzzleStatisticCategory);
    double v10 = -1.0;
  }
  uint64_t result = sub_1C032CA9C(*(void *)(v0 + 88), (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v14((uint64_t)v10 > 0);
}

uint64_t sub_1C0322F48()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C0322F68, v0, 0);
}

uint64_t sub_1C0322F68()
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C15198DC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
  uint64_t v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F38C();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleStatsService: Will discard accumulated stats in next calculation", v4, 2u);
    MEMORY[0x1C18C9B00](v4, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 16);

  *(unsigned char *)(v5 + 312) = 1;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1C0323088(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  sub_1C032B7FC(0);
  v3[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C032311C, v2, 0);
}

uint64_t sub_1C032311C()
{
  v52 = v0;
  uint64_t v1 = *(void *)(v0[9] + 16);
  if (v1)
  {
    uint64_t v50 = v0 + 2;
    uint64_t v47 = (void *)v0[10];
    uint64_t v46 = v0[11];
    uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    os_log_type_t v3 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v45 = v0;
    while (1)
    {
      char v48 = v2;
      uint64_t v49 = v1;
      uint64_t v7 = v0[11];
      uint64_t v9 = *(v2 - 1);
      uint64_t v8 = *v2;
      uint64_t v10 = v47[35];
      uint64_t v11 = v47[36];
      __swift_project_boxed_opaque_existential_1(v47 + 32, v10);
      unint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      swift_bridgeObjectRetain();
      v12(v10, v11);
      uint64_t v13 = type metadata accessor for PuzzleStatsState();
      int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v7, 1, v13);
      uint64_t v15 = v0[11];
      if (v14 == 1)
      {
        sub_1C032CA9C(v0[11], (uint64_t (*)(void))sub_1C032B7FC);
        goto LABEL_24;
      }
      uint64_t v16 = *(void *)(v46 + 16);
      swift_bridgeObjectRetain();
      sub_1C032CA9C(v15, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
      if (!*(void *)(v16 + 16)) {
        goto LABEL_23;
      }
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_1BFEF2D8C(v9, v8);
      if ((v18 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
LABEL_24:
        sub_1C0153AC0();
        swift_allocError();
        *uint64_t v41 = 0;
        v41[1] = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        uint64_t v42 = (uint64_t (*)(void))v0[1];
        goto LABEL_27;
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v16 + 56) + 48 * v17);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v23 = v19[2];
      uint64_t v22 = v19[3];
      uint64_t v24 = v19[4];
      uint64_t v25 = v19[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v51[0] = v20;
      v51[1] = v21;
      v51[2] = v23;
      v51[3] = v22;
      v51[4] = v24;
      v51[5] = v25;
      sub_1C032B830(v51, v50);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v51[0] = (uint64_t)v3;
      unint64_t v28 = sub_1BFEF2D8C(v9, v8);
      uint64_t v29 = v3[2];
      BOOL v30 = (v27 & 1) == 0;
      uint64_t result = v29 + v30;
      if (__OFADD__(v29, v30))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return result;
      }
      char v32 = v27;
      if (v3[3] >= result)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v27 & 1) == 0) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t result = (uint64_t)sub_1C106E27C();
          os_log_type_t v3 = (void *)v51[0];
          if ((v32 & 1) == 0) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_1C1059AC0(result, isUniquelyReferenced_nonNull_native);
        os_log_type_t v3 = (void *)v51[0];
        uint64_t result = sub_1BFEF2D8C(v9, v8);
        if ((v32 & 1) != (v33 & 1))
        {
          return sub_1C1520CFC();
        }
        unint64_t v28 = result;
        if ((v32 & 1) == 0)
        {
LABEL_15:
          v3[(v28 >> 6) + 8] |= 1 << v28;
          uint64_t v34 = (uint64_t *)(v3[6] + 16 * v28);
          uint64_t *v34 = v9;
          v34[1] = v8;
          uint64_t v35 = (_OWORD *)(v3[7] + 48 * v28);
          long long v36 = *(_OWORD *)v50;
          long long v37 = *((_OWORD *)v50 + 2);
          v35[1] = *((_OWORD *)v50 + 1);
          v35[2] = v37;
          _OWORD *v35 = v36;
          uint64_t v38 = v3[2];
          BOOL v39 = __OFADD__(v38, 1);
          uint64_t v40 = v38 + 1;
          if (v39) {
            goto LABEL_34;
          }
          v3[2] = v40;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      uint64_t v4 = (_OWORD *)(v3[7] + 48 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v5 = *(_OWORD *)v50;
      long long v6 = *((_OWORD *)v50 + 2);
      v4[1] = *((_OWORD *)v50 + 1);
      v4[2] = v6;
      *uint64_t v4 = v5;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v48 + 2;
      uint64_t v1 = v49 - 1;
      uint64_t v0 = v45;
      if (v49 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  os_log_type_t v3 = (void *)MEMORY[0x1E4FBC868];
LABEL_26:
  uint64_t v43 = (void *)v0[8];
  sub_1BFD136E8(0, &qword_1EA199CA8);
  v43[3] = v44;
  v43[4] = sub_1C032BAB0();
  *uint64_t v43 = v3;
  swift_task_dealloc();
  uint64_t v42 = (uint64_t (*)(void))v0[1];
LABEL_27:
  return v42();
}

uint64_t sub_1C03235DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1C032B7FC(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3[35];
  uint64_t v11 = v3[36];
  __swift_project_boxed_opaque_existential_1(v3 + 32, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v12 = type metadata accessor for PuzzleStatsState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v9, 1, v12) == 1)
  {
    sub_1C032CA9C((uint64_t)v9, (uint64_t (*)(void))sub_1C032B7FC);
  }
  else
  {
    uint64_t v13 = *((void *)v9 + 2);
    swift_bridgeObjectRetain();
    sub_1C032CA9C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
    if (*(void *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1BFEF2D8C(a1, a2);
      if (v15)
      {
        uint64_t v16 = (uint64_t *)(*(void *)(v13 + 56) + 48 * v14);
        uint64_t v17 = v16[1];
        uint64_t v25 = *v16;
        uint64_t v18 = v16[2];
        uint64_t v19 = v16[3];
        uint64_t v21 = v16[4];
        uint64_t v20 = v16[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        *a3 = v25;
        a3[1] = v17;
        a3[2] = v18;
        a3[3] = v19;
        a3[4] = v21;
        a3[5] = v20;
        return result;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_1C0153AC0();
  swift_allocError();
  *uint64_t v23 = 0;
  v23[1] = 0;
  return swift_willThrow();
}

uint64_t sub_1C03237FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = v4;
  sub_1C032B7FC(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4[35];
  uint64_t v14 = v4[36];
  __swift_project_boxed_opaque_existential_1(v4 + 32, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  uint64_t v15 = type metadata accessor for PuzzleStatsState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v12, 1, v15) == 1)
  {
    sub_1C032CA9C((uint64_t)v12, (uint64_t (*)(void))sub_1C032B7FC);
    return 0;
  }
  uint64_t v16 = *((void *)v12 + 2);
  swift_bridgeObjectRetain();
  sub_1C032CA9C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  if (!*(void *)(v16 + 16))
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_1BFEF2D8C(a1, a2);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v64 = a4;
  uint64_t v67 = a1;
  uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 48 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v68 = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = v19;
  uint64_t v20 = sub_1C0318828(v19);
  uint64_t v63 = 0;
  uint64_t v21 = sub_1BFEF4060(v20);
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void *)(a3 + 16);
  uint64_t v65 = a3;
  if (v69)
  {
    uint64_t v70 = a3 + 32;
    v71 = v5 + 14;
    uint64_t v72 = v21 + 56;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = (uint64_t *)(v70 + 16 * v22);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      uint64_t v27 = v5[17];
      uint64_t v26 = v5[18];
      __swift_project_boxed_opaque_existential_1(v71, v27);
      uint64_t v28 = v21;
      uint64_t v29 = *(void *)(v26 + 8);
      BOOL v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 16);
      swift_bridgeObjectRetain();
      uint64_t v31 = v29;
      uint64_t v21 = v28;
      if ((v30(v25, v24, v27, v31) & 1) == 0)
      {
        if (*(void *)(v28 + 16))
        {
          sub_1C1520DBC();
          sub_1C151E77C();
          uint64_t v32 = sub_1C1520E0C();
          uint64_t v33 = -1 << *(unsigned char *)(v28 + 32);
          unint64_t v34 = v32 & ~v33;
          if ((*(void *)(v72 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
          {
            uint64_t v35 = *(void *)(v28 + 48);
            long long v36 = (void *)(v35 + 16 * v34);
            BOOL v37 = *v36 == v25 && v36[1] == v24;
            if (v37 || (sub_1C1520A9C() & 1) != 0)
            {
LABEL_23:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v42 = v67;
              unint64_t v41 = v68;
              if (qword_1EB8814A0 != -1) {
                swift_once();
              }
              uint64_t v43 = sub_1C15198DC();
              __swift_project_value_buffer(v43, (uint64_t)qword_1EB93C7A8);
              swift_bridgeObjectRetain_n();
              uint64_t v44 = sub_1C15198AC();
              os_log_type_t v45 = sub_1C151F38C();
              if (os_log_type_enabled(v44, v45))
              {
                uint64_t v46 = (uint8_t *)swift_slowAlloc();
                uint64_t v47 = swift_slowAlloc();
                v74[0] = v47;
                *(_DWORD *)uint64_t v46 = 136315138;
                swift_bridgeObjectRetain();
                uint64_t v73 = sub_1BFDA76EC(v42, v41, v74);
                sub_1C151FE1C();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1BFC31000, v44, v45, "PuzzleStatsService: resetting stats for puzzleType %s triggered by a cleared puzzle previously completed", v46, 0xCu);
                uint64_t v48 = 1;
                swift_arrayDestroy();
                MEMORY[0x1C18C9B00](v47, -1, -1);
                MEMORY[0x1C18C9B00](v46, -1, -1);

                swift_bridgeObjectRelease();
              }
              else
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                return 1;
              }
              return v48;
            }
            uint64_t v38 = ~v33;
            while (1)
            {
              unint64_t v34 = (v34 + 1) & v38;
              if (((*(void *)(v72 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
                break;
              }
              BOOL v39 = (void *)(v35 + 16 * v34);
              BOOL v40 = *v39 == v25 && v39[1] == v24;
              if (v40 || (sub_1C1520A9C() & 1) != 0) {
                goto LABEL_23;
              }
            }
          }
        }
      }
      ++v22;
      swift_bridgeObjectRelease();
      if (v22 == v69) {
        goto LABEL_32;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_32:
  uint64_t v50 = sub_1BFEF4060(v65);
  swift_bridgeObjectRelease();
  uint64_t v51 = v5[17];
  uint64_t v52 = v5[18];
  __swift_project_boxed_opaque_existential_1(v5 + 14, v51);
  uint64_t v54 = v67;
  unint64_t v53 = v68;
  uint64_t v55 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v67, v68, v64, v51, v52);
  swift_retain();
  uint64_t v56 = sub_1C032B544(v55, v50, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v57 = sub_1BFEF4060(v56);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = sub_1BFEFAE14(v21, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v55) {
    goto LABEL_28;
  }
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_1C15198DC();
  __swift_project_value_buffer(v58, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  v59 = sub_1C15198AC();
  os_log_type_t v60 = sub_1C151F38C();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    v74[0] = v62;
    *(_DWORD *)v61 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1BFDA76EC(v54, v53, v74);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v59, v60, "PuzzleStatsService: resetting stats for puzzleType %s triggered by a difference between the cached and history list of completed puzzles", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v62, -1, -1);
    MEMORY[0x1C18C9B00](v61, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1C0323F9C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 297) = a2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v2;
  sub_1BFF97C40();
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PuzzleStatsProcessingData();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  *(void *)(v3 + 240) = swift_task_alloc();
  *(void *)(v3 + 248) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C03240E8, v2, 0);
}

uint64_t sub_1C03240E8()
{
  v85 = v0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[14] = MEMORY[0x1E4FBC860];
  v0[18] = v1;
  uint64_t v72 = v0 + 18;
  v79 = v0 + 14;
  uint64_t v2 = *(void *)(v0[19] + 16);
  if (v2)
  {
    uint64_t v74 = v0[24];
    uint64_t v75 = v0[29];
    uint64_t v73 = v0[23];
    v80 = (void *)v0[20];
    uint64_t v3 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v7 = *(v3 - 1);
      uint64_t v6 = *v3;
      uint64_t v9 = v80[17];
      uint64_t v8 = v80[18];
      __swift_project_boxed_opaque_existential_1(v80 + 14, v9);
      uint64_t v10 = *(void *)(v8 + 8);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      uint64_t v12 = (void *)v11(v7, v6, v9, v10);
      if (!v12) {
        goto LABEL_11;
      }
      id v13 = v12;
      id v14 = objc_msgSend(v13, sel_difficulty);
      if (!v14) {
        break;
      }
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_longLongValue);

      id v17 = objc_msgSend(v13, sel_behaviorFlags);
      if (!v17) {
        break;
      }
      char v18 = v17;
      v76 = (uint64_t *)v83[29];
      unsigned __int8 v78 = objc_msgSend(v17, sel_unsignedIntegerValue);

      id v19 = objc_msgSend(v13, sel_puzzleID);
      uint64_t v20 = sub_1C151E62C();
      id v21 = v16;
      uint64_t v23 = v22;

      uint64_t *v76 = v20;
      *(void *)(v75 + 8) = v23;
      *(void *)(v75 + 16) = v21;
      id v24 = objc_msgSend(v13, sel_publishDate);
      uint64_t v25 = v83[22];
      if (v24)
      {
        uint64_t v26 = v24;
        sub_1C15162BC();

        uint64_t v27 = sub_1C151631C();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 0, 1, v27);
      }
      else
      {

        uint64_t v30 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v25, 1, 1, v30);
      }
      uint64_t v32 = v83[30];
      uint64_t v31 = v83[31];
      uint64_t v33 = v83[29];
      uint64_t v77 = v83[28];
      sub_1C032BE04(v83[22], v33 + *(int *)(v73 + 24), (uint64_t (*)(void))sub_1BFF97C40);
      *(unsigned char *)(v33 + *(int *)(v73 + 28)) = (v78 & 2) != 0;
      sub_1C032BE04(v33, v32, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      sub_1C032BE04(v32, v31, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      sub_1C032BE6C(v31, v77, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      unint64_t v34 = v83[18];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v34 = sub_1C0EE431C(0, *(void *)(v34 + 16) + 1, 1, v34);
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1) {
        unint64_t v34 = sub_1C0EE431C(v35 > 1, v36 + 1, 1, v34);
      }
      uint64_t v37 = v83[31];
      uint64_t v38 = v83[28];
      *(void *)(v34 + 16) = v36 + 1;
      sub_1C032BE04(v38, v34+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v36, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);

      v83[18] = v34;
      sub_1C032CA9C(v37, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      swift_bridgeObjectRelease();
LABEL_4:
      v3 += 2;
      if (!--v2)
      {
        uint64_t v0 = v83;
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }

LABEL_11:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
    }
    unint64_t v29 = v4[2];
    unint64_t v28 = v4[3];
    if (v29 >= v28 >> 1) {
      uint64_t v4 = sub_1BFEF9B68((void *)(v28 > 1), v29 + 1, 1, v4);
    }
    v4[2] = v29 + 1;
    long long v5 = &v4[2 * v29];
    v5[4] = v7;
    v5[5] = v6;
    swift_bridgeObjectRelease();
    void *v79 = v4;
    goto LABEL_4;
  }
LABEL_22:
  if (*((unsigned char *)v0 + 297))
  {
    uint64_t v39 = *v72;
    int64_t v40 = *(void *)(*v72 + 16);
    if (v40)
    {
      uint64_t v81 = v0[27];
      uint64_t v41 = v0[24];
      uint64_t v84 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1BFF661B8(0, v40, 0);
      uint64_t v42 = v39 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      uint64_t v43 = *(void *)(v41 + 72);
      uint64_t v44 = v84;
      do
      {
        os_log_type_t v45 = (uint64_t *)v0[27];
        sub_1C032BE6C(v42, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v46 = *v45;
        uint64_t v47 = *(void *)(v81 + 8);
        swift_bridgeObjectRetain();
        sub_1C032CA9C((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFF661B8(0, *(void *)(v44 + 16) + 1, 1);
          uint64_t v44 = v84;
        }
        unint64_t v49 = *(void *)(v44 + 16);
        unint64_t v48 = *(void *)(v44 + 24);
        if (v49 >= v48 >> 1)
        {
          sub_1BFF661B8(v48 > 1, v49 + 1, 1);
          uint64_t v44 = v84;
        }
        *(void *)(v44 + 16) = v49 + 1;
        uint64_t v50 = v44 + 16 * v49;
        *(void *)(v50 + 32) = v46;
        *(void *)(v50 + 40) = v47;
        v42 += v43;
        --v40;
        uint64_t v0 = v83;
      }
      while (v40);
      swift_bridgeObjectRelease();
    }
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_1C15198DC();
    __swift_project_value_buffer(v51, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1C15198AC();
    os_log_type_t v53 = sub_1C151F38C();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v84 = v55;
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v56 = swift_bridgeObjectRetain();
      uint64_t v57 = MEMORY[0x1C18C6710](v56, MEMORY[0x1E4FBB1A0]);
      unint64_t v59 = v58;
      swift_bridgeObjectRelease();
      v79[3] = sub_1BFDA76EC(v57, v59, &v84);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v54 + 12) = 2080;
      swift_beginAccess();
      uint64_t v60 = swift_bridgeObjectRetain();
      uint64_t v61 = MEMORY[0x1C18C6710](v60, MEMORY[0x1E4FBB1A0]);
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      v79[2] = sub_1BFDA76EC(v61, v63, &v84);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v52, v53, "PuzzleStatsService: puzzleStatsData using existing items: %s, fetching items: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v55, -1, -1);
      uint64_t v0 = v83;
      MEMORY[0x1C18C9B00](v54, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  swift_beginAccess();
  uint64_t v64 = v0[14];
  v0[32] = v64;
  if (*(void *)(v64 + 16))
  {
    uint64_t v65 = (void *)v0[20];
    uint64_t v66 = v65[23];
    uint64_t v67 = v65[24];
    __swift_project_boxed_opaque_existential_1(v65 + 20, v66);
    v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 + 48) + **(int **)(v67 + 48));
    swift_bridgeObjectRetain();
    unint64_t v68 = (void *)swift_task_alloc();
    v0[33] = v68;
    *unint64_t v68 = v0;
    v68[1] = sub_1C0324A58;
    return v82(v64, v66, v67);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v70 = v0[18];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v71 = (uint64_t (*)(uint64_t))v0[1];
    return v71(v70);
  }
}

uint64_t sub_1C0324A58(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  long long v5 = (void *)*v2;
  v4[34] = a1;
  v4[35] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[20];
    uint64_t v7 = sub_1C032508C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (void *)swift_task_alloc();
    v4[36] = v8;
    void *v8 = v5;
    v8[1] = sub_1C0324BD4;
    uint64_t v6 = v4[20];
    v8[7] = a1;
    v8[8] = v6;
    uint64_t v7 = sub_1C032552C;
  }
  return MEMORY[0x1F4188298](v7, v6, 0);
}

uint64_t sub_1C0324BD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0324CE4, v1, 0);
}

uint64_t sub_1C0324CE4()
{
  unint64_t v1 = v0[34];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v31 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F7050(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[23];
  unint64_t v28 = v1 & 0xC000000000000001;
  uint64_t v29 = v0[25];
  uint64_t v27 = v0[34] + 32;
  uint64_t v7 = v31;
  uint64_t v30 = v2;
  do
  {
    if (v28)
    {
      uint64_t v8 = (void *)MEMORY[0x1C18C7CB0](v4, v0[34]);
    }
    else
    {
      uint64_t v8 = *(void **)(v27 + 8 * v4);
      swift_unknownObjectRetain();
    }
    uint64_t v9 = (uint64_t *)v0[25];
    id v10 = objc_msgSend(v8, sel_identifier, v27);
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;

    *uint64_t v9 = v11;
    *(void *)(v29 + 8) = v13;
    *(void *)(v29 + 16) = objc_msgSend(v8, sel_difficulty);
    id v14 = objc_msgSend(v8, sel_publishDate);
    uint64_t v15 = v0[21];
    if (v14)
    {
      id v16 = v14;
      sub_1C15162BC();

      uint64_t v17 = sub_1C151631C();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 0, 1, v17);
    }
    else
    {
      uint64_t v18 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    }
    uint64_t v20 = v0[25];
    uint64_t v19 = v0[26];
    sub_1C032BE04(v0[21], v20 + *(int *)(v6 + 24), (uint64_t (*)(void))sub_1BFF97C40);
    unsigned __int8 v21 = objc_msgSend(v8, sel_ignoreFromStatsAndStreaks);
    swift_unknownObjectRelease();
    *(unsigned char *)(v20 + *(int *)(v6 + 28)) = v21;
    sub_1C032BE04(v20, v19, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
    unint64_t v23 = *(void *)(v31 + 16);
    unint64_t v22 = *(void *)(v31 + 24);
    if (v23 >= v22 >> 1) {
      sub_1C05F7050(v22 > 1, v23 + 1, 1);
    }
    uint64_t v24 = v0[26];
    ++v4;
    *(void *)(v31 + 16) = v23 + 1;
    sub_1C032BE04(v24, v31+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v23, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
  }
  while (v30 != v4);
  swift_bridgeObjectRelease();
LABEL_17:
  sub_1C104851C(v7);
  swift_bridgeObjectRelease();
  uint64_t v25 = v0[18];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(uint64_t))v0[1];
  return v26(v25);
}

uint64_t sub_1C032508C()
{
  uint64_t v29 = v0;
  unint64_t v1 = *(void **)(v0 + 280);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = (id *)(v0 + 88);
  id v3 = v1;
  sub_1C017F734();
  if ((swift_dynamicCast() & 1) != 0 && *(unsigned char *)(v0 + 296) == 5)
  {

    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C15198DC();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB93C7A8);
    uint64_t v5 = sub_1C15198AC();
    os_log_type_t v6 = sub_1C151F38C();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = v27;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x1C18C6710](v8, MEMORY[0x1E4FBB1A0]);
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 96) = sub_1BFDA76EC(v9, v11, &v28);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v5, v6, "PuzzleStatsService: Skipped deprecated puzzles [%s]", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v27, -1, -1);
      MEMORY[0x1C18C9B00](v7, -1, -1);
    }
  }
  else
  {

    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void **)(v0 + 280);
    uint64_t v13 = sub_1C15198DC();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB93C7A8);
    id v14 = v12;
    id v15 = v12;
    id v16 = sub_1C15198AC();
    os_log_type_t v17 = sub_1C151F38C();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void **)(v0 + 280);
    if (v18)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v28 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_getErrorValue();
      uint64_t v22 = sub_1C1520D3C();
      *(void *)(v0 + 120) = sub_1BFDA76EC(v22, v23, &v28);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BFC31000, v16, v17, "PuzzleStatsService: Error fetching puzzles [%s]", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v21, -1, -1);
      MEMORY[0x1C18C9B00](v20, -1, -1);
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v25(v24);
}

uint64_t sub_1C032550C(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1C032552C, v1, 0);
}

uint64_t sub_1C032552C()
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  unint64_t v3 = sub_1C15198AC();
  os_log_type_t v4 = sub_1C151F38C();
  BOOL v5 = os_log_type_enabled((os_log_t)v3, v4);
  uint64_t v6 = v0[7];
  if (!v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  uint64_t v1 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v1 = 134217984;
  if ((unint64_t)v6 >> 62) {
    goto LABEL_22;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v0[2] = v7;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, (os_log_t)v3, v4, "PuzzleStatsService: adding puzzle info to %ld history items", v1, 0xCu);
    MEMORY[0x1C18C9B00](v1, -1, -1);
LABEL_8:

    v0[9] = v6;
    unint64_t v3 = v0[7];
    sub_1BFC66384(v0[8] + 112, (uint64_t)(v0 + 2));
    if (v3 >> 62) {
      break;
    }
    uint64_t v6 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[10] = v6;
    if (!v6) {
      goto LABEL_18;
    }
LABEL_10:
    v0[11] = sub_1C151EE6C();
    if (v6 >= 1)
    {
      uint64_t v8 = v0[7];
      v0[12] = 0;
      if ((v0[9] & 0xC000000000000001) != 0) {
        uint64_t v9 = MEMORY[0x1C18C7CB0](0, v8);
      }
      else {
        uint64_t v9 = swift_unknownObjectRetain();
      }
      v0[13] = v9;
      return MEMORY[0x1F4188298](sub_1C03257E0, 0, 0);
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C15204BC();
  v0[10] = v6;
  if (v6) {
    goto LABEL_10;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C03257E0()
{
  *(void *)(v0 + 112) = sub_1C151EE5C();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C032586C, v2, v1);
}

uint64_t sub_1C032586C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[8];
  swift_release();
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 96))(v1, v3, v4);
  return MEMORY[0x1F4188298](sub_1C0325920, v2, 0);
}

uint64_t sub_1C0325920()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[10];
  swift_unknownObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    ++v0[12];
    if ((v0[9] & 0xC000000000000001) != 0) {
      uint64_t v5 = MEMORY[0x1C18C7CB0]();
    }
    else {
      uint64_t v5 = swift_unknownObjectRetain();
    }
    v0[13] = v5;
    return MEMORY[0x1F4188298](sub_1C03257E0, 0, 0);
  }
}

uint64_t sub_1C0325A10(void *a1)
{
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  sub_1C03235DC(v4, v6, &v21);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    swift_bridgeObjectRelease();
    int64_t v7 = 0;
    uint64_t v1 = 0;
    uint64_t result = v21;
    uint64_t v9 = v21 + 64;
    uint64_t v10 = 1 << *(unsigned char *)(v21 + 32);
    uint64_t v11 = -1;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    unint64_t v12 = v11 & *(void *)(v21 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    do
    {
      if (v12)
      {
        unint64_t v14 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v15 = v14 | (v7 << 6);
      }
      else
      {
        int64_t v18 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_30;
        }
        if (v18 >= v13)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v1;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v18);
        ++v7;
        if (!v19)
        {
          int64_t v7 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_27;
          }
          unint64_t v19 = *(void *)(v9 + 8 * v7);
          if (!v19)
          {
            int64_t v7 = v18 + 2;
            if (v18 + 2 >= v13) {
              goto LABEL_27;
            }
            unint64_t v19 = *(void *)(v9 + 8 * v7);
            if (!v19)
            {
              int64_t v7 = v18 + 3;
              if (v18 + 3 >= v13) {
                goto LABEL_27;
              }
              unint64_t v19 = *(void *)(v9 + 8 * v7);
              if (!v19)
              {
                int64_t v7 = v18 + 4;
                if (v18 + 4 >= v13) {
                  goto LABEL_27;
                }
                unint64_t v19 = *(void *)(v9 + 8 * v7);
                if (!v19)
                {
                  int64_t v20 = v18 + 5;
                  if (v20 >= v13) {
                    goto LABEL_27;
                  }
                  unint64_t v19 = *(void *)(v9 + 8 * v20);
                  if (!v19)
                  {
                    while (1)
                    {
                      int64_t v7 = v20 + 1;
                      if (__OFADD__(v20, 1)) {
                        goto LABEL_31;
                      }
                      if (v7 >= v13) {
                        goto LABEL_27;
                      }
                      unint64_t v19 = *(void *)(v9 + 8 * v7);
                      ++v20;
                      if (v19) {
                        goto LABEL_26;
                      }
                    }
                  }
                  int64_t v7 = v20;
                }
              }
            }
          }
        }
LABEL_26:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v15 = __clz(__rbit64(v19)) + (v7 << 6);
      }
      uint64_t v16 = *(void *)(*(void *)(*(void *)(v21 + 56) + 8 * v15) + 16);
      BOOL v17 = __OFADD__(v1, v16);
      v1 += v16;
    }
    while (!v17);
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0325C14(void *a1)
{
  id v2 = objc_msgSend(a1, sel_identifier);
  uint64_t v3 = sub_1C151E62C();
  uint64_t v5 = v4;

  sub_1C03235DC(v3, v5, &v34);
  if (v1)
  {
    *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
    return result;
  }
  swift_bridgeObjectRelease();
  int64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t result = v35;
  uint64_t v9 = v34 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v34 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v7 << 6);
      goto LABEL_7;
    }
    int64_t v18 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_57;
    }
    if (v18 >= v13) {
      break;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v18);
    ++v7;
    if (!v19)
    {
      int64_t v7 = v18 + 1;
      if (v18 + 1 >= v13) {
        break;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v7);
      if (!v19)
      {
        int64_t v7 = v18 + 2;
        if (v18 + 2 >= v13) {
          break;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v7);
        if (!v19)
        {
          int64_t v7 = v18 + 3;
          if (v18 + 3 >= v13) {
            break;
          }
          unint64_t v19 = *(void *)(v9 + 8 * v7);
          if (!v19)
          {
            int64_t v7 = v18 + 4;
            if (v18 + 4 >= v13) {
              break;
            }
            unint64_t v19 = *(void *)(v9 + 8 * v7);
            if (!v19)
            {
              int64_t v20 = v18 + 5;
              if (v20 >= v13) {
                break;
              }
              unint64_t v19 = *(void *)(v9 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  int64_t v7 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_59;
                  }
                  if (v7 >= v13) {
                    goto LABEL_27;
                  }
                  unint64_t v19 = *(void *)(v9 + 8 * v7);
                  ++v20;
                  if (v19) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v7 = v20;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v7 << 6);
LABEL_7:
    uint64_t v16 = *(void *)(*(void *)(*(void *)(v34 + 56) + 8 * v15) + 16);
    BOOL v17 = __OFADD__(v8, v16);
    v8 += v16;
    if (v17)
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
  }
LABEL_27:
  int64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = v35 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(v35 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & *(void *)(v35 + 64);
  int64_t v27 = (unint64_t)(v24 + 63) >> 6;
  while (v26)
  {
    unint64_t v28 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    unint64_t v29 = v28 | (v21 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(*(void *)(v35 + 56) + 8 * v29) + 16);
    BOOL v17 = __OFADD__(v22, v30);
    v22 += v30;
    if (v17) {
      goto LABEL_56;
    }
  }
  int64_t v31 = v21 + 1;
  if (__OFADD__(v21, 1)) {
    goto LABEL_58;
  }
  if (v31 >= v27)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22 < 1) {
      *(double *)&uint64_t result = 0.0;
    }
    else {
      *(double *)&uint64_t result = (double)v8 / (double)v22;
    }
    return result;
  }
  unint64_t v32 = *(void *)(v23 + 8 * v31);
  ++v21;
  if (v32) {
    goto LABEL_50;
  }
  int64_t v21 = v31 + 1;
  if (v31 + 1 >= v27) {
    goto LABEL_51;
  }
  unint64_t v32 = *(void *)(v23 + 8 * v21);
  if (v32) {
    goto LABEL_50;
  }
  int64_t v21 = v31 + 2;
  if (v31 + 2 >= v27) {
    goto LABEL_51;
  }
  unint64_t v32 = *(void *)(v23 + 8 * v21);
  if (v32) {
    goto LABEL_50;
  }
  int64_t v21 = v31 + 3;
  if (v31 + 3 >= v27) {
    goto LABEL_51;
  }
  unint64_t v32 = *(void *)(v23 + 8 * v21);
  if (v32) {
    goto LABEL_50;
  }
  int64_t v21 = v31 + 4;
  if (v31 + 4 >= v27) {
    goto LABEL_51;
  }
  unint64_t v32 = *(void *)(v23 + 8 * v21);
  if (v32)
  {
LABEL_50:
    unint64_t v26 = (v32 - 1) & v32;
    unint64_t v29 = __clz(__rbit64(v32)) + (v21 << 6);
    goto LABEL_31;
  }
  int64_t v33 = v31 + 5;
  if (v33 >= v27) {
    goto LABEL_51;
  }
  unint64_t v32 = *(void *)(v23 + 8 * v33);
  if (v32)
  {
    int64_t v21 = v33;
    goto LABEL_50;
  }
  while (1)
  {
    int64_t v21 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v21 >= v27) {
      goto LABEL_51;
    }
    unint64_t v32 = *(void *)(v23 + 8 * v21);
    ++v33;
    if (v32) {
      goto LABEL_50;
    }
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_1C0325F6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  sub_1C032BB9C(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for PuzzleStreak();
  uint64_t v49 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = MEMORY[0x1F4188790](v12).n128_u64[0];
  unint64_t v15 = (char *)&v37 - v14;
  id v16 = objc_msgSend(a1, sel_identifier, v13);
  uint64_t v17 = sub_1C151E62C();
  uint64_t v19 = v18;

  uint64_t v20 = v48;
  sub_1C03235DC(v17, v19, v51);
  if (v20) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v47 = v15;
  uint64_t v48 = v9;
  swift_bridgeObjectRelease();
  uint64_t v42 = v51[1];
  uint64_t v43 = v51[0];
  uint64_t v40 = v51[3];
  uint64_t v41 = v51[2];
  uint64_t v39 = v51[4];
  uint64_t v21 = *(void *)(v52 + 16);
  if (!v21)
  {
    uint64_t v28 = v48;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
    uint64_t v23 = (uint64_t)v8;
    v24(v8, 1, 1, v48);
    uint64_t v27 = v50;
    goto LABEL_6;
  }
  uint64_t v37 = 0;
  uint64_t v38 = v52;
  uint64_t v22 = (void *)v49;
  uint64_t v45 = v52 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
  uint64_t v23 = (uint64_t)v8;
  sub_1C032BE6C(v45, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  uint64_t v24 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v22[7];
  uint64_t v25 = v48;
  v24(v8, 0, 1, v48);
  uint64_t v44 = (uint64_t (*)(char *, uint64_t, uint64_t))v22[6];
  int v26 = v44(v8, 1, v25);
  uint64_t v27 = v50;
  if (v26 == 1)
  {
    uint64_t v28 = v48;
LABEL_6:
    swift_bridgeObjectRetain();
    sub_1C032CA9C(v23, (uint64_t (*)(void))sub_1C032BB9C);
    v24((char *)v27, 1, 1, v28);
LABEL_10:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v46 = v24;
  sub_1C032BE04((uint64_t)v8, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  uint64_t v29 = v38;
  uint64_t result = swift_bridgeObjectRetain();
  if (v21 == 1)
  {
LABEL_8:
    v46(v5, 1, 1, v48);
LABEL_9:
    sub_1C032CA9C((uint64_t)v5, (uint64_t (*)(void))sub_1C032BB9C);
    sub_1C032BE04((uint64_t)v47, v27, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    v46((char *)v27, 0, 1, v48);
    goto LABEL_10;
  }
  unint64_t v31 = 1;
  while (v31 < *(void *)(v29 + 16))
  {
    sub_1C032BE6C(v45 + v22[9] * v31, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    uint64_t v32 = v48;
    v46(v5, 0, 1, v48);
    if (v44(v5, 1, v32) == 1) {
      goto LABEL_9;
    }
    sub_1C032BE04((uint64_t)v5, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    uint64_t v33 = (uint64_t)v47;
    sub_1C151554C();
    double v35 = v34;
    sub_1C151554C();
    if (v35 >= v36)
    {
      uint64_t result = sub_1C032CA9C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    }
    else
    {
      sub_1C032CA9C(v33, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t result = sub_1C032BE04((uint64_t)v11, v33, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    }
    uint64_t v22 = (void *)v49;
    uint64_t v27 = v50;
    if (v21 == ++v31) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0326494(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_1C151631C();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  uint64_t v5 = sub_1C151661C();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v6 = sub_1C151586C();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  v3[16] = swift_task_alloc();
  sub_1C032BB9C(0);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PuzzleStreak();
  v3[19] = v7;
  v3[20] = *(void *)(v7 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C03266E0, v2, 0);
}

uint64_t sub_1C03266E0()
{
  uint64_t v55 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_identifier);
  uint64_t v2 = sub_1C151E62C();
  uint64_t v4 = v3;

  sub_1C03235DC(v2, v4, v53);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v54 + 16);
  uint64_t v6 = *(void *)(v0 + 160);
  if (v5)
  {
    uint64_t v7 = v54 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v40 = *(void *)(v6 + 72);
    uint64_t v8 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v9 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    unsigned int v44 = *MEMORY[0x1E4F27C10];
    uint64_t v42 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 96) + 8);
    uint64_t v43 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 48) + 8);
    uint64_t v41 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 120) + 8);
    swift_bridgeObjectRetain();
    uint64_t v45 = v9;
    uint64_t v46 = v8;
    while (1)
    {
      uint64_t v12 = *(void *)(v0 + 152);
      uint64_t v13 = *(void *)(v0 + 136);
      sub_1C032BE6C(v7, v13, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v47 = *v46;
      (*v46)(v13, 0, 1, v12);
      uint64_t v14 = *v45;
      if ((*v45)(v13, 1, v12) == 1) {
        break;
      }
      uint64_t v39 = v14;
      uint64_t v51 = v7;
      uint64_t v52 = v5;
      uint64_t v49 = *(void *)(v0 + 104);
      uint64_t v15 = *(void *)(v0 + 80);
      uint64_t v50 = *(void *)(v0 + 88);
      uint64_t v16 = *(void *)(v0 + 64);
      uint64_t v48 = *(void *)(v0 + 72);
      uint64_t v17 = *(void *)(v0 + 56);
      uint64_t v18 = *(void *)(v0 + 40);
      sub_1C032BE04(*(void *)(v0 + 136), *(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      sub_1C15165BC();
      sub_1BFF97CF0(0, (unint64_t *)&qword_1EB87A578, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
      uint64_t v19 = sub_1C15165FC();
      uint64_t v20 = *(void *)(v19 - 8);
      unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
      (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, v44, v19);
      sub_1C00B78C4(v22);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_1C15154FC();
      sub_1C15162DC();
      uint64_t v23 = *v43;
      (*v43)(v15, v18);
      sub_1C15162CC();
      sub_1C15162DC();
      v23(v16, v18);
      sub_1C151651C();
      swift_bridgeObjectRelease();
      v23(v17, v18);
      v23(v48, v18);
      (*v42)(v49, v50);
      uint64_t v24 = sub_1C15157DC();
      char v26 = v25;
      uint64_t v27 = *(void *)(v0 + 128);
      uint64_t v28 = *(void *)(v0 + 112);
      if (v26)
      {
        (*v41)(v27, v28);
        uint64_t v11 = v51;
        uint64_t v10 = v52;
      }
      else
      {
        (*v41)(v27, v28);
        uint64_t v11 = v51;
        uint64_t v10 = v52;
        if (v24 <= 24)
        {
          uint64_t v29 = *(void *)(v0 + 144);
          uint64_t v30 = *(void *)(v0 + 152);
          sub_1C032BE04(*(void *)(v0 + 168), v29, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          unint64_t v31 = v47;
          v47(v29, 0, 1, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v32 = v39;
          goto LABEL_13;
        }
      }
      sub_1C032CA9C(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v7 = v11 + v40;
      uint64_t v5 = v10 - 1;
      if (!v5) {
        goto LABEL_10;
      }
    }
    unint64_t v31 = v47;
  }
  else
  {
    uint64_t v47 = *(void (**)(void, uint64_t, uint64_t, void))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_10:
    unint64_t v31 = v47;
    v47(*(void *)(v0 + 136), 1, 1, *(void *)(v0 + 152));
  }
  uint64_t v33 = *(void *)(v0 + 160);
  v31(*(void *)(v0 + 144), 1, 1, *(void *)(v0 + 152));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, void))(v33 + 48);
LABEL_13:
  *(void *)(v0 + 184) = v31;
  uint64_t v34 = *(void *)(v0 + 144);
  if (v32(v34, 1, *(void *)(v0 + 152)) == 1)
  {
    sub_1C032CA9C(v34, (uint64_t (*)(void))sub_1C032BB9C);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 184))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v35 = *(uint64_t (**)(void))(v0 + 8);
    return v35();
  }
  else
  {
    sub_1C032BE04(v34, *(void *)(v0 + 176), (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    uint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v37;
    *uint64_t v37 = v0;
    v37[1] = sub_1C0326E74;
    uint64_t v38 = *(void *)(v0 + 32);
    v37[2] = *(void *)(v0 + 24);
    v37[3] = v38;
    return MEMORY[0x1F4188298](sub_1C03270FC, v38, 0);
  }
}

uint64_t sub_1C0326E74(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  *(unsigned char *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0326F8C, v2, 0);
}

uint64_t sub_1C0326F8C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  if (*(unsigned char *)(v0 + 200))
  {
    sub_1C032CA9C(v1, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    uint64_t v2 = 1;
  }
  else
  {
    sub_1C032BE04(v1, *(void *)(v0 + 16), (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    uint64_t v2 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 184))(*(void *)(v0 + 16), v2, 1, *(void *)(v0 + 152));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C03270DC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C03270FC, v1, 0);
}

uint64_t sub_1C03270FC()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[23];
  uint64_t v3 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 152) + **(int **)(v3 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C0327208;
  uint64_t v5 = v0[2];
  return v7(v5, v2, v3);
}

uint64_t sub_1C0327208(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = a1;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(0);
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 24);
    return MEMORY[0x1F4188298](sub_1C032735C, v7, 0);
  }
}

uint64_t sub_1C032735C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[3];
    uint64_t v4 = v2 - 1;
    uint64_t v5 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v6 = v4;
      uint64_t v8 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v9 = *(void *)(v3 + 136);
      uint64_t v10 = *(void *)(v3 + 144);
      __swift_project_boxed_opaque_existential_1(v25, v9);
      uint64_t v11 = *(void *)(v10 + 8);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)v12(v8, v7, v9, v11);
      uint64_t v14 = v13;
      if (v13 && (id v15 = objc_msgSend(v13, sel_usedReveal)) != 0)
      {
        uint64_t v16 = v15;
        unsigned __int8 v17 = objc_msgSend(v15, sel_BOOLValue);
      }
      else
      {
        unsigned __int8 v17 = 0;
      }
      uint64_t v19 = *(void *)(v3 + 136);
      uint64_t v18 = *(void *)(v3 + 144);
      __swift_project_boxed_opaque_existential_1(v25, v19);
      unsigned __int8 v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8) + 32))(v8, v7, v19);

      swift_bridgeObjectRelease();
      if ((v20 | v17 ^ 1)) {
        break;
      }
      uint64_t v4 = v6 - 1;
      v5 += 2;
    }
    while (v6);
    char v21 = (v20 | v17 ^ 1) ^ 1;
    uint64_t v0 = v24;
  }
  else
  {
    char v21 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22(v21 & 1);
}

uint64_t sub_1C0327500@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  sub_1C03235DC(v5, v7, &v25);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v26;
  uint64_t v10 = *(void *)(v26 + 16);
  uint64_t v27 = v25;
  if (v10)
  {
    uint64_t v11 = sub_1C107A920(10);
    if (v12) {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v24 = v13;
    char v19 = v12 ^ 1;
    uint64_t v20 = sub_1C107A920(20);
    if (v21) {
      uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
    }
    else {
      uint64_t v15 = 0;
    }
    char v18 = v21 ^ 1;
    uint64_t v22 = sub_1C107A920(30);
    if (v23)
    {
      char v17 = 0;
      uint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * v22);
    }
    else
    {
      uint64_t v14 = 0;
      char v17 = 1;
    }
    uint64_t v16 = v24;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 1;
    char v18 = 1;
    char v19 = 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v16;
  *(unsigned char *)(a2 + 8) = v19 & 1;
  *(void *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 24) = v18 & 1;
  *(void *)(a2 + 32) = v14;
  *(unsigned char *)(a2 + 40) = v17;
  return result;
}

uint64_t sub_1C03276A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  sub_1C03235DC(v5, v7, &v25);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v26;
  uint64_t v10 = *(void *)(v26 + 16);
  uint64_t v27 = v25;
  if (v10)
  {
    uint64_t v11 = sub_1C107A920(10);
    if (v12) {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v24 = v13;
    char v19 = v12 ^ 1;
    uint64_t v20 = sub_1C107A920(20);
    if (v21) {
      uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
    }
    else {
      uint64_t v15 = 0;
    }
    char v18 = v21 ^ 1;
    uint64_t v22 = sub_1C107A920(30);
    if (v23)
    {
      char v17 = 0;
      uint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * v22);
    }
    else
    {
      uint64_t v14 = 0;
      char v17 = 1;
    }
    uint64_t v16 = v24;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 1;
    char v18 = 1;
    char v19 = 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v16;
  *(unsigned char *)(a2 + 8) = v19 & 1;
  *(void *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 24) = v18 & 1;
  *(void *)(a2 + 32) = v14;
  *(unsigned char *)(a2 + 40) = v17;
  return result;
}

uint64_t sub_1C0327848@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  sub_1C03235DC(v5, v7, &v25);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v26;
  uint64_t v10 = *(void *)(v26 + 16);
  uint64_t v27 = v25;
  if (v10)
  {
    uint64_t v11 = sub_1C107A920(10);
    if (v12) {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v24 = v13;
    char v19 = v12 ^ 1;
    uint64_t v20 = sub_1C107A920(20);
    if (v21) {
      uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
    }
    else {
      uint64_t v15 = 0;
    }
    char v18 = v21 ^ 1;
    uint64_t v22 = sub_1C107A920(30);
    if (v23)
    {
      char v17 = 0;
      uint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * v22);
    }
    else
    {
      uint64_t v14 = 0;
      char v17 = 1;
    }
    uint64_t v16 = v24;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 1;
    char v18 = 1;
    char v19 = 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v16;
  *(unsigned char *)(a2 + 8) = v19 & 1;
  *(void *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 24) = v18 & 1;
  *(void *)(a2 + 32) = v14;
  *(unsigned char *)(a2 + 40) = v17;
  return result;
}

uint64_t sub_1C03279EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 197) = a4;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  sub_1C032BC04(0);
  *(void *)(v6 + 56) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PuzzleLeaderboardResult();
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = *(void *)(v7 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  *(void *)(v6 + 88) = v8;
  *(void *)(v6 + 96) = *(void *)(v8 - 8);
  *(void *)(v6 + 104) = swift_task_alloc();
  sub_1C032BC38(0);
  *(void *)(v6 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for PuzzleLeaderboardEntry();
  *(void *)(v6 + 120) = v9;
  *(void *)(v6 + 128) = *(void *)(v9 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  *(void *)(v6 + 144) = swift_task_alloc();
  *(void *)(v6 + 152) = swift_task_alloc();
  *(void *)(v6 + 160) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0327BF0, v5, 0);
}

void sub_1C0327BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v77 = v10;
  uint64_t v11 = *(void *)(v10 + 120);
  uint64_t v12 = *(void *)(v10 + 128);
  uint64_t v13 = *(void *)(v10 + 112);
  sub_1C032BE6C(*(void *)(v10 + 40), v13, (uint64_t (*)(void))sub_1C032BC38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) == 1)
  {
    uint64_t v14 = *(void *)(v10 + 88);
    uint64_t v15 = *(void *)(v10 + 96);
    uint64_t v16 = *(void *)(v10 + 16);
    sub_1C032CA9C(*(void *)(v10 + 112), (uint64_t (*)(void))sub_1C032BC38);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v16, 1, 1, v14);
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v57 = *(void (**)(void))(v10 + 8);
    v57();
    return;
  }
  uint64_t v17 = *(void *)(v10 + 64);
  uint64_t v18 = *(void *)(v10 + 40);
  sub_1C032BE04(*(void *)(v10 + 112), *(void *)(v10 + 160), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  v76 = *(void **)(v18 + *(int *)(v17 + 20));
  swift_bridgeObjectRetain_n();
  sub_1C032983C(&v76, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1C032AFC4, (uint64_t (*)(void, uint64_t, uint64_t, void *))sub_1C032AA78);
  uint64_t v19 = *(void *)(v10 + 160);
  uint64_t v20 = *(void *)(v10 + 120);
  swift_bridgeObjectRelease();
  char v21 = v76;
  uint64_t v22 = *(void *)(v19 + *(int *)(v20 + 28));
  if (v22 == 1)
  {
    sub_1C032BE6C(*(void *)(v10 + 160), *(void *)(v10 + 152), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    if (v21[2] >= 2uLL) {
      uint64_t v23 = 2;
    }
    else {
      uint64_t v23 = v21[2];
    }
    sub_1C1520B6C();
    swift_unknownObjectRetain_n();
    uint64_t v24 = swift_dynamicCastClass();
    if (!v24)
    {
      swift_release();
      uint64_t v24 = MEMORY[0x1E4FBC860];
    }
    uint64_t v25 = *(void *)(v24 + 16);
    swift_release();
    if (v25 == v23)
    {
      uint64_t v26 = swift_dynamicCastClass();
      if (!v26)
      {
        swift_release();
        uint64_t v26 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      unint64_t v71 = (2 * v23) | 1;
      uint64_t v72 = *(void *)(v10 + 128);
      swift_release();
      uint64_t v26 = sub_1C00B1B2C((uint64_t)v21, (uint64_t)v21+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80)), 0, v71);
    }
    uint64_t v28 = *(void *)(v10 + 152);
    uint64_t v27 = *(void *)(v10 + 160);
    uint64_t v29 = *(void *)(v10 + 104);
    uint64_t v30 = *(int **)(v10 + 88);
    uint64_t v31 = *(void *)(v10 + 64);
    uint64_t v32 = *(void *)(v10 + 40);
    swift_release();
    sub_1C032CA9C(v27, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t v33 = *(int *)(v31 + 28);
    uint64_t v34 = *(void *)(v32 + *(int *)(v31 + 24));
    uint64_t v36 = *(void *)(v32 + v33);
    uint64_t v35 = *(void *)(v32 + v33 + 8);
    sub_1C032BE04(v28, v29, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    *(void *)(v29 + v30[5]) = v26;
    *(void *)(v29 + v30[6]) = v34;
    uint64_t v37 = (void *)(v29 + v30[7]);
    *uint64_t v37 = v36;
LABEL_23:
    v37[1] = v35;
    swift_bridgeObjectRetain();
    uint64_t v54 = *(void *)(v10 + 96);
    uint64_t v55 = *(void *)(v10 + 88);
    uint64_t v56 = *(void *)(v10 + 16);
    sub_1C032BE04(*(void *)(v10 + 104), v56, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v56, 0, 1, v55);
    goto LABEL_24;
  }
  uint64_t v38 = *(void *)(v10 + 40);
  uint64_t v39 = *(int *)(*(void *)(v10 + 64) + 24);
  *(_DWORD *)(v10 + 192) = v39;
  if (v22 == *(void *)(v38 + v39))
  {
    uint64_t v75 = v38;
    sub_1C032BE6C(*(void *)(v10 + 160), *(void *)(v10 + 144), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    unint64_t v40 = v21[2];
    if (v40 >= 2) {
      uint64_t v41 = v40 - 2;
    }
    else {
      uint64_t v41 = 0;
    }
    sub_1C1520B6C();
    swift_unknownObjectRetain_n();
    uint64_t v42 = swift_dynamicCastClass();
    if (!v42)
    {
      swift_release();
      uint64_t v42 = MEMORY[0x1E4FBC860];
    }
    uint64_t v43 = *(void *)(v42 + 16);
    swift_release();
    if (v43 == v40 - v41)
    {
      uint64_t v44 = swift_dynamicCastClass();
      if (!v44)
      {
        swift_release();
        uint64_t v44 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      unint64_t v73 = (2 * v40) | 1;
      uint64_t v74 = *(void *)(v10 + 128);
      swift_release();
      uint64_t v44 = sub_1C00B1B2C((uint64_t)v21, (uint64_t)v21+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80)), v41, v73);
    }
    uint64_t v45 = *(void *)(v10 + 160);
    uint64_t v46 = *(void *)(v10 + 144);
    uint64_t v47 = *(void *)(v10 + 104);
    uint64_t v48 = *(int **)(v10 + 88);
    uint64_t v49 = *(void *)(v10 + 64);
    uint64_t v50 = *(void *)(v10 + 40);
    swift_release();
    sub_1C032CA9C(v45, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t v51 = *(void *)(v75 + v39);
    uint64_t v52 = (uint64_t *)(v50 + *(int *)(v49 + 28));
    uint64_t v53 = *v52;
    uint64_t v35 = v52[1];
    sub_1C032BE04(v46, v47, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    *(void *)(v47 + v48[5]) = v44;
    *(void *)(v47 + v48[6]) = v51;
    uint64_t v37 = (void *)(v47 + v48[7]);
    *uint64_t v37 = v53;
    goto LABEL_23;
  }
  uint64_t v58 = *(void *)(v10 + 48);
  unint64_t v59 = *(void **)(v10 + 24);
  swift_release();
  uint64_t v60 = *(void *)(v58 + 248);
  uint64_t ObjectType = swift_getObjectType();
  id v62 = objc_msgSend(v59, sel_identifier);
  uint64_t v63 = sub_1C151E62C();
  uint64_t v65 = v64;

  *(void *)(v10 + 168) = v65;
  *(unsigned char *)(v10 + 196) = 1;
  uint64_t v66 = v22 - 1;
  if (__OFSUB__(v22, 1))
  {
    __break(1u);
  }
  else
  {
    char v67 = *(unsigned char *)(v10 + 197);
    unint64_t v68 = (void *)swift_task_alloc();
    *(void *)(v10 + 176) = v68;
    *unint64_t v68 = v10;
    v68[1] = sub_1C0328248;
    uint64_t v69 = *(void *)(v10 + 56);
    uint64_t v70 = *(void *)(v10 + 32);
    uint64_t v79 = ObjectType;
    uint64_t v80 = v60;
    PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:range:)(v69, v63, v65, v70, v67 & 1, (unsigned char *)(v10 + 196), v66, 3, a9, a10);
  }
}

uint64_t sub_1C0328248()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    swift_bridgeObjectRelease();
    id v4 = sub_1C03286A4;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 48);
    swift_bridgeObjectRelease();
    id v4 = sub_1C0328374;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C0328374()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 72) + 48))(v2, 1, v1) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 16);
    sub_1C032CA9C(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    sub_1C032CA9C(v2, (uint64_t (*)(void))sub_1C032BC04);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, 1, 1, v3);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 80);
  sub_1C032BE04(v2, v9, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
  sub_1C032BE6C(v7, v8, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  uint64_t v30 = *(void **)(v9 + *(int *)(v1 + 20));
  swift_bridgeObjectRetain_n();
  sub_1C032983C(&v30, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1C032AFC4, (uint64_t (*)(void, uint64_t, uint64_t, void *))sub_1C032AA78);
  if (!v6)
  {
    uint64_t v11 = *(int *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v29 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v15 = *(int **)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v17 = *(void *)(v0 + 40);
    swift_bridgeObjectRelease();
    uint64_t v18 = v30;
    sub_1C032CA9C(v14, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
    sub_1C032CA9C(v12, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t v19 = *(void *)(v17 + v11);
    uint64_t v20 = (uint64_t *)(v17 + *(int *)(v16 + 28));
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    sub_1C032BE04(v29, v13, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    *(void *)(v13 + v15[5]) = v18;
    *(void *)(v13 + v15[6]) = v19;
    uint64_t v23 = (void *)(v13 + v15[7]);
    *uint64_t v23 = v22;
    v23[1] = v21;
    uint64_t v25 = *(void *)(v0 + 96);
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v26 = *(void *)(v0 + 88);
    uint64_t v27 = *(void *)(v0 + 16);
    swift_bridgeObjectRetain();
    sub_1C032BE04(v24, v27, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
    goto LABEL_8;
  }
  return swift_release();
}

uint64_t sub_1C03286A4()
{
  sub_1C032CA9C(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C03287BC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1C032881C()
{
  sub_1C03287BC();
  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1C0328848()
{
  return v0;
}

uint64_t sub_1C0328854(char a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C005E7F4;
  return sub_1C0319D4C(a1);
}

uint64_t sub_1C03288EC(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1C005E7F4;
  return sub_1C031E694(a1, a2, a3);
}

uint64_t sub_1C03289A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C0328A38;
  return sub_1C0321608(a1);
}

uint64_t sub_1C0328A38(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1C0328B34(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C0328BCC;
  return sub_1C0322B40(a1);
}

uint64_t sub_1C0328BCC(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t sub_1C0328CD4()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C005E7F4;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1C0322F68, v2, 0);
}

uint64_t sub_1C0328D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1BFC542F4;
  return sub_1C0323088(a1, a2);
}

uint64_t sub_1C0328E28()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C005E7F4;
  return sub_1C0319D4C(0);
}

void sub_1C0328EC0(void *a1, char a2)
{
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v16 = MEMORY[0x1F4188790](v15).n128_u64[0];
  uint64_t v18 = (char *)&v26 - v17;
  if (a2)
  {
    id v19 = objc_msgSend(a1, sel_puzzleStatsStartDate, v16);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v27 = v2;
      sub_1C15162BC();

      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v21(v10, v14, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        v21(v18, v10, v11);
        uint64_t v22 = sub_1C151EE9C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v18, v11);
        unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = 0;
        *(void *)(v25 + 24) = 0;
        v21((char *)(v25 + v23), v14, v11);
        *(void *)(v25 + v24) = v27;
        swift_retain();
        sub_1C0C833AC((uint64_t)v7, (uint64_t)&unk_1EA199DB0, v25);
        swift_release();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    sub_1C032CA9C((uint64_t)v10, (uint64_t (*)(void))sub_1BFF97C40);
  }
}

uint64_t sub_1C0329218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = sub_1C151631C();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C03292D8, 0, 0);
}

uint64_t sub_1C03292D8()
{
  id v19 = v0;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = sub_1C15198DC();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB93C7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v6 = sub_1C15198AC();
  os_log_type_t v7 = sub_1C151F38C();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[6];
  uint64_t v9 = v0[7];
  uint64_t v11 = v0[5];
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_1BFDA76A4((unint64_t *)&qword_1EB871170, 255, MEMORY[0x1E4F27928]);
    uint64_t v13 = sub_1C152088C();
    v0[2] = sub_1BFDA76EC(v13, v14, &v18);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl(&dword_1BFC31000, v6, v7, "PuzzleStatsService: Received new starting date [%s]. Updating stats...", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v17, -1, -1);
    MEMORY[0x1C18C9B00](v12, -1, -1);
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[7], v0[5]);
  }

  uint64_t v15 = (void *)swift_task_alloc();
  v0[8] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1C0329578;
  return sub_1C0319D4C(0);
}

uint64_t sub_1C0329578()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *assignWithCopy for PuzzleStatsService.UpdatingState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for PuzzleStatsService.UpdatingState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleStatsService.UpdatingState()
{
  return &type metadata for PuzzleStatsService.UpdatingState;
}

ValueMetadata *type metadata accessor for PuzzleTypeStats.CodingKeys()
{
  return &type metadata for PuzzleTypeStats.CodingKeys;
}

unint64_t sub_1C032977C()
{
  unint64_t result = qword_1EA199C58;
  if (!qword_1EA199C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199C58);
  }
  return result;
}

uint64_t sub_1C03297D0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF8F9B8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C03298FC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C032983C(void **a1, void (*a2)(uint64_t, uint64_t, uint64_t, unint64_t), uint64_t (*a3)(void, uint64_t, uint64_t, void *))
{
  uint64_t v6 = *(void *)(type metadata accessor for PuzzleLeaderboardEntry() - 8);
  os_log_type_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    os_log_type_t v7 = (void *)sub_1C06363EC(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (char *)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_1C0329F88(v10, a2, a3);
  *a1 = v7;
  return result;
}

uint64_t sub_1C03298FC(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v83 >= v81) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1C032AD54((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_1C063604C((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          v90 = &v86[16 * v85 + 32];
          *(void *)v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C151ECCC();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v15 < v14 == v16 >= v17) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (*v25 >= v23) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          uint64_t *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1C0634CC8((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        id v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        unint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        unint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1C032AD54((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)unint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C0329F88(void *a1, void (*a2)(uint64_t, uint64_t, uint64_t, unint64_t), uint64_t (*a3)(void, uint64_t, uint64_t, void *))
{
  v129 = a2;
  uint64_t v5 = v3;
  uint64_t v136 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v130 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v125 = (uint64_t)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (uint64_t)&v119 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v134 = (uint64_t)&v119 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v133 = (uint64_t)&v119 - v13;
  uint64_t v14 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v14)
  {
    if (v14 < 0) {
      goto LABEL_139;
    }
    if (v14) {
      return a3(0, v14, 1, a1);
    }
    return result;
  }
  if (v14 >= 0) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v14 + 1;
  }
  if (v14 < -1) {
    goto LABEL_147;
  }
  uint64_t v121 = result;
  if (v14 < 2)
  {
    uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v127 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
    uint64_t v120 = MEMORY[0x1E4FBC860];
    if (v14 != 1)
    {
      unint64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_105:
      if (v22 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v22 - 2;
          if (v22 < 2) {
            goto LABEL_134;
          }
          if (!v113) {
            goto LABEL_146;
          }
          uint64_t v115 = *(void *)&v20[16 * v114 + 32];
          uint64_t v116 = *(void *)&v20[16 * v22 + 24];
          v129(v113 + *(void *)(v130 + 72) * v115, v113 + *(void *)(v130 + 72) * *(void *)&v20[16 * v22 + 16], v113 + *(void *)(v130 + 72) * v116, v127);
          if (v5) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_1C063604C((uint64_t)v20);
          }
          if (v114 >= *((void *)v20 + 2)) {
            goto LABEL_136;
          }
          v117 = &v20[16 * v114 + 32];
          *(void *)v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v20 + 2);
          if (v22 > v118) {
            goto LABEL_137;
          }
          memmove(&v20[16 * v22 + 16], &v20[16 * v22 + 32], 16 * (v118 - v22));
          *((void *)v20 + 2) = v118 - 1;
          unint64_t v22 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v17 = v16 >> 1;
    uint64_t v18 = sub_1C151ECCC();
    *(void *)(v18 + 16) = v17;
    uint64_t v19 = *(unsigned __int8 *)(v130 + 80);
    uint64_t v120 = v18;
    unint64_t v127 = v18 + ((v19 + 32) & ~v19);
  }
  uint64_t v21 = 0;
  uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
  v128 = a1;
  while (1)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v21 + 1;
    uint64_t v126 = v21;
    if (v21 + 1 >= v14)
    {
      uint64_t v30 = v21 + 1;
      goto LABEL_56;
    }
    v122 = v20;
    uint64_t v123 = v5;
    uint64_t v25 = *a1;
    uint64_t v26 = *(void *)(v130 + 72);
    uint64_t v27 = v133;
    sub_1C032BE6C(*a1 + v26 * v24, v133, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t v28 = v134;
    sub_1C032BE6C(v25 + v26 * v23, v134, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t v29 = *(int *)(v136 + 28);
    uint64_t v138 = *(void *)(v27 + v29);
    uint64_t v135 = *(void *)(v28 + v29);
    sub_1C032CA9C(v28, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    sub_1C032CA9C(v27, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t v30 = v23 + 2;
    uint64_t v131 = v25;
    uint64_t v139 = v26;
    if (v23 + 2 >= v14)
    {
      uint64_t v37 = v26;
      uint64_t v5 = v123;
    }
    else
    {
      uint64_t v132 = v26 * v24;
      uint64_t v31 = v25;
      uint64_t v32 = v26 * v30;
      while (1)
      {
        int v33 = v138 < v135;
        uint64_t v34 = v133;
        sub_1C032BE6C(v31 + v32, v133, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        uint64_t v35 = v134;
        sub_1C032BE6C(v31 + v132, v134, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        int v36 = *(void *)(v34 + *(int *)(v136 + 28)) >= *(void *)(v35 + *(int *)(v136 + 28));
        sub_1C032CA9C(v35, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        sub_1C032CA9C(v34, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        if (v33 == v36) {
          break;
        }
        ++v30;
        uint64_t v37 = v139;
        v31 += v139;
        if (v14 == v30)
        {
          uint64_t v30 = v14;
          a1 = v128;
          uint64_t v5 = v123;
          uint64_t v23 = v126;
          goto LABEL_24;
        }
      }
      a1 = v128;
      uint64_t v5 = v123;
      uint64_t v23 = v126;
      uint64_t v37 = v139;
    }
LABEL_24:
    if (v138 < v135)
    {
      if (v30 < v23) {
        goto LABEL_140;
      }
      if (v23 < v30)
      {
        uint64_t v138 = v14;
        uint64_t v123 = v5;
        uint64_t v38 = 0;
        uint64_t v39 = v37 * (v30 - 1);
        uint64_t v40 = v30 * v37;
        uint64_t v41 = v23 * v37;
        do
        {
          if (v23 != v30 + v38 - 1)
          {
            uint64_t v42 = v131;
            if (!v131) {
              goto LABEL_145;
            }
            unint64_t v43 = v131 + v41;
            uint64_t v44 = v131 + v39;
            sub_1C032BE04(v131 + v41, v125, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
            if (v41 < v39 || v43 >= v42 + v40)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v37 = v139;
            }
            else
            {
              uint64_t v37 = v139;
              if (v41 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1C032BE04(v125, v44, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          }
          ++v23;
          --v38;
          v39 -= v37;
          v40 -= v37;
          v41 += v37;
        }
        while (v23 < v30 + v38);
        a1 = v128;
        uint64_t v5 = v123;
        uint64_t v23 = v126;
        uint64_t v14 = v138;
      }
    }
    uint64_t v20 = v122;
    if (v30 < v14)
    {
      if (__OFSUB__(v30, v23)) {
        goto LABEL_138;
      }
      if (v30 - v23 < v121) {
        break;
      }
    }
LABEL_56:
    if (v30 < v23) {
      goto LABEL_133;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v135 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_1C0634CC8(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v63 = *((void *)v20 + 2);
    unint64_t v62 = *((void *)v20 + 3);
    unint64_t v22 = v63 + 1;
    uint64_t v64 = v5;
    if (v63 >= v62 >> 1) {
      uint64_t v20 = sub_1C0634CC8((char *)(v62 > 1), v63 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v22;
    uint64_t v65 = v20 + 32;
    uint64_t v66 = &v20[16 * v63 + 32];
    uint64_t v67 = v135;
    *(void *)uint64_t v66 = v126;
    *((void *)v66 + 1) = v67;
    if (v63)
    {
      while (1)
      {
        unint64_t v68 = v22 - 1;
        if (v22 >= 4)
        {
          unint64_t v73 = &v65[16 * v22];
          uint64_t v74 = *((void *)v73 - 8);
          uint64_t v75 = *((void *)v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_122;
          }
          uint64_t v78 = *((void *)v73 - 6);
          uint64_t v77 = *((void *)v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_123;
          }
          unint64_t v80 = v22 - 2;
          uint64_t v81 = &v65[16 * v22 - 32];
          uint64_t v83 = *(void *)v81;
          uint64_t v82 = *((void *)v81 + 1);
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_125;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_128;
          }
          if (v85 >= v76)
          {
            v103 = &v65[16 * v68];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_132;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_93;
          }
        }
        else
        {
          if (v22 != 3)
          {
            uint64_t v97 = *((void *)v20 + 4);
            uint64_t v98 = *((void *)v20 + 5);
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_87;
          }
          uint64_t v70 = *((void *)v20 + 4);
          uint64_t v69 = *((void *)v20 + 5);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_124;
        }
        unint64_t v80 = v22 - 2;
        uint64_t v86 = &v65[16 * v22 - 32];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_127;
        }
        v92 = &v65[16 * v68];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_130;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_131;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_93:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v91) {
          goto LABEL_126;
        }
        v99 = &v65[16 * v68];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_129;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v22)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v128) {
          goto LABEL_144;
        }
        v108 = &v65[16 * v107];
        uint64_t v109 = *(void *)v108;
        v110 = &v65[16 * v68];
        uint64_t v111 = *((void *)v110 + 1);
        v129(*v128 + *(void *)(v130 + 72) * *(void *)v108, *v128 + *(void *)(v130 + 72) * *(void *)v110, *v128 + *(void *)(v130 + 72) * v111, v127);
        if (v64) {
          goto LABEL_116;
        }
        if (v111 < v109) {
          goto LABEL_119;
        }
        if (v68 > *((void *)v20 + 2)) {
          goto LABEL_120;
        }
        *(void *)v108 = v109;
        *(void *)&v65[16 * v107 + 8] = v111;
        unint64_t v112 = *((void *)v20 + 2);
        if (v68 >= v112) {
          goto LABEL_121;
        }
        unint64_t v22 = v112 - 1;
        memmove(&v65[16 * v68], v110 + 16, 16 * (v112 - 1 - v68));
        *((void *)v20 + 2) = v112 - 1;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v22 = 1;
LABEL_14:
    a1 = v128;
    uint64_t v14 = v128[1];
    uint64_t v21 = v135;
    uint64_t v5 = v64;
    if (v135 >= v14) {
      goto LABEL_105;
    }
  }
  if (__OFADD__(v23, v121)) {
    goto LABEL_141;
  }
  if (v23 + v121 >= v14) {
    uint64_t v45 = v14;
  }
  else {
    uint64_t v45 = v23 + v121;
  }
  if (v45 >= v23)
  {
    if (v30 != v45)
    {
      uint64_t v123 = v5;
      uint64_t v46 = *(void *)(v130 + 72);
      uint64_t v47 = v46 * (v30 - 1);
      uint64_t v131 = v46;
      uint64_t v48 = v30 * v46;
      uint64_t v124 = v45;
      do
      {
        uint64_t v50 = 0;
        uint64_t v135 = v30;
        uint64_t v132 = v48;
        while (1)
        {
          uint64_t v138 = v23;
          uint64_t v51 = *a1;
          uint64_t v52 = v48 + v50 + *a1;
          uint64_t v53 = v133;
          sub_1C032BE6C(v52, v133, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v54 = v47;
          uint64_t v55 = v47 + v50 + v51;
          uint64_t v56 = v134;
          sub_1C032BE6C(v55, v134, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v57 = *(int *)(v136 + 28);
          uint64_t v139 = *(void *)(v53 + v57);
          uint64_t v58 = *(void *)(v56 + v57);
          sub_1C032CA9C(v56, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          sub_1C032CA9C(v53, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          if (v139 >= v58) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_143;
          }
          uint64_t v48 = v132;
          uint64_t v47 = v54;
          uint64_t v60 = v59 + v54 + v50;
          sub_1C032BE04(v59 + v132 + v50, v137, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C032BE04(v137, v60, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          v50 -= v131;
          uint64_t v23 = v138 + 1;
          uint64_t v49 = v135;
          if (v135 == v138 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v49 = v135;
        uint64_t v47 = v54;
        uint64_t v48 = v132;
LABEL_49:
        uint64_t v30 = v49 + 1;
        v47 += v131;
        v48 += v131;
        uint64_t v23 = v126;
      }
      while (v30 != v124);
      uint64_t v30 = v124;
      uint64_t v20 = v122;
      uint64_t v5 = v123;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

void sub_1C032AA78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
}

void sub_1C032AA90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v40 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v40);
  uint64_t v41 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v36 = (uint64_t)&v31 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v35 = (uint64_t)&v31 - v12;
  uint64_t v39 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v14 = v13 * (v39 - 1);
    uint64_t v37 = v13;
    uint64_t v15 = v13 * v39;
    uint64_t v34 = a4;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v33;
    uint64_t v38 = v15;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = v15 + v16 + *a4;
      uint64_t v20 = v35;
      sub_1C032BE6C(v19, v35, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v21 = v14 + v16 + v18;
      uint64_t v22 = v14;
      uint64_t v23 = v36;
      sub_1C032BE6C(v21, v36, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v24 = *(int *)(v40 + 28);
      uint64_t v42 = *(void *)(v20 + v24);
      uint64_t v25 = *(void *)(v23 + v24);
      uint64_t v26 = v23;
      uint64_t v14 = v22;
      sub_1C032CA9C(v26, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v27 = v20;
      uint64_t v15 = v38;
      sub_1C032CA9C(v27, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      BOOL v28 = v42 < v25;
      a4 = v34;
      if (!v28)
      {
LABEL_4:
        uint64_t v14 = v22 + v37;
        v15 += v37;
        if (++v39 == v32) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v29 = *v34;
      if (!*v34) {
        break;
      }
      uint64_t v30 = v29 + v22 + v16;
      sub_1C032BE04(v29 + v15 + v16, v41, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C032BE04(v41, v30, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      v16 -= v37;
      if (v39 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C032AD54(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (v20 >= *((void *)v16 - 1))
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v4 >= *(void *)v6)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1C0634F70((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C032AFC4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  return sub_1C032AFE0(a1, a2, a3, a4) & 1;
}

uint64_t sub_1C032AFE0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v50 = (char *)&v44 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v18;
      unint64_t v52 = a4 + v18;
      unint64_t v54 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v13;
        unint64_t v48 = a4;
        unint64_t v45 = a1;
        uint64_t v46 = v8;
        uint64_t v34 = (uint64_t)v50;
        do
        {
          unint64_t v49 = a3 + v33;
          sub_1C032BE6C(v31 + v33, v34, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          unint64_t v35 = a2 + v33;
          uint64_t v36 = v51;
          sub_1C032BE6C(a2 + v33, v51, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v37 = *(int *)(v8 + 28);
          uint64_t v38 = *(void *)(v34 + v37);
          uint64_t v39 = *(void *)(v36 + v37);
          sub_1C032CA9C(v36, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          sub_1C032CA9C(v34, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          if (v38 >= v39)
          {
            unint64_t v42 = v52;
            v52 += v33;
            unint64_t v40 = v49;
            if (a3 < v42 || v49 >= v42)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v35 = a2;
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != v42) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v35 = a2;
            }
          }
          else
          {
            unint64_t v40 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v54 += v33;
          }
          unint64_t v31 = v52;
          if (v52 <= v41) {
            break;
          }
          a2 = v35;
          a3 = v40;
        }
        while (v35 > v45);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v49 = a4 + v17;
    unint64_t v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v47 = a3;
      uint64_t v20 = (uint64_t)v50;
      do
      {
        sub_1C032BE6C(a2, v20, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        uint64_t v21 = v51;
        sub_1C032BE6C(a4, v51, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        uint64_t v22 = *(int *)(v8 + 28);
        uint64_t v23 = *(void *)(v20 + v22);
        uint64_t v24 = *(void *)(v21 + v22);
        sub_1C032CA9C(v21, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        sub_1C032CA9C(v20, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        unint64_t v25 = v54;
        if (v23 >= v24)
        {
          unint64_t v29 = v53 + v13;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 != v53) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v53 = v29;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v13;
          if (v54 < a2 || v54 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 == a2) {
              unint64_t v25 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v54 = v25 + v13;
        a4 = v53;
        if (v53 >= v49) {
          break;
        }
        a2 = v26;
      }
      while (v26 < v28);
    }
LABEL_66:
    sub_1C0635314(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C032B544(uint64_t result, uint64_t a2, void *a3)
{
  unint64_t v33 = *(void *)(result + 16);
  if (v33)
  {
    unint64_t v5 = 0;
    uint64_t v30 = a3 + 14;
    uint64_t v31 = result + 32;
    uint64_t v34 = a2 + 56;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v29 = v6;
      unint64_t v7 = v33;
      if (v5 > v33) {
        unint64_t v7 = v5;
      }
      unint64_t v32 = v7;
      while (1)
      {
        if (v5 == v32)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = (uint64_t *)(v31 + 16 * v5);
        uint64_t v10 = *v8;
        uint64_t v9 = v8[1];
        ++v5;
        if (*(void *)(a2 + 16))
        {
          sub_1C1520DBC();
          swift_bridgeObjectRetain();
          sub_1C151E77C();
          uint64_t v11 = sub_1C1520E0C();
          uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v13 = v11 & ~v12;
          if ((*(void *)(v34 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
          {
            uint64_t v14 = *(void *)(a2 + 48);
            uint64_t v15 = (void *)(v14 + 16 * v13);
            BOOL v16 = *v15 == v10 && v15[1] == v9;
            if (v16 || (sub_1C1520A9C() & 1) != 0) {
              goto LABEL_6;
            }
            uint64_t v17 = ~v12;
            for (unint64_t i = v13 + 1; ; unint64_t i = v19 + 1)
            {
              uint64_t v19 = i & v17;
              if (((*(void *)(v34 + (((i & v17) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v17)) & 1) == 0) {
                break;
              }
              uint64_t v20 = (void *)(v14 + 16 * v19);
              BOOL v21 = *v20 == v10 && v20[1] == v9;
              if (v21 || (sub_1C1520A9C() & 1) != 0) {
                goto LABEL_6;
              }
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v23 = a3[17];
        uint64_t v22 = a3[18];
        __swift_project_boxed_opaque_existential_1(v30, v23);
        if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 8) + 32))(v10, v9, v23))
        {
          uint64_t v25 = a3[17];
          uint64_t v24 = a3[18];
          __swift_project_boxed_opaque_existential_1(v30, v25);
          if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 8) + 40))(v10, v9, v25) & 1) == 0) {
            break;
          }
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        if (v5 == v33) {
          return v29;
        }
      }
      uint64_t v6 = v29;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1BFF661B8(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v6 = v29;
      }
      unint64_t v27 = *(void *)(v6 + 16);
      unint64_t v26 = *(void *)(v6 + 24);
      if (v27 >= v26 >> 1)
      {
        uint64_t result = sub_1BFF661B8(v26 > 1, v27 + 1, 1);
        uint64_t v6 = v29;
      }
      *(void *)(v6 + 16) = v27 + 1;
      uint64_t v28 = v6 + 16 * v27;
      *(void *)(v28 + 32) = v10;
      *(void *)(v28 + 40) = v9;
      if (v5 == v33) {
        return v6;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1C032B7FC(uint64_t a1)
{
}

uint64_t sub_1C032B830@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PuzzleStreak();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v12 = a1[5];
  int64_t v14 = *(void *)(v12 + 16);
  if (v14)
  {
    unint64_t v33 = a2;
    uint64_t v15 = v12;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    uint64_t v32 = v8;
    swift_bridgeObjectRetain();
    uint64_t v31 = v9;
    swift_bridgeObjectRetain();
    uint64_t v30 = v10;
    swift_bridgeObjectRetain();
    uint64_t v29 = v11;
    swift_bridgeObjectRetain();
    uint64_t v28 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v14, 0);
    uint64_t v16 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v27 = v15;
    uint64_t v17 = v15 + ((v16 + 32) & ~v16);
    uint64_t v18 = *(void *)(v5 + 72);
    uint64_t v19 = v34;
    do
    {
      sub_1C032BE6C(v17, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      unint64_t v20 = PuzzleStreak.debugDescription.getter();
      uint64_t v22 = v21;
      sub_1C032CA9C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v34;
      }
      unint64_t v24 = *(void *)(v19 + 16);
      unint64_t v23 = *(void *)(v19 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BFF661B8(v23 > 1, v24 + 1, 1);
        uint64_t v19 = v34;
      }
      *(void *)(v19 + 16) = v24 + 1;
      uint64_t v25 = v19 + 16 * v24;
      *(void *)(v25 + 32) = v20;
      *(void *)(v25 + 40) = v22;
      v17 += v18;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    uint64_t v13 = v28;
    swift_bridgeObjectRelease();
    uint64_t v11 = v29;
    swift_bridgeObjectRelease();
    uint64_t v10 = v30;
    swift_bridgeObjectRelease();
    uint64_t v9 = v31;
    swift_bridgeObjectRelease();
    uint64_t v8 = v32;
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v33;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v11;
  a2[4] = v13;
  a2[5] = v19;
  return result;
}

unint64_t sub_1C032BAB0()
{
  unint64_t result = qword_1EA199CB0;
  if (!qword_1EA199CB0)
  {
    sub_1BFD136E8(255, &qword_1EA199CA8);
    sub_1C032BB48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199CB0);
  }
  return result;
}

unint64_t sub_1C032BB48()
{
  unint64_t result = qword_1EA199CB8;
  if (!qword_1EA199CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA199CB8);
  }
  return result;
}

void sub_1C032BB9C(uint64_t a1)
{
}

void sub_1C032BBD0(uint64_t a1)
{
}

void sub_1C032BC04(uint64_t a1)
{
}

void sub_1C032BC38(uint64_t a1)
{
}

uint64_t sub_1C032BC6C()
{
  return objectdestroyTm_0();
}

uint64_t sub_1C032BC74(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C031A2DC(a1, v4, v5, v6, v7);
}

uint64_t type metadata accessor for PuzzleStatsService.StatsResult()
{
  uint64_t result = qword_1EB86C788;
  if (!qword_1EB86C788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C032BD84(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C032BE04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C032BE6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C032BED4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C160AA30 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4264657472617473 && a2 == 0xEE006C6576654C79 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C160AA50 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160AA70 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5374736568676968 && a2 == 0xED00007365726F63 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736B6165727473 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1C032C18C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1BFD1378C(0, (unint64_t *)&unk_1EA199DD0, (uint64_t (*)(void))sub_1C032DC14, (uint64_t)&type metadata for PuzzleTypeDebugStats.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = a1[3];
  uint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C032DC14();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  uint64_t v11 = v7;
  unint64_t v26 = a2;
  sub_1BFD1393C();
  char v28 = 0;
  sub_1BFD13AD8();
  uint64_t v12 = v6;
  sub_1C15206EC();
  uint64_t v13 = v29;
  char v28 = 1;
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v14 = v29;
  sub_1BFD136E8(0, &qword_1EB863258);
  char v28 = 2;
  uint64_t v15 = sub_1BFD138B8(&qword_1EB863268);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v25 = v15;
  uint64_t v16 = v29;
  sub_1BFD136E8(0, &qword_1EB863208);
  char v28 = 3;
  sub_1BFD139A4(&qword_1EB863220);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v24 = v16;
  uint64_t v17 = v29;
  char v28 = 4;
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v18 = v29;
  sub_1BFED9C20();
  char v28 = 5;
  sub_1BFE389D8((unint64_t *)&qword_1EB879F50, (void (*)(uint64_t))sub_1BFED9C20);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v12);
  uint64_t v19 = v29;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v22 = v26;
  void *v26 = v13;
  v22[1] = v14;
  v22[2] = v20;
  v22[3] = v17;
  v22[4] = v18;
  v22[5] = v19;
  return result;
}

uint64_t sub_1C032C770()
{
  uint64_t v1 = v0;
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151EE9C();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1C032CA9C((uint64_t)v4, (uint64_t (*)(void))sub_1C0064478);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1C151EDBC();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA199D98;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C032C9BC()
{
  return objectdestroyTm_0();
}

uint64_t sub_1C032C9C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C005E7F4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  void *v2 = v1;
  v2[1] = sub_1C005E7F4;
  return sub_1C0319D4C(0);
}

uint64_t sub_1C032CA9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C032CAFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C032CB34()
{
  uint64_t v1 = sub_1C151631C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C032CC1C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C151631C() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1BFC542F4;
  return sub_1C0329218(a1, v6, v7, v8, v9);
}

unint64_t sub_1C032CD40()
{
  unint64_t result = qword_1EA199DB8;
  if (!qword_1EA199DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199DB8);
  }
  return result;
}

uint64_t *sub_1C032CD94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    a1[5] = a2[5];
    uint64_t v10 = sub_1C151631C();
    uint64_t v13 = *(void *)(v10 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v9, 1, v10))
    {
      sub_1BFF97C40();
      memcpy(__dst, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_1C032CF64(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151631C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1C032D05C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 20);
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v8, 1, v9))
  {
    sub_1BFF97C40();
    memcpy(__dst, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v9);
  }
  return a1;
}

void *sub_1C032D1D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1C032D3DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BFF97C40();
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1C032D4F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C032D6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C032D6DC);
}

uint64_t sub_1C032D6DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C032D78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C032D7A0);
}

void *sub_1C032D7A0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C032D848()
{
  sub_1BFF97C40();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for FormatBezierPathCurveComponent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatBezierPathCurveComponent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatBezierPathCurveComponent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FormatBezierPathCurveComponent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for FormatBezierPathCurveComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleTypeDebugStats()
{
  return &type metadata for PuzzleTypeDebugStats;
}

uint64_t getEnumTagSinglePayload for DebugFormatTemplateKeyUIElement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatTemplateKeyUIElement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_1C032DBE4(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatsServiceError()
{
  return &type metadata for PuzzleStatsServiceError;
}

unint64_t sub_1C032DC14()
{
  unint64_t result = qword_1EA199DC8;
  if (!qword_1EA199DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199DC8);
  }
  return result;
}

unsigned char *_s8NewsFeed15PuzzleTypeStatsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C032DD34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleTypeDebugStats.CodingKeys()
{
  return &type metadata for PuzzleTypeDebugStats.CodingKeys;
}

unint64_t sub_1C032DD70()
{
  unint64_t result = qword_1EA199DE0;
  if (!qword_1EA199DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199DE0);
  }
  return result;
}

unint64_t sub_1C032DDC8()
{
  unint64_t result = qword_1EA199DE8;
  if (!qword_1EA199DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199DE8);
  }
  return result;
}

unint64_t sub_1C032DE20()
{
  unint64_t result = qword_1EA199DF0;
  if (!qword_1EA199DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199DF0);
  }
  return result;
}

id VideoDurationView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *VideoDurationView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed17VideoDurationView_label;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  int v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v32.receiver = v12;
  v32.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  id v14 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v14, sel_setCornerRadius_, 10.0);

  id v15 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  uint64_t v16 = (char *)v13;
  id v17 = objc_msgSend(v15, sel_initWithRed_green_blue_alpha_, 0.282352941, 0.282352941, 0.290196078, 1.0);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed17VideoDurationView_label;
  uint64_t v19 = *(void **)&v16[OBJC_IVAR____TtC8NewsFeed17VideoDurationView_label];
  objc_msgSend(v16, sel_addSubview_, v19);
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_whiteColor);
  objc_msgSend(v21, sel_setTextColor_, v22);

  uint64_t v23 = *(void **)&v16[v18];
  objc_msgSend(v23, sel_setTextAlignment_, 1);
  uint64_t v24 = self;
  double v25 = *MEMORY[0x1E4FB09E0];
  id v26 = v23;
  id v27 = objc_msgSend(v24, sel_systemFontOfSize_weight_, 12.0, v25);
  id v28 = objc_msgSend(v27, sel_fontDescriptor);
  id v29 = objc_msgSend(v28, sel_fontDescriptorWithDesign_, *MEMORY[0x1E4FB0938]);

  if (v29)
  {
    id v30 = objc_msgSend(v24, sel_fontWithDescriptor_size_, v29, 12.0);

    id v27 = v30;
  }
  objc_msgSend(v26, sel_setFont_, v27);

  return v16;
}

Swift::Void __swiftcall VideoDurationView.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed17VideoDurationView_label];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

id VideoDurationView.intrinsicContentSize.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17VideoDurationView_label);
  id result = objc_msgSend(v1, sel_font);
  if (result)
  {
    int v3 = result;
    objc_msgSend(result, sel_capHeight);

    return objc_msgSend(v1, sel_intrinsicContentSize);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id VideoDurationView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VideoDurationView()
{
  return self;
}

uint64_t FormatAccessibilityNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAccessibilityNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAccessibilityNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatAccessibilityNode.property.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  char v4 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return sub_1BFF4CEEC(v3, v4);
}

unint64_t FormatAccessibilityNode.property.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  swift_beginAccess();
  unint64_t v4 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 40) = v3;
  return sub_1BFF4BCA0(v4, v5);
}

uint64_t (*FormatAccessibilityNode.property.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAccessibilityNode.invalidation.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  __int16 v6 = *(_WORD *)(v1 + 72);
  *(_WORD *)(a1 + 24) = v6;
  return sub_1BFF4DC7C(v3, v4, v5, v6);
}

uint64_t FormatAccessibilityNode.invalidation.setter(long long *a1)
{
  long long v9 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  __int16 v3 = *((_WORD *)a1 + 12);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  *(_OWORD *)(v1 + 48) = v9;
  *(void *)(v1 + 64) = v2;
  __int16 v7 = *(_WORD *)(v1 + 72);
  *(_WORD *)(v1 + 72) = v3;
  return sub_1BFF4BC8C(v4, v5, v6, v7);
}

uint64_t sub_1C032E7BC(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      id result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      id result = a7();
      break;
    case 6u:
      id result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      id result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t (*FormatAccessibilityNode.invalidation.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAccessibilityNode.__allocating_init(identifier:property:invalidation:)(uint64_t a1, uint64_t a2, uint64_t *a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = *a3;
  LOBYTE(a3) = *((unsigned char *)a3 + 8);
  long long v17 = *a4;
  uint64_t v10 = *((void *)a4 + 2);
  __int16 v11 = *((_WORD *)a4 + 12);
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  *(void *)(v8 + 48) = 0;
  *(_WORD *)(v8 + 72) = -1024;
  swift_beginAccess();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = v9;
  *(unsigned char *)(v8 + 40) = (_BYTE)a3;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v8 + 48);
  uint64_t v13 = *(void *)(v8 + 56);
  uint64_t v14 = *(void *)(v8 + 64);
  *(_OWORD *)(v8 + 48) = v17;
  *(void *)(v8 + 64) = v10;
  __int16 v15 = *(_WORD *)(v8 + 72);
  *(_WORD *)(v8 + 72) = v11;
  sub_1BFF4BC8C(v12, v13, v14, v15);
  return v8;
}

uint64_t FormatAccessibilityNode.init(identifier:property:invalidation:)(uint64_t a1, uint64_t a2, uint64_t *a3, long long *a4)
{
  uint64_t v7 = *a3;
  char v8 = *((unsigned char *)a3 + 8);
  long long v16 = *a4;
  uint64_t v9 = *((void *)a4 + 2);
  __int16 v10 = *((_WORD *)a4 + 12);
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(_WORD *)(v4 + 72) = -1024;
  *(void *)(v4 + 48) = 0;
  swift_beginAccess();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v7;
  *(unsigned char *)(v4 + 40) = v8;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v4 + 48);
  uint64_t v12 = *(void *)(v4 + 56);
  uint64_t v13 = *(void *)(v4 + 64);
  *(_OWORD *)(v4 + 48) = v16;
  *(void *)(v4 + 64) = v9;
  __int16 v14 = *(_WORD *)(v4 + 72);
  *(_WORD *)(v4 + 72) = v10;
  sub_1BFF4BC8C(v11, v12, v13, v14);
  return v4;
}

uint64_t FormatAccessibilityNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF4BCA0(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1BFF4BC8C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(_WORD *)(v0 + 72));
  return v0;
}

uint64_t FormatAccessibilityNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF4BCA0(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1BFF4BC8C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(_WORD *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t sub_1C032EB10(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFF4CF20(&qword_1EA199E08, a2, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C032EB68(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFF4CF20(&qword_1EB87F728, a2, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityNode);
  a1[2] = sub_1BFF4CF20(&qword_1EB860660, v3, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityNode);
  uint64_t result = sub_1BFF4CF20(&qword_1EA199E10, v4, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C032EC14(void *a1, void *a2)
{
  return static FormatAccessibilityNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C032EC20(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFF4CF20(&qword_1EA199E18, a2, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C032EC94@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatAccessibilityNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAccessibilityNode);
}

uint64_t dispatch thunk of FormatAccessibilityNode.__allocating_init(identifier:property:invalidation:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t FormatAnimationNodeGroupAnimation.animations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeGroupAnimation.mediaTiming.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C032F9D8(v1 + 24, (uint64_t)v4, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C032F9D8((uint64_t)v4, a1, (uint64_t (*)(void))sub_1C00F652C);
  return sub_1C00F6940((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
}

uint64_t FormatAnimationNodeGroupAnimation.__allocating_init(animations:mediaTiming:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1C032F9D8(a2, (uint64_t)v6, (uint64_t (*)(void))sub_1C00F652C);
  *(void *)(v4 + 16) = a1;
  sub_1C032F9D8((uint64_t)v6, v4 + 24, (uint64_t (*)(void))sub_1C00F652C);
  return v4;
}

uint64_t FormatAnimationNodeGroupAnimation.init(animations:mediaTiming:)(uint64_t a1, uint64_t a2)
{
  sub_1C032F9D8(a2, (uint64_t)v5, (uint64_t (*)(void))sub_1C00F652C);
  *(void *)(v2 + 16) = a1;
  sub_1C032F9D8((uint64_t)v5, v2 + 24, (uint64_t (*)(void))sub_1C00F652C);
  return v2;
}

uint64_t FormatAnimationNodeGroupAnimation.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C032F9D8(v0 + 24, (uint64_t)v2, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C00F6940((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
  return v0;
}

uint64_t FormatAnimationNodeGroupAnimation.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C032F9D8(v0 + 24, (uint64_t)v2, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C00F6940((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
  return swift_deallocClassInstance();
}

uint64_t sub_1C032EF58(uint64_t a1)
{
  uint64_t result = sub_1C032F04C(&qword_1EA199E20);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatAnimationNodeGroupAnimation()
{
  return self;
}

uint64_t sub_1C032EFC0(void *a1)
{
  a1[1] = sub_1C032F04C(&qword_1EA199E28);
  a1[2] = sub_1C032F04C(&qword_1EA199E30);
  uint64_t result = sub_1C032F04C(&qword_1EA199E38);
  a1[3] = result;
  return result;
}

uint64_t sub_1C032F04C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatAnimationNodeGroupAnimation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C032F08C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C086694C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C032F0B8(void *a1)
{
  return FormatAnimationNodeGroupAnimation.encode(to:)(a1);
}

BOOL sub_1C032F0DC(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed024FormatAnimationNodeGroupD0C2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t method lookup function for FormatAnimationNodeGroupAnimation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAnimationNodeGroupAnimation);
}

uint64_t dispatch thunk of FormatAnimationNodeGroupAnimation.__allocating_init(animations:mediaTiming:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C032F114@<X0>(uint64_t result@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v5 = *a2;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    unint64_t v8 = v5 >> 62;
    if (v5 >> 62)
    {
      uint64_t v9 = v5 & 0x3FFFFFFFFFFFFFFFLL;
      if (v8 == 1)
      {
        swift_retain();
        uint64_t v10 = swift_retain();
        uint64_t v11 = sub_1C0BCFAD4(v10);
      }
      else
      {
        uint64_t v13 = *(void *)(v9 + 16);
        swift_retain();
        swift_retain();
        uint64_t v11 = (void *)sub_1C032F514(a3, v13);
      }
    }
    else
    {
      swift_retain();
      uint64_t v12 = swift_retain();
      uint64_t v11 = sub_1C0D39298(v12);
    }
    __int16 v14 = v11;
    swift_release();
    swift_release();
    *(void *)(inited + 56) = &type metadata for FormatInspection;
    *(void *)(inited + 64) = &off_1F1C29D30;
    *(void *)(inited + 32) = v14;
    uint64_t v15 = sub_1C0233FC8(inited);
    swift_setDeallocating();
    sub_1C01004D8();
    swift_arrayDestroy();
    long long v16 = sub_1C131B79C(v15);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x6F6974616D696E41, 0xEA0000000000206ELL, (uint64_t)v16, 0, 0, a4);
    uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a4, 0, 1, v17);
  }
  return result;
}

uint64_t sub_1C032F344(uint64_t a1, void (*a2)(uint64_t, uint64_t *), uint64_t a3)
{
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1C0181BEC(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1C05F62D0(0, 0, 0);
  uint64_t v8 = v21;
  uint64_t v9 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v16 = v9;
  v15[1] = a1;
  if (v9)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = *(void *)(a1 + 32 + 8 * v10);
      uint64_t v19 = v10;
      uint64_t v20 = v11;
      swift_retain();
      v17(v10, &v20);
      swift_release();
      uint64_t v21 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C05F62D0(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v21;
      }
      ++v10;
      *(void *)(v8 + 16) = v13 + 1;
      sub_1C032F9D8((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, (uint64_t (*)(void))sub_1C0181BEC);
    }
    while (v16 != v10);
  }
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1C032F514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  long long v23 = xmmword_1C1529AE0;
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v4);
  sub_1C0181BEC(0);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v23;
  uint64_t v9 = (void *)(v8 + v7);
  sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v4);
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = v23;
  if (a2)
  {
    sub_1C032F9D8(a2 + 24, (uint64_t)v24, (uint64_t (*)(void))sub_1C00F652C);
    sub_1C00F6940((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
  }
  else
  {
    sub_1C032F954((uint64_t)v24);
  }
  sub_1C032F9D8((uint64_t)v24, (uint64_t)v26, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C032F9D8((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))sub_1C00F652C);
  uint64_t v11 = sub_1C0A5C3AC((uint64_t)v24);
  sub_1C00F6940((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
  *(void *)(v10 + 56) = &type metadata for FormatInspection;
  *(void *)(v10 + 64) = &off_1F1C29D30;
  *(void *)(v10 + 32) = v11;
  uint64_t v12 = sub_1C0233FC8(v10);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  unint64_t v13 = sub_1C131B79C(v12);
  swift_bridgeObjectRelease();
  sub_1C042F458(1701869908, 0xE400000000000000, (uint64_t)v13, 0x70756F7247, 0xE500000000000000, v9);
  uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v15 = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  if (a2)
  {
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v15 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v15);
  v22[2] = a1;
  uint64_t v17 = sub_1C032F344(v16, (void (*)(uint64_t, uint64_t *))sub_1C032F988, (uint64_t)v22);
  swift_bridgeObjectRelease();
  *(void *)&v24[0] = v8;
  sub_1C1048574(v17);
  sub_1C09BCFA4(0x6F6974616D696E41, 0xE90000000000006ELL, 0, 0, *(uint64_t *)&v24[0], v24);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v18 = swift_allocObject();
  *(void *)(inited + 32) = v18;
  *(void *)(v18 + 48) = v25;
  long long v19 = v24[1];
  *(_OWORD *)(v18 + 16) = v24[0];
  *(_OWORD *)(v18 + 32) = v19;
  uint64_t v20 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v20;
}

double sub_1C032F954(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(unsigned char *)(a1 + 136) = 0;
  return result;
}

uint64_t sub_1C032F988@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_1C032F114(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_1C032F990()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C032F9D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C032FA40(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1C0336344(a1, (uint64_t)sub_1C03369A0, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

id sub_1C032FACC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(self, sel_defaultSessionConfiguration);
    id v4 = objc_msgSend(self, sel_sessionWithConfiguration_, v3);

    uint64_t v5 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t sub_1C032FB70()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v62 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1C15156FC();
  uint64_t v63 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v61 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C002FEFC(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v65 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v59 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v51 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v64 = (char *)&v51 - v19;
  if (qword_1EA194628 != -1) {
    swift_once();
  }
  sub_1C0336B44(&qword_1EA199E90, v18, (void (*)(uint64_t))type metadata accessor for DebugNewsroomService);
  uint64_t v20 = v2;
  sub_1C1516FBC();
  uint64_t v22 = v68;
  unint64_t v21 = v69;
  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v23 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23) {
    goto LABEL_15;
  }
  if (qword_1EA194630 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  uint64_t v25 = v68;
  unint64_t v24 = v69;
  swift_bridgeObjectRelease();
  uint64_t v26 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v26 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (v26)
  {
    uint64_t v54 = v4;
    uint64_t v55 = v3;
    if (qword_1EA194620 != -1) {
      swift_once();
    }
    uint64_t v56 = v20;
    sub_1C1516FBC();
    char v67 = v68;
    sub_1C00FB77C((uint64_t)v16);
    id v27 = v64;
    sub_1C1515EDC();
    uint64_t v28 = v65 + 8;
    uint64_t v58 = *(void (**)(char *, uint64_t))(v65 + 8);
    v58(v16, v12);
    uint64_t v29 = v66;
    uint64_t v30 = swift_allocBox();
    uint64_t v57 = v31;
    sub_1C151564C();
    uint64_t v32 = v63;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v11, 1, v29) == 1)
    {
      sub_1BFEC0808((uint64_t)v11, (uint64_t (*)(void))sub_1C002FEFC);
      swift_deallocBox();
      type metadata accessor for DebugNewsroomServiceError();
      sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v33, v27, v12);
      swift_storeEnumTagMultiPayload();
      sub_1C03369E8(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v34 = sub_1C151906C();
      v58(v27, v12);
    }
    else
    {
      uint64_t v51 = v28;
      uint64_t v52 = v30;
      uint64_t v36 = v57;
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v57, v11, v29);
      sub_1BFF2E51C(0, &qword_1EB87A570, MEMORY[0x1E4F26EA0], MEMORY[0x1E4FBBE00]);
      sub_1C15155DC();
      uint64_t v53 = v12;
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1527210;
      sub_1C1516FBC();
      sub_1C15155AC();
      swift_bridgeObjectRelease();
      uint64_t v37 = v53;
      sub_1C1516FBC();
      sub_1C15155AC();
      swift_bridgeObjectRelease();
      sub_1C151560C();
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
      uint64_t v39 = v61;
      v38(v61, v36, v66);
      uint64_t v40 = (uint64_t)v62;
      sub_1C151565C();
      uint64_t v41 = v66;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v66);
      uint64_t v42 = v65;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v40, 1, v37) == 1)
      {
        sub_1BFEC0808(v40, (uint64_t (*)(void))sub_1BFF00BEC);
        type metadata accessor for DebugNewsroomServiceError();
        sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
        swift_allocError();
        v38(v43, v57, v41);
        swift_storeEnumTagMultiPayload();
        sub_1C03369E8(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v34 = sub_1C151906C();
        v58(v64, v37);
      }
      else
      {
        uint64_t v44 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v59, v40, v37);
        sub_1C151526C();
        uint64_t v45 = swift_allocBox();
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v16, v44, v37);
        sub_1C151522C();
        sub_1C15151DC();
        id v46 = objc_msgSend(self, sel_sharedHTTPCookieStorage);
        unint64_t v47 = v60;
        sub_1C15161BC();
        unint64_t v48 = (void *)sub_1C151621C();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v47, v55);
        objc_msgSend(v46, sel_removeCookiesSinceDate_, v48);

        MEMORY[0x1F4188790](v49);
        *(&v51 - 4) = (uint64_t)v1;
        *(&v51 - 3) = v45;
        *(&v51 - 2) = v52;
        sub_1C03369E8(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v34 = sub_1C151911C();
        uint64_t v50 = v58;
        v58(v44, v37);
        v50(v64, v37);
        swift_release();
      }
      swift_release();
    }
  }
  else
  {
LABEL_15:
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    sub_1C03369E8(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  return v34;
}

void sub_1C0330768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v23 = a3;
  uint64_t v12 = sub_1C151526C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&aBlock[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_projectBox();
  swift_retain();
  id v18 = sub_1C032FACC();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
  uint64_t v19 = (void *)sub_1C15151FC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v23;
  v20[3] = a4;
  v20[4] = a6;
  v20[5] = a7;
  v20[6] = sub_1C005A48C;
  v20[7] = v16;
  aBlock[4] = sub_1C0336970;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0952BF0;
  aBlock[3] = &block_descriptor_23;
  unint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v22 = objc_msgSend(v18, sel_dataTaskWithRequest_completionHandler_, v19, v21);
  _Block_release(v21);

  objc_msgSend(v22, sel_resume);
}

void sub_1C03309D4(uint64_t a1, unint64_t a2, void *a3, void *a4, void (*a5)(void *), uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t), uint64_t a10)
{
  unint64_t v72 = a2;
  id v73 = a3;
  uint64_t v70 = a10;
  uint64_t v71 = a1;
  uint64_t v74 = a9;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C15156FC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C151526C();
  uint64_t v21 = swift_projectBox();
  uint64_t v22 = swift_projectBox();
  if (a4)
  {
    id v23 = a4;
    a5(a4);
    id v24 = a4;
LABEL_4:

    return;
  }
  char v67 = v19;
  uint64_t v68 = a6;
  uint64_t v25 = v17;
  uint64_t v26 = v15;
  unint64_t v69 = a5;
  id v27 = v73;
  if (!v73 || (uint64_t v28 = v22, self, (v29 = swift_dynamicCastObjCClass()) == 0))
  {
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    uint64_t v52 = (void *)swift_allocError();
    uint64_t v54 = v53;
    sub_1C03360A8();
    uint64_t v56 = (char *)v54 + *(int *)(v55 + 64);
    uint64_t v58 = v71;
    unint64_t v57 = v72;
    *uint64_t v54 = v27;
    v54[1] = v58;
    v54[2] = v57;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v56, v21, v20);
    swift_storeEnumTagMultiPayload();
    id v59 = v27;
    sub_1C00C2AC0(v58, v57);
    v69(v52);

    return;
  }
  uint64_t v30 = (void *)v29;
  id v73 = v27;
  uint64_t v31 = v30;
  id v32 = objc_msgSend(v30, sel_allHeaderFields);
  uint64_t v33 = sub_1C151E33C();

  unint64_t v34 = sub_1C1471C04(v33);
  swift_bridgeObjectRelease();
  unint64_t v35 = v69;
  if (!v34)
  {
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    uint64_t v60 = (void *)swift_allocError();
    unint64_t v62 = v61;
    id v63 = objc_msgSend(v31, sel_allHeaderFields);
    uint64_t v64 = sub_1C151E33C();

    *unint64_t v62 = v64;
    swift_storeEnumTagMultiPayload();
    v35(v60);

    id v24 = v73;
    goto LABEL_4;
  }
  uint64_t v36 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v37 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v67, v28, v16);
  sub_1C151565C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v37, v16);
  uint64_t v38 = sub_1C1515FDC();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v26, 1, v38) == 1) {
    goto LABEL_25;
  }
  uint64_t v40 = self;
  uint64_t v41 = (void *)sub_1C1515E9C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v38);
  id v42 = objc_msgSend(v40, sel_cookiesWithResponseHeaderFields_forURL_, v36, v41);

  sub_1BFC39268(0, &qword_1EA199E58);
  unint64_t v43 = sub_1C151EBCC();

  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v45 = v74;
    if (v44) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v45 = v74;
    if (v44)
    {
LABEL_11:
      uint64_t v46 = self;
      if (v44 >= 1)
      {
        unint64_t v47 = (void *)v46;
        uint64_t v48 = 0;
        do
        {
          if ((v43 & 0xC000000000000001) != 0) {
            id v49 = (id)MEMORY[0x1C18C7CB0](v48, v43);
          }
          else {
            id v49 = *(id *)(v43 + 8 * v48 + 32);
          }
          uint64_t v50 = v49;
          ++v48;
          id v51 = objc_msgSend(v47, sel_sharedHTTPCookieStorage);
          objc_msgSend(v51, sel_setCookie_, v50);

          uint64_t v45 = v74;
        }
        while (v44 != v48);
        goto LABEL_22;
      }
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
  }
LABEL_22:
  uint64_t v65 = swift_bridgeObjectRelease();
  v45(v65);
}

uint64_t sub_1C0331070(unint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v44 = *v3;
  uint64_t v7 = sub_1C151526C();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v50 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v49 = (char *)&v43 - v16;
  uint64_t v17 = sub_1C151635C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03369E8(0, &qword_1EA199EC8, (uint64_t)&type metadata for MIMEPart, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C02D2A68(a1, a2);
  *(void *)(v21 + 32) = 0x7461642D6D726F66;
  *(void *)(v21 + 40) = 0xE900000000000061;
  *(_OWORD *)(v21 + 48) = xmmword_1C153D820;
  *(_OWORD *)(v21 + 64) = 0u;
  *(_OWORD *)(v21 + 80) = 0u;
  *(void *)(v21 + 96) = v22;
  *(void *)(v21 + 104) = v23;
  uint64_t v25 = *a3;
  uint64_t v24 = a3[1];
  uint64_t v26 = a3[4];
  uint64_t v27 = a3[5];
  uint64_t v29 = a3[2];
  unint64_t v28 = a3[3];
  *(void *)(v21 + 112) = 0x7461642D6D726F66;
  *(void *)(v21 + 120) = 0xE900000000000061;
  *(_OWORD *)(v21 + 128) = xmmword_1C153D830;
  *(void *)(v21 + 144) = v25;
  *(void *)(v21 + 152) = v24;
  *(void *)(v21 + 160) = v26;
  *(void *)(v21 + 168) = v27;
  *(void *)(v21 + 176) = v29;
  *(void *)(v21 + 184) = v28;
  unint64_t v52 = 0x646565467377654ELL;
  unint64_t v53 = 0xE90000000000002DLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFE95820(v29, v28);
  sub_1C151634C();
  sub_1C151633C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v31 = v52;
  uint64_t v32 = v53;
  if (qword_1EA194620 != -1) {
    swift_once();
  }
  sub_1C0336B44(&qword_1EA199E90, v30, (void (*)(uint64_t))type metadata accessor for DebugNewsroomService);
  sub_1C1516FBC();
  char v51 = v52;
  sub_1C00FB77C((uint64_t)v14);
  uint64_t v33 = v49;
  sub_1C1515EDC();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v34 = v50;
  v44(v14, v50);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v33, v34);
  sub_1C151522C();
  sub_1C15151DC();
  unint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  unint64_t v52 = 0xD00000000000001ELL;
  unint64_t v53 = 0x80000001C160ACD0;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151525C();
  swift_bridgeObjectRelease();
  sub_1C03316B0(v31, v32, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151524C();
  sub_1C0334970((uint64_t)v11);
  unint64_t v35 = v46;
  uint64_t v36 = v47;
  uint64_t v37 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v11, v48);
  unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v39 + v38, v35, v37);
  uint64_t v40 = (void *)sub_1C1518E7C();
  uint64_t v41 = sub_1C1518FFC();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  v44(v49, v50);
  return v41;
}

uint64_t sub_1C03316B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v4 = sub_1C02D2A68(0x2D2DuLL, 0xE200000000000000);
  unint64_t v30 = v5;
  uint64_t v31 = v4;
  long long v34 = xmmword_1C153A9A0;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)(a3 + 56);
    do
    {
      uint64_t v8 = *v7;
      uint64_t v9 = v7[2];
      uint64_t v10 = v7[4];
      uint64_t v32 = v6;
      uint64_t v11 = v7[5];
      unint64_t v12 = v7[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = v12;
      sub_1BFE95820(v11, v12);
      sub_1C151609C();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v33[0] = 0xD000000000000015;
      v33[1] = 0x80000001C160ACF0;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1C02D2A68(0xD000000000000015, 0x80000001C160ACF0);
      unint64_t v16 = v15;
      sub_1C151609C();
      sub_1BFE95664(v14, v16);
      if (v8)
      {
        strcpy((char *)v33, "; name=\"");
        BYTE1(v33[1]) = 0;
        WORD1(v33[1]) = 0;
        HIDWORD(v33[1]) = -402653184;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v17 = sub_1C02D2A68(v33[0], v33[1]);
        unint64_t v19 = v18;
        sub_1C151609C();
        sub_1BFE95664(v17, v19);
      }
      if (v9)
      {
        strcpy((char *)v33, "; filename=\"");
        BYTE5(v33[1]) = 0;
        HIWORD(v33[1]) = -5120;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v20 = sub_1C02D2A68(v33[0], v33[1]);
        unint64_t v22 = v21;
        sub_1C151609C();
        sub_1BFE95664(v20, v22);
      }
      if (qword_1EA194AF0 != -1) {
        swift_once();
      }
      sub_1C151609C();
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        strcpy((char *)v33, "Content-Type: ");
        HIBYTE(v33[1]) = -18;
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v23 = sub_1C02D2A68(v33[0], v33[1]);
        unint64_t v25 = v24;
        sub_1C151609C();
        sub_1BFE95664(v23, v25);
        sub_1C151609C();
      }
      sub_1C151609C();
      sub_1C151609C();
      sub_1C151609C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFE95664(v11, v13);
      v7 += 10;
      uint64_t v6 = v32 - 1;
    }
    while (v32 != 1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v26 = sub_1C02D2A68(0x2D2DuLL, 0xE200000000000000);
  unint64_t v28 = v27;
  sub_1C151609C();
  sub_1BFE95664(v31, v30);
  sub_1BFE95664(v26, v28);
  return v34;
}

uint64_t sub_1C0331B20()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1C151526C();
  uint64_t v16 = *(void *)(v6 - 8);
  uint64_t v17 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA194620 != -1) {
    swift_once();
  }
  sub_1C0336B44(&qword_1EA199E90, v7, (void (*)(uint64_t))type metadata accessor for DebugNewsroomService);
  sub_1C1516FBC();
  char v10 = v20;
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  unint64_t v18 = 0xD00000000000001ALL;
  unint64_t v19 = 0x80000001C160AC50;
  sub_1C151E80C();
  LOBYTE(v18) = v10;
  sub_1C00FB77C((uint64_t)v4);
  sub_1C1515EDC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  sub_1C151522C();
  uint64_t v11 = sub_1C15151DC();
  MEMORY[0x1F4188790](v11);
  *(&v15 - 2) = v0;
  *(&v15 - 1) = (uint64_t)v9;
  sub_1C151932C();
  unint64_t v12 = (void *)sub_1C1518E7C();
  sub_1C0336694(0, (unint64_t *)&qword_1EA198018, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, sub_1C0335F7C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
  uint64_t v13 = sub_1C1518FFC();
  swift_release();

  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v17);
  return v13;
}

uint64_t sub_1C0331ED4()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1C151526C();
  uint64_t v16 = *(void *)(v6 - 8);
  uint64_t v17 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA194620 != -1) {
    swift_once();
  }
  sub_1C0336B44(&qword_1EA199E90, v7, (void (*)(uint64_t))type metadata accessor for DebugNewsroomService);
  sub_1C1516FBC();
  char v10 = v20;
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  unint64_t v18 = 0xD000000000000019;
  unint64_t v19 = 0x80000001C160AC70;
  sub_1C151E80C();
  LOBYTE(v18) = v10;
  sub_1C00FB77C((uint64_t)v4);
  sub_1C1515EDC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  sub_1C151522C();
  uint64_t v11 = sub_1C15151DC();
  MEMORY[0x1F4188790](v11);
  *(&v15 - 2) = v0;
  *(&v15 - 1) = (uint64_t)v9;
  sub_1C151932C();
  unint64_t v12 = (void *)sub_1C1518E7C();
  sub_1C0336694(0, (unint64_t *)&qword_1EA198028, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, sub_1C0336820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
  uint64_t v13 = sub_1C1518FFC();
  swift_release();

  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v17);
  return v13;
}

uint64_t sub_1C0332288(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = *v3;
  uint64_t v6 = sub_1C151526C();
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v31 - v14;
  uint64_t v16 = v41;
  uint64_t v17 = sub_1C0332748();
  if (!v16)
  {
    v31[1] = a1;
    uint64_t v32 = v12;
    uint64_t v33 = v10;
    unint64_t v34 = v18;
    unint64_t v35 = v17;
    uint64_t v36 = v8;
    uint64_t v37 = v15;
    uint64_t v38 = 0;
    uint64_t v41 = v6;
    if (qword_1EA194620 != -1) {
      swift_once();
    }
    sub_1C0336B44(&qword_1EA199E90, v18, (void (*)(uint64_t))type metadata accessor for DebugNewsroomService);
    unint64_t v19 = v3;
    sub_1C1516FBC();
    char v20 = v44;
    unint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xD00000000000001ALL;
    unint64_t v43 = 0x80000001C160AC50;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    LOBYTE(v42) = v20;
    uint64_t v21 = (uint64_t)v32;
    sub_1C00FB77C((uint64_t)v32);
    unint64_t v22 = v37;
    sub_1C1515EDC();
    uint64_t v23 = v33;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    uint64_t v24 = v9;
    v39(v21, v9);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v21, v22, v9);
    unint64_t v25 = v36;
    sub_1C151522C();
    sub_1C15151DC();
    sub_1C151525C();
    unint64_t v27 = v34;
    uint64_t v26 = (uint64_t)v35;
    sub_1BFE95820((uint64_t)v35, v34);
    uint64_t v28 = sub_1C151524C();
    MEMORY[0x1F4188790](v28);
    v31[-2] = v19;
    v31[-1] = v25;
    sub_1C151932C();
    uint64_t v29 = (void *)sub_1C1518E7C();
    sub_1C0336694(0, (unint64_t *)&qword_1EA198018, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, sub_1C0335F7C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
    a2 = sub_1C1518FFC();
    swift_release();

    sub_1BFE95664(v26, v27);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v41);
    v39((uint64_t)v22, v24);
  }
  return a2;
}

char *sub_1C0332748()
{
  uint64_t v2 = v0;
  v24[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C151536C();
  swift_allocObject();
  sub_1C151535C();
  type metadata accessor for DebugNewsroomLayoutData();
  sub_1C0336B44(&qword_1EA199EC0, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData);
  uint64_t v3 = sub_1C151533C();
  unint64_t v5 = v4;
  swift_release();
  if (!v1)
  {
    uint64_t v6 = self;
    uint64_t v7 = (void *)sub_1C151605C();
    v24[0] = 0;
    id v8 = objc_msgSend(v6, sel_JSONObjectWithData_options_error_, v7, 0, v24);

    if (v8)
    {
      id v9 = v24[0];
      sub_1C151FF3C();
      swift_unknownObjectRelease();
      sub_1C0336714();
      if (swift_dynamicCast())
      {
        sub_1C0336694(0, (unint64_t *)&qword_1EA198018, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, sub_1C0335F7C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
        uint64_t v11 = *(int *)(v10 + 40);
        uint64_t v12 = *(void *)&v2[v11];
        if (*(void *)(v12 + 16))
        {
          unint64_t v13 = sub_1BFEF2D8C(0xD000000000000017, 0x80000001C160AC90);
          if (v14)
          {
            v24[0] = *(id *)(*(void *)(v12 + 56) + 8 * v13);
            swift_unknownObjectRetain();
            if (swift_dynamicCast())
            {
              sub_1C032FA40(v23, v23);
              uint64_t v15 = *(void **)&v2[v11];
              swift_bridgeObjectRetain();
              uint64_t v16 = sub_1C151E32C();
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v24[0] = v15;
              sub_1C10672BC(v16, 0xD000000000000017, 0x80000001C160AC90, isUniquelyReferenced_nonNull_native);
              swift_bridgeObjectRelease();
              uint64_t v18 = (void *)sub_1C151E32C();
              swift_bridgeObjectRelease();
              v24[0] = 0;
              id v19 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v18, 0, v24);

              char v20 = (char *)v24[0];
              if (v19)
              {
                uint64_t v2 = (char *)sub_1C151606C();
                sub_1BFE95664(v3, v5);

                return v2;
              }
              uint64_t v2 = v20;
              sub_1C1515D3C();

LABEL_12:
              swift_willThrow();
              sub_1BFE95664(v3, v5);
              return v2;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
      type metadata accessor for DebugNewsroomServiceError();
      sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      goto LABEL_12;
    }
    id v21 = v24[0];
    sub_1C1515D3C();

    goto LABEL_12;
  }
  return v2;
}

char *sub_1C0332B84()
{
  uint64_t v2 = v0;
  v24[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C151536C();
  swift_allocObject();
  sub_1C151535C();
  type metadata accessor for DebugNewsroomThemeData();
  sub_1C0336B44(&qword_1EA199ED0, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData);
  uint64_t v3 = sub_1C151533C();
  unint64_t v5 = v4;
  swift_release();
  if (!v1)
  {
    uint64_t v6 = self;
    uint64_t v7 = (void *)sub_1C151605C();
    v24[0] = 0;
    id v8 = objc_msgSend(v6, sel_JSONObjectWithData_options_error_, v7, 0, v24);

    if (v8)
    {
      id v9 = v24[0];
      sub_1C151FF3C();
      swift_unknownObjectRelease();
      sub_1C0336714();
      if (swift_dynamicCast())
      {
        sub_1C0336694(0, (unint64_t *)&qword_1EA198028, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, sub_1C0336820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
        uint64_t v11 = *(int *)(v10 + 40);
        uint64_t v12 = *(void *)&v2[v11];
        if (*(void *)(v12 + 16))
        {
          unint64_t v13 = sub_1BFEF2D8C(0xD000000000000016, 0x80000001C160AD10);
          if (v14)
          {
            v24[0] = *(id *)(*(void *)(v12 + 56) + 8 * v13);
            swift_unknownObjectRetain();
            if (swift_dynamicCast())
            {
              sub_1C032FA40(v23, v23);
              uint64_t v15 = *(void **)&v2[v11];
              swift_bridgeObjectRetain();
              uint64_t v16 = sub_1C151E32C();
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v24[0] = v15;
              sub_1C10672BC(v16, 0xD000000000000016, 0x80000001C160AD10, isUniquelyReferenced_nonNull_native);
              swift_bridgeObjectRelease();
              uint64_t v18 = (void *)sub_1C151E32C();
              swift_bridgeObjectRelease();
              v24[0] = 0;
              id v19 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v18, 0, v24);

              char v20 = (char *)v24[0];
              if (v19)
              {
                uint64_t v2 = (char *)sub_1C151606C();
                sub_1BFE95664(v3, v5);

                return v2;
              }
              uint64_t v2 = v20;
              sub_1C1515D3C();

LABEL_12:
              swift_willThrow();
              sub_1BFE95664(v3, v5);
              return v2;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
      type metadata accessor for DebugNewsroomServiceError();
      sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      goto LABEL_12;
    }
    id v21 = v24[0];
    sub_1C1515D3C();

    goto LABEL_12;
  }
  return v2;
}

uint64_t sub_1C0332FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = *v3;
  uint64_t v6 = sub_1C151526C();
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v31 - v14;
  uint64_t v16 = v41;
  uint64_t v17 = sub_1C0332B84();
  if (!v16)
  {
    v31[1] = a1;
    uint64_t v32 = v12;
    uint64_t v33 = v10;
    unint64_t v34 = v18;
    unint64_t v35 = v17;
    uint64_t v36 = v8;
    uint64_t v37 = v15;
    uint64_t v38 = 0;
    uint64_t v41 = v6;
    if (qword_1EA194620 != -1) {
      swift_once();
    }
    sub_1C0336B44(&qword_1EA199E90, v18, (void (*)(uint64_t))type metadata accessor for DebugNewsroomService);
    id v19 = v3;
    sub_1C1516FBC();
    char v20 = v44;
    unint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xD000000000000019;
    unint64_t v43 = 0x80000001C160AC70;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    LOBYTE(v42) = v20;
    uint64_t v21 = (uint64_t)v32;
    sub_1C00FB77C((uint64_t)v32);
    unint64_t v22 = v37;
    sub_1C1515EDC();
    uint64_t v23 = v33;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    uint64_t v24 = v9;
    v39(v21, v9);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v21, v22, v9);
    unint64_t v25 = v36;
    sub_1C151522C();
    sub_1C15151DC();
    sub_1C151525C();
    unint64_t v27 = v34;
    uint64_t v26 = (uint64_t)v35;
    sub_1BFE95820((uint64_t)v35, v34);
    uint64_t v28 = sub_1C151524C();
    MEMORY[0x1F4188790](v28);
    v31[-2] = v19;
    v31[-1] = v25;
    sub_1C151932C();
    uint64_t v29 = (void *)sub_1C1518E7C();
    sub_1C0336694(0, (unint64_t *)&qword_1EA198028, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, sub_1C0336820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
    a2 = sub_1C1518FFC();
    swift_release();

    sub_1BFE95664(v26, v27);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v41);
    v39((uint64_t)v22, v24);
  }
  return a2;
}

uint64_t sub_1C0333480(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C151526C();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v62 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v66 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v60 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v61 = (char *)&v59 - v12;
  uint64_t v13 = sub_1C151928C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC3EE8();
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  char v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v59 - v25;
  __n128 v28 = MEMORY[0x1F4188790](v27);
  unint64_t v30 = (char *)&v59 - v29;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  uint64_t v65 = a1;
  v31((char *)&v59 - v29, a1, v13, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
  uint64_t v32 = *(int *)(type metadata accessor for DebugNewsroomLayoutData() + 52);
  unint64_t v69 = a2;
  sub_1BFEBF750((uint64_t)a2 + v32, (uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
  uint64_t v33 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_1BFEBF750((uint64_t)v30, (uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEBF750((uint64_t)v26, v33, (uint64_t (*)(void))sub_1BFEC0CE8);
  unint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v34((uint64_t)v20, 1, v13) == 1)
  {
    sub_1BFEC0808((uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
    sub_1BFEC0808((uint64_t)v30, (uint64_t (*)(void))sub_1BFEC0CE8);
    if (v34(v33, 1, v13) == 1)
    {
      sub_1BFEC0808((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
      unint64_t v35 = v69;
      goto LABEL_8;
    }
LABEL_6:
    sub_1BFEC0808((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC3EE8);
    unint64_t v35 = v69;
    goto LABEL_10;
  }
  sub_1BFEBF750((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(void))sub_1BFEC0CE8);
  if (v34(v33, 1, v13) == 1)
  {
    sub_1BFEC0808((uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
    sub_1BFEC0808((uint64_t)v30, (uint64_t (*)(void))sub_1BFEC0CE8);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v33, v13);
  sub_1C0336B44(&qword_1EB85C8B8, 255, MEMORY[0x1E4FAB0A8]);
  char v36 = sub_1C151E5CC();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v14 + 8);
  v37(v16, v13);
  sub_1BFEC0808((uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEC0808((uint64_t)v30, (uint64_t (*)(void))sub_1BFEC0CE8);
  v37(v23, v13);
  sub_1BFEC0808((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
  unint64_t v35 = v69;
  if ((v36 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v38 = v35[8];
  if (!v38)
  {
LABEL_10:
    uint64_t v43 = v35[13];
    if (v43)
    {
      uint64_t v44 = sub_1C151920C();
      uint64_t v46 = (uint64_t)v66;
      uint64_t v47 = v67;
      if (*(void *)(v43 + 16) && (unint64_t v48 = sub_1BFEF2D8C(v44, v45), (v49 & 1) != 0))
      {
        uint64_t v50 = *(void *)(v43 + 56);
        uint64_t v51 = v68;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v68 + 16))(v46, v50 + *(void *)(v68 + 72) * v48, v47);
        uint64_t v52 = 0;
      }
      else
      {
        uint64_t v52 = 1;
        uint64_t v51 = v68;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v46, v52, 1, v47);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v46, 1, v47) != 1)
      {
        unint64_t v53 = v61;
        (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v61, v46, v47);
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v60, v53, v47);
        uint64_t v54 = (uint64_t)v62;
        sub_1C151522C();
        sub_1C15151DC();
        sub_1C0334970(v54);
        uint64_t v55 = (void *)sub_1C1518E7C();
        sub_1C0335FB4(0);
        sub_1C1518FFC();
        swift_release();

        uint64_t v56 = (void *)sub_1C1518E7C();
        uint64_t v42 = sub_1C15190DC();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v54, v64);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v47);
        return v42;
      }
    }
    else
    {
      uint64_t v46 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v66, 1, 1, v67);
    }
    sub_1BFEC0808(v46, (uint64_t (*)(void))sub_1BFF00BEC);
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    swift_allocError();
    sub_1C033679C((uint64_t)v35, v57, (unint64_t *)&qword_1EA198018, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, sub_1C0335F7C);
    swift_storeEnumTagMultiPayload();
    sub_1BFF2E51C(0, &qword_1EA199E48, (uint64_t (*)(uint64_t))sub_1C0335FB4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  uint64_t v39 = v35[7];
  sub_1BFF2E51C(0, &qword_1EA199E48, (uint64_t (*)(uint64_t))sub_1C0335FB4, MEMORY[0x1E4FAB088]);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  *(void *)(v40 + 24) = v38;
  swift_bridgeObjectRetain();
  sub_1C151902C();
  uint64_t v41 = (void *)sub_1C1518E7C();
  uint64_t v42 = sub_1C15190DC();
  swift_release();

  return v42;
}

id sub_1C0333E30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0334918(a1, a2);
}

uint64_t sub_1C0333E48(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C151526C();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v62 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v66 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v60 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v61 = (char *)&v59 - v12;
  uint64_t v13 = sub_1C151928C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC3EE8();
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  char v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v59 - v25;
  __n128 v28 = MEMORY[0x1F4188790](v27);
  unint64_t v30 = (char *)&v59 - v29;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  uint64_t v65 = a1;
  v31((char *)&v59 - v29, a1, v13, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
  uint64_t v32 = *(int *)(type metadata accessor for DebugNewsroomThemeData() + 48);
  unint64_t v69 = a2;
  sub_1BFEBF750((uint64_t)a2 + v32, (uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
  uint64_t v33 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_1BFEBF750((uint64_t)v30, (uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEBF750((uint64_t)v26, v33, (uint64_t (*)(void))sub_1BFEC0CE8);
  unint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v34((uint64_t)v20, 1, v13) == 1)
  {
    sub_1BFEC0808((uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
    sub_1BFEC0808((uint64_t)v30, (uint64_t (*)(void))sub_1BFEC0CE8);
    if (v34(v33, 1, v13) == 1)
    {
      sub_1BFEC0808((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
      unint64_t v35 = v69;
      goto LABEL_8;
    }
LABEL_6:
    sub_1BFEC0808((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC3EE8);
    unint64_t v35 = v69;
    goto LABEL_10;
  }
  sub_1BFEBF750((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(void))sub_1BFEC0CE8);
  if (v34(v33, 1, v13) == 1)
  {
    sub_1BFEC0808((uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
    sub_1BFEC0808((uint64_t)v30, (uint64_t (*)(void))sub_1BFEC0CE8);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v33, v13);
  sub_1C0336B44(&qword_1EB85C8B8, 255, MEMORY[0x1E4FAB0A8]);
  char v36 = sub_1C151E5CC();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v14 + 8);
  v37(v16, v13);
  sub_1BFEC0808((uint64_t)v26, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEC0808((uint64_t)v30, (uint64_t (*)(void))sub_1BFEC0CE8);
  v37(v23, v13);
  sub_1BFEC0808((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
  unint64_t v35 = v69;
  if ((v36 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v38 = v35[6];
  if (!v38)
  {
LABEL_10:
    uint64_t v43 = v35[12];
    if (v43)
    {
      uint64_t v44 = sub_1C151920C();
      uint64_t v46 = (uint64_t)v66;
      uint64_t v47 = v67;
      if (*(void *)(v43 + 16) && (unint64_t v48 = sub_1BFEF2D8C(v44, v45), (v49 & 1) != 0))
      {
        uint64_t v50 = *(void *)(v43 + 56);
        uint64_t v51 = v68;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v68 + 16))(v46, v50 + *(void *)(v68 + 72) * v48, v47);
        uint64_t v52 = 0;
      }
      else
      {
        uint64_t v52 = 1;
        uint64_t v51 = v68;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v46, v52, 1, v47);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v46, 1, v47) != 1)
      {
        unint64_t v53 = v61;
        (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v61, v46, v47);
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v60, v53, v47);
        uint64_t v54 = (uint64_t)v62;
        sub_1C151522C();
        sub_1C15151DC();
        sub_1C0334970(v54);
        uint64_t v55 = (void *)sub_1C1518E7C();
        sub_1C0335FB4(0);
        sub_1C1518FFC();
        swift_release();

        uint64_t v56 = (void *)sub_1C1518E7C();
        uint64_t v42 = sub_1C15190DC();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v54, v64);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v47);
        return v42;
      }
    }
    else
    {
      uint64_t v46 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v66, 1, 1, v67);
    }
    sub_1BFEC0808(v46, (uint64_t (*)(void))sub_1BFF00BEC);
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    swift_allocError();
    sub_1C033679C((uint64_t)v35, v57, (unint64_t *)&qword_1EA198028, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, sub_1C0336820);
    swift_storeEnumTagMultiPayload();
    sub_1BFF2E51C(0, &qword_1EA199E48, (uint64_t (*)(uint64_t))sub_1C0335FB4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  uint64_t v39 = v35[5];
  sub_1BFF2E51C(0, &qword_1EA199E48, (uint64_t (*)(uint64_t))sub_1C0335FB4, MEMORY[0x1E4FAB088]);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  *(void *)(v40 + 24) = v38;
  swift_bridgeObjectRetain();
  sub_1C151902C();
  uint64_t v41 = (void *)sub_1C1518E7C();
  uint64_t v42 = sub_1C15190DC();
  swift_release();

  return v42;
}

uint64_t sub_1C03347F8(unint64_t a1, unint64_t a2)
{
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  type metadata accessor for FormatFile();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C02D2A68(a1, a2);
  unint64_t v7 = v6;
  sub_1C0336B44(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
  sub_1C1517D9C();
  sub_1BFE95664(v5, v7);
  uint64_t result = swift_release();
  if (!v2)
  {
    sub_1C0335FB4(0);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

id sub_1C0334918@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  sub_1C0335FB4(0);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C0334970(uint64_t a1)
{
  uint64_t v2 = sub_1C151526C();
  swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v3, a1, v2);
  id v4 = objc_msgSend(self, sel_sharedHTTPCookieStorage);
  id v5 = objc_msgSend(v4, sel_cookies);

  if (v5)
  {
    sub_1BFC39268(0, &qword_1EA199E58);
    sub_1C151EBCC();
  }
  unint64_t v6 = self;
  sub_1BFC39268(0, &qword_1EA199E58);
  unint64_t v7 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_requestHeaderFieldsWithCookies_, v7);

  sub_1C151E33C();
  uint64_t v9 = sub_1C151521C();
  MEMORY[0x1F4188790](v9);
  sub_1C03369E8(0, (unint64_t *)&qword_1EA199E60, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v10 = sub_1C151911C();
  swift_release();
  return v10;
}

uint64_t sub_1C0334B90()
{
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  type metadata accessor for FormatFile();
  sub_1C0336B44(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
  sub_1C1517D9C();
  uint64_t result = swift_release();
  if (!v0)
  {
    sub_1C0335FB4(0);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1C0334C84@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C151E68C();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C151E67C();
  uint64_t result = sub_1C151E64C();
  if (v6)
  {
    *a2 = result;
    a2[1] = v6;
  }
  else
  {
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C151526C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0334DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C151526C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  sub_1C0334970(a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v8 = (void *)sub_1C1518E7C();
  uint64_t v9 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1C0334F5C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v24[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C033664C(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C02D2A68(a1, a2);
  unint64_t v12 = v11;
  uint64_t v13 = self;
  uint64_t v14 = (void *)sub_1C151605C();
  v24[0] = 0;
  id v15 = objc_msgSend(v13, sel_JSONObjectWithData_options_error_, v14, 0, v24);

  if (!v15)
  {
    id v19 = v24[0];
    sub_1C1515D3C();

LABEL_7:
    swift_willThrow();
    return sub_1BFE95664(v10, v12);
  }
  id v16 = v24[0];
  sub_1C151FF3C();
  swift_unknownObjectRelease();
  sub_1C0336714();
  if ((swift_dynamicCast() & 1) == 0)
  {
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  uint64_t v17 = v23;
  sub_1C1517DCC();
  swift_allocObject();
  sub_1C1517DBC();
  sub_1C0336B44(&qword_1EA199EA8, 255, sub_1C033664C);
  sub_1C1517D9C();
  sub_1BFE95664(v10, v12);
  swift_release();
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  sub_1C0336694(0, (unint64_t *)&qword_1EA198018, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, sub_1C0335F7C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
  uint64_t v21 = v20;
  uint64_t v22 = a3 + *(int *)(v20 + 36);
  sub_1BFEBF750((uint64_t)v9, v22, (uint64_t (*)(void))sub_1C033664C);
  sub_1BFEBF750(v22, a3, (uint64_t (*)(void))type metadata accessor for DebugNewsroomLayoutData);
  *(void *)(a3 + *(int *)(v21 + 40)) = v17;
  return sub_1BFEC0808((uint64_t)v9, (uint64_t (*)(void))sub_1C033664C);
}

uint64_t sub_1C03352E8@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v24[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C0336894(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C02D2A68(a1, a2);
  unint64_t v12 = v11;
  uint64_t v13 = self;
  uint64_t v14 = (void *)sub_1C151605C();
  v24[0] = 0;
  id v15 = objc_msgSend(v13, sel_JSONObjectWithData_options_error_, v14, 0, v24);

  if (!v15)
  {
    id v19 = v24[0];
    sub_1C1515D3C();

LABEL_7:
    swift_willThrow();
    return sub_1BFE95664(v10, v12);
  }
  id v16 = v24[0];
  sub_1C151FF3C();
  swift_unknownObjectRelease();
  sub_1C0336714();
  if ((swift_dynamicCast() & 1) == 0)
  {
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  uint64_t v17 = v23;
  sub_1C1517DCC();
  swift_allocObject();
  sub_1C1517DBC();
  sub_1C0336B44(&qword_1EA199EB8, 255, sub_1C0336894);
  sub_1C1517D9C();
  sub_1BFE95664(v10, v12);
  swift_release();
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  sub_1C0336694(0, (unint64_t *)&qword_1EA198028, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, sub_1C0336820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
  uint64_t v21 = v20;
  uint64_t v22 = a3 + *(int *)(v20 + 36);
  sub_1BFEBF750((uint64_t)v9, v22, (uint64_t (*)(void))sub_1C0336894);
  sub_1BFEBF750(v22, a3, (uint64_t (*)(void))type metadata accessor for DebugNewsroomThemeData);
  *(void *)(a3 + *(int *)(v21 + 40)) = v17;
  return sub_1BFEC0808((uint64_t)v9, (uint64_t (*)(void))sub_1C0336894);
}

void sub_1C0335674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1C151526C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = swift_projectBox();
  swift_retain();
  id v17 = sub_1C032FACC();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  uint64_t v18 = (void *)sub_1C15151FC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v19 = (void *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a6;
  v19[5] = sub_1C0336028;
  v19[6] = v15;
  aBlock[4] = sub_1C0336078;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0952BF0;
  aBlock[3] = &block_descriptor_17;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v21 = objc_msgSend(v17, sel_dataTaskWithRequest_completionHandler_, v18, v20);
  _Block_release(v20);

  objc_msgSend(v21, sel_resume);
}

void sub_1C03358D0(uint64_t a1, unint64_t a2, void *a3, void *a4, void (*a5)(void *), uint64_t a6, uint64_t a7, void (*a8)(uint64_t, unint64_t))
{
  uint64_t v13 = sub_1C151E68C();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v14 = sub_1C151526C();
  uint64_t v15 = swift_projectBox();
  if (a4)
  {
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    uint64_t v16 = (void *)swift_allocError();
    uint64_t v18 = v17;
    sub_1C03362B4();
    uint64_t v20 = (char *)v18 + *(int *)(v19 + 48);
    *uint64_t v18 = a4;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v20, v15, v14);
    swift_storeEnumTagMultiPayload();
    id v21 = a4;
    a5(v16);

    return;
  }
  uint64_t v48 = v14;
  if (!a3 || (self, (uint64_t v22 = swift_dynamicCastObjCClass()) == 0))
  {
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    uint64_t v27 = (void *)swift_allocError();
    uint64_t v29 = v28;
    sub_1C03360A8();
    uint64_t v31 = (char *)v29 + *(int *)(v30 + 64);
    *uint64_t v29 = a3;
    v29[1] = a1;
    v29[2] = a2;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t))(*(void *)(v48 - 8) + 16))(v31, v15);
    swift_storeEnumTagMultiPayload();
    id v32 = a3;
    sub_1C00C2AC0(a1, a2);
    a5(v27);

    return;
  }
  uint64_t v23 = (void *)v22;
  id v47 = a3;
  if (objc_msgSend(v23, sel_statusCode) == (id)200)
  {
    if (a2 >> 60 != 15)
    {
      sub_1BFE95820(a1, a2);
      a8(a1, a2);
      sub_1BFE95878(a1, a2);
      goto LABEL_18;
    }
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    uint64_t v24 = (void *)swift_allocError();
    uint64_t v26 = v25;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v26, v15, v14);
    goto LABEL_17;
  }
  if (a2 >> 60 == 15)
  {
LABEL_16:
    type metadata accessor for DebugNewsroomServiceError();
    sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
    uint64_t v24 = (void *)swift_allocError();
    uint64_t v42 = v41;
    sub_1C03361C0();
    uint64_t v44 = (char *)v42 + *(int *)(v43 + 64);
    id v45 = objc_msgSend(v23, sel_statusCode);
    v42[1] = 0;
    v42[2] = 0;
    *uint64_t v42 = v45;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v44, v15, v14);
LABEL_17:
    swift_storeEnumTagMultiPayload();
    a5(v24);

    goto LABEL_18;
  }
  sub_1BFE95820(a1, a2);
  sub_1C151E67C();
  sub_1C0336260();
  uint64_t v33 = sub_1C151E65C();
  if (!v34)
  {
    sub_1BFE95878(a1, a2);
    goto LABEL_16;
  }
  uint64_t v35 = v34;
  uint64_t v46 = v33;
  type metadata accessor for DebugNewsroomServiceError();
  sub_1C0336B44(&qword_1EA199E40, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomServiceError);
  char v36 = (void *)swift_allocError();
  uint64_t v38 = v37;
  sub_1C03361C0();
  uint64_t v40 = (char *)v38 + *(int *)(v39 + 64);
  *uint64_t v38 = objc_msgSend(v23, sel_statusCode);
  v38[1] = v46;
  v38[2] = v35;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v40, v15, v48);
  swift_storeEnumTagMultiPayload();
  a5(v36);

  sub_1BFE95878(a1, a2);
LABEL_18:
}

uint64_t type metadata accessor for DebugNewsroomService()
{
  return self;
}

uint64_t sub_1C0335F7C()
{
  return sub_1C0336B44(&qword_1EA198020, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData);
}

void sub_1C0335FB4(uint64_t a1)
{
}

uint64_t sub_1C0335FE8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0336020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0335674(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C0336028(uint64_t a1, uint64_t a2)
{
  return sub_1C1149798(a1, a2, *(uint64_t (**)(void *))(v2 + 16));
}

uint64_t sub_1C0336030()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0336078(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  sub_1C03358D0(a1, a2, a3, a4, *(void (**)(void *))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void (**)(uint64_t, unint64_t))(v4 + 40));
}

void sub_1C03360A8()
{
  if (!qword_1EA199E68)
  {
    sub_1C0336158();
    sub_1C03369E8(255, &qword_1EB863678, MEMORY[0x1E4F277C0], MEMORY[0x1E4FBB718]);
    sub_1C151526C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA199E68);
    }
  }
}

void sub_1C0336158()
{
  if (!qword_1EA199E70)
  {
    sub_1BFC39268(255, &qword_1EA1986C0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA199E70);
    }
  }
}

void sub_1C03361C0()
{
  if (!qword_1EA199E78)
  {
    sub_1C03369E8(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1C151526C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA199E78);
    }
  }
}

unint64_t sub_1C0336260()
{
  unint64_t result = qword_1EA199E80;
  if (!qword_1EA199E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199E80);
  }
  return result;
}

void sub_1C03362B4()
{
  if (!qword_1EA199E88)
  {
    sub_1C017F734();
    sub_1C151526C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA199E88);
    }
  }
}

uint64_t sub_1C0336328()
{
  return sub_1C0334DE8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0336344(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1C0DB5AD8();
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v13 = (void *)*a5;
  unint64_t v15 = sub_1BFEF2D8C(v7, v8);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      uint64_t v22 = (void *)*a5;
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1C106E4B4();
      uint64_t v22 = (void *)*a5;
      if (v19) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v24 = (uint64_t *)(v22[6] + 16 * v15);
    uint64_t *v24 = v10;
    v24[1] = v11;
    *(void *)(v22[7] + 8 * v15) = v12;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v27;
LABEL_13:
    uint64_t v28 = sub_1C0DB5AD8();
    if (v29)
    {
      uint64_t v31 = v28;
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      do
      {
        uint64_t v37 = (void *)*a5;
        unint64_t v39 = sub_1BFEF2D8C(v31, v32);
        uint64_t v40 = v37[2];
        BOOL v41 = (v38 & 1) == 0;
        uint64_t v42 = v40 + v41;
        if (__OFADD__(v40, v41)) {
          goto LABEL_25;
        }
        char v43 = v38;
        if (v37[3] < v42)
        {
          sub_1C1059E58(v42, 1);
          unint64_t v44 = sub_1BFEF2D8C(v31, v32);
          if ((v43 & 1) != (v45 & 1)) {
            goto LABEL_27;
          }
          unint64_t v39 = v44;
        }
        uint64_t v46 = (void *)*a5;
        if (v43)
        {
          swift_bridgeObjectRelease();
          uint64_t v34 = v46[7];
          swift_unknownObjectRelease();
          *(void *)(v34 + 8 * v39) = v33;
        }
        else
        {
          v46[(v39 >> 6) + 8] |= 1 << v39;
          id v47 = (uint64_t *)(v46[6] + 16 * v39);
          *id v47 = v31;
          v47[1] = v32;
          *(void *)(v46[7] + 8 * v39) = v33;
          uint64_t v48 = v46[2];
          BOOL v26 = __OFADD__(v48, 1);
          uint64_t v49 = v48 + 1;
          if (v26) {
            goto LABEL_26;
          }
          v46[2] = v49;
        }
        uint64_t v31 = sub_1C0DB5AD8();
        uint64_t v32 = v35;
        uint64_t v33 = v36;
      }
      while (v35);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BFEFB808();
    return swift_release();
  }
  sub_1C1059E58(v18, a4 & 1);
  unint64_t v20 = sub_1BFEF2D8C(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    uint64_t v22 = (void *)*a5;
    if ((v19 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v23 = v22[7];
    swift_unknownObjectRelease();
    *(void *)(v23 + 8 * v15) = v12;
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C033662C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0334F5C(*a1, a1[1], a2);
}

void sub_1C033664C(uint64_t a1)
{
}

void sub_1C0336694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C0336714()
{
  if (!qword_1EA199EA0)
  {
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA199EA0);
    }
  }
}

uint64_t sub_1C0336784@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0336AC8(a1);
}

uint64_t sub_1C033679C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void))
{
  sub_1C0336694(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugNewsroomContainer);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C0336820()
{
  return sub_1C0336B44(&qword_1EA198030, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData);
}

uint64_t sub_1C0336858()
{
  return sub_1C03347F8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0336874@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C03352E8(*a1, a1[1], a2);
}

void sub_1C0336894(uint64_t a1)
{
}

void sub_1C03368DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0330768(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1C03368E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0336920()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0336970(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  sub_1C03309D4(a1, a2, a3, a4, *(void (**)(void *))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void (**)(uint64_t))(v4 + 48), *(void *)(v4 + 56));
}

uint64_t sub_1C03369A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

void sub_1C03369E8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v1 = sub_1C151526C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C0336AC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1C151526C() - 8);
  return sub_1C0334C84(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1C0336B44(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MIMEPart(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 64);
  unint64_t v3 = *(void *)(a1 + 72);
  return sub_1BFE95664(v2, v3);
}

void *initializeWithCopy for MIMEPart(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[8];
  unint64_t v8 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFE95820(v7, v8);
  a1[8] = v7;
  a1[9] = v8;
  return a1;
}

void *assignWithCopy for MIMEPart(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[8];
  unint64_t v4 = a2[9];
  sub_1BFE95820(v5, v4);
  uint64_t v6 = a1[8];
  unint64_t v7 = a1[9];
  a1[8] = v5;
  a1[9] = v4;
  sub_1BFE95664(v6, v7);
  return a1;
}

void *assignWithTake for MIMEPart(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a1[8];
  unint64_t v9 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_1BFE95664(v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for MIMEPart()
{
  return &type metadata for MIMEPart;
}

uint64_t sub_1C0336DC8()
{
  return sub_1C0336858();
}

uint64_t sub_1C0336DE0()
{
  return sub_1C0336328();
}

uint64_t sub_1C0336DF8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatNodeDebugData()
{
  return self;
}

char *sub_1C0336E64(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed14GapOfflineView_offlineLabel;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v12;
  v18.super_class = ObjectType;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  char v14 = *(void **)&v13[OBJC_IVAR____TtC8NewsFeed14GapOfflineView_offlineLabel];
  unint64_t v15 = v13;
  objc_msgSend(v15, sel_addSubview_, v14);
  objc_msgSend(v14, sel_setTextAlignment_, 1);
  id v16 = v14;
  objc_msgSend(v16, sel_setNumberOfLines_, 0);

  return v15;
}

id GapOfflineView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void GapOfflineView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed14GapOfflineView_offlineLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

id GapOfflineView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C033718C()
{
  sub_1C0080EC8(qword_1EB874CC8);
  JUMPOUT(0x1C18C4650);
}

uint64_t FormatPostPurchaseData.postPurchaseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatPostPurchaseData();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0337304(v1, (uint64_t)v5);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 2, v6))
  {
    uint64_t v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    uint64_t v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v8, 1, v6);
}

uint64_t sub_1C0337304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPostPurchaseData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPostPurchaseData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatPostPurchaseData(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for FormatPostPurchaseData(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for FormatPostPurchaseData(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for FormatPostPurchaseData(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for FormatPostPurchaseData(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPostPurchaseData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0337AA0);
}

uint64_t sub_1C0337AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FormatPostPurchaseData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0337B20);
}

uint64_t sub_1C0337B20(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C0337BA4(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1C0337C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_1C0337C7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v55 = *(void *)(v2 + 16);
  if (!v55)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_43;
  }
  unint64_t v3 = 0;
  uint64_t v54 = v2 + 32;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v53 = v2;
  while (2)
  {
    if (v3 >= *(void *)(v2 + 16))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    uint64_t v5 = (uint64_t *)(v54 + 104 * v3);
    uint64_t v6 = *v5;
    uint64_t v7 = v5[2];
    uint64_t v8 = v5[3];
    uint64_t v9 = v5[4];
    uint64_t v10 = v5[5];
    uint64_t v11 = v5[6];
    uint64_t v12 = v5[8];
    uint64_t v13 = v5[9];
    uint64_t v71 = v5[10];
    unint64_t v56 = v3;
    uint64_t v58 = v5[11];
    uint64_t v62 = v5[7];
    uint64_t v63 = v5[12];
    uint64_t v84 = v5[1];
    uint64_t v85 = v7;
    uint64_t v65 = v9;
    uint64_t v86 = v8;
    uint64_t v87 = v9;
    uint64_t v88 = v10;
    uint64_t v89 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C033ACB8(v8, v9);
    sub_1C033ACFC(v62, v12, v13, v71);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C033ACB8(v8, v9);
    uint64_t v61 = v12;
    sub_1C033ACFC(v62, v12, v13, v71);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C033ACB8(v8, v9);
    sub_1C0339EA4(&v84, &v90);
    uint64_t v14 = v92;
    uint64_t v80 = v91;
    uint64_t v81 = v90;
    uint64_t v15 = v93;
    uint64_t v16 = v94;
    uint64_t v82 = v95;
    uint64_t v83 = v96;
    if (v62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C033ACB8(v13, v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFECFD88(v8, v9);
      sub_1C033AD70(v62, v61, v13, v71);
      uint64_t v84 = v62;
      uint64_t v85 = v61;
      uint64_t v86 = v13;
      uint64_t v87 = v71;
      uint64_t v88 = v58;
      uint64_t v89 = v63;
      sub_1C0339EA4(&v84, &v90);
      uint64_t v78 = v91;
      uint64_t v79 = (uint64_t)v90;
      uint64_t v76 = v93;
      uint64_t v77 = v92;
      uint64_t v74 = v95;
      uint64_t v75 = v94;
      uint64_t v73 = v96;
      uint64_t v17 = v62;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFECFD88(v8, v9);
      sub_1C033AD70(0, v61, v13, v71);
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v76 = 0;
      uint64_t v77 = 0;
      uint64_t v74 = 0;
      uint64_t v75 = 0;
      uint64_t v73 = 0;
      uint64_t v17 = 0;
    }
    uint64_t v18 = *(void *)(v6 + 56);
    unint64_t v57 = v56 + 1;
    uint64_t v59 = v6 + 56;
    uint64_t v19 = 1 << *(unsigned char *)(v6 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFECFD88(v8, v65);
    sub_1C033AD70(v17, v61, v13, v71);
    int64_t v20 = 0;
    if (v19 < 64) {
      uint64_t v21 = ~(-1 << v19);
    }
    else {
      uint64_t v21 = -1;
    }
    unint64_t v22 = v21 & v18;
    int64_t v60 = (unint64_t)(v19 + 63) >> 6;
    uint64_t v68 = v6;
    uint64_t v69 = v16;
    while (1)
    {
      if (v22)
      {
        uint64_t v70 = (v22 - 1) & v22;
        int64_t v72 = v20;
        unint64_t v27 = __clz(__rbit64(v22)) | (v20 << 6);
        goto LABEL_30;
      }
      int64_t v28 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_46;
      }
      if (v28 >= v60) {
        break;
      }
      unint64_t v29 = *(void *)(v59 + 8 * v28);
      int64_t v30 = v20 + 1;
      if (!v29)
      {
        int64_t v30 = v20 + 2;
        if (v20 + 2 >= v60) {
          break;
        }
        unint64_t v29 = *(void *)(v59 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v20 + 3;
          if (v20 + 3 >= v60) {
            break;
          }
          unint64_t v29 = *(void *)(v59 + 8 * v30);
          if (!v29)
          {
            uint64_t v31 = v20 + 4;
            if (v20 + 4 >= v60) {
              break;
            }
            unint64_t v29 = *(void *)(v59 + 8 * v31);
            if (!v29)
            {
              while (1)
              {
                int64_t v30 = v31 + 1;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_47;
                }
                if (v30 >= v60) {
                  goto LABEL_3;
                }
                unint64_t v29 = *(void *)(v59 + 8 * v30);
                ++v31;
                if (v29) {
                  goto LABEL_29;
                }
              }
            }
            int64_t v30 = v20 + 4;
          }
        }
      }
LABEL_29:
      uint64_t v70 = (v29 - 1) & v29;
      int64_t v72 = v30;
      unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_30:
      uint64_t v32 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v27);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v35 = v14;
      uint64_t v36 = v15;
      sub_1C033ACB8(v14, v15);
      swift_bridgeObjectRetain();
      sub_1C033ADE4(v79, v78, v77, v76);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v90 = v4;
      unint64_t v39 = sub_1BFEF2D8C(v33, v34);
      uint64_t v40 = v4[2];
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      char v43 = v38;
      if (v4[3] >= v42)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v4 = v90;
          if (v38) {
            goto LABEL_12;
          }
        }
        else
        {
          sub_1C106E6BC();
          uint64_t v4 = v90;
          if (v43) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        sub_1C105A1B4(v42, isUniquelyReferenced_nonNull_native);
        unint64_t v44 = sub_1BFEF2D8C(v33, v34);
        if ((v43 & 1) != (v45 & 1)) {
          goto LABEL_49;
        }
        unint64_t v39 = v44;
        uint64_t v4 = v90;
        if (v43)
        {
LABEL_12:
          uint64_t v23 = (void *)(v4[7] + 112 * v39);
          uint64_t v24 = v23[2];
          uint64_t v25 = v23[3];
          uint64_t v26 = v23[7];
          uint64_t v67 = v23[8];
          uint64_t v64 = v23[10];
          uint64_t v66 = v23[9];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFECFD88(v24, v25);
          swift_bridgeObjectRelease();
          sub_1C033AE64(v26, v67, v66, v64);
          *uint64_t v23 = v81;
          v23[1] = v80;
          uint64_t v14 = v35;
          v23[2] = v35;
          v23[3] = v36;
          uint64_t v15 = v36;
          v23[4] = v69;
          v23[5] = v82;
          v23[6] = v83;
          v23[7] = v79;
          v23[8] = v78;
          v23[9] = v77;
          v23[10] = v76;
          v23[11] = v75;
          v23[12] = v74;
          v23[13] = v73;
          goto LABEL_13;
        }
      }
      v4[(v39 >> 6) + 8] |= 1 << v39;
      uint64_t v46 = (uint64_t *)(v4[6] + 16 * v39);
      *uint64_t v46 = v33;
      v46[1] = v34;
      id v47 = (void *)(v4[7] + 112 * v39);
      *id v47 = v81;
      v47[1] = v80;
      v47[2] = v35;
      v47[3] = v36;
      v47[4] = v69;
      v47[5] = v82;
      v47[6] = v83;
      v47[7] = v79;
      v47[8] = v78;
      v47[9] = v77;
      v47[10] = v76;
      v47[11] = v75;
      v47[12] = v74;
      v47[13] = v73;
      uint64_t v48 = v4[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_45;
      }
      uint64_t v14 = v35;
      uint64_t v15 = v36;
      v4[2] = v50;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v68;
      unint64_t v22 = v70;
      int64_t v20 = v72;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFECFD88(v14, v15);
    swift_bridgeObjectRelease();
    sub_1C033AE64(v79, v78, v77, v76);
    unint64_t v3 = v57;
    uint64_t v2 = v53;
    if (v57 != v55) {
      continue;
    }
    break;
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_43:
  *a2 = v4;
  return result;
}

uint64_t SportsEmbedConfiguration.embedConfigs(tagId:embedConfigKind:groupType:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v64 = *v5;
  uint64_t v11 = sub_1C0338D20(a1, a2, a4, a5);
  if (v11)
  {
    uint64_t v12 = v11;
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_1EB93C5E8;
    sub_1BFEE7DE4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C152C7F0;
    unint64_t v15 = a3 >> 61;
    unint64_t v16 = 0xE900000000000065;
    uint64_t v17 = 0x726F635320786F42;
    uint64_t v18 = (void *)v14;
    switch(v15)
    {
      case 1uLL:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x74656B63617242;
        break;
      case 2uLL:
        unint64_t v16 = 0xEA00000000007265;
        uint64_t v17 = 0x79616C502079654BLL;
        break;
      case 3uLL:
        uint64_t v17 = 0x6F635320656E694CLL;
        unint64_t v16 = 0xEA00000000006572;
        break;
      case 4uLL:
        uint64_t v17 = 0x52207972756A6E49;
        unint64_t v16 = 0xED000074726F7065;
        break;
      case 5uLL:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x676E69646E617453;
        break;
      case 6uLL:
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x65726F6353;
        break;
      default:
        break;
    }
    uint64_t v35 = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v36 = sub_1BFE9C558();
    v18[8] = v36;
    v18[4] = v17;
    v18[5] = v16;
    uint64_t v37 = *(void *)(v12 + 16);
    uint64_t v38 = MEMORY[0x1E4FBB5C8];
    v18[12] = MEMORY[0x1E4FBB550];
    v18[13] = v38;
    v18[9] = v37;
    v18[17] = v35;
    v18[18] = v36;
    v18[14] = a1;
    v18[15] = a2;
    id v39 = v13;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();

    goto LABEL_43;
  }
  unint64_t v63 = a3 >> 61;
  if (a3 >> 61 == 1)
  {
    sub_1C00FD9D4();
    swift_retain();
    sub_1C151939C();
    uint64_t v19 = *(void **)(v64 + 64);
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    if (v19)
    {
      id v20 = objc_msgSend(v19, sel_identifier);
      uint64_t v21 = sub_1C151E62C();
      uint64_t v23 = v22;

      uint64_t v12 = sub_1C0338EFC(v21, v23, a4, a5);
      swift_bridgeObjectRelease();
      if (v12)
      {
        if (qword_1EB86AE58 != -1) {
          swift_once();
        }
        uint64_t v24 = (void *)qword_1EB93C5E8;
        sub_1BFEE7DE4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1C152A660;
        uint64_t v26 = MEMORY[0x1E4FBB1A0];
        *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v27 = sub_1BFE9C558();
        *(void *)(v25 + 64) = v27;
        *(void *)(v25 + 32) = 0x74656B63617242;
        *(void *)(v25 + 40) = 0xE700000000000000;
        uint64_t v28 = *(void *)(v12 + 16);
        uint64_t v29 = MEMORY[0x1E4FBB5C8];
        *(void *)(v25 + 96) = MEMORY[0x1E4FBB550];
        *(void *)(v25 + 104) = v29;
        *(void *)(v25 + 72) = v28;
        *(void *)(v25 + 136) = v26;
        *(void *)(v25 + 144) = v27;
        *(void *)(v25 + 112) = a1;
        *(void *)(v25 + 120) = a2;
        swift_bridgeObjectRetain();
        id v30 = v24;
        id v31 = objc_msgSend(v19, sel_identifier);
        uint64_t v32 = sub_1C151E62C();
        uint64_t v34 = v33;

        *(void *)(v25 + 176) = v26;
LABEL_42:
        *(void *)(v25 + 184) = v27;
        *(void *)(v25 + 152) = v32;
        *(void *)(v25 + 160) = v34;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_unknownObjectRelease();

LABEL_43:
        swift_bridgeObjectRelease();
        return v12;
      }
      swift_unknownObjectRelease();
    }
  }
  unint64_t v40 = 0xE900000000000065;
  id v41 = SportsEmbedConfigurationKind.leagueTag.getter(a3);
  if (v41)
  {
    uint64_t v42 = v41;
    id v43 = objc_msgSend(v41, sel_identifier);
    uint64_t v44 = sub_1C151E62C();
    uint64_t v46 = v45;

    uint64_t v12 = sub_1C0338EFC(v44, v46, a4, a5);
    swift_bridgeObjectRelease();
    if (v12)
    {
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      id v47 = (void *)qword_1EB93C5E8;
      sub_1BFEE7DE4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1C152A660;
      uint64_t v49 = 0x726F635320786F42;
      uint64_t v25 = v48;
      switch((int)v63)
      {
        case 1:
          unint64_t v40 = 0xE700000000000000;
          uint64_t v49 = 0x74656B63617242;
          break;
        case 2:
          unint64_t v40 = 0xEA00000000007265;
          uint64_t v49 = 0x79616C502079654BLL;
          break;
        case 3:
          uint64_t v49 = 0x6F635320656E694CLL;
          unint64_t v40 = 0xEA00000000006572;
          break;
        case 4:
          uint64_t v49 = 0x52207972756A6E49;
          unint64_t v40 = 0xED000074726F7065;
          break;
        case 5:
          unint64_t v40 = 0xE800000000000000;
          uint64_t v49 = 0x676E69646E617453;
          break;
        case 6:
          unint64_t v40 = 0xE500000000000000;
          uint64_t v49 = 0x65726F6353;
          break;
        default:
          break;
      }
      uint64_t v57 = MEMORY[0x1E4FBB1A0];
      *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      *(void *)(v25 + 64) = v27;
      *(void *)(v25 + 32) = v49;
      *(void *)(v25 + 40) = v40;
      uint64_t v58 = *(void *)(v12 + 16);
      uint64_t v59 = MEMORY[0x1E4FBB5C8];
      *(void *)(v25 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v25 + 104) = v59;
      *(void *)(v25 + 72) = v58;
      *(void *)(v25 + 136) = v57;
      *(void *)(v25 + 144) = v27;
      *(void *)(v25 + 112) = a1;
      *(void *)(v25 + 120) = a2;
      swift_bridgeObjectRetain();
      id v30 = v47;
      id v60 = objc_msgSend(v42, sel_identifier);
      uint64_t v32 = sub_1C151E62C();
      uint64_t v34 = v61;

      *(void *)(v25 + 176) = v57;
      goto LABEL_42;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  uint64_t v50 = (void *)qword_1EB93C5E8;
  sub_1BFEE7DE4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1C1527210;
  uint64_t v52 = 0x726F635320786F42;
  uint64_t v53 = (void *)v51;
  switch((int)v63)
  {
    case 1:
      unint64_t v40 = 0xE700000000000000;
      uint64_t v52 = 0x74656B63617242;
      break;
    case 2:
      unint64_t v40 = 0xEA00000000007265;
      uint64_t v52 = 0x79616C502079654BLL;
      break;
    case 3:
      uint64_t v52 = 0x6F635320656E694CLL;
      unint64_t v40 = 0xEA00000000006572;
      break;
    case 4:
      uint64_t v52 = 0x52207972756A6E49;
      unint64_t v40 = 0xED000074726F7065;
      break;
    case 5:
      unint64_t v40 = 0xE800000000000000;
      uint64_t v52 = 0x676E69646E617453;
      break;
    case 6:
      unint64_t v40 = 0xE500000000000000;
      uint64_t v52 = 0x65726F6353;
      break;
    default:
      break;
  }
  uint64_t v54 = MEMORY[0x1E4FBB1A0];
  *(void *)(v51 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v55 = sub_1BFE9C558();
  v53[4] = v52;
  uint64_t v53[5] = v40;
  v53[12] = v54;
  v53[13] = v55;
  v53[8] = v55;
  v53[9] = a1;
  v53[10] = a2;
  swift_bridgeObjectRetain();
  id v56 = v50;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0338D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1BFEF2D8C(a1, a2);
  if (v11)
  {
    uint64_t v23 = a3;
    uint64_t v12 = (uint64_t *)(*(void *)(v5 + 56) + 112 * v10);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = v12[2];
    uint64_t v25 = v12[3];
    uint64_t v16 = v12[7];
    uint64_t v17 = v12[8];
    uint64_t v18 = v12[9];
    uint64_t v24 = v12[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C033ACB8(v15, v25);
    swift_bridgeObjectRetain();
    sub_1C033ADE4(v16, v17, v18, v24);
    swift_bridgeObjectRelease();
    if (*(void *)(v14 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1BFEF2D8C(v23, a4);
      if (v20)
      {
        uint64_t v21 = *(void *)(*(void *)(v14 + 56) + 8 * v19);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v21;
LABEL_10:
        sub_1BFECFD88(v15, v25);
        swift_bridgeObjectRelease();
        sub_1C033AE64(v16, v17, v18, v24);
        return v13;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0338EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1BFEF2D8C(a1, a2);
  if (v11)
  {
    uint64_t v29 = a3;
    uint64_t v30 = a4;
    uint64_t v12 = (uint64_t *)(*(void *)(v5 + 56) + 112 * v10);
    uint64_t v13 = v12[1];
    uint64_t v14 = v12[3];
    uint64_t v38 = v12[2];
    uint64_t v15 = v12[8];
    uint64_t v16 = v12[9];
    uint64_t v17 = v12[10];
    uint64_t v35 = v12[7];
    uint64_t v36 = *v12;
    swift_bridgeObjectRetain();
    uint64_t v37 = v13;
    swift_bridgeObjectRetain();
    uint64_t v32 = v14;
    uint64_t v18 = v15;
    sub_1C033ACB8(v38, v14);
    swift_bridgeObjectRetain();
    uint64_t v31 = v17;
    sub_1C033ADE4(v35, v15, v16, v17);
    swift_bridgeObjectRelease();
    if (v35)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = v17;
      sub_1C033ACB8(v16, v17);
      uint64_t v20 = v35;
      uint64_t v21 = v38;
      uint64_t v22 = v32;
      uint64_t v23 = v18;
      uint64_t v33 = v31;
      uint64_t v34 = v16;
      uint64_t v24 = v18;
    }
    else
    {
      uint64_t v20 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = v38;
      uint64_t v22 = v32;
      sub_1C033ACB8(v38, v32);
      uint64_t v23 = v18;
      uint64_t v19 = v31;
      uint64_t v33 = v32;
      uint64_t v34 = v38;
      uint64_t v24 = v37;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFECFD88(v21, v22);
    swift_bridgeObjectRelease();
    sub_1C033AE64(v35, v23, v16, v19);
    if (*(void *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_1BFEF2D8C(v29, v30);
      if (v26)
      {
        uint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v20 = v27;
LABEL_13:
        sub_1BFECFD88(v34, v33);
        swift_bridgeObjectRelease();
        return v20;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  return 0;
}

double SportsEmbedConfiguration.recordConfig(tagId:embedConfigKind:groupType:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_1C0339910(a1, a2, a4, a5, (uint64_t)&v55);
  uint64_t v12 = v56;
  if (v56)
  {
    uint64_t v13 = v55;
    uint64_t v53 = v58;
    uint64_t v54 = v57;
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    uint64_t v14 = (void *)qword_1EB93C5E8;
    sub_1BFEE7DE4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
    unint64_t v16 = a3 >> 61;
    unint64_t v17 = 0xE900000000000065;
    uint64_t v18 = 0x726F635320786F42;
    uint64_t v19 = (void *)v15;
    switch(v16)
    {
      case 1uLL:
        unint64_t v17 = 0xE700000000000000;
        uint64_t v18 = 0x74656B63617242;
        break;
      case 2uLL:
        unint64_t v17 = 0xEA00000000007265;
        uint64_t v18 = 0x79616C502079654BLL;
        break;
      case 3uLL:
        uint64_t v18 = 0x6F635320656E694CLL;
        unint64_t v17 = 0xEA00000000006572;
        break;
      case 4uLL:
        uint64_t v18 = 0x52207972756A6E49;
        unint64_t v17 = 0xED000074726F7065;
        break;
      case 5uLL:
        unint64_t v17 = 0xE800000000000000;
        uint64_t v18 = 0x676E69646E617453;
        break;
      case 6uLL:
        unint64_t v17 = 0xE500000000000000;
        uint64_t v18 = 0x65726F6353;
        break;
      default:
        break;
    }
    uint64_t v34 = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v35 = sub_1BFE9C558();
    v19[4] = v18;
    v19[5] = v17;
    v19[12] = v34;
    v19[13] = v35;
    v19[8] = v35;
    v19[9] = a1;
    v19[10] = a2;
    id v36 = v14;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    *a6 = v13;
    a6[1] = v12;
LABEL_18:
    a6[2] = v54;
    a6[3] = v53;
    return result;
  }
  id v20 = SportsEmbedConfigurationKind.leagueTag.getter(a3);
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = objc_msgSend(v20, sel_identifier);
    uint64_t v23 = sub_1C151E62C();
    uint64_t v25 = v24;

    sub_1C0339B70(v23, v25, a4, a5, &v55);
    swift_bridgeObjectRelease();
    uint64_t v26 = v56;
    if (v56)
    {
      uint64_t v54 = v57;
      uint64_t v52 = v55;
      uint64_t v53 = v58;
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v27 = (void *)qword_1EB93C5E8;
      sub_1BFEE7DE4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C152C7F0;
      uint64_t v29 = MEMORY[0x1E4FBB1A0];
      *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v30 = sub_1BFE9C558();
      *(void *)(v28 + 64) = v30;
      *(void *)(v28 + 32) = a1;
      *(void *)(v28 + 40) = a2;
      unint64_t v31 = 0xE900000000000065;
      uint64_t v32 = 0x726F635320786F42;
      unint64_t v33 = v30;
      switch(a3 >> 61)
      {
        case 1uLL:
          unint64_t v31 = 0xE700000000000000;
          uint64_t v32 = 0x74656B63617242;
          break;
        case 2uLL:
          unint64_t v31 = 0xEA00000000007265;
          uint64_t v32 = 0x79616C502079654BLL;
          break;
        case 3uLL:
          uint64_t v32 = 0x6F635320656E694CLL;
          unint64_t v31 = 0xEA00000000006572;
          break;
        case 4uLL:
          uint64_t v32 = 0x52207972756A6E49;
          unint64_t v31 = 0xED000074726F7065;
          break;
        case 5uLL:
          unint64_t v31 = 0xE800000000000000;
          uint64_t v32 = 0x676E69646E617453;
          break;
        case 6uLL:
          unint64_t v31 = 0xE500000000000000;
          uint64_t v32 = 0x65726F6353;
          break;
        default:
          break;
      }
      *(void *)(v28 + 96) = v29;
      *(void *)(v28 + 104) = v30;
      *(void *)(v28 + 72) = v32;
      *(void *)(v28 + 80) = v31;
      swift_bridgeObjectRetain();
      id v47 = v27;
      id v48 = objc_msgSend(v21, sel_identifier);
      uint64_t v49 = sub_1C151E62C();
      uint64_t v51 = v50;

      *(void *)(v28 + 136) = v29;
      *(void *)(v28 + 144) = v33;
      *(void *)(v28 + 112) = v49;
      *(void *)(v28 + 120) = v51;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      *a6 = v52;
      a6[1] = v26;
      goto LABEL_18;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  uint64_t v38 = (void *)qword_1EB93C5E8;
  sub_1BFEE7DE4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C1527210;
  unint64_t v40 = a3 >> 61;
  unint64_t v41 = 0xE900000000000065;
  uint64_t v42 = 0x726F635320786F42;
  id v43 = (void *)v39;
  switch(v40)
  {
    case 1uLL:
      unint64_t v41 = 0xE700000000000000;
      uint64_t v42 = 0x74656B63617242;
      break;
    case 2uLL:
      unint64_t v41 = 0xEA00000000007265;
      uint64_t v42 = 0x79616C502079654BLL;
      break;
    case 3uLL:
      uint64_t v42 = 0x6F635320656E694CLL;
      unint64_t v41 = 0xEA00000000006572;
      break;
    case 4uLL:
      uint64_t v42 = 0x52207972756A6E49;
      unint64_t v41 = 0xED000074726F7065;
      break;
    case 5uLL:
      unint64_t v41 = 0xE800000000000000;
      uint64_t v42 = 0x676E69646E617453;
      break;
    case 6uLL:
      unint64_t v41 = 0xE500000000000000;
      uint64_t v42 = 0x65726F6353;
      break;
    default:
      break;
  }
  uint64_t v44 = MEMORY[0x1E4FBB1A0];
  *(void *)(v39 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v45 = sub_1BFE9C558();
  v43[4] = v42;
  v43[5] = v41;
  v43[12] = v44;
  v43[13] = v45;
  v43[8] = v45;
  v43[9] = a1;
  v43[10] = a2;
  swift_bridgeObjectRetain();
  id v46 = v38;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)a6 = 0u;
  *((_OWORD *)a6 + 1) = 0u;
  return result;
}

uint64_t sub_1C0339910@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *v5;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_7;
  }
  uint64_t v11 = result;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1BFEF2D8C(v11, a2);
  if ((v13 & 1) == 0)
  {
    double result = swift_bridgeObjectRelease();
LABEL_7:
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return result;
  }
  uint64_t v26 = a3;
  uint64_t v28 = a4;
  uint64_t v14 = (void *)(*(void *)(v7 + 56) + 112 * v12);
  uint64_t v15 = v14[2];
  uint64_t v29 = v14[4];
  uint64_t v30 = v14[3];
  uint64_t v16 = v14[6];
  uint64_t v33 = v14[5];
  uint64_t v17 = v14[7];
  uint64_t v31 = v14[8];
  uint64_t v19 = v14[9];
  uint64_t v18 = v14[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C033ACB8(v15, v30);
  swift_bridgeObjectRetain();
  uint64_t v32 = v19;
  sub_1C033ADE4(v17, v31, v19, v18);
  swift_bridgeObjectRelease();
  if (!*(void *)(v16 + 16))
  {
LABEL_9:
    uint64_t v25 = v33;
    sub_1C033ACB8(v15, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFECFD88(v15, v30);
    swift_bridgeObjectRelease();
    double result = sub_1C033AE64(v17, v31, v19, v18);
    *(void *)a5 = v15;
    *(void *)(a5 + 8) = v30;
    *(void *)(a5 + 16) = v29;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_1BFEF2D8C(v26, v28);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  id v22 = (uint64_t *)(*(void *)(v16 + 56) + 32 * v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v25 = v22[3];
  uint64_t v27 = v22[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFECFD88(v15, v30);
  swift_bridgeObjectRelease();
  double result = sub_1C033AE64(v17, v31, v32, v18);
  *(void *)a5 = v24;
  *(void *)(a5 + 8) = v23;
  *(void *)(a5 + 16) = v27;
LABEL_10:
  *(void *)(a5 + 24) = v25;
  return result;
}

uint64_t sub_1C0339B70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = *v5;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_6;
  }
  uint64_t v11 = result;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1BFEF2D8C(v11, a2);
  if ((v13 & 1) == 0)
  {
    double result = swift_bridgeObjectRelease();
LABEL_6:
    *(_OWORD *)a5 = 0u;
    *((_OWORD *)a5 + 1) = 0u;
    return result;
  }
  unint64_t v35 = a5;
  uint64_t v34 = a3;
  uint64_t v14 = (void *)(*(void *)(v7 + 56) + 112 * v12);
  uint64_t v15 = v14[2];
  uint64_t v16 = v14[3];
  uint64_t v17 = v14[4];
  uint64_t v18 = v14[6];
  uint64_t v41 = v14[7];
  uint64_t v42 = v14[5];
  uint64_t v19 = v14[9];
  uint64_t v44 = v14[8];
  uint64_t v20 = v14[10];
  uint64_t v43 = v14[11];
  uint64_t v22 = v14[12];
  uint64_t v21 = v14[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = v16;
  uint64_t v23 = v16;
  uint64_t v24 = v44;
  uint64_t v45 = v17;
  sub_1C033ACB8(v15, v23);
  swift_bridgeObjectRetain();
  sub_1C033ADE4(v41, v44, v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v41)
  {
    sub_1C033ACB8(v19, v20);
    uint64_t v25 = v21;
    uint64_t v39 = v20;
    uint64_t v40 = v19;
    uint64_t v37 = v22;
    uint64_t v38 = v43;
    uint64_t v26 = v15;
  }
  else
  {
    sub_1C033ACB8(v15, v36);
    uint64_t v25 = v18;
    uint64_t v39 = v36;
    uint64_t v40 = v15;
    uint64_t v37 = v42;
    uint64_t v38 = v45;
    uint64_t v26 = v15;
    uint64_t v24 = v44;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFECFD88(v26, v36);
  swift_bridgeObjectRelease();
  sub_1C033AE64(v41, v24, v19, v20);
  if (*(void *)(v25 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1BFEF2D8C(v34, a4);
    if (v28)
    {
      uint64_t v29 = (uint64_t *)(*(void *)(v25 + 56) + 32 * v27);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v33 = v29[2];
      uint64_t v32 = v29[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFECFD88(v40, v39);
      double result = swift_bridgeObjectRelease();
      uint64_t *v35 = v31;
      v35[1] = v30;
      v35[2] = v33;
      v35[3] = v32;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1C033ACB8(v40, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFECFD88(v40, v39);
  double result = swift_bridgeObjectRelease();
  uint64_t *v35 = v40;
  v35[1] = v39;
  v35[2] = v38;
  v35[3] = v37;
  return result;
}

uint64_t sub_1C0339EA4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  swift_bridgeObjectRetain();
  sub_1C033ACB8(v4, v5);
  uint64_t v50 = v2;
  swift_bridgeObjectRelease();
  uint64_t v53 = v5;
  uint64_t v54 = v4;
  uint64_t v51 = v7;
  uint64_t v52 = v6;
  sub_1BFECFD88(v4, v5);
  uint64_t v8 = *(void *)(v3 + 16);
  if (!v8)
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v56 = (void *)MEMORY[0x1E4FBC868];
LABEL_29:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v50;
    a2[1] = v10;
    a2[2] = v54;
    a2[3] = v53;
    a2[4] = v52;
    a2[5] = v51;
    a2[6] = v56;
    return result;
  }
  uint64_t v9 = (uint64_t *)(v3 + 40);
  unint64_t v10 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v56 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v57 = v8;
    uint64_t v13 = *(v9 - 1);
    uint64_t v14 = *v9;
    uint64_t v15 = v9[1];
    uint64_t v16 = v9[2];
    uint64_t v18 = v9[3];
    uint64_t v17 = v9[4];
    uint64_t v19 = v9[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = v16;
    uint64_t v59 = v17;
    uint64_t v60 = v19;
    sub_1C033ACB8(v16, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v22 = sub_1BFEF2D8C(v13, v14);
    uint64_t v23 = v10[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (v10[3] >= v25)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v21) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1C106E6A0();
        if (v26) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_1C105A198(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_1BFEF2D8C(v13, v14);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_34;
      }
      unint64_t v22 = v27;
      if (v26)
      {
LABEL_12:
        uint64_t v29 = v10[7];
        swift_bridgeObjectRelease();
        *(void *)(v29 + 8 * v22) = v15;
        goto LABEL_16;
      }
    }
    v10[(v22 >> 6) + 8] |= 1 << v22;
    uint64_t v30 = (uint64_t *)(v10[6] + 16 * v22);
    *uint64_t v30 = v13;
    v30[1] = v14;
    *(void *)(v10[7] + 8 * v22) = v15;
    uint64_t v31 = v10[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_32;
    }
    void v10[2] = v33;
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_1C033ACB8(v58, v18);
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v36 = sub_1BFEF2D8C(v13, v14);
      uint64_t v37 = v56[2];
      BOOL v38 = (v35 & 1) == 0;
      uint64_t v39 = v37 + v38;
      if (__OFADD__(v37, v38)) {
        goto LABEL_31;
      }
      char v40 = v35;
      if (v56[3] >= v39)
      {
        if ((v34 & 1) == 0) {
          sub_1C106E4CC();
        }
      }
      else
      {
        sub_1C1059E70(v39, v34);
        unint64_t v41 = sub_1BFEF2D8C(v13, v14);
        if ((v40 & 1) != (v42 & 1)) {
          goto LABEL_34;
        }
        unint64_t v36 = v41;
      }
      if (v40)
      {
        uint64_t v43 = (uint64_t *)(v56[7] + 32 * v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = v58;
        *uint64_t v43 = v58;
        v43[1] = v18;
        v43[2] = v59;
        v43[3] = v60;
      }
      else
      {
        v56[(v36 >> 6) + 8] |= 1 << v36;
        uint64_t v45 = (uint64_t *)(v56[6] + 16 * v36);
        *uint64_t v45 = v13;
        v45[1] = v14;
        id v46 = (uint64_t *)(v56[7] + 32 * v36);
        uint64_t v44 = v58;
        *id v46 = v58;
        v46[1] = v18;
        v46[2] = v59;
        v46[3] = v60;
        uint64_t v47 = v56[2];
        BOOL v32 = __OFADD__(v47, 1);
        uint64_t v48 = v47 + 1;
        if (v32) {
          goto LABEL_33;
        }
        v56[2] = v48;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v11 = v44;
      uint64_t v12 = v18;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v58;
      uint64_t v12 = 0;
    }
    sub_1BFECFD88(v11, v12);
    v9 += 7;
    uint64_t v8 = v57 - 1;
    if (v57 == 1) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfiguration()
{
  return &type metadata for SportsEmbedConfiguration;
}

uint64_t destroy for SportsEmbedTagConfiguration(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[3])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1[7];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[10])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SportsEmbedTagConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
  }
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v9 = a2[8];
    a1[7] = v8;
    a1[8] = v9;
    uint64_t v10 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      a1[9] = a2[9];
      a1[10] = v10;
      uint64_t v11 = a2[12];
      a1[11] = a2[11];
      a1[12] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 11) = v13;
    }
    a1[13] = a2[13];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 9) = v12;
    *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
    a1[13] = a2[13];
  }
  return a1;
}

void *assignWithCopy for SportsEmbedTagConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C033A768((uint64_t)(a1 + 2));
      long long v7 = *((_OWORD *)a2 + 2);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 2) = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 2);
    *uint64_t v4 = *v5;
    *((_OWORD *)a1 + 2) = v8;
  }
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + 7;
  uint64_t v11 = (long long *)(a2 + 7);
  uint64_t v10 = a2[7];
  if (a1[7])
  {
    if (v10)
    {
      a1[7] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v12 = a1 + 9;
      long long v13 = a2 + 9;
      uint64_t v14 = a2[10];
      if (a1[10])
      {
        if (v14)
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          a1[11] = a2[11];
          a1[12] = a2[12];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C033A768((uint64_t)(a1 + 9));
          long long v22 = *(_OWORD *)(a2 + 11);
          _OWORD *v12 = *v13;
          *(_OWORD *)(a1 + 11) = v22;
        }
      }
      else if (v14)
      {
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v24 = *(_OWORD *)(a2 + 11);
        _OWORD *v12 = *v13;
        *(_OWORD *)(a1 + 11) = v24;
      }
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C033A7BC((uint64_t)(a1 + 7));
      long long v17 = *(_OWORD *)(a2 + 9);
      long long v16 = *(_OWORD *)(a2 + 11);
      long long v18 = *v11;
      a1[13] = a2[13];
      *(_OWORD *)(a1 + 9) = v17;
      *(_OWORD *)(a1 + 11) = v16;
      *uint64_t v9 = v18;
    }
  }
  else if (v10)
  {
    a1[7] = v10;
    a1[8] = a2[8];
    uint64_t v15 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 11) = v23;
    }
    a1[13] = a2[13];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *v11;
    long long v20 = *(_OWORD *)(a2 + 9);
    long long v21 = *(_OWORD *)(a2 + 11);
    a1[13] = a2[13];
    *(_OWORD *)(a1 + 9) = v20;
    *(_OWORD *)(a1 + 11) = v21;
    *uint64_t v9 = v19;
  }
  return a1;
}

uint64_t sub_1C033A768(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C033A7BC(uint64_t a1)
{
  return a1;
}

void *assignWithTake for SportsEmbedTagConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  if (a1[3])
  {
    uint64_t v4 = a2[3];
    if (v4)
    {
      a1[2] = a2[2];
      a1[3] = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = a2[5];
      a1[4] = a2[4];
      a1[5] = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C033A768((uint64_t)(a1 + 2));
  }
  long long v6 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v6;
LABEL_6:
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  if (a1[7])
  {
    if (v7)
    {
      a1[7] = v7;
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRelease();
      if (a1[10])
      {
        uint64_t v8 = a2[10];
        if (v8)
        {
          a1[9] = a2[9];
          a1[10] = v8;
          swift_bridgeObjectRelease();
          uint64_t v9 = a2[12];
          a1[11] = a2[11];
          a1[12] = v9;
          swift_bridgeObjectRelease();
LABEL_15:
          a1[13] = a2[13];
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1C033A768((uint64_t)(a1 + 9));
      }
      long long v11 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 11) = v11;
      goto LABEL_15;
    }
    sub_1C033A7BC((uint64_t)(a1 + 7));
  }
  long long v10 = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 9) = v10;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  a1[13] = a2[13];
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsEmbedTagConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsEmbedTagConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedTagConfiguration()
{
  return &type metadata for SportsEmbedTagConfiguration;
}

uint64_t destroy for SportsEmbedGroupConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SportsEmbedGroupConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
  }
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsEmbedGroupConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C033A768((uint64_t)(a1 + 2));
      long long v7 = *((_OWORD *)a2 + 2);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 2) = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 2);
    *uint64_t v4 = *v5;
    *((_OWORD *)a1 + 2) = v8;
  }
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsEmbedGroupConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 24);
  if (!v4)
  {
    sub_1C033A768(a1 + 16);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsEmbedGroupConfiguration()
{
  return &type metadata for SportsEmbedGroupConfiguration;
}

uint64_t sub_1C033ACB8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C033ACFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1C033ACB8(a3, a4);
  }
  return result;
}

uint64_t sub_1C033AD70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BFECFD88(a3, a4);
  }
  return result;
}

uint64_t sub_1C033ADE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C033ACB8(a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C033AE64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFECFD88(a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatOptionExpression.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C033AF14()
{
  return 0;
}

uint64_t sub_1C033AF98()
{
  return 0;
}

void FormatOptionExpression.Compare.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

BOOL FormatOperator.evaluate<A>(lhs:rhs:)()
{
  switch(*v0)
  {
    case 1:
    case 7:
      return (sub_1C151E5CC() & 1) == 0;
    case 2:
    case 8:
      char v1 = sub_1C151E57C();
      return v1 & 1;
    case 3:
    case 9:
      char v1 = sub_1C151E59C();
      return v1 & 1;
    case 4:
    case 0xA:
      char v1 = sub_1C151E56C();
      return v1 & 1;
    case 5:
    case 0xB:
      char v1 = sub_1C151E58C();
      return v1 & 1;
    default:
      char v1 = sub_1C151E5CC();
      return v1 & 1;
  }
}

uint64_t sub_1C033B160(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_1BFF27EB4(a3, (uint64_t)v5);
  return sub_1BFF25F10(a1) & 1;
}

uint64_t FormatOptionExpression.Compare.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionExpression.Compare.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFF27F28(v2, v3, v4);
}

unsigned char *FormatOptionExpression.Compare.operator.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 33) = *result;
  return result;
}

uint64_t (*FormatOptionExpression.Compare.operator.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C033B214(unsigned __int8 *a1, char *a2)
{
  return sub_1C1483F7C(*a1, *a2);
}

uint64_t sub_1C033B220()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C033B2F8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C033B3B8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C033B48C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C033D254();
  *a1 = result;
  return result;
}

void sub_1C033B4BC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x65756C6176;
      goto LABEL_3;
    case 2:
      *a1 = 0x726F74617265706FLL;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6E6F6974706FLL;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C033B564@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C033D254();
  *a1 = result;
  return result;
}

uint64_t sub_1C033B58C(uint64_t a1)
{
  unint64_t v2 = sub_1BFE231D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C033B5C8(uint64_t a1)
{
  unint64_t v2 = sub_1BFE231D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C033B608@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionExpression.Compare.init(from:)(a1, a2);
}

uint64_t sub_1C033B620(void *a1)
{
  return FormatOptionExpression.Compare.encode(to:)(a1);
}

uint64_t FormatOptionExpression.Exists.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FormatOptionExpression.Exists.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

void FormatOptionExpression.Exists.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t FormatOptionExpression.Exists.Operator.rawValue.getter()
{
  if (*v0) {
    return 0x7473697845746F6ELL;
  }
  else {
    return 0x737473697865;
  }
}

uint64_t sub_1C033B6C0(char *a1, char *a2)
{
  return sub_1C1484104(*a1, *a2);
}

uint64_t sub_1C033B6CC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C033B750()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C033B7C0()
{
  return sub_1C1520E0C();
}

void sub_1C033B840(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x737473697865;
  if (*v1) {
    uint64_t v2 = 0x7473697845746F6ELL;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000073;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C033B884@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionExpression.Exists.init(from:)(a1, a2);
}

uint64_t sub_1C033B89C(void *a1)
{
  return FormatOptionExpression.Exists.encode(to:)(a1);
}

void sub_1C033B8C0(_OWORD *a1)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)v1;
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  int v12 = *(__int16 *)(v1 + 32);
  if (v12 < 0)
  {
    long long v16 = &v7[*(int *)(v5 + 28)];
    uint64_t v17 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    *(void *)long long v7 = v9;
    *((void *)v7 + 1) = v8;
    *((void *)v7 + 3) = 0;
    *((void *)v7 + 4) = 0;
    *((void *)v7 + 2) = v10;
    v7[40] = 0;
    *((void *)v7 + 6) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C0F49000((uint64_t)v7);
    if (v2)
    {
      sub_1BFEFEA48((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      return;
    }
    sub_1BFEFEA48((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    sub_1BFF582A4();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *(unsigned char *)(inited + 32) = v10;
    uint64_t v20 = sub_1C00B857C(inited);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    sub_1C0F49260(v9, v8, v20, 0);
    sub_1BFE1D244(v9, v8, v10, v11, v12);
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (v12)
  {
    sub_1BFF27F3C(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(_WORD *)(v1 + 32));
    sub_1BFF27F28(v10, v11, 1);
    long long v18 = sub_1C033BC98(a1, v10, v11);
    sub_1BFE1D230(v10, v11, 1);
    if (v2) {
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    sub_1C0F49260(v9, v8, (uint64_t)v18, 0);
    sub_1BFE1D244(v9, v8, v10, v11, v12);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v22 = *(void *)(v1 + 16);
  sub_1BFF27F3C(v9, v8, v10, v11, v12);
  sub_1BFF27F28(v10, v11, 0);
  FormatOptionValue.type.getter(&v23);
  char v13 = v23;
  sub_1BFF582A4();
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  *(unsigned char *)(v14 + 32) = v13;
  uint64_t v15 = sub_1C00B857C(v14);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_1C0F49260(v9, v8, v15, 0);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFE1D230(v10, v11, 0);
LABEL_9:
    sub_1BFE1D244(v9, v8, v10, v11, v12);
    return;
  }
  sub_1BFE1D244(v9, v8, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFE1D230(v10, v11, 0);
  uint64_t v22 = v10;
  sub_1C05B8C90((unint64_t)a1);
}

_OWORD *sub_1C033BC98(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  long long v6 = a1[1];
  v15[0] = *a1;
  v15[1] = v6;
  long long v7 = a1[3];
  void v15[2] = a1[2];
  v15[3] = v7;
  uint64_t v12 = MEMORY[0x1E4FBC870];
  sub_1C017F4B4((uint64_t)v15);
  uint64_t v8 = v15;
  sub_1C0F4A738(a2, a3, &v12, (uint64_t)v13);
  swift_bridgeObjectRelease();
  sub_1C017F540((uint64_t)v15);
  if (!v3)
  {
    if (v14 <= 1u)
    {
      char v9 = v13[0];
      if (!v14)
      {
        sub_1BFF582A4();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        *(unsigned char *)(inited + 32) = v9;
        uint64_t v8 = (_OWORD *)sub_1C00B857C(inited);
        swift_setDeallocating();
        return v8;
      }
      sub_1C033D2A0(v13[0], v13[1], v13[2], 1);
    }
    if (qword_1EB87BD48 != -1) {
      swift_once();
    }
    uint64_t v8 = (_OWORD *)qword_1EB879FE0;
    swift_bridgeObjectRetain();
  }
  return v8;
}

void sub_1C033BDD0(_OWORD *a1)
{
}

uint64_t sub_1C033BE18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1478538(*a1, *a2);
}

uint64_t sub_1C033BE24()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C033BE8C()
{
  FormatOperator.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C033BEF0()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C033BF54@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatOperator.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C033BF7C()
{
  return sub_1C033AF98();
}

uint64_t sub_1C033BF9C()
{
  return sub_1C033AF14();
}

uint64_t _s8NewsFeed22FormatOptionExpressionO6ExistsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 17);
  int v3 = *(unsigned __int8 *)(a2 + 17);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = 0, (sub_1C1520A9C() & 1) != 0))
  {
    uint64_t v6 = FormatOptionType.rawValue.getter();
    uint64_t v8 = v7;
    if (v6 == FormatOptionType.rawValue.getter() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v10 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v5 = 0;
      if ((v10 & 1) == 0) {
        return v5 & 1;
      }
    }
    if (v2) {
      uint64_t v11 = 0x7473697845746F6ELL;
    }
    else {
      uint64_t v11 = 0x737473697865;
    }
    if (v2) {
      unint64_t v12 = 0xE900000000000073;
    }
    else {
      unint64_t v12 = 0xE600000000000000;
    }
    if (v3) {
      uint64_t v13 = 0x7473697845746F6ELL;
    }
    else {
      uint64_t v13 = 0x737473697865;
    }
    if (v3) {
      unint64_t v14 = 0xE900000000000073;
    }
    else {
      unint64_t v14 = 0xE600000000000000;
    }
    if (v11 == v13 && v12 == v14) {
      char v5 = 1;
    }
    else {
      char v5 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t _s8NewsFeed22FormatOptionExpressionO7CompareV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 33);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 33);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v10 = 0;
    if ((sub_1C1520A9C() & 1) == 0) {
      return v10 & 1;
    }
  }
  if (v4)
  {
    if (v8)
    {
      if (v2 != v6 || v3 != v7)
      {
        char v10 = 0;
        if ((sub_1C1520A9C() & 1) == 0) {
          return v10 & 1;
        }
      }
      goto LABEL_12;
    }
LABEL_15:
    char v10 = 0;
    return v10 & 1;
  }
  if (v8) {
    goto LABEL_15;
  }
  uint64_t v16 = v6;
  uint64_t v17 = v2;
  if ((static FormatOptionValue.== infix(_:_:)(&v17, &v16) & 1) == 0) {
    goto LABEL_15;
  }
LABEL_12:
  LOBYTE(v17) = v5;
  LOBYTE(v16) = v9;
  unint64_t v11 = FormatOperator.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == FormatOperator.rawValue.getter() && v13 == v14) {
    char v10 = 1;
  }
  else {
    char v10 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t _s8NewsFeed22FormatOptionExpressionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  int v6 = *(__int16 *)(a1 + 32);
  uint64_t v8 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v11 = *(__int16 *)(a2 + 32);
  if (v6 < 0)
  {
    if (v11 < 0)
    {
      uint64_t v21 = *(void *)a1;
      uint64_t v22 = v2;
      LOWORD(v23) = v5 & 0x1FF;
      uint64_t v16 = v8;
      uint64_t v17 = v7;
      LOWORD(v18) = v10 & 0x1FF;
      sub_1BFF27F3C(v8, v7, v10, v9, v11);
      sub_1BFF27F3C(v3, v2, v5, v4, v6);
      sub_1BFF27F3C(v3, v2, v5, v4, v6);
      sub_1BFF27F3C(v8, v7, v10, v9, v11);
      char exists = _s8NewsFeed22FormatOptionExpressionO6ExistsV2eeoiySbAE_AEtFZ_0((uint64_t)&v21, (uint64_t)&v16);
      goto LABEL_7;
    }
  }
  else if ((v11 & 0x80000000) == 0)
  {
    uint64_t v21 = *(void *)a1;
    uint64_t v22 = v2;
    uint64_t v23 = v5;
    uint64_t v24 = v4;
    __int16 v25 = v6 & 0xFF01;
    uint64_t v16 = v8;
    uint64_t v17 = v7;
    uint64_t v18 = v10;
    uint64_t v19 = v9;
    __int16 v20 = v11 & 0xFF01;
    sub_1BFF27F3C(v8, v7, v10, v9, v11);
    sub_1BFF27F3C(v3, v2, v5, v4, v6);
    sub_1BFF27F3C(v3, v2, v5, v4, v6);
    sub_1BFF27F3C(v8, v7, v10, v9, v11);
    char exists = _s8NewsFeed22FormatOptionExpressionO7CompareV2eeoiySbAE_AEtFZ_0((uint64_t)&v21, (uint64_t)&v16);
LABEL_7:
    char v15 = exists;
    sub_1BFE1D244(v3, v2, v5, v4, v6);
    sub_1BFE1D244(v8, v7, v10, v9, v11);
    sub_1BFE1D244(v8, v7, v10, v9, v11);
    sub_1BFE1D244(v3, v2, v5, v4, v6);
    char v13 = v15;
    return v13 & 1;
  }
  sub_1BFF27F3C(*(void *)a1, v2, v5, v4, v6);
  sub_1BFF27F3C(v8, v7, v10, v9, v11);
  sub_1BFE1D244(v3, v2, v5, v4, v6);
  sub_1BFE1D244(v8, v7, v10, v9, v11);
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1C033C4D8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C033CBC4(a1, a2, a3, (uint64_t (*)(void))sub_1C033C518, (uint64_t (*)(void))sub_1C033C56C, (uint64_t (*)(void))sub_1C033C5C0);
}

unint64_t sub_1C033C518()
{
  unint64_t result = qword_1EA199EE0;
  if (!qword_1EA199EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199EE0);
  }
  return result;
}

unint64_t sub_1C033C56C()
{
  unint64_t result = qword_1EA199EE8;
  if (!qword_1EA199EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199EE8);
  }
  return result;
}

unint64_t sub_1C033C5C0()
{
  unint64_t result = qword_1EA199EF0;
  if (!qword_1EA199EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199EF0);
  }
  return result;
}

unint64_t sub_1C033C618()
{
  unint64_t result = qword_1EA199EF8;
  if (!qword_1EA199EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199EF8);
  }
  return result;
}

uint64_t sub_1C033C66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C033CA78(a1, a2, a3, (uint64_t (*)(void))sub_1C033C698, (uint64_t (*)(void))sub_1BFCB15A0);
}

unint64_t sub_1C033C698()
{
  unint64_t result = qword_1EA199F00;
  if (!qword_1EA199F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F00);
  }
  return result;
}

unint64_t sub_1C033C6EC(uint64_t a1)
{
  unint64_t result = sub_1C033C714();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C033C714()
{
  unint64_t result = qword_1EA199F08;
  if (!qword_1EA199F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F08);
  }
  return result;
}

uint64_t sub_1C033C768(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C033CBC4(a1, a2, a3, (uint64_t (*)(void))sub_1BFE23A68, (uint64_t (*)(void))sub_1BFF0816C, (uint64_t (*)(void))sub_1C033C618);
}

unint64_t sub_1C033C7A8(uint64_t a1)
{
  unint64_t result = sub_1C033C7D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C033C7D0()
{
  unint64_t result = qword_1EA199F10;
  if (!qword_1EA199F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F10);
  }
  return result;
}

uint64_t sub_1C033C824(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C033CBC4(a1, a2, a3, (uint64_t (*)(void))sub_1C033C864, (uint64_t (*)(void))sub_1C033C8B8, (uint64_t (*)(void))sub_1C033C90C);
}

unint64_t sub_1C033C864()
{
  unint64_t result = qword_1EA199F18;
  if (!qword_1EA199F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F18);
  }
  return result;
}

unint64_t sub_1C033C8B8()
{
  unint64_t result = qword_1EA199F20;
  if (!qword_1EA199F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F20);
  }
  return result;
}

unint64_t sub_1C033C90C()
{
  unint64_t result = qword_1EA199F28;
  if (!qword_1EA199F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F28);
  }
  return result;
}

uint64_t sub_1C033C960(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C033CBC4(a1, a2, a3, (uint64_t (*)(void))sub_1BFE660D8, (uint64_t (*)(void))sub_1BFE3EA44, (uint64_t (*)(void))sub_1C033C9A0);
}

unint64_t sub_1C033C9A0()
{
  unint64_t result = qword_1EA199F30;
  if (!qword_1EA199F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F30);
  }
  return result;
}

unint64_t sub_1C033C9F8()
{
  unint64_t result = qword_1EA199F38;
  if (!qword_1EA199F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F38);
  }
  return result;
}

uint64_t sub_1C033CA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C033CA78(a1, a2, a3, (uint64_t (*)(void))sub_1C033CAB4, (uint64_t (*)(void))sub_1BFC9C650);
}

uint64_t sub_1C033CA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C033CAB4()
{
  unint64_t result = qword_1EA199F40;
  if (!qword_1EA199F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F40);
  }
  return result;
}

unint64_t sub_1C033CB08(uint64_t a1)
{
  unint64_t result = sub_1C033CB30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C033CB30()
{
  unint64_t result = qword_1EA199F48;
  if (!qword_1EA199F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F48);
  }
  return result;
}

uint64_t sub_1C033CB84(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C033CBC4(a1, a2, a3, (uint64_t (*)(void))sub_1BFE23564, (uint64_t (*)(void))sub_1BFD92300, (uint64_t (*)(void))sub_1C033C9F8);
}

uint64_t sub_1C033CBC4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

uint64_t sub_1C033CC18@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 33);
  return result;
}

unsigned char *sub_1C033CC24(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 33) = *result;
  return result;
}

uint64_t destroy for FormatOptionExpression(uint64_t a1)
{
  return sub_1BFE1D244(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(_WORD *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatOptionExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  __int16 v7 = *(_WORD *)(a2 + 32);
  sub_1BFF27F3C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatOptionExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  __int16 v7 = *(_WORD *)(a2 + 32);
  sub_1BFF27F3C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  __int16 v12 = *(_WORD *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v7;
  sub_1BFE1D244(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FormatOptionExpression(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  __int16 v9 = *(_WORD *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  sub_1BFE1D244(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1C033CD7C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 32) >> 15;
}

uint64_t sub_1C033CD88(uint64_t result)
{
  *(_WORD *)(result + 32) &= ~0x8000u;
  return result;
}

uint64_t sub_1C033CD98(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 32) = *(_WORD *)(result + 32) & 0xF01 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionExpression()
{
  return &type metadata for FormatOptionExpression;
}

uint64_t destroy for FormatOptionExpression.Compare(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  return sub_1BFE1D230(v2, v3, v4);
}

uint64_t initializeWithCopy for FormatOptionExpression.Compare(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1BFF27F28(v5, v6, v7);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t assignWithCopy for FormatOptionExpression.Compare(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_1BFF27F28(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_1BFE1D230(v7, v8, v9);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t assignWithTake for FormatOptionExpression.Compare(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  sub_1BFE1D230(v6, v7, v8);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

ValueMetadata *type metadata accessor for FormatOptionExpression.Compare()
{
  return &type metadata for FormatOptionExpression.Compare;
}

uint64_t sub_1C033CF68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for FormatOptionExpression.Exists(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatOptionExpression.Exists(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatOptionExpression.Exists(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionExpression.Exists()
{
  return &type metadata for FormatOptionExpression.Exists;
}

ValueMetadata *type metadata accessor for FormatOptionExpression.Exists.Operator()
{
  return &type metadata for FormatOptionExpression.Exists.Operator;
}

ValueMetadata *type metadata accessor for FormatOperator()
{
  return &type metadata for FormatOperator;
}

unsigned char *storeEnumTagSinglePayload for FormatOptionExpression.Compare.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C033D1C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionExpression.Compare.CodingKeys()
{
  return &type metadata for FormatOptionExpression.Compare.CodingKeys;
}

unint64_t sub_1C033D200()
{
  unint64_t result = qword_1EA199F50;
  if (!qword_1EA199F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F50);
  }
  return result;
}

uint64_t sub_1C033D254()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C033D2A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_1C033D2B4(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_1C033D2B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C033D304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFrameExpressionLogic.init(from:)(a1, a2);
}

uint64_t sub_1C033D31C(void *a1)
{
  return FormatFrameExpressionLogic.encode(to:)(a1);
}

uint64_t _s8NewsFeed26FormatFrameExpressionLogicO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 24);
  if (!(v5 >> 6))
  {
    if (v9 < 0x40)
    {
      sub_1C033D91C(*(void *)a2, *(void *)(a2 + 8), v8, v9);
      sub_1C033D91C(v3, v2, v4, v5);
      sub_1C033D91C(v3, v2, v4, v5);
      sub_1C033D91C(v7, v6, v8, v9);
      if (sub_1C00DE998(v3, v7))
      {
        LOBYTE(v29) = v2;
        LOBYTE(v25) = v6;
        unint64_t v23 = FormatOperator.rawValue.getter();
        uint64_t v14 = v13;
        if (v23 != FormatOperator.rawValue.getter() || v14 != v15)
        {
LABEL_20:
          char v24 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C033D994(v3, v2, v4, v5);
          sub_1C033D994(v7, v6, v8, v9);
          sub_1C033D994(v7, v6, v8, v9);
          sub_1C033D994(v3, v2, v4, v5);
          if (v24)
          {
            char v16 = 1;
            return v16 & 1;
          }
          goto LABEL_18;
        }
        goto LABEL_12;
      }
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (v5 >> 6 != 1)
  {
    if ((v9 & 0xC0) == 0x80)
    {
      uint64_t v29 = *(void *)a1;
      char v30 = v2;
      uint64_t v31 = v4;
      char v32 = v5 & 1;
      uint64_t v25 = v7;
      char v26 = v6;
      uint64_t v27 = v8;
      char v28 = v9 & 1;
      sub_1C033D91C(v7, v6, v8, v9);
      sub_1C033D91C(v3, v2, v4, v5);
      sub_1C033D91C(v3, v2, v4, v5);
      sub_1C033D91C(v7, v6, v8, v9);
      char v16 = _s8NewsFeed35FormatFrameExpressionLogicTextLinesV2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v25);
      sub_1C033D994(v3, v2, v4, v5);
      sub_1C033D994(v7, v6, v8, v9);
      sub_1C033D994(v7, v6, v8, v9);
      sub_1C033D994(v3, v2, v4, v5);
      return v16 & 1;
    }
    goto LABEL_15;
  }
  if ((v9 & 0xC0) != 0x40)
  {
LABEL_15:
    sub_1C033D91C(*(void *)a1, v2, v4, v5);
    sub_1C033D91C(v7, v6, v8, v9);
    sub_1C033D994(v3, v2, v4, v5);
    uint64_t v17 = v7;
    uint64_t v18 = v6;
    uint64_t v19 = v8;
    unsigned __int8 v20 = v9;
LABEL_17:
    sub_1C033D994(v17, v18, v19, v20);
LABEL_18:
    char v16 = 0;
    return v16 & 1;
  }
  sub_1C033D91C(*(void *)a2, *(void *)(a2 + 8), v8, v9);
  sub_1C033D91C(v3, v2, v4, v5);
  sub_1C033D91C(v3, v2, v4, v5);
  sub_1C033D91C(v7, v6, v8, v9);
  if ((sub_1C00DE998(v3, v7) & 1) == 0)
  {
LABEL_16:
    sub_1C033D994(v3, v2, v4, v5);
    sub_1C033D994(v7, v6, v8, v9);
    sub_1C033D994(v7, v6, v8, v9);
    uint64_t v17 = v3;
    uint64_t v18 = v2;
    uint64_t v19 = v4;
    unsigned __int8 v20 = v5;
    goto LABEL_17;
  }
  LOBYTE(v29) = v2;
  LOBYTE(v25) = v6;
  unint64_t v22 = FormatOperator.rawValue.getter();
  uint64_t v11 = v10;
  if (v22 != FormatOperator.rawValue.getter() || v11 != v12) {
    goto LABEL_20;
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  sub_1C033D994(v3, v2, v4, v5);
  sub_1C033D994(v7, v6, v8, v9);
  sub_1C033D994(v7, v6, v8, v9);
  sub_1C033D994(v3, v2, v4, v5);
  char v16 = 1;
  return v16 & 1;
}

unint64_t sub_1C033D76C(uint64_t a1)
{
  unint64_t result = sub_1C033D794();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C033D794()
{
  unint64_t result = qword_1EA199F58;
  if (!qword_1EA199F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F58);
  }
  return result;
}

unint64_t sub_1C033D7E8(void *a1)
{
  a1[1] = sub_1C033D820();
  a1[2] = sub_1C033D874();
  unint64_t result = sub_1C033D8C8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C033D820()
{
  unint64_t result = qword_1EB85F080;
  if (!qword_1EB85F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F080);
  }
  return result;
}

unint64_t sub_1C033D874()
{
  unint64_t result = qword_1EB85ED38;
  if (!qword_1EB85ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED38);
  }
  return result;
}

unint64_t sub_1C033D8C8()
{
  unint64_t result = qword_1EA199F60;
  if (!qword_1EA199F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F60);
  }
  return result;
}

uint64_t sub_1C033D91C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unsigned int v5 = a4 >> 6;
  if (v5 == 2)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  else if (v5 <= 1)
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FormatFrameExpressionLogic(uint64_t a1)
{
  return sub_1C033D994(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1C033D994(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unsigned int v5 = a4 >> 6;
  if (v5 == 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else if (v5 <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatFrameExpressionLogic(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C033D91C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatFrameExpressionLogic(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C033D91C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C033D994(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormatFrameExpressionLogic(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C033D994(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatFrameExpressionLogic(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 8) >> 4;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatFrameExpressionLogic(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 16 * -a2;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 0;
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C033DBCC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_1C033DBD8(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

int8x16_t sub_1C033DBE8(uint64_t a1, char a2)
{
  char v2 = *(unsigned char *)(a1 + 24) & 1 | (a2 << 6);
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 8), (int8x16_t)xmmword_1C153E100);
  *(int8x16_t *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 24) = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatFrameExpressionLogic()
{
  return &type metadata for FormatFrameExpressionLogic;
}

double sub_1C033DC20@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v11 = a1[8];
  uint64_t v10 = a1[9];
  if (!*a1)
  {
    uint64_t v18 = 0;
LABEL_10:
    sub_1C00C65A8(v18);
    goto LABEL_11;
  }
  if (v4 != 1)
  {
    if (v3)
    {
      if (v6)
      {
        if (v5)
        {
          if (v8)
          {
            uint64_t v19 = a1[7];
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1C033E09C(v4, v3, v6, v5, v8, v7, v9, v19, v20, v11, v10);
            sub_1C00C65A8(v4);
            uint64_t v12 = v21;
            uint64_t v13 = v22;
            double result = *(double *)v20;
            long long v15 = v20[1];
            long long v16 = v23;
            long long v17 = v24;
            *(_OWORD *)a2 = v20[0];
            *(_OWORD *)(a2 + 16) = v15;
            *(void *)(a2 + 32) = v12;
            *(void *)(a2 + 40) = v13;
            *(_OWORD *)(a2 + 48) = v16;
            *(_OWORD *)(a2 + 64) = v17;
            return result;
          }
          uint64_t v18 = *a1;
        }
        else
        {
          uint64_t v18 = *a1;
        }
      }
      else
      {
        uint64_t v18 = *a1;
      }
    }
    else
    {
      uint64_t v18 = *a1;
    }
    goto LABEL_10;
  }
LABEL_11:
  double result = 0.0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

uint64_t FeedGroupGroupingRules.merge(with:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[3];
  uint64_t v28 = a1[2];
  uint64_t v6 = a1[5];
  uint64_t v26 = a1[4];
  uint64_t v8 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v9 = a1[9];
  uint64_t v25 = v2[1];
  uint64_t v24 = v2[2];
  uint64_t v23 = v2[3];
  uint64_t v22 = v2[4];
  uint64_t v21 = v2[6];
  uint64_t v20 = v2[7];
  uint64_t v11 = v2[9];
  uint64_t v19 = v2[8];
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  uint64_t v27 = v5;
  if (*a1)
  {
    uint64_t v18 = *a1;
  }
  else
  {
    uint64_t v18 = *v2;
    swift_retain();
    uint64_t v5 = v27;
    uint64_t v8 = v13;
    uint64_t v7 = v12;
  }
  uint64_t v14 = v28;
  if (v4)
  {
    uint64_t v25 = v4;
    if (v28) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_retain();
    uint64_t v5 = v27;
    uint64_t v14 = v28;
    uint64_t v8 = v13;
    uint64_t v7 = v12;
    if (v28)
    {
LABEL_6:
      uint64_t v24 = v14;
      if (v5) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  swift_retain();
  uint64_t v5 = v27;
  uint64_t v8 = v13;
  uint64_t v7 = v12;
  if (v27)
  {
LABEL_7:
    uint64_t v23 = v5;
    if (v26) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  swift_retain();
  uint64_t v8 = v13;
  uint64_t v7 = v12;
  if (v26)
  {
LABEL_8:
    uint64_t v22 = v26;
    uint64_t v15 = v6;
    if (v6) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  swift_retain();
  uint64_t v8 = v13;
  uint64_t v7 = v12;
  uint64_t v15 = v6;
  if (v6)
  {
LABEL_9:
    if (v8) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v16 = swift_retain();
  uint64_t v8 = v13;
  uint64_t v7 = v12;
  uint64_t v15 = v16;
  if (v13)
  {
LABEL_10:
    uint64_t v21 = v8;
    if (v7) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  swift_retain();
  uint64_t v7 = v12;
  if (v12)
  {
LABEL_11:
    uint64_t v20 = v7;
    if (v10) {
      goto LABEL_12;
    }
LABEL_21:
    swift_retain();
    if (v9) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_20:
  swift_retain();
  if (!v10) {
    goto LABEL_21;
  }
LABEL_12:
  uint64_t v19 = v10;
  if (v9)
  {
LABEL_13:
    uint64_t v11 = v9;
    goto LABEL_23;
  }
LABEL_22:
  swift_retain();
LABEL_23:
  *a2 = v18;
  a2[1] = v25;
  a2[2] = v24;
  a2[3] = v23;
  a2[4] = v22;
  a2[5] = v15;
  a2[6] = v21;
  a2[7] = v20;
  a2[8] = v19;
  a2[9] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxInaccessibleHeadlines.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxEvergreenHeadlines.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxPublisherOccurrences.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxAIGCHeadlines.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.topicDiversity.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.minTagCTRRelativeToBaseline.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxInaccessibleHeadlinesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxEvergreenHeadlinesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxPublisherOccurrencesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRules.maxAIGCHeadlinesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t sub_1C033E09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v44 = a8;
  uint64_t v19 = sub_1C1516D9C();
  uint64_t v50 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (a7)
  {
    uint64_t v43 = a7;
    uint64_t v22 = v19;
    uint64_t v23 = v50;
  }
  else
  {
    sub_1C1516D8C();
    sub_1BFCD407C();
    uint64_t v24 = swift_allocObject();
    uint64_t v23 = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v24 + *(void *)(*(void *)v24 + 112), v21, v19);
    uint64_t v25 = *(void *)(*(void *)v24 + 120);
    uint64_t v43 = v24;
    *(void *)(v24 + v25) = MEMORY[0x1E4FBC860];
    uint64_t v22 = v19;
  }
  uint64_t v26 = v21;
  uint64_t v27 = a1;
  uint64_t v28 = v44;
  uint64_t v45 = a7;
  uint64_t v29 = a4;
  if (v44)
  {
    swift_retain();
    uint64_t v42 = v28;
  }
  else
  {
    swift_retain();
    sub_1C1516D8C();
    sub_1BFCD407C();
    uint64_t v30 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v30 + *(void *)(*(void *)v30 + 112), v26, v22);
    uint64_t v31 = *(void *)(*(void *)v30 + 120);
    uint64_t v42 = v30;
    *(void *)(v30 + v31) = MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = a11;
  if (!a10)
  {
    swift_retain();
    sub_1C1516D8C();
    sub_1BFCD407C();
    uint64_t v33 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v33 + *(void *)(*(void *)v33 + 112), v26, v22);
    *(void *)(v33 + *(void *)(*(void *)v33 + 120)) = MEMORY[0x1E4FBC860];
    if (a11) {
      goto LABEL_9;
    }
LABEL_11:
    swift_retain();
    sub_1C1516D8C();
    swift_release();
    uint64_t v34 = v46;
    swift_release();
    uint64_t v41 = v22;
    uint64_t v35 = v47;
    swift_release();
    swift_release();
    uint64_t v39 = v48;
    swift_release();
    uint64_t v36 = v39;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v37 = v49;
    swift_release();
    sub_1BFCD407C();
    uint64_t v32 = swift_allocObject();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32))(v32 + *(void *)(*(void *)v32 + 112), v26, v41);
    *(void *)(v32 + *(void *)(*(void *)v32 + 120)) = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  swift_retain();
  uint64_t v33 = a10;
  if (!a11) {
    goto LABEL_11;
  }
LABEL_9:
  swift_release();
  uint64_t v34 = v46;
  swift_release();
  uint64_t v35 = v47;
  swift_release();
  swift_release();
  uint64_t v36 = v48;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = v49;
  uint64_t result = swift_release();
LABEL_12:
  *a9 = v27;
  a9[1] = v34;
  a9[2] = v35;
  a9[3] = v29;
  a9[4] = v36;
  a9[5] = v37;
  uint64_t v40 = v42;
  a9[6] = v43;
  a9[7] = v40;
  a9[8] = v33;
  a9[9] = v32;
  return result;
}

uint64_t sub_1C033E528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C033F160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C033E550(uint64_t a1)
{
  unint64_t v2 = sub_1BFCD4180();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C033E58C(uint64_t a1)
{
  unint64_t v2 = sub_1BFCD4180();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupGroupingRules.encode(to:)(void *a1)
{
  sub_1BFCD4018(0, &qword_1EB86B840, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v26 = v1[2];
  uint64_t v27 = v9;
  uint64_t v11 = v1[3];
  uint64_t v24 = v1[4];
  uint64_t v25 = v11;
  uint64_t v12 = v1[5];
  uint64_t v22 = v1[6];
  uint64_t v23 = v12;
  uint64_t v13 = v1[7];
  uint64_t v20 = v1[8];
  uint64_t v21 = v13;
  uint64_t v19 = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCD4180();
  sub_1C1520F0C();
  uint64_t v29 = v10;
  uint64_t v14 = v8;
  char v28 = 0;
  sub_1BFDC6E38();
  sub_1BFCD3F88(qword_1EB865388, (void (*)(uint64_t))sub_1BFDC6E38);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v16 = v25;
    uint64_t v15 = v26;
    uint64_t v17 = v24;
    uint64_t v29 = v27;
    char v28 = 1;
    sub_1C152080C();
    uint64_t v29 = v15;
    char v28 = 2;
    sub_1C152080C();
    uint64_t v29 = v16;
    char v28 = 3;
    sub_1C152080C();
    uint64_t v29 = v17;
    char v28 = 4;
    sub_1C0087D7C();
    sub_1BFCD3F88(&qword_1EB865348, (void (*)(uint64_t))sub_1C0087D7C);
    sub_1C152080C();
    uint64_t v29 = v23;
    char v28 = 5;
    sub_1BFDC6EB0();
    sub_1BFCD3F88(&qword_1EB865380, (void (*)(uint64_t))sub_1BFDC6EB0);
    sub_1C152078C();
    uint64_t v29 = v22;
    char v28 = 6;
    sub_1BFCD407C();
    sub_1BFCD3F88(&qword_1EB862CA8, (void (*)(uint64_t))sub_1BFCD407C);
    sub_1C152080C();
    uint64_t v29 = v21;
    char v28 = 7;
    sub_1C152080C();
    uint64_t v29 = v20;
    char v28 = 8;
    sub_1C152080C();
    uint64_t v29 = v19;
    char v28 = 9;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v5);
}

uint64_t sub_1C033EA34(void *a1)
{
  return FeedGroupGroupingRules.encode(to:)(a1);
}

BOOL _s8NewsFeed0B18GroupGroupingRulesV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*(void *)(*a1 + 16) != *(void *)(*a2 + 16)) {
    return 0;
  }
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v23 = a1[6];
  uint64_t v24 = a1[5];
  uint64_t v20 = a1[8];
  uint64_t v18 = a1[9];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v21 = a2[7];
  uint64_t v22 = a1[7];
  uint64_t v19 = a2[8];
  uint64_t v17 = a2[9];
  if ((sub_1C00F2DD4(*(void *)(*a1 + 24), *(void *)(*a2 + 24)) & 1) == 0
    || *(void *)(v2 + 16) != *(void *)(v6 + 16)
    || (sub_1C00F2DD4(*(void *)(v2 + 24), *(void *)(v6 + 24)) & 1) == 0
    || *(void *)(v3 + 16) != *(void *)(v7 + 16)
    || (sub_1C00F2DD4(*(void *)(v3 + 24), *(void *)(v7 + 24)) & 1) == 0
    || *(void *)(v5 + 16) != *(void *)(v9 + 16)
    || (sub_1C00F2DD4(*(void *)(v5 + 24), *(void *)(v9 + 24)) & 1) == 0
    || (sub_1C03BF2E8(v4, v8) & 1) == 0)
  {
    return 0;
  }
  if (v24)
  {
    uint64_t v12 = v23;
    if (!v10) {
      return 0;
    }
    if (*(double *)(v24 + 16) != *(double *)(v10 + 16)) {
      return 0;
    }
    uint64_t v13 = v11;
    unint64_t v14 = *(void *)(v24 + 24);
    uint64_t v15 = *(void *)(v10 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v14) = sub_1C00F309C(v14, v15);
    swift_release();
    swift_release();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v12 = v23;
    uint64_t v13 = v11;
    if (v10) {
      return 0;
    }
  }
  sub_1C1516D9C();
  sub_1BFCD3F88(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
  return (sub_1C151E5CC() & 1) != 0
      && (sub_1C00F1B28(*(void *)(v12 + *(void *)(*(void *)v12 + 120)), *(void *)(v13 + *(void *)(*(void *)v13 + 120))) & 1) != 0&& (sub_1C151E5CC() & 1) != 0&& (sub_1C00F1B28(*(void *)(v22 + *(void *)(*(void *)v22 + 120)), *(void *)(v21 + *(void *)(*(void *)v21 + 120))) & 1) != 0&& (sub_1C151E5CC() & 1) != 0&& (sub_1C00F1B28(*(void *)(v20 + *(void *)(*(void *)v20 + 120)), *(void *)(v19 + *(void *)(*(void *)v19 + 120))) & 1) != 0&& (sub_1C151E5CC() & 1) != 0&& (sub_1C00F1B28(*(void *)(v18 + *(void *)(*(void *)v18 + 120)), *(void *)(v17 + *(void *)(*(void *)v17 + 120))) & 1) != 0;
}

void *assignWithCopy for FeedGroupGroupingRules(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FeedGroupGroupingRules(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupGroupingRules.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C033F0D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupGroupingRules.CodingKeys()
{
  return &type metadata for FeedGroupGroupingRules.CodingKeys;
}

unint64_t sub_1C033F10C()
{
  unint64_t result = qword_1EA199F68;
  if (!qword_1EA199F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F68);
  }
  return result;
}

uint64_t sub_1C033F160(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001C160AFE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C160B000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C160B020 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C160B040 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7669446369706F74 && a2 == 0xEE00797469737265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C160B060 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001C160B080 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001C160B0B0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001C160B0E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001C160B110)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

BOOL static FeedManagerLoadSource.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t FeedManagerLoadSource.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedManagerLoadSource.hashValue.getter()
{
  return sub_1C1520E0C();
}

BOOL sub_1C033F5B8(char *a1, char *a2)
{
  return sub_1C00C3628(*a1, *a2);
}

uint64_t sub_1C033F5C4()
{
  return _s8NewsFeed0B12RefreshStateO9hashValueSivg_0();
}

uint64_t sub_1C033F5CC()
{
  return sub_1C00C3638();
}

uint64_t sub_1C033F5D4()
{
  return sub_1C1520E0C();
}

uint64_t FeedManager.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 112) + 24))(*(void *)(*(void *)v0 + 88));
}

uint64_t FeedManager.loadingGate.getter()
{
  sub_1C005F468();
  return swift_retain();
}

uint64_t FeedManager.loadingSource.getter()
{
  sub_1C0085FD0();
  return swift_retain();
}

void *FeedManager.__allocating_init(feed:database:offlineDatabase:service:serviceConfigFetcher:loadingGate:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  swift_allocObject();
  unint64_t v14 = sub_1C0343ABC(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v7 + 80) - 8) + 8))(a5);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v7 + 88) - 8) + 8))(a4);
  uint64_t v15 = sub_1C151FD8C();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(a3, v15);
  v16(a2, v15);
  return v14;
}

uint64_t sub_1C033F81C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151917C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v1 = sub_1C151FD8C();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](v1);
  char v5 = (char *)&v7 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(TupleTypeMetadata2 - 8) + 56))((char *)&v7 - v4, 1, 1, TupleTypeMetadata2, v3);
  sub_1BFD643A0((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_1C033F9E8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151917C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v4 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v6 = (char *)v13 - v5;
  uint64_t v8 = *(int *)(v7 + 56);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)v13 - v5, a1, AssociatedTypeWitness, v4);
  uint64_t v10 = *(void *)(a1 + v8);
  *(void *)&v6[v8] = v10;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v11(v6, AssociatedTypeWitness);
  return v10;
}

uint64_t sub_1C033FB80(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v15 = sub_1C151631C();
  uint64_t v4 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v14 = v7;
  uint64_t v8 = sub_1BFD009F8(v7);
  FeedCursorContainer.createdDate.getter(v8, (uint64_t)v6);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = v16;
  BOOL v12 = FeedServiceContextType.shouldRefreshRootCursor(createdDate:)((uint64_t)v6, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v15);
  if (v12)
  {
    sub_1C151F38C();
    sub_1C15197BC();
    return sub_1BFC94708(v11);
  }
  else
  {
    type metadata accessor for FeedServiceFetchResult();
    sub_1C151917C();
    unint64_t v17 = v14;
    swift_retain();
    return sub_1C151907C();
  }
}

uint64_t FeedManager.atomicRebuild<A>(context:policy:preCommit:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v71 = a1;
  uint64_t v72 = a5;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v73 = (void *)*v5;
  unint64_t v7 = v73;
  uint64_t v61 = v73[13];
  uint64_t v70 = v73[10];
  uint64_t v65 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v58 = *(void *)(v74 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v66 = (char *)&v50 - v8;
  uint64_t v9 = sub_1C151635C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  BOOL v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = *a2;
  sub_1C151634C();
  uint64_t v13 = sub_1C151633C();
  uint64_t v69 = v13;
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v51 = (id)v5[6];
  sub_1BFFDEB20();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = sub_1BFE9C558();
  *(void *)(v16 + 32) = v13;
  *(void *)(v16 + 40) = v15;
  uint64_t v67 = v15;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1C1518CBC();
  uint64_t v17 = v74;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  uint64_t v59 = v74 + 16;
  uint64_t v60 = v18;
  uint64_t v19 = v66;
  uint64_t v20 = AssociatedTypeWitness;
  v18(v66, v71, AssociatedTypeWitness);
  uint64_t v21 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v57 = v21 | 7;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = v70;
  uint64_t v56 = v7[11];
  *((void *)v22 + 3) = v56;
  uint64_t v55 = v7[12];
  uint64_t v23 = v72;
  *((void *)v22 + 4) = v55;
  *((void *)v22 + 5) = v23;
  uint64_t v24 = v61;
  *((void *)v22 + 6) = v61;
  uint64_t v53 = v7[14];
  *((void *)v22 + 7) = v53;
  uint64_t v52 = v7[15];
  *((void *)v22 + 8) = v52;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v74 = v17 + 32;
  uint64_t v54 = v25;
  v25(&v22[(v21 + 72) & ~v21], v19, v20);
  uint64_t v26 = v24;
  swift_getAssociatedTypeWitness();
  uint64_t v27 = (void *)v50;
  sub_1C151931C();

  swift_release();
  char v28 = (void *)swift_allocObject();
  uint64_t v29 = v51;
  v28[2] = v23;
  v28[3] = v29;
  uint64_t v30 = v69;
  v28[4] = v69;
  uint64_t v31 = v62;
  v28[5] = v67;
  v28[6] = v31;
  swift_bridgeObjectRetain();
  id v51 = v29;
  swift_retain();
  uint64_t v32 = (void *)sub_1C1518E7C();
  uint64_t v33 = v70;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v34 = v66;
  uint64_t v35 = AssociatedTypeWitness;
  v60(v66, v71, AssociatedTypeWitness);
  uint64_t v36 = (char *)swift_allocObject();
  uint64_t v37 = v56;
  *((void *)v36 + 2) = v33;
  *((void *)v36 + 3) = v37;
  uint64_t v38 = v72;
  *((void *)v36 + 4) = v55;
  *((void *)v36 + 5) = v38;
  uint64_t v39 = v53;
  *((void *)v36 + 6) = v26;
  *((void *)v36 + 7) = v39;
  uint64_t v40 = v51;
  *((void *)v36 + 8) = v52;
  *((void *)v36 + 9) = v40;
  uint64_t v41 = v67;
  *((void *)v36 + 10) = v30;
  *((void *)v36 + 11) = v41;
  uint64_t v42 = v64;
  *((void *)v36 + 12) = v63;
  *((void *)v36 + 13) = v42;
  v54(&v36[(v21 + 112) & ~v21], v34, v35);
  swift_bridgeObjectRetain();
  id v43 = v40;
  swift_retain();
  uint64_t v44 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v45 = (void *)swift_allocObject();
  v45[2] = v38;
  v45[3] = v43;
  v45[4] = v69;
  v45[5] = v41;
  id v46 = v43;
  uint64_t v47 = (void *)sub_1C1518E7C();
  uint64_t v48 = sub_1C151904C();
  swift_release();
  swift_release();

  return v48;
}

uint64_t sub_1C034043C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = (void *)*a2;
  sub_1BFFDEB20();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 64) = sub_1BFE9C558();
  *(void *)(v11 + 32) = a4;
  *(void *)(v11 + 40) = a5;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v12 = v10[13];
  uint64_t v13 = v10[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  static FeedLocation.topOfFeed(_:)(a1, AssociatedTypeWitness, AssociatedConformanceWitness, &v26);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v13;
  uint64_t v17 = v10[11];
  v16[3] = v17;
  v16[4] = v10[12];
  v16[5] = a7;
  v16[6] = v12;
  uint64_t v18 = v10[14];
  v16[7] = v18;
  v16[8] = v10[15];
  v16[9] = a3;
  v16[10] = a4;
  v16[11] = a5;
  v16[12] = a6;
  swift_bridgeObjectRetain();
  id v19 = a3;
  swift_retain();
  uint64_t v20 = FeedServiceType.fetchAll(from:until:)(&v26, (uint64_t)sub_1C034485C, (uint64_t)v16, v17, v18);
  swift_release();
  swift_release();
  return v20;
}

BOOL sub_1C0340698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFFDEB20();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C152C7F0;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1BFE9C558();
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  uint64_t v9 = MEMORY[0x1C18C6830](a1, AssociatedTypeWitness);
  uint64_t v10 = MEMORY[0x1E4FBB550];
  uint64_t v11 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v7 + 104) = v11;
  *(void *)(v7 + 72) = v9;
  swift_retain();
  sub_1C151933C();
  swift_release();
  *(void *)(v7 + 136) = v10;
  *(void *)(v7 + 144) = v11;
  *(void *)(v7 + 112) = v13;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C151933C();
  swift_release();
  return v9 >= v13;
}

uint64_t sub_1C0340890(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v65 = a6;
  uint64_t v66 = a8;
  uint64_t v64 = a7;
  uint64_t v58 = a4;
  uint64_t v60 = a3;
  uint64_t v12 = *(void **)a2;
  uint64_t v13 = *(void *)(*(void *)a2 + 104);
  uint64_t v14 = *(void *)(*(void *)a2 + 80);
  uint64_t v67 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v61 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v62 = *(void *)(v61 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v59 = (char *)v48 - v16;
  unint64_t v17 = *a1;
  sub_1BFFDEB20();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1527210;
  *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v18 + 64) = sub_1BFE9C558();
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  uint64_t v57 = a5;
  v48[2] = swift_getAssociatedTypeWitness();
  v48[1] = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  unint64_t v49 = v17;
  uint64_t v84 = FeedServiceFetchResult.emittedGroups.getter(v17);
  uint64_t v77 = v14;
  uint64_t v19 = v14;
  uint64_t v53 = v14;
  uint64_t v55 = a2;
  uint64_t v78 = v12[11];
  uint64_t v20 = v78;
  uint64_t v21 = v12[12];
  uint64_t v52 = v21;
  uint64_t v22 = v67;
  uint64_t v79 = v21;
  uint64_t v80 = v67;
  uint64_t v54 = v13;
  uint64_t v81 = v13;
  uint64_t v23 = v12[14];
  uint64_t v82 = v23;
  uint64_t v51 = v23;
  uint64_t v83 = v12[15];
  uint64_t v24 = v83;
  uint64_t v50 = v83;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v69 = v19;
  uint64_t v70 = v20;
  uint64_t v71 = v21;
  uint64_t v72 = v22;
  uint64_t v73 = v13;
  uint64_t v74 = v23;
  uint64_t v75 = v24;
  uint64_t v76 = KeyPath;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v29 = v56;
  uint64_t v31 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0344530, (uint64_t)v68, v26, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v30);
  uint64_t v56 = v29;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFE9DE70(0, (unint64_t *)&qword_1EB879F20, v28, MEMORY[0x1E4FBB320]);
  *(void *)(v18 + 96) = v32;
  *(void *)(v18 + 104) = sub_1C034455C();
  *(void *)(v18 + 72) = v31;
  sub_1C151F38C();
  uint64_t v33 = v60;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  unint64_t v34 = v49;
  FeedServiceFetchResult.emittedGroups.getter(v49);
  uint64_t v65 = (uint64_t (*)(void))v65();
  swift_bridgeObjectRelease();
  uint64_t v35 = v61;
  uint64_t v36 = v59;
  uint64_t v37 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v59, v66, AssociatedTypeWitness);
  unint64_t v38 = (*(unsigned __int8 *)(v35 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v39 = (char *)swift_allocObject();
  *((void *)v39 + 2) = v53;
  *((void *)v39 + 3) = v20;
  uint64_t v40 = v67;
  *((void *)v39 + 4) = v52;
  *((void *)v39 + 5) = v40;
  uint64_t v41 = v51;
  *((void *)v39 + 6) = v54;
  *((void *)v39 + 7) = v41;
  *((void *)v39 + 8) = v50;
  *((void *)v39 + 9) = v33;
  uint64_t v42 = v57;
  *((void *)v39 + 10) = v58;
  *((void *)v39 + 11) = v42;
  uint64_t v43 = v55;
  *((void *)v39 + 12) = v34;
  *((void *)v39 + 13) = v43;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v39[v38], v36, v37);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v44 = v33;
  uint64_t v45 = (void *)sub_1C1518E7C();
  uint64_t v46 = sub_1C1518FFC();
  swift_release();

  swift_release();
  return v46;
}

uint64_t sub_1C0340E64@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 8) + 8);
  __n128 v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t result = v3(v4, v2);
  *a1 = result;
  a1[1] = v6;
  return result;
}

void sub_1C0340FA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v85 = a8;
  uint64_t v104 = a7;
  unint64_t v109 = a5;
  uint64_t v86 = a1;
  uint64_t v84 = a9;
  uint64_t v93 = *a6;
  uint64_t v13 = v93;
  uint64_t v102 = type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1F4188790](v102);
  uint64_t v101 = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v93 + 96);
  uint64_t v91 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v103 = (uint64_t)v81 - v17;
  sub_1BFEE9E20(0, &qword_1EB886BB0, (void (*)(uint64_t))type metadata accessor for FeedContext);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v100 = (char *)v81 - v19;
  uint64_t v20 = *(void *)(v13 + 104);
  uint64_t v97 = a6;
  uint64_t v21 = *(void *)(v13 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v107 = v21;
  uint64_t v108 = v20;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v94 = swift_getAssociatedTypeWitness();
  uint64_t v99 = sub_1C151FD8C();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v111 = (char *)v81 - v24;
  sub_1BFEE9E20(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v25 - 8);
  v110 = (char *)v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)v81 - v28;
  uint64_t v96 = sub_1C151FD8C();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v31 = (char *)v81 - v30;
  sub_1BFFDEB20();
  uint64_t v87 = v32;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
  *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v88 = sub_1BFE9C558();
  *(void *)(v33 + 64) = v88;
  uint64_t v89 = a3;
  *(void *)(v33 + 32) = a3;
  *(void *)(v33 + 40) = a4;
  uint64_t v90 = a4;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  uint64_t v83 = a2;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  double v34 = CACurrentMediaTime();
  uint64_t v35 = sub_1BFD009F8(v109);
  if (v35 < 0)
  {
    uint64_t v60 = *(void *)(v93 + 88);
    *(void *)&long long v115 = v107;
    *((void *)&v115 + 1) = v60;
    uint64_t v116 = v15;
    uint64_t v117 = v108;
    long long v118 = *(_OWORD *)(v93 + 112);
    type metadata accessor for FeedManager.Errors();
    swift_getWitnessTable();
    swift_allocError();
    unsigned char *v61 = 2;
    swift_willThrow();
    return;
  }
  uint64_t v82 = v15;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v106 = v35;
  v36(v31, 1, 1, AssociatedTypeWitness);
  unsigned __int8 v114 = 4;
  uint64_t v37 = sub_1C151631C();
  unint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  uint64_t v92 = v29;
  v38(v29, 1, 1, v37);
  v38(v110, 1, 1, v37);
  v81[2] = AssociatedTypeWitness;
  type metadata accessor for FeedGroupEmitter();
  v81[1] = AssociatedConformanceWitness;
  swift_retain();
  uint64_t v39 = (unsigned char *)sub_1C151ECBC();
  sub_1C151ED5C();
  swift_getTupleTypeMetadata2();
  sub_1C151ECBC();
  uint64_t v40 = sub_1C151E3BC();
  uint64_t v41 = sub_1C151ECBC();
  uint64_t v42 = sub_1C151ECBC();
  uint64_t v43 = (uint64_t)v111;
  (*(void (**)(void))(*(void *)(v94 - 8) + 56))();
  uint64_t v44 = type metadata accessor for FeedContext();
  uint64_t v45 = (uint64_t)v100;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v100, 1, 1, v44);
  uint64_t v116 = 0;
  long long v115 = 0u;
  uint64_t v112 = 0;
  __int16 v113 = 256;
  uint64_t v80 = v42;
  uint64_t v46 = (uint64_t)v92;
  uint64_t v47 = (uint64_t)v110;
  uint64_t v48 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v31, 0, &v114, (uint64_t)v92, (uint64_t)v110, v39, v40, v41, v80, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          v43,
          v45,
          (uint64_t *)&v115,
          (uint64_t)&v112,
          0,
          0,
          0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C034477C(v45, &qword_1EB886BB0, (void (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v111, v99);
  unint64_t v49 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C034477C(v47, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  uint64_t v50 = v46;
  uint64_t v51 = v48;
  sub_1C034477C(v50, (unint64_t *)&qword_1EB871180, v49);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v31, v96);
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = FeedCursorContainer.init(cursor:)(v48);
  swift_getAssociatedTypeWitness();
  uint64_t v53 = swift_getAssociatedConformanceWitness();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  swift_retain();
  uint64_t v55 = swift_checkMetadataState();
  uint64_t v56 = (uint64_t)v101;
  v54(v55, v53);
  LOBYTE(v48) = *(unsigned char *)(v56 + *(int *)(v102 + 28));
  sub_1BFE62840(v56);
  LOBYTE(v115) = (_BYTE)v48;
  uint64_t v57 = v103;
  uint64_t v58 = v105;
  sub_1BFCFFDA0(&v115, v103);
  if (v58)
  {
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  uint64_t v59 = v82;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v93 + 120) + 80))(v52 | 0x8000000000000000, 1, v82);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v57, v59);
  uint64_t v111 = v51;
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_1C152A660;
  uint64_t v63 = MEMORY[0x1E4FBB1A0];
  unint64_t v64 = v88;
  *(void *)(v62 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v62 + 64) = v64;
  uint64_t v65 = v90;
  *(void *)(v62 + 32) = v89;
  *(void *)(v62 + 40) = v65;
  uint64_t v66 = sub_1BFD009F8(v109);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v67 = FeedCursorContainer.rootCursorContainer.getter(v66);
  swift_release();
  uint64_t v68 = sub_1BFE16970(v67);
  uint64_t v70 = v69;
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)(v62 + 96) = v63;
  *(void *)(v62 + 104) = v64;
  *(void *)(v62 + 72) = v68;
  *(void *)(v62 + 80) = v70;
  qos_class_self();
  id v71 = (id)FCStringFromQoSClass();
  if (!v71) {
    goto LABEL_14;
  }
  uint64_t v72 = v71;
  uint64_t v73 = sub_1C151E62C();
  uint64_t v75 = v74;

  *(void *)(v62 + 136) = v63;
  *(void *)(v62 + 144) = v64;
  *(void *)(v62 + 112) = v73;
  *(void *)(v62 + 120) = v75;
  double v76 = (CACurrentMediaTime() - v34) * 1000.0;
  uint64_t v77 = v86;
  if ((~*(void *)&v76 & 0x7FF0000000000000) != 0)
  {
    uint64_t v78 = v85;
    if (v76 > -9.22337204e18)
    {
      if (v76 < 9.22337204e18)
      {
        uint64_t v79 = MEMORY[0x1E4FBC240];
        *(void *)(v62 + 176) = MEMORY[0x1E4FBC1C8];
        *(void *)(v62 + 184) = v79;
        *(void *)(v62 + 152) = (uint64_t)v76;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v84, v77, v78);
        return;
      }
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t sub_1C0341BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BFFDEB20();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1BFE9C558();
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 40) = a5;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  swift_bridgeObjectRetain();
  sub_1C152036C();
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 72) = 0;
  *(void *)(v7 + 80) = 0xE000000000000000;
  sub_1C151F38C();
  sub_1C15197BC();
  return swift_bridgeObjectRelease();
}

uint64_t FeedManager.fetchReplaceGroup(from:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  uint64_t v1 = sub_1C151901C();
  swift_release();

  return v1;
}

uint64_t sub_1C0341E44@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a2;
  uint64_t v22 = a3;
  uint64_t v23 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v21 = *(void *)(v4 + 96);
  uint64_t v20 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - v10;
  unint64_t v12 = *a1;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  FeedServiceFetchResult.serviceContext.getter(v12, v13, AssociatedConformanceWitness, (uint64_t)v8);
  uint64_t v15 = v25;
  sub_1BFCFFA58((uint64_t)v11);
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  }
  uint64_t v17 = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  uint64_t v18 = v21;
  (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v23 + 120) + 80))(v12, 0, v21);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v18);
  unint64_t *v17 = v12;
  return swift_retain();
}

uint64_t sub_1C0342100(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v20 = (void *)*v2;
  uint64_t v4 = v20[13];
  uint64_t v5 = v20[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v22 = (char *)v19 - v7;
  uint64_t v30 = v5;
  uint64_t v26 = v20[11];
  uint64_t v31 = v26;
  uint64_t v25 = v20[12];
  uint64_t v32 = v25;
  uint64_t v33 = v4;
  uint64_t v24 = v20[14];
  uint64_t v34 = v24;
  uint64_t v23 = v20[15];
  uint64_t v35 = v23;
  uint64_t v36 = a1;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursor();
  sub_1C151932C();
  uint64_t v8 = (void *)sub_1C1518E7C();
  v19[1] = sub_1C151900C();
  swift_release();

  uint64_t v9 = v22;
  uint64_t v10 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v22, v29, AssociatedTypeWitness);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (char *)swift_allocObject();
  uint64_t v13 = v26;
  *((void *)v12 + 2) = v5;
  *((void *)v12 + 3) = v13;
  *((void *)v12 + 4) = v25;
  *((void *)v12 + 5) = v4;
  uint64_t v14 = v23;
  *((void *)v12 + 6) = v24;
  *((void *)v12 + 7) = v14;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v12[v11], v9, v10);
  uint64_t v15 = (void *)sub_1C1518E7C();
  swift_getTupleTypeMetadata2();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v16 = (void *)sub_1C1518E7C();
  type metadata accessor for FeedLocation();
  uint64_t v17 = sub_1C151901C();
  swift_release();

  return v17;
}

uint64_t sub_1C03424BC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t)a2;
  uint64_t v30 = (void *)*a2;
  uint64_t v31 = a4;
  uint64_t v8 = v30[13];
  uint64_t v9 = v30[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v27 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v29 = (char *)v26 - v12;
  swift_getAssociatedConformanceWitness();
  uint64_t v28 = a3;
  if (!FeedServiceContextType.canReadFromNetwork()())
  {
    swift_willThrow();
    id v25 = a1;
    return v6;
  }
  v26[2] = v4;
  sub_1BFFDEB20();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  uint64_t v34 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v14 = v32;
  unint64_t v15 = v33;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1BFE9C558();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v15;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  LOBYTE(v32) = 2;
  sub_1C0088B0C();
  uint64_t v16 = sub_1C15184FC();
  uint64_t result = MEMORY[0x1C18C0080](v16);
  v26[1] = result;
  if (result)
  {
    v26[0] = sub_1C1518CBC();
    uint64_t v18 = v27;
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v28, AssociatedTypeWitness);
    unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = (char *)swift_allocObject();
    *((void *)v22 + 2) = v9;
    uint64_t v23 = v30;
    *((void *)v22 + 3) = v30[11];
    *((void *)v22 + 4) = v23[12];
    *((void *)v22 + 5) = v8;
    *((void *)v22 + 6) = v23[14];
    *((void *)v22 + 7) = v23[15];
    *((void *)v22 + 8) = v6;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v22[v20], v19, AssociatedTypeWitness);
    *(void *)&v22[v21] = v31;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedLocation();
    swift_retain();
    swift_retain();
    uint64_t v24 = (void *)v26[0];
    uint64_t v6 = sub_1C1518FEC();
    swift_release();

    swift_release();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0342894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void *)(*(void *)a2 + 104);
  uint64_t v7 = *(void *)(*(void *)a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v9 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v19 = (char *)&v19 - v10;
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(a3, v7, v6, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a3, AssociatedTypeWitness);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = v7;
  *((void *)v13 + 3) = v5[11];
  *((void *)v13 + 4) = v5[12];
  *((void *)v13 + 5) = v6;
  *((void *)v13 + 6) = v5[14];
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  *((void *)v13 + 7) = v5[15];
  *((void *)v13 + 8) = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v13[v12], v14, AssociatedTypeWitness);
  swift_retain();
  uint64_t v16 = (void *)sub_1C1518E7C();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedLocation();
  uint64_t v17 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_1C0342B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v21 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  __n128 v9 = (char *)&v20 - v8;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursorTracker();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = swift_allocBox();
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v12, v23, v10);
  swift_beginAccess();
  uint64_t v14 = 0;
  unint64_t v15 = *(void *)(v22 + 16);
  if ((~v15 & 0xF000000000000007) != 0)
  {
    uint64_t v14 = sub_1C005EEC8(v15);
    swift_retain();
  }
  uint64_t v16 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v17(v9, v25, AssociatedTypeWitness);
  if (!v14)
  {
    uint64_t v18 = (uint64_t)v21;
    v17(v21, (uint64_t)v9, AssociatedTypeWitness);
    uint64_t v14 = FeedCursorTracker.__allocating_init(context:)(v18);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, AssociatedTypeWitness);
  *(void *)(v13 + v16) = v14;
  uint64_t *v26 = v24;
  return result;
}

uint64_t sub_1C0342DDC(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v15 = a1;
  id v6 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceError();
  if (!swift_dynamicCast()) {
    goto LABEL_8;
  }
  if (v14 != 6 || v10 != 1 || v12 | v11 | v13)
  {
    sub_1C0344B9C(v10, v11, v12, v13, v14);
    goto LABEL_8;
  }
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  if ((~v7 & 0xF000000000000007) == 0)
  {
LABEL_8:
    swift_willThrow();
    id v8 = a1;
    return a2;
  }
  swift_retain();
  sub_1C151F38C();
  sub_1C15197BC();
  sub_1C0085FE4(v7, (uint64_t *)&v15);
  a2 = sub_1BFD645A0();
  sub_1BFE14324(v7);
  swift_release();
  return a2;
}

uint64_t sub_1C0342FCC(uint64_t a1)
{
  return FeedCursorContainer.cursor()(a1);
}

uint64_t sub_1C0343060(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __n128 v3 = (void *)*a2;
  sub_1C151F38C();
  uint64_t v4 = sub_1C15197BC();
  uint64_t result = MEMORY[0x1C18C0080](v4);
  if (result)
  {
    id v6 = (void *)sub_1C1518CBC();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v3[10];
    v7[3] = v3[11];
    v7[4] = v3[12];
    v7[5] = v3[13];
    v7[6] = v3[14];
    v7[7] = v3[15];
    v7[8] = v2;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedCursor();
    swift_retain();
    uint64_t v8 = sub_1C1518FFC();
    swift_release();

    swift_release();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0343210(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __n128 v3 = *(void **)a2;
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*(void *)a2 + 104);
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v6, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = v3[11];
  v7[4] = v3[12];
  v7[5] = v5;
  v7[6] = v3[14];
  v7[7] = v3[15];
  v7[8] = v4;
  swift_retain();
  uint64_t v8 = (void *)sub_1C1518E7C();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursor();
  swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1C03433F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  uint64_t v7 = (char *)a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *a3 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v7, a1, v6);
  return swift_retain();
}

uint64_t sub_1C03434CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v47 = swift_getAssociatedConformanceWitness();
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  uint64_t v49 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)v39 - v7;
  uint64_t v8 = swift_checkMetadataState();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  uint64_t v45 = v9;
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v39 - v10;
  uint64_t v12 = type metadata accessor for FeedCursor();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = TupleTypeMetadata2 - 8;
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v16 = (char *)v39 - v15;
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v39 - v19;
  sub_1C151F38C();
  sub_1C15197BC();
  uint64_t v21 = *(int *)(v14 + 56);
  uint64_t v22 = &v16[v21];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = *a1;
  uint64_t v42 = v17;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v25(&v16[v21], v23, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v22, AssociatedTypeWitness);
  strcpy(v51, "cursor serviceConfig strategy trigger ");
  uint64_t v52 = v12;
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t v54 = &type metadata for FeedRefreshStrategy;
  uint64_t v55 = &type metadata for FeedRefreshTrigger;
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v41 = swift_allocBox();
  uint64_t v28 = v27;
  uint64_t v29 = (char *)v27 + TupleTypeMetadata[12];
  v39[1] = (char *)v27 + TupleTypeMetadata[16];
  uint64_t v40 = TupleTypeMetadata[20];
  *uint64_t v27 = v24;
  v25(v29, v20, AssociatedTypeWitness);
  uint64_t v30 = v43;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v43 + 64);
  swift_retain_n();
  uint64_t v32 = v11;
  v31(AssociatedTypeWitness, v30);
  unint64_t v33 = v46;
  uint64_t v34 = v44;
  (*(void (**)(uint64_t, uint64_t))(v47 + 48))(v44, v47);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v34);
  uint64_t v35 = v24 + *(void *)(*(void *)v24 + 232);
  uint64_t v36 = v48;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v35, v36, v37);
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v36);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v20, AssociatedTypeWitness);
  *((unsigned char *)v28 + v40) = 1;
  *uint64_t v50 = v41 | 0x4000000000000000;
  return result;
}

uint64_t sub_1C0343A50(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return FeedManager.atomicRebuild<A>(context:policy:preCommit:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0343A74()
{
  return FeedManager.state.getter();
}

uint64_t sub_1C0343A98()
{
  return FeedManager.fetchReplaceGroup(from:)();
}

void *sub_1C0343ABC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v32 = a2;
  uint64_t v9 = *v6;
  uint64_t v10 = *(void *)(*v6 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151917C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v31 = sub_1C151FD8C();
  uint64_t v12 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = *a1;
  uint64_t v28 = a1[1];
  uint64_t v29 = v15;
  int v30 = *((unsigned __int8 *)a1 + 32);
  char v38 = 0;
  sub_1BFE9DE70(0, (unint64_t *)&unk_1EB85F2F8, (uint64_t)&type metadata for FeedManagerLoadSource, MEMORY[0x1E4FAAA60]);
  swift_allocObject();
  v6[3] = sub_1C15184BC();
  uint64_t v16 = (char *)v7 + *(void *)(*v7 + 184);
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  uint64_t v17 = *(void *)(*v6 + 192);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
  long long v37 = *((_OWORD *)a1 + 1);
  v18(v14, 1, 1, TupleTypeMetadata2);
  uint64_t v19 = *(void *)(v9 + 88);
  uint64_t v20 = sub_1BFD648F0((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v31);
  *(void *)((char *)v7 + v17) = v20;
  uint64_t v21 = v28;
  v7[4] = v29;
  v7[5] = v21;
  *((_OWORD *)v7 + 3) = v37;
  *((unsigned char *)v7 + 64) = v30;
  uint64_t v22 = (char *)v7 + *(void *)(*v7 + 152);
  uint64_t v23 = sub_1C151FD8C();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v22, v32, v23);
  v24((char *)v7 + *(void *)(*v7 + 160), v33, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))((char *)v7 + *(void *)(*v7 + 168), v34, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))((char *)v7 + *(void *)(*v7 + 176), v35, v10);
  uint64_t v25 = v36;
  if (!v36)
  {
    type metadata accessor for FeedLoadingGate(0);
    swift_allocObject();
    uint64_t v25 = sub_1BFD65324(1, (id)v37);
  }
  v7[2] = v25;
  return v7;
}

uint64_t sub_1C0343F28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0343F60()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1C0344008(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return (*(uint64_t (**)(unint64_t, void))(*(void *)(*(void *)a1 + 104) + 48))(v1 + ((*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), *(void *)(*(void *)a1 + 80));
}

uint64_t sub_1C03440E4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C034412C(uint64_t a1, void *a2)
{
  return sub_1C034043C(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16));
}

uint64_t sub_1C0344150()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1C0344244(unint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return sub_1C0340890(a1, a2, *(void **)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(uint64_t (**)(void))(v2 + 96), *(void *)(v2 + 104), v2 + ((*(unsigned __int8 *)(v6 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
}

uint64_t sub_1C03442F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0344330(uint64_t a1, uint64_t a2)
{
  return sub_1C0341BD8(a1, a2, v2[3], v2[4], v2[5]);
}

uint64_t sub_1C034433C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0344378()
{
  return (*(uint64_t (**)(void, void))(*(void *)(**(void **)(v0 + 16) + 112) + 40))(*(void *)(v0 + 24), *(void *)(**(void **)(v0 + 16) + 88));
}

uint64_t sub_1C03443F8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_1C0341E44(a1, a2, a3);
}

uint64_t sub_1C0344414()
{
  return swift_getAssociatedConformanceWitness();
}

ValueMetadata *type metadata accessor for FeedManagerLoadSource()
{
  return &type metadata for FeedManagerLoadSource;
}

uint64_t dispatch thunk of FeedManagerType.loadingGate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedManagerType.loadingSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedManagerType.prepare(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeedManagerType.readAndFetch(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeedManagerType.save(snapshot:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedManagerType.atomicRebuild<A>(context:policy:preCommit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t method lookup function for FeedManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedManager);
}

uint64_t dispatch thunk of FeedManager.__allocating_init(feed:database:offlineDatabase:service:serviceConfigFetcher:loadingGate:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t type metadata accessor for FeedManager.Errors()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C0344508()
{
  return 56;
}

__n128 sub_1C0344514(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_1C0344530()
{
  return swift_getAtKeyPath();
}

unint64_t sub_1C034455C()
{
  unint64_t result = qword_1EB863368;
  if (!qword_1EB863368)
  {
    sub_1BFE9DE70(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863368);
  }
  return result;
}

uint64_t sub_1C03445D8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_1C03446D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  sub_1C0340FA8(a1, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void **)(v2 + 104), v2 + ((*(unsigned __int8 *)(v6 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, a2);
}

uint64_t sub_1C034477C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE9E20(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C03447D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0344814()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1C034485C(uint64_t a1)
{
  return sub_1C0340698(a1, v1[9], v1[10], v1[11]);
}

uint64_t sub_1C03448A0()
{
  return sub_1C033F9E8(*(void *)(v0 + 64));
}

uint64_t sub_1C03448CC(uint64_t a1, uint64_t a2)
{
  return sub_1C0345100(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C033FB80);
}

uint64_t sub_1C03448F8()
{
  if ((~*(void *)(v0 + 16) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0344940()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0344A04()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0344AC0(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1C03424BC(a1, a2, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C0344B80(void *a1, uint64_t a2)
{
  return sub_1C0342DDC(a1, a2, v2);
}

uint64_t sub_1C0344B9C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_1BFD7F858(a2);
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0344C44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0344C7C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0344D7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1C0342894(a1, *(void *)(v1 + 64), v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C0344E30()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1C0344F14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return sub_1C0342B54(a1, *(void *)(v2 + 64), v2 + ((*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1C0344FE8()
{
  return sub_1C0342FCC(*(void *)(v0 + 64));
}

uint64_t sub_1C0345010(uint64_t *a1, void *a2)
{
  return sub_1C0343060(a1, a2);
}

uint64_t objectdestroy_31Tm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1C03450D4(uint64_t a1, uint64_t a2)
{
  return sub_1C0345100(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C0343210);
}

uint64_t sub_1C0345100(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return a3(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t sub_1C034519C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C03434CC(a1, a2);
}

uint64_t sub_1C03451B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C03451EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C03433F4(a1, *(void *)(v2 + 64), a2);
}

uint64_t sub_1C0345214@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
  return swift_retain();
}

unsigned char *_s8NewsFeed21FeedManagerLoadSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0345300);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1C0345328()
{
  return swift_getWitnessTable();
}

uint64_t _s8NewsFeed18FormatGroupBindingV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  unsigned int v7 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  unint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v64 = *(void *)(a2 + 40);
  uint64_t v65 = *(void *)a1;
  unsigned int v13 = *(unsigned __int8 *)(a2 + 48);
  switch(v7 >> 4)
  {
    case 1u:
      if ((v13 & 0xF0) == 0x10) {
        goto LABEL_32;
      }
      goto LABEL_36;
    case 2u:
      if ((v13 & 0xF0) != 0x20) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 3u:
      uint64_t v56 = *(void *)(a1 + 32);
      unsigned __int8 v58 = *(unsigned char *)(a1 + 48);
      if ((v13 & 0xF0) == 0x30)
      {
        uint64_t v73 = *(void *)a1;
        uint64_t v74 = v2;
        LOWORD(v75) = v3;
        uint64_t v66 = v8;
        uint64_t v67 = v9;
        uint64_t v47 = v8;
        LOWORD(v68) = v11;
        unint64_t v50 = v11;
        uint64_t v22 = v8;
        unint64_t v23 = v3;
        unint64_t v24 = v11;
        uint64_t v25 = v2;
        sub_1BFF58ECC(v22, v9, v24, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v65, v25, v23, v4, v56, v6, v58, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v65, v25, v23, v4, v56, v6, v58, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v47, v9, v50, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        char v21 = _s8NewsFeed20FormatWeatherBindingV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v66);
        sub_1BFF58ECC(v65, v25, v23, v4, v56, v6, v58, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v47, v9, v50, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v47, v9, v50, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v65, v25, v23, v4, v56, v6, v58, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        return v21 & 1;
      }
      unint64_t v38 = *(void *)(a1 + 16);
      uint64_t v39 = *(void *)(a1 + 8);
      sub_1C02240D4(v65, v2, v3, BYTE1(v3));
      uint64_t v2 = v39;
      unint64_t v3 = v38;
      LOBYTE(v7) = v58;
      uint64_t v5 = v56;
      goto LABEL_36;
    case 4u:
      if ((v13 & 0xF0) != 0x40) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 5u:
      if ((v13 & 0xF0) != 0x50) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 6u:
      if ((v13 & 0xF0) != 0x60) {
        goto LABEL_36;
      }
      sub_1BFF58ECC(v65, v2, v3, v4, v5, v6, v7, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      sub_1BFF58ECC(v8, v9, v11, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      if (v65 > 0xFBu)
      {
        if (v8 <= 0xFBu) {
          goto LABEL_37;
        }
        goto LABEL_49;
      }
      if (v8 > 0xFBu) {
        goto LABEL_37;
      }
      if ((v65 & 0x80) == 0)
      {
        if ((v8 & 0x80) != 0 || v8 != v65) {
          goto LABEL_37;
        }
        goto LABEL_49;
      }
      if ((v8 & 0x80) != 0 && ((v8 ^ v65) & 0x7F) == 0) {
        goto LABEL_49;
      }
      goto LABEL_37;
    case 7u:
      if ((v13 & 0xF0) != 0x70) {
        goto LABEL_36;
      }
      unsigned __int8 v26 = *(void *)(a1 + 8);
      unsigned int v44 = *(void *)(a2 + 8);
      sub_1BFF58ECC(v65, v2, v3, v4, v5, *(void *)(a1 + 40), v7, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      sub_1BFF58ECC(v8, v9, v11, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      if (!(v26 >> 6))
      {
        if (v44 > 0x3F) {
          goto LABEL_37;
        }
LABEL_48:
        if (v8 != v65) {
          goto LABEL_37;
        }
        goto LABEL_49;
      }
      if (v26 >> 6 == 1)
      {
        if ((v44 & 0xC0) != 0x40) {
          goto LABEL_37;
        }
        goto LABEL_48;
      }
      if ((v44 & 0xC0) == 0x80 && v65 == v8 && ((v9 ^ v26) & 0x3F) == 0) {
        goto LABEL_49;
      }
LABEL_37:
      char v21 = 0;
      return v21 & 1;
    case 8u:
      unsigned __int8 v59 = *(unsigned char *)(a1 + 48);
      char v27 = v7 & 0xF;
      unint64_t v62 = *(void *)(a1 + 16);
      if ((v13 & 0xF0) == 0x80)
      {
        uint64_t v73 = *(void *)a1;
        uint64_t v74 = v2;
        unint64_t v75 = v3;
        uint64_t v76 = v4;
        uint64_t v77 = v5;
        uint64_t v78 = v6;
        uint64_t v51 = v6;
        char v79 = v27;
        uint64_t v66 = v8;
        uint64_t v67 = v9;
        uint64_t v48 = v8;
        unint64_t v68 = v11;
        uint64_t v69 = v10;
        uint64_t v54 = v10;
        uint64_t v70 = v12;
        uint64_t v71 = v64;
        char v72 = v13 & 0xF;
        uint64_t v28 = v8;
        unint64_t v29 = v3;
        uint64_t v30 = v10;
        uint64_t v31 = v5;
        uint64_t v45 = v2;
        uint64_t v32 = v2;
        sub_1BFF58ECC(v28, v9, v11, v30, v12, v64, v13, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v65, v32, v29, v4, v31, v51, v59, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v65, v45, v29, v4, v31, v51, v59, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v48, v9, v11, v54, v12, v64, v13, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        char v21 = _s8NewsFeed19FormatPuzzleBindingV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v66);
        sub_1BFF58ECC(v65, v45, v62, v4, v31, v51, v59, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v48, v9, v11, v54, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v48, v9, v11, v54, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v65, v45, v62, v4, v31, v51, v59, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        return v21 & 1;
      }
      uint64_t v40 = *(void *)(a1 + 32);
      uint64_t v41 = *(void *)(a1 + 8);
      sub_1C02240C4(v65, v2, v3, v4, v5, v6, v27);
      uint64_t v2 = v41;
      unint64_t v3 = v62;
      uint64_t v5 = v40;
      LOBYTE(v7) = v59;
      goto LABEL_36;
    case 9u:
      if ((v13 & 0xF0) != 0x90) {
        goto LABEL_36;
      }
      char v33 = *(void *)(a1 + 8);
      sub_1BFF58ECC(v65, v2, v3, *(void *)(a1 + 24), v5, v6, v7, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      sub_1BFF58ECC(v8, v9, v11, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      if ((v33 & 1) == 0)
      {
        if ((v9 & 1) == 0 && v65 == v8)
        {
LABEL_49:
          char v21 = 1;
          return v21 & 1;
        }
        goto LABEL_37;
      }
      if (v65)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_37;
        }
        char v21 = v8 != 0;
      }
      else
      {
        if ((v9 & 1) == 0) {
          goto LABEL_37;
        }
        char v21 = v8 == 0;
      }
      return v21 & 1;
    case 0xAu:
      if ((v13 & 0xF0) != 0xA0) {
        goto LABEL_36;
      }
LABEL_32:
      sub_1BFF58ECC(v65, v2, v3, v4, v5, v6, v7, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      sub_1BFF58ECC(v8, v9, v11, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      char v21 = v8 == v65;
      return v21 & 1;
    default:
      unint64_t v61 = *(void *)(a1 + 16);
      if (v13 <= 0xF)
      {
        uint64_t v73 = *(void *)a1;
        uint64_t v74 = v2;
        unint64_t v75 = v3;
        uint64_t v76 = v4;
        uint64_t v77 = v5;
        uint64_t v78 = v6;
        char v79 = v7;
        uint64_t v66 = v8;
        uint64_t v67 = v9;
        uint64_t v46 = v8;
        uint64_t v49 = v9;
        unint64_t v68 = v11;
        uint64_t v69 = v10;
        uint64_t v53 = v10;
        uint64_t v55 = v5;
        uint64_t v70 = v12;
        uint64_t v71 = v64;
        char v72 = v13;
        uint64_t v14 = v8;
        uint64_t v15 = v9;
        unint64_t v16 = v3;
        uint64_t v17 = v10;
        uint64_t v18 = v5;
        unsigned __int8 v19 = v7;
        uint64_t v20 = v2;
        sub_1BFF58ECC(v14, v15, v11, v17, v12, v64, v13, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v65, v20, v16, v4, v18, v6, v19, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v65, v20, v16, v4, v55, v6, v19, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        sub_1BFF58ECC(v46, v49, v11, v53, v12, v64, v13, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
        char v21 = _s8NewsFeed21FormatHeadlineBindingV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v66);
        sub_1BFF58ECC(v65, v20, v61, v4, v55, v6, v19, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v46, v49, v11, v53, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v46, v49, v11, v53, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        sub_1BFF58ECC(v65, v20, v61, v4, v55, v6, v19, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
        return v21 & 1;
      }
      uint64_t v52 = *(void *)(a1 + 24);
      uint64_t v34 = *(void *)(a2 + 8);
      uint64_t v35 = *(void *)(a1 + 32);
      char v36 = *(unsigned char *)(a1 + 48);
      uint64_t v37 = *(void *)(a1 + 8);
      sub_1BFF2B138(v65, v2, v3, v52, v5, v6, v7);
      uint64_t v2 = v37;
      unint64_t v3 = v61;
      uint64_t v5 = v35;
      uint64_t v9 = v34;
      uint64_t v4 = v52;
      LOBYTE(v7) = v36;
LABEL_36:
      unsigned __int8 v60 = v7;
      uint64_t v57 = v5;
      unint64_t v63 = v3;
      uint64_t v42 = v2;
      sub_1BFF58ECC(v8, v9, v11, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
      sub_1BFF58ECC(v65, v42, v63, v4, v57, v6, v60, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      sub_1BFF58ECC(v8, v9, v11, v10, v12, v64, v13, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      goto LABEL_37;
  }
}

unint64_t sub_1C03460A4(uint64_t a1)
{
  unint64_t result = sub_1C03460CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03460CC()
{
  unint64_t result = qword_1EA199F70;
  if (!qword_1EA199F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F70);
  }
  return result;
}

unint64_t sub_1C0346120(void *a1)
{
  a1[1] = sub_1BFE03330();
  a1[2] = sub_1BFE00838();
  unint64_t result = sub_1C0346158();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0346158()
{
  unint64_t result = qword_1EA199F78;
  if (!qword_1EA199F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F78);
  }
  return result;
}

uint64_t _s4TextOwxx_2(uint64_t a1)
{
  return sub_1BFF58ECC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48), (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
}

uint64_t _s4TextOwcp_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1BFF58ECC(*(void *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s4TextOwca_2(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1BFF58ECC(*(void *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1BFF58ECC(v10, v11, v12, v13, v14, v15, v16, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
  return a1;
}

uint64_t _s4TextOwta_2(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1BFF58ECC(v4, v6, v5, v7, v8, v9, v11, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
  return a1;
}

uint64_t sub_1C0346488(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 4;
}

uint64_t sub_1C0346494(uint64_t result)
{
  *(unsigned char *)(result + 48) &= 0xFu;
  return result;
}

uint64_t sub_1C03464A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 7 | (16 * a2);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Text()
{
  return &type metadata for FormatGroupBinding.Text;
}

uint64_t FormatFontTrait.description.getter()
{
  return FormatFontTrait.rawValue.getter();
}

uint64_t sub_1C034659C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148F908(*a1, *a2);
}

uint64_t sub_1C03465A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0346610()
{
  FormatFontTrait.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0346674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatFontTrait.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C034669C()
{
  return FormatFontTrait.rawValue.getter();
}

uint64_t sub_1C03466D8()
{
  return sub_1C1268728();
}

uint64_t sub_1C03466E4()
{
  return sub_1C126903C();
}

uint64_t sub_1C03466F0()
{
  return sub_1C1267E14();
}

uint64_t _s8NewsFeed15FormatFontTraitO1loiySbAC_ACtFZ_0()
{
  uint64_t v0 = FormatFontTrait.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1C034679C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C03467CC();
  unint64_t result = sub_1BFC89168();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C03467CC()
{
  unint64_t result = qword_1EA199F80;
  if (!qword_1EA199F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F80);
  }
  return result;
}

unint64_t sub_1C0346820(uint64_t a1)
{
  unint64_t result = sub_1C0346848();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0346848()
{
  unint64_t result = qword_1EA199F88;
  if (!qword_1EA199F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F88);
  }
  return result;
}

unint64_t sub_1C034689C(void *a1)
{
  a1[1] = sub_1C0080558();
  a1[2] = sub_1C0080654();
  unint64_t result = sub_1C00805AC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatFontTrait()
{
  return &type metadata for FormatFontTrait;
}

uint64_t FormatOptionsNodeStatementOption.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionsNodeStatementOption.throws.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FormatOptionsNodeStatementOption.throws.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*FormatOptionsNodeStatementOption.throws.modify())(void)
{
  return nullsub_1;
}

uint64_t static FormatOptionsNodeStatementOption.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_1C1520A9C();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

unint64_t sub_1C03469CC(uint64_t a1)
{
  unint64_t result = sub_1C03469F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03469F4()
{
  unint64_t result = qword_1EA199F90;
  if (!qword_1EA199F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F90);
  }
  return result;
}

unint64_t sub_1C0346A48(void *a1)
{
  a1[1] = sub_1C0346A80();
  a1[2] = sub_1C0346AD4();
  unint64_t result = sub_1C0346B28();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0346A80()
{
  unint64_t result = qword_1EB8831C8;
  if (!qword_1EB8831C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8831C8);
  }
  return result;
}

unint64_t sub_1C0346AD4()
{
  unint64_t result = qword_1EB863170;
  if (!qword_1EB863170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863170);
  }
  return result;
}

unint64_t sub_1C0346B28()
{
  unint64_t result = qword_1EA199F98;
  if (!qword_1EA199F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199F98);
  }
  return result;
}

uint64_t sub_1C0346B7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionsNodeStatementOption.init(from:)(a1, a2);
}

uint64_t sub_1C0346B94(void *a1)
{
  return FormatOptionsNodeStatementOption.encode(to:)(a1);
}

uint64_t sub_1C0346BAC(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_1C1520A9C();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t sub_1C0346C0C()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  if (qword_1EB87BD48 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EB879FE0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0F49260(v2, v1, v4, v3 ^ 1u);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0346CC8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 16);
  return result;
}

unsigned char *sub_1C0346CD4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementOption()
{
  return &type metadata for FormatOptionsNodeStatementOption;
}

void sub_1C0346CF0(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v37 = a2;
  sub_1C0347130(0, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1F4188790](v4 - 8);
  v36[0] = (char *)v36 - v5;
  sub_1C0347130(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v36 - v7;
  uint64_t v9 = type metadata accessor for FormatOption();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (void *)((char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v36 - v14);
  uint64_t v17 = *(void *)v2;
  uint64_t v16 = *(void *)(v2 + 8);
  int v38 = *(unsigned __int8 *)(v2 + 16);
  sub_1C0025648(v17, v16, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C0257E00((uint64_t)v8);
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    uint64_t v18 = (void *)swift_allocError();
    *unsigned __int8 v19 = v17;
    v19[1] = v16;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    sub_1C00AB068((uint64_t)v8, (uint64_t)v15);
    uint64_t v21 = *v15;
    uint64_t v20 = v15[1];
    unint64_t v22 = v15[2];
    swift_bridgeObjectRetain();
    unint64_t v23 = v22;
    unint64_t v24 = (void *)v36[1];
    sub_1C00290F8(a1, v23, &v39);
    if (!v24)
    {
      unint64_t v26 = v39;
      void *v12 = v21;
      v12[1] = v20;
      v12[2] = v26;
      v12[3] = 1;
      char v27 = (char *)v12 + *(int *)(v9 + 28);
      uint64_t v28 = type metadata accessor for FormatVersionRequirement(0);
      unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
      v29(v27, 1, 1, v28);
      swift_retain();
      sub_1C01A0054((uint64_t)v12);
      uint64_t v30 = v36[0];
      v29((char *)v36[0], 1, 1, v28);
      sub_1BFEF9A78();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v32 = v15[1];
      *(void *)(inited + 32) = *v15;
      *(void *)(inited + 40) = v32;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1C00B818C(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_1C01A0054((uint64_t)v15);
      uint64_t v34 = v37;
      *uint64_t v37 = v26;
      v34[1] = v33;
      uint64_t v35 = type metadata accessor for FormatOptionsNodeStatementResult();
      sub_1C0164368(v30, (uint64_t)v34 + *(int *)(v35 + 24));
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
      return;
    }
    swift_bridgeObjectRelease();
    sub_1C01A0054((uint64_t)v15);
    uint64_t v18 = v24;
  }
  if (v38)
  {
    swift_willThrow();
  }
  else
  {
    uint64_t v25 = type metadata accessor for FormatOptionsNodeStatementResult();
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v37, 1, 1, v25);
  }
}

void sub_1C0347130(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatDerivedDataWarning.file.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C009D844(v1 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file, a1);
}

uint64_t FormatDerivedDataWarning.errors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDerivedDataWarning.deinit()
{
  sub_1C03471E0(v0 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C03471E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatFile();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatDerivedDataWarning.__deallocating_deinit()
{
  sub_1C03471E0(v0 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C03472B0()
{
  return type metadata accessor for FormatDerivedDataWarning();
}

uint64_t type metadata accessor for FormatDerivedDataWarning()
{
  uint64_t result = qword_1EA199FA0;
  if (!qword_1EA199FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0347304()
{
  uint64_t result = type metadata accessor for FormatFile();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FormatDerivedDataWarning(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatDerivedDataWarning);
}

uint64_t FormatButtonNodeState.rawValue.getter()
{
  uint64_t result = 0x64656C6261736964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64657375636F66;
      break;
    case 2:
      uint64_t result = 0x6867696C68676968;
      break;
    case 3:
      uint64_t result = 0x64657463656C6573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C034744C(unsigned __int8 *a1, char *a2)
{
  return sub_1C1480604(*a1, *a2);
}

uint64_t sub_1C0347458()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0347538()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

void sub_1C0347610(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x64656C6261736964;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x64657375636F66;
      goto LABEL_3;
    case 2:
      *a1 = 0x6867696C68676968;
      a1[1] = 0xEB00000000646574;
      break;
    case 3:
      *a1 = 0x64657463656C6573;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C03476B8(char *a1, char *a2)
{
  return sub_1C12682EC(*a1, *a2);
}

uint64_t sub_1C03476C4(unsigned __int8 *a1, char *a2)
{
  return sub_1C1268C0C(*a1, *a2);
}

uint64_t sub_1C03476D0(char *a1, char *a2)
{
  return sub_1C12679E4(*a1, *a2);
}

uint64_t _s8NewsFeed21FormatButtonNodeStateO1loiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x64656C6261736964;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x64656C6261736964;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x64657375636F66;
      break;
    case 2:
      uint64_t v5 = 0x6867696C68676968;
      unint64_t v4 = 0xEB00000000646574;
      break;
    case 3:
      uint64_t v5 = 0x64657463656C6573;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x64657375636F66) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6867696C68676968;
      unint64_t v6 = 0xEB00000000646574;
      goto LABEL_9;
    case 3:
      if (v5 == 0x64657463656C6573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 0;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

unint64_t sub_1C0347878(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C03478A8();
  unint64_t result = sub_1BFC63B7C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C03478A8()
{
  unint64_t result = qword_1EA199FB0;
  if (!qword_1EA199FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199FB0);
  }
  return result;
}

unint64_t sub_1C03478FC(uint64_t a1)
{
  unint64_t result = sub_1C0347924();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0347924()
{
  unint64_t result = qword_1EA199FB8;
  if (!qword_1EA199FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199FB8);
  }
  return result;
}

unint64_t sub_1C0347978(void *a1)
{
  a1[1] = sub_1C0076214();
  a1[2] = sub_1C0076310();
  unint64_t result = sub_1C0076268();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatButtonNodeState()
{
  return &type metadata for FormatButtonNodeState;
}

ValueMetadata *type metadata accessor for FormatOptionSelector()
{
  return &type metadata for FormatOptionSelector;
}

uint64_t sub_1C03479F8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  if (a3)
  {
    LOBYTE(v13) = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    sub_1C03482B0();
    swift_bridgeObjectRetain();
    sub_1C152080C();
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return swift_bridgeObjectRelease();
    }
    uint64_t v14 = a2;
    uint64_t v15 = a3;
    long long v13 = xmmword_1C152C800;
    sub_1BFE2F6D8();
    sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
    sub_1C152080C();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v13) = 1;
    sub_1C03482B0();
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C0347C40(char *a1, char *a2)
{
  return sub_1C1487AEC(*a1, *a2);
}

uint64_t sub_1C0347C4C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0347CCC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0347D38()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0347DB4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0347E14(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x636974617473;
  if (*v1) {
    uint64_t v2 = 0x63696D616E7964;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0347E50()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0347EB0()
{
  return sub_1C151EAEC();
}

void *sub_1C0347F00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C0347F48(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1C0347F2C(void *a1)
{
  return sub_1C03479F8(a1, *v1, v1[1]);
}

void *sub_1C0347F48(void *a1)
{
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v1) {
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1C034825C();
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    sub_1C15206EC();
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v8 = 0;
    }
    else
    {
      sub_1BFE2F6D8();
      long long v17 = xmmword_1C152C800;
      sub_1BFEB6C70((unint64_t *)&qword_1EB873EF0);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v8 = v18;
    }
    goto LABEL_12;
  }
  uint64_t v11 = sub_1C152070C();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  long long v13 = (void **)(v11 + 40);
  while (1)
  {
    uint64_t v8 = *v13;
    if ((unint64_t)*v13 >= 4) {
      break;
    }
    v13 += 2;
    if (!--v12) {
      goto LABEL_7;
    }
  }
  uint64_t v14 = (uint64_t)*(v13 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C02570B4();
  swift_allocError();
  *(void *)uint64_t v15 = v14;
  *(void *)(v15 + 8) = v8;
  *(void *)(v15 + 16) = &unk_1F1B81398;
  *(_OWORD *)(v15 + 24) = xmmword_1C15363B0;
  swift_willThrow();
  sub_1C0257108(v14, (unint64_t)v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1C034825C()
{
  unint64_t result = qword_1EA199FC0;
  if (!qword_1EA199FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199FC0);
  }
  return result;
}

unint64_t sub_1C03482B0()
{
  unint64_t result = qword_1EA199FC8;
  if (!qword_1EA199FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199FC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatOptionSelector.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03483D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionSelector.CodingType()
{
  return &type metadata for FormatOptionSelector.CodingType;
}

unint64_t sub_1C034840C()
{
  unint64_t result = qword_1EA199FD0;
  if (!qword_1EA199FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199FD0);
  }
  return result;
}

unint64_t sub_1C0348460()
{
  unint64_t result = qword_1EA199FD8;
  if (!qword_1EA199FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199FD8);
  }
  return result;
}

uint64_t FormatBindingContent.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindingContent.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindingContent.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindingContent.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
  return sub_1C0348588(v3, a1);
}

uint64_t sub_1C0348588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03485F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindingContent.init(from:)(a1, a2);
}

uint64_t sub_1C0348608(void *a1)
{
  return FormatBindingContent.encode(to:)(a1);
}

uint64_t _s8NewsFeed20FormatBindingContentV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[5];
  uint64_t v7 = a2[5];
  if (v6)
  {
    if (v7 && (a1[4] == a2[4] && v6 == v7 || (sub_1C1520A9C() & 1) != 0)) {
      goto LABEL_16;
    }
    return 0;
  }
  if (v7) {
    return 0;
  }
LABEL_16:
  uint64_t v8 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
  return static FormatContent.== infix(_:_:)((char *)a1 + v8, (char *)a2 + v8);
}

uint64_t sub_1C03486F8(uint64_t a1)
{
  uint64_t result = sub_1C03487C8(&qword_1EA199FE0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C034873C(void *a1)
{
  a1[1] = sub_1C03487C8(&qword_1EA199FE8);
  a1[2] = sub_1C03487C8(&qword_1EA199FF0);
  uint64_t result = sub_1C03487C8(&qword_1EA199FF8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C03487C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatBindingContent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatBindingContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    uint64_t v37 = v36 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    char v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v13 = v12[5];
    uint64_t v40 = &v10[v13];
    __dsta = (char *)v9 + v13;
    uint64_t v14 = sub_1C151631C();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(__dsta, v40, v14);
    uint64_t v16 = v12[6];
    long long v17 = (void *)((char *)v9 + v16);
    uint64_t v18 = &v10[v16];
    uint64_t v41 = *((void *)v18 + 1);
    void *v17 = *(void *)v18;
    v17[1] = v41;
    uint64_t v19 = v12[7];
    uint64_t v20 = (void *)((char *)v9 + v19);
    uint64_t v21 = &v10[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *uint64_t v20 = *(void *)v21;
    v20[1] = v22;
    uint64_t v23 = v12[8];
    unint64_t v24 = (void *)((char *)v9 + v23);
    uint64_t v25 = &v10[v23];
    uint64_t v26 = *((void *)v25 + 1);
    void *v24 = *(void *)v25;
    v24[1] = v26;
    uint64_t v27 = v12[9];
    uint64_t v28 = (void *)((char *)v9 + v27);
    unint64_t v29 = &v10[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *uint64_t v28 = *(void *)v29;
    v28[1] = v30;
    uint64_t v31 = v12[10];
    __dst = (char *)v9 + v31;
    uint64_t v32 = &v10[v31];
    uint64_t v33 = sub_1C151D6DC();
    uint64_t v34 = *(void *)(v33 - 8);
    unint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v32, 1, v33))
    {
      sub_1BFEE3854(0);
      memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    *(void *)((char *)v9 + v12[11]) = *(void *)&v10[v12[11]];
    *(void *)((char *)v9 + v12[12]) = *(void *)&v10[v12[12]];
    *(void *)((char *)v9 + v12[13]) = *(void *)&v10[v12[13]];
    *(void *)((char *)v9 + v12[14]) = *(void *)&v10[v12[14]];
    *(void *)((char *)v9 + v12[15]) = *(void *)&v10[v12[15]];
    *(void *)((char *)v9 + v12[16]) = *(void *)&v10[v12[16]];
    *(void *)((char *)v9 + v12[17]) = *(void *)&v10[v12[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  return (uint64_t *)v37;
}

uint64_t destroy for FormatBindingContent(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for FormatContent(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + *(int *)(v5 + 40);
  uint64_t v9 = sub_1C151D6DC();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatBindingContent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  void *v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  uint64_t v10 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v11 = v10[5];
  uint64_t v36 = &v8[v11];
  __dsta = (char *)v7 + v11;
  uint64_t v12 = sub_1C151631C();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(__dsta, v36, v12);
  uint64_t v14 = v10[6];
  uint64_t v15 = (void *)((char *)v7 + v14);
  uint64_t v16 = &v8[v14];
  uint64_t v37 = *((void *)v16 + 1);
  *uint64_t v15 = *(void *)v16;
  v15[1] = v37;
  uint64_t v17 = v10[7];
  uint64_t v18 = (void *)((char *)v7 + v17);
  uint64_t v19 = &v8[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *uint64_t v18 = *(void *)v19;
  v18[1] = v20;
  uint64_t v21 = v10[8];
  uint64_t v22 = (void *)((char *)v7 + v21);
  uint64_t v23 = &v8[v21];
  uint64_t v24 = *((void *)v23 + 1);
  void *v22 = *(void *)v23;
  v22[1] = v24;
  uint64_t v25 = v10[9];
  uint64_t v26 = (void *)((char *)v7 + v25);
  uint64_t v27 = &v8[v25];
  uint64_t v28 = *((void *)v27 + 1);
  void *v26 = *(void *)v27;
  v26[1] = v28;
  uint64_t v29 = v10[10];
  __dst = (char *)v7 + v29;
  uint64_t v30 = &v8[v29];
  uint64_t v31 = sub_1C151D6DC();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35(v30, 1, v31))
  {
    sub_1BFEE3854(0);
    memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  *(void *)((char *)v7 + v10[11]) = *(void *)&v8[v10[11]];
  *(void *)((char *)v7 + v10[12]) = *(void *)&v8[v10[12]];
  *(void *)((char *)v7 + v10[13]) = *(void *)&v8[v10[13]];
  *(void *)((char *)v7 + v10[14]) = *(void *)&v8[v10[14]];
  *(void *)((char *)v7 + v10[15]) = *(void *)&v8[v10[15]];
  *(void *)((char *)v7 + v10[16]) = *(void *)&v8[v10[16]];
  *(void *)((char *)v7 + v10[17]) = *(void *)&v8[v10[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatBindingContent(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  void *v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)((char *)v7 + v14);
  uint64_t v16 = &v8[v14];
  *uint64_t v15 = *(void *)v16;
  v15[1] = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v9[7];
  uint64_t v18 = (void *)((char *)v7 + v17);
  uint64_t v19 = &v8[v17];
  *uint64_t v18 = *(void *)v19;
  v18[1] = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v9[8];
  uint64_t v21 = (void *)((char *)v7 + v20);
  uint64_t v22 = &v8[v20];
  *uint64_t v21 = *(void *)v22;
  v21[1] = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v9[9];
  uint64_t v24 = (void *)((char *)v7 + v23);
  uint64_t v25 = &v8[v23];
  void *v24 = *(void *)v25;
  v24[1] = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v9[10];
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = &v8[v26];
  uint64_t v29 = sub_1C151D6DC();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v38 = v27;
  LODWORD(v27) = v31(v27, 1, v29);
  int v32 = v31(v28, 1, v29);
  if (v27)
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v38, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v38, 0, 1, v29);
      goto LABEL_9;
    }
    sub_1BFEE3854(0);
    size_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
    uint64_t v35 = v38;
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v30 + 24))(v38, v28, v29);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v38, v29);
    sub_1BFEE3854(0);
    size_t v34 = *(void *)(*(void *)(v36 - 8) + 64);
    uint64_t v35 = v38;
  }
  memcpy(v35, v28, v34);
LABEL_9:
  *(void *)((char *)v7 + v9[11]) = *(void *)&v8[v9[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[12]) = *(void *)&v8[v9[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[13]) = *(void *)&v8[v9[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[14]) = *(void *)&v8[v9[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[15]) = *(void *)&v8[v9[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[16]) = *(void *)&v8[v9[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[17]) = *(void *)&v8[v9[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatBindingContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&v6[v8[6]] = *(_OWORD *)&v7[v8[6]];
  *(_OWORD *)&v6[v8[7]] = *(_OWORD *)&v7[v8[7]];
  *(_OWORD *)&v6[v8[8]] = *(_OWORD *)&v7[v8[8]];
  *(_OWORD *)&v6[v8[9]] = *(_OWORD *)&v7[v8[9]];
  uint64_t v13 = v8[10];
  uint64_t v14 = &v6[v13];
  uint64_t v15 = &v7[v13];
  uint64_t v16 = sub_1C151D6DC();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1BFEE3854(0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(void *)&v6[v8[11]] = *(void *)&v7[v8[11]];
  *(void *)&v6[v8[12]] = *(void *)&v7[v8[12]];
  *(void *)&v6[v8[13]] = *(void *)&v7[v8[13]];
  *(void *)&v6[v8[14]] = *(void *)&v7[v8[14]];
  *(void *)&v6[v8[15]] = *(void *)&v7[v8[15]];
  *(void *)&v6[v8[16]] = *(void *)&v7[v8[16]];
  *(void *)&v6[v8[17]] = *(void *)&v7[v8[17]];
  return a1;
}

void *assignWithTake for FormatBindingContent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
  *uint64_t v10 = *(void *)((char *)a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = (char *)v10 + v14;
  uint64_t v16 = &v11[v14];
  uint64_t v17 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = v13[6];
  uint64_t v19 = (void *)((char *)v10 + v18);
  uint64_t v20 = &v11[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v13[7];
  uint64_t v24 = (void *)((char *)v10 + v23);
  uint64_t v25 = &v11[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  void *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v13[8];
  uint64_t v29 = (void *)((char *)v10 + v28);
  uint64_t v30 = &v11[v28];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = v13[9];
  size_t v34 = (void *)((char *)v10 + v33);
  uint64_t v35 = &v11[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  void *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = v13[10];
  unint64_t v39 = (char *)v10 + v38;
  uint64_t v40 = &v11[v38];
  uint64_t v41 = sub_1C151D6DC();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  unint64_t v50 = v39;
  LODWORD(v39) = v43(v39, 1, v41);
  int v44 = v43(v40, 1, v41);
  if (v39)
  {
    if (!v44)
    {
      (*(void (**)(void *, char *, uint64_t))(v42 + 32))(v50, v40, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v41);
      goto LABEL_9;
    }
    sub_1BFEE3854(0);
    size_t v46 = *(void *)(*(void *)(v45 - 8) + 64);
    uint64_t v47 = v50;
  }
  else
  {
    if (!v44)
    {
      (*(void (**)(void *, char *, uint64_t))(v42 + 40))(v50, v40, v41);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v50, v41);
    sub_1BFEE3854(0);
    size_t v46 = *(void *)(*(void *)(v48 - 8) + 64);
    uint64_t v47 = v50;
  }
  memcpy(v47, v40, v46);
LABEL_9:
  *(void *)((char *)v10 + v13[11]) = *(void *)&v11[v13[11]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v13[12]) = *(void *)&v11[v13[12]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v13[13]) = *(void *)&v11[v13[13]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v13[14]) = *(void *)&v11[v13[14]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v13[15]) = *(void *)&v11[v13[15]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v13[16]) = *(void *)&v11[v13[16]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v13[17]) = *(void *)&v11[v13[17]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindingContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0349938);
}

uint64_t sub_1C0349938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatContent(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatBindingContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C03499FC);
}

uint64_t sub_1C03499FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatContent(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0349AA8(uint64_t a1)
{
  if (a1 < 0) {
    swift_bridgeObjectRetain();
  }
  return swift_retain();
}

uint64_t destroy for FormatStateMachineOutput(uint64_t *a1)
{
  return sub_1C00C5B90(*a1);
}

uint64_t *_s8NewsFeed24FormatStateMachineOutputOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1C0349AA8(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for FormatStateMachineOutput(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1C0349AA8(*a2);
  uint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1C00C5B90(v6);
  return a1;
}

uint64_t *assignWithTake for FormatStateMachineOutput(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1C00C5B90(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatStateMachineOutput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatStateMachineOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStateMachineOutput()
{
  return &type metadata for FormatStateMachineOutput;
}

uint64_t sub_1C0349CA8(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = *(void *)(*(void *)(result + 24) + 16);
    if (v7)
    {
      uint64_t v23 = a4;
      uint64_t v24 = (void *)result;
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = 0;
      uint64_t v25 = v8;
      while (1)
      {
        uint64_t v11 = *(void *)(v8 + v9 + 32);
        uint64_t v10 = *(void *)(v8 + v9 + 40);
        char v12 = *(unsigned char *)(v8 + v9 + 48);
        uint64_t v13 = *(void *)(v8 + v9 + 80);
        uint64_t v14 = *(void *)(v8 + v9 + 88);
        uint64_t v15 = *(void *)(v8 + v9 + 64);
        uint64_t v16 = *(void *)(v8 + v9 + 72);
        uint64_t v17 = *(void *)(v8 + v9 + 56);
        uint64_t v29 = v11;
        uint64_t v30 = v10;
        LOBYTE(v31) = v12;
        uint64_t v32 = v17;
        uint64_t v33 = v15;
        uint64_t v34 = v16;
        uint64_t v35 = v13;
        uint64_t v36 = v14;
        v27[0] = v11;
        v27[1] = v10;
        char v28 = v12;
        sub_1BFF5B7E0(v11, v10, v12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF5B7E0(v11, v10, v12);
        char v18 = a1(v27);
        sub_1BFF5B7CC(v11, v10, v12);
        if (v18) {
          break;
        }
        sub_1BFF5B7CC(v11, v10, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 += 64;
        --v7;
        uint64_t v8 = v25;
        if (!v7)
        {
          swift_bridgeObjectRelease();
          a4 = v23;
          uint64_t v6 = v24;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      v23(&v32);
      swift_release();
      sub_1BFF5B7CC(v11, v10, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
LABEL_7:
      uint64_t v19 = v6[5];
      uint64_t v21 = v6[6];
      uint64_t v20 = v6[7];
      uint64_t v22 = v6[8];
      uint64_t v29 = v6[4];
      uint64_t v30 = v19;
      uint64_t v31 = v21;
      uint64_t v32 = v20;
      uint64_t v33 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a4(&v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C0349ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
  uint64_t v10 = v5[2];
  if (*v5 < 0)
  {
    char v18 = self;
    swift_bridgeObjectRetain();
    swift_retain();
    id v19 = objc_msgSend(v18, sel_defaultCenter);
    uint64_t v20 = (void *)sub_1C151E5EC();
    id v21 = objc_msgSend(self, sel_mainQueue);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v8 & 0x7FFFFFFFFFFFFFFFLL;
    v22[3] = v9;
    void v22[4] = v10;
    v22[5] = a3;
    v22[6] = a4;
    aBlock[4] = sub_1C034A79C;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C034A4EC;
    aBlock[3] = &block_descriptor_18;
    uint64_t v23 = _Block_copy(aBlock);
    sub_1C0349AA8(v8);
    swift_retain();
    swift_release();
    id v24 = objc_msgSend(v19, sel_addObserverForName_object_queue_usingBlock_, v20, 0, v21, v23);
    _Block_release(v23);

    uint64_t v25 = type metadata accessor for FormatNotificationCenterObserver();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v24;
    a5[3] = v25;
    a5[4] = sub_1C034A7AC();
    uint64_t result = sub_1C00C5B90(v8);
    *a5 = v26;
  }
  else
  {
    uint64_t v13 = *(void *)(v8 + 16);
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = (void *)swift_allocObject();
    void v15[2] = v14;
    v15[3] = a3;
    _OWORD v15[4] = a4;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t (*)(void *), uint64_t), void *))(v13 + 72);
    sub_1C0349AA8(v8);
    swift_retain();
    swift_retain();
    v16(a1, a2, sub_1C034A87C, v15);
    swift_release();
    swift_release();
    return sub_1C00C5B90(v8);
  }
  return result;
}

uint64_t sub_1C034A1D0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *))
{
  uint64_t v8 = sub_1C151558C();
  if (!v8)
  {
    long long v31 = 0u;
    long long v32 = 0u;
    return sub_1BFEFE4A0((uint64_t)&v31);
  }
  uint64_t v9 = v8;
  *(void *)&long long v22 = 1635017060;
  *((void *)&v22 + 1) = 0xE400000000000000;
  sub_1C152006C();
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_1C105216C((uint64_t)v30), (v11 & 1) != 0))
  {
    sub_1BFF6A008(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v31);
  }
  else
  {
    long long v31 = 0u;
    long long v32 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C02CD3DC((uint64_t)v30);
  if (!*((void *)&v32 + 1)) {
    return sub_1BFEFE4A0((uint64_t)&v31);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    long long v26 = v30[4];
    long long v27 = v30[5];
    long long v28 = v30[6];
    long long v29 = v30[7];
    long long v22 = v30[0];
    long long v23 = v30[1];
    long long v24 = v30[2];
    long long v25 = v30[3];
    if (a4)
    {
      if (v22 != __PAIR128__(a4, a3) && (sub_1C1520A9C() & 1) == 0) {
        return sub_1C034A888((uint64_t)&v22);
      }
      uint64_t v19 = *((void *)&v27 + 1);
      long long v20 = v28;
      long long v21 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a5(&v19);
      sub_1C034A888((uint64_t)&v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *((void *)&v27 + 1);
      long long v20 = v28;
      long long v21 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a5(&v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EB85E8C0 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_1EB93C2B0;
      sub_1C151820C();
      long long v14 = v23;
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = *(void *)(v13 + 16);
      *(void *)(v13 + 16) = 0x8000000000000000;
      sub_1C1065BB8(v17, v18, v14, *((uint64_t *)&v14 + 1), isUniquelyReferenced_nonNull_native);
      *(void *)(v13 + 16) = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      sub_1C034A888((uint64_t)&v22);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C034A4EC(uint64_t a1)
{
  uint64_t v2 = sub_1C151559C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1C151556C();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C034A5E0()
{
  type metadata accessor for FormatLayoutViewToken();
  swift_unknownObjectRetain();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatLayoutViewToken_children);
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectRetain();
    MEMORY[0x1C18C66D0](v2);
    if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1C034A6D4()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatNotificationCenterObserver()
{
  return self;
}

uint64_t sub_1C034A730()
{
  return sub_1C034A5E0();
}

uint64_t sub_1C034A754()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C034A79C(uint64_t a1)
{
  return sub_1C034A1D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40));
}

unint64_t sub_1C034A7AC()
{
  unint64_t result = qword_1EB85ED70;
  if (!qword_1EB85ED70)
  {
    type metadata accessor for FormatNotificationCenterObserver();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED70);
  }
  return result;
}

uint64_t sub_1C034A804()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C034A83C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C034A87C(uint64_t (*a1)(void *), uint64_t a2)
{
  return sub_1C0349CA8(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_1C034A888(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC41E8(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C034A948()
{
  qword_1EA2B4F20 = 0x4064000000000000;
}

char *sub_1C034A958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_cursor] = 0;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
  unint64_t v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_init);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel;
  *(void *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel;
  *(void *)&v10[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel;
  *(void *)&v10[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView;
  *(void *)&v10[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel;
  *(void *)&v10[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel;
  *(void *)&v10[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView;
  *(void *)&v10[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer;
  *(void *)&v10[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);

  if (a3)
  {
    uint64_t v19 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  v81.receiver = v10;
  v81.super_class = ObjectType;
  long long v20 = (char *)objc_msgSendSuper2(&v81, sel_initWithStyle_reuseIdentifier_, a1, v19, a2);

  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView;
  long long v22 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView];
  long long v23 = self;
  long long v24 = v20;
  id v25 = v22;
  id v26 = objc_msgSend(v23, sel_systemYellowColor);
  id v27 = objc_msgSend(v26, sel_colorWithAlphaComponent_, 0.3);

  objc_msgSend(v25, sel_setBackgroundColor_, v27);
  id v28 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v28, sel_addSubview_, *(void *)&v20[v21]);

  uint64_t v29 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer;
  uint64_t v30 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer];
  objc_msgSend(v30, sel_setLineWidth_, 1.0);
  sub_1BFE4DBE0();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C15320E0;
  sub_1BFFBE2BC();
  id v32 = v30;
  *(void *)(v31 + 32) = sub_1C151FB4C();
  sub_1C151EBEC();
  uint64_t v33 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_setLineDashPattern_, v33);

  id v34 = *(id *)&v24[v29];
  id v35 = objc_msgSend(v23, sel_lightGrayColor);
  id v36 = objc_msgSend(v35, sel_CGColor);

  objc_msgSend(v34, sel_setStrokeColor_, v36);
  id v37 = *(id *)&v24[v29];
  id v38 = objc_msgSend(v23, sel_clearColor);
  id v39 = objc_msgSend(v38, (SEL)&selRef_initWithTitle_style_target_action_ + 5);

  objc_msgSend(v37, sel_setFillColor_, v39);
  id v40 = objc_msgSend(v24, sel_contentView);
  id v41 = objc_msgSend(v40, sel_layer);

  objc_msgSend(v41, sel_addSublayer_, *(void *)&v24[v29]);
  uint64_t v42 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel;
  uint64_t v43 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel];
  int v44 = self;
  id v45 = v43;
  id v46 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v45, sel_setFont_, v46);

  id v47 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v47, sel_addSubview_, *(void *)&v24[v42]);

  uint64_t v48 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel;
  id v49 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel];
  id v50 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v49, sel_setFont_, v50);

  id v51 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v51, sel_addSubview_, *(void *)&v24[v48]);

  uint64_t v52 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel;
  id v53 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel];
  id v54 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v53, sel_setFont_, v54);

  id v55 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v55, sel_addSubview_, *(void *)&v24[v52]);

  uint64_t v56 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel;
  id v57 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel];
  id v58 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v57, sel_setFont_, v58);

  id v59 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v59, sel_addSubview_, *(void *)&v24[v56]);

  uint64_t v60 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel;
  id v61 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel];
  id v62 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v61, sel_setFont_, v62);

  id v63 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v63, sel_addSubview_, *(void *)&v24[v60]);

  uint64_t v64 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView;
  id v65 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView];
  id v66 = objc_msgSend(v23, sel_systemYellowColor);
  objc_msgSend(v65, sel_setBackgroundColor_, v66);

  uint64_t v67 = *(void **)&v24[v64];
  objc_msgSend(v67, sel_setFrame_, 0.0, 0.0, 4.0, 4.0);
  id v68 = objc_msgSend(v67, sel_layer);
  objc_msgSend(v68, sel_setCornerRadius_, 2.0);

  id v69 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v69, sel_addSubview_, *(void *)&v24[v64]);

  uint64_t v70 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer;
  uint64_t v71 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer];
  objc_msgSend(v71, sel_setLineWidth_, 1.0);
  id v72 = v71;
  id v73 = objc_msgSend(v23, sel_clearColor);
  id v74 = objc_msgSend(v73, sel_CGColor);

  objc_msgSend(v72, sel_setFillColor_, v74);
  unint64_t v75 = *(void **)&v24[v70];
  objc_msgSend(v75, sel_setLineJoin_, *MEMORY[0x1E4F3A478]);
  objc_msgSend(v75, sel_setLineCap_, *MEMORY[0x1E4F3A458]);
  id v76 = objc_msgSend(v24, sel_contentView);
  id v77 = objc_msgSend(v76, sel_layer);

  id v78 = *(id *)&v24[v70];
  objc_msgSend(v77, sel_addSublayer_, v78);

  return v24;
}

uint64_t sub_1C034B2B0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C1517A2C();
  uint64_t v99 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v98 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1C151779C();
  uint64_t v97 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v96 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1517CDC();
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v93 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = (void *)sub_1C151774C();
  uint64_t v91 = *(v92 - 1);
  MEMORY[0x1F4188790](v92);
  id v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151780C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C1517A5C();
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)&double v16 = MEMORY[0x1F4188790](v14).n128_u64[0];
  uint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105.receiver = v1;
  v105.super_class = ObjectType;
  objc_msgSendSuper2(&v105, sel_layoutSubviews, v16);
  uint64_t result = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_cursor];
  if (result)
  {
    uint64_t v100 = v3;
    long long v20 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel];
    uint64_t v103 = 0x203A73736150;
    unint64_t v104 = 0xE600000000000000;
    uint64_t v102 = swift_retain();
    sub_1C1517B3C();
    sub_1C1517A4C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    sub_1C034C244(&qword_1EA19A050, MEMORY[0x1E4FAB768]);
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v21 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setText_, v21);

    objc_msgSend(v20, sel_sizeToFit);
    objc_msgSend(v20, sel_frame);
    double Width = CGRectGetWidth(v106);
    objc_msgSend(v20, sel_frame);
    objc_msgSend(v20, sel_setFrame_, 16.0, 8.0, Width, CGRectGetHeight(v107));
    long long v23 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel];
    uint64_t v103 = 0x676E697A69736552;
    unint64_t v104 = 0xEA0000000000203ALL;
    sub_1C1517B7C();
    sub_1C034C244(&qword_1EA19A058, MEMORY[0x1E4FAB708]);
    long long v24 = v92;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void *))(v91 + 8))(v9, v24);
    id v25 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, (SEL)&selRef_setMinimumLineHeight_, v25);

    objc_msgSend(v23, sel_sizeToFit);
    objc_msgSend(v1, sel_bounds);
    double Height = CGRectGetHeight(v108);
    objc_msgSend(v23, sel_frame);
    double v27 = Height - CGRectGetHeight(v109) + -8.0;
    objc_msgSend(v23, sel_frame);
    double v28 = CGRectGetWidth(v110);
    objc_msgSend(v23, sel_frame);
    objc_msgSend(v23, sel_setFrame_, 16.0, v27, v28, CGRectGetHeight(v111));
    uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel];
    sub_1C1517B4C();
    sub_1C1517B5C();
    sub_1C151F72C();
    sub_1C132DF38();
    uint64_t v30 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_setText_, v30);

    objc_msgSend(v29, sel_sizeToFit);
    id v31 = objc_msgSend(v1, sel_contentView);
    objc_msgSend(v31, sel_center);
    double v33 = v32;
    double v35 = v34;

    objc_msgSend(v29, sel_setCenter_, v33, v35);
    objc_msgSend(v1, sel_bounds);
    CGFloat v36 = CGRectGetWidth(v112) * 0.5;
    id v37 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer];
    objc_msgSend(v1, sel_bounds);
    CGFloat v38 = CGRectGetWidth(v113) * 0.5 - v36 * 0.5;
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v37, sel_setFrame_, v38, CGRectGetHeight(v114) * 0.5 + -40.0, v36, 80.0);
    objc_msgSend(v37, sel_bounds);
    id v43 = objc_msgSend(self, sel_bezierPathWithRect_, v39, v40, v41, v42);
    id v44 = objc_msgSend(v43, sel_CGPath);

    objc_msgSend(v37, sel_setPath_, v44);
    sub_1C1517B4C();
    CGRectGetWidth(v115);
    id v45 = v1;
    if ((sub_1C1517D3C() & 1) == 0)
    {
      sub_1C1517B4C();
      CGRectGetWidth(v116);
    }
    sub_1C1517B4C();
    CGRectGetHeight(v117);
    if ((sub_1C1517D3C() & 1) == 0)
    {
      sub_1C1517B4C();
      CGRectGetHeight(v118);
    }
    sub_1C1517AEC();
    if ((sub_1C1517D3C() & 1) == 0) {
      sub_1C1517AEC();
    }
    sub_1C1517AEC();
    if ((sub_1C1517D3C() & 1) == 0) {
      sub_1C1517AEC();
    }
    id v46 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView];
    objc_msgSend(v37, sel_frame);
    objc_msgSend(v46, (SEL)&_OBJC_LABEL_PROTOCOL___UIDragInteractionDelegate);
    id v47 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer];
    id v48 = objc_msgSend(self, sel_systemYellowColor);
    id v49 = objc_msgSend(v48, sel_CGColor);

    objc_msgSend(v47, sel_setStrokeColor_, v49);
    id v50 = v93;
    sub_1C1517B8C();
    uint64_t v52 = v94;
    uint64_t v51 = v95;
    int v53 = (*(uint64_t (**)(char *, uint64_t))(v94 + 88))(v50, v95);
    int v54 = *MEMORY[0x1E4FABA50];
    uint64_t v92 = v37;
    if (v53 == v54)
    {
      id v55 = *(void **)&v45[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView];
      objc_msgSend(v46, sel_frame);
      double MaxX = CGRectGetMaxX(v119);
      objc_msgSend(v46, sel_frame);
      objc_msgSend(v55, sel_setCenter_, MaxX, CGRectGetMinY(v120));
      objc_msgSend(v55, sel_center);
      double v58 = v57;
      double v60 = v59;
      objc_msgSend(v37, sel_frame);
      double v61 = CGRectGetMaxX(v121);
      objc_msgSend(v37, sel_frame);
      double MinY = CGRectGetMinY(v122);
      id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
      objc_msgSend(v63, sel_moveToPoint_, v58, v60);
      objc_msgSend(v63, sel_addLineToPoint_, v61, MinY);
      sub_1C035C60C(v63, v58, v60, v61, MinY);
      id v64 = objc_msgSend(v63, sel_CGPath);
    }
    else
    {
      if (v53 != *MEMORY[0x1E4FABA58])
      {
        (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v51);
        goto LABEL_16;
      }
      id v65 = *(void **)&v45[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView];
      objc_msgSend(v46, sel_frame);
      double MinX = CGRectGetMinX(v123);
      objc_msgSend(v46, sel_frame);
      objc_msgSend(v65, sel_setCenter_, MinX, CGRectGetMaxY(v124));
      objc_msgSend(v65, sel_center);
      double v68 = v67;
      double v70 = v69;
      objc_msgSend(v37, sel_frame);
      double v71 = CGRectGetMinX(v125);
      objc_msgSend(v37, sel_frame);
      double MaxY = CGRectGetMaxY(v126);
      id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
      objc_msgSend(v63, sel_moveToPoint_, v68, v70);
      objc_msgSend(v63, sel_addLineToPoint_, v71, MaxY);
      sub_1C035C60C(v63, v68, v70, v71, MaxY);
      id v64 = objc_msgSend(v63, sel_CGPath);
    }
    id v73 = v64;

    objc_msgSend(v47, sel_setPath_, v73);
LABEL_16:
    id v74 = *(void **)&v45[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel];
    unint64_t v75 = v96;
    sub_1C1517B1C();
    id v76 = v98;
    sub_1C151777C();
    uint64_t v97 = *(void *)(v97 + 8);
    ((void (*)(char *, uint64_t))v97)(v75, v101);
    sub_1C1517A1C();
    uint64_t v99 = *(void *)(v99 + 8);
    ((void (*)(char *, uint64_t))v99)(v76, v100);
    id v77 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v74, sel_setText_, v77);

    objc_msgSend(v74, sel_sizeToFit);
    objc_msgSend(v45, sel_bounds);
    CGFloat v78 = CGRectGetWidth(v127) * 0.5;
    objc_msgSend(v74, sel_bounds);
    CGFloat v79 = v78 - CGRectGetWidth(v128) * 0.5;
    id v80 = v92;
    objc_msgSend(v92, sel_frame);
    double v81 = CGRectGetMinY(v129);
    objc_msgSend(v74, sel_bounds);
    double v82 = v81 - CGRectGetHeight(v130) + -4.0;
    objc_msgSend(v74, sel_bounds);
    double v83 = CGRectGetWidth(v131);
    objc_msgSend(v74, sel_bounds);
    objc_msgSend(v74, sel_setFrame_, v79, v82, v83, CGRectGetHeight(v132));
    uint64_t v84 = *(void **)&v45[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel];
    sub_1C1517B1C();
    sub_1C151778C();
    ((void (*)(char *, uint64_t))v97)(v75, v101);
    sub_1C1517A1C();
    ((void (*)(char *, uint64_t))v99)(v76, v100);
    uint64_t v85 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v84, sel_setText_, v85);

    objc_msgSend(v84, sel_sizeToFit);
    objc_msgSend(v80, sel_frame);
    CGFloat v86 = CGRectGetMaxX(v133) + 4.0;
    objc_msgSend(v45, sel_bounds);
    CGFloat v87 = CGRectGetHeight(v134) * 0.5;
    objc_msgSend(v84, sel_bounds);
    CGFloat v88 = v87 - CGRectGetHeight(v135) * 0.5;
    objc_msgSend(v84, sel_bounds);
    double v89 = CGRectGetWidth(v136);
    objc_msgSend(v84, sel_bounds);
    objc_msgSend(v84, sel_setFrame_, v86, v88, v89, CGRectGetHeight(v137));
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatInspectorCursorCell()
{
  return self;
}

uint64_t sub_1C034C244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C034C28C()
{
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_cursor] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView;
  *(void *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer;
  *(void *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t FormatFrameNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatFrameNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatFrameNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatFrameNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatFrameNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatFrameNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatFrameNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatFrameNode.__allocating_init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = *a3;
  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v9;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

void *FormatFrameNode.init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = v8;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t FormatFrameNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatFrameNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C034C7E4(uint64_t a1)
{
  uint64_t result = sub_1C034C904(&qword_1EA19A060);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C034C828(void *a1)
{
  a1[1] = sub_1C034C904(&qword_1EB87DE38);
  a1[2] = sub_1C034C904(&qword_1EB85FE70);
  uint64_t result = sub_1C034C904(&qword_1EA19A068);
  a1[3] = result;
  return result;
}

uint64_t sub_1C034C8B4(void **a1, void **a2)
{
  return _s8NewsFeed15FormatFrameNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C034C8C0(uint64_t a1)
{
  uint64_t result = sub_1C034C904(&qword_1EA19A070);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C034C904(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatFrameNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C034C944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v17 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v19 = *(void *)(a4 + 16);
  uint64_t v18 = *(void *)(a4 + 24);
  uint64_t v20 = *(void *)(v17 + 40);
  if (v20)
  {
    uint64_t v26 = *(void *)(v17 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v19 = v26;
    uint64_t v18 = v20;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = swift_allocObject();
  uint64_t v23 = *(void *)(a4 + 16);
  uint64_t v22 = *(void *)(a4 + 24);
  type metadata accessor for FormatFrameNodeLayoutAttributes();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = a2;
  *(void *)(v24 + 32) = v19;
  *(void *)(v24 + 40) = v18;
  *(void *)(v24 + 48) = v23;
  *(void *)(v24 + 56) = v22;
  *(double *)(v24 + 64) = a6;
  *(double *)(v24 + 72) = a7;
  *(double *)(v24 + 80) = a8;
  *(double *)(v24 + 88) = a9;
  *(void *)(v21 + 16) = v24;
  *a5 = v21 | 0x4000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C034CAA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C034CAF8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatFrameNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatFrameNode);
}

uint64_t dispatch thunk of FormatFrameNode.__allocating_init(identifier:size:adjustments:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C034CB74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C034CBAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - v12;
  MEMORY[0x1F4188790](v14);
  double v16 = (char *)&v29 - v15;
  uint64_t v17 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v34 = a1;
  sub_1C034CEE0(a1 + v18, (uint64_t)v16);
  uint64_t v19 = v3;
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v32 = v2;
  LODWORD(v2) = v20(v16, 1, v2);
  sub_1C034CF60((uint64_t)v16);
  if (v2 == 1)
  {
    uint64_t v29 = v19;
    uint64_t v30 = v10;
    uint64_t v21 = v33;
    uint64_t v22 = (uint64_t)v31;
    sub_1C034CEE0(v34 + *(int *)(v17 + 24), (uint64_t)v13);
    uint64_t v23 = v32;
    if (v20(v13, 1, v32) == 1)
    {
      return sub_1C034CF60((uint64_t)v13);
    }
    else
    {
      sub_1C034CFD8((uint64_t)v13, v22);
      uint64_t v26 = v21 + *(int *)(type metadata accessor for FormatDerivedDataBindingItemResult() + 20);
      sub_1C034D088(v22, (uint64_t)v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v7, 0, 1, v23);
      uint64_t v27 = (uint64_t)v30;
      uint64_t v28 = v35;
      sub_1C0F9F6C4(v26, (uint64_t)v7, (uint64_t)v30);
      sub_1C034CF60((uint64_t)v7);
      uint64_t result = sub_1C034D0EC(v22);
      if (!v28) {
        return sub_1C034D148(v27, v26);
      }
    }
  }
  else
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    *(unsigned char *)uint64_t v25 = 6;
    *(void *)(v25 + 8) = 0xD00000000000002FLL;
    *(void *)(v25 + 16) = 0x80000001C160B9A0;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C034CEE0(uint64_t a1, uint64_t a2)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C034CF60(uint64_t a1)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C034CFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatDerivedDataBindingItemResult()
{
  uint64_t result = qword_1EA19A080;
  if (!qword_1EA19A080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C034D088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C034D0EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C034D148(uint64_t a1, uint64_t a2)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C034D1C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    if (v7 >= 0xF)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for FormatSlotDefinitionItemSet();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *uint64_t v10 = *v11;
      uint64_t v15 = v11[2];
      v10[1] = v11[1];
      void v10[2] = v15;
      uint64_t v16 = v11[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16)
      {
        uint64_t v17 = v11[4];
        v10[3] = v16;
        v10[4] = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)(v11 + 3);
      }
      uint64_t v18 = *(int *)(v12 + 36);
      uint64_t v19 = (char *)v10 + v18;
      uint64_t v20 = (char *)v11 + v18;
      uint64_t v21 = sub_1C1518CDC();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

void sub_1C034D4B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C034D50C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= 0xFuLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v4 + *(int *)(v5 + 36);
    uint64_t v8 = sub_1C1518CDC();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v7, v8);
    }
  }
  return result;
}

void *sub_1C034D668(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = a2[1];
  if (v6 >= 0xF)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    void *v8 = *v9;
    uint64_t v13 = v9[2];
    v8[1] = v9[1];
    v8[2] = v13;
    uint64_t v14 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14)
    {
      uint64_t v15 = v9[4];
      v8[3] = v14;
      v8[4] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    }
    uint64_t v16 = *(int *)(v10 + 36);
    uint64_t v17 = (char *)v8 + v16;
    uint64_t v18 = (char *)v9 + v16;
    uint64_t v19 = sub_1C1518CDC();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

void *sub_1C034D908(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = a2[1];
  if (a1[1] < 0xFuLL)
  {
    if (v6 >= 0xF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 < 0xF)
  {
    sub_1C01A7564((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1C034D0EC(v8);
      goto LABEL_14;
    }
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    *(_DWORD *)(v8 + 4) = *((_DWORD *)v9 + 1);
    *(void *)(v8 + 8) = *((void *)v9 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *((void *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)v9 + 3);
    if (*(void *)(v8 + 24))
    {
      if (v20)
      {
        *(void *)(v8 + 24) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v8 + 32) = *((void *)v9 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_29:
        uint64_t v28 = *(int *)(v10 + 36);
        uint64_t v29 = (void *)(v8 + v28);
        uint64_t v30 = &v9[v28];
        uint64_t v31 = sub_1C1518CDC();
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
        int v34 = v33(v29, 1, v31);
        int v35 = v33(v30, 1, v31);
        if (v34)
        {
          if (!v35)
          {
            (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
            return a1;
          }
        }
        else
        {
          if (!v35)
          {
            (*(void (**)(void *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v17 = *(void *)(*(void *)(v36 - 8) + 64);
        uint64_t v18 = v29;
        uint64_t v19 = v30;
        goto LABEL_15;
      }
      sub_1C034DE40(v8 + 24);
    }
    else if (v20)
    {
      *(void *)(v8 + 24) = v20;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    goto LABEL_29;
  }
  if (v14)
  {
LABEL_14:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = (void *)v8;
    uint64_t v19 = v9;
LABEL_15:
    memcpy(v18, v19, v17);
    return a1;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *((_DWORD *)v9 + 1);
  *(void *)(v8 + 8) = *((void *)v9 + 1);
  *(void *)(v8 + 16) = *((void *)v9 + 2);
  uint64_t v15 = *((void *)v9 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(void *)(v8 + 24) = v15;
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  }
  uint64_t v21 = *(int *)(v10 + 36);
  uint64_t v22 = (void *)(v8 + v21);
  uint64_t v23 = &v9[v21];
  uint64_t v24 = sub_1C1518CDC();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C034DE40(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1C034DE94(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  unint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    void *v5 = *v6;
    *(_OWORD *)(v5 + 1) = *(_OWORD *)(v6 + 1);
    *(_OWORD *)(v5 + 3) = *(_OWORD *)(v6 + 3);
    uint64_t v10 = *(int *)(v7 + 36);
    uint64_t v11 = (char *)v5 + v10;
    uint64_t v12 = (char *)v6 + v10;
    uint64_t v13 = sub_1C1518CDC();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1C034E0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8) < 0xFuLL) {
    goto LABEL_4;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  if (v6 < 0xF)
  {
    sub_1C01A7564(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1C034D0EC((uint64_t)v8);
      goto LABEL_12;
    }
    void *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_bridgeObjectRelease();
    uint64_t v25 = v9[3];
    if (v8[3])
    {
      if (v25)
      {
        v8[3] = v25;
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v27 = *(int *)(v10 + 36);
        uint64_t v28 = (char *)v8 + v27;
        uint64_t v29 = (char *)v9 + v27;
        uint64_t v30 = sub_1C1518CDC();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
        int v33 = v32(v28, 1, v30);
        int v34 = v32(v29, 1, v30);
        if (v33)
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
            return a1;
          }
        }
        else
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v22 = *(void *)(*(void *)(v35 - 8) + 64);
        uint64_t v23 = v28;
        uint64_t v24 = v29;
        goto LABEL_13;
      }
      sub_1C034DE40((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    goto LABEL_22;
  }
  if (v14)
  {
LABEL_12:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
    uint64_t v23 = (char *)v8;
    uint64_t v24 = (char *)v9;
LABEL_13:
    memcpy(v23, v24, v22);
    return a1;
  }
  void *v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  uint64_t v15 = *(int *)(v10 + 36);
  uint64_t v16 = (char *)v8 + v15;
  size_t v17 = (char *)v9 + v15;
  uint64_t v18 = sub_1C1518CDC();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C034E510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C034E524);
}

uint64_t sub_1C034E524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483632)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 15;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1C034E5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C034E610);
}

uint64_t sub_1C034E610(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483632)
  {
    *(void *)(result + 8) = (a2 + 14);
  }
  else
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C034E6D4()
{
  sub_1C034D4B8(319, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t static CoverIssueViewLayout.make18ColumnCatalogLayout(context:factories:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB8F8], v5);
  sub_1C0350724(0, (unint64_t *)&qword_1EB85C830, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  return sub_1C1517BEC();
}

void sub_1C034E8B4(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C0350878(0, &qword_1EB85C840, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v23[-v9];
  uint64_t v11 = a2[40];
  uint64_t v12 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v11);
  double v13 = (*(double (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
  uint64_t v14 = a2[40];
  uint64_t v15 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v14);
  double v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
  double v17 = v13 + v16 + v16;
  uint64_t v18 = (void *)sub_1C0350544((uint64_t)a2);
  if ((a2[7] & 4) != 0) {
    double v19 = 0.0;
  }
  else {
    double v19 = 20.0;
  }
  id v20 = v18;
  sub_1C151F80C();
  objc_msgSend(v20, sel_boundingRectWithSize_options_context_, 35, 0);
  double v21 = v19 + v17 + 20.0 + CGRectGetWidth(v31) + 10.0;
  uint64_t v30 = a1;
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA28], v7);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  double v26 = v21;
  uint64_t v27 = 0x4024000000000000;
  id v28 = v20;
  double v29 = v19;
  size_t v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0350724(0, &qword_1EB85C7F8, MEMORY[0x1E4FAB6F0]);
  sub_1C03507A8(&qword_1EB85C7F0, &qword_1EB85C7F8, v22);
  sub_1C151734C();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1C034EB6C(uint64_t a1)
{
  sub_1C034E8B4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C034EB74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v48 = a4;
  id v49 = a1;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  sub_1C0350878(0, &qword_1EB85C840, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  double v16 = (uint64_t *)((char *)&v41 - v15);
  uint64_t v56 = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0x4024000000000000;
  *double v16 = v17;
  uint64_t v18 = *MEMORY[0x1E4FABA08];
  id v50 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 104);
  unsigned int v47 = v18;
  v50(v16, v18, v13);
  double v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v19);
  uint64_t v44 = v21;
  uint64_t v41 = v22;
  sub_1C151738C();
  uint64_t v23 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v23(v16, v13);
  double v42 = v23;
  uint64_t v43 = v14 + 8;
  uint64_t v24 = a2;
  uint64_t v25 = v49;
  sub_1C0DAEA2C(v24, v46, v49);
  uint64_t v56 = v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0x4030000000000000;
  *double v16 = v26;
  v50(v16, v18, v13);
  sub_1C151738C();
  v23(v16, v13);
  uint64_t v56 = v25;
  sub_1BFF35C38();
  uint64_t v28 = v27;
  uint64_t v29 = swift_allocBox();
  uint64_t v31 = v30;
  uint64_t v32 = v30 + *(int *)(v28 + 48);
  uint64_t v33 = *MEMORY[0x1E4FAB790];
  uint64_t v34 = sub_1C151786C();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104);
  v35(v31, v33, v34);
  v35(v32, *MEMORY[0x1E4FAB7B0], v34);
  *double v16 = v29;
  uint64_t v36 = v50;
  v50(v16, *MEMORY[0x1E4FAB9E8], v13);
  double v51 = a5;
  uint64_t v52 = v45;
  double v53 = a6;
  uint64_t v54 = v48;
  double v55 = a7;
  sub_1C151731C();
  id v37 = v42;
  v42(v16, v13);
  CGFloat v38 = v49;
  uint64_t v56 = v49;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = 0x404C000000000000;
  *double v16 = v39;
  v36(v16, v47, v13);
  sub_1C151738C();
  v37(v16, v13);
  uint64_t v56 = v38;
  v36(v16, *MEMORY[0x1E4FAB9E0], v13);
  sub_1C15173FC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v37)(v16, v13);
}

uint64_t sub_1C034F040(uint64_t a1, void *a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v47 = a1;
  uint64_t v48 = a3;
  sub_1C0350878(0, &qword_1EB85C840, MEMORY[0x1E4FABA30]);
  uint64_t v46 = v11;
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v44 - v12);
  uint64_t v53 = a1;
  sub_1BFF35C38();
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocBox();
  uint64_t v18 = v17;
  uint64_t v44 = (uint64_t *)((char *)v17 + *(int *)(v15 + 48));
  uint64_t v45 = v16;
  uint64_t v19 = sub_1C151786C();
  uint64_t v20 = swift_allocBox();
  uint64_t v22 = v21;
  uint64_t v23 = swift_allocObject();
  *(double *)(v23 + 16) = a4;
  uint64_t *v22 = v23;
  uint64_t v24 = *(void (**)(void))(*(void *)(v19 - 8) + 104);
  ((void (*)(uint64_t *, void, uint64_t))v24)(v22, *MEMORY[0x1E4FAB798], v19);
  *uint64_t v18 = v20;
  ((void (*)(uint64_t *, void, uint64_t))v24)(v18, *MEMORY[0x1E4FAB7A0], v19);
  uint64_t v25 = swift_allocObject();
  uint64_t v27 = a2[40];
  uint64_t v26 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v27);
  *(double *)(v25 + 16) = (*(double (**)(uint64_t, uint64_t))(v26 + 24))(v27, v26);
  *uint64_t v44 = v25;
  v24();
  uint64_t v28 = v46;
  *uint64_t v13 = v45;
  uint64_t v29 = v49;
  uint64_t v30 = *(void (**)(uint64_t *, void, uint64_t))(v49 + 104);
  v30(v13, *MEMORY[0x1E4FAB9E8], v28);
  uint64_t v52 = a2;
  uint64_t v31 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v31);
  sub_1C151731C();
  uint64_t v32 = *(void (**)(uint64_t *, uint64_t))(v29 + 8);
  v32(v13, v28);
  uint64_t v49 = v29 + 8;
  uint64_t v33 = v47;
  uint64_t v53 = v47;
  uint64_t v34 = swift_allocObject();
  *(double *)(v34 + 16) = a5;
  *uint64_t v13 = v34;
  v30(v13, *MEMORY[0x1E4FABA00], v28);
  sub_1C151738C();
  v32(v13, v28);
  uint64_t v53 = v33;
  v30(v13, *MEMORY[0x1E4FABA28], v28);
  sub_1C0350804();
  sub_1C0350878(0, &qword_1EB85C7D8, MEMORY[0x1E4FAB678]);
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C1529AE0;
  unint64_t v40 = v39 + v38;
  uint64_t v41 = *MEMORY[0x1E4FAB610];
  sub_1C0350878(0, &qword_1EB85C7C8, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v40, v41, v42);
  (*(void (**)(unint64_t, void, uint64_t))(v37 + 104))(v40, *MEMORY[0x1E4FAB620], v36);
  uint64_t v50 = v48;
  double v51 = a6;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v32)(v13, v28);
}

uint64_t sub_1C034F5A0(uint64_t a1, uint64_t a2)
{
  sub_1C0350878(0, &qword_1EB85C840, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v28 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 336);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        uint64_t *v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    uint64_t *v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    sub_1C0350804();
    sub_1C0350878(0, &qword_1EB85C7D8, MEMORY[0x1E4FAB678]);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
    unint64_t v23 = v22 + v21;
    uint64_t v24 = *MEMORY[0x1E4FAB600];
    sub_1C0350878(0, &qword_1EB85C7C8, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E4FAB620], v19);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v26);
    sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v27 = v17;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C034F9F8(uint64_t a1, void *a2, double a3)
{
  id v38 = a2;
  uint64_t v45 = a1;
  sub_1C0350878(0, &qword_1EB85C840, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  uint64_t v41 = v8;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v33 - v9);
  uint64_t v46 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  uint64_t v39 = v10;
  *uint64_t v10 = v11;
  uint64_t v12 = *MEMORY[0x1E4FAB968];
  uint64_t v13 = *(void (**)(uint64_t *, void, uint64_t))(v8 + 104);
  uint64_t v43 = v8 + 104;
  uint64_t v44 = v13;
  v13(v10, v12, v7);
  sub_1C0350804();
  sub_1C0350878(0, &qword_1EB85C7D8, MEMORY[0x1E4FAB678]);
  uint64_t v36 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v35 = *(void *)(v15 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v37 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1C1527210;
  unint64_t v18 = v17 + v16;
  *(double *)(v17 + v16) = a3;
  unsigned int v34 = *MEMORY[0x1E4FAB7E8];
  uint64_t v19 = v34;
  uint64_t v20 = sub_1C15178EC();
  uint64_t v33 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);
  v33(v18, v19, v20);
  uint64_t v21 = *MEMORY[0x1E4FAB858];
  uint64_t v22 = sub_1C15179EC();
  unint64_t v23 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);
  v23(v18, v21, v22);
  uint64_t v24 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
  uint64_t v25 = v36;
  v24(v18, *MEMORY[0x1E4FAB550], v36);
  uint64_t v26 = (void *)(v18 + v35);
  void *v26 = 0x4008000000000000;
  v33((unint64_t)v26, v34, v20);
  v23((unint64_t)v26, v21, v22);
  v24((unint64_t)v26, *MEMORY[0x1E4FAB560], v25);
  id v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v27);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  id v28 = v38;
  uint64_t v29 = v39;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = v40;
  uint64_t v31 = *(void (**)(uint64_t *, uint64_t))(v41 + 8);
  v31(v29, v40);
  uint64_t v46 = v45;
  swift_getKeyPath();
  v44(v29, *MEMORY[0x1E4FAB9F0], v30);
  sub_1C151737C();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v31)(v29, v30);
}

uint64_t sub_1C034FEC0(void *a1)
{
  uint64_t v1 = *a1;
  uint64_t v88 = (uint64_t)a1;
  uint64_t v89 = v1;
  sub_1C0350878(0, &qword_1EB85C840, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v62 - v6);
  uint64_t v90 = a1;
  uint64_t KeyPath = (uint64_t (*)(uint64_t *, uint64_t))swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v9 = v8;
  uint64_t v10 = swift_allocBox();
  uint64_t v12 = v11;
  uint64_t v13 = (uint64_t *)(v11 + *(int *)(v9 + 48));
  uint64_t v14 = *MEMORY[0x1E4FAB790];
  uint64_t v15 = sub_1C151786C();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 104);
  uint64_t v18 = v16 + 104;
  uint64_t v82 = v15;
  v17(v12, v14);
  uint64_t v83 = v18;
  id v80 = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0x4000000000000000;
  *uint64_t v13 = v19;
  unsigned int v81 = *MEMORY[0x1E4FAB798];
  ((void (*)(uint64_t *))v17)(v13);
  uint64_t *v7 = v10;
  unsigned int v85 = *MEMORY[0x1E4FAB9E8];
  uint64_t v20 = v5;
  uint64_t v21 = *(char **)(v5 + 104);
  uint64_t v86 = v5 + 104;
  CGFloat v87 = v21;
  uint64_t v22 = v4;
  ((void (*)(uint64_t *))v21)(v7);
  sub_1C0350804();
  uint64_t v79 = v23;
  sub_1C0350878(0, &qword_1EB85C7D8, MEMORY[0x1E4FAB678]);
  uint64_t v67 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 72);
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = (v27 + 32) & ~v27;
  uint64_t v76 = v28;
  uint64_t v77 = v26;
  uint64_t v78 = v27 | 7;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
  uint64_t v30 = v29 + v28;
  unsigned int v75 = *MEMORY[0x1E4FAB5E8];
  uint64_t v31 = v75;
  sub_1C0350878(0, &qword_1EB85C7C8, MEMORY[0x1E4FAB618]);
  uint64_t v72 = v32;
  uint64_t v33 = *(void *)(v32 - 8);
  id v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 104);
  uint64_t v74 = v33 + 104;
  v73(v30, v31, v32);
  unsigned int v66 = *MEMORY[0x1E4FAB620];
  double v68 = *(void (**)(void))(v25 + 104);
  uint64_t v69 = v25 + 104;
  ((void (*)(uint64_t))v68)(v30);
  uint64_t v71 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v70 = sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v34 = *(uint64_t (**)(uint64_t *, uint64_t))(v20 + 8);
  uint64_t v65 = v20 + 8;
  uint64_t KeyPath = v34;
  uint64_t v35 = v7;
  uint64_t v64 = v4;
  v34(v7, v4);
  uint64_t v90 = (void *)v88;
  uint64_t v88 = swift_getKeyPath();
  uint64_t v36 = swift_allocBox();
  id v38 = v37;
  uint64_t v39 = (uint64_t *)((char *)v37 + *(int *)(v9 + 48));
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = 0x403C000000000000;
  *id v38 = v40;
  uint64_t v41 = v81;
  uint64_t v42 = v82;
  uint64_t v43 = (void (*)(uint64_t *, uint64_t, uint64_t))v80;
  ((void (*)(uint64_t *, void, uint64_t))v80)(v38, v81, v82);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = 0x403C000000000000;
  *uint64_t v39 = v44;
  v43(v39, v41, v42);
  id v63 = v35;
  uint64_t *v35 = v36;
  ((void (*)(uint64_t *, void, uint64_t))v87)(v35, v85, v22);
  uint64_t v45 = v76;
  CGFloat v87 = (char *)(2 * v77);
  uint64_t v46 = v77;
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C152C7F0;
  uint64_t v48 = v47 + v45;
  uint64_t v50 = v72;
  uint64_t v49 = v73;
  v73(v47 + v45, v75, v72);
  uint64_t v51 = v66;
  uint64_t v52 = v67;
  uint64_t v53 = v68;
  ((void (*)(uint64_t, void, uint64_t))v68)(v48, v66, v67);
  uint64_t v54 = v48 + v46;
  v49(v54, *MEMORY[0x1E4FAB610], v50);
  ((void (*)(uint64_t, uint64_t, uint64_t))v53)(v54, v51, v52);
  __asm { FMOV            V0.2D, #-10.0 }
  *(_OWORD *)&v87[v48] = _Q0;
  v53();
  double v60 = v63;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return KeyPath(v60, v64);
}

uint64_t sub_1C0350544(uint64_t a1)
{
  uint64_t v2 = sub_1C151E24C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = qword_1EB8739C0;
  if ((*(unsigned char *)(a1 + 56) & 4) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 368);
    if (*(unsigned char *)(v7 + qword_1EB8739C0)) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    sub_1BFE4597C();
    uint64_t *v5 = sub_1C151F56C();
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
    a1 = sub_1C151E26C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
    v3 += 8;
    v8(v5, v2);
    if (a1) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    __break(1u);
  }
  uint64_t v7 = *(void *)(a1 + 376);
  if (*(unsigned char *)(v7 + v6)) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  sub_1BFE4597C();
  uint64_t *v5 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
  char v9 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v9) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0350700(void *a1)
{
  return sub_1C034EB74(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 48), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 56));
}

uint64_t sub_1C0350714()
{
  return swift_deallocObject();
}

void sub_1C0350724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for CoverIssueViewLayout;
    v8[1] = &type metadata for CoverIssueViewLayout.Attributes;
    v8[2] = sub_1C01BC7F0();
    v8[3] = sub_1C01BC844();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C03507A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0350724(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C03507EC(uint64_t a1)
{
  return sub_1C034F040(a1, *(void **)(v1 + 24), *(void *)(v1 + 40), *(double *)(v1 + 16), *(double *)(v1 + 32), *(double *)(v1 + 48));
}

void sub_1C0350804()
{
  if (!qword_1EB85E140)
  {
    sub_1C0350878(255, &qword_1EB85C7D8, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E140);
    }
  }
}

void sub_1C0350878(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C01BC7F0();
    unint64_t v7 = a3(a1, &type metadata for CoverIssueViewLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C03508DC(uint64_t a1)
{
  return sub_1C034F5A0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03508E4(uint64_t a1)
{
  return sub_1C034F9F8(a1, *(void **)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1C03508F0()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for WebEmbedDatastoreContents()
{
  return &type metadata for WebEmbedDatastoreContents;
}

uint64_t *sub_1C0350938(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    type metadata accessor for WebEmbedDataSourceCacheEntry();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = *((void *)v8 + 1);
      *(void *)unint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v9;
      swift_retain();
    }
    else
    {
      uint64_t v11 = sub_1C151631C();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(v7, v8, v11);
      uint64_t v13 = (int *)type metadata accessor for WebEmbedDataSourceJson();
      *(void *)&v7[v13[5]] = *(void *)&v8[v13[5]];
      uint64_t v14 = v13[6];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v17;
      uint64_t v18 = v13[7];
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      swift_bridgeObjectRetain();
      v12(v19, v20, v11);
      uint64_t v21 = v13[8];
      uint64_t v22 = &v7[v21];
      uint64_t v23 = &v8[v21];
      uint64_t v24 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      uint64_t v25 = v13[9];
      uint64_t v26 = &v7[v25];
      uint64_t v27 = &v8[v25];
      uint64_t v28 = sub_1C151526C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      uint64_t v29 = v13[10];
      uint64_t v30 = *(void **)&v8[v29];
      *(void *)&v7[v29] = v30;
      id v31 = v30;
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_1C0350B68(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for WebEmbedDataSourceCacheEntry();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v5 = sub_1C151631C();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(v4, v5);
    unint64_t v7 = (int *)type metadata accessor for WebEmbedDataSourceJson();
    swift_bridgeObjectRelease();
    v6(v4 + v7[7], v5);
    uint64_t v8 = v4 + v7[8];
    uint64_t v9 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = v4 + v7[9];
    uint64_t v11 = sub_1C151526C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = *(void **)(v4 + v7[10]);
  }
}

void *sub_1C0350CF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  type metadata accessor for WebEmbedDataSourceCacheEntry();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *((void *)v7 + 1);
    *(void *)uint64_t v6 = *(void *)v7;
    *((void *)v6 + 1) = v8;
    swift_retain();
  }
  else
  {
    uint64_t v9 = sub_1C151631C();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    v10(v6, v7, v9);
    uint64_t v11 = (int *)type metadata accessor for WebEmbedDataSourceJson();
    *(void *)&v6[v11[5]] = *(void *)&v7[v11[5]];
    uint64_t v12 = v11[6];
    uint64_t v13 = &v6[v12];
    uint64_t v14 = &v7[v12];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = v11[7];
    uint64_t v17 = &v6[v16];
    uint64_t v18 = &v7[v16];
    swift_bridgeObjectRetain();
    v10(v17, v18, v9);
    uint64_t v19 = v11[8];
    uint64_t v20 = &v6[v19];
    uint64_t v21 = &v7[v19];
    uint64_t v22 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = v11[9];
    uint64_t v24 = &v6[v23];
    uint64_t v25 = &v7[v23];
    uint64_t v26 = sub_1C151526C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = v11[10];
    uint64_t v28 = *(void **)&v7[v27];
    *(void *)&v6[v27] = v28;
    id v29 = v28;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C0350ED0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C03510E0((uint64_t)a1 + v6);
    type metadata accessor for WebEmbedDataSourceCacheEntry();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)unint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      swift_retain();
    }
    else
    {
      uint64_t v9 = sub_1C151631C();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      uint64_t v11 = (int *)type metadata accessor for WebEmbedDataSourceJson();
      *(void *)&v7[v11[5]] = *(void *)&v8[v11[5]];
      uint64_t v12 = v11[6];
      uint64_t v13 = &v7[v12];
      uint64_t v14 = &v8[v12];
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      uint64_t v15 = v11[7];
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      swift_bridgeObjectRetain();
      v10(v16, v17, v9);
      uint64_t v18 = v11[8];
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      uint64_t v21 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      uint64_t v22 = v11[9];
      uint64_t v23 = &v7[v22];
      uint64_t v24 = &v8[v22];
      uint64_t v25 = sub_1C151526C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      uint64_t v26 = v11[10];
      uint64_t v27 = *(void **)&v8[v26];
      *(void *)&v7[v26] = v27;
      id v28 = v27;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C03510E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1C035113C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1C151631C();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(v5, v6, v8);
    uint64_t v10 = (int *)type metadata accessor for WebEmbedDataSourceJson();
    *(void *)&v5[v10[5]] = *(void *)&v6[v10[5]];
    *(_OWORD *)&v5[v10[6]] = *(_OWORD *)&v6[v10[6]];
    v9(&v5[v10[7]], &v6[v10[7]], v8);
    uint64_t v11 = v10[8];
    uint64_t v12 = &v5[v11];
    uint64_t v13 = &v6[v11];
    uint64_t v14 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = v10[9];
    uint64_t v16 = &v5[v15];
    uint64_t v17 = &v6[v15];
    uint64_t v18 = sub_1C151526C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(void *)&v5[v10[10]] = *(void *)&v6[v10[10]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C03512F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1C03510E0((uint64_t)a1 + v7);
    uint64_t v10 = type metadata accessor for WebEmbedDataSourceCacheEntry();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_1C151631C();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(v8, v9, v11);
      uint64_t v13 = (int *)type metadata accessor for WebEmbedDataSourceJson();
      *(void *)&v8[v13[5]] = *(void *)&v9[v13[5]];
      *(_OWORD *)&v8[v13[6]] = *(_OWORD *)&v9[v13[6]];
      v12(&v8[v13[7]], &v9[v13[7]], v11);
      uint64_t v14 = v13[8];
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      uint64_t v17 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = v13[9];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      uint64_t v21 = sub_1C151526C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      *(void *)&v8[v13[10]] = *(void *)&v9[v13[10]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C03514D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C03514E8);
}

uint64_t sub_1C03514E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for WebEmbedDataSourceCacheEntry();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0351598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C03515AC);
}

uint64_t sub_1C03515AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for WebEmbedDataSourceCacheEntry();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for WebEmbedDatastoreProperty()
{
  uint64_t result = qword_1EB867CC0;
  if (!qword_1EB867CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C03516A0()
{
  uint64_t result = type metadata accessor for WebEmbedDataSourceCacheEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0351774()
{
  return 0xD000000000000016;
}

unint64_t sub_1C0351790()
{
  return 0xD000000000000014;
}

unint64_t sub_1C03517AC()
{
  return 0xD000000000000017;
}

unint64_t sub_1C03517C8()
{
  return 0xD000000000000019;
}

unint64_t sub_1C03517E4()
{
  return 0xD000000000000012;
}

unint64_t sub_1C0351800()
{
  return 0xD000000000000014;
}

unint64_t sub_1C035181C()
{
  return 0xD000000000000017;
}

unint64_t sub_1C0351838()
{
  return 0xD000000000000016;
}

unint64_t sub_1C0351854()
{
  return 0xD000000000000017;
}

unint64_t sub_1C0351870()
{
  return 0xD000000000000018;
}

unint64_t sub_1C035188C()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C03518A8()
{
  return 0xD000000000000018;
}

unint64_t sub_1C03518C4()
{
  return 0xD000000000000015;
}

unint64_t sub_1C03518E0()
{
  return 0xD000000000000019;
}

unint64_t sub_1C03518FC()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C0351918()
{
  return 0;
}

uint64_t sub_1C03519AC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0351A0C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0351A70(uint64_t a1)
{
  unint64_t v2 = sub_1BFDE45CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0351AAC(uint64_t a1)
{
  unint64_t v2 = sub_1BFDE45CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0351AE8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0351B38()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0351B4C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0351B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0351C20(uint64_t a1)
{
  unint64_t v2 = sub_1BFDE47D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0351C5C(uint64_t a1)
{
  unint64_t v2 = sub_1BFDE47D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatItemKind.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0351D24()
{
  return sub_1C1520E0C();
}

uint64_t FormatItemKind.description.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = 0x656C6369747261;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v3 = 0x6575737369;
      break;
    case 2uLL:
      uint64_t v3 = 0x6465626D45626577;
      break;
    case 3uLL:
      uint64_t v3 = 0x6172546F69647561;
      break;
    case 4uLL:
      uint64_t v3 = 6775156;
      break;
    case 5uLL:
      uint64_t v3 = 0x65726F6373;
      break;
    case 6uLL:
      uint64_t v3 = 0x676E69646E617473;
      break;
    case 7uLL:
      uint64_t v3 = 0x74656B63617262;
      break;
    case 8uLL:
      uint64_t v3 = 0x65726F6353786F62;
      break;
    case 9uLL:
      uint64_t v3 = 0x726F6353656E696CLL;
      break;
    case 0xAuLL:
      uint64_t v3 = 0x65527972756A6E69;
      break;
    case 0xBuLL:
      uint64_t v3 = 0x6579616C5079656BLL;
      break;
    case 0xCuLL:
      uint64_t v3 = 0x656C7A7A7570;
      break;
    case 0xDuLL:
      uint64_t v3 = 0x7954656C7A7A7570;
      break;
    case 0xEuLL:
      uint64_t v3 = 0x7453656C7A7A7570;
      break;
    default:
      uint64_t v3 = v1;
      break;
  }
  sub_1BFE74E64(v1, v2);
  return v3;
}

uint64_t sub_1C0351F94()
{
  return sub_1C1268AEC();
}

uint64_t sub_1C0351FA8()
{
  return sub_1C1269400();
}

uint64_t sub_1C0351FBC()
{
  return sub_1C12681C8();
}

uint64_t sub_1C0351FD0()
{
  return sub_1C0351918();
}

uint64_t _s8NewsFeed14FormatItemKindO1loiySbAC_ACtFZ_0()
{
  uint64_t v0 = FormatItemKind.description.getter();
  uint64_t v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1C03520BC(uint64_t a1)
{
  unint64_t result = sub_1C03520E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03520E4()
{
  unint64_t result = qword_1EA19A090;
  if (!qword_1EA19A090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A090);
  }
  return result;
}

unint64_t sub_1C0352138(void *a1)
{
  a1[1] = sub_1BFD86FC0();
  a1[2] = sub_1BFFB39D8();
  unint64_t result = sub_1C0081EA4();
  a1[3] = result;
  return result;
}

void *assignWithCopy for FeedItem.Kind(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedItem.Kind(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatItemKind()
{
  return &type metadata for FormatItemKind;
}

ValueMetadata *type metadata accessor for FormatItemKind.Object()
{
  return &type metadata for FormatItemKind.Object;
}

ValueMetadata *type metadata accessor for FormatItemKind.CodingType()
{
  return &type metadata for FormatItemKind.CodingType;
}

unsigned char *storeEnumTagSinglePayload for FormatItemKind.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0352374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatItemKind.CodingKeys()
{
  return &type metadata for FormatItemKind.CodingKeys;
}

unint64_t sub_1C03523B0()
{
  unint64_t result = qword_1EA19A098;
  if (!qword_1EA19A098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A098);
  }
  return result;
}

unint64_t sub_1C0352408()
{
  unint64_t result = qword_1EA19A0A0;
  if (!qword_1EA19A0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A0A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatItemKind.Object.CodingKeys()
{
  return &type metadata for FormatItemKind.Object.CodingKeys;
}

unint64_t sub_1C0352498()
{
  unint64_t result = qword_1EA19A0A8;
  if (!qword_1EA19A0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A0A8);
  }
  return result;
}

id SharingArticleTextActivityItemSource.__allocating_init(headline:)(uint64_t a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
  unsigned int v4 = v3;
  uint64_t v5 = (void *)swift_unknownObjectRetain();
  uint64_t v6 = sub_1C0352610(v5);
  char v7 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
  uint64_t *v7 = v6;
  v7[1] = v8;

  v11.receiver = v4;
  v11.super_class = v1;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_unknownObjectRelease();
  return v9;
}

id SharingArticleTextActivityItemSource.init(headline:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
  unsigned int v4 = v1;
  uint64_t v5 = (void *)swift_unknownObjectRetain();
  uint64_t v6 = sub_1C0352610(v5);
  char v7 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
  uint64_t *v7 = v6;
  v7[1] = v8;

  v11.receiver = v4;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1C0352610(void *a1)
{
  id v2 = objc_msgSend(a1, sel_title);
  if (v2)
  {
    int v3 = v2;
    uint64_t v4 = sub_1C151E62C();

    id v5 = objc_msgSend(a1, sel_sourceName);
    if (v5)
    {
      uint64_t v6 = v5;
      sub_1C151E62C();

      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
  }
  id v8 = objc_msgSend(a1, sel_title);
  if (!v8)
  {
    id v8 = objc_msgSend(a1, sel_sourceName);
    if (!v8) {
      return 0;
    }
  }
  id v9 = v8;
  uint64_t v7 = sub_1C151E62C();

  return v7;
}

uint64_t SharingArticleTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle + 8);
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void SharingArticleTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v74 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (sub_1C151E62C() == 0xD000000000000026 && v6 == 0x80000001C160BC20)
    {
      id v7 = a1;
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v10 = (void *)sub_1C151E39C();
      unint64_t v73 = (unint64_t)v10;
      uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle);
      uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle + 8);
      if (v11) {
        BOOL v13 = 0;
      }
      else {
        BOOL v13 = v12 == 0xE000000000000000;
      }
      if (!v13 && (sub_1C1520A9C() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v72 = v10;
        sub_1C1065BB8(v11, v12, 0x2D656C6369747261, 0xED0000656C746974, isUniquelyReferenced_nonNull_native);
        unint64_t v73 = (unint64_t)v10;
        swift_bridgeObjectRelease();
      }
      uint64_t v15 = OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline;
      id v16 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline), sel_shortExcerpt);
      if (v16)
      {

        id v17 = objc_msgSend(*(id *)(v3 + v15), sel_shortExcerpt);
        if (v17)
        {
          uint64_t v18 = v17;
          uint64_t v19 = sub_1C151E62C();
          uint64_t v21 = v20;

          char v22 = swift_isUniquelyReferenced_nonNull_native();
          id v72 = v10;
          unint64_t v73 = 0x8000000000000000;
          sub_1C1065BB8(v19, v21, 0x2D656C6369747261, 0xEF7972616D6D7573, v22);
        }
        else
        {
          sub_1C035355C(0x2D656C6369747261, 0xEF7972616D6D7573);
        }
        swift_bridgeObjectRelease();
      }
      id v38 = self;
      uint64_t v39 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v72 = 0;
      id v40 = objc_msgSend(v38, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v39, 1, &v72);

      id v41 = v72;
      if (v40)
      {
        uint64_t v42 = sub_1C151606C();
        uint64_t v44 = v43;

        *(void *)(a2 + 24) = MEMORY[0x1E4F277C0];
        *(void *)a2 = v42;
        *(void *)(a2 + 8) = v44;
        return;
      }
      uint64_t v45 = v41;
      uint64_t v46 = (void *)sub_1C1515D3C();

      swift_willThrow();
      goto LABEL_28;
    }
    char v8 = sub_1C1520A9C();
    id v9 = a1;
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }

    uint64_t v23 = (void *)*MEMORY[0x1E4F435C0];
    uint64_t v24 = sub_1C151E62C();
    uint64_t v26 = v25;
    if (v24 == sub_1C151E62C() && v26 == v27) {
      goto LABEL_23;
    }
    char v29 = sub_1C1520A9C();
    id v30 = v23;
    id v31 = v9;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29)
    {
LABEL_28:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    }
    uint64_t v23 = (void *)*MEMORY[0x1E4F435A0];
    uint64_t v32 = sub_1C151E62C();
    uint64_t v34 = v33;
    if (v32 == sub_1C151E62C() && v34 == v35)
    {
LABEL_23:
      id v36 = v23;
      id v37 = v9;

      swift_bridgeObjectRelease_n();
      goto LABEL_28;
    }
    char v47 = sub_1C1520A9C();
    id v48 = v23;
    id v49 = v31;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_28;
    }
    uint64_t v50 = (void *)*MEMORY[0x1E4F435D0];
    uint64_t v51 = sub_1C151E62C();
    uint64_t v53 = v52;
    if (v51 == sub_1C151E62C() && v53 == v54)
    {
      id v55 = v50;
      id v56 = v49;

LABEL_37:
      swift_bridgeObjectRelease_n();
      goto LABEL_38;
    }
    char v57 = sub_1C1520A9C();
    id v58 = v50;
    id v59 = v49;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v57)
    {
LABEL_38:
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0xE000000000000000;
      return;
    }
    double v60 = (void *)*MEMORY[0x1E4F435B0];
    uint64_t v61 = sub_1C151E62C();
    uint64_t v63 = v62;
    if (v61 == sub_1C151E62C() && v63 == v64)
    {
      id v65 = v60;
      id v66 = v59;

      goto LABEL_37;
    }
    char v67 = sub_1C1520A9C();
    id v68 = v60;
    id v69 = v59;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v67) {
      goto LABEL_38;
    }
  }
  uint64_t v71 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle);
  uint64_t v70 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle + 8);
  *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];
  *(void *)a2 = v71;
  *(void *)(a2 + 8) = v70;
  swift_bridgeObjectRetain();
}

Swift::String __swiftcall SharingArticleTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  if (dataTypeIdentifierForActivityType.value)
  {
    unint64_t v3 = 0xD00000000000001DLL;
    if (sub_1C151E62C() == 0xD000000000000026 && v4 == 0x80000001C160BC20)
    {
      id v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      unint64_t v6 = 0x80000001C160BC50;
    }
    else
    {
      char v7 = sub_1C1520A9C();
      char v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if (v7)
      {
        unint64_t v6 = 0x80000001C160BC50;
      }
      else
      {
        unint64_t v3 = 0;
        unint64_t v6 = 0xE000000000000000;
      }
    }
  }
  else
  {
    unint64_t v3 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v9 = v3;
  uint64_t v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

id SharingArticleTextActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingArticleTextActivityItemSource.init()()
{
}

id SharingArticleTextActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1C035332C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C106AA18();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1BFF993A8((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1C091D10C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_1C0353430@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEFE43C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C106AC14();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1C152039C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1BFF993A8((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1C091D2E4(v6, v9);
    *unint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1C035355C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C106AFB0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1C091D5A0(v6, v9);
  *unint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C0353644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C106B5AC();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_1C151631C();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_1C091D778(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1C151631C();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1C03537EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0353B98(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data, (void (*)(unint64_t, uint64_t))sub_1C091D790, (void (*)(void))sub_1C106C068, a3);
}

uint64_t sub_1C0353840(uint64_t a1)
{
  objc_super v2 = v1;
  swift_bridgeObjectRetain();
  int64_t v4 = sub_1C10521B0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C106CD98();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1C091D7A8(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C0353938(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C106D1CC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1C091DA64(v6, v9);
  *unint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1C0353A18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v17 = *v4;
    *int64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C106D3A4();
      uint64_t v11 = v17;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 104 * v8;
    long long v13 = *(_OWORD *)(v12 + 80);
    *(_OWORD *)(a3 + 64) = *(_OWORD *)(v12 + 64);
    *(_OWORD *)(a3 + 80) = v13;
    *(void *)(a3 + 96) = *(void *)(v12 + 96);
    long long v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v14;
    long long v15 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 48) = v15;
    sub_1C091DC3C(v8, v11);
    *int64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 96) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C0353B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0353B98(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption, (void (*)(unint64_t, uint64_t))sub_1C091DFBC, (void (*)(void))sub_1C106E940, a3);
}

uint64_t sub_1C0353B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, void (*a5)(unint64_t, uint64_t)@<X4>, void (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = v7;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v17;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v12;
    uint64_t v29 = *v12;
    uint64_t *v12 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a6();
      uint64_t v19 = v29;
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v19 + 56);
    uint64_t v21 = a3(0);
    uint64_t v28 = *(void *)(v21 - 8);
    sub_1C0354884(v20 + *(void *)(v28 + 72) * v16, a7, a4);
    a5(v16, v19);
    uint64_t *v12 = v19;
    swift_bridgeObjectRelease();
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v23 = a7;
    uint64_t v24 = 0;
    uint64_t v25 = v21;
  }
  else
  {
    uint64_t v26 = a3(0);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a7;
    uint64_t v24 = 1;
  }
  return v22(v23, v24, 1, v25);
}

uint64_t sub_1C0353D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0353B98(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(unint64_t, uint64_t))sub_1C091DFD4, (void (*)(void))sub_1C106EE0C, a3);
}

uint64_t sub_1C0353DB0(uint64_t a1)
{
  objc_super v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C1052524(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C106EE78();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for WebEmbedDatastoreCacheKey();
  sub_1C0354828(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1C091DFEC(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1C0353E90@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C105216C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C106FA04();
      uint64_t v9 = v11;
    }
    sub_1C02CD3DC(*(void *)(v9 + 48) + 40 * v6);
    sub_1BFF993A8((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1C091E290(v6, v9);
    *unint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1C0353F8C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C1052590(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C106FBE8();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1C091DA64(v6, v9);
  *unint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C035405C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C107013C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1C091D59C(v6, v9);
  *unint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C035412C()
{
  id v1 = v0;
  uint64_t v2 = sub_1C107A920();
  if ((v3 & 1) == 0) {
    return 0;
  }
  uint64_t v4 = v2;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v0;
  uint64_t v9 = *v1;
  *id v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C1070524();
    uint64_t v6 = v9;
  }
  uint64_t v7 = *(void *)(*(void *)(v6 + 56) + 8 * v4);
  sub_1C091DFB8(v4, v6);
  *id v1 = v6;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C03541C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C107A920(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C10706E4();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v5);
  sub_1C091DE20(v5, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C035425C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0353B98(a1, a2, (uint64_t (*)(void))type metadata accessor for SharedItem, (uint64_t (*)(void))type metadata accessor for SharedItem, (void (*)(unint64_t, uint64_t))sub_1C091E45C, (void (*)(void))sub_1C107089C, a3);
}

uint64_t sub_1C03542B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0353B98(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (void (*)(unint64_t, uint64_t))sub_1C091E474, (void (*)(void))sub_1C1070DE0, a3);
}

uint64_t sub_1C0354304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0353B98(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (void (*)(unint64_t, uint64_t))sub_1C091E48C, (void (*)(void))sub_1C107148C, a3);
}

uint64_t sub_1C0354358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0353B98(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsRoster, (uint64_t (*)(void))type metadata accessor for SportsRoster, (void (*)(unint64_t, uint64_t))sub_1C091E6D0, (void (*)(void))sub_1C1072F28, a3);
}

uint64_t sub_1C03543AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    *(void *)&v13[0] = *v4;
    *char v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C1073E70();
      uint64_t v11 = *(void *)&v13[0];
    }
    swift_bridgeObjectRelease();
    memmove(a3, (const void *)(*(void *)(v11 + 56) + (v8 << 7)), 0x80uLL);
    sub_1C091E908(v8, v11);
    *char v4 = v11;
    swift_bridgeObjectRelease();
    return nullsub_1();
  }
  else
  {
    sub_1C017F2B4(v13);
    return sub_1C0354884((uint64_t)v13, (uint64_t)a3, (uint64_t (*)(void))sub_1C017F2CC);
  }
}

double sub_1C03544BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  unint64_t v5 = v4;
  char v9 = a3 & 1;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1C10528C0(a1, a2, v9);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v5;
    uint64_t v15 = *v5;
    uint64_t *v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C1074318();
      uint64_t v13 = v15;
    }
    sub_1C02F6038();
    sub_1BFF993A8((_OWORD *)(*(void *)(v13 + 56) + 32 * v10), a4);
    sub_1C091EAE0(v10, v13);
    uint64_t *v5 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

double sub_1C03545D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *char v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C1074548();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1BFC773DC((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_1C091ED34(v8, v11);
    *char v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

id _s8NewsFeed36SharingArticleTextActivityItemSourceC22activityViewController_010subjectForF4TypeSSSo010UIActivityjK0C_So0oN0aSgtF_0()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline;
  id result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline), sel_sourceName);
  if (result)
  {
    uint64_t v3 = result;
    sub_1C151E62C();

    uint64_t v4 = sub_1C151E6DC();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(*(id *)(v0 + v1), sel_title);
    if (v5)
    {
      uint64_t v6 = v5;
      sub_1C151E62C();

      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return (id)v4;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SharingArticleTextActivityItemSource()
{
  return self;
}

uint64_t method lookup function for SharingArticleTextActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingArticleTextActivityItemSource);
}

uint64_t dispatch thunk of SharingArticleTextActivityItemSource.__allocating_init(headline:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0354828(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0354884(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C03548F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingFont.init(from:)(a1, a2);
}

uint64_t sub_1C035490C(void *a1)
{
  return FormatBindingFont.encode(to:)(a1);
}

uint64_t sub_1C0354924(unint64_t *a1)
{
  uint64_t v34 = a1;
  sub_1C03558A4(0, (unint64_t *)&qword_1EB874C30, (void (*)(uint64_t))type metadata accessor for FormatResource);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v33 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (uint64_t)&v29 - v5;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v29 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v13 = *(void *)v1;
  uint64_t v12 = *(void *)(v1 + 8);
  uint64_t v14 = *(void *)(v1 + 16);
  char v15 = *(unsigned char *)(v1 + 24);
  *(void *)uint64_t v11 = *(void *)v1;
  *((void *)v11 + 1) = v12;
  *((void *)v11 + 2) = v14;
  v11[24] = v15;
  type metadata accessor for FormatFontResource(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = type metadata accessor for FormatResource(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
  sub_1C03557C8((uint64_t)v11, (uint64_t)v8);
  uint64_t v31 = v17;
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v8, 1, v16) == 1)
  {
    sub_1BFF67F78(v13, v12, v14, v15);
    return sub_1C03558F8((uint64_t)v11, (unint64_t *)&qword_1EB874C30, (void (*)(uint64_t))type metadata accessor for FormatResource);
  }
  id v30 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = v33;
    sub_1C03557C8((uint64_t)v11, v33);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v19, 1, v16);
    if (result != 1)
    {
      unint64_t v21 = v34[1];
      sub_1BFF67F78(v13, v12, v14, v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_1BFED9EFC(0, *(void *)(v21 + 16) + 1, 1, v21);
      }
      uint64_t v22 = (uint64_t)v30;
      unint64_t v24 = *(void *)(v21 + 16);
      unint64_t v23 = *(void *)(v21 + 24);
      if (v24 >= v23 >> 1) {
        unint64_t v21 = sub_1BFED9EFC(v23 > 1, v24 + 1, 1, v21);
      }
      *(void *)(v21 + 16) = v24 + 1;
      sub_1C02A49C4(v33, v21+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v24);
      v34[1] = v21;
LABEL_16:
      sub_1C0355848(v22);
      return sub_1C03558F8((uint64_t)v11, (unint64_t *)&qword_1EB874C30, (void (*)(uint64_t))type metadata accessor for FormatResource);
    }
    __break(1u);
  }
  else
  {
    uint64_t v25 = v32;
    sub_1C03557C8((uint64_t)v11, v32);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v25, 1, v16);
    if (result != 1)
    {
      unint64_t v26 = *v34;
      sub_1BFF67F78(v13, v12, v14, v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_1BFED9EFC(0, *(void *)(v26 + 16) + 1, 1, v26);
      }
      uint64_t v22 = (uint64_t)v30;
      unint64_t v28 = *(void *)(v26 + 16);
      unint64_t v27 = *(void *)(v26 + 24);
      if (v28 >= v27 >> 1) {
        unint64_t v26 = sub_1BFED9EFC(v27 > 1, v28 + 1, 1, v26);
      }
      *(void *)(v26 + 16) = v28 + 1;
      sub_1C02A49C4(v32, v26+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v28);
      unint64_t *v34 = v26;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0354D34(unint64_t *a1)
{
  return sub_1C0354924(a1);
}

uint64_t sub_1C0354D4C(uint64_t result)
{
  if (*(unsigned __int8 *)(v1 + 24) >= 3u)
  {
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v5 = *(void *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    char v7 = 10;
    sub_1BFF67F78(v5, v4, v3, 3);
    uint64_t result = sub_1C12ECBDC(v8, &v7);
    if (!v2)
    {
      uint64_t v6 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C0354E14(uint64_t a1)
{
  return sub_1C0354D4C(a1);
}

void FormatBindingFont.bind(binder:context:)()
{
}

void sub_1C0354E48()
{
}

uint64_t _s8NewsFeed17FormatBindingFontO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(uint64_t *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v7 = *(uint64_t *)a2;
  uint64_t v6 = *(uint64_t *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_20;
      }
      if (*(double *)&v3 != *(double *)&v7) {
        goto LABEL_33;
      }
      uint64_t v11 = *(void *)(a2 + 16) & 0xFF00;
      if ((*(void *)(a1 + 16) & 0xFF00) == 0xC00)
      {
        char v10 = 1;
        sub_1BFF05CCC(*(void *)a1, v2, v4, 1);
        sub_1BFF05CCC(v7, v6, v8, 1);
        if (v11 != 3072) {
          goto LABEL_22;
        }
        return v10 & 1;
      }
      if (v11 == 3072) {
        goto LABEL_33;
      }
      if (v4)
      {
        if (v8) {
          goto LABEL_28;
        }
LABEL_33:
        sub_1BFF05CCC(*(void *)a1, v2, v4, 1);
        uint64_t v14 = v7;
        uint64_t v15 = v6;
        uint64_t v16 = v8;
        char v17 = 1;
        goto LABEL_21;
      }
      if ((v8 & 1) != 0 || *(double *)&v2 != *(double *)&v6) {
        goto LABEL_33;
      }
LABEL_28:
      LOBYTE(v28) = BYTE1(*(void *)(a1 + 16));
      LOBYTE(v24) = BYTE1(v8);
      uint64_t v19 = FormatFontScalingStyle.rawValue.getter();
      uint64_t v21 = v20;
      if (v19 == FormatFontScalingStyle.rawValue.getter() && v21 == v22)
      {
        swift_bridgeObjectRelease_n();
        char v10 = 1;
        sub_1BFF05CCC(v3, v2, v4, 1);
        sub_1BFF05CCC(v7, v6, v8, 1);
      }
      else
      {
        char v23 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v10 = 1;
        sub_1BFF05CCC(v3, v2, v4, 1);
        sub_1BFF05CCC(v7, v6, v8, 1);
        if ((v23 & 1) == 0) {
LABEL_22:
        }
          char v10 = 0;
      }
      return v10 & 1;
    case 2:
      if (v9 != 2) {
        goto LABEL_20;
      }
      uint64_t v28 = *(void *)a1;
      uint64_t v29 = v2;
      __int16 v30 = v4;
      char v31 = BYTE2(v4);
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v27 = BYTE2(v8);
      __int16 v26 = v8;
      char v10 = _s8NewsFeed18FormatGroupBindingV4FontO2eeoiySbAE_AEtFZ_0((uint64_t)&v28, (uint64_t)&v24);
      sub_1BFF05CCC(v3, v2, v4, 2);
      sub_1BFF05CCC(v7, v6, v8, 2);
      return v10 & 1;
    case 3:
      if (v9 == 3)
      {
        BOOL v12 = v3 == v7 && v2 == v6;
        if (v12 || (sub_1C1520A9C() & 1) != 0)
        {
          sub_1BFF67F78(v7, v6, v8, 3);
          sub_1BFF67F78(v3, v2, v4, 3);
          sub_1BFF67F78(v7, v6, v8, 3);
          sub_1BFF67F78(v3, v2, v4, 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v13 = sub_1C00E3FD8(v4, v8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFF05CCC(v3, v2, v4, 3);
          sub_1BFF05CCC(v7, v6, v8, 3);
          sub_1BFF05CCC(v7, v6, v8, 3);
          sub_1BFF05CCC(v3, v2, v4, 3);
          if ((v13 & 1) == 0) {
            goto LABEL_22;
          }
          char v10 = 1;
          return v10 & 1;
        }
        sub_1BFF67F78(v7, v6, v8, 3);
        sub_1BFF67F78(v3, v2, v4, 3);
        sub_1BFF05CCC(v3, v2, v4, 3);
        uint64_t v14 = v7;
        uint64_t v15 = v6;
        uint64_t v16 = v8;
        char v17 = 3;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_20:
        sub_1BFF67F78(v7, v6, v8, v9);
        sub_1BFF05CCC(v3, v2, v4, v5);
        uint64_t v14 = v7;
        uint64_t v15 = v6;
        uint64_t v16 = v8;
        char v17 = v9;
      }
LABEL_21:
      sub_1BFF05CCC(v14, v15, v16, v17);
      goto LABEL_22;
    default:
      if (*(unsigned char *)(a2 + 24)) {
        goto LABEL_20;
      }
      uint64_t v28 = *(void *)a1;
      uint64_t v29 = v2;
      __int16 v30 = v4;
      char v31 = BYTE2(v4);
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      __int16 v26 = v8;
      char v27 = BYTE2(v8);
      char v10 = _s8NewsFeed16FormatTagBindingV4FontO2eeoiySbAE_AEtFZ_0((uint64_t)&v28, (uint64_t)&v24);
      sub_1BFF05CCC(v3, v2, v4, 0);
      sub_1BFF05CCC(v7, v6, v8, 0);
      return v10 & 1;
  }
}

void sub_1C03552EC()
{
  uint64_t v2 = v1;
  sub_1C03558A4(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v11[-1] - v4;
  if (*(unsigned __int8 *)(v0 + 24) >= 3u)
  {
    uint64_t v7 = *(void *)(v0 + 8);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v8 = *(void *)v0;
    v11[0] = *(void *)v0;
    v11[1] = v7;
    v11[2] = v6;
    char v12 = 10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C12ECBDC(v11, &v12);
    if (!v2)
    {
      sub_1C0EC63F8(v8, v7, v9, 1, (uint64_t)v5);
      sub_1C03558F8((uint64_t)v5, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1C0355434(uint64_t a1)
{
  unint64_t result = sub_1C035545C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C035545C()
{
  unint64_t result = qword_1EA19A0C0;
  if (!qword_1EA19A0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A0C0);
  }
  return result;
}

unint64_t sub_1C03554B0(void *a1)
{
  a1[1] = sub_1C03554E8();
  a1[2] = sub_1C035553C();
  unint64_t result = sub_1C0355590();
  a1[3] = result;
  return result;
}

unint64_t sub_1C03554E8()
{
  unint64_t result = qword_1EB85D270;
  if (!qword_1EB85D270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D270);
  }
  return result;
}

unint64_t sub_1C035553C()
{
  unint64_t result = qword_1EB862E00;
  if (!qword_1EB862E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E00);
  }
  return result;
}

unint64_t sub_1C0355590()
{
  unint64_t result = qword_1EA19A0C8;
  if (!qword_1EA19A0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A0C8);
  }
  return result;
}

uint64_t destroy for FormatColorBinding(uint64_t a1)
{
  return sub_1BFF05CCC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatColorBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1BFF67F78(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatColorBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1BFF67F78(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1BFF05CCC(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatColorBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1BFF05CCC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindingFont(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBindingFont(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C03557A8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1C03557B0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingFont()
{
  return &type metadata for FormatBindingFont;
}

uint64_t sub_1C03557C8(uint64_t a1, uint64_t a2)
{
  sub_1C03558A4(0, (unint64_t *)&qword_1EB874C30, (void (*)(uint64_t))type metadata accessor for FormatResource);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0355848(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatResource(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C03558A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C03558F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C03558A4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

NewsFeed::FormatPatternAnchor_optional __swiftcall FormatPatternAnchor.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t FormatPatternAnchor.rawValue.getter()
{
  uint64_t result = 7368564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6F74746F62;
      break;
    case 2:
      uint64_t result = 1952867692;
      break;
    case 3:
      uint64_t result = 0x7468676972;
      break;
    case 4:
      uint64_t result = 0x7466654C706F74;
      break;
    case 5:
      uint64_t result = 0x7468676952706F74;
      break;
    case 6:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 7:
      uint64_t result = 0x69526D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0355AA4(unsigned __int8 *a1, char *a2)
{
  return sub_1C1489860(*a1, *a2);
}

unint64_t sub_1C0355AB4()
{
  unint64_t result = qword_1EB86C830;
  if (!qword_1EB86C830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C830);
  }
  return result;
}

uint64_t sub_1C0355B08()
{
  return sub_1C044F4B8();
}

uint64_t sub_1C0355B14()
{
  return sub_1C044A4D4();
}

uint64_t sub_1C0355B1C()
{
  return sub_1C044F4B8();
}

NewsFeed::FormatPatternAnchor_optional sub_1C0355B24(Swift::String *a1)
{
  return FormatPatternAnchor.init(rawValue:)(*a1);
}

void sub_1C0355B30(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7368564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6D6F74746F62;
      goto LABEL_3;
    case 2:
      *a1 = 1952867692;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x7468676972;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x7466654C706F74;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x7468676952706F74;
      a1[1] = 0xE800000000000000;
      break;
    case 6:
      *a1 = 0x654C6D6F74746F62;
      a1[1] = 0xEA00000000007466;
      break;
    case 7:
      *a1 = 0x69526D6F74746F62;
      a1[1] = 0xEB00000000746867;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C0355C40(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0355C70();
  unint64_t result = sub_1C0355CC4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0355C70()
{
  unint64_t result = qword_1EA19A0D0;
  if (!qword_1EA19A0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A0D0);
  }
  return result;
}

unint64_t sub_1C0355CC4()
{
  unint64_t result = qword_1EB85D3D8;
  if (!qword_1EB85D3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D3D8);
  }
  return result;
}

unint64_t sub_1C0355D18(uint64_t a1)
{
  unint64_t result = sub_1C0355D40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0355D40()
{
  unint64_t result = qword_1EB86C838;
  if (!qword_1EB86C838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C838);
  }
  return result;
}

unint64_t sub_1C0355D94(void *a1)
{
  a1[1] = sub_1C0355DCC();
  a1[2] = sub_1C0355E20();
  unint64_t result = sub_1C0355AB4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0355DCC()
{
  unint64_t result = qword_1EB85D3E0;
  if (!qword_1EB85D3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D3E0);
  }
  return result;
}

unint64_t sub_1C0355E20()
{
  unint64_t result = qword_1EB85D3D0;
  if (!qword_1EB85D3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D3D0);
  }
  return result;
}

uint64_t sub_1C0355E74()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0355ED4(void *a1)
{
  return FormatPatternAnchor.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatPatternAnchor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0355FB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternAnchor()
{
  return &type metadata for FormatPatternAnchor;
}

uint64_t PuzzleHistoryInfo.asDictionary.getter()
{
  uint64_t v1 = v0;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1E4FBC868];
  sub_1BFF97B80(v1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t result = sub_1C151629C();
    if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
    {
      if (v10 > -9.22337204e18)
      {
        if (v10 < 9.22337204e18)
        {
          uint64_t v26 = MEMORY[0x1E4FBB550];
          *(void *)&long long v25 = (uint64_t)v10;
          sub_1BFF993A8(&v25, v24);
          uint64_t v11 = v27;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v11;
          sub_1BFFB4A24(v24, 0xD000000000000012, 0x80000001C160BD00, isUniquelyReferenced_nonNull_native);
          uint64_t v27 = v23;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          goto LABEL_7;
        }
LABEL_16:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
  sub_1BFE54774((uint64_t)v4, (uint64_t (*)(void))sub_1BFF97C40);
LABEL_7:
  uint64_t v13 = type metadata accessor for PuzzleHistoryInfo();
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  if (*(unsigned char *)(v14 + 8))
  {
    sub_1C035332C(0xD000000000000011, 0x80000001C160BCE0, &v25);
    sub_1BFE54774((uint64_t)&v25, (uint64_t (*)(void))sub_1BFEFE510);
  }
  else
  {
    uint64_t v15 = *(void *)v14;
    uint64_t v26 = MEMORY[0x1E4FBB550];
    *(void *)&long long v25 = v15;
    sub_1BFF993A8(&v25, v24);
    uint64_t v16 = v27;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = v16;
    sub_1BFFB4A24(v24, 0xD000000000000011, 0x80000001C160BCE0, v17);
    uint64_t v27 = v23;
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v1 + *(int *)(v13 + 24);
  if (*(unsigned char *)(v18 + 8))
  {
    sub_1C035332C(0x726F635374736562, 0xE900000000000065, &v25);
    sub_1BFE54774((uint64_t)&v25, (uint64_t (*)(void))sub_1BFEFE510);
    return v27;
  }
  else
  {
    uint64_t v20 = *(void *)v18;
    uint64_t v26 = MEMORY[0x1E4FBB550];
    *(void *)&long long v25 = v20;
    sub_1BFF993A8(&v25, v24);
    uint64_t v21 = v27;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = v21;
    sub_1BFFB4A24(v24, 0x726F635374736562, 0xE900000000000065, v22);
    uint64_t v19 = v23;
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t type metadata accessor for PuzzleHistoryInfo()
{
  uint64_t result = qword_1EA19A0D8;
  if (!qword_1EA19A0D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleHistoryInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1BFF97C40();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    *(void *)uint64_t v13 = *(void *)v14;
    _OWORD v13[8] = v14[8];
    uint64_t v15 = (char *)a1 + v12;
    uint64_t v16 = (char *)a2 + v12;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
  }
  return a1;
}

uint64_t destroy for PuzzleHistoryInfo(uint64_t a1)
{
  uint64_t v2 = sub_1C151631C();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

char *initializeWithCopy for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BFF97C40();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  uint64_t v13 = &a1[v10];
  uint64_t v14 = &a2[v10];
  *(void *)uint64_t v13 = *(void *)v14;
  _OWORD v13[8] = v14[8];
  return a1;
}

char *assignWithCopy for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  _OWORD v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  uint64_t v16 = *(int *)(a3 + 24);
  char v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)char v17 = v19;
  return a1;
}

char *initializeWithTake for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BFF97C40();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  uint64_t v13 = &a1[v10];
  uint64_t v14 = &a2[v10];
  *(void *)uint64_t v13 = *(void *)v14;
  _OWORD v13[8] = v14[8];
  return a1;
}

char *assignWithTake for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = &a1[v13];
  char v17 = &a2[v13];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleHistoryInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0356C80);
}

uint64_t sub_1C0356C80(uint64_t a1, uint64_t a2)
{
  sub_1BFF97C40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PuzzleHistoryInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0356D00);
}

uint64_t sub_1C0356D00(uint64_t a1, uint64_t a2)
{
  sub_1BFF97C40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_1C0356D70()
{
  sub_1BFF97C40();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *static FormatCodingAllCornersStrategy.defaultValue.getter()
{
  return &unk_1F1B81488;
}

BOOL static FormatCodingAllCornersStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return (sub_1BFE00F10(a1, (uint64_t)&unk_1F1B814B0) & 1) == 0;
}

unint64_t sub_1C0356E3C(uint64_t a1)
{
  unint64_t result = sub_1C0356E64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0356E64()
{
  unint64_t result = qword_1EA19A0E8;
  if (!qword_1EA19A0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A0E8);
  }
  return result;
}

uint64_t sub_1C0356EB8()
{
  return sub_1C0356FA0((unint64_t *)&qword_1EB879D40, (void (*)(void))sub_1C0083124);
}

void sub_1C0356F00()
{
  if (!qword_1EB879D38)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879D38);
    }
  }
}

uint64_t sub_1C0356F58()
{
  return sub_1C0356FA0((unint64_t *)&qword_1EB85C348, (void (*)(void))sub_1C0083178);
}

uint64_t sub_1C0356FA0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0356F00();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C035700C(void *a1@<X8>)
{
  *a1 = &unk_1F1B65C60;
}

BOOL sub_1C035701C(uint64_t *a1)
{
  return (sub_1BFE00F10(*a1, (uint64_t)&unk_1F1B64368) & 1) == 0;
}

ValueMetadata *type metadata accessor for FormatCodingAllCornersStrategy()
{
  return &type metadata for FormatCodingAllCornersStrategy;
}

NewsFeed::ArticleThumbnailViewStyle __swiftcall ArticleThumbnailViewStyle.init(parentBackgroundColor:)(NewsFeed::ArticleThumbnailViewStyle parentBackgroundColor)
{
  v1->parentBackgroundColor.super.isa = parentBackgroundColor.parentBackgroundColor.super.isa;
  return parentBackgroundColor;
}

id ArticleThumbnailViewStyle.parentBackgroundColor.getter()
{
  return *v0;
}

ValueMetadata *type metadata accessor for ArticleThumbnailViewStyle()
{
  return &type metadata for ArticleThumbnailViewStyle;
}

uint64_t dispatch thunk of ArticleThumbnailViewRendererType.render(_:on:with:traits:articleThumbnailViewStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1C035708C(uint64_t a1, void *a2, long long *a3, uint64_t a4, void **a5)
{
  uint64_t v7 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  int v11 = *(unsigned __int8 *)(a1 + 40);
  long long v12 = a3[1];
  long long v58 = *a3;
  long long v59 = v12;
  *(_OWORD *)double v60 = a3[2];
  *(_OWORD *)&v60[9] = *(long long *)((char *)a3 + 41);
  uint64_t v51 = *a5;
  uint64_t v13 = v10;
  if (v11 == 1)
  {
    sub_1C0358B90((uint64_t)v7, v6, v8, v9, v10, 1);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = objc_msgSend(v7, sel_identifier);
    uint64_t v15 = sub_1C151E62C();
    char v17 = v16;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    uint64_t v18 = (void *)v13;
  }
  else
  {
    id v19 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
    uint64_t v15 = sub_1C151E62C();
    char v17 = v20;

    uint64_t v18 = (void *)v13;
    sub_1BFEEA6F4((uint64_t)v7, v6, v8, v9, v13, 0);
  }
  uint64_t v49 = v6;
  sub_1BFEEA6F4((uint64_t)v7, v6, v8, v9, (uint64_t)v18, v11);
  v21.value._countAndFlagsBits = v15;
  v21.value._object = v17;
  ArticleThumbnailView.prepareForReuse(identifier:)(v21);
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setFrame_, v58, v59);
  char v22 = v51;
  if (v51)
  {
    __swift_project_boxed_opaque_existential_1(v53 + 7, v53[10]);
    *(void *)&v55[0] = v51;
    id v23 = v51;
    uint64_t v18 = (void *)v13;
    sub_1C1036018(a2, v60[16], (void **)v55, *(double *)&v60[8]);

    char v22 = v51;
  }
  if (v11)
  {
    uint64_t v24 = *(void *)(a4 + 16);
    if (v24)
    {
      uint64_t v25 = 0;
      while ((*(unsigned char *)(a4 + v25 + 32) & 1) == 0)
      {
        if (v24 == ++v25) {
          goto LABEL_11;
        }
      }
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      if (!UIAccessibilityIsReduceMotionEnabled())
      {
        v57[0] = v7;
        v57[1] = v6;
        v57[2] = v8;
        v57[3] = v9;
        v55[0] = v58;
        v55[1] = v59;
        v56[0] = *(_OWORD *)v60;
        *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)&v60[9];
        uint64_t v54 = v22;
        sub_1C0357618((uint64_t)v57, a2, v55, a4, &v54);
        sub_1BFE4597C();
        uint64_t v43 = (void *)sub_1C151F56C();
        uint64_t v44 = swift_allocObject();
        swift_weakInit();
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = v44;
        *(void *)(v45 + 24) = v18;
        *(void *)(v45 + 32) = a2;
        long long v46 = v59;
        *(_OWORD *)(v45 + 40) = v58;
        *(_OWORD *)(v45 + 56) = v46;
        *(_OWORD *)(v45 + 72) = *(_OWORD *)v60;
        *(_OWORD *)(v45 + 81) = *(_OWORD *)&v60[9];
        *(void *)(v45 + 104) = v22;
        id v47 = v22;
        id v48 = a2;
        swift_unknownObjectRetain();
        sub_1C15190DC();
        swift_release();
        swift_release();

        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    else
    {
LABEL_11:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    id v26 = objc_msgSend(v18, sel_identifier, v6, v8);
    uint64_t v27 = sub_1C151E62C();
    uint64_t v28 = (uint64_t)v18;
    uint64_t v30 = v29;

    id v31 = v22;
    swift_retain();
    uint64_t v32 = v22;
    id v33 = a2;
    swift_unknownObjectRetain();
    sub_1C12F134C(v27, v30, (uint64_t)v33, v32, v53, v33, v28, &v58);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    return swift_unknownObjectRelease_n();
  }
  id v35 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v52 = sub_1C151E62C();
  uint64_t v36 = (uint64_t)v18;
  uint64_t v38 = v37;

  sub_1C0358B90((uint64_t)v7, v49, v8, v9, v36, 0);
  id v39 = v22;
  swift_retain();
  id v40 = a2;
  id v41 = v22;
  id v42 = v40;
  sub_1C12F134C(v52, v38, (uint64_t)v42, v41, v53, v42, (uint64_t)v7, &v58);
  sub_1BFEEA6F4((uint64_t)v7, v49, v8, v9, v36, 0);
  swift_bridgeObjectRelease();

  swift_release();
  return sub_1BFEEA6F4((uint64_t)v7, v49, v8, v9, v36, 0);
}

uint64_t sub_1C0357618(uint64_t a1, void *a2, long long *a3, uint64_t a4, void **a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v39 = *(void *)(a1 + 24);
  long long v11 = a3[1];
  long long v45 = *a3;
  long long v46 = v11;
  v47[0] = a3[2];
  *(_OWORD *)((char *)v47 + 9) = *(long long *)((char *)a3 + 41);
  id v40 = *a5;
  sub_1BFC66384(v5 + 152, (uint64_t)v42);
  uint64_t v12 = v43;
  uint64_t v13 = v44;
  uint64_t v38 = v8;
  id v14 = objc_msgSend(v8, sel_identifier, __swift_project_boxed_opaque_existential_1(v42, v43));
  uint64_t v15 = sub_1C151E62C();
  uint64_t v17 = v16;

  uint64_t v18 = type metadata accessor for LayeredMediaLoader();
  id v19 = (void *)swift_allocObject();
  uint64_t v20 = type metadata accessor for LayeredMediaParser();
  Swift::String_optional v21 = (void *)swift_allocObject();
  v21[2] = v15;
  v21[3] = v17;
  v21[4] = v10;
  v21[5] = v39;
  v19[5] = v20;
  v19[6] = &protocol witness table for LayeredMediaParser;
  void v19[2] = v21;
  v41[3] = v18;
  v41[4] = &protocol witness table for LayeredMediaLoader;
  v41[0] = v19;
  uint64_t v22 = *(void *)(a4 + 16);
  if (v22)
  {
    id v23 = (unsigned char *)(a4 + 32);
    uint64_t v24 = &unk_1F1B814D8;
    uint64_t v25 = v38;
    id v26 = a2;
    while (*v23 == 1)
    {
      ++v23;
      if (!--v22)
      {
        uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
        break;
      }
    }
  }
  else
  {
    uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v25 = v38;
    id v26 = a2;
  }
  uint64_t v27 = *(void (**)(void *, void *, uint64_t, uint64_t))(v13 + 8);
  swift_bridgeObjectRetain();
  v27(v41, v24, v12, v13);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  uint64_t v28 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  MEMORY[0x1F4188790](v28);
  type metadata accessor for LayeredMediaView(0);
  sub_1C151932C();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 32) = v9;
  long long v30 = v46;
  *(_OWORD *)(v29 + 72) = v45;
  *(void *)(v29 + 16) = v26;
  *(void *)(v29 + 24) = v25;
  *(void *)(v29 + 40) = v10;
  *(void *)(v29 + 48) = v39;
  *(void *)(v29 + 56) = v40;
  *(void *)(v29 + 64) = v6;
  *(_OWORD *)(v29 + 88) = v30;
  *(_OWORD *)(v29 + 104) = v47[0];
  *(_OWORD *)(v29 + 113) = *(_OWORD *)((char *)v47 + 9);
  id v31 = v40;
  swift_retain();
  id v32 = v26;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v33 = (void *)sub_1C1518E7C();
  sub_1C1518FEC();
  swift_release();
  swift_release();

  uint64_t v34 = (void *)sub_1C1518E7C();
  uint64_t v35 = sub_1C151903C();
  swift_release();
  swift_release();

  return v35;
}

uint64_t sub_1C0357988(uint64_t a1, uint64_t a2, void *a3, void *a4, _OWORD *a5, void *a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    long long v11 = (void *)result;
    id v12 = objc_msgSend(a3, sel_identifier);
    uint64_t v13 = sub_1C151E62C();
    uint64_t v15 = v14;

    id v16 = a6;
    swift_retain();
    id v17 = a4;
    swift_unknownObjectRetain();
    sub_1C12F134C(v13, v15, (uint64_t)v17, a6, v11, v17, (uint64_t)a3, a5);
    swift_bridgeObjectRelease();

    swift_release_n();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C0357AA0(uint64_t *a1, void *a2, void *a3, void *a4, uint64_t a5, _OWORD *a6)
{
  id v31 = a6;
  sub_1BFE45DC0();
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (_OWORD **)((char *)&v31 - v17);
  if (a2)
  {
    __swift_project_boxed_opaque_existential_1(a3 + 7, a3[10]);
    id v32 = v15;
    *(void *)&long long v33 = a2;
    id v19 = a2;
    uint64_t v15 = v32;
    sub_1C1036250(a1, (void **)&v33);
  }
  id v32 = a1;
  id v20 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v20, sel_scale);
  uint64_t v22 = v21;

  id v23 = objc_msgSend(a4, sel_traitCollection);
  uint64_t v24 = (char *)v18 + *(int *)(v13 + 24);
  uint64_t v25 = sub_1C151A01C();
  id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v24, 1, 1, v25);
  *uint64_t v18 = v22;
  v18[1] = v23;
  sub_1C0358E1C((uint64_t)v18, (uint64_t)v15);
  v26(v12, 1, 1, v25);
  unint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v27 = (void *)swift_unknownObjectRetain();
  id v28 = sub_1C1192F10(v27, v31, v15, (uint64_t)v12, (uint64_t)&v33);
  if (v28)
  {
    id v29 = v28;
    *((void *)&v34 + 1) = type metadata accessor for ThumbnailProcessorRequest();
    unint64_t v35 = sub_1C0358F4C();
    *(void *)&long long v33 = v29;
  }
  else
  {
    unint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_1BFE459BC((uint64_t)&v33, a3 + 12, (uint64_t)v32, 0, 0);
  sub_1C0358E80((uint64_t)v18);
  return sub_1C0358EDC((uint64_t)&v33, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0, MEMORY[0x1E4FACD60]);
}

uint64_t sub_1C0357D84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1BFC81530(0, &qword_1EB895E78, (uint64_t)&type metadata for LayeredMediaLayer, MEMORY[0x1E4FBB320]);
  sub_1C151932C();
  swift_retain();
  uint64_t v4 = (void *)sub_1C1518E7C();
  sub_1BFC81530(0, &qword_1EB85DF48, (uint64_t)&type metadata for LayeredMediaLayerRenderable, v3);
  sub_1C1518FFC();
  swift_release();
  swift_release();

  uint64_t v5 = (void *)sub_1C151806C();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v7;
  type metadata accessor for LayeredMediaView(0);
  swift_retain();
  uint64_t v8 = sub_1C1518FFC();
  swift_release();

  swift_release();
  return v8;
}

uint64_t sub_1C0357F00()
{
  return sub_1C151911C();
}

uint64_t sub_1C0357FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, int a12)
{
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  swift_retain();
  id v19 = objc_msgSend(a6, sel_identifier);
  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  id v23 = a10;
  swift_retain();
  id v24 = a5;
  swift_retain();
  swift_retain();
  sub_1C12F1584(v20, v22, a9, (uint64_t)v24, a10, a11, a12, v24, (uint64_t)sub_1C005A48C, v18, a3, a4);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release_n();
  return swift_release();
}

void sub_1C03580F8(id a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2)
  {
    __swift_project_boxed_opaque_existential_1((void *)(a3 + 56), *(void *)(a3 + 80));
    v35[0] = a2;
    id v15 = a2;
    sub_1C1036278(a1, v35);
  }
  objc_msgSend(a1, sel_setClipsToBounds_, 1);
  sub_1C151F72C();
  objc_msgSend(a1, sel_setFrame_);
  uint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_mainScreen);
  objc_msgSend(v17, sel_nativeBounds);
  id v19 = v18;
  uint64_t v21 = v20;

  objc_msgSend(a5, sel_bounds);
  id v23 = v22;
  uint64_t v25 = v24;
  id v26 = objc_msgSend(v16, sel_mainScreen);
  objc_msgSend(v26, sel_scale);
  id v28 = v27;

  v35[0] = v19;
  v35[1] = v21;
  v35[2] = v23;
  v35[3] = v25;
  v35[4] = v28;
  id v29 = objc_msgSend(a1, sel_setAlpha_, 0.0);
  MEMORY[0x1F4188790](v29);
  sub_1C151932C();
  long long v30 = (void *)swift_allocObject();
  v30[2] = a1;
  v30[3] = a6;
  v30[4] = a7;
  id v31 = a1;
  swift_retain();
  id v32 = (void *)sub_1C1518E7C();
  type metadata accessor for ArticleThumbnailViewRenderer();
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = a8;
  *(void *)(v33 + 24) = a9;
  swift_retain();
  long long v34 = (void *)sub_1C1518E7C();
  sub_1C151903C();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1C03583C4(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151A43C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1C00FA474(a1 + 16, (uint64_t)&v17);
  if (!v18)
  {
    sub_1C0358EDC((uint64_t)&v17, &qword_1EB8715B8, &qword_1EB8715B0, MEMORY[0x1E4FACAA0]);
    goto LABEL_7;
  }
  sub_1BFC773DC(&v17, (uint64_t)&v19);
  uint64_t v22 = v6;
  __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
  sub_1C151A41C();
  char v10 = sub_1C151B9FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  if (v10)
  {
LABEL_7:
    long long v15 = *(_OWORD *)(a3 + 16);
    long long v19 = *(_OWORD *)a3;
    long long v20 = v15;
    uint64_t v21 = *(void *)(a3 + 32);
    return sub_1C009DEDC(a2, &v19);
  }
  if (qword_1EB85EF70 != -1) {
    swift_once();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 40) = v12;
  *(void *)(v11 + 56) = *(void *)(a3 + 32);
  type metadata accessor for LayeredMediaViewRenderer();
  uint64_t v13 = a2;
  uint64_t v14 = sub_1C151931C();
  swift_release();
  return v14;
}

id sub_1C035864C(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v7 = sub_1C151A43C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1C00FA474(a2 + 16, (uint64_t)&v21);
  if (v22)
  {
    sub_1BFC773DC(&v21, (uint64_t)aBlock);
    uint64_t v23 = v7;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v18);
    sub_1C151A42C();
    char v11 = sub_1C151B9FC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    if ((v11 & 1) == 0) {
      return objc_msgSend(a3, sel_setAlpha_, 1.0);
    }
  }
  else
  {
    sub_1C0358EDC((uint64_t)&v21, &qword_1EB8715B8, &qword_1EB8715B0, MEMORY[0x1E4FACAA0]);
  }
  uint64_t v13 = self;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  long long v19 = sub_1C00FA5C4;
  uint64_t v20 = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  uint64_t v18 = &block_descriptor_19;
  long long v15 = _Block_copy(aBlock);
  id v16 = a3;
  swift_release();
  objc_msgSend(v13, sel_animateWithDuration_animations_, v15, 0.15);
  _Block_release(v15);
  return (id)a4();
}

uint64_t sub_1C03588D8()
{
  if (qword_1EB85E5D8 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C270;
  sub_1C151F36C();
  sub_1BFEE7E48(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0358A3C()
{
  sub_1C0358EDC(v0 + 16, &qword_1EB8715B8, &qword_1EB8715B0, MEMORY[0x1E4FACAA0]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0358ABC(uint64_t a1, void *a2, long long *a3, uint64_t a4, void **a5)
{
  return sub_1C035708C(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0358AE0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0358B18()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C0358B68(uint64_t a1)
{
  return sub_1C0357988(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), (_OWORD *)(v1 + 40), *(void **)(v1 + 104));
}

uint64_t sub_1C0358B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = vars8;
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1C0358BD8()
{
  return sub_1C0357D84(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0358BF4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0358C4C()
{
  return sub_1C0357F00();
}

uint64_t sub_1C0358C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0357FA0(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void **)(v4 + 56), *(void **)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80));
}

uint64_t sub_1C0358CB4()
{
  return sub_1C03583C4(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C0358CD4()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1C0358D14(uint64_t a1, uint64_t a2)
{
  return sub_1C035864C(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
}

uint64_t sub_1C0358D34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0358D6C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0358DA4()
{
  return swift_deallocObject();
}

uint64_t sub_1C0358DDC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0358E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageRequestOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0358E80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageRequestOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0358EDC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFEE7E48(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1C0358F4C()
{
  unint64_t result = qword_1EB8907E8;
  if (!qword_1EB8907E8)
  {
    type metadata accessor for ThumbnailProcessorRequest();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8907E8);
  }
  return result;
}

void sub_1C0358FDC(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v15 = *a4;
  uint64_t v16 = a4[1];
  id v17 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  if (*(void *)(a3 + 16))
  {
    unint64_t v18 = sub_1C1051F60(3u);
    if (v19)
    {
      uint64_t v20 = *(void *)(a3 + 56) + 16 * v18;
      if (*(unsigned char *)(v20 + 8) == 3)
      {
        id v21 = *(id *)v20;
        objc_msgSend(a2, sel_frame);
        sub_1C151F8FC();
        objc_msgSend(v21, sel_bounds);
        sub_1C151F8FC();
        id v22 = objc_msgSend(v21, sel_layer);
        uint64_t v33 = a7;
        id v23 = objc_msgSend(a2, sel_layer);
        objc_msgSend(v23, sel_cornerRadius);
        double v25 = v24;

        objc_msgSend(v22, sel_setCornerRadius_, v25);
        id v26 = objc_msgSend(v21, sel_layer);
        id v27 = objc_msgSend(a2, sel_layer);
        id v32 = a6;
        id v28 = objc_msgSend(v27, sel_maskedCorners);

        objc_msgSend(v26, sel_setMaskedCorners_, v28);
        id v29 = objc_msgSend(v21, sel_layer);
        id v30 = objc_msgSend(a2, sel_layer);
        id v31 = objc_msgSend(v30, sel_cornerCurve);

        objc_msgSend(v29, sel_setCornerCurve_, v31);
        sub_1C151F94C();
        __swift_project_boxed_opaque_existential_1((void *)(v9 + 16), *(void *)(v9 + 40));
        uint64_t v36 = v15;
        swift_retain();
        sub_1BFE69538(a1, v21, &v36, v16, a3, a5, v32, v33, a8);
        swift_release();
      }
    }
  }
}

void sub_1C035926C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v38 = a8;
  uint64_t v39 = a1;
  uint64_t v40 = a5;
  uint64_t v15 = type metadata accessor for FormatViewBackground.Mica(0);
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v37 + 64);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  if (*(void *)(a3 + 16))
  {
    unint64_t v18 = sub_1C1051F60(4u);
    if (v19)
    {
      uint64_t v20 = *(void *)(a3 + 56) + 16 * v18;
      if (*(unsigned char *)(v20 + 8) == 4)
      {
        id v21 = *(id *)v20;
        objc_msgSend(a2, sel_frame);
        sub_1C151F8FC();
        uint64_t v36 = a7;
        id v22 = objc_msgSend(v21, sel_layer);
        id v23 = objc_msgSend(a2, sel_layer);
        objc_msgSend(v23, sel_cornerRadius);
        double v25 = v24;

        objc_msgSend(v22, sel_setCornerRadius_, v25);
        id v26 = objc_msgSend(v21, sel_layer);
        id v27 = objc_msgSend(a2, sel_layer);
        unint64_t v35 = a6;
        id v28 = objc_msgSend(v27, sel_maskedCorners);

        objc_msgSend(v26, sel_setMaskedCorners_, v28);
        id v29 = objc_msgSend(v21, sel_layer);
        id v30 = objc_msgSend(a2, sel_layer);
        id v31 = objc_msgSend(v30, sel_cornerCurve);

        objc_msgSend(v29, sel_setCornerCurve_, v31);
        sub_1C151F94C();
        __swift_project_boxed_opaque_existential_1((void *)(v9 + 56), *(void *)(v9 + 80));
        uint64_t v41 = *a4;
        sub_1BFF46F6C((uint64_t)a4, (uint64_t)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FormatViewBackground.Mica);
        unint64_t v32 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
        uint64_t v33 = swift_allocObject();
        sub_1C03595DC((uint64_t)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, type metadata accessor for FormatViewBackground.Mica);
        swift_retain();
        sub_1C0C48698(v39, (uint64_t)v21, &v41, v40, v35, (uint64_t)sub_1C03598A0, v33, v36, v38);

        swift_release();
        swift_release();
      }
    }
  }
}

uint64_t sub_1C03595DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0359644(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 144);
  char v10 = *(unsigned char *)(a1 + 152);
  sub_1C03596EC(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  sub_1C03596EC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1C03596EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BFDB3960(a7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1C035976C()
{
  uint64_t v1 = (int *)(type metadata accessor for FormatViewBackground.Mica(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = sub_1C151A8EC();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_1C03598A0()
{
  return sub_1C151CAEC();
}

double GeoLocation.latitude.getter()
{
  return *(double *)v0;
}

double GeoLocation.longitude.getter()
{
  return *(double *)(v0 + 8);
}

NewsFeed::GeoLocation __swiftcall GeoLocation.init(latitude:longitude:)(Swift::Double latitude, Swift::Double longitude)
{
  Swift::Double *v2 = latitude;
  v2[1] = longitude;
  result.longitude = longitude;
  result.latitude = latitude;
  return result;
}

BOOL static GeoLocation.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GeoLocation.hash(into:)()
{
  return sub_1C1520DFC();
}

uint64_t sub_1C0359998()
{
  if (*v0) {
    return 0x64757469676E6F6CLL;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_1C03599D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C035A384(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0359A00(uint64_t a1)
{
  unint64_t v2 = sub_1C0359BF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0359A3C(uint64_t a1)
{
  unint64_t v2 = sub_1C0359BF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GeoLocation.encode(to:)(void *a1)
{
  sub_1C0359F40(0, &qword_1EA19A0F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0359BF4();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C15207EC();
  if (!v1)
  {
    v9[14] = 1;
    sub_1C15207EC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0359BF4()
{
  unint64_t result = qword_1EB865798;
  if (!qword_1EB865798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865798);
  }
  return result;
}

uint64_t GeoLocation.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t GeoLocation.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0359F40(0, &qword_1EB86B648, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0359BF4();
  sub_1C1520EBC();
  if (!v2)
  {
    char v17 = 0;
    sub_1C15206BC();
    uint64_t v11 = v10;
    char v16 = 1;
    sub_1C15206BC();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0359E64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return GeoLocation.init(from:)(a1, a2);
}

uint64_t sub_1C0359E7C(void *a1)
{
  return GeoLocation.encode(to:)(a1);
}

uint64_t sub_1C0359E98()
{
  return sub_1C1520DFC();
}

uint64_t sub_1C0359EE0()
{
  return sub_1C1520E0C();
}

void sub_1C0359F40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0359BF4();
    unint64_t v7 = a3(a1, &type metadata for GeoLocation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

NewsFeed::GeoLocation __swiftcall GeoLocation.init(from:)(CLLocation from)
{
  Class isa = from.super.isa;
  uint64_t v3 = v1;
  [(objc_class *)from.super.isa coordinate];
  uint64_t v5 = v4;
  [(objc_class *)isa coordinate];
  uint64_t v7 = v6;

  *uint64_t v3 = v5;
  v3[1] = v7;
  result.longitude = v9;
  result.latitude = v8;
  return result;
}

uint64_t GeoLocation.identifier.getter()
{
  return 0;
}

unint64_t sub_1C035A08C()
{
  unint64_t result = qword_1EA19A0F8;
  if (!qword_1EA19A0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A0F8);
  }
  return result;
}

uint64_t sub_1C035A0E0()
{
  return 0;
}

ValueMetadata *type metadata accessor for GeoLocation()
{
  return &type metadata for GeoLocation;
}

unsigned char *storeEnumTagSinglePayload for GeoLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C035A244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoLocation.CodingKeys()
{
  return &type metadata for GeoLocation.CodingKeys;
}

unint64_t sub_1C035A280()
{
  unint64_t result = qword_1EA19A100;
  if (!qword_1EA19A100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A100);
  }
  return result;
}

unint64_t sub_1C035A2D8()
{
  unint64_t result = qword_1EB8657A8;
  if (!qword_1EB8657A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657A8);
  }
  return result;
}

unint64_t sub_1C035A330()
{
  unint64_t result = qword_1EB8657A0;
  if (!qword_1EB8657A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657A0);
  }
  return result;
}

uint64_t sub_1C035A384(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C035A484()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C035A550(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v2;
  uint64_t v6 = type metadata accessor for FormatPluginData();
  MEMORY[0x1F4188790](v6 - 8);
  double v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)((char *)v2 + v5[15]) + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData;
  swift_beginAccess();
  sub_1C035B6BC(v9, (uint64_t)v8);
  uint64_t v10 = (*(uint64_t (**)(char *, void))(v5[11] + 40))(v8, v5[10]);
  sub_1C035B720((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  uint64_t v14 = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  long long v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2B8];
  sub_1C035B104(0, (unint64_t *)&qword_1EB8641B0, MEMORY[0x1E4FAC2B8]);
  sub_1C035B678(&qword_1EB8641A8, (unint64_t *)&qword_1EB8641B0, v12);
  swift_retain();
  sub_1C151ACDC();
  swift_release();
  return swift_release();
}

uint64_t sub_1C035A760(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 120)) + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData;
  swift_beginAccess();
  sub_1C035B598(a1, v6);
  swift_endAccess();
  uint64_t v7 = *(void *)(v5 + 88);
  uint64_t v8 = *(void *)(v5 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v8, v7);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v8;
  v10[3] = v7;
  v10[4] = v9;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2B8];
  sub_1C035B104(0, (unint64_t *)&qword_1EB8641B0, MEMORY[0x1E4FAC2B8]);
  sub_1C035B678(&qword_1EB8641A8, (unint64_t *)&qword_1EB8641B0, v11);
  swift_retain();
  sub_1C151ACDC();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C035A954()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = MEMORY[0x1C18C9C60](result + 16);
    if (v1)
    {
      uint64_t v2 = v1;
      type metadata accessor for FormatInteractor();
      swift_retain();
      sub_1C0EA6550(v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C035AA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151AC6C();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4FAC288], v4, v6);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_retain();
  sub_1C151ACEC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1C035AB58()
{
  uint64_t v1 = v0;
  sub_1C035B104(0, &qword_1EB864568, MEMORY[0x1E4FAD830]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  __n128 v6 = (char *)v22 - v5;
  sub_1C035B0AC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatAutoscrollPivotPoint();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v0 + *(void *)(*(void *)v0 + 120)) + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData;
  swift_beginAccess();
  uint64_t result = type metadata accessor for FormatPluginData();
  if ((*(unsigned char *)(v14 + *(int *)(result + 48)) & 1) == 0)
  {
    v22[0] = (uint64_t)v13;
    v22[1] = (uint64_t)__swift_project_boxed_opaque_existential_1((void *)(v1 + *(void *)(*(void *)v1 + 136)), *(void *)(v1 + *(void *)(*(void *)v1 + 136) + 24));
    uint64_t v23 = v3;
    sub_1C151ACBC();
    uint64_t v24 = v25;
    char v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2D8];
    sub_1C035B104(0, (unint64_t *)&qword_1EB8641D0, MEMORY[0x1E4FAC2D8]);
    sub_1C035B678(&qword_1EB8641C8, (unint64_t *)&qword_1EB8641D0, v16);
    sub_1C151B3FC();
    swift_release();
    sub_1C0C90E20((uint64_t)v6, v9);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      char v17 = (uint64_t (*)(void))sub_1C035B0AC;
      uint64_t v18 = (uint64_t)v9;
    }
    else
    {
      uint64_t v19 = v22[0];
      sub_1C035B1F8((uint64_t)v9, v22[0]);
      uint64_t v20 = MEMORY[0x1C18C9C60](v1 + 16);
      if (v20)
      {
        id v21 = (void *)MEMORY[0x1C18C9C60](v20 + 16);
        if (v21)
        {
          sub_1C035B25C(v19, v21);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      char v17 = (uint64_t (*)(void))type metadata accessor for FormatAutoscrollPivotPoint;
      uint64_t v18 = v19;
    }
    return sub_1C035B720(v18, v17);
  }
  return result;
}

uint64_t *sub_1C035AEC4()
{
  uint64_t v1 = *v0;
  sub_1C019B9B4((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 136));
  return v0;
}

uint64_t sub_1C035AFA0()
{
  sub_1C035AEC4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatInteractor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C035B010(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1C035B064(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C035B0AC()
{
  if (!qword_1EB86D1C8)
  {
    type metadata accessor for FormatAutoscrollPivotPoint();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86D1C8);
    }
  }
}

void sub_1C035B104(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatSectionDescriptor();
    v8[1] = type metadata accessor for FormatModel();
    v8[2] = sub_1C035B064((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    uint64_t v8[3] = sub_1C035B064((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C035B1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatAutoscrollPivotPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C035B25C(uint64_t a1, void *a2)
{
  sub_1C151B8DC();
  uint64_t v3 = (void *)sub_1C151B41C();
  swift_release();
  uint64_t v4 = (void *)sub_1C151670C();
  id v5 = objc_msgSend(v3, sel_layoutAttributesForItemAtIndexPath_, v4);

  if (!v5) {
    return;
  }
  objc_msgSend(v5, sel_frame);
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;

  sub_1C151B8DC();
  uint64_t v14 = (void *)sub_1C151B41C();
  swift_release();
  id v15 = objc_msgSend(v14, sel_collectionViewLayout);

  objc_msgSend(v15, sel_collectionViewContentSize);
  double v48 = v16;

  sub_1C151B8DC();
  char v17 = (void *)sub_1C151B41C();
  swift_release();
  objc_msgSend(v17, sel_layoutMargins);
  double v46 = v19;
  double v47 = v18;

  CGFloat v20 = v7;
  v52.origin.x = v7;
  CGFloat v21 = v9;
  v52.origin.y = v9;
  CGFloat v22 = v11;
  v52.size.width = v11;
  CGFloat rect = v13;
  v52.size.height = v13;
  double MaxX = CGRectGetMaxX(v52);
  id v24 = objc_msgSend(a2, sel_view);
  if (!v24)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v25 = v24;
  objc_msgSend(v24, sel_frame);
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;
  CGFloat v33 = v32;

  v53.origin.x = v27;
  v53.origin.y = v29;
  v53.size.width = v31;
  v53.size.height = v33;
  if (v48 >= MaxX + CGRectGetWidth(v53) * 0.5)
  {
    v56.origin.x = v20;
    v56.origin.y = v21;
    v56.size.width = v22;
    v56.size.height = rect;
    double v45 = CGRectGetMinX(v56) - v47;
    goto LABEL_8;
  }
  v54.origin.x = v20;
  v54.origin.y = v21;
  v54.size.width = v22;
  v54.size.height = rect;
  double v34 = CGRectGetMaxX(v54);
  id v35 = objc_msgSend(a2, sel_view);
  if (!v35)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v36 = v35;
  objc_msgSend(v35, sel_frame);
  CGFloat v38 = v37;
  CGFloat v40 = v39;
  CGFloat v42 = v41;
  CGFloat v44 = v43;

  v55.origin.x = v38;
  v55.origin.y = v40;
  v55.size.width = v42;
  v55.size.height = v44;
  double v45 = v46 + v34 - CGRectGetWidth(v55);
LABEL_8:
  sub_1C151B8DC();
  recta = (void *)sub_1C151B41C();
  swift_release();
  objc_msgSend(recta, sel_setContentOffset_, v45, 0.0);
}

uint64_t sub_1C035B560()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C035B598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C035B5FC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C035B634()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C035B66C()
{
  return sub_1C035A954();
}

uint64_t sub_1C035B678(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C035B104(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C035B6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C035B720(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C035B788@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4 = (uint64_t *)*v2;
  uint64_t v11 = 10;
  unint64_t v12 = 0xE100000000000000;
  sub_1C035BD34(a1, (uint64_t)v8);
  uint64_t v5 = v9;
  if (v9)
  {
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    sub_1C035BDF0((uint64_t)v8);
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  a2[3] = v4;
  a2[4] = (uint64_t *)&off_1F1B9CEF0;
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_1C035B8D8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  CGFloat v7 = (uint64_t *)*v5;
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8 || a1 == a3 && a2 == a4 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_beginAccess();
    sub_1C151E80C();
    swift_endAccess();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_beginAccess();
    sub_1C151E80C();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  a5[3] = v7;
  a5[4] = (uint64_t *)&off_1F1B9CEF0;
  *a5 = v5;
  return swift_retain();
}

uint64_t sub_1C035BA48()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharingPlainTextBuilder()
{
  return self;
}

uint64_t sub_1C035BAA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0xE000000000000000;
  swift_beginAccess();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0xE000000000000000;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C035BB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1C035BBA0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  sub_1C151E80C();
  sub_1C151E80C();
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1C035BC5C@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1C035B788(a1, a2);
}

uint64_t sub_1C035BC80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  return sub_1C035B8D8(a1, a2, a3, a4, a5);
}

uint64_t sub_1C035BCA4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1C035BD34(uint64_t a1, uint64_t a2)
{
  sub_1C035BD98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C035BD98()
{
  if (!qword_1EA197408)
  {
    sub_1C01762F0();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197408);
    }
  }
}

uint64_t sub_1C035BDF0(uint64_t a1)
{
  sub_1C035BD98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C035BE54(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 24))
  {
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v5 = *(void *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    char v7 = 6;
    sub_1BFE86E48(v5, v4, v3, 0);
    uint64_t result = sub_1C12ECBDC(v8, &v7);
    if (!v2)
    {
      uint64_t v6 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C035BF18(uint64_t a1)
{
  return sub_1C035BE54(a1);
}

void FormatURLBinding.bind(binder:context:)()
{
}

void sub_1C035BF4C()
{
}

uint64_t _s8NewsFeed16FormatURLBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_15;
      }
      uint64_t v10 = 1;
      sub_1BFD7418C(*(void *)a1, v3, v4, 1);
      sub_1BFD7418C(v6, v7, v8, 1);
      return v10;
    case 2:
      if (v9 != 2) {
        goto LABEL_15;
      }
      sub_1BFD7418C(*(void *)a1, v3, v4, 2);
      sub_1BFD7418C(v6, v7, v8, 2);
      return v6 == v2;
    case 3:
      if (v9 != 3) {
        goto LABEL_15;
      }
      sub_1BFD7418C(*(void *)a1, v3, v4, 3);
      sub_1BFD7418C(v6, v7, v8, 3);
      return ((v6 ^ v2) & 1) == 0;
    case 4:
      if (v9 != 4) {
        goto LABEL_15;
      }
      sub_1BFD7418C(*(void *)a1, v3, v4, 4);
      sub_1BFD7418C(v6, v7, v8, 4);
      if ((v2 & 0x80) != 0)
      {
        if ((char)v6 & 0x80000000) == 0 || ((v6 ^ v2)) {
          return 0;
        }
      }
      else if ((char)v6 < 0 || v6 != v2)
      {
        return 0;
      }
      return 1;
    default:
      if (*(unsigned char *)(a2 + 24))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_15:
        sub_1BFE86E48(v6, v7, v8, v9);
        sub_1BFD7418C(v2, v3, v4, v5);
        uint64_t v11 = v6;
        uint64_t v12 = v7;
        uint64_t v13 = v8;
        char v14 = v9;
        goto LABEL_16;
      }
      BOOL v16 = v2 == v6 && v3 == v7;
      if (!v16 && (sub_1C1520A9C() & 1) == 0)
      {
        sub_1BFE86E48(v2, v3, v4, 0);
        sub_1BFE86E48(v6, v7, v8, 0);
        sub_1BFD7418C(v2, v3, v4, 0);
        uint64_t v11 = v6;
        uint64_t v12 = v7;
        uint64_t v13 = v8;
        char v14 = 0;
LABEL_16:
        sub_1BFD7418C(v11, v12, v13, v14);
        return 0;
      }
      sub_1BFE86E48(v6, v7, v8, 0);
      sub_1BFE86E48(v2, v3, v4, 0);
      sub_1BFE86E48(v2, v3, v4, 0);
      sub_1BFE86E48(v6, v7, v8, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v17 = sub_1C00E3FD8(v4, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD7418C(v2, v3, v4, 0);
      sub_1BFD7418C(v6, v7, v8, 0);
      sub_1BFD7418C(v6, v7, v8, 0);
      sub_1BFD7418C(v2, v3, v4, 0);
      return (v17 & 1) != 0;
  }
}

void sub_1C035C2B0()
{
  uint64_t v2 = v1;
  sub_1C00AB000();
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(unsigned char *)(v0 + 24))
  {
    uint64_t v7 = *(void *)(v0 + 8);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v8 = *(void *)v0;
    v11[0] = *(void *)v0;
    v11[1] = v7;
    v11[2] = v6;
    char v12 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C12ECBDC(v11, &v12);
    if (!v2)
    {
      sub_1C0EC63F8(v8, v7, v9, 1, (uint64_t)v5);
      sub_1C0257E00((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1C035C3C0(uint64_t a1)
{
  unint64_t result = sub_1C035C3E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C035C3E8()
{
  unint64_t result = qword_1EA19A108;
  if (!qword_1EA19A108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A108);
  }
  return result;
}

unint64_t sub_1C035C43C(void *a1)
{
  a1[1] = sub_1BFDBBF7C();
  a1[2] = sub_1BFD74370();
  unint64_t result = sub_1C035C474();
  a1[3] = result;
  return result;
}

unint64_t sub_1C035C474()
{
  unint64_t result = qword_1EA19A110;
  if (!qword_1EA19A110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A110);
  }
  return result;
}

uint64_t destroy for FormatURLBinding(uint64_t a1)
{
  return sub_1BFD7418C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatURLBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1BFE86E48(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatURLBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1BFE86E48(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1BFD7418C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatURLBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1BFD7418C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatURLBinding()
{
  return &type metadata for FormatURLBinding;
}

id sub_1C035C60C(void *a1, double a2, double a3, double a4, double a5)
{
  double v8 = a4 - a2;
  if (v8 >= 0.0) {
    double v9 = 0.0;
  }
  else {
    double v9 = 3.14159265;
  }
  long double v10 = 3.14159265 - (v9 + atan((a5 - a3) / v8));
  __double2 v11 = __sincos_stret(v10 + 0.785398163);
  __double2 v12 = __sincos_stret(v10 + -0.785398163);
  objc_msgSend(a1, sel_moveToPoint_, a4, a5);
  objc_msgSend(a1, sel_addLineToPoint_, v11.__cosval * 8.0 + a4, a5 - v11.__sinval * 8.0);
  objc_msgSend(a1, sel_moveToPoint_, a4, a5);
  return objc_msgSend(a1, sel_addLineToPoint_, v12.__cosval * 8.0 + a4, a5 - v12.__sinval * 8.0);
}

id sub_1C035C728(double a1, double a2, double a3, double a4)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  objc_msgSend(v8, sel_moveToPoint_, a1, a2);
  objc_msgSend(v8, sel_addLineToPoint_, a3, a4);
  if (a2 == a4)
  {
    sub_1C151F9BC();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1C151F9BC();
    objc_msgSend(v8, sel_addLineToPoint_);
    sub_1C151F9BC();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1C151F9BC();
  }
  else
  {
    sub_1C151F9AC();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1C151F9AC();
    objc_msgSend(v8, sel_addLineToPoint_);
    sub_1C151F9AC();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1C151F9AC();
  }
  objc_msgSend(v8, sel_addLineToPoint_);
  return v8;
}

NewsFeed::GroupLayoutPriority_optional __swiftcall GroupLayoutPriority.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (NewsFeed::GroupLayoutPriority_optional)rawValue;
}

uint64_t GroupLayoutPriority.rawValue.getter()
{
  return *v0;
}

NewsFeed::GroupLayoutPriority_optional sub_1C035C8C0(Swift::Int *a1)
{
  return GroupLayoutPriority.init(rawValue:)(*a1);
}

BOOL static GroupLayoutPriority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1C035C8DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1C035C8F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1C035C904(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1C035C918(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t GroupLayoutPriority.description.getter()
{
  uint64_t result = 1701736270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7827276;
      break;
    case 2:
      uint64_t result = 1751607624;
      break;
    case 3:
      uint64_t result = 0x756F72636964754CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C035C9A4()
{
  uint64_t result = 1701736270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7827276;
      break;
    case 2:
      uint64_t result = 1751607624;
      break;
    case 3:
      uint64_t result = 0x756F72636964754CLL;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GroupLayoutPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C035CAE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutPriority()
{
  return &type metadata for GroupLayoutPriority;
}

uint64_t sub_1C035CB20(void *a1)
{
  int v3 = (char *)objc_msgSend(*(id *)(v1 + 56), sel_cachedSubscription);
  if (objc_getAssociatedObject(v3, v3 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v18, (uint64_t)v20);
  if (!v21)
  {
    sub_1BFEFE4A0((uint64_t)v20);
    goto LABEL_9;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    unsigned int v4 = 0;
    unint64_t v6 = 0;
    goto LABEL_10;
  }
  unsigned int v4 = v17;
  id v5 = objc_msgSend(v17, sel_integerValue);
  if (v5 == (id)-1)
  {

    goto LABEL_22;
  }
  unint64_t v6 = (unint64_t)v5;
LABEL_10:
  if (objc_getAssociatedObject(v3, (const void *)~v6))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    sub_1BFFBE2BC();
    if (swift_dynamicCast())
    {
      id v7 = v17;
      unsigned int v8 = objc_msgSend(v7, sel_integerValue);

      if ((v8 ^ v6)) {
        goto LABEL_22;
      }
      goto LABEL_19;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v20);
  }

  if (v6)
  {
LABEL_22:
    char v15 = 1;
    return v15 & 1;
  }
LABEL_19:
  if (!objc_msgSend(a1, sel_isPaid)) {
    goto LABEL_22;
  }
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v9);
  id v11 = objc_msgSend(a1, sel_identifier);
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  char v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8) + 8))(v12, v14, v9);
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_1C035CD78()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PuzzleTeaserAccessArbiter()
{
  return self;
}

uint64_t sub_1C035CDDC(void *a1)
{
  return sub_1C035CB20(a1) & 1;
}

uint64_t PuzzleAutomation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleAutomation.accessState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t PuzzleAutomation.init(puzzle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 72);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C01F0A74(a1);
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v6;
  return result;
}

uint64_t PuzzleAutomation.automationType.getter()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1C035CEA8()
{
  if (*v0) {
    return 0x7453737365636361;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C035CEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C035D7B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C035CF18(uint64_t a1)
{
  unint64_t v2 = sub_1C035D130();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C035CF54(uint64_t a1)
{
  unint64_t v2 = sub_1C035D130();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleAutomation.encode(to:)(void *a1)
{
  sub_1C035D3E8(0, &qword_1EA19A118, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v13 - v6;
  int v14 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1C035D130();
  sub_1C1520F0C();
  char v17 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v16 = v14;
    char v15 = 1;
    sub_1C035D184();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_1C035D130()
{
  unint64_t result = qword_1EA19A120;
  if (!qword_1EA19A120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A120);
  }
  return result;
}

unint64_t sub_1C035D184()
{
  unint64_t result = qword_1EA19A128;
  if (!qword_1EA19A128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A128);
  }
  return result;
}

uint64_t PuzzleAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C035D3E8(0, &qword_1EA19A130, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C035D130();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v16 = 1;
  sub_1C035D44C();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v13 = v17;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1C035D3E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C035D130();
    unint64_t v7 = a3(a1, &type metadata for PuzzleAutomation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C035D44C()
{
  unint64_t result = qword_1EA19A138;
  if (!qword_1EA19A138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A138);
  }
  return result;
}

unint64_t sub_1C035D4A4()
{
  unint64_t result = qword_1EA19A140;
  if (!qword_1EA19A140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A140);
  }
  return result;
}

unint64_t sub_1C035D4FC()
{
  unint64_t result = qword_1EA19A148;
  if (!qword_1EA19A148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A148);
  }
  return result;
}

uint64_t sub_1C035D550()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1C035D564@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleAutomation.init(from:)(a1, a2);
}

uint64_t sub_1C035D57C(void *a1)
{
  return PuzzleAutomation.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PuzzleAutomation()
{
  return &type metadata for PuzzleAutomation;
}

unsigned char *storeEnumTagSinglePayload for PuzzleAutomation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C035D670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAutomation.CodingKeys()
{
  return &type metadata for PuzzleAutomation.CodingKeys;
}

unint64_t sub_1C035D6AC()
{
  unint64_t result = qword_1EA19A150;
  if (!qword_1EA19A150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A150);
  }
  return result;
}

unint64_t sub_1C035D704()
{
  unint64_t result = qword_1EA19A158;
  if (!qword_1EA19A158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A158);
  }
  return result;
}

unint64_t sub_1C035D75C()
{
  unint64_t result = qword_1EA19A160;
  if (!qword_1EA19A160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A160);
  }
  return result;
}

uint64_t sub_1C035D7B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7453737365636361 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t FormatPropertyValue.encode(to:)(void *a1)
{
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v9 - v6;
  if ((~*v1 & 0xF000000000000007) != 0)
  {
    v9[0] = *v1;
    return FormatOptionValue.encode(to:)(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFEB6A24();
    sub_1C1520F0C();
    sub_1C035DCAC();
    v9[0] = 0;
    v9[1] = 0;
    sub_1C152080C();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1C035DA4C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C035DAA8()
{
  return sub_1C151E77C();
}

uint64_t sub_1C035DAC8()
{
  return sub_1C1520E0C();
}

void sub_1C035DB20(void *a1@<X8>)
{
  *a1 = 0x6C6F686563616C70;
  a1[1] = 0xEB00000000726564;
}

uint64_t sub_1C035DB44()
{
  return sub_1C151EAEC();
}

void sub_1C035DB94(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A778;
}

uint64_t sub_1C035DBA4(void *a1)
{
  return FormatPropertyValue.encode(to:)(a1);
}

uint64_t _s8NewsFeed19FormatPropertyValueO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  unint64_t v4 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v4 != 0xF000000000000007)
    {
      uint64_t v7 = *a2;
      uint64_t v8 = v2;
      sub_1BFDC11A4(v3);
      sub_1BFDC11A4(v2);
      sub_1BFDC11A4(v2);
      sub_1BFDC11A4(v3);
      char v5 = static FormatOptionValue.== infix(_:_:)(&v8, (unint64_t *)&v7);
      sub_1BFDC11BC(v2);
      sub_1BFDC11BC(v3);
      sub_1BFDC11BC(v3);
      sub_1BFDC11BC(v2);
      return v5 & 1;
    }
    goto LABEL_5;
  }
  if (v4 != 0xF000000000000007)
  {
LABEL_5:
    sub_1BFDC11A4(*a1);
    sub_1BFDC11A4(v3);
    sub_1BFDC11BC(v2);
    sub_1BFDC11BC(v3);
    char v5 = 0;
    return v5 & 1;
  }
  sub_1BFDC11BC(*a1);
  sub_1BFDC11BC(v3);
  char v5 = 1;
  return v5 & 1;
}

unint64_t sub_1C035DCAC()
{
  unint64_t result = qword_1EB85BA80;
  if (!qword_1EB85BA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA80);
  }
  return result;
}

unint64_t sub_1C035DD00(void *a1)
{
  a1[1] = sub_1BFDC11D4();
  a1[2] = sub_1C01B024C();
  unint64_t result = sub_1C035DD38();
  a1[3] = result;
  return result;
}

unint64_t sub_1C035DD38()
{
  unint64_t result = qword_1EA19A168;
  if (!qword_1EA19A168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A168);
  }
  return result;
}

uint64_t *assignWithCopy for FormatPropertyValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned int v4 = (((unint64_t)*a2 >> 60) & 0x8F | (16 * (*a2 & 7))) ^ 0x7E;
  if (((((unint64_t)*a1 >> 60) & 0x8F | (16 * (*a1 & 7))) ^ 0x7E) < 0x72)
  {
    *a1 = v3;
    if (v4 >= 0x72) {
      swift_retain();
    }
  }
  else if (v4 < 0x72)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v3;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for FormatPropertyValue(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if ((((*a1 >> 60) & 0x8F | (16 * (*a1 & 7))) ^ 0x7E) < 0x72) {
    goto LABEL_5;
  }
  if ((((v3 >> 60) & 0x8F | (16 * (v3 & 7))) ^ 0x7E) < 0x72)
  {
    swift_release();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t sub_1C035DEA0(void *a1)
{
  int v1 = (*a1 >> 60) & 0x8F | (16 * (*a1 & 7));
  unsigned int v2 = v1 ^ 0x7E;
  unsigned int v3 = 128 - v1;
  if (v2 >= 0x72) {
    return 0;
  }
  else {
    return v3;
  }
}

unint64_t *sub_1C035DEC4(unint64_t *result, unsigned int a2)
{
  if (a2 > 0x72)
  {
    unint64_t v3 = a2 - 115;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
    unint64_t v3 = (v2 | (v2 << 57)) & 0xF000000000000007;
  }
  *unint64_t result = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatPropertyValue.CodingType()
{
  return &type metadata for FormatPropertyValue.CodingType;
}

unint64_t sub_1C035DF30()
{
  unint64_t result = qword_1EA19A170;
  if (!qword_1EA19A170)
  {
    sub_1C035DF88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A170);
  }
  return result;
}

void sub_1C035DF88()
{
  if (!qword_1EA19A178)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19A178);
    }
  }
}

unint64_t sub_1C035DFE4()
{
  unint64_t result = qword_1EA19A180;
  if (!qword_1EA19A180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A180);
  }
  return result;
}

uint64_t sub_1C035E038()
{
  sub_1C151E80C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C035E098(uint64_t a1, unint64_t a2)
{
  sub_1BFE74E64(a1, a2);
  sub_1C151E80C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C035E2C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C035E36C(uint64_t a1)
{
  sub_1C0368E18(a1, (uint64_t)v6);
  sub_1C0368E18(a1, (uint64_t)&v7);
  unint64_t v2 = v9 | ((unint64_t)v10 << 32);
  switch(v10 >> 13)
  {
    case 1:
    case 3:
    case 4:
      unsigned __int16 v10 = WORD2(v2) & 0x1FFF;
      swift_bridgeObjectRetain();
      break;
    case 2:
      unsigned __int16 v10 = WORD2(v2) & 0x1FFF;
      v11[0] = v7;
      v11[1] = v8;
      sub_1BFCA59F4((uint64_t)v11, (uint64_t)v12);
      sub_1BFCA59F4((uint64_t)v12, (uint64_t)&v13);
      if ((v14 & 1) == 0)
      {
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
      }
      break;
    default:
      unsigned __int16 v10 = WORD2(v2) & 0x1FFF;
      long long v4 = v7;
      int v5 = v8 >> 6;
      if (v5)
      {
        if (v5 != 1) {
          break;
        }
        *(void *)&v11[0] = 0;
        *((void *)&v11[0] + 1) = 0xE000000000000000;
        sub_1C151E80C();
        sub_1C035E098(v4, *((unint64_t *)&v4 + 1));
      }
      else
      {
        *(void *)&v11[0] = 0x28746F6C73;
        *((void *)&v11[0] + 1) = 0xE500000000000000;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        sub_1C0368E74(a1);
      }
      sub_1C151E80C();
      break;
  }
  sub_1C151E80C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C035E6B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C035E7C8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  CGFloat v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  CGFloat v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  CGFloat v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1C151F0CC();
  if (!v18) {
    return sub_1C151ECBC();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1C151E30C();
  uint64_t v32 = sub_1C15202DC();
  sub_1C152027C();
  uint64_t v36 = v8;
  sub_1C151F09C();
  if (v19 < 0)
  {
    __break(1u);
    JUMPOUT(0x1C035EBC8);
  }
  double v34 = (void (**)(char *))(v33 + 2);
  id v35 = v14;
  ++v33;
  while (1)
  {
    CGFloat v20 = (void (*)(char *, void))sub_1C151F19C();
    uint64_t v21 = v12;
    CGFloat v22 = v12;
    uint64_t v23 = AssociatedTypeWitness;
    (*v34)(v21);
    v20(v42, 0);
    uint64_t v24 = v41;
    v38(v22, v40);
    if (v24) {
      break;
    }
    uint64_t v41 = 0;
    (*v33)(v22, v23);
    sub_1C15202BC();
    sub_1C151F0FC();
    --v19;
    uint64_t v12 = v22;
    if (!v19)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
      return v43;
    }
  }
  (*v33)(v22, v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
}

uint64_t static FeedGroupEmitterRule.cursorKind(_:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C035ECB0(a1, a2);
}

uint64_t static FeedGroupEmitterRule.notCursorKind(_:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C035ECB0(a1, a2);
}

uint64_t sub_1C035ECB0@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  sub_1BFCA5A7C(0, &qword_1EB85E158, (uint64_t)&type metadata for FeedCursorKind, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(unsigned char *)(inited + 32) = v3;
  uint64_t v5 = sub_1C00B9854(inited);
  swift_setDeallocating();
  *a2 = v5;
  type metadata accessor for FeedGroupEmitterRule();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C035ED74(uint64_t a1, uint64_t a2)
{
  v9[1] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)v9 - v5;
  type metadata accessor for FeedCursorGroup();
  long long v7 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v7();
  swift_getAssociatedConformanceWitness();
  LOBYTE(v7) = sub_1C151E5CC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  return v7 & 1;
}

uint64_t sub_1C035EF7C@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1C151811C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C035F0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for FeedCursorGroup();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v21 = (char *)&v20 - v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v11();
  uint64_t v12 = v21;
  swift_getAssociatedConformanceWitness();
  char v13 = sub_1C151E5CC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  uint64_t v14 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v12, a1, v4);
  if (v13)
  {
    uint64_t v15 = (uint64_t *)&v12[*(int *)(v4 + 40)];
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_bridgeObjectRetain();
    char v18 = sub_1BFF896B4(v16, v17, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = 0;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v4);
  return v18 & 1;
}

uint64_t sub_1C035F3A8(void (*a1)(void, void), uint64_t a2, void *a3)
{
  uint64_t v3 = a3;
  uint64_t v86 = a1;
  uint64_t v87 = a2;
  uint64_t v4 = *a3;
  uint64_t v5 = sub_1C151631C();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  MEMORY[0x1F4188790](v5);
  id v66 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCD9524();
  uint64_t v78 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v79 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0368F0C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v67 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v82 = (uint64_t)&v63 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = (uint64_t)&v63 - v14;
  uint64_t v15 = *(void *)(v4 + 88);
  uint64_t v77 = v3;
  uint64_t v16 = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v76 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v73 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v69 = (char *)&v63 - v20;
  uint64_t v21 = swift_checkMetadataState();
  uint64_t v71 = *(void *)(v21 - 8);
  uint64_t v72 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v70 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  id v68 = (char *)&v63 - v24;
  uint64_t v25 = type metadata accessor for FeedCursorGroup();
  uint64_t v89 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v88 = (char *)&v63 - v26;
  swift_getAssociatedTypeWitness();
  uint64_t v83 = v16;
  uint64_t v84 = v15;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v63 - v30;
  uint64_t v32 = v86;
  CGFloat v33 = *(void (**)(void))(v27 + 64);
  swift_checkMetadataState();
  v33();
  double v34 = v88;
  swift_getAssociatedConformanceWitness();
  LOBYTE(v3) = sub_1C151E5CC();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  uint64_t v35 = v89;
  (*(void (**)(char *, void (*)(void, void), uint64_t))(v89 + 16))(v34, v32, v25);
  if ((v3 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v25);
LABEL_9:
    char v53 = 0;
    return v53 & 1;
  }
  uint64_t v36 = *(void (**)(void))(v84 + 64);
  uint64_t v65 = v84 + 64;
  uint64_t v86 = (void (*)(void, void))v36;
  double v37 = v68;
  v36(v83);
  uint64_t v38 = AssociatedConformanceWitness;
  uint64_t v64 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  uint64_t v39 = v69;
  uint64_t v40 = v72;
  v64(v72, AssociatedConformanceWitness);
  uint64_t v87 = v25;
  uint64_t v71 = *(void *)(v71 + 8);
  ((void (*)(char *, uint64_t))v71)(v37, v40);
  uint64_t v41 = v76;
  id v68 = (char *)swift_getAssociatedConformanceWitness();
  uint64_t v63 = (void (*)(uint64_t, char *))*((void *)v68 + 5);
  v63(v41, v68);
  uint64_t v75 = *(void *)(v75 + 8);
  ((void (*)(char *, uint64_t))v75)(v39, v41);
  CGFloat v42 = v70;
  v86(v83, v84);
  uint64_t v43 = v73;
  v64(v40, v38);
  ((void (*)(char *, uint64_t))v71)(v42, v40);
  uint64_t v44 = v82;
  v63(v41, v68);
  ((void (*)(char *, uint64_t))v75)(v43, v41);
  uint64_t v45 = v79;
  uint64_t v46 = v79 + *(int *)(v78 + 48);
  double v47 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  uint64_t v48 = v85;
  sub_1C0362C78(v85, v79, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C0362C78(v44, v46, (unint64_t *)&qword_1EB871180, v47);
  uint64_t v49 = v80;
  uint64_t v50 = v81;
  uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  if (v51(v45, 1, v81) != 1)
  {
    uint64_t v54 = v67;
    sub_1C0362C78(v45, v67, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    int v55 = v51(v46, 1, v50);
    uint64_t v56 = v45;
    if (v55 != 1)
    {
      long long v59 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v66, v46, v50);
      sub_1C0092AA4((unint64_t *)&qword_1EB871160, MEMORY[0x1E4F27928]);
      char v53 = sub_1C151E5CC();
      uint64_t v60 = v56;
      uint64_t v61 = *(void (**)(char *, uint64_t))(v49 + 8);
      v61(v59, v50);
      uint64_t v62 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C0362CE4(v82, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C0362CE4(v48, (unint64_t *)&qword_1EB871180, v62);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v87);
      v61((char *)v54, v50);
      sub_1C0362CE4(v60, (unint64_t *)&qword_1EB871180, v62);
      return v53 & 1;
    }
    char v57 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C0362CE4(v44, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    sub_1C0362CE4(v48, (unint64_t *)&qword_1EB871180, v57);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v87);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v54, v50);
    goto LABEL_8;
  }
  CGRect v52 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C0362CE4(v44, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C0362CE4(v48, (unint64_t *)&qword_1EB871180, v52);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v87);
  if (v51(v46, 1, v50) != 1)
  {
LABEL_8:
    sub_1C0362BA0(v45, (uint64_t (*)(void))sub_1BFCD9524);
    goto LABEL_9;
  }
  sub_1C0362CE4(v45, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  char v53 = 1;
  return v53 & 1;
}

uint64_t sub_1C035FE90@<X0>(char *a1@<X8>)
{
  CGFloat v33 = a1;
  sub_1C0368FC4();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - v5;
  uint64_t v7 = sub_1C151661C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void **)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v30 - v16;
  sub_1C15165BC();
  sub_1C15164DC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C151620C();
  uint64_t v18 = (void (*)(char *, uint64_t))v12[1];
  v18(v14, v11);
  sub_1C151620C();
  sub_1C0092AA4((unint64_t *)&qword_1EB870780, MEMORY[0x1E4F27928]);
  uint64_t result = sub_1C151E59C();
  if (result)
  {
    uint64_t v20 = &v6[*(int *)(v2 + 48)];
    uint64_t v30 = v12 + 1;
    uint64_t v31 = v18;
    uint64_t v21 = (void (*)(char *, char *, uint64_t))v12[4];
    v21(v6, v17, v11);
    v21(v20, v14, v11);
    uint64_t v22 = v32;
    uint64_t v23 = &v32[*(int *)(v2 + 48)];
    uint64_t v24 = (void (*)(char *, char *, uint64_t))v12[2];
    v24(v32, v6, v11);
    v24(v23, v20, v11);
    uint64_t v25 = v33;
    v21(v33, v22, v11);
    uint64_t v26 = v23;
    uint64_t v27 = (uint64_t (*)(char *, uint64_t))v31;
    v31(v26, v11);
    uint64_t v28 = &v22[*(int *)(v2 + 48)];
    v21(v22, v6, v11);
    v21(v28, v20, v11);
    sub_1BFDD2EEC();
    v21(&v25[*(int *)(v29 + 36)], v28, v11);
    return v27(v22, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0360258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v4 = sub_1C151631C();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v4);
  double v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FeedCursorGroup();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v39 = (char *)&v32 - v7;
  sub_1BFDD2EEC();
  uint64_t v32 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v33 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v37 = (char *)&v32 - v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v17();
  uint64_t v19 = (uint64_t)v37;
  uint64_t v18 = v38;
  swift_getAssociatedConformanceWitness();
  char v20 = sub_1C151E5CC();
  uint64_t v21 = v16;
  uint64_t v22 = v39;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v21, AssociatedTypeWitness);
  sub_1C0368F60(v41, v19);
  uint64_t v23 = a1;
  uint64_t v24 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v22, v23, v6);
  if (v20)
  {
    sub_1C0092AA4((unint64_t *)&qword_1EB870780, MEMORY[0x1E4F27928]);
    uint64_t v25 = v36;
    char v26 = sub_1C151E58C();
    uint64_t v28 = v34;
    uint64_t v27 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v34, v22, v25);
    uint64_t v29 = v33;
    sub_1C0368F60(v19, v33);
    if (v26) {
      char v30 = sub_1C151E59C();
    }
    else {
      char v30 = 0;
    }
    sub_1C0362BA0(v29, (uint64_t (*)(void))sub_1BFDD2EEC);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v25);
  }
  else
  {
    char v30 = 0;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v24);
  sub_1C0362BA0(v19, (uint64_t (*)(void))sub_1BFDD2EEC);
  return v30 & 1;
}

uint64_t sub_1C0360728(uint64_t a1, uint64_t a2)
{
  v10[1] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)v10 - v5;
  type metadata accessor for FeedCursorGroup();
  uint64_t v7 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v7();
  swift_getAssociatedConformanceWitness();
  char v8 = sub_1C151F03C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  return v8 & 1;
}

uint64_t sub_1C0360934(uint64_t a1, uint64_t a2)
{
  v10[1] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)v10 - v5;
  type metadata accessor for FeedCursorGroup();
  uint64_t v7 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v7();
  swift_getAssociatedConformanceWitness();
  char v8 = sub_1C151E5CC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  return v8 & 1;
}

uint64_t sub_1C0360B44()
{
  type metadata accessor for FeedCursorGroup();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

uint64_t sub_1C0360C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for FeedCursorGroup();
  if (FeedCursorGroup.identifier.getter() == a2 && v5 == a3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t FeedGroupEmitterRule.evaluateDayOfWeek(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v36 = a1;
  double v37 = a3;
  uint64_t v6 = sub_1C15165FC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151661C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v14 + 16))(v18, v4, a2, v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 21)
  {
    uint64_t v28 = *v18;
    sub_1C15165BC();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F27C68], v6);
    uint64_t v29 = sub_1C151660C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    BOOL v30 = sub_1BFFC399C(v29, v28);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v31 = 0xD00000000000001BLL;
    if (!v30) {
      unint64_t v31 = 0;
    }
    unint64_t v32 = 0x80000001C160C220;
    if (v30)
    {
      char v33 = 0;
    }
    else
    {
      unint64_t v32 = 0;
      char v33 = 2;
    }
    double v34 = v37;
    *double v37 = v31;
    v34[1] = v32;
    *((unsigned char *)v34 + 16) = v33;
  }
  else if (EnumCaseMultiPayload == 20)
  {
    uint64_t v20 = *v18;
    sub_1C15165BC();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F27C68], v6);
    uint64_t v21 = sub_1C151660C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    BOOL v22 = sub_1BFFC399C(v21, v20);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v24 = 0xD000000000000017;
    if (v22) {
      unint64_t v24 = 0;
    }
    unint64_t v25 = 0x80000001C160C240;
    if (v22)
    {
      unint64_t v25 = 0;
      char v26 = 2;
    }
    else
    {
      char v26 = 0;
    }
    uint64_t v27 = v37;
    *double v37 = v24;
    v27[1] = v25;
    *((unsigned char *)v27 + 16) = v26;
  }
  else
  {
    uint64_t v35 = v37;
    *double v37 = 0;
    v35[1] = 0;
    *((unsigned char *)v35 + 16) = 2;
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v18, a2);
  }
  return result;
}

unint64_t FeedGroupEmitterRule.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C0368F0C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&AssociatedConformanceWitness - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&AssociatedConformanceWitness - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&AssociatedConformanceWitness - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&AssociatedConformanceWitness - v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v18 = (char *)&AssociatedConformanceWitness - v17;
  __n128 v20 = MEMORY[0x1F4188790](v19);
  BOOL v22 = (uint64_t *)((char *)&AssociatedConformanceWitness - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v23 + 16))(v22, v2, a1, v20);
  uint64_t v24 = 0xD000000000000011;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      return 0xD000000000000015;
    case 2u:
    case 0xCu:
    case 0xDu:
      uint64_t v30 = AssociatedTypeWitness;
      uint64_t v38 = *(uint64_t *)((char *)v22 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v32 = v16;
      (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 32))(v18, v22, v30);
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      uint64_t v67 = v38;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C1520A2C();
      goto LABEL_19;
    case 3u:
    case 4u:
      uint64_t v30 = AssociatedTypeWitness;
      uint64_t v31 = *(uint64_t *)((char *)v22 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v32 = v16;
      (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 32))(v18, v22, v30);
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      uint64_t v67 = v31;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C1520A2C();
      sub_1C151E80C();
LABEL_19:
      uint64_t v24 = v68[0];
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v30);
      return v24;
    case 5u:
      sub_1BFDC7470();
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t v35 = *(uint64_t *)((char *)v22 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 32))(v18, v22, v34);
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      uint64_t v67 = v35;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C1520A2C();
      sub_1C151E80C();
      sub_1C0362940();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v68[0];
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v34);
      return v24;
    case 6u:
      uint64_t v29 = *v22;
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      goto LABEL_26;
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      uint64_t v29 = *v22;
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      goto LABEL_26;
    case 0xEu:
      uint64_t v29 = *v22;
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
LABEL_26:
      sub_1C151E80C();
      uint64_t v67 = v29;
      swift_getAssociatedConformanceWitness();
      sub_1C151F04C();
      swift_getWitnessTable();
      sub_1C1520A3C();
      goto LABEL_42;
    case 0x12u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v68[0] = 0xD000000000000010;
      v68[1] = 0x80000001C160C760;
      goto LABEL_38;
    case 0x13u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v68[0] = 0xD000000000000014;
      v68[1] = 0x80000001C160C740;
LABEL_38:
      sub_1C00BC560();
      goto LABEL_41;
    case 0x14u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v36 = 0x20664F2073796144;
      uint64_t v37 = 0xEE00202C6B656557;
      goto LABEL_21;
    case 0x15u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v36 = 0xD000000000000012;
      uint64_t v37 = 0x80000001C160C720;
LABEL_21:
      v68[0] = v36;
      v68[1] = v37;
      goto LABEL_41;
    case 0x16u:
      strcpy((char *)v68, "Time of day, ");
      HIWORD(v68[1]) = -4864;
      sub_1C0084EF4();
      goto LABEL_41;
    case 0x17u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v68[0] = 0xD000000000000011;
      v68[1] = 0x80000001C160C700;
      sub_1C0084EF4();
      goto LABEL_41;
    case 0x18u:
      strcpy((char *)v68, "Feed Modes, ");
      BYTE5(v68[1]) = 0;
      HIWORD(v68[1]) = -5120;
      sub_1C00863EC();
      goto LABEL_41;
    case 0x19u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v68[0] = 0xD000000000000010;
      v68[1] = 0x80000001C160C6E0;
      sub_1C00863EC();
      goto LABEL_41;
    case 0x1Au:
      sub_1BFEC1200((uint64_t)v22, (uint64_t)v15);
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v68[0] = 0xD000000000000010;
      v68[1] = 0x80000001C160C6A0;
      sub_1C0362C78((uint64_t)v15, (uint64_t)v12, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      uint64_t v62 = sub_1C151928C();
      uint64_t v63 = *(void *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v12, 1, v62) == 1)
      {
        sub_1C0362CE4((uint64_t)v12, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      }
      else
      {
        sub_1C151920C();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v62);
      }
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v68[0];
      sub_1C0362CE4((uint64_t)v15, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      return v24;
    case 0x1Bu:
      sub_1BFEC1200((uint64_t)v22, (uint64_t)v9);
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v68[0] = 0xD000000000000010;
      v68[1] = 0x80000001C160C680;
      sub_1C0362C78((uint64_t)v9, (uint64_t)v6, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      uint64_t v25 = sub_1C151928C();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v6, 1, v25) == 1)
      {
        sub_1C0362CE4((uint64_t)v6, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      }
      else
      {
        sub_1C151920C();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
      }
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v68[0];
      sub_1C0362CE4((uint64_t)v9, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      return v24;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      return 0xD000000000000012;
    case 0x1Du:
      uint64_t v51 = sub_1C00B1170(*v22);
      swift_bridgeObjectRelease();
      v68[0] = v51;
      swift_retain();
      sub_1C0362E1C(v68, sub_1C0636360, sub_1C0362EA0);
      swift_release();
      uint64_t v52 = v68[0];
      int64_t v53 = *(void *)(v68[0] + 16);
      if (v53)
      {
        v68[0] = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v53, 0);
        uint64_t v54 = 0;
        uint64_t v55 = v68[0];
        do
        {
          LODWORD(v67) = *(_DWORD *)(v52 + 4 * v54 + 32);
          uint64_t v56 = sub_1C152088C();
          uint64_t v58 = v57;
          v68[0] = v55;
          unint64_t v60 = *(void *)(v55 + 16);
          unint64_t v59 = *(void *)(v55 + 24);
          if (v60 >= v59 >> 1)
          {
            sub_1BFF661B8(v59 > 1, v60 + 1, 1);
            uint64_t v55 = v68[0];
          }
          ++v54;
          *(void *)(v55 + 16) = v60 + 1;
          uint64_t v61 = v55 + 16 * v60;
          *(void *)(v61 + 32) = v56;
          *(void *)(v61 + 40) = v58;
        }
        while (v53 != v54);
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v55 = MEMORY[0x1E4FBC860];
      }
      v68[0] = v55;
      sub_1BFCA5A7C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v64 = "Allowed Segment Set IDs ";
      goto LABEL_63;
    case 0x1Eu:
      uint64_t v39 = sub_1C00B1170(*v22);
      swift_bridgeObjectRelease();
      v68[0] = v39;
      swift_retain();
      sub_1C0362E1C(v68, sub_1C0636360, sub_1C0362EA0);
      swift_release();
      uint64_t v40 = v68[0];
      int64_t v41 = *(void *)(v68[0] + 16);
      if (v41)
      {
        v68[0] = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v41, 0);
        uint64_t v42 = 0;
        uint64_t v43 = v68[0];
        do
        {
          LODWORD(v67) = *(_DWORD *)(v40 + 4 * v42 + 32);
          uint64_t v44 = sub_1C152088C();
          uint64_t v46 = v45;
          v68[0] = v43;
          unint64_t v48 = *(void *)(v43 + 16);
          unint64_t v47 = *(void *)(v43 + 24);
          if (v48 >= v47 >> 1)
          {
            sub_1BFF661B8(v47 > 1, v48 + 1, 1);
            uint64_t v43 = v68[0];
          }
          ++v42;
          *(void *)(v43 + 16) = v48 + 1;
          uint64_t v49 = v43 + 16 * v48;
          *(void *)(v49 + 32) = v44;
          *(void *)(v49 + 40) = v46;
        }
        while (v41 != v42);
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v43 = MEMORY[0x1E4FBC860];
      }
      v68[0] = v43;
      sub_1BFCA5A7C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v64 = "Blocked Segment Set IDs ";
LABEL_63:
      v68[0] = 0xD000000000000018;
      v68[1] = (unint64_t)(v64 - 32) | 0x8000000000000000;
      sub_1C151E80C();
      goto LABEL_42;
    case 0x1Fu:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      char v33 = "Allowed Platforms ";
      goto LABEL_34;
    case 0x20u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      char v33 = "Blocked Platforms ";
LABEL_34:
      v68[0] = 0xD000000000000012;
      v68[1] = (unint64_t)(v33 - 32) | 0x8000000000000000;
      sub_1C0085498();
      goto LABEL_41;
    case 0x21u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v27 = 0xD000000000000016;
      uint64_t v28 = "Bundle session states ";
      goto LABEL_11;
    case 0x22u:
      v68[0] = 0;
      v68[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v27 = 0xD00000000000001ALL;
      uint64_t v28 = "Not bundle session states ";
LABEL_11:
      v68[0] = v27;
      v68[1] = (unint64_t)(v28 - 32) | 0x8000000000000000;
      sub_1C0362C00();
LABEL_41:
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v24 = v68[0];
      break;
    case 0x23u:
      uint64_t v24 = *(void *)(*v22 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      break;
    case 0x24u:
      uint64_t v24 = 0xD000000000000011;
      break;
    case 0x25u:
      uint64_t v24 = 0xD000000000000015;
      break;
    case 0x26u:
      uint64_t v24 = 0x5320737961776C41;
      break;
    case 0x27u:
      uint64_t v24 = 0xD00000000000001DLL;
      break;
    default:
      return v24;
  }
  return v24;
}

uint64_t Array<A>.evaluate(cursor:slots:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v15 = a3;
  v14[2] = a4;
  v14[3] = a5;
  void v14[4] = a1;
  v14[5] = a2;
  uint64_t v7 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0364374, (uint64_t)v14, v7, (uint64_t)&type metadata for FeedGroupEmitterRuleResult, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v9);
  swift_bridgeObjectRetain();
  sub_1C0362E1C(&v15, sub_1C0636518, (uint64_t (*)(void *))sub_1C036352C);
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16))
  {
    uint64_t v10 = *(void *)(v15 + 32);
    uint64_t v11 = *(void *)(v15 + 40);
    unsigned __int8 v12 = *(unsigned char *)(v15 + 48);
    sub_1BFDCA484(v10, v11, v12);
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unsigned __int8 v12 = 2;
  }
  uint64_t result = swift_release();
  *(void *)a6 = v10;
  *(void *)(a6 + 8) = v11;
  *(unsigned char *)(a6 + 16) = v12;
  return result;
}

uint64_t FeedGroupEmitterCustomRule.description.getter()
{
  uint64_t v0 = sub_1BFE402EC();
  swift_bridgeObjectRetain();
  return v0;
}

void *FeedGroupEmitterCustomRule.__allocating_init(description:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

void *FeedGroupEmitterCustomRule.init(description:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t FeedGroupEmitterCustomRule.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedGroupEmitterCustomRule.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0362940()
{
  uint64_t v0 = sub_1C151631C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDD2EEC();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151630C();
  sub_1C035FE90(v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1EA194890 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EA1A5AD0;
  uint64_t v8 = (void *)sub_1C151621C();
  id v9 = objc_msgSend(v7, sel_stringFromDate_, v8);

  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  v18[0] = v10;
  v18[1] = v12;
  sub_1C151E80C();
  uint64_t v13 = (void *)qword_1EA1A5AD0;
  uint64_t v14 = (void *)sub_1C151621C();
  id v15 = objc_msgSend(v13, sel_stringFromDate_, v14);

  sub_1C151E62C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v16 = v18[0];
  sub_1C0362BA0((uint64_t)v6, (uint64_t (*)(void))sub_1BFDD2EEC);
  return v16;
}

uint64_t sub_1C0362BA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C0362C00()
{
  unint64_t result = qword_1EB894270;
  if (!qword_1EB894270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894270);
  }
  return result;
}

uint64_t sub_1C0362C54(uint64_t a1)
{
  return sub_1C0360C58(a1, *(void *)(v1 + 32), *(void *)(v1 + 40)) & 1;
}

uint64_t sub_1C0362C78(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C0368F0C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0362CE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0368F0C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0362D40()
{
  return sub_1C0360B44();
}

uint64_t sub_1C0362D60(uint64_t a1)
{
  return sub_1C0360934(a1, *(void *)(v1 + 32)) & 1;
}

uint64_t sub_1C0362D84(uint64_t a1)
{
  return sub_1C0360728(a1, *(void *)(v1 + 32)) & 1;
}

uint64_t sub_1C0362DA8(uint64_t a1)
{
  return sub_1C0360258(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C0362DB4(void (*a1)(void, void))
{
  return sub_1C035F3A8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C0362DBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C035EF7C(a1);
}

uint64_t sub_1C0362DDC(uint64_t *a1)
{
  return sub_1C0362E1C(a1, sub_1C0636360, sub_1C0362EA0);
}

uint64_t sub_1C0362E1C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1C0362EA0(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        int v81 = *(_DWORD *)(v79 + 4 * i);
        uint64_t v82 = v78;
        do
        {
          int v83 = *(_DWORD *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(_DWORD *)(v79 + v82 + 4) = v83;
          *(_DWORD *)(v79 + v82) = v81;
          v82 -= 4;
        }
        while (v82 != -4);
        v78 += 4;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1C0363DA0((char *)(v84 + 4 * v88), (char *)(v84 + 4 * *(void *)&v87[16 * v12 - 16]), v84 + 4 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_1C063604C((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C151ECCC();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 4;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      int v14 = *(_DWORD *)(v10 + 4 * v9);
      int v15 = *(_DWORD *)(v10 + 4 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        int v16 = v14;
        while (1)
        {
          int v17 = *(_DWORD *)(v10 + 4 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          int v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              int v20 = *(_DWORD *)(v10 + 4 * v19);
              *(_DWORD *)(v10 + 4 * v19) = *(_DWORD *)(v10 + 4 * v18);
              *(_DWORD *)(v10 + 4 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      BOOL v22 = (int *)(v93 + 4 * v9);
      do
      {
        int v23 = *(_DWORD *)(v10 + 4 * v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          int v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          int *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1C0634CC8((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            id v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        unint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1C0363DA0((char *)(v10 + 4 * *(void *)v71), (char *)(v10 + 4 * *(void *)v74), v10 + 4 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

unint64_t sub_1C036352C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  unint64_t result = sub_1C152086C();
  if ((uint64_t)result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_196;
    }
    if ((unint64_t)v3 < 2) {
      return result;
    }
    uint64_t v89 = *v2;
    uint64_t v90 = *v2 + 24;
    uint64_t v91 = -1;
    uint64_t v92 = 1;
LABEL_139:
    uint64_t v93 = v91;
    uint64_t v94 = v90;
    while (1)
    {
      int v95 = *(unsigned __int8 *)(v94 + 16);
      unint64_t v96 = *(unsigned __int8 *)(v94 + 16);
      if (*(unsigned char *)(v94 + 16))
      {
        if (v95 != 1)
        {
          if (*(_OWORD *)v94 == 0) {
            unint64_t v96 = 3;
          }
          else {
            unint64_t v96 = 1;
          }
          unint64_t result = *(unsigned __int8 *)(v94 - 8);
          if (!*(unsigned char *)(v94 - 8)) {
            goto LABEL_151;
          }
          goto LABEL_149;
        }
        unint64_t v96 = 2;
      }
      unint64_t result = *(unsigned __int8 *)(v94 - 8);
      if (!*(unsigned char *)(v94 - 8)) {
        goto LABEL_151;
      }
LABEL_149:
      if (result != 1)
      {
        if (*(_OWORD *)(v94 - 24) == 0) {
          unint64_t result = 3;
        }
        else {
          unint64_t result = 1;
        }
        if (v96 >= result) {
          goto LABEL_138;
        }
        goto LABEL_157;
      }
      unint64_t result = 2;
LABEL_151:
      if (v96 >= result) {
        goto LABEL_138;
      }
LABEL_157:
      if (!v89) {
        goto LABEL_200;
      }
      long long v97 = *(_OWORD *)v94;
      *(_OWORD *)uint64_t v94 = *(_OWORD *)(v94 - 24);
      *(void *)(v94 + 16) = *(void *)(v94 - 8);
      *(unsigned char *)(v94 - 8) = v95;
      *(_OWORD *)(v94 - 24) = v97;
      v94 -= 24;
      if (__CFADD__(v93++, 1))
      {
LABEL_138:
        ++v92;
        v90 += 24;
        --v91;
        if (v92 == v3) {
          return result;
        }
        goto LABEL_139;
      }
    }
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_205;
  }
  int64_t v6 = result;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (unsigned __int8 *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v99 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_162;
    }
    uint64_t v108 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    uint64_t v108 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  uint64_t v10 = 0;
  CGRect v107 = v2;
  uint64_t v11 = *v2;
  CGRect v112 = (char *)MEMORY[0x1E4FBC860];
  int64_t v109 = v6;
  uint64_t v110 = v3;
  while (2)
  {
    uint64_t v13 = v10++;
    if (v10 < v3)
    {
      uint64_t v14 = v11 + 24 * v10;
      unint64_t v15 = *(unsigned __int8 *)(v14 + 16);
      if (*(unsigned char *)(v14 + 16))
      {
        if (v15 == 1)
        {
          unint64_t v15 = 2;
        }
        else if (*(_OWORD *)(v11 + 24 * v10) == 0)
        {
          unint64_t v15 = 3;
        }
        else
        {
          unint64_t v15 = 1;
        }
      }
      uint64_t v16 = v11 + 24 * v13;
      unint64_t v17 = *(unsigned __int8 *)(v16 + 16);
      if (*(unsigned char *)(v16 + 16))
      {
        if (v17 == 1)
        {
          unint64_t v17 = 2;
        }
        else if (*(_OWORD *)v16 == 0)
        {
          unint64_t v17 = 3;
        }
        else
        {
          unint64_t v17 = 1;
        }
      }
      uint64_t v10 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v18 = (unsigned char *)(v11 + 64 + 24 * v13);
        while (1)
        {
          unint64_t v19 = *v18;
          if (*v18)
          {
            if (v19 != 1)
            {
              if (*((_OWORD *)v18 - 1) == 0) {
                unint64_t v19 = 3;
              }
              else {
                unint64_t v19 = 1;
              }
              unint64_t v20 = *(v18 - 24);
              if (!*(v18 - 24)) {
                goto LABEL_45;
              }
LABEL_40:
              if (v20 == 1)
              {
                unint64_t v20 = 2;
              }
              else if (*(_OWORD *)(v18 - 40) == 0)
              {
                unint64_t v20 = 3;
              }
              else
              {
                unint64_t v20 = 1;
              }
              goto LABEL_45;
            }
            unint64_t v19 = 2;
          }
          unint64_t v20 = *(v18 - 24);
          if (*(v18 - 24)) {
            goto LABEL_40;
          }
LABEL_45:
          if (v15 < v17 == v19 >= v20) {
            break;
          }
          v18 += 24;
          if (v3 == ++v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v13) {
          goto LABEL_197;
        }
        if (v13 < v10)
        {
          uint64_t v21 = 24 * v10;
          uint64_t v22 = 24 * v13;
          uint64_t v23 = v10;
          uint64_t v24 = v13;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_203;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = v11 + v21;
              char v27 = *(unsigned char *)(v11 + v22 + 16);
              long long v28 = *(_OWORD *)(v11 + v22);
              uint64_t v29 = *(void *)(v11 + v21 - 8);
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v11 + v21 - 24);
              *(void *)(v25 + 16) = v29;
              *(_OWORD *)(v26 - 24) = v28;
              *(unsigned char *)(v26 - 8) = v27;
            }
            ++v24;
            v21 -= 24;
            v22 += 24;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_64;
    }
    if (__OFSUB__(v10, v13)) {
      goto LABEL_195;
    }
    if (v10 - v13 >= v6)
    {
LABEL_64:
      unint64_t v31 = v112;
      if (v10 < v13) {
        goto LABEL_190;
      }
      goto LABEL_65;
    }
    uint64_t v30 = v13 + v6;
    if (__OFADD__(v13, v6)) {
      goto LABEL_198;
    }
    if (v30 >= v3) {
      uint64_t v30 = v3;
    }
    if (v30 < v13)
    {
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      unint64_t result = sub_1C15203FC();
      __break(1u);
      return result;
    }
    if (v10 == v30) {
      goto LABEL_64;
    }
    int v81 = (long long *)(v11 + 24 * v10);
    unint64_t v31 = v112;
    while (2)
    {
      uint64_t v82 = v13;
      int v83 = v81;
      do
      {
        int v84 = *((unsigned __int8 *)v83 + 16);
        unint64_t v85 = *((unsigned __int8 *)v83 + 16);
        if (!*((unsigned char *)v83 + 16)) {
          goto LABEL_117;
        }
        if (v84 == 1)
        {
          unint64_t v85 = 2;
LABEL_117:
          unint64_t v86 = *((unsigned __int8 *)v83 - 8);
          if (!*((unsigned char *)v83 - 8)) {
            goto LABEL_125;
          }
          goto LABEL_123;
        }
        if (*v83 == 0) {
          unint64_t v85 = 3;
        }
        else {
          unint64_t v85 = 1;
        }
        unint64_t v86 = *((unsigned __int8 *)v83 - 8);
        if (!*((unsigned char *)v83 - 8)) {
          goto LABEL_125;
        }
LABEL_123:
        if (v86 == 1)
        {
          unint64_t v86 = 2;
LABEL_125:
          if (v85 >= v86) {
            break;
          }
          goto LABEL_131;
        }
        if (*(long long *)((char *)v83 - 24) == 0) {
          unint64_t v87 = 3;
        }
        else {
          unint64_t v87 = 1;
        }
        if (v85 >= v87) {
          break;
        }
LABEL_131:
        if (!v11) {
          goto LABEL_201;
        }
        long long v88 = *v83;
        long long *v83 = *(long long *)((char *)v83 - 24);
        *((void *)v83 + 2) = *((void *)v83 - 1);
        *((unsigned char *)v83 - 8) = v84;
        *(long long *)((char *)v83 - 24) = v88;
        int v83 = (long long *)((char *)v83 - 24);
        ++v82;
      }
      while (v10 != v82);
      ++v10;
      int v81 = (long long *)((char *)v81 + 24);
      if (v10 != v30) {
        continue;
      }
      break;
    }
    uint64_t v10 = v30;
    if (v30 < v13) {
      goto LABEL_190;
    }
LABEL_65:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v31 = sub_1C0634CC8(0, *((void *)v31 + 2) + 1, 1, v31);
    }
    unint64_t v33 = *((void *)v31 + 2);
    unint64_t v32 = *((void *)v31 + 3);
    unint64_t v12 = v33 + 1;
    if (v33 >= v32 >> 1) {
      unint64_t v31 = sub_1C0634CC8((char *)(v32 > 1), v33 + 1, 1, v31);
    }
    *((void *)v31 + 2) = v12;
    uint64_t v34 = v31 + 32;
    char v35 = &v31[16 * v33 + 32];
    *(void *)char v35 = v13;
    *((void *)v35 + 1) = v10;
    CGRect v112 = v31;
    if (v33)
    {
      while (2)
      {
        unint64_t v36 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v41 = &v34[16 * v12];
          uint64_t v42 = *((void *)v41 - 8);
          uint64_t v43 = *((void *)v41 - 7);
          BOOL v47 = __OFSUB__(v43, v42);
          uint64_t v44 = v43 - v42;
          if (v47) {
            goto LABEL_179;
          }
          uint64_t v46 = *((void *)v41 - 6);
          uint64_t v45 = *((void *)v41 - 5);
          BOOL v47 = __OFSUB__(v45, v46);
          uint64_t v39 = v45 - v46;
          char v40 = v47;
          if (v47) {
            goto LABEL_180;
          }
          unint64_t v48 = v12 - 2;
          uint64_t v49 = &v34[16 * v12 - 32];
          uint64_t v51 = *(void *)v49;
          uint64_t v50 = *((void *)v49 + 1);
          BOOL v47 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          if (v47) {
            goto LABEL_182;
          }
          BOOL v47 = __OFADD__(v39, v52);
          uint64_t v53 = v39 + v52;
          if (v47) {
            goto LABEL_185;
          }
          if (v53 >= v44)
          {
            uint64_t v71 = &v34[16 * v36];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v47 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v47) {
              goto LABEL_189;
            }
            BOOL v64 = v39 < v74;
          }
          else
          {
LABEL_83:
            if (v40) {
              goto LABEL_181;
            }
            unint64_t v48 = v12 - 2;
            char v54 = &v34[16 * v12 - 32];
            uint64_t v56 = *(void *)v54;
            uint64_t v55 = *((void *)v54 + 1);
            BOOL v57 = __OFSUB__(v55, v56);
            uint64_t v58 = v55 - v56;
            char v59 = v57;
            if (v57) {
              goto LABEL_184;
            }
            uint64_t v60 = &v34[16 * v36];
            uint64_t v62 = *(void *)v60;
            uint64_t v61 = *((void *)v60 + 1);
            BOOL v47 = __OFSUB__(v61, v62);
            uint64_t v63 = v61 - v62;
            if (v47) {
              goto LABEL_187;
            }
            if (__OFADD__(v58, v63)) {
              goto LABEL_188;
            }
            if (v58 + v63 < v39) {
              goto LABEL_95;
            }
            BOOL v64 = v39 < v63;
          }
          if (v64) {
            unint64_t v36 = v48;
          }
        }
        else
        {
          if (v12 == 3)
          {
            uint64_t v38 = *((void *)v31 + 4);
            uint64_t v37 = *((void *)v31 + 5);
            BOOL v47 = __OFSUB__(v37, v38);
            uint64_t v39 = v37 - v38;
            char v40 = v47;
            goto LABEL_83;
          }
          uint64_t v65 = *((void *)v31 + 4);
          uint64_t v66 = *((void *)v31 + 5);
          BOOL v47 = __OFSUB__(v66, v65);
          uint64_t v58 = v66 - v65;
          char v59 = v47;
LABEL_95:
          if (v59) {
            goto LABEL_183;
          }
          uint64_t v67 = &v34[16 * v36];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v47 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v47) {
            goto LABEL_186;
          }
          if (v70 < v58) {
            goto LABEL_15;
          }
        }
        unint64_t v75 = v36 - 1;
        if (v36 - 1 >= v12)
        {
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
          goto LABEL_199;
        }
        if (!v11) {
          goto LABEL_202;
        }
        unint64_t v76 = &v34[16 * v75];
        uint64_t v77 = *(void *)v76;
        uint64_t v78 = &v34[16 * v36];
        uint64_t v79 = *((void *)v78 + 1);
        sub_1C0364010((unsigned __int8 *)(v11 + 24 * *(void *)v76), (unsigned __int8 *)(v11 + 24 * *(void *)v78), v11 + 24 * v79, __dst);
        if (v1) {
          goto LABEL_136;
        }
        if (v79 < v77) {
          goto LABEL_176;
        }
        if (v36 > *((void *)v112 + 2)) {
          goto LABEL_177;
        }
        *(void *)unint64_t v76 = v77;
        *(void *)&v34[16 * v75 + 8] = v79;
        unint64_t v80 = *((void *)v112 + 2);
        if (v36 >= v80) {
          goto LABEL_178;
        }
        unint64_t v31 = v112;
        unint64_t v12 = v80 - 1;
        memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
        *((void *)v112 + 2) = v80 - 1;
        if (v80 <= 2) {
          goto LABEL_15;
        }
        continue;
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    int64_t v6 = v109;
    uint64_t v3 = v110;
    if (v10 < v110) {
      continue;
    }
    break;
  }
  uint64_t v9 = v108;
  uint64_t v99 = v112;
  uint64_t v2 = v107;
LABEL_162:
  uint64_t v108 = v9;
  if (v12 >= 2)
  {
    uint64_t v100 = *v2;
    do
    {
      unint64_t v101 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_191;
      }
      if (!v100) {
        goto LABEL_204;
      }
      uint64_t v102 = v99;
      uint64_t v103 = *(void *)&v99[16 * v101 + 32];
      uint64_t v104 = *(void *)&v99[16 * v12 + 24];
      sub_1C0364010((unsigned __int8 *)(v100 + 24 * v103), (unsigned __int8 *)(v100 + 24 * *(void *)&v99[16 * v12 + 16]), v100 + 24 * v104, __dst);
      if (v1) {
        break;
      }
      if (v104 < v103) {
        goto LABEL_192;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v102 = sub_1C063604C((uint64_t)v102);
      }
      if (v101 >= *((void *)v102 + 2)) {
        goto LABEL_193;
      }
      objc_super v105 = &v102[16 * v101 + 32];
      *(void *)objc_super v105 = v103;
      *((void *)v105 + 1) = v104;
      unint64_t v106 = *((void *)v102 + 2);
      if (v12 > v106) {
        goto LABEL_194;
      }
      memmove(&v102[16 * v12 + 16], &v102[16 * v12 + 32], 16 * (v106 - v12));
      uint64_t v99 = v102;
      *((void *)v102 + 2) = v106 - 1;
      unint64_t v12 = v106 - 1;
    }
    while (v106 > 2);
  }
LABEL_136:
  swift_bridgeObjectRelease();
  *(void *)(v108 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0363DA0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  int64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 3;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      uint64_t v16 = &v4[4 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        unint64_t v17 = (char *)(a3 - 4);
        while (1)
        {
          uint64_t v18 = v17 + 4;
          unint64_t v19 = v6 - 4;
          int v20 = *((_DWORD *)v6 - 1);
          if (*((_DWORD *)v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 4;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(_DWORD *)unint64_t v17 = *((_DWORD *)v16 - 1);
            }
            v16 -= 4;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(_DWORD *)unint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 4;
            v6 -= 4;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 4;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    uint64_t v14 = &v4[4 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4) {
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v4;
          }
          v4 += 4;
          uint64_t v23 = v4;
          unint64_t v15 = v6;
        }
        else
        {
          unint64_t v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v6;
          }
        }
        v7 += 4;
        if (v4 >= v14) {
          break;
        }
        int64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1C0634EB4((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0364010(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v4 = __dst;
  int64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  unint64_t v31 = __dst;
  unint64_t v32 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      uint64_t v20 = 24 * v11;
      if (__dst != a2 || &a2[v20] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v21 = &v4[v20];
      uint64_t v30 = &v4[v20];
      unint64_t v32 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v22 = a3 - 24;
        do
        {
          unint64_t v23 = *(v21 - 8);
          if (*(v21 - 8))
          {
            if (v23 == 1)
            {
              unint64_t v23 = 2;
            }
            else if (*(_OWORD *)(v21 - 24) == 0)
            {
              unint64_t v23 = 3;
            }
            else
            {
              unint64_t v23 = 1;
            }
          }
          uint64_t v24 = v6 - 24;
          unint64_t v25 = *(v6 - 8);
          if (*(v6 - 8))
          {
            if (v25 == 1)
            {
              unint64_t v25 = 2;
            }
            else if (*(_OWORD *)(v6 - 24) == 0)
            {
              unint64_t v25 = 3;
            }
            else
            {
              unint64_t v25 = 1;
            }
          }
          uint64_t v26 = (unsigned __int8 *)(v22 + 24);
          if (v23 >= v25)
          {
            uint64_t v30 = v21 - 24;
            if (v26 < v21 || v22 >= (unint64_t)v21 || v26 != v21)
            {
              long long v28 = *(_OWORD *)(v21 - 24);
              *(void *)(v22 + 16) = *((void *)v21 - 1);
              *(_OWORD *)unint64_t v22 = v28;
            }
            uint64_t v24 = v6;
            v21 -= 24;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            if (v26 != v6 || v22 >= (unint64_t)v6)
            {
              long long v27 = *(_OWORD *)v24;
              *(void *)(v22 + 16) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v22 = v27;
            }
            unint64_t v32 = v6 - 24;
            if (v24 <= v7) {
              break;
            }
          }
          v22 -= 24;
          int64_t v6 = v24;
        }
        while (v21 > v4);
      }
LABEL_65:
      sub_1C06359B4((void **)&v32, (const void **)&v31, &v30);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    size_t v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    uint64_t v13 = &v4[v12];
    uint64_t v30 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      while (1)
      {
        unint64_t v14 = v6[16];
        if (!v6[16]) {
          goto LABEL_11;
        }
        if (v14 == 1) {
          break;
        }
        if (*(_OWORD *)v6 == 0) {
          unint64_t v14 = 3;
        }
        else {
          unint64_t v14 = 1;
        }
        unint64_t v15 = v4[16];
        if (!v4[16]) {
          goto LABEL_19;
        }
LABEL_17:
        if (v15 == 1)
        {
          unint64_t v15 = 2;
LABEL_19:
          if (v14 >= v15) {
            goto LABEL_28;
          }
          goto LABEL_20;
        }
        if (*(_OWORD *)v4 == 0) {
          unint64_t v18 = 3;
        }
        else {
          unint64_t v18 = 1;
        }
        if (v14 >= v18)
        {
LABEL_28:
          if (v7 != v4)
          {
            long long v19 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v19;
          }
          v4 += 24;
          unint64_t v31 = v4;
          uint64_t v16 = v6;
          goto LABEL_31;
        }
LABEL_20:
        uint64_t v16 = v6 + 24;
        if (v7 < v6 || v7 >= v16 || v7 != v6)
        {
          long long v17 = *(_OWORD *)v6;
          *((void *)v7 + 2) = *((void *)v6 + 2);
          *(_OWORD *)uint64_t v7 = v17;
        }
LABEL_31:
        v7 += 24;
        if (v4 < v13)
        {
          int64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        unint64_t v32 = v7;
        goto LABEL_65;
      }
      unint64_t v14 = 2;
LABEL_11:
      unint64_t v15 = v4[16];
      if (!v4[16]) {
        goto LABEL_19;
      }
      goto LABEL_17;
    }
    goto LABEL_65;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C036435C(uint64_t a1)
{
  return sub_1C035F0AC(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C0364368(uint64_t a1)
{
  return sub_1C035ED74(a1, *(void *)(v1 + 32));
}

uint64_t sub_1C0364374()
{
  return (*(uint64_t (**)(void, void, void))(v0[3] + 32))(v0[4], v0[5], v0[2]);
}

uint64_t sub_1C03643BC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t dispatch thunk of FeedGroupEmitterRuleType.evaluate(cursor:slots:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

void *sub_1C03645BC(void *a1, void *a2)
{
  if (a1 == a2) {
    return a1;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;
  unint64_t v9 = v7 + 24;
  if (v8 <= v9) {
    size_t v10 = v9;
  }
  else {
    size_t v10 = v8;
  }
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84)) {
    size_t v13 = *(void *)(v12 + 64);
  }
  else {
    size_t v13 = *(void *)(v12 + 64) + 1;
  }
  if (v10 <= v13) {
    unint64_t v14 = v13;
  }
  else {
    unint64_t v14 = v10;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = (unsigned __int8 *)a1 + v15;
  if (v15 > 3) {
    goto LABEL_15;
  }
  unsigned int v18 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v18 > 0xFFDB)
  {
    unsigned int v17 = *(_DWORD *)v16;
    goto LABEL_20;
  }
  if (v18 <= 0xDB) {
LABEL_15:
  }
    unsigned int v17 = *v16;
  else {
    unsigned int v17 = *(unsigned __int16 *)v16;
  }
LABEL_20:
  unsigned int v19 = v17 - 36;
  if (v17 >= 0x24)
  {
    if (v15 <= 3) {
      uint64_t v20 = v15;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *(unsigned __int8 *)a1;
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 2:
        int v21 = *(unsigned __int16 *)a1;
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 3:
        int v21 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 4:
        int v21 = *(_DWORD *)a1;
        if (v15 < 4) {
LABEL_28:
        }
          unsigned int v17 = (v21 | (v19 << (8 * v15))) + 36;
        else {
LABEL_32:
        }
          unsigned int v17 = v21 + 36;
        break;
      default:
        break;
    }
  }
  switch(v17)
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 0xCu:
    case 0xDu:
      (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      break;
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
      swift_bridgeObjectRelease();
      break;
    case 0x1Au:
    case 0x1Bu:
      if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11)) {
        (*(void (**)(void *, uint64_t))(v12 + 8))(a1, v11);
      }
      break;
    case 0x23u:
      swift_release();
      break;
    default:
      break;
  }
  if (v15 > 3) {
    goto LABEL_36;
  }
  unsigned int v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v23 > 0xFFDB)
  {
    unsigned int v22 = *(_DWORD *)((char *)a2 + v15);
    goto LABEL_41;
  }
  if (v23 <= 0xDB) {
LABEL_36:
  }
    unsigned int v22 = *((unsigned __int8 *)a2 + v15);
  else {
    unsigned int v22 = *(unsigned __int16 *)((char *)a2 + v15);
  }
LABEL_41:
  unsigned int v24 = v22 - 36;
  if (v22 >= 0x24)
  {
    if (v15 <= 3) {
      uint64_t v25 = v15;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *(unsigned __int8 *)a2;
        if (v15 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 2:
        int v26 = *(unsigned __int16 *)a2;
        if (v15 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 3:
        int v26 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
        if (v15 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 4:
        int v26 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_50:
        }
          unsigned int v22 = (v26 | (v24 << (8 * v15))) + 36;
        else {
LABEL_54:
        }
          unsigned int v22 = v26 + 36;
        break;
      default:
        break;
    }
  }
  switch(v22)
  {
    case 0u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v15 <= 3)
      {
        unsigned int v27 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v27 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 0;
          return a1;
        }
        if (v27 > 0xDB)
        {
          *(_WORD *)uint64_t v16 = 0;
          return a1;
        }
      }
      *uint64_t v16 = 0;
      break;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v15 <= 3)
      {
        __int16 v28 = 1;
        unsigned int v29 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v29 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 1;
          return a1;
        }
        if (v29 > 0xDB) {
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 1;
      break;
    case 2u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 2;
          return a1;
        }
        if (v30 > 0xDB)
        {
          __int16 v28 = 2;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 2;
      break;
    case 3u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v31 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 3;
          return a1;
        }
        if (v31 > 0xDB)
        {
          __int16 v28 = 3;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 3;
      break;
    case 4u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 4;
          return a1;
        }
        if (v32 > 0xDB)
        {
          __int16 v28 = 4;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 4;
      break;
    case 5u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v33 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v34 = *(void *)(v33 + 16);
      unint64_t v35 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v35 = *(_OWORD *)v33;
      *(void *)(v35 + 16) = v34;
      if (v15 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 5;
          return a1;
        }
        if (v36 > 0xDB)
        {
          __int16 v28 = 5;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 5;
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 6;
          return a1;
        }
        if (v37 > 0xDB)
        {
          __int16 v28 = 6;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 6;
      break;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 7;
          return a1;
        }
        if (v38 > 0xDB)
        {
          __int16 v28 = 7;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 7;
      break;
    case 8u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 8;
          return a1;
        }
        if (v39 > 0xDB)
        {
          __int16 v28 = 8;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 8;
      break;
    case 9u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 9;
          return a1;
        }
        if (v40 > 0xDB)
        {
          __int16 v28 = 9;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 10;
          return a1;
        }
        if (v41 > 0xDB)
        {
          __int16 v28 = 10;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 10;
      break;
    case 0xBu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 11;
          return a1;
        }
        if (v42 > 0xDB)
        {
          __int16 v28 = 11;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 11;
      break;
    case 0xCu:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 12;
          return a1;
        }
        if (v43 > 0xDB)
        {
          __int16 v28 = 12;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 12;
      break;
    case 0xDu:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 13;
          return a1;
        }
        if (v44 > 0xDB)
        {
          __int16 v28 = 13;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 13;
      break;
    case 0xEu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 14;
          return a1;
        }
        if (v45 > 0xDB)
        {
          __int16 v28 = 14;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 15;
          return a1;
        }
        if (v46 > 0xDB)
        {
          __int16 v28 = 15;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 15;
      break;
    case 0x10u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 16;
          return a1;
        }
        if (v47 > 0xDB)
        {
          __int16 v28 = 16;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 16;
      break;
    case 0x11u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 17;
          return a1;
        }
        if (v48 > 0xDB)
        {
          __int16 v28 = 17;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 17;
      break;
    case 0x12u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 18;
          return a1;
        }
        if (v49 > 0xDB)
        {
          __int16 v28 = 18;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 18;
      break;
    case 0x13u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 19;
          return a1;
        }
        if (v50 > 0xDB)
        {
          __int16 v28 = 19;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 19;
      break;
    case 0x14u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 20;
          return a1;
        }
        if (v51 > 0xDB)
        {
          __int16 v28 = 20;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 20;
      break;
    case 0x15u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 21;
          return a1;
        }
        if (v52 > 0xDB)
        {
          __int16 v28 = 21;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 21;
      break;
    case 0x16u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 22;
          return a1;
        }
        if (v53 > 0xDB)
        {
          __int16 v28 = 22;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 22;
      break;
    case 0x17u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 23;
          return a1;
        }
        if (v54 > 0xDB)
        {
          __int16 v28 = 23;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 23;
      break;
    case 0x18u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v55 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 24;
          return a1;
        }
        if (v55 > 0xDB)
        {
          __int16 v28 = 24;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 24;
      break;
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 25;
          return a1;
        }
        if (v56 > 0xDB)
        {
          __int16 v28 = 25;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v68 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v68 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 26;
          return a1;
        }
        if (v68 > 0xDB)
        {
          __int16 v28 = 26;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v67 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v67 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 27;
          return a1;
        }
        if (v67 > 0xDB)
        {
          __int16 v28 = 27;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 27;
      break;
    case 0x1Cu:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 28;
          return a1;
        }
        if (v57 > 0xDB)
        {
          __int16 v28 = 28;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 28;
      break;
    case 0x1Du:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v58 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 29;
          return a1;
        }
        if (v58 > 0xDB)
        {
          __int16 v28 = 29;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 29;
      break;
    case 0x1Eu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v59 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 30;
          return a1;
        }
        if (v59 > 0xDB)
        {
          __int16 v28 = 30;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 30;
      break;
    case 0x1Fu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v60 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v60 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 31;
          return a1;
        }
        if (v60 > 0xDB)
        {
          __int16 v28 = 31;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 31;
      break;
    case 0x20u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v61 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v61 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 32;
          return a1;
        }
        if (v61 > 0xDB)
        {
          __int16 v28 = 32;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 32;
      break;
    case 0x21u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v62 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 33;
          return a1;
        }
        if (v62 > 0xDB)
        {
          __int16 v28 = 33;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 33;
      break;
    case 0x22u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v63 > 0xFFDB)
        {
          *(_DWORD *)uint64_t v16 = 34;
          return a1;
        }
        if (v63 > 0xDB)
        {
          __int16 v28 = 34;
          goto LABEL_286;
        }
      }
      *uint64_t v16 = 34;
      break;
    case 0x23u:
      *a1 = *a2;
      swift_retain();
      if (v15 > 3) {
        goto LABEL_196;
      }
      unsigned int v64 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v64 > 0xFFDB)
      {
        *(_DWORD *)uint64_t v16 = 35;
        return a1;
      }
      if (v64 > 0xDB)
      {
        __int16 v28 = 35;
LABEL_286:
        *(_WORD *)uint64_t v16 = v28;
      }
      else
      {
LABEL_196:
        *uint64_t v16 = 35;
      }
      break;
    default:
      if (v15 > 3) {
        goto LABEL_201;
      }
      unsigned int v65 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      uint64_t v66 = 2;
      if (v65 > 0xFFDB) {
        uint64_t v66 = 4;
      }
      if (v65 <= 0xDB) {
LABEL_201:
      }
        uint64_t v66 = 1;
      memcpy(a1, a2, v66 + v15);
      break;
  }
  return a1;
}

unsigned __int8 *sub_1C0365A74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;
  unint64_t v9 = v7 + 24;
  if (v8 <= v9) {
    size_t v10 = v9;
  }
  else {
    size_t v10 = v8;
  }
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84)) {
    size_t v13 = *(void *)(v12 + 64);
  }
  else {
    size_t v13 = *(void *)(v12 + 64) + 1;
  }
  if (v10 <= v13) {
    unint64_t v14 = v13;
  }
  else {
    unint64_t v14 = v10;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  if (v15 > 3) {
    goto LABEL_14;
  }
  unsigned int v17 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v17 > 0xFFDB)
  {
    unsigned int v16 = *(_DWORD *)&a2[v15];
  }
  else
  {
    if (v17 <= 0xDB)
    {
LABEL_14:
      unsigned int v16 = a2[v15];
      goto LABEL_19;
    }
    unsigned int v16 = *(unsigned __int16 *)&a2[v15];
  }
LABEL_19:
  unsigned int v18 = v16 - 36;
  if (v16 >= 0x24)
  {
    if (v15 <= 3) {
      uint64_t v19 = v15;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        if (v15 < 4) {
          goto LABEL_31;
        }
        goto LABEL_32;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v15 >= 4) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 >= 4) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_31:
        }
          v20 |= v18 << (8 * v15);
LABEL_32:
        unsigned int v16 = v20 + 36;
        break;
      default:
        break;
    }
  }
  switch(v16)
  {
    case 0u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        unsigned int v21 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v21 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 0;
          return a1;
        }
        if (v21 > 0xDB)
        {
          *(_WORD *)&a1[v15] = 0;
          return a1;
        }
      }
      a1[v15] = 0;
      break;
    case 1u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        __int16 v22 = 1;
        unsigned int v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v23 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 1;
          return a1;
        }
        if (v23 > 0xDB) {
          goto LABEL_261;
        }
      }
      a1[v15] = 1;
      break;
    case 2u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v24 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v24 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 2;
          return a1;
        }
        if (v24 > 0xDB)
        {
          __int16 v22 = 2;
          goto LABEL_261;
        }
      }
      a1[v15] = 2;
      break;
    case 3u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v25 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v25 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 3;
          return a1;
        }
        if (v25 > 0xDB)
        {
          __int16 v22 = 3;
          goto LABEL_261;
        }
      }
      a1[v15] = 3;
      break;
    case 4u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v26 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v26 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 4;
          return a1;
        }
        if (v26 > 0xDB)
        {
          __int16 v22 = 4;
          goto LABEL_261;
        }
      }
      a1[v15] = 4;
      break;
    case 5u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v27 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v28 = *(void *)(v27 + 16);
      unint64_t v29 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v29 = *(_OWORD *)v27;
      *(void *)(v29 + 16) = v28;
      if (v15 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 5;
          return a1;
        }
        if (v30 > 0xDB)
        {
          __int16 v22 = 5;
          goto LABEL_261;
        }
      }
      a1[v15] = 5;
      break;
    case 6u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v31 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 6;
          return a1;
        }
        if (v31 > 0xDB)
        {
          __int16 v22 = 6;
          goto LABEL_261;
        }
      }
      a1[v15] = 6;
      break;
    case 7u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 7;
          return a1;
        }
        if (v32 > 0xDB)
        {
          __int16 v22 = 7;
          goto LABEL_261;
        }
      }
      a1[v15] = 7;
      break;
    case 8u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v33 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 8;
          return a1;
        }
        if (v33 > 0xDB)
        {
          __int16 v22 = 8;
          goto LABEL_261;
        }
      }
      a1[v15] = 8;
      break;
    case 9u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v34 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v34 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 9;
          return a1;
        }
        if (v34 > 0xDB)
        {
          __int16 v22 = 9;
          goto LABEL_261;
        }
      }
      a1[v15] = 9;
      break;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v35 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v35 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 10;
          return a1;
        }
        if (v35 > 0xDB)
        {
          __int16 v22 = 10;
          goto LABEL_261;
        }
      }
      a1[v15] = 10;
      break;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 11;
          return a1;
        }
        if (v36 > 0xDB)
        {
          __int16 v22 = 11;
          goto LABEL_261;
        }
      }
      a1[v15] = 11;
      break;
    case 0xCu:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 12;
          return a1;
        }
        if (v37 > 0xDB)
        {
          __int16 v22 = 12;
          goto LABEL_261;
        }
      }
      a1[v15] = 12;
      break;
    case 0xDu:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 13;
          return a1;
        }
        if (v38 > 0xDB)
        {
          __int16 v22 = 13;
          goto LABEL_261;
        }
      }
      a1[v15] = 13;
      break;
    case 0xEu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 14;
          return a1;
        }
        if (v39 > 0xDB)
        {
          __int16 v22 = 14;
          goto LABEL_261;
        }
      }
      a1[v15] = 14;
      break;
    case 0xFu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 15;
          return a1;
        }
        if (v40 > 0xDB)
        {
          __int16 v22 = 15;
          goto LABEL_261;
        }
      }
      a1[v15] = 15;
      break;
    case 0x10u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 16;
          return a1;
        }
        if (v41 > 0xDB)
        {
          __int16 v22 = 16;
          goto LABEL_261;
        }
      }
      a1[v15] = 16;
      break;
    case 0x11u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 17;
          return a1;
        }
        if (v42 > 0xDB)
        {
          __int16 v22 = 17;
          goto LABEL_261;
        }
      }
      a1[v15] = 17;
      break;
    case 0x12u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 18;
          return a1;
        }
        if (v43 > 0xDB)
        {
          __int16 v22 = 18;
          goto LABEL_261;
        }
      }
      a1[v15] = 18;
      break;
    case 0x13u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 19;
          return a1;
        }
        if (v44 > 0xDB)
        {
          __int16 v22 = 19;
          goto LABEL_261;
        }
      }
      a1[v15] = 19;
      break;
    case 0x14u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 20;
          return a1;
        }
        if (v45 > 0xDB)
        {
          __int16 v22 = 20;
          goto LABEL_261;
        }
      }
      a1[v15] = 20;
      break;
    case 0x15u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 21;
          return a1;
        }
        if (v46 > 0xDB)
        {
          __int16 v22 = 21;
          goto LABEL_261;
        }
      }
      a1[v15] = 21;
      break;
    case 0x16u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 22;
          return a1;
        }
        if (v47 > 0xDB)
        {
          __int16 v22 = 22;
          goto LABEL_261;
        }
      }
      a1[v15] = 22;
      break;
    case 0x17u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 23;
          return a1;
        }
        if (v48 > 0xDB)
        {
          __int16 v22 = 23;
          goto LABEL_261;
        }
      }
      a1[v15] = 23;
      break;
    case 0x18u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 24;
          return a1;
        }
        if (v49 > 0xDB)
        {
          __int16 v22 = 24;
          goto LABEL_261;
        }
      }
      a1[v15] = 24;
      break;
    case 0x19u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 25;
          return a1;
        }
        if (v50 > 0xDB)
        {
          __int16 v22 = 25;
          goto LABEL_261;
        }
      }
      a1[v15] = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v62 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 26;
          return a1;
        }
        if (v62 > 0xDB)
        {
          __int16 v22 = 26;
          goto LABEL_261;
        }
      }
      a1[v15] = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v61 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v61 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 27;
          return a1;
        }
        if (v61 > 0xDB)
        {
          __int16 v22 = 27;
          goto LABEL_261;
        }
      }
      a1[v15] = 27;
      break;
    case 0x1Cu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v15 <= 3)
      {
        unsigned int v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 28;
          return a1;
        }
        if (v51 > 0xDB)
        {
          __int16 v22 = 28;
          goto LABEL_261;
        }
      }
      a1[v15] = 28;
      break;
    case 0x1Du:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 29;
          return a1;
        }
        if (v52 > 0xDB)
        {
          __int16 v22 = 29;
          goto LABEL_261;
        }
      }
      a1[v15] = 29;
      break;
    case 0x1Eu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 30;
          return a1;
        }
        if (v53 > 0xDB)
        {
          __int16 v22 = 30;
          goto LABEL_261;
        }
      }
      a1[v15] = 30;
      break;
    case 0x1Fu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 31;
          return a1;
        }
        if (v54 > 0xDB)
        {
          __int16 v22 = 31;
          goto LABEL_261;
        }
      }
      a1[v15] = 31;
      break;
    case 0x20u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v55 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 32;
          return a1;
        }
        if (v55 > 0xDB)
        {
          __int16 v22 = 32;
          goto LABEL_261;
        }
      }
      a1[v15] = 32;
      break;
    case 0x21u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 33;
          return a1;
        }
        if (v56 > 0xDB)
        {
          __int16 v22 = 33;
          goto LABEL_261;
        }
      }
      a1[v15] = 33;
      break;
    case 0x22u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDB)
        {
          *(_DWORD *)&a1[v15] = 34;
          return a1;
        }
        if (v57 > 0xDB)
        {
          __int16 v22 = 34;
          goto LABEL_261;
        }
      }
      a1[v15] = 34;
      break;
    case 0x23u:
      *(void *)a1 = *(void *)a2;
      if (v15 > 3) {
        goto LABEL_171;
      }
      unsigned int v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v58 > 0xFFDB)
      {
        *(_DWORD *)&a1[v15] = 35;
        return a1;
      }
      if (v58 > 0xDB)
      {
        __int16 v22 = 35;
LABEL_261:
        *(_WORD *)&a1[v15] = v22;
      }
      else
      {
LABEL_171:
        a1[v15] = 35;
      }
      break;
    default:
      if (v15 > 3) {
        goto LABEL_176;
      }
      unsigned int v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      uint64_t v60 = 2;
      if (v59 > 0xFFDB) {
        uint64_t v60 = 4;
      }
      if (v59 <= 0xDB) {
LABEL_176:
      }
        uint64_t v60 = 1;
      memcpy(a1, a2, v60 + v15);
      break;
  }
  return a1;
}

unsigned __int8 *sub_1C0366C94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;
  unint64_t v9 = v7 + 24;
  if (v8 <= v9) {
    size_t v10 = v9;
  }
  else {
    size_t v10 = v8;
  }
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84)) {
    size_t v13 = *(void *)(v12 + 64);
  }
  else {
    size_t v13 = *(void *)(v12 + 64) + 1;
  }
  if (v10 <= v13) {
    unint64_t v14 = v13;
  }
  else {
    unint64_t v14 = v10;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  unsigned int v16 = &a1[v15];
  if (v15 > 3) {
    goto LABEL_15;
  }
  unsigned int v18 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v18 > 0xFFDB)
  {
    unsigned int v17 = *(_DWORD *)v16;
    goto LABEL_20;
  }
  if (v18 <= 0xDB) {
LABEL_15:
  }
    unsigned int v17 = *v16;
  else {
    unsigned int v17 = *(unsigned __int16 *)v16;
  }
LABEL_20:
  unsigned int v19 = v17 - 36;
  if (v17 >= 0x24)
  {
    if (v15 <= 3) {
      uint64_t v20 = v15;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a1;
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 2:
        int v21 = *(unsigned __int16 *)a1;
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 3:
        int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 4:
        int v21 = *(_DWORD *)a1;
        if (v15 < 4) {
LABEL_28:
        }
          unsigned int v17 = (v21 | (v19 << (8 * v15))) + 36;
        else {
LABEL_32:
        }
          unsigned int v17 = v21 + 36;
        break;
      default:
        break;
    }
  }
  switch(v17)
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 0xCu:
    case 0xDu:
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      break;
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
      swift_bridgeObjectRelease();
      break;
    case 0x1Au:
    case 0x1Bu:
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(a1, v11);
      }
      break;
    case 0x23u:
      swift_release();
      break;
    default:
      break;
  }
  if (v15 > 3) {
    goto LABEL_36;
  }
  unsigned int v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v23 > 0xFFDB)
  {
    unsigned int v22 = *(_DWORD *)&a2[v15];
    goto LABEL_41;
  }
  if (v23 <= 0xDB) {
LABEL_36:
  }
    unsigned int v22 = a2[v15];
  else {
    unsigned int v22 = *(unsigned __int16 *)&a2[v15];
  }
LABEL_41:
  unsigned int v24 = v22 - 36;
  if (v22 >= 0x24)
  {
    if (v15 <= 3) {
      uint64_t v25 = v15;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *a2;
        if (v15 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 2:
        int v26 = *(unsigned __int16 *)a2;
        if (v15 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 3:
        int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 4:
        int v26 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_50:
        }
          unsigned int v22 = (v26 | (v24 << (8 * v15))) + 36;
        else {
LABEL_54:
        }
          unsigned int v22 = v26 + 36;
        break;
      default:
        break;
    }
  }
  switch(v22)
  {
    case 0u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        unsigned int v27 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v27 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 0;
          return a1;
        }
        if (v27 > 0xDB)
        {
          *(_WORD *)unsigned int v16 = 0;
          return a1;
        }
      }
      *unsigned int v16 = 0;
      break;
    case 1u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        __int16 v28 = 1;
        unsigned int v29 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v29 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 1;
          return a1;
        }
        if (v29 > 0xDB) {
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 1;
      break;
    case 2u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 2;
          return a1;
        }
        if (v30 > 0xDB)
        {
          __int16 v28 = 2;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 2;
      break;
    case 3u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v31 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 3;
          return a1;
        }
        if (v31 > 0xDB)
        {
          __int16 v28 = 3;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 3;
      break;
    case 4u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 4;
          return a1;
        }
        if (v32 > 0xDB)
        {
          __int16 v28 = 4;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 4;
      break;
    case 5u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v33 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v34 = *(void *)(v33 + 16);
      unint64_t v35 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v35 = *(_OWORD *)v33;
      *(void *)(v35 + 16) = v34;
      if (v15 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 5;
          return a1;
        }
        if (v36 > 0xDB)
        {
          __int16 v28 = 5;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 5;
      break;
    case 6u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 6;
          return a1;
        }
        if (v37 > 0xDB)
        {
          __int16 v28 = 6;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 6;
      break;
    case 7u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 7;
          return a1;
        }
        if (v38 > 0xDB)
        {
          __int16 v28 = 7;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 7;
      break;
    case 8u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 8;
          return a1;
        }
        if (v39 > 0xDB)
        {
          __int16 v28 = 8;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 8;
      break;
    case 9u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 9;
          return a1;
        }
        if (v40 > 0xDB)
        {
          __int16 v28 = 9;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 9;
      break;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 10;
          return a1;
        }
        if (v41 > 0xDB)
        {
          __int16 v28 = 10;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 10;
      break;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 11;
          return a1;
        }
        if (v42 > 0xDB)
        {
          __int16 v28 = 11;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 11;
      break;
    case 0xCu:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 12;
          return a1;
        }
        if (v43 > 0xDB)
        {
          __int16 v28 = 12;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 12;
      break;
    case 0xDu:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 13;
          return a1;
        }
        if (v44 > 0xDB)
        {
          __int16 v28 = 13;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 13;
      break;
    case 0xEu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 14;
          return a1;
        }
        if (v45 > 0xDB)
        {
          __int16 v28 = 14;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 14;
      break;
    case 0xFu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 15;
          return a1;
        }
        if (v46 > 0xDB)
        {
          __int16 v28 = 15;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 15;
      break;
    case 0x10u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 16;
          return a1;
        }
        if (v47 > 0xDB)
        {
          __int16 v28 = 16;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 16;
      break;
    case 0x11u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 17;
          return a1;
        }
        if (v48 > 0xDB)
        {
          __int16 v28 = 17;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 17;
      break;
    case 0x12u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 18;
          return a1;
        }
        if (v49 > 0xDB)
        {
          __int16 v28 = 18;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 18;
      break;
    case 0x13u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 19;
          return a1;
        }
        if (v50 > 0xDB)
        {
          __int16 v28 = 19;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 19;
      break;
    case 0x14u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 20;
          return a1;
        }
        if (v51 > 0xDB)
        {
          __int16 v28 = 20;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 20;
      break;
    case 0x15u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 21;
          return a1;
        }
        if (v52 > 0xDB)
        {
          __int16 v28 = 21;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 21;
      break;
    case 0x16u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 22;
          return a1;
        }
        if (v53 > 0xDB)
        {
          __int16 v28 = 22;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 22;
      break;
    case 0x17u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 23;
          return a1;
        }
        if (v54 > 0xDB)
        {
          __int16 v28 = 23;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 23;
      break;
    case 0x18u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v55 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 24;
          return a1;
        }
        if (v55 > 0xDB)
        {
          __int16 v28 = 24;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 24;
      break;
    case 0x19u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 25;
          return a1;
        }
        if (v56 > 0xDB)
        {
          __int16 v28 = 25;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v68 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v68 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 26;
          return a1;
        }
        if (v68 > 0xDB)
        {
          __int16 v28 = 26;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v67 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v67 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 27;
          return a1;
        }
        if (v67 > 0xDB)
        {
          __int16 v28 = 27;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 27;
      break;
    case 0x1Cu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v15 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 28;
          return a1;
        }
        if (v57 > 0xDB)
        {
          __int16 v28 = 28;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 28;
      break;
    case 0x1Du:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v58 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 29;
          return a1;
        }
        if (v58 > 0xDB)
        {
          __int16 v28 = 29;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 29;
      break;
    case 0x1Eu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v59 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 30;
          return a1;
        }
        if (v59 > 0xDB)
        {
          __int16 v28 = 30;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 30;
      break;
    case 0x1Fu:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v60 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v60 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 31;
          return a1;
        }
        if (v60 > 0xDB)
        {
          __int16 v28 = 31;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 31;
      break;
    case 0x20u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v61 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v61 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 32;
          return a1;
        }
        if (v61 > 0xDB)
        {
          __int16 v28 = 32;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 32;
      break;
    case 0x21u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v62 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 33;
          return a1;
        }
        if (v62 > 0xDB)
        {
          __int16 v28 = 33;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 33;
      break;
    case 0x22u:
      *(void *)a1 = *(void *)a2;
      if (v15 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v63 > 0xFFDB)
        {
          *(_DWORD *)unsigned int v16 = 34;
          return a1;
        }
        if (v63 > 0xDB)
        {
          __int16 v28 = 34;
          goto LABEL_286;
        }
      }
      *unsigned int v16 = 34;
      break;
    case 0x23u:
      *(void *)a1 = *(void *)a2;
      if (v15 > 3) {
        goto LABEL_196;
      }
      unsigned int v64 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v64 > 0xFFDB)
      {
        *(_DWORD *)unsigned int v16 = 35;
        return a1;
      }
      if (v64 > 0xDB)
      {
        __int16 v28 = 35;
LABEL_286:
        *(_WORD *)unsigned int v16 = v28;
      }
      else
      {
LABEL_196:
        *unsigned int v16 = 35;
      }
      break;
    default:
      if (v15 > 3) {
        goto LABEL_201;
      }
      unsigned int v65 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      uint64_t v66 = 2;
      if (v65 > 0xFFDB) {
        uint64_t v66 = 4;
      }
      if (v65 <= 0xDB) {
LABEL_201:
      }
        uint64_t v66 = 1;
      memcpy(a1, a2, v66 + v15);
      break;
  }
  return a1;
}

uint64_t sub_1C03680DC(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = v4 + 8;
  unint64_t v6 = v4 + 24;
  if (v5 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = v5;
  }
  uint64_t v8 = *(void *)(sub_1C151928C() - 8);
  if (*(_DWORD *)(v8 + 84)) {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64) + 1;
  }
  if (v7 > v9) {
    unint64_t v9 = v7;
  }
  if (v9 <= 0x10) {
    unint64_t v9 = 16;
  }
  if (v9 > 3)
  {
    int v10 = 37;
LABEL_15:
    char v12 = 8;
    goto LABEL_16;
  }
  unsigned int v11 = ((1 << (8 * v9)) + 3) >> (8 * v9);
  if (v11 > 0xFFDB) {
    goto LABEL_19;
  }
  int v10 = v11 + 36;
  if (v11 <= 0xDB) {
    goto LABEL_15;
  }
  char v12 = 16;
LABEL_16:
  unsigned int v13 = (1 << v12) - v10;
  if ((v13 & 0x80000000) == 0)
  {
    if (v9 > 3) {
      goto LABEL_23;
    }
LABEL_20:
    unsigned int v14 = ((1 << (8 * v9)) + 3) >> (8 * v9);
    uint64_t v15 = 2;
    if (v14 > 0xFFDB) {
      uint64_t v15 = 4;
    }
    if (v14 > 0xDB) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_19:
  unsigned int v13 = 0x7FFFFFFF;
  if (v9 <= 3) {
    goto LABEL_20;
  }
LABEL_23:
  uint64_t v15 = 1;
LABEL_24:
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_43;
  }
  unint64_t v16 = v15 + v9;
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((a2 - v13 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    if (v19 < 2)
    {
LABEL_43:
      if (v13)
      {
        if (v9 <= 3)
        {
          unsigned int v27 = ((1 << (8 * v9)) + 3) >> (8 * v9);
          if (v27 > 0xFFDB)
          {
            unsigned int v22 = *(_DWORD *)((char *)a1 + v9);
            unsigned int v23 = ~v22;
LABEL_53:
            unsigned int v30 = 0x7FFFFFFF;
LABEL_54:
            if (v30 > v23) {
              return -v22;
            }
            else {
              return 0;
            }
          }
          int v25 = v27 + 36;
          if (v27 > 0xDB)
          {
            int v29 = *(unsigned __int16 *)((char *)a1 + v9);
            unsigned int v22 = v29 | 0xFFFF0000;
            unsigned int v23 = v29 ^ 0xFFFF;
            char v24 = 16;
          }
          else
          {
            int v28 = *((unsigned __int8 *)a1 + v9);
            unsigned int v22 = v28 | 0xFFFFFF00;
            unsigned int v23 = v28 ^ 0xFF;
            char v24 = 8;
          }
        }
        else
        {
          int v21 = *((unsigned __int8 *)a1 + v9);
          unsigned int v22 = v21 | 0xFFFFFF00;
          unsigned int v23 = v21 ^ 0xFF;
          char v24 = 8;
          int v25 = 37;
        }
        unsigned int v30 = (1 << v24) - v25;
        if ((v30 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        goto LABEL_53;
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_43;
  }
LABEL_35:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 > 3) {
      LODWORD(v16) = 4;
    }
    switch((int)v16)
    {
      case 2:
        LODWORD(v16) = *a1;
        break;
      case 3:
        LODWORD(v16) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v16) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v16) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v13 + (v16 | v20) + 1;
}

void sub_1C0368490(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v6 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = v6 + 8;
  unint64_t v8 = v6 + 24;
  if (v7 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = v7;
  }
  uint64_t v10 = *(void *)(sub_1C151928C() - 8);
  if (*(_DWORD *)(v10 + 84)) {
    unint64_t v11 = *(void *)(v10 + 64);
  }
  else {
    unint64_t v11 = *(void *)(v10 + 64) + 1;
  }
  if (v9 > v11) {
    unint64_t v11 = v9;
  }
  if (v11 <= 0x10) {
    unint64_t v11 = 16;
  }
  char v12 = 8 * v11;
  if (v11 > 3)
  {
    int v13 = 37;
LABEL_13:
    char v14 = 8;
    goto LABEL_14;
  }
  unsigned int v16 = ((1 << v12) + 3) >> v12;
  if (v16 > 0xFFDB) {
    goto LABEL_20;
  }
  int v13 = v16 + 36;
  if (v16 <= 0xDB) {
    goto LABEL_13;
  }
  char v14 = 16;
LABEL_14:
  unsigned int v15 = (1 << v14) - v13;
  if ((v15 & 0x80000000) == 0)
  {
    if (v11 > 3) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_20:
  unsigned int v15 = 0x7FFFFFFF;
  if (v11 > 3)
  {
LABEL_24:
    uint64_t v18 = 1;
    goto LABEL_25;
  }
LABEL_21:
  unsigned int v17 = ((1 << v12) + 3) >> v12;
  uint64_t v18 = 2;
  if (v17 > 0xFFDB) {
    uint64_t v18 = 4;
  }
  if (v17 <= 0xDB) {
    goto LABEL_24;
  }
LABEL_25:
  size_t v19 = v18 + v11;
  if (a3 <= v15)
  {
    int v20 = 0;
  }
  else if (v19 <= 3)
  {
    unsigned int v23 = ((a3 - v15 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v23))
    {
      int v20 = 4;
    }
    else if (v23 >= 0x100)
    {
      int v20 = 2;
    }
    else
    {
      int v20 = v23 > 1;
    }
  }
  else
  {
    int v20 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v21 = ~v15 + a2;
    if (v19 < 4)
    {
      int v22 = (v21 >> (8 * v19)) + 1;
      if (v19)
      {
        int v24 = v21 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v21;
      int v22 = 1;
    }
    switch(v20)
    {
      case 1:
        a1[v19] = v22;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v22;
        return;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)&a1[v19] = v22;
        return;
      default:
        return;
    }
  }
  switch(v20)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 3:
LABEL_61:
      __break(1u);
      JUMPOUT(0x1C0368860);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_44;
    default:
LABEL_44:
      if (!a2) {
        return;
      }
LABEL_45:
      int v25 = -a2;
      if (v11 > 3) {
        goto LABEL_46;
      }
      unsigned int v26 = ((1 << v12) + 3) >> v12;
      if (v26 > 0xFFDB)
      {
        *(_DWORD *)&a1[v11] = v25;
      }
      else if (v26 <= 0xDB)
      {
LABEL_46:
        a1[v11] = v25;
      }
      else
      {
        *(_WORD *)&a1[v11] = v25;
      }
      return;
  }
}

uint64_t sub_1C0368888(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = v2 + 8;
  unint64_t v4 = v2 + 24;
  if (v3 <= v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = v3;
  }
  uint64_t v6 = *(void *)(sub_1C151928C() - 8);
  if (*(_DWORD *)(v6 + 84)) {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64) + 1;
  }
  if (v5 > v7) {
    unint64_t v7 = v5;
  }
  if (v7 <= 0x10) {
    unint64_t v7 = 16;
  }
  if (v7 > 3) {
    goto LABEL_12;
  }
  unsigned int v9 = ((1 << (8 * v7)) + 3) >> (8 * v7);
  if (v9 > 0xFFDB)
  {
    uint64_t result = *(unsigned int *)&a1[v7];
  }
  else
  {
    if (v9 <= 0xDB)
    {
LABEL_12:
      uint64_t result = a1[v7];
      goto LABEL_17;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v7];
  }
LABEL_17:
  if (result >= 0x24)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        if (v7 < 4) {
          goto LABEL_27;
        }
        goto LABEL_29;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        if (v7 >= 4) {
          goto LABEL_29;
        }
        goto LABEL_27;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v7 < 4) {
          goto LABEL_27;
        }
        goto LABEL_29;
      case 4:
        int v11 = *(_DWORD *)a1;
        if (v7 < 4) {
LABEL_27:
        }
          uint64_t result = (v11 | ((result - 36) << (8 * v7))) + 36;
        else {
LABEL_29:
        }
          uint64_t result = (v11 + 36);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C0368AE0(unsigned char *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = v4 + 8;
  unint64_t v6 = v4 + 24;
  if (v5 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = v5;
  }
  uint64_t v8 = *(void *)(sub_1C151928C() - 8);
  if (*(_DWORD *)(v8 + 84)) {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64) + 1;
  }
  if (v7 > v9) {
    unint64_t v9 = v7;
  }
  if (v9 <= 0x10) {
    size_t v10 = 16;
  }
  else {
    size_t v10 = v9;
  }
  if (a2 > 0x23)
  {
    unsigned int v11 = a2 - 36;
    if (v10 < 4)
    {
      int v13 = (v11 >> (8 * v10)) + 36;
      v11 &= ~(-1 << (8 * v10));
      char v14 = (int *)&a1[v10];
      unsigned int v15 = ((1 << (8 * v10)) + 3) >> (8 * v10);
      if (v15 > 0xFFDB)
      {
        *char v14 = v13;
      }
      else if (v15 > 0xDB)
      {
        *(_WORD *)char v14 = v13;
      }
      else
      {
        *(unsigned char *)char v14 = v13;
      }
    }
    else
    {
      a1[v10] = 36;
    }
    if (v10 >= 4) {
      int v16 = 4;
    }
    else {
      int v16 = v10;
    }
    bzero(a1, v10);
    switch(v16)
    {
      case 2:
        *(_WORD *)a1 = v11;
        break;
      case 3:
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
        break;
      case 4:
        *(_DWORD *)a1 = v11;
        break;
      default:
        *a1 = v11;
        break;
    }
  }
  else
  {
    if (v10 > 3)
    {
LABEL_14:
      a1[v10] = a2;
      return;
    }
    unsigned int v12 = ((1 << (8 * v10)) + 3) >> (8 * v10);
    if (v12 > 0xFFDB)
    {
      *(_DWORD *)&a1[v10] = a2;
    }
    else
    {
      if (v12 <= 0xDB) {
        goto LABEL_14;
      }
      *(_WORD *)&a1[v10] = a2;
    }
  }
}

uint64_t sub_1C0368D84()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedGroupEmitterCustomRule()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FeedGroupEmitterCustomRule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupEmitterCustomRule);
}

uint64_t dispatch thunk of FeedGroupEmitterCustomRule.__allocating_init(description:block:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C0368E18(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0368E74(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0368EB4(uint64_t result, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  switch((a6 >> 45) & 7)
  {
    case 0uLL:
      uint64_t result = sub_1C00F5AEC(result, a2, a3);
      break;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C0368F0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0368F60(uint64_t a1, uint64_t a2)
{
  sub_1BFDD2EEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0368FC4()
{
  if (!qword_1EA19A188)
  {
    sub_1C151631C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19A188);
    }
  }
}

uint64_t sub_1C036902C()
{
  return sub_1C0362D40();
}

uint64_t sub_1C0369044(uint64_t a1)
{
  return sub_1C0362C54(a1) & 1;
}

uint64_t sub_1C0369060(uint64_t a1)
{
  return sub_1C0362D60(a1) & 1;
}

uint64_t sub_1C036907C(uint64_t a1)
{
  return sub_1C0362D84(a1) & 1;
}

uint64_t FormatAudioTrack.article.getter()
{
  return swift_retain();
}

uint64_t FormatAudioTrack.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAudioTrack.init(article:overrides:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int8x16_t *a3@<X8>, int64x2_t a4@<Q1>)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 24);
  a4.i64[0] = 1;
  int8x16_t v6 = vandq_s8(*(int8x16_t *)(a2 + 8), (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64(*(int64x2_t *)(a2 + 8), a4)).i64[0], 0));
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7 == 1) {
    uint64_t v4 = 0;
  }
  a3->i64[0] = result;
  a3->i64[1] = v4;
  if (v7 == 1) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v5;
  }
  a3[1] = v6;
  a3[2].i64[0] = v8;
  return result;
}

NewsFeed::FormatAudioTrack::Overrides __swiftcall FormatAudioTrack.Overrides.init(title:featureName:)(Swift::String_optional title, Swift::String_optional featureName)
{
  Swift::String_optional *v2 = title;
  v2[1] = featureName;
  result.featureName = featureName;
  result.title = title;
  return result;
}

uint64_t sub_1C0369144()
{
  if (*v0) {
    return 0x4E65727574616566;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C0369184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C036A6F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C03691AC(uint64_t a1)
{
  unint64_t v2 = sub_1C0369CC4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03691E8(uint64_t a1)
{
  unint64_t v2 = sub_1C0369CC4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatAudioTrack.Overrides.encode(to:)(void *a1)
{
  sub_1C0369EB4(0, &qword_1EB85C678, (uint64_t (*)(void))sub_1C0369CC4, (uint64_t)&type metadata for FormatAudioTrack.Overrides.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  _OWORD v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0369CC4();
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C152074C();
  if (!v9)
  {
    char v12 = 1;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatAudioTrack.Overrides.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  int v20 = a2;
  sub_1C0369EB4(0, &qword_1EB85C5D8, (uint64_t (*)(void))sub_1C0369CC4, (uint64_t)&type metadata for FormatAudioTrack.Overrides.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0369CC4();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  size_t v10 = v20;
  char v22 = 0;
  uint64_t v11 = sub_1C152060C();
  uint64_t v13 = v12;
  char v21 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C152060C();
  uint64_t v16 = v15;
  unsigned int v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v19 = v14;
  v17(v8, v5);
  *size_t v10 = v11;
  v10[1] = v13;
  void v10[2] = v19;
  v10[3] = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C036960C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatAudioTrack.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1C0369624(void *a1)
{
  return FormatAudioTrack.Overrides.encode(to:)(a1);
}

uint64_t sub_1C0369644()
{
  if (*v0) {
    return 0x656469727265766FLL;
  }
  else {
    return 0x656C6369747261;
  }
}

uint64_t sub_1C0369684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C036A7FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C03696AC(uint64_t a1)
{
  unint64_t v2 = sub_1C0369E0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03696E8(uint64_t a1)
{
  unint64_t v2 = sub_1C0369E0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatAudioTrack.encode(to:)(void *a1)
{
  sub_1C0369EB4(0, &qword_1EA19A190, (uint64_t (*)(void))sub_1C0369E0C, (uint64_t)&type metadata for FormatAudioTrack.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = v8;
  uint64_t v10 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0369E0C();
  sub_1C1520F0C();
  uint64_t v19 = v9;
  char v23 = 0;
  type metadata accessor for FormatArticle();
  sub_1C0369F1C(&qword_1EB85D0F0);
  uint64_t v11 = v18;
  sub_1C152080C();
  if (!v11)
  {
    uint64_t v19 = v17;
    uint64_t v20 = v16;
    uint64_t v21 = v15;
    uint64_t v22 = v14;
    char v23 = 1;
    sub_1C0369E60();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatAudioTrack.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1C0369EB4(0, &qword_1EA19A1A0, (uint64_t (*)(void))sub_1C0369E0C, (uint64_t)&type metadata for FormatAudioTrack.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0369E0C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v16;
  type metadata accessor for FormatArticle();
  char v20 = 0;
  sub_1C0369F1C(&qword_1EB874340);
  sub_1C15206EC();
  uint64_t v11 = v17;
  char v20 = 1;
  sub_1C0369F60();
  swift_retain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v12 = v17;
  uint64_t v13 = v19;
  *(_OWORD *)(v10 + 16) = v18;
  *(void *)uint64_t v10 = v11;
  *(void *)(v10 + 8) = v12;
  *(void *)(v10 + 32) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C0369BDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAudioTrack.init(from:)(a1, a2);
}

uint64_t sub_1C0369BF4(void *a1)
{
  return FormatAudioTrack.encode(to:)(a1);
}

uint64_t _s8NewsFeed16FormatAudioTrackV9OverridesV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (char v10 = sub_1C1520A9C(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1C1520A9C() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C0369CC4()
{
  unint64_t result = qword_1EB85B828;
  if (!qword_1EB85B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B828);
  }
  return result;
}

uint64_t _s8NewsFeed16FormatAudioTrackV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  type metadata accessor for FormatArticle();
  if ((static FormatArticle.== infix(_:_:)(v2, v8) & 1) == 0) {
    return 0;
  }
  if (v5)
  {
    if (!v10 || (v3 != v7 || v5 != v10) && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  if (v6)
  {
    if (v11 && (v4 == v9 && v6 == v11 || (sub_1C1520A9C() & 1) != 0)) {
      return 1;
    }
  }
  else if (!v11)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1C0369E0C()
{
  unint64_t result = qword_1EA19A198;
  if (!qword_1EA19A198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A198);
  }
  return result;
}

unint64_t sub_1C0369E60()
{
  unint64_t result = qword_1EB85B840;
  if (!qword_1EB85B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B840);
  }
  return result;
}

void sub_1C0369EB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0369F1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatArticle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0369F60()
{
  unint64_t result = qword_1EB85B848;
  if (!qword_1EB85B848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B848);
  }
  return result;
}

uint64_t sub_1C0369FB4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C036A088(a1, a2, a3, (uint64_t (*)(void))sub_1C0369F60, (uint64_t (*)(void))sub_1C0369E60, (uint64_t (*)(void))sub_1C0369FF4);
}

unint64_t sub_1C0369FF4()
{
  unint64_t result = qword_1EA19A1A8;
  if (!qword_1EA19A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1A8);
  }
  return result;
}

uint64_t sub_1C036A048(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C036A088(a1, a2, a3, (uint64_t (*)(void))sub_1C036A0DC, (uint64_t (*)(void))sub_1C036A130, (uint64_t (*)(void))sub_1C036A184);
}

uint64_t sub_1C036A088(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C036A0DC()
{
  unint64_t result = qword_1EA19A1B0;
  if (!qword_1EA19A1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1B0);
  }
  return result;
}

unint64_t sub_1C036A130()
{
  unint64_t result = qword_1EA19A1B8;
  if (!qword_1EA19A1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1B8);
  }
  return result;
}

unint64_t sub_1C036A184()
{
  unint64_t result = qword_1EA19A1C0;
  if (!qword_1EA19A1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1C0);
  }
  return result;
}

uint64_t destroy for FormatAudioTrack()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatAudioTrack(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatAudioTrack(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatAudioTrack(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAudioTrack()
{
  return &type metadata for FormatAudioTrack;
}

uint64_t getEnumTagSinglePayload for FormatIssue.Overrides(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for FormatAudioTrack.Overrides()
{
  return &type metadata for FormatAudioTrack.Overrides;
}

ValueMetadata *type metadata accessor for FormatAudioTrack.CodingKeys()
{
  return &type metadata for FormatAudioTrack.CodingKeys;
}

unsigned char *_s8NewsFeed16FormatAudioTrackV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C036A4B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAudioTrack.Overrides.CodingKeys()
{
  return &type metadata for FormatAudioTrack.Overrides.CodingKeys;
}

unint64_t sub_1C036A4EC()
{
  unint64_t result = qword_1EA19A1C8;
  if (!qword_1EA19A1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1C8);
  }
  return result;
}

unint64_t sub_1C036A544()
{
  unint64_t result = qword_1EA19A1D0;
  if (!qword_1EA19A1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1D0);
  }
  return result;
}

unint64_t sub_1C036A59C()
{
  unint64_t result = qword_1EA19A1D8;
  if (!qword_1EA19A1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1D8);
  }
  return result;
}

unint64_t sub_1C036A5F4()
{
  unint64_t result = qword_1EA19A1E0;
  if (!qword_1EA19A1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A1E0);
  }
  return result;
}

unint64_t sub_1C036A64C()
{
  unint64_t result = qword_1EB85B838;
  if (!qword_1EB85B838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B838);
  }
  return result;
}

unint64_t sub_1C036A6A4()
{
  unint64_t result = qword_1EB85B830;
  if (!qword_1EB85B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B830);
  }
  return result;
}

uint64_t sub_1C036A6F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E65727574616566 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C036A7FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id IssueActivityItemsConfiguration.__allocating_init(issue:userHasAccess:)(void *a1, char a2)
{
  if (a2)
  {
    sub_1BFE4DBE0();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C1540C60;
    uint64_t v5 = (objc_class *)type metadata accessor for SharingIssueImageActivityItemSource();
    char v6 = (char *)objc_allocWithZone(v5);
    uint64_t v7 = OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage;
    *(void *)&v6[OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage] = 0;
    uint64_t v8 = v6;
    id v9 = objc_msgSend(a1, sel_coverImageAssetHandle);
    if (v9)
    {
      unint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_filePath);
      if (v11)
      {
        sub_1C151E62C();

        id v12 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
        uint64_t v13 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v11 = objc_msgSend(v12, sel_initWithContentsOfFile_, v13);
      }
      else
      {
      }
    }
    else
    {
      id v11 = 0;
    }
    id v15 = objc_allocWithZone(v2);
    uint64_t v16 = *(void **)&v6[v7];
    *(void *)&v6[v7] = v11;

    v37.receiver = v8;
    v37.super_class = v5;
    *(void *)(v4 + 32) = objc_msgSendSuper2(&v37, sel_init);
    uint64_t v17 = (objc_class *)type metadata accessor for SharingIssueTextActivityItemSource();
    long long v18 = (char *)objc_allocWithZone(v17);
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = a1;
    id v19 = a1;
    char v20 = v18;
    id v21 = objc_msgSend(v19, sel_title);
    uint64_t v22 = sub_1C151E62C();
    uint64_t v24 = v23;

    int v25 = (uint64_t *)&v20[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
    uint64_t *v25 = v22;
    v25[1] = v24;
    id v26 = objc_msgSend(v19, sel_coverDate);
    uint64_t v27 = sub_1C151E62C();
    uint64_t v29 = v28;

    unsigned int v30 = (uint64_t *)&v20[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
    *unsigned int v30 = v27;
    v30[1] = v29;

    v36.receiver = v20;
    v36.super_class = v17;
    id v31 = objc_msgSendSuper2(&v36, sel_init);

    *(void *)(v4 + 40) = v31;
    objc_allocWithZone((Class)type metadata accessor for SharingIssueURLActivityItemSource());
    id v32 = v19;
    id v33 = sub_1C0B45900(v32, 0);

    *(void *)(v4 + 48) = v33;
    sub_1C151EBEC();
    sub_1BFC9DBE8(0, (unint64_t *)&unk_1EA1A32A0);
    uint64_t v34 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v15, sel_initNAWithActivityItemSources_, v34);
  }
  else
  {

    return 0;
  }
  return v14;
}

id IssueActivityItemsConfiguration.__allocating_init(issue:itemOptions:)(void *a1, uint64_t a2)
{
  char v3 = sub_1BFFD07D4(12, a2);
  swift_bridgeObjectRelease();
  return IssueActivityItemsConfiguration.__allocating_init(issue:userHasAccess:)(a1, v3 & 1);
}

id IssueActivityItemsConfiguration.__allocating_init(objects:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_1BFC9DBE8(0, &qword_1EA19A1F0);
  BOOL v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.init(objects:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFC9DBE8(0, &qword_1EA19A1F0);
  BOOL v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_1C036AFB4();
  BOOL v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.init(itemProviders:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C036AFB4();
  BOOL v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C036AFB4()
{
  unint64_t result = qword_1EA1A32B0;
  if (!qword_1EA1A32B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A32B0);
  }
  return result;
}

uint64_t type metadata accessor for IssueActivityItemsConfiguration()
{
  return self;
}

uint64_t FormatPuzzleType.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C036E2F0(0, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v3 - 8);
  objc_super v5 = (char *)&v8 - v4;
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1C036B0F8(v6, (uint64_t)v5);
  return sub_1C036B194((uint64_t)v5, a1);
}

uint64_t sub_1C036B0F8(uint64_t a1, uint64_t a2)
{
  sub_1C036E2F0(0, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C036B194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id FCPuzzleTypeProviding.overridden(by:assetManager:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C007E428(0, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for FormatPuzzleType.Overrides(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0BDE4(a1, (uint64_t)v8, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C036FA6C((uint64_t)v8, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
LABEL_6:
    swift_unknownObjectRetain();
    return (id)v3;
  }
  sub_1C036B194((uint64_t)v8, (uint64_t)v12);
  if ((sub_1C036C784() & 1) == 0)
  {
    sub_1C036FAC8((uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
    goto LABEL_6;
  }
  id v13 = sub_1C036C0B8(a2);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F7E720]);
  swift_unknownObjectRetain();
  id v15 = objc_msgSend(v14, sel_initWithPuzzleType_overrides_, v3, v13);
  swift_unknownObjectRelease();

  sub_1C036FAC8((uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
  return v15;
}

uint64_t FormatPuzzleType.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C036B45C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C036E2F0(0, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = *a1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1C036B0F8(v7, (uint64_t)v6);
  return sub_1C036B194((uint64_t)v6, a2);
}

uint64_t sub_1C036B544(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C036E28C(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1C036C9D8((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t FormatPuzzleType.overrides.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1C036C9D8(a1, v3);
  return swift_endAccess();
}

uint64_t (*FormatPuzzleType.overrides.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleType.selectors.getter()
{
  return sub_1BFC893A4();
}

uint64_t FormatPuzzleType.selectors.setter(uint64_t a1)
{
  return sub_1C036B7AC(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
}

uint64_t (*FormatPuzzleType.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleType.properties.getter()
{
  return sub_1BFC893A4();
}

uint64_t sub_1C036B738(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPuzzleType.properties.setter(uint64_t a1)
{
  return sub_1C036B7AC(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
}

uint64_t sub_1C036B7AC(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleType.properties.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatPuzzleType.Overrides.init(themeColor:darkStyleThemeColor:exploreTileImage:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a2;
  *a4 = *a1;
  a4[1] = v5;
  uint64_t v6 = (uint64_t)a4 + *(int *)(type metadata accessor for FormatPuzzleType.Overrides(0) + 24);
  return sub_1C002F694(a3, v6);
}

uint64_t FormatPuzzleType.__allocating_init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)(v10 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
  swift_beginAccess();
  *uint64_t v11 = a4;
  id v12 = (void *)(v10 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
  swift_beginAccess();
  void *v12 = a5;
  uint64_t v13 = v10 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1C036B194(a3, v13);
  return v10;
}

uint64_t FormatPuzzleType.init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v9 = (void *)(v5 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
  swift_beginAccess();
  *uint64_t v9 = a4;
  uint64_t v10 = (void *)(v5 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
  swift_beginAccess();
  *uint64_t v10 = a5;
  uint64_t v11 = v5 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1C036B194(a3, v11);
  return v5;
}

uint64_t FormatPuzzleType.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatPuzzleType.init(from:)(a1);
  return v2;
}

void *FormatPuzzleType.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  unsigned int v39 = (int64x2_t *)v2;
  uint64_t v40 = v5;
  sub_1C007E428(0, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned int v38 = (char *)&v34 - v7;
  uint64_t v37 = type metadata accessor for FormatPuzzleType.Overrides(0);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v9 = (int64x2_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C036E2F0(0, &qword_1EB86E078, (uint64_t (*)(void))sub_1C036CA3C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v36 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C036CA3C();
  uint64_t v14 = (uint64_t)v39;
  uint64_t v15 = (uint64_t)a1;
  sub_1C1520EBC();
  if (v14)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v17 = v37;
    uint64_t v16 = (uint64_t)v38;
    unsigned int v39 = v9;
    char v43 = 0;
    v1[2] = sub_1C152069C();
    v1[3] = v18;
    char v43 = 1;
    sub_1C036E244(&qword_1EB86C5B0, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
    sub_1C152065C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v16, 1, v17) == 1)
    {
      uint64_t v19 = *(int *)(v17 + 24);
      char v20 = v39;
      id v21 = &v39->i8[v19];
      uint64_t v22 = sub_1C1515FDC();
      (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
      *char v20 = vdupq_n_s64(0xF000000000000007);
      sub_1C036FA6C(v16, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
    }
    else
    {
      char v20 = v39;
      sub_1C036B194(v16, (uint64_t)v39);
    }
    uint64_t v23 = (uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1C036B194((uint64_t)v20, v23);
    sub_1BFEBC4B4();
    LOBYTE(v41) = 2;
    sub_1BFDB25E8();
    sub_1C152065C();
    uint64_t v24 = v13;
    int v25 = v3;
    uint64_t v26 = v11;
    uint64_t v27 = v36;
    uint64_t v28 = v24;
    if (v42) {
      uint64_t v29 = v42;
    }
    else {
      uint64_t v29 = MEMORY[0x1E4FBC870];
    }
    unsigned int v30 = (void *)((char *)v25 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
    swift_beginAccess();
    *unsigned int v30 = v29;
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
    char v44 = 3;
    sub_1BFDB23BC((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
    sub_1C152065C();
    if (v41) {
      uint64_t v32 = v41;
    }
    else {
      uint64_t v32 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
    id v33 = (void *)((char *)v25 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
    swift_beginAccess();
    void *v33 = v32;
    __swift_destroy_boxed_opaque_existential_1(v15);
    return v25;
  }
  return v3;
}

id sub_1C036C0B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatPuzzleType.Overrides(0);
  sub_1BFE0BDE4((uint64_t)v2 + *(int *)(v12 + 24), (uint64_t)v7, (unint64_t *)&qword_1EB8948A0, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v13 = sub_1C036FA6C((uint64_t)v7, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    id v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v15 = (void *)sub_1C1515E9C();
    id v14 = objc_msgSend(a1, sel_assetHandleForURL_lifetimeHint_, v15, 0);

    uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if ((~*v2 & 0xF000000000000007) != 0)
  {
    uint64_t v21 = *v2;
    uint64_t v13 = (uint64_t)sub_1C036C338(v13);
    uint64_t v16 = (void *)v13;
  }
  else
  {
    uint64_t v16 = 0;
  }
  if ((~v2[1] & 0xF000000000000007) != 0)
  {
    uint64_t v21 = v2[1];
    id v17 = sub_1C036C338(v13);
  }
  else
  {
    id v17 = 0;
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E738]), sel_initWithThemeColor_darkStyleThemeColor_exploreTileImageAssetHandle_, v16, v17, v14);

  return v18;
}

id sub_1C036C338(uint64_t a1)
{
  v8[2] = *(double *)MEMORY[0x1E4F143B8];
  double v2 = *v1;
  double v7 = 0.0;
  v8[0] = 0.0;
  double v5 = 0.0;
  double v6 = 0.0;
  v8[1] = v2;
  Class v3 = FormatColor.color.getter(a1);
  [(objc_class *)v3 getRed:v8 green:&v7 blue:&v6 alpha:&v5];

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E328]), sel_initWithRed_green_blue_alpha_, v8[0], v7, v6, v5);
}

uint64_t sub_1C036C404@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v42 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8);
  double v7 = (char *)&v39 - v6;
  id v8 = objc_msgSend(a1, sel_themeColor);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    objc_msgSend(v9, sel_red);
    double v12 = v11 * 255.0;
    objc_msgSend(v9, sel_green);
    double v14 = v13 * 255.0;
    objc_msgSend(v9, sel_blue);
    double v16 = v15 * 255.0;
    objc_msgSend(v9, sel_alpha);
    *(double *)(v10 + 16) = v12;
    *(double *)(v10 + 24) = v14;
    *(double *)(v10 + 32) = v16;
    *(void *)(v10 + 40) = v17;
    *(unsigned char *)(v10 + 48) = 0;

    uint64_t v18 = v10 | 0x6000000000000000;
  }
  else
  {
    uint64_t v18 = 0xF000000000000007;
  }
  uint64_t v19 = v41;
  *uint64_t v41 = v18;
  id v20 = objc_msgSend(a1, sel_darkStyleThemeColor);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = swift_allocObject();
    objc_msgSend(v21, (SEL)&selRef_audioMultiplier + 6);
    double v24 = v23 * 255.0;
    objc_msgSend(v21, (SEL)&selRef_userConversionScore + 4);
    double v26 = v25 * 255.0;
    objc_msgSend(v21, (SEL)&selRef_tabiScoreCoefficient);
    double v28 = v27 * 255.0;
    objc_msgSend(v21, (SEL)&selRef_isPublic);
    *(double *)(v22 + 16) = v24;
    *(double *)(v22 + 24) = v26;
    *(double *)(v22 + 32) = v28;
    *(void *)(v22 + 40) = v29;
    *(unsigned char *)(v22 + 48) = 0;

    uint64_t v30 = v22 | 0x6000000000000000;
  }
  else
  {
    uint64_t v30 = 0xF000000000000007;
  }
  v19[1] = v30;
  id v31 = objc_msgSend(a1, sel_exploreTileImageAssetHandle);
  if (v31)
  {
    uint64_t v32 = v31;
    id v33 = objc_msgSend(v31, sel_remoteURL);

    uint64_t v34 = v40;
    sub_1C1515F1C();

    sub_1C1515DFC();
    swift_unknownObjectRelease();
    uint64_t v35 = v34;
    uint64_t v36 = v42;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v35, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v7, 0, 1, v36);
  }
  else
  {
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v7, 1, 1, v42);
  }
  uint64_t v37 = type metadata accessor for FormatPuzzleType.Overrides(0);
  return sub_1C002F694((uint64_t)v7, (uint64_t)v19 + *(int *)(v37 + 24));
}

uint64_t sub_1C036C784()
{
  sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v16 - v2;
  uint64_t v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *v0;
  sub_1C036E28C((uint64_t)v0, (uint64_t)&v16 - v8);
  if ((~v10 & 0xF000000000000007) != 0)
  {
    sub_1C036FAC8((uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
    sub_1C036E28C((uint64_t)v0, (uint64_t)v6);
    goto LABEL_5;
  }
  uint64_t v11 = *((void *)v9 + 1);
  sub_1BFDC11A4(v11);
  sub_1C036FAC8((uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
  sub_1BFDC11BC(v11);
  sub_1C036E28C((uint64_t)v0, (uint64_t)v6);
  if ((~v11 & 0xF000000000000007) != 0)
  {
LABEL_5:
    sub_1C036FAC8((uint64_t)v6, type metadata accessor for FormatPuzzleType.Overrides);
    return 1;
  }
  double v12 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFE0BDE4((uint64_t)&v6[*(int *)(v4 + 24)], (uint64_t)v3, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1C036FAC8((uint64_t)v6, type metadata accessor for FormatPuzzleType.Overrides);
  uint64_t v13 = sub_1C1515FDC();
  BOOL v14 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v3, 1, v13) != 1;
  sub_1C036FA6C((uint64_t)v3, (unint64_t *)&qword_1EB8948A0, v12);
  return v14;
}

uint64_t sub_1C036C9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C036CA3C()
{
  unint64_t result = qword_1EB86C580;
  if (!qword_1EB86C580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C580);
  }
  return result;
}

uint64_t sub_1C036CA90(uint64_t a1)
{
  sub_1C036E2F0(0, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C036CB28()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6F43656D656874;
  }
}

uint64_t sub_1C036CB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C036F728(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C036CBBC(uint64_t a1)
{
  unint64_t v2 = sub_1C036E1F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C036CBF8(uint64_t a1)
{
  unint64_t v2 = sub_1C036E1F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatPuzzleType.Overrides.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C036E2F0(0, &qword_1EA19A1F8, (uint64_t (*)(void))sub_1C036E1F0, (uint64_t)&type metadata for FormatPuzzleType.Overrides.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C036E1F0();
  sub_1C1520F0C();
  uint64_t v13 = *v3;
  char v12 = 0;
  sub_1BFE10198();
  sub_1C152078C();
  if (!v2)
  {
    uint64_t v13 = v3[1];
    char v12 = 1;
    sub_1C152078C();
    type metadata accessor for FormatPuzzleType.Overrides(0);
    LOBYTE(v13) = 2;
    sub_1C1515FDC();
    sub_1C036E244((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatPuzzleType.Overrides.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - v5;
  sub_1C036E2F0(0, &qword_1EA19A208, (uint64_t (*)(void))sub_1C036E1F0, (uint64_t)&type metadata for FormatPuzzleType.Overrides.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v22 = v7;
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  double v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C036E1F0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  uint64_t v19 = v6;
  BOOL v14 = v12;
  uint64_t v15 = v20;
  uint64_t v16 = v21;
  char v24 = 0;
  sub_1BFE113DC();
  uint64_t v17 = v22;
  sub_1C152065C();
  *BOOL v14 = v25;
  char v24 = 1;
  sub_1C152065C();
  v14[1] = v25;
  sub_1C1515FDC();
  LOBYTE(v25) = 2;
  sub_1C036E244((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v17);
  sub_1C002F694((uint64_t)v19, (uint64_t)v14 + *(int *)(v10 + 24));
  sub_1C036E28C((uint64_t)v14, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_1C036FAC8((uint64_t)v14, type metadata accessor for FormatPuzzleType.Overrides);
}

uint64_t sub_1C036D248@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleType.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1C036D260(void *a1)
{
  return FormatPuzzleType.Overrides.encode(to:)(a1);
}

uint64_t sub_1C036D27C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656469727265766FLL;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C036D310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C036F880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C036D338(uint64_t a1)
{
  unint64_t v2 = sub_1C036CA3C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C036D374(uint64_t a1)
{
  unint64_t v2 = sub_1C036CA3C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatPuzzleType.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C036CA90(v0 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzleType.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C036CA90(v0 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatPuzzleType.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1C036E2F0(0, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (void *)((char *)v20 - v5);
  sub_1C036E2F0(0, &qword_1EB86EDD0, (uint64_t (*)(void))sub_1C036CA3C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v20 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C036CA3C();
  sub_1C1520F0C();
  char v22 = 0;
  uint64_t v12 = v20[1];
  sub_1C15207CC();
  if (!v12)
  {
    uint64_t v14 = v2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1C036B0F8(v14, (uint64_t)v6);
    sub_1C036D94C(v6, (uint64_t)v11, 1);
    sub_1C036CA90((uint64_t)v6);
    uint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
    swift_beginAccess();
    uint64_t v16 = *v15;
    if (*(void *)(*v15 + 16))
    {
      char v23 = 2;
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_1BFE71F8C(v16);
      swift_bridgeObjectRelease();
      uint64_t v21 = v17;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v21);
      swift_release();
      _OWORD v20[2] = v21;
      sub_1C036E358();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(*v18 + 16))
    {
      char v23 = 3;
      uint64_t v21 = (void *)v19;
      sub_1C036E358();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1BFDB23BC((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void *sub_1C036D8C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatPuzzleType.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C036D91C(void *a1)
{
  return FormatPuzzleType.encode(to:)(a1);
}

uint64_t sub_1C036D940(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed16FormatPuzzleTypeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C036D94C(uint64_t *a1, uint64_t a2, char a3)
{
  v20[1] = a2;
  sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v20 - v6;
  uint64_t v8 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v20 - v12;
  uint64_t v14 = *a1;
  sub_1C036E28C((uint64_t)a1, (uint64_t)v20 - v12);
  if ((~v14 & 0xF000000000000007) != 0)
  {
    sub_1C036FAC8((uint64_t)v13, type metadata accessor for FormatPuzzleType.Overrides);
    sub_1C036E28C((uint64_t)a1, (uint64_t)v10);
    goto LABEL_6;
  }
  uint64_t v15 = *((void *)v13 + 1);
  sub_1BFDC11A4(v15);
  sub_1C036FAC8((uint64_t)v13, type metadata accessor for FormatPuzzleType.Overrides);
  sub_1BFDC11BC(v15);
  sub_1C036E28C((uint64_t)a1, (uint64_t)v10);
  if ((~v15 & 0xF000000000000007) != 0)
  {
LABEL_6:
    sub_1C036FAC8((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
    goto LABEL_7;
  }
  uint64_t v16 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFE0BDE4((uint64_t)&v10[*(int *)(v8 + 24)], (uint64_t)v7, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1C036FAC8((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
  uint64_t v17 = sub_1C1515FDC();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v7, 1, v17);
  uint64_t result = sub_1C036FA6C((uint64_t)v7, (unint64_t *)&qword_1EB8948A0, v16);
  if (v18 != 1)
  {
LABEL_7:
    char v21 = a3;
    sub_1C036E2F0(0, &qword_1EB86EDD0, (uint64_t (*)(void))sub_1C036CA3C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1C036E358();
    sub_1C036E244(&qword_1EA19A218, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
    return sub_1C1520BAC();
  }
  return result;
}

BOOL _s8NewsFeed16FormatPuzzleTypeC9OverridesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0092B34();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v37 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = *a1;
  uint64_t v21 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v21 & 0xF000000000000007) != 0) {
      goto LABEL_11;
    }
    goto LABEL_6;
  }
  uint64_t v40 = *a1;
  if ((~v21 & 0xF000000000000007) == 0) {
    goto LABEL_10;
  }
  uint64_t v39 = v21;
  swift_retain_n();
  char v22 = static FormatColor.== infix(_:_:)(&v40, (unint64_t *)&v39);
  swift_release();
  sub_1BFDC11BC(v20);
  if (v22)
  {
LABEL_6:
    uint64_t v20 = a1[1];
    uint64_t v21 = a2[1];
    if ((~v20 & 0xF000000000000007) == 0)
    {
      if ((~v21 & 0xF000000000000007) == 0) {
        goto LABEL_15;
      }
LABEL_11:
      sub_1BFDC11A4(v21);
      sub_1BFDC11BC(v20);
      sub_1BFDC11BC(v21);
      return 0;
    }
    uint64_t v40 = a1[1];
    if ((~v21 & 0xF000000000000007) != 0)
    {
      uint64_t v39 = v21;
      swift_retain_n();
      char v24 = static FormatColor.== infix(_:_:)(&v40, (unint64_t *)&v39);
      swift_release();
      sub_1BFDC11BC(v20);
      if ((v24 & 1) == 0) {
        return 0;
      }
LABEL_15:
      uint64_t v25 = type metadata accessor for FormatPuzzleType.Overrides(0);
      double v26 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      sub_1BFE0BDE4((uint64_t)a1 + *(int *)(v25 + 24), (uint64_t)v19, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      sub_1BFE0BDE4((uint64_t)a2 + *(int *)(v25 + 24), (uint64_t)v16, (unint64_t *)&qword_1EB8948A0, v26);
      uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_1BFE0BDE4((uint64_t)v19, (uint64_t)v10, (unint64_t *)&qword_1EB8948A0, v26);
      sub_1BFE0BDE4((uint64_t)v16, v27, (unint64_t *)&qword_1EB8948A0, v26);
      uint64_t v28 = v37;
      uint64_t v29 = v38;
      uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
      if (v30((uint64_t)v10, 1, v38) == 1)
      {
        id v31 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        sub_1C036FA6C((uint64_t)v16, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        sub_1C036FA6C((uint64_t)v19, (unint64_t *)&qword_1EB8948A0, v31);
        if (v30(v27, 1, v29) == 1)
        {
          sub_1C036FA6C((uint64_t)v10, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          return 1;
        }
      }
      else
      {
        sub_1BFE0BDE4((uint64_t)v10, (uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        if (v30(v27, 1, v29) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v6, v27, v29);
          sub_1C036E244((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
          uint64_t v33 = v28;
          char v34 = sub_1C151E5CC();
          uint64_t v35 = *(void (**)(char *, uint64_t))(v33 + 8);
          v35(v6, v29);
          uint64_t v36 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          sub_1C036FA6C((uint64_t)v16, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          sub_1C036FA6C((uint64_t)v19, (unint64_t *)&qword_1EB8948A0, v36);
          v35(v13, v29);
          sub_1C036FA6C((uint64_t)v10, (unint64_t *)&qword_1EB8948A0, v36);
          return (v34 & 1) != 0;
        }
        uint64_t v32 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        sub_1C036FA6C((uint64_t)v16, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        sub_1C036FA6C((uint64_t)v19, (unint64_t *)&qword_1EB8948A0, v32);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
      }
      sub_1C036FAC8((uint64_t)v10, (uint64_t (*)(void))sub_1C0092B34);
      return 0;
    }
LABEL_10:
    swift_retain();
    goto LABEL_11;
  }
  return 0;
}

unint64_t sub_1C036E1F0()
{
  unint64_t result = qword_1EA19A200;
  if (!qword_1EA19A200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A200);
  }
  return result;
}

uint64_t sub_1C036E244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C036E28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C036E2F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C036E358()
{
  unint64_t result = qword_1EA19A210;
  if (!qword_1EA19A210)
  {
    sub_1C036E2F0(255, &qword_1EB86EDD0, (uint64_t (*)(void))sub_1C036CA3C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A210);
  }
  return result;
}

uint64_t sub_1C036E3E8(void *a1)
{
  a1[1] = sub_1C036E244(&qword_1EB86C5B0, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  a1[2] = sub_1C036E244(&qword_1EA19A218, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  uint64_t result = sub_1C036E244(&qword_1EA19A220, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  a1[3] = result;
  return result;
}

uint64_t sub_1C036E494(void *a1)
{
  a1[1] = sub_1C036E244(&qword_1EB86C5C0, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType);
  a1[2] = sub_1C036E244(&qword_1EB86C5B8, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType);
  uint64_t result = sub_1C036E244(&qword_1EA19A228, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatPuzzleType(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB86C5C8);
}

uint64_t sub_1C036E568@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors, a2);
}

uint64_t sub_1C036E574(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
}

uint64_t sub_1C036E594@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties, a2);
}

uint64_t keypath_get_1Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C036E5F4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
}

uint64_t sub_1C036E614()
{
  return type metadata accessor for FormatPuzzleType(0);
}

uint64_t sub_1C036E61C()
{
  uint64_t result = type metadata accessor for FormatPuzzleType.Overrides(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FormatPuzzleType(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPuzzleType);
}

uint64_t dispatch thunk of FormatPuzzleType.__allocating_init(identifier:overrides:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatPuzzleType.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPuzzleType.Overrides(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0) {
      swift_retain();
    }
    *a1 = v7;
    uint64_t v8 = a2[1];
    if ((~v8 & 0xF000000000000007) != 0) {
      swift_retain();
    }
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for FormatPuzzleType.Overrides(void *a1, uint64_t a2)
{
  if ((~*a1 & 0xF000000000000007) != 0) {
    swift_release();
  }
  if ((~a1[1] & 0xF000000000000007) != 0) {
    swift_release();
  }
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for FormatPuzzleType.Overrides(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *a1 = v6;
  uint64_t v7 = a2[1];
  if ((~v7 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  unint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

void *assignWithCopy for FormatPuzzleType.Overrides(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *a1 = v6;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
    sub_1C036EDB0((uint64_t)a1);
    uint64_t v6 = *a2;
LABEL_6:
    *a1 = v6;
    goto LABEL_8;
  }
  *a1 = v6;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v8 = a1 + 1;
  uint64_t v9 = a2[1];
  unint64_t v10 = v9 & 0xF000000000000007;
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
    if (v10 != 0xF000000000000007)
    {
      void *v8 = v9;
      swift_retain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v10 == 0xF000000000000007)
  {
    sub_1C036EDB0((uint64_t)(a1 + 1));
    uint64_t v9 = a2[1];
LABEL_13:
    void *v8 = v9;
    goto LABEL_15;
  }
  void *v8 = v9;
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1C1515FDC();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_20;
  }
  if (v18)
  {
LABEL_20:
    sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1C036EDB0(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for FormatPuzzleType.Overrides(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for FormatPuzzleType.Overrides(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0((uint64_t)a1);
LABEL_4:
    *a1 = v6;
    goto LABEL_6;
  }
  *a1 = v6;
  swift_release();
LABEL_6:
  uint64_t v7 = a1 + 1;
  uint64_t v8 = a2[1];
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
LABEL_9:
    void *v7 = v8;
    goto LABEL_11;
  }
  if ((~v8 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0((uint64_t)(a1 + 1));
    goto LABEL_9;
  }
  void *v7 = v8;
  swift_release();
LABEL_11:
  uint64_t v9 = *(int *)(a3 + 24);
  unint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_16;
  }
  if (v16)
  {
LABEL_16:
    sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPuzzleType.Overrides(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C036F15C);
}

uint64_t sub_1C036F15C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 115)
  {
    int v4 = (*a1 >> 60) & 0x8F | (16 * (*a1 & 7));
    unsigned int v5 = v4 ^ 0x7C;
    unsigned int v6 = v4 ^ 0x7F;
    if (v5 >= 0x74) {
      return 0;
    }
    else {
      return v6;
    }
  }
  else
  {
    sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = (char *)a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FormatPuzzleType.Overrides(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C036F240);
}

unint64_t *sub_1C036F240(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 115)
  {
    uint64_t v6 = (~a2 >> 4) & 7 | (8 * (~a2 & 0x7F));
    *uint64_t result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    sub_1C007E428(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
    return (unint64_t *)v9(v11, a2, a2, v10);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatPuzzleType.Overrides.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C036F3DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleType.Overrides.CodingKeys()
{
  return &type metadata for FormatPuzzleType.Overrides.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FormatPuzzleType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C036F4E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleType.CodingKeys()
{
  return &type metadata for FormatPuzzleType.CodingKeys;
}

unint64_t sub_1C036F51C()
{
  unint64_t result = qword_1EA19A230;
  if (!qword_1EA19A230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A230);
  }
  return result;
}

unint64_t sub_1C036F574()
{
  unint64_t result = qword_1EA19A238;
  if (!qword_1EA19A238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A238);
  }
  return result;
}

unint64_t sub_1C036F5CC()
{
  unint64_t result = qword_1EA19A240;
  if (!qword_1EA19A240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A240);
  }
  return result;
}

unint64_t sub_1C036F624()
{
  unint64_t result = qword_1EA19A248;
  if (!qword_1EA19A248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A248);
  }
  return result;
}

unint64_t sub_1C036F67C()
{
  unint64_t result = qword_1EB86C590;
  if (!qword_1EB86C590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C590);
  }
  return result;
}

unint64_t sub_1C036F6D4()
{
  unint64_t result = qword_1EB86C588;
  if (!qword_1EB86C588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C588);
  }
  return result;
}

uint64_t sub_1C036F728(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F43656D656874 && a2 == 0xEA0000000000726FLL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1600D90 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1600E20)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C036F880(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C036FA5C()
{
  return swift_deallocObject();
}

uint64_t sub_1C036FA6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C007E428(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C036FAC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SportsConfigResourceEmbed.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsConfigResourceEmbed.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsConfigResourceEmbed.parameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SportsConfigResourceEmbed.parameters.modify())(void)
{
  return nullsub_1;
}

uint64_t SportsConfigResourceEmbed.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsConfigResourceEmbed.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*SportsConfigResourceEmbed.options.modify())(void)
{
  return nullsub_1;
}

uint64_t SportsConfigResourceEmbed.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsConfigResourceEmbed.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*SportsConfigResourceEmbed.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t SportsConfigResourceEmbed.with(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v4;
  a3[3] = v5;
  a3[4] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C036FCB8()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574656D61726170;
      break;
    case 2:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C036FD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0371AA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C036FD78(uint64_t a1)
{
  unint64_t v2 = sub_1C037011C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C036FDB4(uint64_t a1)
{
  unint64_t v2 = sub_1C037011C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsConfigResourceEmbed.encode(to:)(void *a1)
{
  sub_1C0371318(0, &qword_1EA19A250, (uint64_t (*)(void))sub_1C037011C, (uint64_t)&type metadata for SportsConfigResourceEmbed.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = v1[2];
  uint64_t v15 = v1[3];
  uint64_t v16 = v8;
  uint64_t v14 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C037011C();
  sub_1C1520F0C();
  LOBYTE(v20) = 0;
  uint64_t v9 = v17;
  sub_1C15207CC();
  if (!v9)
  {
    uint64_t v12 = v14;
    uint64_t v11 = v15;
    if (*(void *)(v16 + 16))
    {
      LOBYTE(v18) = 1;
      uint64_t v20 = v16;
      sub_1C0370170();
      sub_1BFC6CA08(0, &qword_1EB8701A8);
      sub_1C0370200();
      sub_1C1520BAC();
    }
    if (*(void *)(v11 + 16))
    {
      LOBYTE(v18) = 2;
      uint64_t v20 = v11;
      sub_1C0370170();
      sub_1BFD48758(0);
      sub_1BFE201AC();
      sub_1C1520BAC();
    }
    if (*(void *)(v12 + 16))
    {
      char v19 = 3;
      swift_bridgeObjectRetain_n();
      uint64_t v13 = sub_1BFE71F8C(v12);
      swift_bridgeObjectRelease();
      int v18 = v13;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v18);
      swift_release();
      uint64_t v20 = (uint64_t)v18;
      sub_1C0370170();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C037011C()
{
  unint64_t result = qword_1EB867B08;
  if (!qword_1EB867B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867B08);
  }
  return result;
}

unint64_t sub_1C0370170()
{
  unint64_t result = qword_1EA19A258;
  if (!qword_1EA19A258)
  {
    sub_1C0371318(255, &qword_1EA19A250, (uint64_t (*)(void))sub_1C037011C, (uint64_t)&type metadata for SportsConfigResourceEmbed.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A258);
  }
  return result;
}

unint64_t sub_1C0370200()
{
  unint64_t result = qword_1EB8701B0;
  if (!qword_1EB8701B0)
  {
    sub_1BFC6CA08(255, &qword_1EB8701A8);
    sub_1C0370280();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8701B0);
  }
  return result;
}

unint64_t sub_1C0370280()
{
  unint64_t result = qword_1EB868B50;
  if (!qword_1EB868B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868B50);
  }
  return result;
}

uint64_t SportsConfigResourceEmbed.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v45 = a2;
  sub_1BFE89214();
  uint64_t v39 = v3;
  uint64_t v43 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v40 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE8928C();
  uint64_t v41 = v5;
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0371164();
  uint64_t v8 = v7;
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0371318(0, &qword_1EB86B690, (uint64_t (*)(void))sub_1C037011C, (uint64_t)&type metadata for SportsConfigResourceEmbed.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v12 = v11;
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v35 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C037011C();
  uint64_t v15 = v46;
  sub_1C1520EBC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v45;
  char v53 = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v20 = v19;
  uint64_t v36 = v17;
  char v52 = 1;
  swift_bridgeObjectRetain();
  char v21 = sub_1C152071C();
  if (v21)
  {
    char v47 = 1;
    sub_1C037111C(&qword_1EB863C18, (void (*)(uint64_t))sub_1C0371164);
    sub_1C15206EC();
    uint64_t v22 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  unsigned int v45 = v20;
  uint64_t v46 = v22;
  char v51 = 2;
  swift_bridgeObjectRetain();
  if (sub_1C152071C())
  {
    char v48 = 2;
    sub_1C037111C(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    uint64_t v24 = v41;
    char v23 = v42;
    sub_1C15206EC();
    uint64_t v25 = (uint64_t)a1;
    uint64_t v26 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v24);
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v25 = (uint64_t)a1;
  }
  char v50 = 3;
  uint64_t v42 = (char *)v26;
  swift_bridgeObjectRetain();
  char v27 = sub_1C152071C();
  uint64_t v28 = v43;
  if (v27)
  {
    char v49 = 3;
    sub_1C037111C(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v29 = v39;
    uint64_t v30 = v40;
    sub_1C15206EC();
    uint64_t v31 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC870];
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v12);
  uint64_t v32 = v45;
  swift_bridgeObjectRetain();
  uint64_t v33 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v16 = v36;
  v16[1] = (uint64_t)v32;
  char v34 = v42;
  v16[2] = v33;
  v16[3] = (uint64_t)v34;
  v16[4] = v31;
  __swift_destroy_boxed_opaque_existential_1(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0370994@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsConfigResourceEmbed.init(from:)(a1, a2);
}

uint64_t sub_1C03709AC(void *a1)
{
  return SportsConfigResourceEmbed.encode(to:)(a1);
}

uint64_t SportsConfigResourceParameter.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsConfigResourceParameter.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsConfigResourceParameter.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0370AAC()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_1C0370ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0371C7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0370B04(uint64_t a1)
{
  unint64_t v2 = sub_1C03712C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0370B40(uint64_t a1)
{
  unint64_t v2 = sub_1C03712C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsConfigResourceParameter.encode(to:)(void *a1)
{
  sub_1C0371318(0, &qword_1EB8701D8, (uint64_t (*)(void))sub_1C03712C4, (uint64_t)&type metadata for SportsConfigResourceParameter.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  _OWORD v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03712C4();
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C15207CC();
  if (!v9)
  {
    char v12 = 1;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SportsConfigResourceParameter.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t SportsConfigResourceParameter.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1C0371318(0, &qword_1EB86B6E8, (uint64_t (*)(void))sub_1C03712C4, (uint64_t)&type metadata for SportsConfigResourceParameter.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03712C4();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v20;
  char v22 = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  char v21 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C152069C();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v19 = v14;
  v17(v8, v5);
  *uint64_t v10 = v11;
  v10[1] = v13;
  void v10[2] = v19;
  v10[3] = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0370FCC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsConfigResourceParameter.init(from:)(a1, a2);
}

uint64_t sub_1C0370FE4(void *a1)
{
  return SportsConfigResourceParameter.encode(to:)(a1);
}

uint64_t sub_1C0371000()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0371068()
{
  sub_1C151E77C();
  return sub_1C151E77C();
}

uint64_t sub_1C03710B8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C037111C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0371164()
{
  if (!qword_1EB863C20)
  {
    sub_1C03711CC();
    sub_1C0370280();
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863C20);
    }
  }
}

unint64_t sub_1C03711CC()
{
  unint64_t result = qword_1EB868B58;
  if (!qword_1EB868B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868B58);
  }
  return result;
}

uint64_t _s8NewsFeed29SportsConfigResourceParameterV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1C1520A9C(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1C1520A9C();
    }
  }
  return result;
}

unint64_t sub_1C03712C4()
{
  unint64_t result = qword_1EB868B38;
  if (!qword_1EB868B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868B38);
  }
  return result;
}

void sub_1C0371318(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0371384()
{
  unint64_t result = qword_1EA19A260;
  if (!qword_1EA19A260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A260);
  }
  return result;
}

uint64_t sub_1C03713D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03713E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1C0371428@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0371434(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C0371478@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0371484(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t destroy for SportsConfigResourceEmbed()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SportsConfigResourceEmbed(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsConfigResourceEmbed(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsConfigResourceEmbed(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsConfigResourceEmbed()
{
  return &type metadata for SportsConfigResourceEmbed;
}

ValueMetadata *type metadata accessor for SportsConfigResourceParameter()
{
  return &type metadata for SportsConfigResourceParameter;
}

unsigned char *storeEnumTagSinglePayload for SportsConfigResourceParameter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0371758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsConfigResourceParameter.CodingKeys()
{
  return &type metadata for SportsConfigResourceParameter.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SportsConfigResourceEmbed.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C037185CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsConfigResourceEmbed.CodingKeys()
{
  return &type metadata for SportsConfigResourceEmbed.CodingKeys;
}

unint64_t sub_1C0371898()
{
  unint64_t result = qword_1EA19A268;
  if (!qword_1EA19A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A268);
  }
  return result;
}

unint64_t sub_1C03718F0()
{
  unint64_t result = qword_1EA19A270;
  if (!qword_1EA19A270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A270);
  }
  return result;
}

unint64_t sub_1C0371948()
{
  unint64_t result = qword_1EB868B48;
  if (!qword_1EB868B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868B48);
  }
  return result;
}

unint64_t sub_1C03719A0()
{
  unint64_t result = qword_1EB868B40;
  if (!qword_1EB868B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868B40);
  }
  return result;
}

unint64_t sub_1C03719F8()
{
  unint64_t result = qword_1EB867B18;
  if (!qword_1EB867B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867B18);
  }
  return result;
}

unint64_t sub_1C0371A50()
{
  unint64_t result = qword_1EB867B10;
  if (!qword_1EB867B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867B10);
  }
  return result;
}

uint64_t sub_1C0371AA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C0371C7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C0371D5C(void *a1)
{
  return FormatVideoPlayerLive.encode(to:)(a1);
}

uint64_t FormatVideoPlayerLive.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v1 + 8);
  uint64_t v26 = *(void *)v1;
  uint64_t v13 = *(void *)(v1 + 16);
  char v14 = *(unsigned char *)(v1 + 24);
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  unint64_t v17 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatVideoPlayerLive, v18, v16, (uint64_t)&type metadata for FormatVideoPlayerLive, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyC, v15, (uint64_t)v11, v17, (uint64_t)&off_1F1C39A28);
  if (v14)
  {
    if (qword_1EB887650 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C151928C();
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAE0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v5, v20, v19);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0686984(1, v26, v12, v13 & 1, (uint64_t)v5);
    uint64_t v21 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB887650 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C151928C();
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAE0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v8, v23, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C06867EC(0, v26, v12, v13, (uint64_t)v8);
    uint64_t v21 = (uint64_t)v8;
  }
  sub_1BFEFEAA8(v21, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEAA8((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1C03720A0(char *a1, char *a2)
{
  return sub_1C1485258(*a1, *a2);
}

uint64_t sub_1C03720AC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C037212C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0372198()
{
  return sub_1C1520E0C();
}

void sub_1C0372214(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x676E69646E6962;
  if (*v1) {
    uint64_t v2 = 0x656E696C6E69;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0372250()
{
  return sub_1C151EAEC();
}

uint64_t _s8NewsFeed21FormatVideoPlayerLiveO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  if ((v5 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0)
    {
      BOOL v15 = v3 == v6 && v2 == v7;
      if (v15 || (sub_1C1520A9C() & 1) != 0)
      {
        sub_1C0074D84(v6, v7, v8, 0);
        sub_1C0074D84(v3, v2, v4, 0);
        sub_1C0074D84(v3, v2, v4, 0);
        sub_1C0074D84(v6, v7, v8, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v16 = sub_1C00E3FD8(v4, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0074DE4(v3, v2, v4, 0);
        sub_1C0074DE4(v6, v7, v8, 0);
        sub_1C0074DE4(v6, v7, v8, 0);
        sub_1C0074DE4(v3, v2, v4, 0);
        return v16 & 1;
      }
      sub_1C0074D84(v3, v2, v4, 0);
      sub_1C0074D84(v6, v7, v8, 0);
      sub_1C0074DE4(v3, v2, v4, 0);
      uint64_t v11 = v6;
      uint64_t v12 = v7;
      char v13 = v8;
      char v14 = 0;
      goto LABEL_22;
    }
    goto LABEL_9;
  }
  if ((*(unsigned char *)(a2 + 24) & 1) == 0)
  {
LABEL_9:
    sub_1C0074D84(*(void *)a1, v2, v4, v5);
    sub_1C0074D84(v6, v7, v8, v9);
    sub_1C0074DE4(v3, v2, v4, v5);
    uint64_t v11 = v6;
    uint64_t v12 = v7;
    char v13 = v8;
    char v14 = v9;
    goto LABEL_22;
  }
  if (v4)
  {
    if (v8)
    {
      if (v3 == v6 && v2 == v7) {
        char v10 = 1;
      }
      else {
        char v10 = sub_1C1520A9C();
      }
      uint64_t v18 = 1;
      sub_1C0074D84(v3, v2, v4, 1);
      sub_1C0074D84(v6, v7, v8, 1);
      sub_1C0074D84(v6, v7, v8, 1);
      sub_1C0074D84(v3, v2, v4, 1);
      sub_1C0074D84(v3, v2, v4, 1);
      sub_1C0074D84(v6, v7, v8, 1);
      sub_1BFE94AD4(v3, v2, 1);
      sub_1BFE94AD4(v6, v7, 1);
      sub_1C0074DE4(v3, v2, v4, 1);
      sub_1C0074DE4(v6, v7, v8, 1);
      sub_1C0074DE4(v6, v7, v8, 1);
      sub_1C0074DE4(v3, v2, v4, 1);
      if (v10) {
        return v18;
      }
      return 0;
    }
    sub_1BFE94AB4(*(void *)a1, v2, 1);
    sub_1BFE94AB4(v3, v2, 1);
  }
  else if ((v8 & 1) == 0)
  {
    uint64_t v18 = 1;
    sub_1C0074D84(*(void *)a2, *(void *)(a2 + 8), v8, 1);
    sub_1C0074D84(v3, v2, v4, 1);
    sub_1C0074D84(v6, v7, v8, 1);
    sub_1BFE94AD4(v3, v2, 0);
    sub_1BFE94AD4(v6, v7, 0);
    sub_1C0074DE4(v3, v2, v4, 1);
    sub_1C0074DE4(v6, v7, v8, 1);
    sub_1C0074DE4(v6, v7, v8, 1);
    sub_1C0074DE4(v3, v2, v4, 1);
    if ((((v3 & 1) == 0) ^ v6)) {
      return v18;
    }
    return 0;
  }
  sub_1C0074D84(v6, v7, v8, 1);
  sub_1C0074D84(v6, v7, v8, 1);
  sub_1C0074D84(v3, v2, v4, 1);
  sub_1C0074D84(v6, v7, v8, 1);
  sub_1BFE94AD4(v3, v2, v4 & 1);
  sub_1BFE94AD4(v6, v7, v8 & 1);
  sub_1C0074DE4(v3, v2, v4, 1);
  sub_1C0074DE4(v6, v7, v8, 1);
  sub_1C0074DE4(v6, v7, v8, 1);
  uint64_t v11 = v3;
  uint64_t v12 = v2;
  char v13 = v4;
  char v14 = 1;
LABEL_22:
  sub_1C0074DE4(v11, v12, v13, v14);
  return 0;
}

unint64_t sub_1C0372780()
{
  unint64_t result = qword_1EB860940;
  if (!qword_1EB860940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860940);
  }
  return result;
}

unint64_t sub_1C03727D4(void *a1)
{
  a1[1] = sub_1C0074E5C();
  a1[2] = sub_1C037280C();
  unint64_t result = sub_1C0372860();
  a1[3] = result;
  return result;
}

unint64_t sub_1C037280C()
{
  unint64_t result = qword_1EB8605F8;
  if (!qword_1EB8605F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8605F8);
  }
  return result;
}

unint64_t sub_1C0372860()
{
  unint64_t result = qword_1EA19A278;
  if (!qword_1EA19A278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A278);
  }
  return result;
}

uint64_t destroy for FormatVideoPlayerLive(uint64_t a1)
{
  return sub_1C0074DE4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatVideoPlayerLive(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0074D84(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerLive(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0074D84(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C0074DE4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerLive(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C0074DE4(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1C03729E8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerLive()
{
  return &type metadata for FormatVideoPlayerLive;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerLive.CodingType()
{
  return &type metadata for FormatVideoPlayerLive.CodingType;
}

unint64_t sub_1C0372A40()
{
  unint64_t result = qword_1EA19A280;
  if (!qword_1EA19A280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A280);
  }
  return result;
}

void sub_1C0372A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1BFD35658;
  *(void *)(v9 + 24) = v8;
  void v11[4] = sub_1C0372EF8;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_1BFD34E78;
  uint64_t v11[3] = &block_descriptor_20;
  char v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 1, v10);
  _Block_release(v10);
}

void sub_1C0372BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0372A94(a1, a2, a3, a4, *(void **)(v4 + 24));
}

uint64_t sub_1C0372BB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0372BE8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151E16C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C151E1DC();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8908D8 != -1) {
    swift_once();
  }
  v18[1] = qword_1EB8908C8;
  char v13 = (void *)swift_allocObject();
  void v13[2] = a2;
  uint64_t v13[3] = a3;
  v13[4] = a1;
  aBlock[4] = sub_1C03731B0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  void aBlock[3] = &block_descriptor_9;
  char v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = a1;
  sub_1C151E19C();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1BFDE8D3C((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  char v16 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C006468C(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00]);
  sub_1C03731E0((unint64_t *)&qword_1EB879C80, (unint64_t *)&qword_1EB879C70, v16);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v12, v9, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  return swift_release();
}

uint64_t sub_1C0372EF8(void *a1)
{
  return sub_1C0372BE8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0372F00()
{
  v7[0] = sub_1C151F55C();
  uint64_t v0 = *(void *)(v7[0] - 8);
  MEMORY[0x1F4188790](v7[0]);
  uint64_t v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C151F52C();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  sub_1C151E1AC();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1BFDE8D3C((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C006468C(0, (unint64_t *)&unk_1EB879FB0, MEMORY[0x1E4FBCC10]);
  sub_1C03731E0((unint64_t *)&qword_1EB879FC0, (unint64_t *)&unk_1EB879FB0, v5);
  sub_1C151FFBC();
  (*(void (**)(char *, void, void))(v0 + 104))(v2, *MEMORY[0x1E4FBCC58], v7[0]);
  uint64_t result = sub_1C151F5AC();
  qword_1EB8908C8 = result;
  return result;
}

uint64_t sub_1C0373170()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C03731B0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1C03731E0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C006468C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C037323C(uint64_t a1)
{
  uint64_t v19 = a1 + 56;
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  uint64_t v3 = v2 & *(void *)(a1 + 56);
  int64_t v20 = (unint64_t)(v1 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v5 = 0;
  unint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
      goto LABEL_20;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v5 >= v20) {
      goto LABEL_33;
    }
    uint64_t v7 = *(void *)(v19 + 8 * v5);
    if (!v7) {
      break;
    }
LABEL_19:
    uint64_t v3 = (v7 - 1) & v7;
LABEL_20:
    sub_1BFF27ECC();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C151FF1C();
    if (*(void *)(v9 + 16) != 2 || (swift_bridgeObjectRetain(), uint64_t result = sub_1C151EF7C(), (v10 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      if (*(void *)(v9 + 16) < 2uLL) {
        goto LABEL_35;
      }
      uint64_t v18 = result;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_1C151EF7C();
      char v13 = v12;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1C0EE43AC(0, v17[2] + 1, 1, v17);
          unint64_t v17 = (void *)result;
        }
        unint64_t v15 = v17[2];
        unint64_t v14 = v17[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t result = (uint64_t)sub_1C0EE43AC((void *)(v14 > 1), v15 + 1, 1, v17);
          unint64_t v17 = (void *)result;
        }
        v17[2] = v15 + 1;
        char v16 = &v17[2 * v15];
        v16[4] = v18;
        v16[5] = v11;
      }
    }
  }
  int64_t v8 = v5 + 1;
  if (v5 + 1 >= v20) {
    goto LABEL_33;
  }
  uint64_t v7 = *(void *)(v19 + 8 * v8);
  if (v7) {
    goto LABEL_18;
  }
  int64_t v8 = v5 + 2;
  if (v5 + 2 >= v20) {
    goto LABEL_33;
  }
  uint64_t v7 = *(void *)(v19 + 8 * v8);
  if (v7) {
    goto LABEL_18;
  }
  int64_t v8 = v5 + 3;
  if (v5 + 3 >= v20) {
    goto LABEL_33;
  }
  uint64_t v7 = *(void *)(v19 + 8 * v8);
  if (v7) {
    goto LABEL_18;
  }
  int64_t v8 = v5 + 4;
  if (v5 + 4 >= v20)
  {
LABEL_33:
    swift_release();
    return (uint64_t)v17;
  }
  uint64_t v7 = *(void *)(v19 + 8 * v8);
  if (v7)
  {
LABEL_18:
    int64_t v5 = v8;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v5 >= v20) {
      goto LABEL_33;
    }
    uint64_t v7 = *(void *)(v19 + 8 * v5);
    ++v8;
    if (v7) {
      goto LABEL_19;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C037353C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C037377C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0373570(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = sub_1C037323C(a1);
  swift_retain();
  sub_1C0373680(v3, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = (void *)sub_1C1518E7C();
  type metadata accessor for FeedWeather(0);
  sub_1C151940C();

  swift_bridgeObjectRelease();
  int64_t v5 = (void *)sub_1C1518E7C();
  sub_1C0373C1C(0, &qword_1EB85C2F8, MEMORY[0x1E4FAA920], MEMORY[0x1E4FBB320]);
  uint64_t v6 = sub_1C1518FFC();
  swift_release();

  return v6;
}

uint64_t sub_1C0373680(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v6 = (long long *)(a1 + 32);
    do
    {
      uint64_t v7 = a2[5];
      uint64_t v8 = a2[6];
      long long v9 = *v6++;
      __swift_project_boxed_opaque_existential_1(a2 + 2, v7);
      long long v10 = v9;
      (*(void (**)(long long *, uint64_t, uint64_t))(v8 + 8))(&v10, v7, v8);
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      --v3;
    }
    while (v3);
    return v11;
  }
  return result;
}

uint64_t sub_1C037377C(uint64_t a1)
{
  uint64_t v36 = sub_1C151829C();
  uint64_t v2 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0373C1C(0, (unint64_t *)&unk_1EB85E888, type metadata accessor for FeedWeather, MEMORY[0x1E4FAB160]);
  MEMORY[0x1F4188790](v4 - 8);
  char v34 = (char *)v27 - v5;
  uint64_t v33 = type metadata accessor for FeedWeather(0);
  uint64_t v6 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v27 - v10;
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)v27 - v13;
  uint64_t v32 = sub_1C151808C();
  uint64_t v15 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  unint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (v18)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1C0062EF4(0, v18, 0);
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v21 = *(void *)(v6 + 72);
    uint64_t v28 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v29 = v21;
    v27[1] = v15 + 32;
    uint64_t v30 = v8;
    uint64_t v31 = v15;
    do
    {
      sub_1C0373C80(v20, (uint64_t)v14);
      sub_1C0373C80((uint64_t)v14, (uint64_t)v11);
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_1C151EF6C();
      sub_1C151E80C();
      sub_1C151EF6C();
      sub_1C0373C80((uint64_t)v11, (uint64_t)v8);
      if (qword_1EB85E868 != -1) {
        swift_once();
      }
      uint64_t v22 = v36;
      uint64_t v23 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB85AAE8);
      (*v28)(v35, v23, v22);
      sub_1C151945C();
      sub_1C0373CE4((uint64_t)v11);
      sub_1C151807C();
      sub_1C0373CE4((uint64_t)v14);
      uint64_t v19 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0062EF4(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v39;
      }
      unint64_t v25 = *(void *)(v19 + 16);
      unint64_t v24 = *(void *)(v19 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1C0062EF4(v24 > 1, v25 + 1, 1);
        uint64_t v19 = v39;
      }
      *(void *)(v19 + 16) = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v19+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v25, v17, v32);
      uint64_t v39 = v19;
      uint64_t v8 = v30;
      v20 += v29;
      --v18;
    }
    while (v18);
  }
  return v19;
}

void sub_1C0373C1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0373C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0373CE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedWeather(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0373D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v30 = a5;
  uint64_t v6 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = sub_1C1515FDC();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v25 = (char *)&v24 - v12;
  uint64_t v31 = a1;
  sub_1BFFAF120(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v14 = *v8;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    unint64_t v24 = (char *)v8 + *(int *)(v15 + 48);
    int v33 = *(unsigned __int8 *)(v14 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    uint64_t v16 = *(void *)(v14 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    unint64_t v17 = *(void **)(v14 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v16, v17);
    swift_release();
    sub_1BFF81FF0();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v24, v18);
  }
  else
  {
    swift_release();
    int v33 = *(unsigned __int8 *)(v14 + 49);
    uint64_t v16 = *(void *)(v14 + 88);
    unint64_t v17 = *(void **)(v14 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v16, v17);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(v16, v17);
  char v34 = v33;
  sub_1BFC41040((uint64_t)v10);
  uint64_t v19 = v25;
  sub_1C1515EDC();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v21 = v29;
  v20(v10, v29);
  uint64_t v22 = v32;
  swift_bridgeObjectRetain();
  sub_1C0A29D74(v31, v22, v30);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v21);
}

uint64_t sub_1C0374064@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v65 = a1;
  unsigned int v63 = a2;
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v66 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v62 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v61 = (uint64_t)&v61 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v61 - v9;
  sub_1C0178190();
  MEMORY[0x1F4188790](v11 - 8);
  unsigned int v64 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v61 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v19 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFAF120(v3, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v27 = v65;
    uint64_t v26 = v66;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = *(void *)v24;
      uint64_t v28 = *((void *)v24 + 1);
      uint64_t v30 = *((void *)v24 + 2);
      uint64_t v31 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v15, 1, 1, v31);
      uint64_t v32 = v61;
      uint64_t v33 = v67;
      sub_1C0373D40(v27, v29, v28, v30, v61);
      if (v33)
      {
        sub_1BFFAEE78((uint64_t)v15, (uint64_t (*)(void))sub_1C0178190);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF2918C();
      uint64_t v52 = v51;
      uint64_t v40 = swift_allocBox();
      uint64_t v54 = v53;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v53, v32, v4);
      *(void *)(v54 + *(int *)(v52 + 36)) = MEMORY[0x1E4FBC860];
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v32, v4);
      uint64_t v36 = 1;
    }
    else
    {
      uint64_t v44 = *(void *)v24;
      uint64_t v45 = *((void *)v24 + 1);
      uint64_t v46 = *((void *)v24 + 2);
      uint64_t v47 = v24[24];
      uint64_t v48 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v64, 1, 1, v48);
      uint64_t v49 = v62;
      uint64_t v50 = v67;
      sub_1C103B53C(v27, v44, v45, v46, v47, v62);
      if (v50)
      {
        sub_1BFFAEE78((uint64_t)v64, (uint64_t (*)(void))sub_1C0178190);
        return sub_1BFD7418C(v44, v45, v46, v47);
      }
      sub_1BFD7418C(v44, v45, v46, v47);
      sub_1BFF2918C();
      uint64_t v56 = v55;
      uint64_t v40 = swift_allocBox();
      uint64_t v58 = v57;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v57, v49, v4);
      *(void *)(v58 + *(int *)(v56 + 36)) = MEMORY[0x1E4FBC860];
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v49, v4);
      uint64_t v36 = 0;
      uint64_t v15 = v64;
    }
  }
  else
  {
    sub_1C0375048((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    uint64_t v35 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v36 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v18, 1, 1, v35);
    uint64_t v37 = *(void *)&v21[*(int *)(v19 + 20)];
    swift_bridgeObjectRetain();
    sub_1C0A29D74(v65, v37, (uint64_t)v10);
    swift_bridgeObjectRelease();
    sub_1BFF2918C();
    uint64_t v39 = v38;
    uint64_t v40 = swift_allocBox();
    uint64_t v42 = v41;
    uint64_t v43 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v41, v10, v4);
    *(void *)(v42 + *(int *)(v39 + 36)) = MEMORY[0x1E4FBC860];
    (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v4);
    sub_1BFFAEE78((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    uint64_t v15 = v18;
  }
  unsigned int v59 = v63;
  *unsigned int v63 = v40 | 0x6000000000000000;
  v59[1] = v36;
  uint64_t v60 = type metadata accessor for FormatOptionsNodeStatementResult();
  sub_1C0375048((uint64_t)v15, (uint64_t)v59 + *(int *)(v60 + 24), (uint64_t (*)(void))sub_1C0178190);
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 0, 1, v60);
}

uint64_t _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v38 - v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v38 - v13;
  sub_1C0374FE4();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v17[*(int *)(v18 + 56)];
  sub_1BFFAF120(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFFAF120(v39, v19, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1BFFAF120((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatURL);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1BFFAEE78((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
LABEL_17:
      char v28 = 0;
      uint64_t v27 = (uint64_t (*)(void))sub_1C0374FE4;
      goto LABEL_25;
    }
    sub_1C0375048(v19, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    if ((MEMORY[0x1C18BDA40](v14, v5) & 1) == 0
      || (sub_1BFD81AE8(*(void *)&v14[*(int *)(v3 + 20)], *(void *)&v5[*(int *)(v3 + 20)]) & 1) == 0)
    {
      sub_1BFFAEE78((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
      sub_1BFFAEE78((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
      goto LABEL_23;
    }
    sub_1BFFAEE78((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    sub_1BFFAEE78((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    char v28 = 1;
LABEL_24:
    uint64_t v27 = (uint64_t (*)(void))type metadata accessor for FormatURL;
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1BFFAF120((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v30 = *(void *)v8;
    uint64_t v29 = *((void *)v8 + 1);
    uint64_t v31 = *((void *)v8 + 2);
    char v32 = v8[24];
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_1BFD7418C(v30, v29, v31, v32);
      goto LABEL_17;
    }
    uint64_t v33 = *(void *)v19;
    uint64_t v34 = *(void *)(v19 + 8);
    uint64_t v35 = *(void *)(v19 + 16);
    char v36 = *(unsigned char *)(v19 + 24);
    v42[0] = v30;
    v42[1] = v29;
    v42[2] = v31;
    char v43 = v32;
    v40[0] = v33;
    v40[1] = v34;
    v40[2] = v35;
    char v41 = v36;
    char v28 = _s8NewsFeed16FormatURLBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v42, (uint64_t)v40);
    sub_1BFD7418C(v33, v34, v35, v36);
    sub_1BFD7418C(v30, v29, v31, v32);
    goto LABEL_24;
  }
  sub_1BFFAF120((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t v22 = *v11;
  uint64_t v21 = v11[1];
  uint64_t v23 = v11[2];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v24 = *(void *)(v19 + 16);
  BOOL v25 = v22 == *(void *)v19 && v21 == *(void *)(v19 + 8);
  if (!v25 && (sub_1C1520A9C() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v26 = sub_1BFD81AE8(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t (*)(void))type metadata accessor for FormatURL;
  if ((v26 & 1) == 0)
  {
LABEL_23:
    char v28 = 0;
    goto LABEL_24;
  }
  char v28 = 1;
LABEL_25:
  sub_1BFFAEE78((uint64_t)v17, v27);
  return v28 & 1;
}

uint64_t sub_1C0374B30(uint64_t a1)
{
  uint64_t result = sub_1C0065A48(&qword_1EA19A288, (void (*)(uint64_t))type metadata accessor for FormatURL);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0374B88(void *a1)
{
  a1[1] = sub_1C0065A48(&qword_1EB879A28, (void (*)(uint64_t))type metadata accessor for FormatURL);
  a1[2] = sub_1C0065A48(&qword_1EB85C2C8, (void (*)(uint64_t))type metadata accessor for FormatURL);
  uint64_t result = sub_1C0065A48(&qword_1EA19A290, (void (*)(uint64_t))type metadata accessor for FormatURL);
  a1[3] = result;
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatURL(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = *(void *)a2;
      uint64_t v10 = *(void *)(a2 + 8);
      uint64_t v11 = *(void *)(a2 + 16);
      char v12 = *(unsigned char *)(a2 + 24);
      sub_1BFE86E48(v9, v10, v11, v12);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v11;
      *(unsigned char *)(a1 + 24) = v12;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v7;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v13 = sub_1C1515FDC();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(a1 + *(int *)(v14 + 20)) = *(void *)(a2 + *(int *)(v14 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for FormatURL(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1BFFAEE78(a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v5 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      uint64_t v7 = *(void *)(a2 + 16);
      char v8 = *(unsigned char *)(a2 + 24);
      sub_1BFE86E48(v5, v6, v7, v8);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v7;
      *(unsigned char *)(a1 + 24) = v8;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v9 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(a1 + *(int *)(v10 + 20)) = *(void *)(a2 + *(int *)(v10 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for FormatURL(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFFAEE78((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1C0374FE4()
{
  if (!qword_1EA19A298)
  {
    type metadata accessor for FormatURL();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19A298);
    }
  }
}

uint64_t sub_1C0375048(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

NewsFeed::FeedBundleSessionState_optional __swiftcall FeedBundleSessionState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t FeedBundleSessionState.rawValue.getter()
{
  uint64_t v1 = 0x64657269707865;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C6261736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657669746361;
  }
}

uint64_t sub_1C0375164(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1492A30(*a1, *a2);
}

unint64_t sub_1C0375174()
{
  unint64_t result = qword_1EB894278;
  if (!qword_1EB894278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894278);
  }
  return result;
}

uint64_t sub_1C03751C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0375268()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03752F4()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedBundleSessionState_optional sub_1C0375390(Swift::String *a1)
{
  return FeedBundleSessionState.init(rawValue:)(*a1);
}

void sub_1C037539C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x64657269707865;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656C6261736964;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x657669746361;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C03753F8()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0375458()
{
  return sub_1C151EAEC();
}

unsigned char *storeEnumTagSinglePayload for FeedBundleSessionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0375574);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedBundleSessionState()
{
  return &type metadata for FeedBundleSessionState;
}

unint64_t sub_1C03755AC()
{
  unint64_t result = qword_1EA19A2A0;
  if (!qword_1EA19A2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A2A0);
  }
  return result;
}

uint64_t FeedLayoutContextFactory.__allocating_init(fontBookFactory:colorPaletteProvider:layoutAttributesFactoryProvider:)(long long *a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1BFC773DC(a1, v6 + 56);
  sub_1BFC773DC(a2, v6 + 16);
  *(void *)(v6 + 96) = a3;
  return v6;
}

uint64_t FeedLayoutContextFactory.init(fontBookFactory:colorPaletteProvider:layoutAttributesFactoryProvider:)(long long *a1, long long *a2, uint64_t a3)
{
  sub_1BFC773DC(a1, v3 + 56);
  sub_1BFC773DC(a2, v3 + 16);
  *(void *)(v3 + 96) = a3;
  return v3;
}

uint64_t sub_1C03756AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1BFE5CE80(a1, a2);
  uint64_t v4 = *(void *)(v2 + 96);
  type metadata accessor for FeedLayoutContext();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  return v5;
}

uint64_t FeedLayoutContextFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  return v0;
}

uint64_t FeedLayoutContextFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of FeedLayoutContextFactoryType.makeContext(columnOptions:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for FeedLayoutContextFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedLayoutContextFactory);
}

uint64_t dispatch thunk of FeedLayoutContextFactory.__allocating_init(fontBookFactory:colorPaletteProvider:layoutAttributesFactoryProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FeedLayoutContextFactory.makeContext(columnOptions:layoutOptions:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

char *sub_1C03757E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v8 = &v4[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
  *(void *)char v8 = 0;
  *((void *)v8 + 1) = 0;
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1D70]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  char v12 = &v11[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet];
  uint64_t v13 = sub_1C15154CC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);

  if (a3)
  {
    uint64_t v14 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  v47.receiver = v11;
  v47.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v47, sel_initWithStyle_reuseIdentifier_, a1, v14);

  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField;
  uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField];
  uint64_t v18 = v15;
  objc_msgSend(v17, sel_setDelegate_, v18);
  objc_msgSend(v17, sel_setTextAlignment_, 0);
  objc_msgSend(v17, sel_setClearButtonMode_, 1);
  objc_msgSend(v17, sel_setBorderStyle_, 0);
  objc_msgSend(v17, sel_setAutocorrectionType_, 1);
  objc_msgSend(v17, sel_setAutocapitalizationType_, 0);
  uint64_t v19 = self;
  id v20 = v17;
  id v21 = objc_msgSend(v19, sel_systemBlueColor);
  objc_msgSend(v20, sel_setTintColor_, v21);

  uint64_t v22 = *(void **)&v15[v16];
  objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v18, sel_onTextChange, 0x20000);
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = objc_msgSend(v23, sel_systemFontOfSize_, 15.0);
  objc_msgSend(v24, sel_setFont_, v25);

  id v26 = objc_msgSend(v18, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v15[v16]);

  uint64_t v27 = self;
  sub_1BFE4DBE0();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C15418C0;
  id v29 = objc_msgSend(*(id *)&v15[v16], sel_topAnchor);
  id v30 = objc_msgSend(v18, sel_contentView);
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 8.0);
  *(void *)(v28 + 32) = v32;
  id v33 = objc_msgSend(*(id *)&v15[v16], sel_leadingAnchor);
  id v34 = objc_msgSend(v18, sel_contentView);
  id v35 = objc_msgSend(v34, sel_leadingAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, 16.0);
  *(void *)(v28 + 40) = v36;
  id v37 = objc_msgSend(*(id *)&v15[v16], sel_trailingAnchor);
  id v38 = objc_msgSend(v18, sel_contentView);
  id v39 = objc_msgSend(v38, sel_trailingAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, -16.0);
  *(void *)(v28 + 48) = v40;
  id v41 = objc_msgSend(*(id *)&v15[v16], sel_bottomAnchor);
  id v42 = objc_msgSend(v18, sel_contentView);
  id v43 = objc_msgSend(v42, sel_bottomAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, -8.0);
  *(void *)(v28 + 56) = v44;
  sub_1C151EBEC();
  sub_1C03767D0();
  uint64_t v45 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v45);

  return v18;
}

uint64_t sub_1C0375E80()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C0376414();
  *(void *)&double v3 = MEMORY[0x1F4188790](v2 - 8).n128_u64[0];
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.receiver = v0;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, sel_prepareForReuse, v3);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField], sel_setText_, 0);
  uint64_t v6 = &v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  sub_1BFC3E5C0(v7);
  uint64_t v8 = sub_1C15154CC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet];
  swift_beginAccess();
  sub_1C037676C((uint64_t)v5, v9);
  return swift_endAccess();
}

id sub_1C0376000()
{
  id result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField), sel_text);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1C151E62C();
    uint64_t v5 = v4;

    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0
                                                 + OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange);
    if (v6)
    {
      swift_retain();
      v6(v3, v5);
      sub_1BFC3E5C0((uint64_t)v6);
    }
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0376104(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  v17[3] = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v16 = a4 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        int v10 = sub_1C15200EC();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v17[0] = a3;
          v17[1] = v16;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_1C152020C();
        }
        int v10 = sub_1C152021C();
      }
      uint64_t v12 = v11;
      LODWORD(v17[0]) = v10;
      char v13 = a1(v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return v14 & 1;
      }
      if ((v13 & 1) == 0) {
        break;
      }
      v9 += v12;
      if (v9 >= v5)
      {
        swift_bridgeObjectRelease();
        char v14 = 1;
        return v14 & 1;
      }
    }
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  else
  {
    char v14 = 1;
  }
  return v14 & 1;
}

uint64_t sub_1C0376318()
{
  return type metadata accessor for DebugFormatCreatePackageTableViewCell();
}

uint64_t type metadata accessor for DebugFormatCreatePackageTableViewCell()
{
  uint64_t result = qword_1EA19A328;
  if (!qword_1EA19A328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C037636C()
{
  sub_1C0376414();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1C0376414()
{
  if (!qword_1EB8710D0)
  {
    sub_1C15154CC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8710D0);
    }
  }
}

uint64_t sub_1C037646C(uint64_t a1, unint64_t a2)
{
  sub_1C0376414();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C15154CC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2 + OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet;
  swift_beginAccess();
  sub_1C0376674(v12, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C03766D8((uint64_t)v7);
    char v13 = 1;
  }
  else
  {
    uint64_t v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    MEMORY[0x1F4188790](v14);
    *(&v16 - 2) = (uint64_t)v11;
    swift_bridgeObjectRetain();
    char v13 = sub_1C0376104((uint64_t (*)(void *))sub_1C0376734, (uint64_t)(&v16 - 4), a1, a2);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v13 & 1;
}

uint64_t sub_1C0376674(uint64_t a1, uint64_t a2)
{
  sub_1C0376414();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03766D8(uint64_t a1)
{
  sub_1C0376414();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1C0376734()
{
  return (sub_1C151547C() & 1) == 0;
}

uint64_t sub_1C037676C(uint64_t a1, uint64_t a2)
{
  sub_1C0376414();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C03767D0()
{
  unint64_t result = qword_1EA1A7F70;
  if (!qword_1EA1A7F70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A7F70);
  }
  return result;
}

char *sub_1C0376810(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer;
  *(void *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v9 = &v7[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets];
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)uint64_t v9 = _Q0;
  *((_OWORD *)v9 + 1) = _Q0;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleTipSize] = 0x4018000000000000;
  uint64_t v15 = *a1;
  unint64_t v47 = a1[1];
  unint64_t v16 = v47;
  uint64_t v48 = v15;
  uint64_t v17 = a1[4];
  unint64_t v46 = a1[3];
  unint64_t v18 = v46;
  uint64_t v19 = &v7[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_metric];
  long long v20 = *((_OWORD *)a1 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
  *((_OWORD *)v19 + 1) = v20;
  *((void *)v19 + 4) = v17;
  sub_1BFFAF7A4((uint64_t)&v48);
  sub_1BFFAF7A4((uint64_t)&v47);
  sub_1BFFAF7A4((uint64_t)&v46);

  v45.receiver = v7;
  v45.super_class = ObjectType;
  id v21 = (char *)objc_msgSendSuper2(&v45, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v22 = sub_1C0EC81CC(v16, v18);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  id v23 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v23, sel_setCornerRadius_, 6.0);

  uint64_t v24 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label;
  id v25 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label];
  id v26 = self;
  double v27 = *MEMORY[0x1E4FB09E0];
  id v28 = v25;
  id v29 = objc_msgSend(v26, sel_monospacedSystemFontOfSize_weight_, 10.0, v27);
  objc_msgSend(v28, sel_setFont_, v29);

  id v30 = *(void **)&v21[v24];
  id v31 = self;
  id v32 = v30;
  id v33 = objc_msgSend(v31, sel_whiteColor);
  objc_msgSend(v32, sel_setTextColor_, v33);

  id v34 = *(void **)&v21[v24];
  objc_msgSend(v34, sel_setNumberOfLines_, 0);
  id v35 = v34;
  sub_1C0EC7E04();
  id v36 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setText_, v36);

  objc_msgSend(v21, sel_addSubview_, *(void *)&v21[v24]);
  uint64_t v37 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer;
  id v38 = *(id *)&v21[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer];
  id v39 = sub_1C0EC81CC(v16, v18);
  sub_1BFCA59C8((uint64_t)&v48);
  sub_1BFCA59C8((uint64_t)&v47);
  sub_1BFCA59C8((uint64_t)&v46);
  id v40 = objc_msgSend(v39, sel_CGColor);

  objc_msgSend(v38, sel_setFillColor_, v40);
  id v41 = *(void **)&v21[v37];
  objc_msgSend(v41, sel_setPosition_, 0.0, 0.0);
  id v42 = objc_msgSend(v21, sel_layer);
  id v43 = v41;
  objc_msgSend(v42, sel_addSublayer_, v43);

  return v21;
}

void sub_1C0376BEC()
{
  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, UIEdgeInsetsInsetRect(v2, v3, v4, v5, *(double *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets], *(double *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets + 8]));
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v22);
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v23);
  sub_1C151F9AC();
  double v7 = v6;
  double v9 = v8;
  sub_1C151F9AC();
  double v11 = v10;
  double v13 = v12;
  sub_1C151F9BC();
  double v15 = v14;
  double v17 = v16;
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  objc_msgSend(v18, sel_moveToPoint_, v7, v9);
  objc_msgSend(v18, sel_addLineToPoint_, v15, v17);
  objc_msgSend(v18, sel_addLineToPoint_, v11, v13);
  objc_msgSend(v18, sel_addLineToPoint_, v7, v9);
  objc_msgSend(v18, sel_closePath);
  uint64_t v19 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer];
  id v20 = objc_msgSend(v18, sel_CGPath);
  objc_msgSend(v19, sel_setPath_, v20);
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceMetricView()
{
  return self;
}

void sub_1C0376FE8()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  double v3 = &v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets];
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)double v3 = _Q0;
  *((_OWORD *)v3 + 1) = _Q0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleTipSize] = 0x4018000000000000;

  sub_1C152040C();
  __break(1u);
}

uint64_t FeedTopicClusteringResult.clusters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedTopicClusteringResult.orphanedHeadlines.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FeedTopicClusteringResult __swiftcall FeedTopicClusteringResult.init(clusters:orphanedHeadlines:)(Swift::OpaquePointer clusters, Swift::OpaquePointer orphanedHeadlines)
{
  v2->_rawValue = clusters._rawValue;
  v2[1]._rawValue = orphanedHeadlines._rawValue;
  result.orphanedHeadlines = orphanedHeadlines;
  result.clusters = clusters;
  return result;
}

void static FeedTopicClusteringResult.empty.getter(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
}

uint64_t FeedTopicClusteringResult.scoredHeadlines.getter()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 40;
    do
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_1C10485A0(v4);
      v3 += 24;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v7;
  }
  uint64_t v8 = v1;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1C10485A0(v5);
  return v8;
}

uint64_t static FeedTopicClusteringResult.- infix(_:_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v35 = v4;
    uint64_t v8 = 0;
    uint64_t v6 = v37;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        double v9 = (void *)MEMORY[0x1C18C7CB0](v8, a2);
      }
      else
      {
        double v9 = *(void **)(a2 + 8 * v8 + 32);
        swift_unknownObjectRetain();
      }
      id v10 = objc_msgSend(v9, sel_identifier);
      uint64_t v11 = sub_1C151E62C();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();

      unint64_t v15 = *(void *)(v37 + 16);
      unint64_t v14 = *(void *)(v37 + 24);
      if (v15 >= v14 >> 1) {
        sub_1BFF661B8(v14 > 1, v15 + 1, 1);
      }
      ++v8;
      *(void *)(v37 + 16) = v15 + 1;
      unint64_t v16 = v37 + 16 * v15;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v13;
    }
    while (v5 != v8);
    uint64_t v4 = v35;
  }
  uint64_t v17 = sub_1BFEF4060(v6);
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C0379090(v19, (uint64_t)sub_1C0379088, v18);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v21 = *(void *)(v4 + 16);
  if (v21)
  {
    uint64_t v33 = v20;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v24 = v4;
      long long v36 = *(_OWORD *)(v4 + 16 * v22 + 32);
      id v25 = *(void **)(v4 + 16 * v22 + 32);
      swift_unknownObjectRetain_n();
      id v26 = *((id *)&v36 + 1);
      id v27 = objc_msgSend(v25, sel_articleID);
      uint64_t v28 = sub_1C151E62C();
      uint64_t v30 = v29;

      swift_unknownObjectRelease();
      LOBYTE(v27) = sub_1BFF896B4(v28, v30, v17);
      swift_bridgeObjectRelease();
      if (v27)
      {

        swift_unknownObjectRelease();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F6994(0, *(void *)(v23 + 16) + 1, 1);
        }
        unint64_t v32 = *(void *)(v23 + 16);
        unint64_t v31 = *(void *)(v23 + 24);
        if (v32 >= v31 >> 1) {
          sub_1C05F6994(v31 > 1, v32 + 1, 1);
        }
        *(void *)(v23 + 16) = v32 + 1;
        *(_OWORD *)(v23 + 16 * v32 + 32) = v36;
      }
      ++v22;
      uint64_t v4 = v24;
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = v33;
  }
  else
  {
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  *a3 = v20;
  a3[1] = v23;
  return result;
}

BOOL sub_1C037750C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  swift_unknownObjectRetain();
  id v5 = v4;
  id v6 = objc_msgSend(v3, sel_articleID);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  swift_unknownObjectRelease();
  LOBYTE(a2) = sub_1BFF896B4(v7, v9, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t FeedTopicClusteringResult.next(filterAgainst:)(void *a1, uint64_t *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v7 = *v3;
  uint64_t v6 = v3[1];
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t v10 = (uint64_t)&v40;
    sub_1BFF661B8(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v36 = v7;
    uint64_t v37 = a2;
    uint64_t v38 = v6;
    uint64_t v11 = 0;
    uint64_t v9 = v40;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = (void *)MEMORY[0x1C18C7CB0](v11, v4);
      }
      else
      {
        uint64_t v12 = *(void **)(v4 + 8 * v11 + 32);
        swift_unknownObjectRetain();
      }
      id v13 = objc_msgSend(v12, sel_identifier, v36, v37);
      uint64_t v14 = sub_1C151E62C();
      uint64_t v16 = v15;
      swift_unknownObjectRelease();

      uint64_t v40 = v9;
      unint64_t v18 = *(void *)(v9 + 16);
      unint64_t v17 = *(void *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BFF661B8(v17 > 1, v18 + 1, 1);
        uint64_t v9 = v40;
      }
      ++v11;
      *(void *)(v9 + 16) = v18 + 1;
      uint64_t v19 = v9 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
    }
    while (v8 != v11);
    a2 = v37;
    uint64_t v7 = v36;
  }
  uint64_t v20 = sub_1BFEF4060(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  unint64_t v22 = sub_1C037937C(v21, v20);
  uint64_t v10 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((v10 & 1) == 0)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22 < *(void *)(v7 + 16))
      {
        id v25 = (void *)(v7 + 24 * v22);
        uint64_t v27 = v25[4];
        uint64_t v26 = v25[5];
        uint64_t v28 = v25[6];
        uint64_t v10 = sub_1C0295428(v22 + 1, v7);
        unint64_t v32 = v31 >> 1;
        *a1 = v27;
        a1[1] = v26;
        a1[2] = v28;
        if (v30 == v31 >> 1)
        {
          if (*(void *)(v6 + 16))
          {
            *a2 = MEMORY[0x1E4FBC860];
            a2[1] = v6;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            return swift_unknownObjectRelease();
          }
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t result = swift_unknownObjectRelease();
LABEL_37:
          *a2 = 0;
          a2[1] = 0;
          return result;
        }
        uint64_t v7 = v30;
        unint64_t v4 = v31;
        a1 = v29;
        if ((v31 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
LABEL_25:
          uint64_t v33 = sub_1C00B2920(v10, (uint64_t)a1, v7, v4);
LABEL_32:
          swift_unknownObjectRelease();
          *a2 = v33;
          goto LABEL_33;
        }
        uint64_t v38 = v6;
        sub_1C1520B6C();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v34 = swift_dynamicCastClass();
        if (!v34)
        {
          swift_unknownObjectRelease();
          uint64_t v34 = MEMORY[0x1E4FBC860];
        }
        uint64_t v35 = *(void *)(v34 + 16);
        swift_release();
        if (!__OFSUB__(v32, v7))
        {
          if (v35 == v32 - v7)
          {
            uint64_t v33 = swift_dynamicCastClass();
            if (!v33)
            {
              swift_unknownObjectRelease();
              uint64_t v33 = MEMORY[0x1E4FBC860];
            }
            goto LABEL_32;
          }
          goto LABEL_43;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        swift_unknownObjectRelease();
        uint64_t v6 = v38;
        goto LABEL_25;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_37;
  }
  *a2 = MEMORY[0x1E4FBC860];
LABEL_33:
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t FeedTopicClusteringResult.stealHeadlines(from:count:consumedIdentifiers:)(void *a1, void *a2, int64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
LABEL_10:
    *a1 = v5;
    a1[1] = v6;
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
LABEL_31:
    swift_bridgeObjectRetain();
    return v22;
  }
  unint64_t v32 = a1;
  uint64_t v33 = v6;
  unint64_t v8 = v5 + 32;
  uint64_t v34 = v5;
  swift_bridgeObjectRetain();
  unint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = *(void **)v8;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = objc_msgSend(v10, sel_identifier);
    uint64_t v12 = sub_1C151E62C();
    uint64_t v14 = v13;

    uint64_t v15 = (uint64_t)objc_msgSend(a2, sel_identifier);
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    if (v12 == v16 && v14 == v18)
    {
      uint64_t v20 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    uint64_t v15 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      break;
    }
    ++v9;
    v8 += 24;
    if (v7 == v9)
    {
      uint64_t v5 = v34;
      swift_bridgeObjectRelease();
      a1 = v32;
      uint64_t v6 = v33;
      goto LABEL_10;
    }
  }
  uint64_t v20 = v34;
  swift_bridgeObjectRelease();
LABEL_13:
  if (v9 >= *(void *)(v20 + 16))
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1C00B2AD0(v7, v15, 0, (2 * v8) | 1);
    goto LABEL_23;
  }
  uint64_t v10 = *(void **)v8;
  uint64_t v21 = *(void *)(v8 + 8);
  uint64_t v12 = *(void *)(v8 + 16);
  uint64_t v15 = a4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1C03791AC(v21, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = a3;
  if (*(void *)(v7 + 16) < a3)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    *unint64_t v32 = v20;
    v32[1] = v33;
    goto LABEL_16;
  }
  if (a3 < 0) {
    goto LABEL_33;
  }
  uint64_t v15 = v7 + 32;
  sub_1C1520B6C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = *(void *)(v23 + 16);
  swift_release();
  a4 = v7 + 32;
  if (v24 != a3) {
    goto LABEL_34;
  }
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
LABEL_23:
  swift_bridgeObjectRelease();
  unint64_t v25 = *(void *)(v7 + 16);
  if (v25 < v8)
  {
    __break(1u);
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1C00B2AD0(v7, a4, v8, (2 * v25) | 1);
    goto LABEL_29;
  }
  a2 = (void *)v12;
  swift_unknownObjectRetain_n();
  uint64_t v26 = swift_dynamicCastClass();
  if (!v26)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  uint64_t v27 = *(void *)(v26 + 16);
  swift_release();
  if (v27 != v25 - v8) {
    goto LABEL_36;
  }
  uint64_t v28 = swift_dynamicCastClass();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v37 = v34;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1C03785AC(v9, (uint64_t)&v36);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  if (*(void *)(v37 + 16) >= v9)
  {
    sub_1C0246C8C(v9, v9, (uint64_t)v10, v28, (uint64_t)a2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *unint64_t v32 = v37;
    v32[1] = v33;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0377DB0(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1C0378FD4(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
      sub_1C151EBEC();
      return v11;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0377E9C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0377F1C(a1, (uint64_t (*)(uint64_t))sub_1BFEA9D48, (uint64_t (*)(void))type metadata accessor for FeedBannerAd, (uint64_t (*)(void))type metadata accessor for FeedBannerAd, a2);
}

uint64_t sub_1C0377EDC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0377F1C(a1, (uint64_t (*)(uint64_t))sub_1C0378E1C, (uint64_t (*)(void))type metadata accessor for FeedCustomItem, (uint64_t (*)(void))type metadata accessor for FeedCustomItem, a2);
}

uint64_t sub_1C0377F1C@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = *v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v11 = a2(v11);
  }
  unint64_t v12 = *(void *)(v11 + 16);
  if (v12 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v13 = v12 - 1;
  uint64_t v14 = *(void *)(a3(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)) + v15 * a1;
  uint64_t result = sub_1BFEA47E8(v16, a5, a4);
  if ((uint64_t)(v13 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1C152052C();
    __break(1u);
    return result;
  }
  if (v15 > 0 || v16 >= v16 + v15 + v15 * (v13 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v15)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v11 + 16) = v13;
  uint64_t *v5 = v11;
  return result;
}

uint64_t sub_1C03780B0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0377F1C(a1, (uint64_t (*)(uint64_t))sub_1C0378E30, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic, a2);
}

uint64_t sub_1C03780F0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378E44(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    unint64_t v8 = &v5[8 * a1];
    long long v10 = *((_OWORD *)v8 + 2);
    uint64_t v9 = v8 + 4;
    char v11 = *((unsigned char *)v9 + 16);
    uint64_t v12 = v9[5];
    *(_OWORD *)a2 = v10;
    *(unsigned char *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v9 + 3);
    *(void *)(a2 + 40) = v12;
    *(_OWORD *)(a2 + 48) = *((_OWORD *)v9 + 3);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v9, v9 + 8, (v7 - a1) << 6);
      void v5[2] = v7;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C03781F0@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378E58(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = &v5[26 * a1];
    long long v8 = v7[13];
    unint64_t v9 = v6 - 1;
    a2[10] = v7[12];
    a2[11] = v8;
    a2[12] = v7[14];
    long long v10 = v7[9];
    a2[6] = v7[8];
    a2[7] = v10;
    long long v11 = v7[11];
    a2[8] = v7[10];
    a2[9] = v11;
    long long v12 = v7[5];
    a2[2] = v7[4];
    a2[3] = v12;
    long long v13 = v7[7];
    a2[4] = v7[6];
    a2[5] = v13;
    long long v14 = v7[3];
    *a2 = v7[2];
    a2[1] = v14;
    uint64_t v15 = v6 - 1 - a1;
    if (v15 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 2, v7 + 15, 208 * v15);
      void v5[2] = v9;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C037830C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0377F1C(a1, (uint64_t (*)(uint64_t))sub_1C0378E6C, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed, a2);
}

uint64_t sub_1C037834C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378E80(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = &v5[19 * a1];
    long long v8 = *((_OWORD *)v7 + 9);
    unint64_t v9 = v6 - 1;
    *(_OWORD *)(a2 + 96) = *((_OWORD *)v7 + 8);
    *(_OWORD *)(a2 + 112) = v8;
    *(_OWORD *)(a2 + 128) = *((_OWORD *)v7 + 10);
    *(unsigned char *)(a2 + 144) = *((unsigned char *)v7 + 176);
    long long v10 = *((_OWORD *)v7 + 5);
    *(_OWORD *)(a2 + 32) = *((_OWORD *)v7 + 4);
    *(_OWORD *)(a2 + 48) = v10;
    long long v11 = *((_OWORD *)v7 + 7);
    *(_OWORD *)(a2 + 64) = *((_OWORD *)v7 + 6);
    *(_OWORD *)(a2 + 80) = v11;
    long long v12 = *((_OWORD *)v7 + 3);
    *(_OWORD *)a2 = *((_OWORD *)v7 + 2);
    *(_OWORD *)(a2 + 16) = v12;
    uint64_t v13 = v6 - 1 - a1;
    if (v13 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 4, v7 + 23, 152 * v13);
      void v5[2] = v9;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0378460@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378E94(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = &v5[18 * a1];
    long long v8 = v7[9];
    unint64_t v9 = v6 - 1;
    a2[6] = v7[8];
    a2[7] = v8;
    *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v7 + 153);
    long long v10 = v7[5];
    a2[2] = v7[4];
    a2[3] = v10;
    long long v11 = v7[7];
    a2[4] = v7[6];
    a2[5] = v11;
    long long v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    uint64_t v13 = v6 - 1 - a1;
    if (v13 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 2, v7 + 11, 144 * v13);
      void v5[2] = v9;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C037856C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0377F1C(a1, (uint64_t (*)(uint64_t))sub_1BFFB97BC, type metadata accessor for FeedHeadline, type metadata accessor for FeedHeadline, a2);
}

uint64_t sub_1C03785AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378ED0(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = &v5[3 * a1];
    long long v9 = *((_OWORD *)v7 + 2);
    long long v8 = v7 + 4;
    uint64_t v10 = v8[2];
    unint64_t v11 = v6 - 1;
    *(_OWORD *)a2 = v9;
    *(void *)(a2 + 16) = v10;
    uint64_t v12 = v6 - 1 - a1;
    if (v12 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v8, v8 + 3, 24 * v12);
      void v5[2] = v11;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C03786A0(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1C0378FD4(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_1C151EBEC();
      return v11;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0378784@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0377F1C(a1, (uint64_t (*)(uint64_t))sub_1C0378EE4, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner, a2);
}

uint64_t sub_1C03787C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378EF8(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = &v5[11 * a1];
    uint64_t v9 = v7[4];
    uint64_t v10 = v7[5];
    unint64_t v8 = v7 + 4;
    unint64_t v11 = v6 - 1;
    char v12 = *((unsigned char *)v8 + 32);
    long long v13 = *(_OWORD *)(v8 + 5);
    uint64_t v14 = v8[7];
    uint64_t v15 = v8[8];
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = *((_OWORD *)v8 + 1);
    *(unsigned char *)(a2 + 32) = v12;
    *(_OWORD *)(a2 + 40) = v13;
    *(void *)(a2 + 56) = v14;
    *(void *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 72) = *(_OWORD *)(v8 + 9);
    if ((uint64_t)(v11 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v8, v8 + 11, 88 * (v11 - a1));
      void v5[2] = v11;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C03788D4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1BFFFFDE0(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    unint64_t v8 = &v5[7 * a1];
    uint64_t v10 = v8[4];
    uint64_t v11 = v8[5];
    uint64_t v9 = v8 + 4;
    char v12 = *((unsigned char *)v9 + 32);
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(_OWORD *)(a2 + 16) = *((_OWORD *)v9 + 1);
    *(unsigned char *)(a2 + 32) = v12;
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(v9 + 5);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v9, v9 + 7, 56 * (v7 - a1));
      void v5[2] = v7;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C03789D4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378F0C(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = &v5[6 * a1];
      long long v10 = *((_OWORD *)v9 + 2);
      v9 += 4;
      char v11 = *((unsigned char *)v9 + 40);
      uint64_t v12 = v9[4];
      long long v14 = *((_OWORD *)v9 + 1);
      uint64_t result = (uint64_t)memmove(v9, v9 + 6, 48 * v8);
      void v5[2] = v7;
      Swift::OpaquePointer *v2 = v5;
      *(_OWORD *)a2 = v10;
      *(_OWORD *)(a2 + 16) = v14;
      *(void *)(a2 + 32) = v12;
      *(unsigned char *)(a2 + 40) = v11;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0378ADC(unint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1C0378F20(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[4 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0378BD4(unint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1C0378F48(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0378CB4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C0378F5C(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = &v5[8 * a1];
    long long v10 = *((_OWORD *)v8 + 2);
    uint64_t v9 = v8 + 4;
    uint64_t v11 = v9[4];
    char v12 = *((unsigned char *)v9 + 40);
    long long v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)a2 = v10;
    *(_OWORD *)(a2 + 16) = v13;
    *(void *)(a2 + 32) = v11;
    *(unsigned char *)(a2 + 40) = v12;
    *(_OWORD *)(a2 + 48) = *((_OWORD *)v9 + 3);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v9, v9 + 8, (v7 - a1) << 6);
      void v5[2] = v7;
      Swift::OpaquePointer *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0378DB0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0377F1C(a1, (uint64_t (*)(uint64_t))sub_1C0378F70, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup, a2);
}

void *sub_1C0378DF0(void *a1)
{
  return sub_1BFEA4268(0, a1[2], 0, a1);
}

void *sub_1C0378E08(void *a1)
{
  return sub_1C0EDFE80(0, a1[2], 0, a1);
}

uint64_t sub_1C0378E1C(unint64_t a1)
{
  return sub_1C0EE36F0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1C0378E30(unint64_t a1)
{
  return sub_1C0EE3768(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C0378E44(void *a1)
{
  return sub_1C0EE37E0(0, a1[2], 0, a1);
}

void *sub_1C0378E58(void *a1)
{
  return sub_1C0EE3A50(0, a1[2], 0, a1);
}

uint64_t sub_1C0378E6C(unint64_t a1)
{
  return sub_1C0EE3BC0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C0378E80(void *a1)
{
  return sub_1C0EE3D54(0, a1[2], 0, a1);
}

void *sub_1C0378E94(void *a1)
{
  return sub_1C0EE3EDC(0, a1[2], 0, a1);
}

uint64_t sub_1C0378EA8(unint64_t a1)
{
  return sub_1C0EE42D4(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1C0378EBC(unint64_t a1)
{
  return sub_1C0EE4364(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C0378ED0(void *a1)
{
  return sub_1C0EE44DC(0, a1[2], 0, a1);
}

uint64_t sub_1C0378EE4(unint64_t a1)
{
  return sub_1C0EE5EFC(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C0378EF8(void *a1)
{
  return sub_1C0EE5F44(0, a1[2], 0, a1);
}

void *sub_1C0378F0C(void *a1)
{
  return sub_1C0EE6090(0, a1[2], 0, a1);
}

void *sub_1C0378F20(void *a1)
{
  return sub_1C0EE63E0(0, a1[2], 0, a1);
}

uint64_t sub_1C0378F34(unint64_t a1)
{
  return sub_1C0EE6F08(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C0378F48(void *a1)
{
  return sub_1BFEF9B68(0, a1[2], 0, a1);
}

void *sub_1C0378F5C(void *a1)
{
  return sub_1C0EE6F98(0, a1[2], 0, a1);
}

uint64_t sub_1C0378F70(unint64_t a1)
{
  return sub_1BFEDB2CC(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1C0378F84(unint64_t a1)
{
  return sub_1C0EE8640(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1C0378F98(unint64_t a1)
{
  return sub_1C0EE8B48(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C0378FAC(void *a1)
{
  return sub_1C0EE8B90(0, a1[2], 0, a1);
}

uint64_t sub_1C0378FC0(unint64_t a1)
{
  return sub_1C0EE8F5C(0, *(void *)(a1 + 16), 0, a1);
}

void sub_1C0378FD4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1C18C7CC0);
}

uint64_t sub_1C0379050()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_1C0379088(uint64_t a1)
{
  return sub_1C037750C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0379090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F70D0(0, v3, 0);
    uint64_t v4 = v17;
    unint64_t v6 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v10 = sub_1C06221F8(a2, a3, v8);
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v17 + 16);
      unint64_t v11 = *(void *)(v17 + 24);
      if (v12 >= v11 >> 1) {
        sub_1C05F70D0(v11 > 1, v12 + 1, 1);
      }
      v6 += 3;
      *(void *)(v17 + 16) = v12 + 1;
      long long v13 = (void *)(v17 + 24 * v12);
      v13[4] = v7;
      v13[5] = v10;
      v13[6] = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1C03791AC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v3 = 0;
  uint64_t v17 = result + 32;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v16 = v4;
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    for (unint64_t i = v3; ; ++i)
    {
      if (v5 == i)
      {
        __break(1u);
        return result;
      }
      long long v19 = *(_OWORD *)(v17 + 16 * i);
      unint64_t v3 = i + 1;
      uint64_t v7 = *(void **)(v17 + 16 * i);
      swift_unknownObjectRetain_n();
      id v8 = *((id *)&v19 + 1);
      id v9 = objc_msgSend(v7, sel_articleID);
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      swift_unknownObjectRelease();
      LOBYTE(v9) = sub_1BFF896B4(v10, v12, a2);
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        break;
      }

      uint64_t result = swift_unknownObjectRelease();
      if (v2 == v3) {
        return v16;
      }
    }
    uint64_t v4 = v16;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C05F6994(0, *(void *)(v16 + 16) + 1, 1);
      uint64_t v4 = v16;
    }
    long long v13 = v19;
    unint64_t v15 = *(void *)(v4 + 16);
    unint64_t v14 = *(void *)(v4 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = sub_1C05F6994(v14 > 1, v15 + 1, 1);
      long long v13 = v19;
      uint64_t v4 = v16;
    }
    *(void *)(v4 + 16) = v15 + 1;
    *(_OWORD *)(v4 + 16 * v15 + 32) = v13;
  }
  while (v2 - 1 != i);
  return v4;
}

uint64_t sub_1C037937C(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22) {
    return 0;
  }
  uint64_t v2 = a2;
  uint64_t v3 = 0;
  uint64_t v23 = a1 + 32;
  uint64_t v24 = a2 + 56;
  do
  {
    uint64_t v4 = *(void **)(v23 + 24 * v3);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v5 = objc_msgSend(v4, sel_identifier);
    uint64_t v6 = sub_1C151E62C();
    uint64_t v8 = v7;

    if (!*(void *)(v2 + 16)) {
      goto LABEL_19;
    }
    uint64_t v9 = v2;
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t v10 = sub_1C1520E0C();
    uint64_t v11 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v12 = v10 & ~v11;
    if (((*(void *)(v24 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_19;
    }
    uint64_t v13 = *(void *)(v9 + 48);
    unint64_t v14 = (void *)(v13 + 16 * v12);
    BOOL v15 = *v14 == v6 && v14[1] == v8;
    if (!v15 && (sub_1C1520A9C() & 1) == 0)
    {
      uint64_t v16 = ~v11;
      for (unint64_t i = v12 + 1; ; unint64_t i = v18 + 1)
      {
        uint64_t v18 = i & v16;
        if (((*(void *)(v24 + (((i & v16) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v16)) & 1) == 0) {
          break;
        }
        long long v19 = (void *)(v13 + 16 * v18);
        BOOL v20 = *v19 == v6 && v19[1] == v8;
        if (v20 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_3;
        }
      }
LABEL_19:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    ++v3;
    uint64_t v2 = v9;
  }
  while (v3 != v22);
  return 0;
}

ValueMetadata *type metadata accessor for FeedTopicClusteringResult()
{
  return &type metadata for FeedTopicClusteringResult;
}

uint64_t FormatTextNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatTextNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF415D4(v2);
}

uint64_t FormatTextNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatTextNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatTextNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatTextNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatTextNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatTextNode.invalidation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 96);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  __int16 v5 = *(_WORD *)(v1 + 104);
  *(_WORD *)(a1 + 24) = v5;
  return sub_1BFF4DC7C(v2, v3, v4, v5);
}

uint64_t FormatTextNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 112);
}

uint64_t FormatTextNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatTextNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatTextNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 120);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

unint64_t sub_1C03798B8(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 120);
  *(void *)(v3 + 120) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatTextNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 120);
  *(void *)(v1 + 120) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatTextNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatTextNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatTextNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 128) = a1;
  return result;
}

uint64_t (*FormatTextNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatTextNode.accessibility.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 129);
}

void FormatTextNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 144);
  *(void *)a1 = *(void *)(v1 + 136);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatTextNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 152) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatTextNode.sourceItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0379BA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 160) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatTextNode.sourceItems.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 160) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNode.sourceItems.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatTextNode.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0379CD4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, long long *a9, uint64_t a10, uint64_t *a11, char a12, char *a13, uint64_t *a14, uint64_t a15, long long a16, uint64_t a17)
{
  uint64_t v20 = *a3;
  uint64_t v21 = *a4;
  uint64_t v22 = *a8;
  long long v28 = *a9;
  uint64_t v23 = *((void *)a9 + 2);
  __int16 v24 = *((_WORD *)a9 + 12);
  uint64_t v33 = *a11;
  char v25 = *a13;
  uint64_t v26 = *a14;
  char v29 = *((unsigned char *)a14 + 8);
  swift_beginAccess();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = v20;
  *(void *)(v17 + 40) = v21;
  swift_beginAccess();
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(void *)(v17 + 64) = a7;
  *(void *)(v17 + 72) = v22;
  *(_OWORD *)(v17 + 80) = v28;
  *(void *)(v17 + 96) = v23;
  *(_WORD *)(v17 + 104) = v24;
  swift_beginAccess();
  *(void *)(v17 + 112) = a10;
  *(unsigned char *)(v17 + 129) = v25;
  *(void *)(v17 + 136) = v26;
  *(unsigned char *)(v17 + 144) = v29;
  swift_beginAccess();
  *(void *)(v17 + 152) = a15;
  swift_beginAccess();
  *(_OWORD *)(v17 + 160) = a16;
  *(void *)(v17 + 176) = a17;
  swift_beginAccess();
  *(void *)(v17 + 120) = v33;
  swift_beginAccess();
  *(unsigned char *)(v17 + 128) = a12;
  return v17;
}

uint64_t FormatTextNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF4160C(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFF4BC8C(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(_WORD *)(v0 + 104));
  sub_1BFF0056C(*(void *)(v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0379F0C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      uint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      uint64_t result = a7();
      break;
    case 6u:
      uint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      uint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatTextNode.__deallocating_deinit()
{
  FormatTextNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C037A004(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFF41644(&qword_1EA19A360, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C037A05C(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFF41644(&qword_1EB87DA78, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNode);
  a1[2] = sub_1BFF41644(&qword_1EB85FD80, v3, (void (*)(uint64_t))type metadata accessor for FormatTextNode);
  uint64_t result = sub_1BFF41644(&qword_1EA19A368, v4, (void (*)(uint64_t))type metadata accessor for FormatTextNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C037A108(void *a1, void *a2)
{
  return static FormatTextNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C037A114(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFF41644(&qword_1EA19A370, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C037A18C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    uint64_t v11 = sub_1BFF4DC90(a2, a3, a4, a1);
    swift_release();
    uint64_t result = swift_release();
    if (!v5) {
      *a5 = v11;
    }
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFF41644((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C037A2D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, CGFloat a9@<D0>, CGFloat a10@<D1>, CGFloat a11@<D2>, CGFloat a12@<D3>)
{
  uint64_t v84 = a7;
  int64_t v82 = a5;
  uint64_t v81 = a4;
  uint64_t v78 = a3;
  int v83 = a8;
  sub_1BFF3D95C();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v79 = (uint64_t)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v80 = (uint64_t)&v73 - v22;
  uint64_t v77 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  __int16 v24 = (uint64_t *)((char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_1C151631C();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C1517A0C();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a1;
  uint64_t v86 = a2;
  uint64_t v31 = sub_1C151760C();
  if (!v31)
  {
    long long v93 = 0u;
    long long v94 = 0u;
    uint64_t v33 = v24;
LABEL_10:
    sub_1BFEFE4A0((uint64_t)&v93);
    goto LABEL_11;
  }
  uint64_t v32 = v31;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, *MEMORY[0x1E4FAB880], v27);
  uint64_t v33 = v24;
  if (*(void *)(v32 + 16) && (uint64_t v34 = sub_1BFE2E4C0((uint64_t)v30), (v35 & 1) != 0))
  {
    sub_1BFF6A008(*(void *)(v32 + 56) + 32 * v34, (uint64_t)&v93);
  }
  else
  {
    long long v93 = 0u;
    long long v94 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (!*((void *)&v94 + 1)) {
    goto LABEL_10;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1C0);
  if (swift_dynamicCast())
  {
    id v36 = v91;
    sub_1C151630C();
    sub_1BFF50EDC();
    uint64_t v37 = (char *)swift_allocObject();
    *((void *)v37 + 4) = v36;
    *(void *)&v37[*(void *)(*(void *)v37 + 112)] = v36;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v37[*(void *)(*(void *)v37 + 104)], v26, v75);
    *((void *)v37 + 2) = 0;
    v37[24] = -1;
    uint64_t v38 = &v37[*(void *)(*(void *)v37 + 120)];
    type metadata accessor for FormatTextLink();
    *(void *)uint64_t v38 = 0;
    *((void *)v38 + 1) = 0;
    swift_allocObject();
    id v39 = v36;
    uint64_t v40 = sub_1BFE2E0B8(v39, a9, a10, a11, a12);
    type metadata accessor for FormatText();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v37;
    *(void *)(v41 + 24) = v40;
    uint64_t *v24 = v41;
    uint64_t v42 = v77;
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = v80;
    sub_1BFF376C4((uint64_t)v24, v80, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v43, 0, 1, v42);
    uint64_t v44 = v79;
    sub_1BFF376C4(v43, v79, (uint64_t (*)(void))sub_1BFF3D95C);
    swift_beginAccess();
    swift_retain();
    uint64_t v45 = v86;
    swift_bridgeObjectRetain();
    sub_1BFF3D9D4(v44, v85, v45);
    swift_endAccess();
    sub_1BFF3BECC(v43, (uint64_t (*)(void))sub_1BFF3D95C);

    unint64_t v46 = v82;
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v47 = *(void *)(v81 + 16);
  uint64_t v48 = *(void **)(v47 + 32);
  type metadata accessor for FormatTextLink();
  swift_allocObject();
  uint64_t v49 = sub_1BFE2E0B8(v48, a9, a10, a11, a12);
  unint64_t v46 = v82;
  if (!v49) {
    goto LABEL_14;
  }
  uint64_t v50 = v49;
  type metadata accessor for FormatText();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v47;
  *(void *)(v51 + 24) = v50;
  uint64_t *v33 = v51;
  uint64_t v52 = v77;
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = v80;
  sub_1BFF376C4((uint64_t)v33, v80, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v53, 0, 1, v52);
  uint64_t v54 = v79;
  sub_1BFF376C4(v53, v79, (uint64_t (*)(void))sub_1BFF3D95C);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  uint64_t v55 = v86;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BFF3D9D4(v54, v85, v55);
  swift_endAccess();
  sub_1BFF3BECC(v53, (uint64_t (*)(void))sub_1BFF3D95C);
  swift_release();
LABEL_13:
  swift_release();
  sub_1BFF3BECC((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
LABEL_14:
  uint64_t v56 = *(void *)(v46 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_unownedRetainStrong();
  swift_beginAccess();
  int64_t v58 = *(void *)(a6 + 16);
  uint64_t v57 = *(void *)(a6 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v59 = *(void *)(v56 + 40);
  if (v59)
  {
    id v91 = *(id *)(v56 + 32);
    uint64_t v92 = v59;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    int64_t v58 = (int64_t)v91;
    uint64_t v57 = v92;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v60 = *(void *)(a6 + 24);
  uint64_t v81 = *(void *)(a6 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  swift_unownedRetainStrong();
  uint64_t v61 = *(void *)(a6 + 40);
  swift_retain();
  swift_release();
  int64_t v82 = v58;
  if (v61)
  {
    uint64_t v62 = *(void *)(v61 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v62 = 0;
  }
  uint64_t v63 = swift_allocObject();
  uint64_t v95 = v62;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v80 = *(void *)(a6 + 112);
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  unint64_t v64 = *(void *)(a6 + 120);
  sub_1BFE6FA30(v64);
  swift_release();
  unint64_t v89 = v64;
  sub_1BFE6EF70(v46, &v90);
  sub_1BFF0056C(v64);
  swift_unownedRetainStrong();
  swift_beginAccess();
  LOBYTE(v64) = *(unsigned char *)(a6 + 128);
  swift_release();
  sub_1C1517EFC();
  uint64_t v65 = v87;
  swift_unownedRetainStrong();
  uint64_t v66 = *(void *)(a6 + 136);
  char v67 = *(unsigned char *)(a6 + 144);
  swift_release();
  uint64_t v87 = v66;
  char v88 = v67;
  swift_unownedRetainStrong();
  uint64_t v69 = *(void *)(a6 + 168);
  uint64_t v68 = *(void *)(a6 + 176);
  swift_bridgeObjectRetain();
  swift_release();
  type metadata accessor for FormatTextNodeLayoutAttributes();
  swift_allocObject();
  uint64_t v70 = v84;
  swift_retain();
  uint64_t v71 = v86;
  swift_bridgeObjectRetain();
  uint64_t result = FormatTextNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(v85, v71, v82, v57, v81, v60, v70, &v95, a9, a10, a11, a12, v80, &v90, v64, v65, &v87, v69, v68);
  *(void *)(v63 + 16) = result;
  uint64_t *v83 = v63 | 0x2000000000000000;
  return result;
}

uint64_t sub_1C037AD18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C037AD68@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C037ADB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 112);
  return result;
}

uint64_t sub_1C037AE00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 112) = v2;
  return result;
}

unint64_t sub_1C037AE44@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 120);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C037AE94@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 128);
  return result;
}

uint64_t sub_1C037AEDC(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 128) = v2;
  return result;
}

uint64_t sub_1C037AF20@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C037AF70@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 160);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatTextNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatTextNode);
}

void sub_1C037AFD8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_string);
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_1C037B030()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C037B090@<X0>(uint64_t *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  return sub_1C037A2D8(v5[2], v5[3], v5[4], v5[5], v5[6], v5[7], v5[8], a1, a2, a3, a4, a5);
}

id sub_1C037B0B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)sub_1C037B4C0(a1);
  *a2 = v3;
  return v3;
}

uint64_t sub_1C037B0F0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C037B130(void *a1@<X8>)
{
  void (*v3)(void *__return_ptr, id *);
  uint64_t v4;
  void v5[2];
  id v6;

  id v3 = *(void (**)(void *__return_ptr, id *))(v1 + 16);
  (*(void (**)(id *__return_ptr))(v1 + 32))(&v6);
  v3(v5, &v6);

  uint64_t v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
}

uint64_t sub_1C037B1A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C037B1E0(uint64_t a1)
{
  void (*v15)(void *__return_ptr, uint64_t);
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  void v19[4];

  char v2 = v1;
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151E24C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v11 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
  char v12 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v14 = *(void *)v2;
    if (v2[24] == 255
      || (BOOL v15 = *(void (**)(void *__return_ptr, uint64_t))&v2[*(void *)(v14 + 120)]) == 0)
    {
      uint64_t v16 = &v2[*(void *)(v14 + 112)];
    }
    else
    {
      swift_retain();
      v15(v19, a1);
      uint64_t v16 = &v2[*(void *)(*(void *)v2 + 112)];
      uint64_t v17 = v19[1];
      *(void *)uint64_t v16 = v19[0];
      *((void *)v16 + 1) = v17;
      swift_bridgeObjectRelease();
      sub_1C151630C();
      sub_1BFC3E5C0((uint64_t)v15);
      uint64_t v18 = &v2[*(void *)(*(void *)v2 + 104)];
      swift_beginAccess();
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(v5 + 40))(v18, v7, v4);
      swift_endAccess();
    }
    return *(void *)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C037B4C0(uint64_t a1)
{
  void (*v15)(void *__return_ptr, uint64_t);
  unsigned __int8 *v16;
  void *v17;
  unsigned __int8 *v18;
  void v19[4];

  char v2 = v1;
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151E24C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v11 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
  char v12 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v14 = *(void *)v2;
    if (v2[24] == 255
      || (BOOL v15 = *(void (**)(void *__return_ptr, uint64_t))&v2[*(void *)(v14 + 120)]) == 0)
    {
      uint64_t v16 = &v2[*(void *)(v14 + 112)];
    }
    else
    {
      swift_retain();
      v15(v19, a1);
      uint64_t v16 = &v2[*(void *)(*(void *)v2 + 112)];
      uint64_t v17 = *(void **)v16;
      *(void *)uint64_t v16 = v19[0];

      sub_1C151630C();
      sub_1BFC3E5C0((uint64_t)v15);
      uint64_t v18 = &v2[*(void *)(*(void *)v2 + 104)];
      swift_beginAccess();
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(v5 + 40))(v18, v7, v4);
      swift_endAccess();
    }
    return *(void *)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C037B7A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C037B7D8()
{
  sub_1BFF31D5C(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C037B8E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFF31D5C(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  return sub_1C037A18C(a1, *(uint64_t **)(v2 + 24), v2 + v6, *(void *)(v2 + ((*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t static FormatVersioningModeRelease.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FormatVersioningModeRelease(0);
  return sub_1C151922C();
}

uint64_t sub_1C037BA30()
{
  if (*v0) {
    return 0x6E6F6973726576;
  }
  else {
    return 0x656D614E65646F63;
  }
}

uint64_t sub_1C037BA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0382578(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C037BA94(uint64_t a1)
{
  unint64_t v2 = sub_1C037FF54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C037BAD0(uint64_t a1)
{
  unint64_t v2 = sub_1C037FF54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatVersioningModeRelease.encode(to:)(void *a1)
{
  sub_1C03807DC(0, &qword_1EA19A380, (uint64_t (*)(void))sub_1C037FF54, (uint64_t)&type metadata for FormatVersioningModeRelease.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C037FF54();
  sub_1C1520F0C();
  char v11 = 0;
  sub_1C15207CC();
  if (!v1)
  {
    type metadata accessor for FormatVersioningModeRelease(0);
    char v10 = 1;
    sub_1C151928C();
    sub_1C037FFA8(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatVersioningModeRelease.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_1C151928C();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03807DC(0, &qword_1EA19A390, (uint64_t (*)(void))sub_1C037FF54, (uint64_t)&type metadata for FormatVersioningModeRelease.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = v5;
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v8);
  char v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C037FF54();
  uint64_t v11 = (uint64_t)v25;
  sub_1C1520EBC();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v25 = a1;
  uint64_t v13 = v22;
  uint64_t v12 = v23;
  char v27 = 0;
  *char v10 = sub_1C152069C();
  v10[1] = v14;
  uint64_t v19 = v10;
  char v26 = 1;
  sub_1C037FFA8(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v24);
  uint64_t v15 = *(int *)(v8 + 20);
  uint64_t v16 = (uint64_t)v19;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v19 + v15, v4, v12);
  sub_1C0380844(v16, v21, type metadata accessor for FormatVersioningModeRelease);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_1C0380900(v16, type metadata accessor for FormatVersioningModeRelease);
}

uint64_t sub_1C037C070(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C151922C();
}

uint64_t sub_1C037C0F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVersioningModeRelease.init(from:)(a1, a2);
}

uint64_t sub_1C037C10C(void *a1)
{
  return FormatVersioningModeRelease.encode(to:)(a1);
}

uint64_t sub_1C037C124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v3 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0380A34(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = sub_1C151836C();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1C151928C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0380844(v2, (uint64_t)v16, type metadata accessor for FormatVersioningModeSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C0380774((uint64_t)v16, (uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
      sub_1C151926C();
      uint64_t v19 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
      sub_1C151925C();
      goto LABEL_7;
    case 2u:
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23, v16, v10);
      break;
    case 3u:
    case 4u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v17 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB8799C8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v23, v17, v10);
      break;
    case 5u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v20 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB8799C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
      sub_1C151926C();
      uint64_t v21 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
      sub_1C151925C();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      break;
    default:
      sub_1C0380774((uint64_t)v16, (uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v23, &v5[*(int *)(v3 + 20)], v10);
LABEL_7:
      uint64_t result = sub_1C0380900((uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
      break;
  }
  return result;
}

uint64_t FormatVersioningModeSelection.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  sub_1C0380618();
  uint64_t v78 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v74 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v75);
  uint64_t v79 = (uint64_t *)((char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v73 = (uint64_t *)((char *)&v69 - v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = (uint64_t *)((char *)&v69 - v9);
  sub_1C03807DC(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v80 = *(void *)(v10 - 8);
  uint64_t v81 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v13 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v69 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v19 = v89;
  sub_1C1520EBC();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v70 = v15;
  uint64_t v72 = v13;
  uint64_t v71 = v18;
  uint64_t v20 = a1[3];
  unint64_t v89 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v21 = sub_1C1520EAC();
  LOBYTE(v20) = Dictionary<>.errorOnUnknownKeys.getter(v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = v80;
  uint64_t v22 = v81;
  uint64_t v24 = v12;
  if ((v20 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v25 = sub_1C152070C();
  uint64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1C03806CC();
    v88[0] = 0uLL;
    sub_1C15206EC();
    switch((char)v85)
    {
      case 3:
        v88[0] = xmmword_1C152C800;
        sub_1C037FFA8(&qword_1EA19A3B8, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeRelease);
        sub_1C15206EC();
        if (qword_1EB8875E8 != -1) {
          swift_once();
        }
        uint64_t v32 = *(void *)(qword_1EB93C848 + 16);
        if (!v32)
        {
          swift_bridgeObjectRetain();
          goto LABEL_38;
        }
        uint64_t v33 = qword_1EB93C848 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BFC66384(v33, (uint64_t)&v82);
          uint64_t v34 = v83;
          uint64_t v35 = v84;
          __swift_project_boxed_opaque_existential_1(&v82, v83);
          uint64_t v36 = sub_1C14F9E64(v34, v35);
          if (v36 == *v77 && v37 == v77[1]) {
            break;
          }
          char v39 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v39) {
            goto LABEL_43;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
          v33 += 40;
          if (!--v32)
          {
            swift_bridgeObjectRelease();
LABEL_38:
            uint64_t v87 = 0;
            long long v85 = 0u;
            long long v86 = 0u;
            swift_bridgeObjectRelease();
            a1 = v89;
            uint64_t v52 = v24;
            uint64_t v53 = (uint64_t)v70;
            uint64_t v54 = v73;
            goto LABEL_44;
          }
        }
        swift_bridgeObjectRelease();
LABEL_43:
        swift_bridgeObjectRelease();
        sub_1BFC773DC(&v82, (uint64_t)&v85);
        swift_bridgeObjectRelease();
        a1 = v89;
        uint64_t v52 = v24;
        uint64_t v53 = (uint64_t)v70;
        uint64_t v54 = v73;
LABEL_44:
        if (*((void *)&v86 + 1))
        {
          sub_1BFC773DC(&v85, (uint64_t)v88);
          sub_1BFC66384((uint64_t)v88, (uint64_t)&v85);
          uint64_t v57 = *((void *)&v86 + 1);
          uint64_t v58 = v87;
          __swift_project_boxed_opaque_existential_1(&v85, *((uint64_t *)&v86 + 1));
          *uint64_t v54 = sub_1C14F9E64(v57, v58);
          v54[1] = v59;
          uint64_t v60 = *((void *)&v86 + 1);
          uint64_t v61 = v87;
          __swift_project_boxed_opaque_existential_1(&v85, *((uint64_t *)&v86 + 1));
          sub_1BFEFE794(v60, v61);
          sub_1C0380774((uint64_t)v54, v53, type metadata accessor for FormatVersioningModeRelease);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v52, v81);
          sub_1C0380900((uint64_t)v77, type metadata accessor for FormatVersioningModeRelease);
          goto LABEL_50;
        }
        sub_1BFE4D118((uint64_t)&v85, &qword_1EA19A3C0, (unint64_t *)&qword_1EB887280);
        sub_1C0380720();
        swift_allocError();
        *uint64_t v62 = 3;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v52, v81);
        sub_1C0380900((uint64_t)v77, type metadata accessor for FormatVersioningModeRelease);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 4:
        v88[0] = xmmword_1C152C800;
        sub_1C037FFA8(&qword_1EA19A3B8, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeRelease);
        sub_1C15206EC();
        if (qword_1EB8875E8 != -1) {
          swift_once();
        }
        uint64_t v40 = *(void *)(qword_1EB93C848 + 16);
        if (!v40)
        {
          swift_bridgeObjectRetain();
          goto LABEL_40;
        }
        uint64_t v41 = qword_1EB93C848 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BFC66384(v41, (uint64_t)&v82);
          uint64_t v42 = v83;
          uint64_t v43 = v84;
          __swift_project_boxed_opaque_existential_1(&v82, v83);
          uint64_t v44 = sub_1C14F9E64(v42, v43);
          if (v44 == *v79 && v45 == v79[1]) {
            break;
          }
          char v47 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v47) {
            goto LABEL_47;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
          v41 += 40;
          if (!--v40)
          {
            swift_bridgeObjectRelease();
LABEL_40:
            uint64_t v87 = 0;
            long long v85 = 0u;
            long long v86 = 0u;
            swift_bridgeObjectRelease();
            a1 = v89;
            uint64_t v55 = v24;
            uint64_t v53 = (uint64_t)v70;
            uint64_t v56 = v73;
            goto LABEL_48;
          }
        }
        swift_bridgeObjectRelease();
LABEL_47:
        swift_bridgeObjectRelease();
        sub_1BFC773DC(&v82, (uint64_t)&v85);
        swift_bridgeObjectRelease();
        a1 = v89;
        uint64_t v55 = v24;
        uint64_t v53 = (uint64_t)v70;
        uint64_t v56 = v73;
LABEL_48:
        if (*((void *)&v86 + 1))
        {
          sub_1BFC773DC(&v85, (uint64_t)v88);
          sub_1BFC66384((uint64_t)v88, (uint64_t)&v85);
          uint64_t v63 = *((void *)&v86 + 1);
          uint64_t v64 = v87;
          __swift_project_boxed_opaque_existential_1(&v85, *((uint64_t *)&v86 + 1));
          *uint64_t v56 = sub_1C14F9E64(v63, v64);
          v56[1] = v65;
          uint64_t v66 = *((void *)&v86 + 1);
          uint64_t v67 = v87;
          __swift_project_boxed_opaque_existential_1(&v85, *((uint64_t *)&v86 + 1));
          sub_1BFEFE794(v66, v67);
          sub_1C0380774((uint64_t)v56, v53, type metadata accessor for FormatVersioningModeRelease);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v55, v81);
          sub_1C0380900((uint64_t)v79, type metadata accessor for FormatVersioningModeRelease);
LABEL_50:
          swift_storeEnumTagMultiPayload();
          uint64_t v29 = (uint64_t)v71;
          sub_1C0380774(v53, (uint64_t)v71, type metadata accessor for FormatVersioningModeSelection);
          uint64_t v50 = v76;
          goto LABEL_35;
        }
        sub_1BFE4D118((uint64_t)&v85, &qword_1EA19A3C0, (unint64_t *)&qword_1EB887280);
        sub_1C0380720();
        swift_allocError();
        *uint64_t v68 = 3;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v55, v81);
        sub_1C0380900((uint64_t)v79, type metadata accessor for FormatVersioningModeRelease);
        break;
      case 5:
        v88[0] = xmmword_1C152C800;
        sub_1C037FFA8(&qword_1EA19A3B0, (void (*)(uint64_t))sub_1C0380618);
        uint64_t v48 = v74;
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
        uint64_t v49 = sub_1C151928C();
        uint64_t v29 = (uint64_t)v71;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v71, v48, v49);
        goto LABEL_34;
      default:
        (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
        uint64_t v29 = (uint64_t)v71;
LABEL_34:
        swift_storeEnumTagMultiPayload();
        uint64_t v50 = v76;
        a1 = v89;
LABEL_35:
        sub_1C0380774(v29, v50, type metadata accessor for FormatVersioningModeSelection);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = (unint64_t *)(v25 + 40);
  while (1)
  {
    unint64_t v28 = *v27;
    if (*v27 >= 4) {
      break;
    }
    v27 += 2;
    if (!--v26) {
      goto LABEL_7;
    }
  }
  uint64_t v30 = *(v27 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C02570B4();
  swift_allocError();
  *(void *)uint64_t v31 = v30;
  *(void *)(v31 + 8) = v28;
  *(void *)(v31 + 16) = &unk_1F1B81690;
  *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
  swift_willThrow();
  sub_1C0257108(v30, v28);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
  a1 = v89;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatVersioningModeSelection.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0380618();
  v33[1] = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151928C();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v35);
  uint64_t v36 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03807DC(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v42 = v15;
  uint64_t v43 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v33 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v41 = v18;
  sub_1C1520F0C();
  sub_1C0380844(v2, (uint64_t)v14, type metadata accessor for FormatVersioningModeSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v22 = v36;
      sub_1C0380774((uint64_t)v14, v36, type metadata accessor for FormatVersioningModeRelease);
      char v45 = 4;
      sub_1C03808AC();
      long long v44 = 0uLL;
      uint64_t v23 = v41;
      uint64_t v24 = v42;
      uint64_t v25 = v40;
      sub_1C152080C();
      if (!v25)
      {
        long long v44 = xmmword_1C152C800;
        sub_1C037FFA8(&qword_1EA19A3E0, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeRelease);
        sub_1C152080C();
      }
      sub_1C0380900(v22, type metadata accessor for FormatVersioningModeRelease);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v23, v24);
    case 2u:
      unint64_t v28 = v37;
      uint64_t v27 = v38;
      uint64_t v29 = v39;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v14, v39);
      char v45 = 5;
      sub_1C03808AC();
      long long v44 = 0uLL;
      uint64_t v20 = v41;
      uint64_t v19 = v42;
      uint64_t v30 = v40;
      sub_1C152080C();
      if (!v30)
      {
        uint64_t v31 = (uint64_t)v34;
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v34, v28, v29);
        long long v44 = xmmword_1C152C800;
        sub_1C037FFA8(&qword_1EA19A3D8, (void (*)(uint64_t))sub_1C0380618);
        sub_1C152080C();
        sub_1C0380900(v31, (uint64_t (*)(void))sub_1C0380618);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v19);
    case 3u:
      char v45 = 0;
      goto LABEL_15;
    case 4u:
      char v32 = 1;
      goto LABEL_14;
    case 5u:
      char v32 = 2;
LABEL_14:
      char v45 = v32;
LABEL_15:
      sub_1C03808AC();
      long long v44 = 0uLL;
      uint64_t v20 = v41;
      uint64_t v19 = v42;
      sub_1C152080C();
      break;
    default:
      sub_1C0380774((uint64_t)v14, (uint64_t)v11, type metadata accessor for FormatVersioningModeRelease);
      char v45 = 3;
      sub_1C03808AC();
      long long v44 = 0uLL;
      uint64_t v20 = v41;
      uint64_t v19 = v42;
      uint64_t v21 = v40;
      sub_1C152080C();
      if (!v21)
      {
        long long v44 = xmmword_1C152C800;
        sub_1C037FFA8(&qword_1EA19A3E0, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeRelease);
        sub_1C152080C();
      }
      sub_1C0380900((uint64_t)v11, type metadata accessor for FormatVersioningModeRelease);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v19);
}

unint64_t sub_1C037D8CC(char a1)
{
  unint64_t result = 0x694D746365746564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7275436465786966;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x6E6F4E6465786966;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0x6465786966;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C037D9C0(char a1)
{
  unint64_t result = 0x694D746365746564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7275436465786966;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x6E6F4E6465786966;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0x6465786966;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C037DAB4(unsigned __int8 *a1, char *a2)
{
  return sub_1C147BC84(*a1, *a2);
}

uint64_t sub_1C037DAC0()
{
  return sub_1C015C8EC();
}

uint64_t sub_1C037DAC8()
{
  return sub_1C0447E4C();
}

uint64_t sub_1C037DAD0()
{
  return sub_1C044CE54();
}

uint64_t sub_1C037DAD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C038252C();
  *a1 = result;
  return result;
}

unint64_t sub_1C037DB08@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C037D8CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C037DB34()
{
  return sub_1C037D9C0(*v0);
}

uint64_t sub_1C037DB3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C038252C();
  *a1 = result;
  return result;
}

uint64_t sub_1C037DB64()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C037DBC4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C037DC14(uint64_t a1)
{
  unint64_t v2 = sub_1C0382754();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C037DC50(uint64_t a1)
{
  unint64_t v2 = sub_1C0382754();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C037DC8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVersioningModeSelection.init(from:)(a1, a2);
}

uint64_t sub_1C037DCA4(void *a1)
{
  return FormatVersioningModeSelection.encode(to:)(a1);
}

uint64_t sub_1C037DCBC()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB410], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  sub_1C03826C0();
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4F30 = result;
  return result;
}

uint64_t static FormatVersioningModeSelection.dataType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAB438];
  uint64_t v3 = sub_1C151722C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t static FormatVersioningModeSelection.convert(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF6A008(a1, (uint64_t)v12);
  if (swift_dynamicCast())
  {
    uint64_t v3 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v3 = v10 & 0xFFFFFFFFFFFFLL;
    }
    if (v3)
    {
      uint64_t v4 = sub_1C02D2A68(v10, v11);
      unint64_t v6 = v5;
      type metadata accessor for FormatJSONDecoder();
      swift_allocObject();
      sub_1C06599C4(MEMORY[0x1E4FBC860]);
      uint64_t v7 = type metadata accessor for FormatVersioningModeSelection(0);
      sub_1C037FFA8(&qword_1EA19A3E8, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
      sub_1C1517D9C();
      sub_1BFE95664(v4, v6);
      swift_release();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 0, 1, v7);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = type metadata accessor for FormatVersioningModeSelection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
}

uint64_t FormatVersioningModeSelection.toData()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  type metadata accessor for FormatJSONEncoder();
  swift_allocObject();
  sub_1C0EA5D40(MEMORY[0x1E4FBC860]);
  type metadata accessor for FormatVersioningModeSelection(0);
  sub_1C037FFA8(&qword_1EA19A3F0, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
  uint64_t v2 = sub_1C151533C();
  unint64_t v4 = v3;
  swift_release();
  switch(v4 >> 62)
  {
    case 1uLL:
      if (v2 >> 32 < (int)v2) {
        __break(1u);
      }
      sub_1BFE95820(v2, v4);
      swift_retain();
      uint64_t v7 = sub_1C037F8CC((int)v2, v2 >> 32, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      uint64_t v9 = v8;
      sub_1BFE95664(v2, v4);
      if (v9) {
        goto LABEL_15;
      }
      goto LABEL_7;
    case 2uLL:
      uint64_t v10 = *(void *)(v2 + 16);
      uint64_t v11 = *(void *)(v2 + 24);
      sub_1BFE95820(v2, v4);
      swift_retain();
      swift_retain();
      uint64_t v7 = sub_1C037F8CC(v10, v11, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      uint64_t v9 = v12;
      swift_release();
      swift_release();
      if (v9) {
        goto LABEL_15;
      }
LABEL_7:
      uint64_t v16 = v2;
      unint64_t v17 = v4;
      sub_1BFE95820(v2, v4);
      sub_1BFC845BC(0, (unint64_t *)&qword_1EA1AF1B0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(v14, (uint64_t)&v18);
        __swift_project_boxed_opaque_existential_1(&v18, v20);
        if (sub_1C152054C())
        {
          __swift_project_boxed_opaque_existential_1(&v18, v20);
          sub_1C152053C();
          sub_1BFE95664(v2, v4);
          uint64_t v9 = *((void *)&v14[0] + 1);
          uint64_t v7 = *(void *)&v14[0];
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
          goto LABEL_16;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
      }
      else
      {
        uint64_t v15 = 0;
        memset(v14, 0, sizeof(v14));
        sub_1BFE4D118((uint64_t)v14, (unint64_t *)&qword_1EA1A2000, (unint64_t *)&qword_1EA1AF1B0);
      }
      uint64_t v5 = sub_1C037F818(v2, v4);
LABEL_14:
      uint64_t v7 = v5;
      uint64_t v9 = v6;
LABEL_15:
      sub_1BFE95664(v2, v4);
LABEL_16:
      a1[3] = MEMORY[0x1E4FBB1A0];
      uint64_t result = sub_1BFE95664(v2, v4);
      *a1 = v7;
      a1[1] = v9;
      return result;
    case 3uLL:
      *(void *)((char *)v14 + 6) = 0;
      *(void *)&v14[0] = 0;
      sub_1C037FB34(&v18);
      sub_1BFE95664(v2, v4);
      uint64_t v7 = v18;
      uint64_t v9 = v19;
      goto LABEL_16;
    default:
      uint64_t v18 = v2;
      LOWORD(v19) = v4;
      BYTE2(v19) = BYTE2(v4);
      BYTE3(v19) = BYTE3(v4);
      BYTE4(v19) = BYTE4(v4);
      BYTE5(v19) = BYTE5(v4);
      uint64_t v5 = sub_1C151E75C();
      goto LABEL_14;
  }
}

uint64_t sub_1C037E54C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAB438];
  uint64_t v3 = sub_1C151722C();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1C037E5CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v2);
  unint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0380A34(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_1C151836C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1C151928C();
  uint64_t v27 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0380844(v1, (uint64_t)v17, type metadata accessor for FormatVersioningModeSelection);
  uint64_t v18 = 0x746365746544;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C0380774((uint64_t)v17, (uint64_t)v4, type metadata accessor for FormatVersioningModeRelease);
      sub_1C151926C();
      uint64_t v19 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
      sub_1C151925C();
      sub_1C037FFA8((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      uint64_t v18 = sub_1C152088C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v9);
      goto LABEL_4;
    case 2u:
      uint64_t v20 = v27;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v14, v17, v9);
      sub_1C037FFA8((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      uint64_t v18 = sub_1C152088C();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v9);
      break;
    case 3u:
      return v18;
    case 4u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v9, (uint64_t)qword_1EB8799C8);
      sub_1C037FFA8((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      uint64_t v18 = sub_1C152088C();
      break;
    case 5u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v21 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB8799C8);
      uint64_t v22 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v11, v21, v9);
      sub_1C151926C();
      uint64_t v23 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
      sub_1C151925C();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
      v24(v11, v9);
      sub_1C037FFA8((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      uint64_t v18 = sub_1C152088C();
      v24(v14, v9);
      break;
    default:
      sub_1C0380774((uint64_t)v17, (uint64_t)v4, type metadata accessor for FormatVersioningModeRelease);
      sub_1C037FFA8((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      uint64_t v18 = sub_1C152088C();
LABEL_4:
      sub_1C0380900((uint64_t)v4, type metadata accessor for FormatVersioningModeRelease);
      break;
  }
  return v18;
}

uint64_t sub_1C037EC48()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (uint64_t *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v32 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0380844(v1, (uint64_t)v17, type metadata accessor for FormatVersioningModeSelection);
  uint64_t v18 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C0380774((uint64_t)v17, (uint64_t)v4, type metadata accessor for FormatVersioningModeRelease);
      uint64_t v18 = *v4;
      swift_bridgeObjectRetain();
      sub_1C0380900((uint64_t)v4, type metadata accessor for FormatVersioningModeRelease);
      break;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v17, v5);
      if (qword_1EB8875F0 != -1) {
        swift_once();
      }
      uint64_t v19 = *(void *)(qword_1EB93C850 + 16);
      if (v19)
      {
        uint64_t v20 = qword_1EB93C850 + 32;
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_1BFC66384(v20, (uint64_t)&v33);
          uint64_t v21 = v34;
          uint64_t v22 = v35;
          __swift_project_boxed_opaque_existential_1(&v33, v34);
          sub_1BFEFE794(v21, v22);
          LOBYTE(v21) = sub_1C151922C();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
          if (v21) {
            break;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
          v20 += 40;
          if (!--v19) {
            goto LABEL_18;
          }
        }
        sub_1BFC773DC(&v33, (uint64_t)&v36);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        uint64_t v38 = 0;
        long long v36 = 0u;
        long long v37 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v37 + 1))
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
        sub_1BFE4D118((uint64_t)&v36, &qword_1EA19A3C0, (unint64_t *)&qword_1EB887280);
        goto LABEL_23;
      }
      sub_1BFC773DC(&v36, (uint64_t)v39);
      uint64_t v29 = v40;
      uint64_t v30 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      uint64_t v18 = sub_1C14F9E64(v29, v30);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
      break;
    case 3u:
    case 4u:
      return v18;
    case 5u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v23 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB8799C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v23, v5);
      if (qword_1EB887660 != -1) {
        swift_once();
      }
      uint64_t v24 = qword_1EB93C870;
      uint64_t v25 = unk_1EB93C878;
      __swift_project_boxed_opaque_existential_1(qword_1EB93C858, qword_1EB93C870);
      sub_1BFEFE794(v24, v25);
      LOBYTE(v24) = sub_1C151922C();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
      v26(v8, v5);
      v26(v11, v5);
      if ((v24 & 1) == 0) {
        goto LABEL_23;
      }
      uint64_t v27 = qword_1EB93C870;
      uint64_t v28 = unk_1EB93C878;
      __swift_project_boxed_opaque_existential_1(qword_1EB93C858, qword_1EB93C870);
      uint64_t v18 = sub_1C14F9E64(v27, v28);
      break;
    default:
      sub_1C0380900((uint64_t)v17, type metadata accessor for FormatVersioningModeSelection);
LABEL_23:
      uint64_t v18 = 0;
      break;
  }
  return v18;
}

uint64_t sub_1C037F190()
{
  uint64_t v0 = type metadata accessor for FormatVersioningModeSelection(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0380A34(0, &qword_1EA19CA90, type metadata accessor for FormatVersioningModeSelection, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = *(void *)(v1 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C152C7F0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  if (qword_1EB8875F0 != -1) {
    swift_once();
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB887280);
  sub_1C151928C();
  sub_1C037FFA8((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
  uint64_t v7 = sub_1C151EC3C();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v18 = v6;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F6240(0, v8, 0);
    uint64_t v17 = v7;
    uint64_t v9 = v7 + 32;
    do
    {
      sub_1BFC66384(v9, (uint64_t)v19);
      uint64_t v10 = v20;
      uint64_t v11 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      sub_1BFEFE794(v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      uint64_t v12 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6240(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v22;
      }
      unint64_t v14 = *(void *)(v12 + 16);
      unint64_t v13 = *(void *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F6240(v13 > 1, v14 + 1, 1);
        uint64_t v12 = v22;
      }
      *(void *)(v12 + 16) = v14 + 1;
      sub_1C0380774((uint64_t)v3, v12 + v5 + v14 * v4, type metadata accessor for FormatVersioningModeSelection);
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v6 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v19[0] = v6;
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1C1047608(v15);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EA19A378 = v19[0];
  return result;
}

uint64_t sub_1C037F544(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_1BFEFE794(v1, v2);
}

uint64_t sub_1C037F590()
{
  return sub_1C151E56C() & 1;
}

uint64_t static FormatVersioningModeSelection.allCases.getter()
{
  if (qword_1EA194448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static FormatVersioningModeSelection.allCases.setter(uint64_t a1)
{
  if (qword_1EA194448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EA19A378 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static FormatVersioningModeSelection.allCases.modify())()
{
  if (qword_1EA194448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C037F798@<X0>(void *a1@<X8>)
{
  if (qword_1EA194448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_1EA19A378;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C037F818(uint64_t a1, unint64_t a2)
{
  sub_1BFE95820(a1, a2);
  sub_1C037F97C(a1, a2);
  sub_1BFE95664(a1, a2);
  uint64_t v4 = sub_1C151E75C();
  swift_release();
  return v4;
}

uint64_t sub_1C037F890@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C151E75C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C037F8CC(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_1C151572C();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1C151575C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1C151574C();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_1C09DF8CC(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

void *sub_1C037F97C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1C15160AC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = (void *)MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_1C03827A8();
          int64_t v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          v8[2] = v9;
          double v8[3] = 2 * v12 - 64;
        }
        sub_1BFE95820(a1, a2);
        uint64_t v13 = sub_1C151600C();
        sub_1BFE95664(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x1C037FB24);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1C037FB34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C151E75C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s8NewsFeed20FormatVersioningModeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v10);
  size_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v30 - v14;
  sub_1C0382800(0, &qword_1EA19A460, (void (*)(uint64_t))type metadata accessor for FormatVersioningMode);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v20 = (char *)&v30 + *(int *)(v19 + 56) - v17;
  sub_1C0380844(a1, (uint64_t)&v30 - v17, type metadata accessor for FormatVersioningMode);
  sub_1C0380844(a2, (uint64_t)v20, type metadata accessor for FormatVersioningMode);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C0380844((uint64_t)v18, (uint64_t)v15, type metadata accessor for FormatVersioningMode);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v27 = v30;
      uint64_t v26 = v31;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v9, v20, v31);
      char v24 = sub_1C151922C();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v27 + 8);
      v28(v9, v26);
      v28(v15, v26);
      goto LABEL_12;
    }
    size_t v12 = v15;
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C0380844((uint64_t)v18, (uint64_t)v12, type metadata accessor for FormatVersioningMode);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = v30;
      uint64_t v22 = v31;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v20, v31);
      char v24 = sub_1C151922C();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v23 + 8);
      v25(v6, v22);
      v25(v12, v22);
LABEL_12:
      sub_1C0380900((uint64_t)v18, type metadata accessor for FormatVersioningMode);
      return v24 & 1;
    }
LABEL_7:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
LABEL_10:
    sub_1C0382860((uint64_t)v18, &qword_1EA19A460, (void (*)(uint64_t))type metadata accessor for FormatVersioningMode);
    char v24 = 0;
    return v24 & 1;
  }
  if (swift_getEnumCaseMultiPayload() != 2) {
    goto LABEL_10;
  }
  sub_1C0380900((uint64_t)v18, type metadata accessor for FormatVersioningMode);
  char v24 = 1;
  return v24 & 1;
}

uint64_t type metadata accessor for FormatVersioningModeRelease(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB884B50);
}

unint64_t sub_1C037FF54()
{
  unint64_t result = qword_1EA19A388;
  if (!qword_1EA19A388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A388);
  }
  return result;
}

uint64_t sub_1C037FFA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8NewsFeed29FormatVersioningModeSelectionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v38);
  long long v37 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  long long v36 = (uint64_t *)((char *)&v35 - v9);
  uint64_t v10 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v10);
  size_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v35 - v14);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v35 - v17);
  sub_1C0382800(0, &qword_1EA19A458, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v23 = (char *)&v35 + *(int *)(v22 + 56) - v20;
  sub_1C0380844(a1, (uint64_t)&v35 - v20, type metadata accessor for FormatVersioningModeSelection);
  sub_1C0380844(a2, (uint64_t)v23, type metadata accessor for FormatVersioningModeSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C0380844((uint64_t)v21, (uint64_t)v15, type metadata accessor for FormatVersioningModeSelection);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1C0380900((uint64_t)v15, type metadata accessor for FormatVersioningModeRelease);
        goto LABEL_22;
      }
      char v24 = v37;
      sub_1C0380774((uint64_t)v23, (uint64_t)v37, type metadata accessor for FormatVersioningModeRelease);
      BOOL v25 = *v15 == *v24 && v15[1] == v24[1];
      if (v25 || (sub_1C1520A9C()) && (sub_1C151922C())
      {
        sub_1C0380900((uint64_t)v24, type metadata accessor for FormatVersioningModeRelease);
        uint64_t v26 = (uint64_t)v15;
        goto LABEL_31;
      }
      sub_1C0380900((uint64_t)v24, type metadata accessor for FormatVersioningModeRelease);
      uint64_t v34 = (uint64_t)v15;
      goto LABEL_36;
    case 2u:
      sub_1C0380844((uint64_t)v21, (uint64_t)v12, type metadata accessor for FormatVersioningModeSelection);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v28 = v39;
        uint64_t v27 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v6, v23, v40);
        char v29 = sub_1C151922C();
        uint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
        v30(v6, v27);
        v30(v12, v27);
        sub_1C0380900((uint64_t)v21, type metadata accessor for FormatVersioningModeSelection);
        return v29 & 1;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
      goto LABEL_22;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_32;
      }
      goto LABEL_22;
    case 4u:
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_32;
      }
      goto LABEL_22;
    case 5u:
      if (swift_getEnumCaseMultiPayload() == 5) {
        goto LABEL_32;
      }
      goto LABEL_22;
    default:
      sub_1C0380844((uint64_t)v21, (uint64_t)v18, type metadata accessor for FormatVersioningModeSelection);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1C0380900((uint64_t)v18, type metadata accessor for FormatVersioningModeRelease);
LABEL_22:
        sub_1C0382860((uint64_t)v21, &qword_1EA19A458, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
        goto LABEL_23;
      }
      uint64_t v31 = v36;
      sub_1C0380774((uint64_t)v23, (uint64_t)v36, type metadata accessor for FormatVersioningModeRelease);
      BOOL v32 = *v18 == *v31 && v18[1] == v31[1];
      if (!v32 && (sub_1C1520A9C() & 1) == 0 || (sub_1C151922C() & 1) == 0)
      {
        sub_1C0380900((uint64_t)v31, type metadata accessor for FormatVersioningModeRelease);
        uint64_t v34 = (uint64_t)v18;
LABEL_36:
        sub_1C0380900(v34, type metadata accessor for FormatVersioningModeRelease);
        sub_1C0380900((uint64_t)v21, type metadata accessor for FormatVersioningModeSelection);
LABEL_23:
        char v29 = 0;
        return v29 & 1;
      }
      sub_1C0380900((uint64_t)v31, type metadata accessor for FormatVersioningModeRelease);
      uint64_t v26 = (uint64_t)v18;
LABEL_31:
      sub_1C0380900(v26, type metadata accessor for FormatVersioningModeRelease);
LABEL_32:
      sub_1C0380900((uint64_t)v21, type metadata accessor for FormatVersioningModeSelection);
      char v29 = 1;
      return v29 & 1;
  }
}

void sub_1C0380618()
{
  if (!qword_1EA19A398)
  {
    sub_1C151928C();
    sub_1C037FFA8(&qword_1EA19A3A0, MEMORY[0x1E4FAB0A8]);
    unint64_t v0 = type metadata accessor for FormatValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19A398);
    }
  }
}

uint64_t type metadata accessor for FormatVersioningModeSelection(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB882AF8);
}

unint64_t sub_1C03806CC()
{
  unint64_t result = qword_1EA19A3A8;
  if (!qword_1EA19A3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A3A8);
  }
  return result;
}

unint64_t sub_1C0380720()
{
  unint64_t result = qword_1EA19A3C8;
  if (!qword_1EA19A3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A3C8);
  }
  return result;
}

uint64_t sub_1C0380774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C03807DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0380844(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C03808AC()
{
  unint64_t result = qword_1EA19A3D0;
  if (!qword_1EA19A3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A3D0);
  }
  return result;
}

uint64_t sub_1C0380900(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0380960()
{
  return sub_1C037FFA8(&qword_1EA19A3F8, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
}

unint64_t sub_1C03809AC()
{
  unint64_t result = qword_1EA19A400;
  if (!qword_1EA19A400)
  {
    sub_1C0380A34(255, &qword_1EA19A408, type metadata accessor for FormatVersioningModeSelection, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A400);
  }
  return result;
}

void sub_1C0380A34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersioningMode(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for FormatVersioningMode(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_1C151928C();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C151928C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0380900((uint64_t)a1, type metadata accessor for FormatVersioningMode);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C151928C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C151928C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0380900((uint64_t)a1, type metadata accessor for FormatVersioningMode);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C151928C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersioningModeRelease(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C151928C();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FormatVersioningModeRelease(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for FormatVersioningModeRelease(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151928C();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for FormatVersioningModeRelease(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151928C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FormatVersioningModeRelease(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151928C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for FormatVersioningModeRelease(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151928C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVersioningModeRelease(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C038148C);
}

uint64_t sub_1C038148C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVersioningModeRelease(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0381550);
}

uint64_t sub_1C0381550(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C03815F8()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersioningModeSelection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1C151928C();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for FormatVersioningModeSelection(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 2)
  {
    if (result > 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    a1 += *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
  }
  uint64_t v3 = sub_1C151928C();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(a1, v3);
}

void *initializeWithCopy for FormatVersioningModeSelection(void *a1, void *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = sub_1C151928C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151928C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for FormatVersioningModeSelection(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0380900((uint64_t)a1, type metadata accessor for FormatVersioningModeSelection);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C151928C();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatVersioningModeSelection(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = sub_1C151928C();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151928C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for FormatVersioningModeSelection(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0380900((uint64_t)a1, type metadata accessor for FormatVersioningModeSelection);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_1C151928C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0382050()
{
  uint64_t result = type metadata accessor for FormatVersioningModeRelease(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151928C();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatVersioningModeSelection.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03821E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVersioningModeSelection.CodingType()
{
  return &type metadata for FormatVersioningModeSelection.CodingType;
}

unsigned char *storeEnumTagSinglePayload for FormatVersioningModeRelease.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03822E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVersioningModeRelease.CodingKeys()
{
  return &type metadata for FormatVersioningModeRelease.CodingKeys;
}

unint64_t sub_1C0382320()
{
  unint64_t result = qword_1EA19A410;
  if (!qword_1EA19A410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A410);
  }
  return result;
}

unint64_t sub_1C0382378()
{
  unint64_t result = qword_1EA19A418;
  if (!qword_1EA19A418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A418);
  }
  return result;
}

unint64_t sub_1C03823D0()
{
  unint64_t result = qword_1EA19A420;
  if (!qword_1EA19A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A420);
  }
  return result;
}

unint64_t sub_1C0382428()
{
  unint64_t result = qword_1EA19A428;
  if (!qword_1EA19A428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A428);
  }
  return result;
}

unint64_t sub_1C0382480()
{
  unint64_t result = qword_1EA19A430;
  if (!qword_1EA19A430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A430);
  }
  return result;
}

unint64_t sub_1C03824D8()
{
  unint64_t result = qword_1EA19A438;
  if (!qword_1EA19A438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A438);
  }
  return result;
}

uint64_t sub_1C038252C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0382578(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E65646F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C038266C()
{
  unint64_t result = qword_1EA19A440;
  if (!qword_1EA19A440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A440);
  }
  return result;
}

void sub_1C03826C0()
{
  if (!qword_1EA19A448)
  {
    type metadata accessor for FormatVersioningModeSelection(255);
    sub_1C037FFA8((unint64_t *)&unk_1EA19CB60, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19A448);
    }
  }
}

unint64_t sub_1C0382754()
{
  unint64_t result = qword_1EA19A450;
  if (!qword_1EA19A450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A450);
  }
  return result;
}

void sub_1C03827A8()
{
  if (!qword_1EB890518)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890518);
    }
  }
}

void sub_1C0382800(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0382860(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0382800(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

ValueMetadata *type metadata accessor for A12_V17()
{
  return &type metadata for A12_V17;
}

uint64_t sub_1C03828CC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C03866AC(0, &qword_1EA19A518, (uint64_t (*)(void))sub_1C0386658, (uint64_t)&type metadata for A12_V17.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0386658();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0386714(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0382B14(uint64_t a1)
{
  unint64_t v2 = sub_1C0386658();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0382B50(uint64_t a1)
{
  unint64_t v2 = sub_1C0386658();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0382B8C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0386228(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0382BD4(void *a1)
{
  return sub_1C03828CC(a1);
}

uint64_t sub_1C0382BEC()
{
  sub_1C0385F68();
  return sub_1C151798C();
}

uint64_t sub_1C0382C68@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C03866AC(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0382D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A12_V17;
  unint64_t v20 = sub_1C0186920();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  uint64_t *v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A12_V17;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v31 = (void *)(v30 + 16);
  swift_beginAccess();
  BOOL v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    BOOL v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    void *v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    BOOL v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    void *v31 = v32;
  }
  v32[2] = v35 + 1;
  long long v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B816E0, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F284(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    unint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B81708, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V17.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C0386714(&qword_1EA19A478, (void (*)(uint64_t))type metadata accessor for A12_V17.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C03834C8@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  char v47 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x1F4188790](v3);
  *(void *)&long long v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v6 = type metadata accessor for A12_V17.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(v7 + *(int *)(v8 + 40));
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(int *)(v8 + 32);
  uint64_t v44 = v7;
  double v12 = *(double *)(v7 + v11);
  sub_1BFC66384(v10 + 16, (uint64_t)&v52);
  sub_1BFC66384(v10 + 56, (uint64_t)v51);
  double v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v52, v14 + 16);
  sub_1BFC773DC(v51, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v50[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v50, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v9 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v51);
  sub_1BFC66384(v15 + 56, (uint64_t)v50);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v51, v17 + 16);
  sub_1BFC773DC(v50, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v49[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v49, (uint64_t *)&v52);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v52, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(void *)&long long v52 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v52;
  uint64_t v46 = v2;
  v48[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C0385F04, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  sub_1C1520B6C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = *(void *)(v23 + 16);
  swift_release();
  if (v24 == v22 - (v22 != 0))
  {
    uint64_t v25 = swift_dynamicCastClass();
    if (!v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v25 = sub_1C00B2130(v21, v21 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v22 != 0, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v52 = v25;
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v27 = v26;
  sub_1C0385FC4(&qword_1EA197690);
  uint64_t v41 = v27;
  sub_1C151F0BC();
  swift_release();
  uint64_t v28 = *MEMORY[0x1E4FAB6D8];
  uint64_t v29 = sub_1C151759C();
  uint64_t v30 = v45;
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v45, v28, v29);
  uint64_t v31 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v42 + 104))(v30, *MEMORY[0x1E4FAB8F0], v43);
  MEMORY[0x1F4188790](v31);
  sub_1C0386094(0, &qword_1EA19A498, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_1C1517BFC();
  long long v45 = v52;
  uint64_t v33 = v53;
  uint64_t v34 = v54;
  *(void *)&long long v52 = v21;
  *(void *)&v51[0] = v55;
  MEMORY[0x1F4188790](v32);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C0385FC4((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v52 = v35;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v36 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v47;
  *char v47 = 0;
  double result = *(double *)&v45;
  *(_OWORD *)(v37 + 8) = v45;
  *((void *)v37 + 3) = v33;
  *((void *)v37 + 4) = v34;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  *((void *)v37 + 5) = v36;
  *((void *)v37 + 6) = v39;
  return result;
}

uint64_t sub_1C0383BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0383CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C03866AC(0, &qword_1EA19A4B0, (uint64_t (*)(void))sub_1C0385F14, (uint64_t)&type metadata for A12_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0386094(0, &qword_1EA19A4B8, MEMORY[0x1E4FAB6F0]);
  sub_1C0386050(&qword_1EA19A4C0, &qword_1EA19A4B8, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C0383EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a3;
  uint64_t v63 = a2;
  sub_1C03866AC(0, &qword_1EA19A4B0, (uint64_t (*)(void))sub_1C0385F14, (uint64_t)&type metadata for A12_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v47 - v7);
  uint64_t v66 = a1;
  uint64_t v9 = sub_1C151729C();
  uint64_t v10 = swift_allocBox();
  uint64_t v11 = *(void *)(v9 - 8);
  double v12 = *(void (**)(void))(v11 + 104);
  unsigned int v60 = *MEMORY[0x1E4FAB4E8];
  uint64_t v55 = v9;
  uint64_t v58 = v11 + 104;
  uint64_t v59 = (void (*)(uint64_t, void, uint64_t))v12;
  v12(v13);
  uint64_t *v8 = v10;
  uint64_t v14 = *(void (**)(uint64_t *))(v6 + 104);
  unsigned int v57 = *MEMORY[0x1E4FAB940];
  v14(v8);
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0386094(0, &qword_1EA19A4C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C0386050(&qword_1EA19A4D0, &qword_1EA19A4C8, v15);
  sub_1C151738C();
  uint64_t v64 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  uint64_t v61 = v6 + 8;
  v64(v8, v5);
  uint64_t v54 = a1;
  uint64_t v66 = a1;
  sub_1C0386118();
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocBox();
  uint64_t v23 = (char *)v22 + *(int *)(v20 + 48);
  void *v22 = 7;
  uint64_t v24 = *MEMORY[0x1E4FAB8C8];
  uint64_t v25 = sub_1C1517A7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  uint64_t *v8 = v21;
  uint64_t v26 = *MEMORY[0x1E4FAB960];
  uint64_t v27 = v5;
  uint64_t v28 = v5;
  uint64_t v56 = v6 + 104;
  uint64_t v29 = v14;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v14)(v8, v26, v28);
  uint64_t v65 = v63;
  sub_1C151731C();
  uint64_t v30 = v8;
  uint64_t v53 = v27;
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v64)(v8, v27);
  if (*(void *)(v62 + 16))
  {
    uint64_t v50 = *(void *)(v62 + 16);
    swift_bridgeObjectRetain();
    uint64_t v63 = v18;
    uint64_t v32 = 0;
    unsigned int v49 = *MEMORY[0x1E4FABA28];
    unsigned int v48 = *MEMORY[0x1E4FAB638];
    long long v47 = xmmword_1C1529AE0;
    uint64_t v51 = v17;
    long long v52 = v29;
    do
    {
      uint64_t v33 = v55;
      ++v32;
      uint64_t v34 = v54;
      uint64_t v66 = v54;
      uint64_t v35 = swift_allocBox();
      v59(v36, v60, v33);
      *uint64_t v30 = v35;
      uint64_t v37 = v53;
      ((void (*)(uint64_t *, void, uint64_t))v29)(v30, v57, v53);
      swift_bridgeObjectRetain();
      sub_1C151738C();
      v64(v30, v37);
      uint64_t v66 = v34;
      ((void (*)(uint64_t *, void, uint64_t))v29)(v30, v49, v37);
      sub_1C0386188();
      sub_1C03866AC(0, &qword_1EA19A4E0, (uint64_t (*)(void))sub_1C0385F14, (uint64_t)&type metadata for A12_V17.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v39 = v38;
      uint64_t v40 = v37;
      uint64_t v41 = *(void *)(v38 - 8);
      unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = v47;
      uint64_t v44 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v41 + 104))(v43 + v42, v48, v39);
      uint64_t v45 = v40;
      MEMORY[0x1F4188790](v44);
      sub_1C151731C();
      uint64_t v46 = v64;
      swift_bridgeObjectRelease();
      uint64_t v29 = v52;
      v46(v30, v45);
      swift_bridgeObjectRelease();
    }
    while (v50 != v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C03844A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03866AC(0, &qword_1EA19A4B0, (uint64_t (*)(void))sub_1C0385F14, (uint64_t)&type metadata for A12_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v23 - v10;
  v23[1] = a1;
  swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB9E0], v8);
  if (*(void *)(a2 + 16))
  {
    uint64_t v13 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = v4[5];
    v23[0] = v8;
    uint64_t v16 = (char *)v6 + v15;
    uint64_t v17 = *MEMORY[0x1E4FAB8C8];
    uint64_t v18 = sub_1C1517A7C();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    uint64_t v20 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v20;
    id v21 = v20;
    sub_1C04B9C70(v14, (uint64_t)v6);
    sub_1BFF1F284((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0386094(0, &qword_1EA19A4C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0386050(&qword_1EA19A4D0, &qword_1EA19A4C8, v22);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, void))(v9 + 8))(v11, v23[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C038480C(uint64_t a1, uint64_t a2)
{
  sub_1C03866AC(0, &qword_1EA19A4B0, (uint64_t (*)(void))sub_1C0385F14, (uint64_t)&type metadata for A12_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  uint64_t v19 = a2;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v11 = v19 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v18 = *(void *)(v10 + 72);
    unsigned int v17 = *MEMORY[0x1E4FABA10];
    uint64_t v15 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v16 = (uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v20 = a1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 6;
      uint64_t *v8 = v12;
      uint64_t v13 = (*v16)(v8, v17, v5);
      MEMORY[0x1F4188790](v13);
      uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0386094(0, &qword_1EA19A4C8, MEMORY[0x1E4FAB4D0]);
      sub_1C0386050(&qword_1EA19A4D0, &qword_1EA19A4C8, v14);
      sub_1C151734C();
      (*v15)(v8, v5);
      v11 += v18;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0384AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a2;
  uint64_t v52 = a1;
  uint64_t v50 = sub_1C1517A9C();
  uint64_t v47 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v53 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03866AC(0, &qword_1EA19A4B0, (uint64_t (*)(void))sub_1C0385F14, (uint64_t)&type metadata for A12_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v54 = v52;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = *MEMORY[0x1E4FAB9E0];
  uint64_t v51 = v16;
  uint64_t v52 = v15;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  uint64_t v46 = v18;
  v20(v18, v19, v15);
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    uint64_t v43 = v5;
    uint64_t v22 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v23 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BFF1AFA4(v22, (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v24 = *(void *)&v10[*(int *)(v7 + 20) + 32];
      sub_1BFF1F284((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
      if ((v24 & 4) == 0) {
        break;
      }
      v22 += v23;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = 0;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = qword_1F1B81768;
LABEL_8:
    uint64_t v26 = v43;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v26 = v5;
  }
  uint64_t v27 = v44;
  uint64_t v28 = (char *)v13 + v11[5];
  uint64_t v29 = *MEMORY[0x1E4FAB8C8];
  uint64_t v30 = sub_1C1517A7C();
  uint64_t v31 = *(void *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 104))(v28, v29, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  uint64_t v32 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v13 = v25;
  *(uint64_t *)((char *)v13 + v11[6]) = 5;
  uint64_t v33 = *v32;
  *(uint64_t *)((char *)v13 + v11[7]) = (uint64_t)v33;
  uint64_t v34 = qword_1EB87CC48;
  id v35 = v33;
  if (v34 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v36 = v49;
  sub_1C151709C();
  uint64_t v37 = swift_release();
  __n128 v38 = MEMORY[0x1F4188790](v37);
  *(&v43 - 4) = v48;
  *(&v43 - 3) = (uint64_t)v13;
  unint64_t v42 = (unint64_t)v36;
  (*(void (**)(char *, void, uint64_t, __n128))(v47 + 104))(v53, *MEMORY[0x1E4FAB8F8], v50, v38);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v26);
  sub_1BFF1F284((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v39 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0386094(0, &qword_1EA19A4C8, MEMORY[0x1E4FAB4D0]);
  sub_1C0386050(&qword_1EA19A4D0, &qword_1EA19A4C8, v39);
  unint64_t v42 = sub_1BFD5DED4();
  uint64_t v40 = v46;
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v40, v52);
}

uint64_t sub_1C0385150@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V17.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0385240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0382D24(a1, a2, a3);
}

uint64_t sub_1C0385258()
{
  return sub_1C12BC328();
}

unint64_t sub_1C0385268(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0385298();
  unint64_t result = sub_1C03852EC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0385298()
{
  unint64_t result = qword_1EA19A468;
  if (!qword_1EA19A468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A468);
  }
  return result;
}

unint64_t sub_1C03852EC()
{
  unint64_t result = qword_1EA19A470;
  if (!qword_1EA19A470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A470);
  }
  return result;
}

uint64_t type metadata accessor for A12_V17.Bound()
{
  uint64_t result = qword_1EA19A480;
  if (!qword_1EA19A480) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C038538C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F284((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F284(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0385820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F284((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F284(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0385C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0385C90);
}

uint64_t sub_1C0385C90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0385D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0385D54);
}

void *sub_1C0385D54(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0385DFC()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0385EAC(uint64_t a1)
{
  uint64_t result = sub_1C0386714(&qword_1EA19A490, (void (*)(uint64_t))type metadata accessor for A12_V17.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0385F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0383BEC(a1, a2, a3);
}

uint64_t sub_1C0385F0C(uint64_t a1)
{
  return sub_1C0383CBC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C0385F14()
{
  unint64_t result = qword_1EA19A4A0;
  if (!qword_1EA19A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A4A0);
  }
  return result;
}

unint64_t sub_1C0385F68()
{
  unint64_t result = qword_1EA19A4A8;
  if (!qword_1EA19A4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A4A8);
  }
  return result;
}

uint64_t sub_1C0385FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0385150(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0385FC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C00191E0(255, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0386038()
{
  return swift_deallocObject();
}

uint64_t sub_1C0386048(uint64_t a1)
{
  return sub_1C0383EAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0386050(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0386094(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0386094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V17.Layout;
    v8[1] = &type metadata for A12_V17.Layout.Attributes;
    v8[2] = sub_1C0385F14();
    double v8[3] = sub_1C0385F68();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0386118()
{
  if (!qword_1EB8907F8)
  {
    sub_1C1517A7C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8907F8);
    }
  }
}

uint64_t sub_1C0386180(uint64_t a1)
{
  return sub_1C03844A8(a1, *(void *)(v1 + 16));
}

void sub_1C0386188()
{
  if (!qword_1EA19A4D8)
  {
    sub_1C03866AC(255, &qword_1EA19A4E0, (uint64_t (*)(void))sub_1C0385F14, (uint64_t)&type metadata for A12_V17.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19A4D8);
    }
  }
}

void sub_1C0386218(uint64_t a1)
{
  sub_1C038480C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0386220(uint64_t a1)
{
  return sub_1C0384AE8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0386228@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C03866AC(0, &qword_1EA19A508, (uint64_t (*)(void))sub_1C0386658, (uint64_t)&type metadata for A12_V17.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0386658();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0386714(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

ValueMetadata *type metadata accessor for A12_V17.Layout.Attributes()
{
  return &type metadata for A12_V17.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V17.Layout()
{
  return &type metadata for A12_V17.Layout;
}

unint64_t sub_1C03864FC()
{
  unint64_t result = qword_1EA19A4E8;
  if (!qword_1EA19A4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A4E8);
  }
  return result;
}

unint64_t sub_1C0386554()
{
  unint64_t result = qword_1EA19A4F0;
  if (!qword_1EA19A4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A4F0);
  }
  return result;
}

unint64_t sub_1C03865AC()
{
  unint64_t result = qword_1EA19A4F8;
  if (!qword_1EA19A4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A4F8);
  }
  return result;
}

unint64_t sub_1C0386604()
{
  unint64_t result = qword_1EA19A500;
  if (!qword_1EA19A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A500);
  }
  return result;
}

unint64_t sub_1C0386658()
{
  unint64_t result = qword_1EA19A510;
  if (!qword_1EA19A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A510);
  }
  return result;
}

void sub_1C03866AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0386714(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V17.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0386828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V17.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V17.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0386864()
{
  unint64_t result = qword_1EA19A520;
  if (!qword_1EA19A520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A520);
  }
  return result;
}

unint64_t sub_1C03868BC()
{
  unint64_t result = qword_1EA19A528;
  if (!qword_1EA19A528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A528);
  }
  return result;
}

unint64_t sub_1C0386914()
{
  unint64_t result = qword_1EA19A530;
  if (!qword_1EA19A530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A530);
  }
  return result;
}

uint64_t sub_1C0386968(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  while (1)
  {
    unint64_t v4 = *(void *)(a1 + 8 * v3 + 32);
    if (v4 >> 60) {
      break;
    }
    uint64_t v5 = *(void *)(v4 + 64);
    if (*(unsigned __int16 *)(v4 + 60) >> 9 <= 0x7EuLL)
    {
      unint64_t v6 = *(unsigned int *)(v4 + 56) | ((unint64_t)*(unsigned __int16 *)(v4 + 60) << 32);
      if ((v6 >> 45) - 1 >= 5)
      {
        if (v6 >> 45 != 6) {
          break;
        }
        BOOL v8 = v6 == 0xC00000000000 && *(void *)(v4 + 16) == 1;
        if (!v8 || (*(void *)(v4 + 32) | *(void *)(v4 + 24) | *(void *)(v4 + 40) | *(void *)(v4 + 48)) != 0) {
          break;
        }
      }
    }
    swift_retain();
    char v7 = sub_1C0386968(v5);
    swift_release();
    if (v7) {
      break;
    }
    if (v1 == ++v3)
    {
      uint64_t v10 = 0;
      goto LABEL_19;
    }
  }
  uint64_t v10 = 1;
LABEL_19:
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C0386A68(void *a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v59 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v47 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  switch(a2 >> 60)
  {
    case 1uLL:
      uint64_t v17 = swift_projectBox();
      sub_1C0387C7C(v17, (uint64_t)v7);
      LOBYTE(v58) = 1;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (!v2)
      {
        *(_OWORD *)uint64_t v52 = xmmword_1C152C800;
        sub_1BFEB6CB4(&qword_1EA19A5B8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
        sub_1C152080C();
      }
      sub_1C0387D2C((uint64_t)v7);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
    case 2uLL:
      uint64_t v18 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v49 = v20;
      uint64_t v50 = v19;
      uint64_t v22 = *(void *)(v18 + 40);
      uint64_t v23 = *(void *)(v18 + 48);
      uint64_t v24 = *(void *)(v18 + 56);
      uint64_t v47 = *(void *)(v18 + 64);
      uint64_t v48 = v24;
      uint64_t v25 = *(unsigned __int16 *)(v18 + 76);
      uint64_t v26 = *(unsigned int *)(v18 + 72);
      long long v51 = *(_OWORD *)(v18 + 80);
      LOBYTE(v58) = 2;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v50;
      *(void *)&v52[8] = v49;
      *(void *)&v52[16] = v21;
      uint64_t v53 = v22;
      uint64_t v54 = v23;
      uint64_t v55 = v48;
      *(void *)&long long v56 = v47;
      WORD6(v56) = (v26 | (unint64_t)(v25 << 32)) >> 32;
      DWORD2(v56) = v26;
      long long v57 = v51;
      long long v58 = xmmword_1C152C800;
      sub_1C03896E0();
      goto LABEL_28;
    case 3uLL:
      uint64_t v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v51 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      LOBYTE(v58) = 3;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v27;
      *(_OWORD *)&v52[8] = v51;
      uint64_t v53 = v28;
      long long v58 = xmmword_1C152C800;
      sub_1C038968C();
      goto LABEL_28;
    case 4uLL:
      uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v31 = 4;
      goto LABEL_24;
    case 5uLL:
      uint64_t v32 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v33 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v34 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      LOBYTE(v58) = 5;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v32;
      *(void *)&v52[8] = v33;
      v52[16] = v34;
      long long v58 = xmmword_1C152C800;
      sub_1C0389638();
      goto LABEL_28;
    case 6uLL:
      uint64_t v35 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v36 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v37 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      LOBYTE(v58) = 6;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v35;
      *(void *)&v52[8] = v36;
      v52[16] = v37;
      long long v58 = xmmword_1C152C800;
      sub_1C03895E4();
      goto LABEL_28;
    case 7uLL:
      uint64_t v38 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v39 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v58) = 7;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v38;
      *(void *)&v52[8] = v39;
      long long v58 = xmmword_1C152C800;
      sub_1BFFB39D8();
      goto LABEL_28;
    case 8uLL:
      uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v31 = 8;
      goto LABEL_24;
    case 9uLL:
      uint64_t v40 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v41 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v42 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v43 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v44 = *(void *)(v40 + 40);
      LOBYTE(v58) = 9;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v41;
      *(void *)&v52[8] = v42;
      *(void *)&v52[16] = v43;
      uint64_t v53 = v44;
      long long v58 = xmmword_1C152C800;
      sub_1C0389590();
      goto LABEL_28;
    case 0xAuLL:
      uint64_t v45 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v51 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v58) = 10;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v45;
      *(_OWORD *)&v52[8] = v51;
      long long v58 = xmmword_1C152C800;
      sub_1C038953C();
      goto LABEL_28;
    case 0xBuLL:
      uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v31 = 11;
LABEL_24:
      LOBYTE(v58) = v31;
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C03894E8();
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (v2)
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v11, v9);
        return swift_bridgeObjectRelease();
      }
      else
      {
        *(void *)uint64_t v52 = v30;
        *(void *)&v52[8] = v29;
        long long v58 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6CB4((unint64_t *)&qword_1EB85CF10, (void (*)(uint64_t))sub_1BFE2F6D8);
        sub_1C152080C();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
    case 0xCuLL:
      LOBYTE(v58) = 12;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      goto LABEL_28;
    default:
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 32);
      uint64_t v49 = *(void *)(a2 + 24);
      uint64_t v50 = v12;
      uint64_t v14 = *(void *)(a2 + 40);
      uint64_t v48 = *(void *)(a2 + 48);
      uint64_t v15 = *(unsigned __int16 *)(a2 + 60);
      uint64_t v16 = *(unsigned int *)(a2 + 56);
      long long v51 = *(_OWORD *)(a2 + 64);
      LOBYTE(v58) = 0;
      sub_1C03894E8();
      *(_OWORD *)uint64_t v52 = 0uLL;
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
      }
      *(void *)uint64_t v52 = v50;
      *(void *)&v52[8] = v49;
      *(void *)&v52[16] = v13;
      uint64_t v53 = v14;
      uint64_t v54 = v48;
      WORD2(v55) = (v16 | (unint64_t)(v15 << 32)) >> 32;
      LODWORD(v55) = v16;
      long long v56 = v51;
      long long v58 = xmmword_1C152C800;
      sub_1C0389734();
LABEL_28:
      sub_1C152080C();
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v11, v9);
  }
}

unint64_t sub_1C0387274(char a1)
{
  unint64_t result = 1752397168;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4F656469766F7270;
      break;
    case 2:
      unint64_t result = 0x42656469766F7270;
      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      unint64_t result = 0x636E657265666572;
      break;
    case 8:
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0x696F706B61657262;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C038740C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C0387274(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0387274(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0387498()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0387274(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C03874FC()
{
  sub_1C0387274(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0387550()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0387274(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C03875B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C03885D8();
  *a1 = result;
  return result;
}

unint64_t sub_1C03875E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0387274(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C038760C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C038766C()
{
  return sub_1C151EAEC();
}

unint64_t sub_1C03876BC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1C0388624(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C03876E8(void *a1)
{
  return sub_1C0386A68(a1, *v1);
}

uint64_t sub_1C0387704(unint64_t *a1, unint64_t *a2)
{
  return sub_1C0387D88(*a1, *a2);
}

uint64_t sub_1C0387710(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = 28770;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v6 = swift_projectBox();
      sub_1C0387C7C(v6, (uint64_t)v4);
      *(void *)&long long v27 = 0;
      *((void *)&v27 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v25 = 0x2074706F20636564;
      unint64_t v26 = 0xEA0000000000202DLL;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v8 = *((void *)v4 + 3);
      uint64_t v9 = *((void *)v4 + 4);
      char v10 = v4[40];
      *(void *)&long long v27 = *((void *)v4 + 2);
      uint64_t v7 = v27;
      *((void *)&v27 + 1) = v8;
      *(void *)&long long v28 = v9;
      BYTE8(v28) = v10;
      FormatDerivedDataOptionType.description.getter();
      sub_1C0387CE0(v7, v8, v9, v10);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C033D2B4(v7, v8, v9, v10);
      sub_1C151E80C();
      uint64_t v5 = v25;
      sub_1C0387D2C((uint64_t)v4);
      return v5;
    case 2uLL:
      uint64_t v11 = 0x636F6C6220636564;
      unint64_t v12 = 0xEC000000202D206BLL;
      goto LABEL_17;
    case 3uLL:
      *(void *)&long long v27 = 0x2074706F20666572;
      *((void *)&v27 + 1) = 0xEA0000000000202DLL;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_1C12EC90C(v13);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 4uLL:
      *(void *)&long long v27 = 0x2072747320666572;
      *((void *)&v27 + 1) = 0xEB0000000022202DLL;
      sub_1C151E80C();
      sub_1C151E80C();
      goto LABEL_19;
    case 5uLL:
      uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v18 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_1C151E80C();
      *(void *)&long long v27 = v16;
      *((void *)&v27 + 1) = v17;
      LOBYTE(v28) = v18;
      sub_1C152036C();
      goto LABEL_22;
    case 6uLL:
      *(void *)&long long v27 = 0;
      *((void *)&v27 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)&v27, "ref block - ");
      BYTE13(v27) = 0;
      HIWORD(v27) = -5120;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_18;
    case 7uLL:
      uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&long long v27 = 0;
      *((void *)&v27 + 1) = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C035E098(v19, v20);
      goto LABEL_19;
    case 8uLL:
      uint64_t v14 = 0x6D692E7320666572;
      unint64_t v15 = 0xEC000000202D2067;
      goto LABEL_12;
    case 9uLL:
      uint64_t v11 = 0x6D692E6220666572;
      unint64_t v12 = 0xEC000000202D2067;
      goto LABEL_17;
    case 0xAuLL:
      uint64_t v11 = 0x616D2E7320666572;
      unint64_t v12 = 0xED0000202D206863;
LABEL_17:
      *(void *)&long long v27 = v11;
      *((void *)&v27 + 1) = v12;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 0xBuLL:
      uint64_t v14 = 0x6E662E6320666572;
      unint64_t v15 = 0xEC000000202D2074;
LABEL_12:
      *(void *)&long long v27 = v14;
      *((void *)&v27 + 1) = v15;
      sub_1C151E80C();
LABEL_19:
      uint64_t v5 = v27;
      break;
    case 0xCuLL:
      return v5;
    default:
      if (*(unsigned __int16 *)(a1 + 60) >> 9 <= 0x7EuLL)
      {
        unint64_t v22 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
        uint64_t v23 = *(void *)(a1 + 48);
        long long v24 = *(_OWORD *)(a1 + 32);
        long long v27 = *(_OWORD *)(a1 + 16);
        long long v28 = v24;
        uint64_t v29 = v23;
        int v30 = v22;
        __int16 v31 = WORD2(v22);
        uint64_t v25 = 0x202D20687370;
        unint64_t v26 = 0xE600000000000000;
        sub_1C14C36FC();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v5 = v25;
      }
      else
      {
        uint64_t v5 = 6845296;
      }
      break;
  }
  return v5;
}

uint64_t sub_1C0387C74()
{
  return sub_1C0387710(*v0);
}

uint64_t sub_1C0387C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0387CE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0387D2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatDerivedDataOption();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0387D88(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v107 - v8;
  switch(a1 >> 60)
  {
    case 1uLL:
      if (a2 >> 60 != 1) {
        goto LABEL_99;
      }
      uint64_t v25 = swift_projectBox();
      uint64_t v26 = swift_projectBox();
      sub_1C0387C7C(v25, (uint64_t)v9);
      sub_1C0387C7C(v26, (uint64_t)v6);
      char v27 = sub_1C0C4C6E0((uint64_t)v9, (uint64_t)v6);
      sub_1C0387D2C((uint64_t)v6);
      sub_1C0387D2C((uint64_t)v9);
      return v27 & 1;
    case 2uLL:
      if (a2 >> 60 != 2) {
        goto LABEL_99;
      }
      uint64_t v28 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v34 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v33 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v36 = *(unsigned __int16 *)(v28 + 76);
      uint64_t v37 = *(unsigned int *)(v28 + 72);
      uint64_t v38 = *(void **)(v28 + 80);
      uint64_t v108 = *(void *)(v28 + 88);
      int64_t v109 = v38;
      uint64_t v39 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v40 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v41 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&long long v110 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      *((void *)&v110 + 1) = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v111 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v112 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v113 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v42 = *(unsigned __int16 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x4C);
      uint64_t v43 = *(unsigned int *)(v39 + 72);
      uint64_t v44 = *(void **)(v39 + 80);
      uint64_t v107 = *(void *)(v39 + 88);
      if (v29 != v40 || v30 != v41)
      {
        uint64_t v45 = v33;
        uint64_t v46 = v34;
        uint64_t v47 = v31;
        uint64_t v48 = v32;
        char v49 = sub_1C1520A9C();
        uint64_t v32 = v48;
        uint64_t v31 = v47;
        uint64_t v34 = v46;
        uint64_t v33 = v45;
        if ((v49 & 1) == 0) {
          goto LABEL_99;
        }
      }
      unint64_t v50 = v37 | (v36 << 32);
      unint64_t v51 = v43 | (v42 << 32);
      if (((v50 >> 41) & 0x7F) == 0x7F)
      {
        if (((v51 >> 41) & 0x7F) == 0x7F) {
          goto LABEL_96;
        }
LABEL_77:
        uint64_t v108 = v34;
        int64_t v109 = v33;
        uint64_t v97 = v31;
        uint64_t v98 = v32;
        sub_1C017F510(v32, v31, v34, (uint64_t)v33, v35, v37 | (v36 << 32));
        long long v99 = v110;
        uint64_t v101 = v111;
        uint64_t v100 = v112;
        uint64_t v102 = v113;
        sub_1C017F510(v110, *((uint64_t *)&v110 + 1), v111, v112, v113, v51);
        sub_1C017F59C(v98, v97, v108, (uint64_t)v109, v35, v50);
        sub_1C017F59C(v99, *((uint64_t *)&v99 + 1), v101, v100, v102, v51);
        goto LABEL_99;
      }
      if (((v51 >> 41) & 0x7F) == 0x7F) {
        goto LABEL_77;
      }
      *(void *)&long long v114 = v32;
      *((void *)&v114 + 1) = v31;
      uint64_t v115 = v34;
      CGRect v116 = v33;
      uint64_t v117 = v35;
      int v118 = v37;
      __int16 v119 = (v37 | (unint64_t)(v36 << 32)) >> 32;
      long long v120 = v110;
      uint64_t v121 = v111;
      uint64_t v122 = v112;
      uint64_t v123 = v113;
      int v124 = v51;
      __int16 v125 = WORD2(v51);
      if ((sub_1C14C3B50((uint64_t)&v114, (uint64_t)&v120) & 1) == 0) {
        goto LABEL_99;
      }
LABEL_96:
      if ((sub_1C00DEFC4(v109, v44) & 1) == 0 || (sub_1C00DEBB4(v108, v107) & 1) == 0) {
        goto LABEL_99;
      }
LABEL_98:
      char v27 = 1;
      return v27 & 1;
    case 3uLL:
      if (a2 >> 60 != 3) {
        goto LABEL_99;
      }
      uint64_t v52 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v53 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v54 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v55 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v56 = *(void *)(v52 + 40);
      uint64_t v57 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v58 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v59 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v60 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v61 = *(void *)(v57 + 40);
      BOOL v62 = v53 == v58 && v54 == v59;
      if (!v62 && (sub_1C1520A9C() & 1) == 0 || (sub_1C00ABAD8(v55, v60) & 1) == 0 || v56 != v61) {
        goto LABEL_99;
      }
      goto LABEL_98;
    case 4uLL:
      if (a2 >> 60 != 4) {
        goto LABEL_99;
      }
      goto LABEL_57;
    case 5uLL:
      if (a2 >> 60 != 5) {
        goto LABEL_99;
      }
      uint64_t v72 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v73 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v74 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v75 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      int v76 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
      {
        if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20) == 1)
        {
          if (v76 != 1) {
            goto LABEL_99;
          }
        }
        else if (v76 != 2)
        {
          goto LABEL_99;
        }
        if (v72 == v74 && v73 == v75) {
          goto LABEL_98;
        }
      }
      else
      {
        if (*(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20)) {
          goto LABEL_99;
        }
        if (v72 == v74 && v73 == v75) {
          goto LABEL_98;
        }
      }
      goto LABEL_87;
    case 6uLL:
      if (a2 >> 60 != 6) {
        goto LABEL_99;
      }
      uint64_t v77 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v78 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      int v79 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v80 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v81 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      int v82 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      if (v77 == v80 && v78 == v81)
      {
        if (v79 == v82) {
          goto LABEL_98;
        }
      }
      else if ((sub_1C1520A9C() & 1) != 0 && ((v79 ^ v82) & 1) == 0)
      {
        goto LABEL_98;
      }
      goto LABEL_99;
    case 7uLL:
      if (a2 >> 60 != 7) {
        goto LABEL_99;
      }
      long long v120 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v114 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v27 = _s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0((uint64_t *)&v120, (uint64_t *)&v114);
      return v27 & 1;
    case 8uLL:
      if (a2 >> 60 == 8) {
        goto LABEL_57;
      }
      goto LABEL_99;
    case 9uLL:
      if (a2 >> 60 != 9) {
        goto LABEL_99;
      }
      uint64_t v63 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v64 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v66 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v65 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v67 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v68 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v70 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v69 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      BOOL v71 = v63 == v67 && v64 == v68;
      if (!v71 && (sub_1C1520A9C() & 1) == 0) {
        goto LABEL_99;
      }
      if (!v65)
      {
        if (v69) {
          goto LABEL_99;
        }
        goto LABEL_98;
      }
      if (!v69) {
        goto LABEL_99;
      }
      if (v66 == v70 && v65 == v69) {
        goto LABEL_98;
      }
LABEL_87:
      if (sub_1C1520A9C()) {
        goto LABEL_98;
      }
      goto LABEL_99;
    case 0xAuLL:
      if (a2 >> 60 != 10) {
        goto LABEL_99;
      }
      uint64_t v86 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v87 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v88 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v89 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v90 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      id v91 = *(void **)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      BOOL v92 = v86 == v89 && v87 == v90;
      if (!v92 && (sub_1C1520A9C() & 1) == 0 || (sub_1BFE9E788(v88, v91) & 1) == 0) {
        goto LABEL_99;
      }
      goto LABEL_98;
    case 0xBuLL:
      if (a2 >> 60 != 11) {
        goto LABEL_99;
      }
LABEL_57:
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        && *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
      {
        goto LABEL_98;
      }
      return sub_1C1520A9C();
    case 0xCuLL:
      if (a2 != 0xC000000000000000) {
        goto LABEL_99;
      }
      goto LABEL_98;
    default:
      if (a2 >> 60) {
        goto LABEL_99;
      }
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(a1 + 48);
      unint64_t v15 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
      uint64_t v16 = *(void **)(a1 + 64);
      uint64_t v113 = *(void *)(a1 + 72);
      uint64_t v17 = *(void *)(a2 + 16);
      uint64_t v18 = *(void *)(a2 + 24);
      uint64_t v20 = *(void *)(a2 + 32);
      uint64_t v19 = *(void *)(a2 + 40);
      uint64_t v21 = *(void *)(a2 + 48);
      unint64_t v22 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32);
      uint64_t v23 = *(void **)(a2 + 64);
      uint64_t v24 = *(void *)(a2 + 72);
      if (((v15 >> 41) & 0x7F) == 0x7F)
      {
        if (((v22 >> 41) & 0x7F) == 0x7F)
        {
LABEL_92:
          if (sub_1C00DEFC4(v16, v23) & 1) != 0 && (sub_1C00DEBB4(v113, v24)) {
            goto LABEL_98;
          }
LABEL_99:
          char v27 = 0;
          return v27 & 1;
        }
      }
      else if (((v22 >> 41) & 0x7F) != 0x7F)
      {
        *(void *)&long long v114 = v11;
        *((void *)&v114 + 1) = v10;
        uint64_t v115 = v13;
        CGRect v116 = (void *)v12;
        uint64_t v117 = v14;
        int v118 = v15;
        __int16 v119 = WORD2(v15);
        *(void *)&long long v120 = v17;
        *((void *)&v120 + 1) = v18;
        uint64_t v121 = v20;
        uint64_t v122 = v19;
        uint64_t v123 = v21;
        int v124 = v22;
        __int16 v125 = WORD2(v22);
        uint64_t v104 = v23;
        objc_super v105 = v16;
        char v106 = sub_1C14C3B50((uint64_t)&v114, (uint64_t)&v120);
        uint64_t v23 = v104;
        uint64_t v16 = v105;
        if ((v106 & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_92;
      }
      uint64_t v111 = v11;
      uint64_t v112 = v10;
      uint64_t v93 = v18;
      uint64_t v94 = v20;
      uint64_t v95 = v19;
      uint64_t v96 = v21;
      sub_1C017F510(v11, v10, v13, v12, v14, v15);
      sub_1C017F510(v17, v93, v94, v95, v96, v22);
      sub_1C017F59C(v111, v112, v13, v12, v14, v15);
      sub_1C017F59C(v17, v93, v94, v95, v96, v22);
      goto LABEL_99;
  }
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataInstruction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x74 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 116);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x73) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataInstruction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x73)
  {
    *(void *)uint64_t result = a2 - 116;
    if (a3 >= 0x74) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x74) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C0388580(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 <= 0xB) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 12;
  }
}

unint64_t *sub_1C038859C(unint64_t *result, uint64_t a2)
{
  if (a2 < 0xC)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 12);
    unint64_t v3 = 0xC000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataInstruction()
{
  return &type metadata for FormatDerivedDataInstruction;
}

uint64_t sub_1C03885D8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C0388624(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = a1[3];
  BOOL v62 = a1;
  unint64_t v12 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C0388FE8();
    *(_OWORD *)uint64_t v57 = 0uLL;
    sub_1C15206EC();
    switch((char)v61)
    {
      case 1:
        *(_OWORD *)uint64_t v57 = xmmword_1C152C800;
        sub_1BFEB6CB4(&qword_1EA19A570, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v18 = swift_allocBox();
        sub_1C017807C((uint64_t)v5, v19);
        unint64_t v12 = v18 | 0x1000000000000000;
        break;
      case 2:
        long long v61 = xmmword_1C152C800;
        sub_1C0389368();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        long long v54 = *(_OWORD *)&v57[16];
        long long v55 = *(_OWORD *)v57;
        long long v53 = v58;
        uint64_t v20 = v59;
        int v21 = DWORD2(v59);
        __int16 v22 = WORD6(v59);
        long long v56 = v60;
        uint64_t v23 = swift_allocObject();
        long long v24 = v54;
        *(_OWORD *)(v23 + 16) = v55;
        *(_OWORD *)(v23 + 32) = v24;
        *(_OWORD *)(v23 + 48) = v53;
        *(void *)(v23 + 64) = v20;
        *(_WORD *)(v23 + 76) = v22;
        *(_DWORD *)(v23 + 72) = v21;
        unint64_t v12 = v23 | 0x2000000000000000;
        *(_OWORD *)(v23 + 80) = v56;
        break;
      case 3:
        long long v61 = xmmword_1C152C800;
        sub_1C03892C0();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v25 = *(void *)v57;
        uint64_t v26 = *(void *)&v57[24];
        long long v56 = *(_OWORD *)&v57[8];
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v25;
        *(_OWORD *)(v27 + 24) = v56;
        *(void *)(v27 + 40) = v26;
        unint64_t v12 = v27 | 0x3000000000000000;
        break;
      case 4:
        sub_1BFE2F6D8();
        long long v61 = xmmword_1C152C800;
        sub_1BFEB6CB4((unint64_t *)&qword_1EB873EF0, (void (*)(uint64_t))sub_1BFE2F6D8);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v29 = *(void *)&v57[8];
        uint64_t v28 = *(void *)v57;
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v28;
        *(void *)(v30 + 24) = v29;
        unint64_t v12 = v30 | 0x4000000000000000;
        break;
      case 5:
        long long v61 = xmmword_1C152C800;
        sub_1C0389230();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v32 = *(void *)&v57[8];
        uint64_t v31 = *(void *)v57;
        char v33 = v57[16];
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v31;
        *(void *)(v34 + 24) = v32;
        *(unsigned char *)(v34 + 32) = v33;
        unint64_t v12 = v34 | 0x5000000000000000;
        break;
      case 6:
        long long v61 = xmmword_1C152C800;
        sub_1C03891A4();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v36 = *(void *)&v57[8];
        uint64_t v35 = *(void *)v57;
        char v37 = v57[16];
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v35;
        *(void *)(v38 + 24) = v36;
        *(unsigned char *)(v38 + 32) = v37;
        unint64_t v12 = v38 | 0x6000000000000000;
        break;
      case 7:
        long long v61 = xmmword_1C152C800;
        sub_1BFD86FC0();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v40 = *(void *)&v57[8];
        uint64_t v39 = *(void *)v57;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = v39;
        *(void *)(v41 + 24) = v40;
        unint64_t v12 = v41 | 0x7000000000000000;
        break;
      case 8:
        sub_1BFE2F6D8();
        long long v61 = xmmword_1C152C800;
        sub_1BFEB6CB4((unint64_t *)&qword_1EB873EF0, (void (*)(uint64_t))sub_1BFE2F6D8);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v43 = *(void *)&v57[8];
        uint64_t v42 = *(void *)v57;
        uint64_t v44 = swift_allocObject();
        *(void *)(v44 + 16) = v42;
        *(void *)(v44 + 24) = v43;
        unint64_t v12 = v44 | 0x8000000000000000;
        break;
      case 9:
        long long v61 = xmmword_1C152C800;
        sub_1C03890D0();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        long long v56 = *(_OWORD *)v57;
        uint64_t v46 = *(void *)&v57[24];
        uint64_t v45 = *(void *)&v57[16];
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = v56;
        *(void *)(v47 + 32) = v45;
        *(void *)(v47 + 40) = v46;
        unint64_t v12 = v47 | 0x9000000000000000;
        break;
      case 10:
        long long v61 = xmmword_1C152C800;
        sub_1C0389074();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v48 = *(void *)v57;
        long long v56 = *(_OWORD *)&v57[8];
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = v48;
        *(_OWORD *)(v49 + 24) = v56;
        unint64_t v12 = v49 | 0xA000000000000000;
        break;
      case 11:
        sub_1BFE2F6D8();
        long long v61 = xmmword_1C152C800;
        sub_1BFEB6CB4((unint64_t *)&qword_1EB873EF0, (void (*)(uint64_t))sub_1BFE2F6D8);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v51 = *(void *)&v57[8];
        uint64_t v50 = *(void *)v57;
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = v50;
        *(void *)(v52 + 24) = v51;
        unint64_t v12 = v52 | 0xB000000000000000;
        break;
      case 12:
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        unint64_t v12 = 0xC000000000000000;
        break;
      default:
        long long v61 = xmmword_1C152C800;
        sub_1C038942C();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        long long v55 = *(_OWORD *)&v57[16];
        long long v56 = *(_OWORD *)v57;
        uint64_t v14 = v58;
        int v15 = DWORD2(v58);
        __int16 v16 = WORD6(v58);
        long long v54 = v59;
        unint64_t v12 = swift_allocObject();
        long long v17 = v55;
        *(_OWORD *)(v12 + 16) = v56;
        *(_OWORD *)(v12 + 32) = v17;
        *(void *)(v12 + 48) = v14;
        *(_WORD *)(v12 + 60) = v16;
        *(_DWORD *)(v12 + 56) = v15;
        *(_OWORD *)(v12 + 64) = v54;
        break;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return v12;
}

unint64_t sub_1C0388FE8()
{
  unint64_t result = qword_1EA19A538;
  if (!qword_1EA19A538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A538);
  }
  return result;
}

uint64_t sub_1C038903C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0389074()
{
  unint64_t result = qword_1EA19A540;
  if (!qword_1EA19A540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A540);
  }
  return result;
}

uint64_t sub_1C03890C8()
{
  return objectdestroy_3Tm();
}

unint64_t sub_1C03890D0()
{
  unint64_t result = qword_1EA19A548;
  if (!qword_1EA19A548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A548);
  }
  return result;
}

uint64_t sub_1C0389124()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0389164()
{
  if (*(void *)(v0 + 24) >= 0xFuLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

unint64_t sub_1C03891A4()
{
  unint64_t result = qword_1EA19A550;
  if (!qword_1EA19A550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A550);
  }
  return result;
}

uint64_t sub_1C03891F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0389230()
{
  unint64_t result = qword_1EA19A558;
  if (!qword_1EA19A558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A558);
  }
  return result;
}

uint64_t sub_1C0389284()
{
  sub_1C015FB90(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocObject();
}

unint64_t sub_1C03892C0()
{
  unint64_t result = qword_1EA19A560;
  if (!qword_1EA19A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A560);
  }
  return result;
}

uint64_t sub_1C0389314()
{
  return objectdestroy_3Tm();
}

uint64_t objectdestroy_3Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0389368()
{
  unint64_t result = qword_1EA19A568;
  if (!qword_1EA19A568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A568);
  }
  return result;
}

uint64_t sub_1C03893BC()
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(v0 + 76) >> 9 <= 0x7EuLL) {
    sub_1C017F5B0(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int16 *)(v0 + 76) << 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C038942C()
{
  unint64_t result = qword_1EA19A578;
  if (!qword_1EA19A578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A578);
  }
  return result;
}

uint64_t sub_1C0389480()
{
  if (*(unsigned __int16 *)(v0 + 60) >> 9 <= 0x7EuLL) {
    sub_1C017F5B0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int16 *)(v0 + 60) << 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C03894E8()
{
  unint64_t result = qword_1EA19A580;
  if (!qword_1EA19A580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A580);
  }
  return result;
}

unint64_t sub_1C038953C()
{
  unint64_t result = qword_1EA19A588;
  if (!qword_1EA19A588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A588);
  }
  return result;
}

unint64_t sub_1C0389590()
{
  unint64_t result = qword_1EA19A590;
  if (!qword_1EA19A590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A590);
  }
  return result;
}

unint64_t sub_1C03895E4()
{
  unint64_t result = qword_1EA19A598;
  if (!qword_1EA19A598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A598);
  }
  return result;
}

unint64_t sub_1C0389638()
{
  unint64_t result = qword_1EA19A5A0;
  if (!qword_1EA19A5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5A0);
  }
  return result;
}

unint64_t sub_1C038968C()
{
  unint64_t result = qword_1EA19A5A8;
  if (!qword_1EA19A5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5A8);
  }
  return result;
}

unint64_t sub_1C03896E0()
{
  unint64_t result = qword_1EA19A5B0;
  if (!qword_1EA19A5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5B0);
  }
  return result;
}

unint64_t sub_1C0389734()
{
  unint64_t result = qword_1EA19A5C0;
  if (!qword_1EA19A5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataInstruction.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0389854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataInstruction.CodingType()
{
  return &type metadata for FormatDerivedDataInstruction.CodingType;
}

unint64_t sub_1C0389890()
{
  unint64_t result = qword_1EA19A5C8;
  if (!qword_1EA19A5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5C8);
  }
  return result;
}

unint64_t sub_1C03898E4()
{
  unint64_t result = qword_1EA19A5D0;
  if (!qword_1EA19A5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerMessage()
{
  return &type metadata for DebugFormatSocketServerMessage;
}

uint64_t sub_1C0389948(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a3;
  sub_1BFEFF380(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  sub_1C038A404();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_1C152080C();
  if (!v3)
  {
    uint64_t v13 = a2;
    uint64_t v14 = v15;
    long long v12 = xmmword_1C152C800;
    sub_1C038A458();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C0389B0C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0389B5C()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0389B70()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0389BBC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C0389C10(void *a1@<X8>)
{
  *a1 = 0x64616F6C6572;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1C0389C28()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0389C88()
{
  return sub_1C151EAEC();
}

void *sub_1C0389CD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C038A154(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1C0389D04(void *a1)
{
  return sub_1C0389948(a1, *v1, v1[1]);
}

uint64_t sub_1C0389D20()
{
  return 0x6E656B6F74;
}

uint64_t sub_1C0389D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0389DC4(uint64_t a1)
{
  unint64_t v2 = sub_1C038A57C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0389E00(uint64_t a1)
{
  unint64_t v2 = sub_1C038A57C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0389E3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1BFEFF380(0, &qword_1EA19A608, (uint64_t (*)(void))sub_1C038A57C, (uint64_t)&type metadata for DebugFormatSocketServerReloadMessage.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C038A57C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1C0389FEC(void *a1)
{
  sub_1BFEFF380(0, &qword_1EA19A618, (uint64_t (*)(void))sub_1C038A57C, (uint64_t)&type metadata for DebugFormatSocketServerReloadMessage.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C038A57C();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *sub_1C038A154(void *a1)
{
  sub_1BFEFF380(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v9 = v8;
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C038A35C();
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    sub_1C15206EC();
    long long v11 = xmmword_1C152C800;
    sub_1C038A3B0();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1C038A35C()
{
  unint64_t result = qword_1EA19A5D8;
  if (!qword_1EA19A5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5D8);
  }
  return result;
}

unint64_t sub_1C038A3B0()
{
  unint64_t result = qword_1EA19A5E0;
  if (!qword_1EA19A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5E0);
  }
  return result;
}

unint64_t sub_1C038A404()
{
  unint64_t result = qword_1EA19A5E8;
  if (!qword_1EA19A5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5E8);
  }
  return result;
}

unint64_t sub_1C038A458()
{
  unint64_t result = qword_1EA19A5F0;
  if (!qword_1EA19A5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerMessage.CodingType()
{
  return &type metadata for DebugFormatSocketServerMessage.CodingType;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerReloadMessage()
{
  return &type metadata for DebugFormatSocketServerReloadMessage;
}

unint64_t sub_1C038A4D4()
{
  unint64_t result = qword_1EA19A5F8;
  if (!qword_1EA19A5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A5F8);
  }
  return result;
}

unint64_t sub_1C038A528()
{
  unint64_t result = qword_1EA19A600;
  if (!qword_1EA19A600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A600);
  }
  return result;
}

unint64_t sub_1C038A57C()
{
  unint64_t result = qword_1EA19A610;
  if (!qword_1EA19A610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A610);
  }
  return result;
}

unsigned char *_s8NewsFeed30DebugFormatSocketServerMessageO10CodingTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C038A66CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerReloadMessage.CodingKeys()
{
  return &type metadata for DebugFormatSocketServerReloadMessage.CodingKeys;
}

unint64_t sub_1C038A6A8()
{
  unint64_t result = qword_1EA19A620;
  if (!qword_1EA19A620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A620);
  }
  return result;
}

unint64_t sub_1C038A700()
{
  unint64_t result = qword_1EA19A628;
  if (!qword_1EA19A628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A628);
  }
  return result;
}

unint64_t sub_1C038A758()
{
  unint64_t result = qword_1EA19A630;
  if (!qword_1EA19A630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A630);
  }
  return result;
}

uint64_t destroy for FeedGroupJournalEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for FeedGroupJournalEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FeedGroupJournalEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FeedGroupJournalEntity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupJournalEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupJournalEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupJournalEntity()
{
  return &type metadata for FeedGroupJournalEntity;
}

uint64_t sub_1C038AC10()
{
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  qword_1EA2B4F38 = qword_1EA198ED8;
  unk_1EA2B4F40 = unk_1EA198EE0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C038AC7C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v204 = a5;
  uint64_t v230 = a3;
  v226 = a2;
  v207 = a6;
  uint64_t v194 = sub_1C151827C();
  uint64_t v193 = *(void *)(v194 - 8);
  MEMORY[0x1F4188790](v194);
  v223 = (char *)&v192 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_1C151531C();
  uint64_t v202 = *(void *)(v203 - 8);
  MEMORY[0x1F4188790](v203);
  v201 = (uint64_t *)((char *)&v192 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v229 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v196 = AssociatedTypeWitness;
  uint64_t v222 = swift_getAssociatedTypeWitness();
  uint64_t v205 = *(void *)(v222 - 8);
  MEMORY[0x1F4188790](v222);
  v200 = (char *)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v199 = (char *)&v192 - v13;
  MEMORY[0x1F4188790](v14);
  v197 = (char *)&v192 - v15;
  MEMORY[0x1F4188790](v16);
  v198 = (char *)&v192 - v17;
  MEMORY[0x1F4188790](v18);
  v206 = (char *)&v192 - v19;
  sub_1C0390078(0, &qword_1EB864038, sub_1C038FF58);
  MEMORY[0x1F4188790](v20 - 8);
  v221 = (char *)&v192 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  v220 = (char *)&v192 - v23;
  sub_1C0390078(0, &qword_1EB864088, (void (*)(uint64_t))sub_1C03900CC);
  MEMORY[0x1F4188790](v24 - 8);
  v219 = (char *)&v192 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  v218 = (char *)&v192 - v27;
  sub_1C0390078(0, &qword_1EB864068, sub_1C039017C);
  MEMORY[0x1F4188790](v28 - 8);
  v236 = (char *)&v192 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  v217 = (char *)&v192 - v31;
  sub_1C0390078(0, &qword_1EB8640A8, (void (*)(uint64_t))sub_1C03903D0);
  MEMORY[0x1F4188790](v32 - 8);
  v233 = (char *)&v192 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  v232 = (char *)&v192 - v35;
  sub_1BFCCCF10(0, &qword_1EB864098, &qword_1EB864090, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790]);
  MEMORY[0x1F4188790](v36 - 8);
  v238 = (char *)&v192 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  v231 = (char *)&v192 - v39;
  sub_1C0390078(0, (unint64_t *)&qword_1EB85AC98, (void (*)(uint64_t))sub_1C009103C);
  MEMORY[0x1F4188790](v40 - 8);
  v239 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))((char *)&v192 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v42);
  v237 = (char *)&v192 - v43;
  uint64_t v44 = MEMORY[0x1E4FBB1A0];
  uint64_t v45 = MEMORY[0x1E4FAA770];
  sub_1BFCCCF10(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v46 - 8);
  uint64_t v48 = (char *)&v192 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v192 - v50;
  unint64_t v224 = *a1;
  v211 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCCCEC0(0, &qword_1EB85ACA0, v44, v45, MEMORY[0x1E4FAA6B0]);
  uint64_t v53 = v52;
  uint64_t v54 = *(void *)(v52 - 8);
  long long v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
  v227 = v55;
  uint64_t v245 = v54 + 56;
  uint64_t v234 = (uint64_t)v51;
  v55((uint64_t)v51, 1, 1, v52);
  uint64_t v244 = (uint64_t)v48;
  v55((uint64_t)v48, 1, 1, v53);
  v209 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCCCEC0(0, &qword_1EB85ACE0, v44, v45, MEMORY[0x1E4FAA6B8]);
  uint64_t v57 = v56;
  swift_allocObject();
  sub_1C1519BDC();
  v210 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCCCEC0(0, &qword_1EB85AC40, v44, v45, MEMORY[0x1E4FAA610]);
  uint64_t v59 = v58;
  swift_allocObject();
  uint64_t v242 = sub_1C151996C();
  sub_1C009103C();
  uint64_t v61 = v60;
  uint64_t v214 = v60;
  uint64_t v62 = *(void *)(v60 - 8);
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
  uint64_t v216 = v62 + 56;
  v63(v237, 1, 1, v60);
  v215 = v63;
  v63((char *)v239, 1, 1, v61);
  sub_1C0390480();
  uint64_t v213 = v64;
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1C0091180();
  uint64_t v212 = v65;
  swift_allocObject();
  uint64_t v243 = sub_1C151996C();
  uint64_t v66 = v234;
  uint64_t v67 = v53;
  uint64_t v68 = v53;
  uint64_t v69 = v227;
  v227(v234, 1, 1, v68);
  uint64_t v70 = v244;
  v69(v244, 1, 1, v67);
  uint64_t v228 = v57;
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v241 = sub_1C151996C();
  uint64_t v235 = v67;
  v69(v66, 1, 1, v67);
  v69(v70, 1, 1, v67);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  uint64_t v208 = v59;
  swift_allocObject();
  uint64_t v240 = sub_1C151996C();
  uint64_t v71 = MEMORY[0x1E4FBB3D0];
  uint64_t v72 = MEMORY[0x1E4FAA790];
  sub_1BFCCCEC0(0, &qword_1EB864090, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790], v211);
  uint64_t v74 = v73;
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56);
  v75(v231, 1, 1, v73);
  v75(v238, 1, 1, v74);
  sub_1BFCCCEC0(0, &qword_1EB8640D8, v71, v72, v209);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFCCCEC0(0, &qword_1EB864000, v71, v72, v210);
  swift_allocObject();
  v238 = (char *)sub_1C151996C();
  sub_1C03903D0();
  uint64_t v77 = v76;
  uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56);
  v78(v232, 1, 1, v76);
  v78(v233, 1, 1, v77);
  sub_1C0390530();
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1C03905E0();
  swift_allocObject();
  v232 = (char *)sub_1C151996C();
  uint64_t v79 = v235;
  uint64_t v80 = v227;
  v227(v66, 1, 1, v235);
  v80(v244, 1, 1, v79);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  v231 = (char *)sub_1C151996C();
  uint64_t v81 = v214;
  int v82 = (void (*)(uint64_t (*)(uint64_t, uint64_t, unint64_t), uint64_t, uint64_t, uint64_t))v215;
  v215(v237, 1, 1, v214);
  v82(v239, 1, 1, v81);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  v233 = (char *)sub_1C151996C();
  sub_1C039017C(0);
  uint64_t v84 = v83;
  long long v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56);
  v85(v217, 1, 1, v83);
  v85(v236, 1, 1, v84);
  v239 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B8];
  sub_1C03906B0(0, &qword_1EB8640C8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1C0390690(0);
  swift_allocObject();
  v236 = (char *)sub_1C151996C();
  sub_1C03900CC();
  uint64_t v87 = v86;
  char v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56);
  v88(v218, 1, 1, v86);
  v88(v219, 1, 1, v87);
  sub_1C039074C();
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1C03907FC();
  swift_allocObject();
  v237 = (char *)sub_1C151996C();
  uint64_t v89 = v235;
  v80(v234, 1, 1, v235);
  v80(v244, 1, 1, v89);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v235 = sub_1C151996C();
  sub_1C038FF58(0);
  uint64_t v91 = v90;
  BOOL v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56);
  uint64_t v93 = v220;
  v92(v220, 1, 1, v90);
  uint64_t v94 = v221;
  v92(v221, 1, 1, v91);
  sub_1C03908CC(0, &qword_1EB8640B8, v239);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1C03908AC(0);
  swift_allocObject();
  v239 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C151996C();
  v92(v93, 1, 1, v91);
  v92(v94, 1, 1, v91);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v234 = sub_1C151996C();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v95 = *(void *)(v230 + 8);
  uint64_t v248 = *(void *)v230;
  unint64_t v249 = v95;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v96 = swift_release();
  uint64_t v248 = (*(uint64_t (**)(uint64_t))(v230 + 232))(v96);
  unint64_t v249 = v97;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v98 = v226[1];
  uint64_t v248 = *v226;
  unint64_t v249 = v98;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v99 = *(void *)(v229 + 24);
  uint64_t v248 = *(void *)(v229 + 16);
  unint64_t v249 = v99;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v248 = *(void *)(v230 + 224);
  LOBYTE(v249) = 0;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  FeedJournalGroupResult.kind.getter((char *)v252);
  uint64_t v100 = 8 * SLOBYTE(v252[0]);
  uint64_t v101 = *(void *)&aNext_3[v100];
  unint64_t v102 = *(void *)((char *)&unk_1C1542BA0 + v100);
  uint64_t v248 = v101;
  unint64_t v249 = v102;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v245 = sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v228 = v230 + 128;
  uint64_t v248 = FeedJournalGroupResultOutput.reason.getter();
  unint64_t v249 = v103;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v227 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v104 = *(char **)(v230 + 72);
  int64_t v105 = *((void *)v104 + 2);
  uint64_t v106 = MEMORY[0x1E4FBC860];
  if (v105)
  {
    uint64_t v255 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7138(0, v105, 0);
    v221 = v104;
    uint64_t v107 = (uint64_t)(v104 + 32);
    do
    {
      sub_1BFDCA3A4(v107, (uint64_t)&v248);
      sub_1BFDCA3A4((uint64_t)&v248, (uint64_t)v252);
      __swift_project_boxed_opaque_existential_1(v252, v252[3]);
      uint64_t v108 = sub_1C152088C();
      uint64_t v244 = v109;
      uint64_t v245 = v108;
      long long v110 = v253;
      unsigned __int8 v111 = v254;
      if (v254)
      {
        if (v254 == 1)
        {
          uint64_t v246 = 0x202C70696B53;
          unint64_t v247 = 0xE600000000000000;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          uint64_t v113 = v246;
          unint64_t v112 = v247;
          char v114 = 2;
        }
        else if (v253 == 0)
        {
          char v114 = 0;
          unint64_t v112 = 0xE500000000000000;
          uint64_t v113 = 0x776F6C6C41;
        }
        else
        {
          char v114 = 3;
          unint64_t v112 = 0xEF7473614C206C69;
          uint64_t v113 = 0x746E552070696B53;
        }
      }
      else
      {
        uint64_t v246 = 0x202C65766F6D6552;
        unint64_t v247 = 0xE800000000000000;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        uint64_t v113 = v246;
        unint64_t v112 = v247;
        char v114 = 1;
      }
      sub_1BFDCA2FC((uint64_t)v252);
      sub_1BFDCA350(v110, *((uint64_t *)&v110 + 1), v111);
      sub_1BFDCA2FC((uint64_t)&v248);
      uint64_t v106 = v255;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7138(0, *(void *)(v106 + 16) + 1, 1);
        uint64_t v106 = v255;
      }
      unint64_t v116 = *(void *)(v106 + 16);
      unint64_t v115 = *(void *)(v106 + 24);
      if (v116 >= v115 >> 1)
      {
        sub_1C05F7138(v115 > 1, v116 + 1, 1);
        uint64_t v106 = v255;
      }
      *(void *)(v106 + 16) = v116 + 1;
      unint64_t v117 = v106 + 40 * v116;
      uint64_t v118 = v244;
      *(void *)(v117 + 32) = v245;
      *(void *)(v117 + 40) = v118;
      *(unsigned char *)(v117 + 48) = v114;
      *(void *)(v117 + 56) = v113;
      *(void *)(v117 + 64) = v112;
      v107 += 64;
      --v105;
    }
    while (v105);
    swift_bridgeObjectRelease();
  }
  uint64_t v248 = v106;
  sub_1C039019C();
  swift_allocObject();
  uint64_t v248 = sub_1C1519D4C();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v245 = sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v248 = FeedJournalGroupResultOutput.score.getter();
  LOWORD(v249) = v119 & 1;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v120 = *(void *)(v230 + 24);
  uint64_t v248 = *(void *)(v230 + 16);
  unint64_t v249 = v120;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  unint64_t v121 = v224;
  if (v224 >= 2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __int16 v125 = v232;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BFE60260(v121);
    sub_1C151997C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v126 = *(void *)(v224 + 16);
    int v124 = v125;
    if (v126) {
      uint64_t v127 = *(void *)(v224 + 32);
    }
    else {
      uint64_t v127 = 0;
    }
    uint64_t v123 = v222;
    BOOL v128 = v126 == 0;
    unint64_t v129 = v224;
    sub_1BFD7F858(v224);
    uint64_t v248 = v127;
    LOWORD(v249) = v128;
    sub_1C1519C0C();
    swift_release();
    sub_1BFD7F858(v129);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v122 = v232;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C151997C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v248 = 0;
    LOWORD(v249) = 256;
    sub_1C1519C0C();
    swift_release();
    uint64_t v123 = v222;
    int v124 = v122;
  }
  sub_1BFD7EBD0(v228, (uint64_t)&v248);
  switch(v251)
  {
    case 1:
      sub_1C0392E90();
      CGRect v130 = &v229;
      goto LABEL_31;
    case 2:
      sub_1C0392E90();
      CGRect v131 = v200;
      if (!swift_dynamicCast()) {
        goto LABEL_27;
      }
      goto LABEL_32;
    case 3:
      swift_bridgeObjectRelease();
      sub_1C0392E90();
      CGRect v130 = (uint64_t *)&v231;
      goto LABEL_31;
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      goto LABEL_28;
    default:
      sub_1C0392E90();
      CGRect v130 = &v230;
LABEL_31:
      CGRect v131 = (char *)*(v130 - 32);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_27:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
LABEL_28:
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C151997C();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v248 = 1;
        sub_1C1519C0C();
        swift_release();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        CGRect v132 = v238;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C151997C();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        CGRect v133 = v231;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v134 = v240;
        swift_release();
        swift_release();
        uint64_t v135 = v243;
        swift_release();
        swift_release();
        uint64_t v248 = 1;
        sub_1C1519C0C();
        swift_release();
        swift_release();
        uint64_t v136 = v134;
        sub_1C0392E3C(v230);
        sub_1C0392E3C((uint64_t)v226);
        swift_release();
        swift_release();
        uint64_t v137 = v235;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v138 = v233;
        swift_release();
        swift_release();
        uint64_t v139 = v232;
        swift_release();
        v140 = v132;
        swift_release();
        swift_release();
        uint64_t v141 = v241;
        swift_release();
        uint64_t v142 = v135;
        swift_release();
        uint64_t v143 = v242;
        uint64_t result = swift_release();
        uint64_t v145 = v136;
        v146 = v140;
        v147 = v236;
        v148 = v237;
        uint64_t v149 = v234;
        uint64_t v150 = v141;
        uint64_t v151 = v143;
        v152 = v138;
        goto LABEL_29;
      }
LABEL_32:
      uint64_t v155 = v205;
      (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v206, v131, v123);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
      sub_1C151869C();
      swift_allocObject();
      uint64_t v156 = sub_1C151535C();
      v157 = v201;
      void *v201 = 0x7974696E69666E69;
      v157[1] = 0xE800000000000000;
      v157[2] = 0x74696E69666E692DLL;
      v157[3] = 0xE900000000000079;
      v157[4] = 7233902;
      v157[5] = 0xE300000000000000;
      (*(void (**)(void *, void, uint64_t))(v202 + 104))(v157, *MEMORY[0x1E4F26D30], v203);
      sub_1C151532C();
      uint64_t v245 = v156;
      uint64_t v158 = v225;
      sub_1C151867C();
      uint64_t v225 = v158;
      if (!v158)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v244 = sub_1C151997C();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v248 = 0x2D617461642E6ALL;
        unint64_t v249 = 0xE700000000000000;
        uint64_t v228 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 8) + 24);
        sub_1C151811C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v159 = v248;
        unint64_t v160 = v249;
        uint64_t v161 = *(void *)(v229 + 16);
        unint64_t v162 = *(void *)(v229 + 24);
        swift_bridgeObjectRetain();
        uint64_t v163 = sub_1C151825C();
        uint64_t v248 = sub_1C039FAE0(v159, v160, v161, v162, v163, v164);
        unint64_t v249 = v165;
        uint64_t v250 = v166;
        sub_1BFCBF864(0, (unint64_t *)&unk_1EB8614E8, (uint64_t (*)(void))sub_1BFD98EEC, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E4FAA628]);
        v227 = v167;
        swift_allocObject();
        uint64_t v248 = sub_1C1519A2C();
        sub_1C1519C0C();
        swift_release();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v168 = v233;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v244 = sub_1C151997C();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v169 = v168;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v248 = 0x2D6C6F6F702E6ALL;
        unint64_t v249 = 0xE700000000000000;
        v170 = v206;
        uint64_t v171 = v222;
        sub_1C151811C();
        (*(void (**)(char *, uint64_t))(v205 + 8))(v170, v171);
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v172 = v248;
        unint64_t v173 = v249;
        uint64_t v174 = *(void *)(v229 + 16);
        unint64_t v175 = *(void *)(v229 + 24);
        swift_bridgeObjectRetain();
        uint64_t v248 = sub_1C151826C();
        sub_1C1518ACC();
        sub_1BFCBFA60(&qword_1EB85AB38, MEMORY[0x1E4FAAD90]);
        uint64_t v176 = v225;
        uint64_t v177 = sub_1C151533C();
        v179 = v124;
        uint64_t v225 = v176;
        if (v176)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1C0392E3C(v230);
          sub_1C0392E3C((uint64_t)v226);
          swift_release();
          (*(void (**)(char *, uint64_t))(v193 + 8))(v223, v194);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_36;
        }
        uint64_t v180 = v177;
        unint64_t v181 = v178;
        swift_release();
        uint64_t v248 = sub_1C039FAE0(v172, v173, v174, v175, v180, v181);
        unint64_t v249 = v182;
        uint64_t v250 = v183;
        swift_allocObject();
        uint64_t v248 = sub_1C1519A2C();
        sub_1C1519C0C();
        swift_release();
        swift_release();
        swift_release();
        sub_1C0392E3C(v230);
        sub_1C0392E3C((uint64_t)v226);
        (*(void (**)(char *, uint64_t))(v193 + 8))(v223, v194);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v184 = v236;
        swift_release();
        swift_release();
        v185 = v231;
        swift_release();
        swift_release();
        v186 = v238;
        swift_release();
        v187 = v169;
        uint64_t v188 = v240;
        swift_release();
        uint64_t v189 = v241;
        swift_release();
        uint64_t v190 = v243;
        swift_release();
        uint64_t v139 = v179;
        uint64_t v191 = v242;
        uint64_t result = swift_release();
        uint64_t v151 = v191;
        uint64_t v150 = v189;
        uint64_t v145 = v188;
        v146 = v186;
        CGRect v133 = v185;
        v152 = v187;
        v148 = v237;
        uint64_t v142 = v190;
        v147 = v184;
        uint64_t v137 = v235;
        uint64_t v149 = v234;
LABEL_29:
        v153 = v207;
        uint64_t *v207 = v151;
        v153[1] = v142;
        v153[2] = v150;
        v153[3] = v145;
        v153[4] = (uint64_t)v146;
        v153[5] = (uint64_t)v139;
        v153[6] = (uint64_t)v133;
        v153[7] = (uint64_t)v152;
        v153[8] = (uint64_t)v147;
        v153[9] = (uint64_t)v148;
        v154 = v239;
        v153[10] = v137;
        v153[11] = (uint64_t)v154;
        v153[12] = v149;
        return result;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_1C0392E3C(v230);
      sub_1C0392E3C((uint64_t)v226);
      (*(void (**)(char *, uint64_t))(v155 + 8))(v206, v222);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
LABEL_36:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
  }
}

unint64_t sub_1C038E30C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x64496E65736F6863;
      break;
    case 3:
      unint64_t result = 0x6449726F73727563;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 1953459315;
      break;
    case 6:
      unint64_t result = 0x746C75736572;
      break;
    case 7:
      unint64_t result = 0x6E6F73616572;
      break;
    case 8:
      unint64_t result = 0x73656C7572;
      break;
    case 9:
      unint64_t result = 0x65726F6373;
      break;
    case 10:
      unint64_t result = 0x64496769666E6F63;
      break;
    case 11:
      unint64_t result = 0x74614470756F7267;
      break;
    case 12:
      unint64_t result = 0x617461446C6F6F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C038E478(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFCBF864(0, &qword_1EA19A678, (uint64_t (*)(void))sub_1C0392BD8, (uint64_t)&type metadata for FeedGroupJournalEntity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0392BD8();
  sub_1C1520F0C();
  uint64_t v18 = *v3;
  char v17 = 0;
  sub_1BFCCCEC0(0, &qword_1EB85AC40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA610]);
  sub_1C0392D34();
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v16 = v3;
    uint64_t v18 = v3[1];
    char v17 = 1;
    sub_1C0091180();
    uint64_t v11 = v10;
    uint64_t v12 = sub_1BFCBFA60(&qword_1EA1999A8, (void (*)(uint64_t))sub_1C0091180);
    sub_1C152080C();
    v15[0] = v12;
    v15[1] = v11;
    uint64_t v13 = v16;
    uint64_t v18 = v16[2];
    char v17 = 2;
    sub_1C152080C();
    uint64_t v18 = v13[3];
    char v17 = 3;
    sub_1C152080C();
    uint64_t v18 = v13[4];
    char v17 = 4;
    sub_1BFCCCEC0(0, &qword_1EB864000, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790], MEMORY[0x1E4FAA610]);
    sub_1C0392DB8();
    sub_1C152080C();
    uint64_t v18 = v13[5];
    char v17 = 5;
    sub_1C03905E0();
    sub_1BFCBFA60(&qword_1EA19A688, (void (*)(uint64_t))sub_1C03905E0);
    sub_1C152080C();
    uint64_t v18 = v13[6];
    char v17 = 6;
    sub_1C152080C();
    uint64_t v18 = v13[7];
    char v17 = 7;
    sub_1C152080C();
    uint64_t v18 = v13[8];
    char v17 = 8;
    sub_1C0390690(0);
    sub_1BFCBFA60(&qword_1EA19A690, sub_1C0390690);
    sub_1C152080C();
    uint64_t v18 = v13[9];
    char v17 = 9;
    sub_1C03907FC();
    sub_1BFCBFA60(&qword_1EA19A698, (void (*)(uint64_t))sub_1C03907FC);
    sub_1C152080C();
    uint64_t v18 = v13[10];
    char v17 = 10;
    sub_1C152080C();
    uint64_t v18 = v16[11];
    char v17 = 11;
    sub_1C03908AC(0);
    sub_1BFCBFA60(&qword_1EA19A6A0, sub_1C03908AC);
    sub_1C152080C();
    uint64_t v18 = v16[12];
    char v17 = 12;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C038EA6C()
{
  return sub_1C038E30C(*v0);
}

uint64_t sub_1C038EA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0390938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C038EA9C(uint64_t a1)
{
  unint64_t v2 = sub_1C0392BD8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C038EAD8(uint64_t a1)
{
  unint64_t v2 = sub_1C0392BD8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C038EB14()
{
  return sub_1C15199BC();
}

uint64_t sub_1C038EC60()
{
  if (qword_1EA194450 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA2B4F38;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C038ECC8(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98D9C();
  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1C038ED14(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98D9C();
  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1C038ED60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98D9C();
  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

__n128 sub_1C038EDC4@<Q0>(uint64_t a1@<X8>)
{
  sub_1C038EFF8((uint64_t *)v5);
  long long v2 = v5[5];
  *(_OWORD *)(a1 + 64) = v5[4];
  *(_OWORD *)(a1 + 80) = v2;
  *(void *)(a1 + 96) = v6;
  long long v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 sub_1C038EE20@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0390E24(a1, v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1C038EE80(void *a1)
{
  return sub_1C038E478(a1);
}

uint64_t sub_1C038EE98(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1BFD98D9C();
  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1C038EEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98D9C();
  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1C038EF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1BFD98D9C();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1C038EFA4()
{
  unint64_t result = qword_1EA19A638;
  if (!qword_1EA19A638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A638);
  }
  return result;
}

uint64_t sub_1C038EFF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v109 = a1;
  sub_1C0390078(0, &qword_1EB864038, sub_1C038FF58);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v108 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v107 = (char *)&v83 - v4;
  sub_1C0390078(0, &qword_1EB864088, (void (*)(uint64_t))sub_1C03900CC);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v106 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int64_t v105 = (char *)&v83 - v8;
  sub_1C0390078(0, &qword_1EB864068, sub_1C039017C);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v102 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v101 = (char *)&v83 - v12;
  sub_1C0390078(0, &qword_1EB8640A8, (void (*)(uint64_t))sub_1C03903D0);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v97 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v96 = (char *)&v83 - v16;
  sub_1BFCCCF10(0, &qword_1EB864098, &qword_1EB864090, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790]);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v98 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v89 = (char *)&v83 - v20;
  sub_1C0390078(0, (unint64_t *)&qword_1EB85AC98, (void (*)(uint64_t))sub_1C009103C);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v113 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v83 - v24;
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  uint64_t v27 = MEMORY[0x1E4FAA770];
  sub_1BFCCCF10(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v83 - v32;
  char v88 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCCCEC0(0, &qword_1EB85ACA0, v26, v27, MEMORY[0x1E4FAA6B0]);
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v38 = v36 + 56;
  uint64_t v84 = v33;
  v37(v33, 1, 1, v34);
  long long v110 = v30;
  v37(v30, 1, 1, v35);
  uint64_t v87 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCCCEC0(0, &qword_1EB85ACE0, v26, v27, MEMORY[0x1E4FAA6B8]);
  uint64_t v40 = v39;
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v86 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCCCEC0(0, &qword_1EB85AC40, v26, v27, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v104 = sub_1C151996C();
  sub_1C009103C();
  uint64_t v42 = v41;
  uint64_t v93 = v41;
  uint64_t v43 = *(void *)(v41 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  uint64_t v94 = v44;
  unint64_t v95 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))(v43 + 56);
  uint64_t v90 = v25;
  v44(v25, 1, 1, v41);
  v44(v113, 1, 1, v42);
  sub_1C0390480();
  uint64_t v92 = v45;
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0091180();
  uint64_t v91 = v46;
  swift_allocObject();
  uint64_t v103 = sub_1C151996C();
  uint64_t v47 = v84;
  v37(v84, 1, 1, v35);
  uint64_t v48 = v110;
  v37(v110, 1, 1, v35);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v100 = sub_1C151996C();
  uint64_t v111 = v35;
  uint64_t v112 = v38;
  v37(v47, 1, 1, v35);
  v37(v48, 1, 1, v35);
  uint64_t v85 = v40;
  swift_allocObject();
  uint64_t v49 = v47;
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v99 = sub_1C151996C();
  uint64_t v50 = MEMORY[0x1E4FBB3D0];
  uint64_t v51 = MEMORY[0x1E4FAA790];
  sub_1BFCCCEC0(0, &qword_1EB864090, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790], v88);
  uint64_t v53 = v52;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
  v54(v89, 1, 1, v52);
  v54(v98, 1, 1, v53);
  sub_1BFCCCEC0(0, &qword_1EB8640D8, v50, v51, v87);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCCCEC0(0, &qword_1EB864000, v50, v51, v86);
  swift_allocObject();
  unint64_t v98 = (char *)sub_1C151996C();
  sub_1C03903D0();
  uint64_t v56 = v55;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56);
  v57(v96, 1, 1, v55);
  v57(v97, 1, 1, v56);
  sub_1C0390530();
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C03905E0();
  swift_allocObject();
  unint64_t v97 = (char *)sub_1C151996C();
  uint64_t v58 = v111;
  v37(v49, 1, 1, v111);
  uint64_t v59 = v110;
  v37(v110, 1, 1, v58);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v96 = (char *)sub_1C151996C();
  uint64_t v60 = v93;
  uint64_t v61 = v94;
  v94(v90, 1, 1, v93);
  v61(v113, 1, 1, v60);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v113 = (char *)sub_1C151996C();
  sub_1C039017C(0);
  uint64_t v63 = v62;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56);
  v64(v101, 1, 1, v62);
  v64(v102, 1, 1, v63);
  unint64_t v95 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B8];
  sub_1C03906B0(0, &qword_1EB8640C8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0390690(0);
  swift_allocObject();
  unint64_t v102 = (char *)sub_1C151996C();
  sub_1C03900CC();
  uint64_t v66 = v65;
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56);
  v67(v105, 1, 1, v65);
  v67(v106, 1, 1, v66);
  sub_1C039074C();
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C03907FC();
  swift_allocObject();
  uint64_t v106 = (char *)sub_1C151996C();
  uint64_t v68 = v111;
  v37(v49, 1, 1, v111);
  v37(v59, 1, 1, v68);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v69 = sub_1C151996C();
  sub_1C038FF58(0);
  uint64_t v71 = v70;
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
  uint64_t v73 = v107;
  v72(v107, 1, 1, v70);
  uint64_t v74 = v108;
  v72(v108, 1, 1, v71);
  sub_1C03908CC(0, &qword_1EB8640B8, v95);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C03908AC(0);
  swift_allocObject();
  uint64_t v75 = sub_1C151996C();
  v72(v73, 1, 1, v71);
  v72(v74, 1, 1, v71);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t result = sub_1C151996C();
  uint64_t v77 = v109;
  uint64_t v78 = v103;
  *uint64_t v109 = v104;
  v77[1] = v78;
  uint64_t v79 = v99;
  v77[2] = v100;
  v77[3] = v79;
  uint64_t v80 = v97;
  v77[4] = (uint64_t)v98;
  v77[5] = (uint64_t)v80;
  uint64_t v81 = v113;
  v77[6] = (uint64_t)v96;
  v77[7] = (uint64_t)v81;
  int v82 = v106;
  v77[8] = (uint64_t)v102;
  v77[9] = (uint64_t)v82;
  v77[10] = v69;
  v77[11] = v75;
  v77[12] = result;
  return result;
}

void sub_1C038FF58(uint64_t a1)
{
}

void sub_1C038FF78()
{
  if (!qword_1EB864020)
  {
    sub_1BFCBF864(255, (unint64_t *)&unk_1EB8614E8, (uint64_t (*)(void))sub_1BFD98EEC, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E4FAA628]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864020);
    }
  }
}

unint64_t sub_1C0390008()
{
  unint64_t result = qword_1EB864028;
  if (!qword_1EB864028)
  {
    sub_1C038FF78();
    sub_1BFCBF934();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864028);
  }
  return result;
}

void sub_1C0390078(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C03900CC()
{
  if (!qword_1EB864080)
  {
    uint64_t v0 = MEMORY[0x1E4FBB3D0];
    sub_1C006442C(255, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    sub_1C00643B4(&qword_1EB86B3B0, (unint64_t *)&qword_1EB8900F8, v0);
    unint64_t v1 = sub_1C1519BEC();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB864080);
    }
  }
}

void sub_1C039017C(uint64_t a1)
{
}

void sub_1C039019C()
{
  if (!qword_1EB864108)
  {
    sub_1C006442C(255, &qword_1EB86B040, (uint64_t)&type metadata for FeedGroupEmitterRuleOutputDescription, MEMORY[0x1E4FBB320]);
    sub_1C0390298(&qword_1EB86B050, (void (*)(void))sub_1C0390328);
    sub_1C0390298(&qword_1EB86B048, (void (*)(void))sub_1C039037C);
    unint64_t v0 = sub_1C1519D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864108);
    }
  }
}

uint64_t sub_1C0390298(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C006442C(255, &qword_1EB86B040, (uint64_t)&type metadata for FeedGroupEmitterRuleOutputDescription, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0390328()
{
  unint64_t result = qword_1EB865528;
  if (!qword_1EB865528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865528);
  }
  return result;
}

unint64_t sub_1C039037C()
{
  unint64_t result = qword_1EB865520;
  if (!qword_1EB865520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865520);
  }
  return result;
}

void sub_1C03903D0()
{
  if (!qword_1EB8640A0)
  {
    uint64_t v0 = MEMORY[0x1E4FBB550];
    sub_1C006442C(255, &qword_1EB87A090, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    sub_1C00643B4((unint64_t *)&unk_1EB86B400, &qword_1EB87A090, v0);
    unint64_t v1 = sub_1C1519BEC();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB8640A0);
    }
  }
}

void sub_1C0390480()
{
  if (!qword_1EB85ACE8)
  {
    uint64_t v0 = MEMORY[0x1E4FBB1A0];
    sub_1C006442C(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1C00643B4((unint64_t *)&qword_1EB85C2E8, (unint64_t *)&qword_1EB879C00, v0);
    unint64_t v1 = sub_1C1519C1C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB85ACE8);
    }
  }
}

void sub_1C0390530()
{
  if (!qword_1EB8640E8)
  {
    uint64_t v0 = MEMORY[0x1E4FBB550];
    sub_1C006442C(255, &qword_1EB87A090, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    sub_1C00643B4((unint64_t *)&unk_1EB86B400, &qword_1EB87A090, v0);
    unint64_t v1 = sub_1C1519C1C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB8640E8);
    }
  }
}

void sub_1C03905E0()
{
  if (!qword_1EB864010)
  {
    uint64_t v0 = MEMORY[0x1E4FBB550];
    sub_1C006442C(255, &qword_1EB87A090, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    sub_1C00643B4((unint64_t *)&unk_1EB86B400, &qword_1EB87A090, v0);
    unint64_t v1 = sub_1C151999C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB864010);
    }
  }
}

void sub_1C0390690(uint64_t a1)
{
}

void sub_1C03906B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C039019C();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1BFCBFA60(&qword_1EB864100, (void (*)(uint64_t))sub_1C039019C);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C039074C()
{
  if (!qword_1EB8640E0)
  {
    uint64_t v0 = MEMORY[0x1E4FBB3D0];
    sub_1C006442C(255, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    sub_1C00643B4(&qword_1EB86B3B0, (unint64_t *)&qword_1EB8900F8, v0);
    unint64_t v1 = sub_1C1519C1C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB8640E0);
    }
  }
}

void sub_1C03907FC()
{
  if (!qword_1EB864008)
  {
    uint64_t v0 = MEMORY[0x1E4FBB3D0];
    sub_1C006442C(255, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    sub_1C00643B4(&qword_1EB86B3B0, (unint64_t *)&qword_1EB8900F8, v0);
    unint64_t v1 = sub_1C151999C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB864008);
    }
  }
}

void sub_1C03908AC(uint64_t a1)
{
}

void sub_1C03908CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  if (!*a2)
  {
    sub_1C038FF78();
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C0390008();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C0390938(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64496E65736F6863 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449726F73727563 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160CDF0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1953459315 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73656C7572 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x64496769666E6F63 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x617461446C6F6F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_1C0390E24@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v149 = (void *)a1;
  char v114 = a2;
  sub_1BFCBF864(0, &qword_1EA19A640, (uint64_t (*)(void))sub_1C0392BD8, (uint64_t)&type metadata for FeedGroupJournalEntity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v116 = v2;
  uint64_t v115 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v138 = (char *)&v113 - v3;
  sub_1C0390078(0, &qword_1EB864038, sub_1C038FF58);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v136 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v135 = (char *)&v113 - v7;
  sub_1C0390078(0, &qword_1EB864088, (void (*)(uint64_t))sub_1C03900CC);
  MEMORY[0x1F4188790](v8 - 8);
  v140 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v134 = (char *)&v113 - v11;
  sub_1C0390078(0, &qword_1EB864068, sub_1C039017C);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v141 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  CGRect v133 = (char *)&v113 - v15;
  sub_1C0390078(0, &qword_1EB8640A8, (void (*)(uint64_t))sub_1C03903D0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v142 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  CGRect v132 = (char *)&v113 - v19;
  sub_1BFCCCF10(0, &qword_1EB864098, &qword_1EB864090, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v127 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  __int16 v125 = (char *)&v113 - v23;
  sub_1C0390078(0, (unint64_t *)&qword_1EB85AC98, (void (*)(uint64_t))sub_1C009103C);
  MEMORY[0x1F4188790](v24 - 8);
  v148 = (char *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v113 - v27;
  uint64_t v29 = MEMORY[0x1E4FBB1A0];
  uint64_t v30 = MEMORY[0x1E4FAA770];
  sub_1BFCCCF10(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v33 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v113 - v35;
  int v124 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCCCEC0(0, &qword_1EB85ACA0, v29, v30, MEMORY[0x1E4FAA6B0]);
  uint64_t v38 = v37;
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  uint64_t v150 = v39 + 56;
  uint64_t v145 = v36;
  v40(v36, 1, 1, v37);
  unint64_t v120 = v33;
  v40(v33, 1, 1, v38);
  uint64_t v123 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCCCEC0(0, &qword_1EB85ACE0, v29, v30, MEMORY[0x1E4FAA6B8]);
  uint64_t v42 = v41;
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v122 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCCCEC0(0, &qword_1EB85AC40, v29, v30, MEMORY[0x1E4FAA610]);
  uint64_t v44 = v43;
  swift_allocObject();
  uint64_t v119 = sub_1C151996C();
  sub_1C009103C();
  uint64_t v46 = v45;
  uint64_t v129 = v45;
  uint64_t v47 = *(void *)(v45 - 8);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
  CGRect v130 = v48;
  CGRect v131 = (char *)(v47 + 56);
  uint64_t v126 = v28;
  v48(v28, 1, 1, v45);
  v48(v148, 1, 1, v46);
  sub_1C0390480();
  uint64_t v128 = v49;
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0091180();
  uint64_t v143 = v50;
  swift_allocObject();
  uint64_t v118 = sub_1C151996C();
  uint64_t v51 = v145;
  uint64_t v52 = v38;
  v40(v145, 1, 1, v38);
  uint64_t v53 = v120;
  v40(v120, 1, 1, v52);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v137 = sub_1C151996C();
  uint64_t v146 = v52;
  v147 = v40;
  v40(v51, 1, 1, v52);
  v40(v53, 1, 1, v52);
  uint64_t v121 = v42;
  swift_allocObject();
  uint64_t v54 = v53;
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v117 = sub_1C151996C();
  uint64_t v55 = MEMORY[0x1E4FBB3D0];
  uint64_t v56 = MEMORY[0x1E4FAA790];
  sub_1BFCCCEC0(0, &qword_1EB864090, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790], v124);
  uint64_t v58 = v57;
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
  v59(v125, 1, 1, v57);
  v59(v127, 1, 1, v58);
  sub_1BFCCCEC0(0, &qword_1EB8640D8, v55, v56, v123);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCCCEC0(0, &qword_1EB864000, v55, v56, v122);
  __int16 v125 = v60;
  swift_allocObject();
  uint64_t v127 = (char *)sub_1C151996C();
  sub_1C03903D0();
  uint64_t v62 = v61;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
  v63(v132, 1, 1, v61);
  v63(v142, 1, 1, v62);
  sub_1C0390530();
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C03905E0();
  int v124 = v64;
  swift_allocObject();
  CGRect v132 = (char *)sub_1C151996C();
  uint64_t v66 = v145;
  uint64_t v65 = v146;
  uint64_t v67 = v147;
  v147(v145, 1, 1, v146);
  v67(v54, 1, 1, v65);
  swift_allocObject();
  sub_1C1519BDC();
  v144 = v44;
  swift_allocObject();
  uint64_t v142 = (char *)sub_1C151996C();
  uint64_t v68 = v129;
  uint64_t v69 = v130;
  v130(v126, 1, 1, v129);
  v69(v148, 1, 1, v68);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  v148 = (char *)sub_1C151996C();
  sub_1C039017C(0);
  uint64_t v71 = v70;
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
  v72(v133, 1, 1, v70);
  v72(v141, 1, 1, v71);
  uint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B8];
  sub_1C03906B0(0, &qword_1EB8640C8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0390690(0);
  CGRect v133 = v74;
  swift_allocObject();
  uint64_t v141 = (char *)sub_1C151996C();
  sub_1C03900CC();
  uint64_t v76 = v75;
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56);
  v77(v134, 1, 1, v75);
  v77(v140, 1, 1, v76);
  sub_1C039074C();
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C03907FC();
  uint64_t v134 = v78;
  swift_allocObject();
  v140 = (char *)sub_1C151996C();
  uint64_t v79 = v146;
  uint64_t v80 = v147;
  v147(v66, 1, 1, v146);
  v80(v54, 1, 1, v79);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v150 = sub_1C151996C();
  sub_1C038FF58(0);
  uint64_t v82 = v81;
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
  uint64_t v84 = v135;
  v83(v135, 1, 1, v81);
  uint64_t v85 = v136;
  v83(v136, 1, 1, v82);
  uint64_t v86 = v73;
  uint64_t v87 = v149;
  sub_1C03908CC(0, &qword_1EB8640B8, v86);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C03908AC(0);
  swift_allocObject();
  v147 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C151996C();
  v83(v84, 1, 1, v82);
  v83(v85, 1, 1, v82);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v146 = sub_1C151996C();
  __swift_project_boxed_opaque_existential_1(v87, v87[3]);
  sub_1C0392BD8();
  uint64_t v88 = v139;
  uint64_t v89 = v138;
  sub_1C1520EBC();
  if (v88)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    char v151 = 0;
    unint64_t v90 = sub_1C0392C2C();
    sub_1C15206EC();
    uint64_t v91 = v152;
    swift_retain();
    swift_release();
    char v151 = 1;
    uint64_t v92 = sub_1BFCBFA60(&qword_1EA199970, (void (*)(uint64_t))sub_1C0091180);
    sub_1C15206EC();
    uint64_t v139 = v92;
    uint64_t v145 = v91;
    uint64_t v93 = (char *)v90;
    uint64_t v94 = v152;
    swift_retain();
    swift_release();
    char v151 = 2;
    sub_1C15206EC();
    uint64_t v136 = v94;
    uint64_t v95 = (uint64_t)v152;
    swift_retain();
    swift_release();
    char v151 = 3;
    sub_1C15206EC();
    uint64_t v135 = v93;
    uint64_t v137 = v95;
    uint64_t v96 = v152;
    swift_retain();
    swift_release();
    char v151 = 4;
    sub_1C0392CB0();
    sub_1C15206EC();
    unint64_t v97 = v152;
    swift_retain();
    swift_release();
    char v151 = 5;
    sub_1BFCBFA60(&qword_1EA19A658, (void (*)(uint64_t))sub_1C03905E0);
    sub_1C15206EC();
    unint64_t v98 = v152;
    swift_retain();
    swift_release();
    char v151 = 6;
    sub_1C15206EC();
    CGRect v131 = v98;
    CGRect v132 = v152;
    swift_retain();
    swift_release();
    char v151 = 7;
    sub_1C15206EC();
    uint64_t v142 = v97;
    uint64_t v143 = v152;
    swift_retain();
    swift_release();
    char v151 = 8;
    sub_1BFCBFA60(&qword_1EA19A660, sub_1C0390690);
    sub_1C15206EC();
    uint64_t v99 = v143;
    uint64_t v139 = (uint64_t)v152;
    swift_retain();
    swift_release();
    char v151 = 9;
    sub_1BFCBFA60(&qword_1EA19A668, (void (*)(uint64_t))sub_1C03907FC);
    sub_1C15206EC();
    uint64_t v100 = v152;
    swift_retain();
    swift_release();
    char v151 = 10;
    sub_1C15206EC();
    v144 = v152;
    swift_retain();
    swift_release();
    char v151 = 11;
    sub_1BFCBFA60(&qword_1EA19A670, sub_1C03908AC);
    sub_1C15206EC();
    uint64_t v135 = v152;
    swift_retain();
    swift_release();
    char v151 = 12;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v89, v116);
    uint64_t v150 = (uint64_t)v152;
    swift_retain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v134 = v100;
    swift_release();
    swift_release();
    uint64_t v101 = v99;
    swift_release();
    unint64_t v102 = v132;
    swift_release();
    swift_release();
    uint64_t v103 = v142;
    swift_release();
    uint64_t v104 = v96;
    swift_release();
    uint64_t v105 = v137;
    swift_release();
    uint64_t v106 = v136;
    swift_release();
    uint64_t v107 = v145;
    uint64_t result = swift_release();
    uint64_t v109 = v114;
    *char v114 = v107;
    v109[1] = v106;
    v109[2] = v105;
    v109[3] = v104;
    long long v110 = v131;
    v109[4] = v103;
    v109[5] = v110;
    v109[6] = v102;
    v109[7] = v101;
    uint64_t v111 = v134;
    v109[8] = v139;
    v109[9] = v111;
    uint64_t v112 = v135;
    v109[10] = v144;
    v109[11] = v112;
    v109[12] = v150;
  }
  return result;
}

unint64_t sub_1C0392BD8()
{
  unint64_t result = qword_1EA19A648;
  if (!qword_1EA19A648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A648);
  }
  return result;
}

unint64_t sub_1C0392C2C()
{
  unint64_t result = qword_1EA199968;
  if (!qword_1EA199968)
  {
    sub_1BFCCCEC0(255, &qword_1EB85AC40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199968);
  }
  return result;
}

unint64_t sub_1C0392CB0()
{
  unint64_t result = qword_1EA19A650;
  if (!qword_1EA19A650)
  {
    sub_1BFCCCEC0(255, &qword_1EB864000, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A650);
  }
  return result;
}

unint64_t sub_1C0392D34()
{
  unint64_t result = qword_1EA1999A0;
  if (!qword_1EA1999A0)
  {
    sub_1BFCCCEC0(255, &qword_1EB85AC40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1999A0);
  }
  return result;
}

unint64_t sub_1C0392DB8()
{
  unint64_t result = qword_1EA19A680;
  if (!qword_1EA19A680)
  {
    sub_1BFCCCEC0(255, &qword_1EB864000, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAA790], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A680);
  }
  return result;
}

uint64_t sub_1C0392E3C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C0392E90()
{
  unint64_t result = qword_1EB886C60;
  if (!qword_1EB886C60)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB886C60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupJournalEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0392FB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupJournalEntity.CodingKeys()
{
  return &type metadata for FeedGroupJournalEntity.CodingKeys;
}

unint64_t sub_1C0392FF0()
{
  unint64_t result = qword_1EA19A6A8;
  if (!qword_1EA19A6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A6A8);
  }
  return result;
}

unint64_t sub_1C0393048()
{
  unint64_t result = qword_1EA19A6B0;
  if (!qword_1EA19A6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A6B0);
  }
  return result;
}

unint64_t sub_1C03930A0()
{
  unint64_t result = qword_1EA19A6B8;
  if (!qword_1EA19A6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A6B8);
  }
  return result;
}

id PuzzleBarButtonItem.barButtonItem.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t PuzzleBarButtonItem.toolbarItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleBarButtonItem(0) + 24);
  return sub_1C0393160(v3, a1);
}

uint64_t type metadata accessor for PuzzleBarButtonItem(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA19A6C8);
}

uint64_t sub_1C0393160(uint64_t a1, uint64_t a2)
{
  sub_1C03931C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C03931C4()
{
  if (!qword_1EA19A6C0)
  {
    type metadata accessor for PuzzleToolbarItem(255);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19A6C0);
    }
  }
}

uint64_t type metadata accessor for PuzzleToolbarItem(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EA19A6D8);
}

uint64_t PuzzleBarButtonItem.iconThemeInverted.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PuzzleBarButtonItem(0) + 28));
}

uint64_t PuzzleBarButtonItem.init(identifier:barButtonItem:toolbarItem:iconThemeInverted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  uint64_t v9 = type metadata accessor for PuzzleBarButtonItem(0);
  uint64_t result = sub_1C03932BC(a4, (uint64_t)a6 + *(int *)(v9 + 24));
  *((unsigned char *)a6 + *(int *)(v9 + 28)) = a5;
  return result;
}

uint64_t sub_1C03932BC(uint64_t a1, uint64_t a2)
{
  sub_1C03931C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PuzzleToolbarItem.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleToolbarItem.template.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleToolbarItem(0) + 20);
  uint64_t v4 = sub_1C151B2FC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id PuzzleToolbarItem.toolbarItemType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleToolbarItem(0) + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = (void *)v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = (uint64_t)v5;
  a1[2] = v6;
  return sub_1C0393418(v4, v5);
}

id sub_1C0393418(uint64_t a1, void *a2)
{
  if (a1 < 0)
  {
    swift_retain();
    return (id)swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    return a2;
  }
}

uint64_t PuzzleToolbarItem.handler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PuzzleToolbarItem(0) + 28));
  sub_1BFC648F8(v1);
  return v1;
}

__n128 PuzzleToolbarItem.init(identifier:template:toolbarItemType:handler:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  __n128 v18 = *a4;
  unint64_t v11 = a4[1].n128_u64[0];
  *a7 = a1;
  a7[1] = a2;
  uint64_t v12 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  uint64_t v13 = (char *)a7 + v12[5];
  uint64_t v14 = sub_1C151B2FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a3, v14);
  uint64_t v15 = (__n128 *)((char *)a7 + v12[6]);
  __n128 result = v18;
  *uint64_t v15 = v18;
  v15[1].n128_u64[0] = v11;
  uint64_t v17 = (void *)((char *)a7 + v12[7]);
  void *v17 = a5;
  v17[1] = a6;
  return result;
}

void *initializeBufferWithCopyOfBuffer for PuzzleBarButtonItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (void *)a2[2];
    a1[2] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    __dst = (void *)((char *)a1 + v9);
    uint64_t v10 = (void *)((char *)a2 + v9);
    unint64_t v11 = (int *)type metadata accessor for PuzzleToolbarItem(0);
    uint64_t v12 = *((void *)v11 - 1);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, int *))(v12 + 48);
    swift_bridgeObjectRetain();
    id v14 = v8;
    if (v13(v10, 1, v11))
    {
      sub_1C03931C4();
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = v10[1];
      void *__dst = *v10;
      __dst[1] = v17;
      uint64_t v18 = v11[5];
      uint64_t v33 = (char *)__dst + v18;
      uint64_t v34 = v12;
      uint64_t v32 = (char *)v10 + v18;
      uint64_t v19 = sub_1C151B2FC();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v33, v32, v19);
      uint64_t v21 = v11[6];
      uint64_t v22 = (void *)((char *)__dst + v21);
      uint64_t v23 = (void *)((char *)v10 + v21);
      uint64_t v24 = *v23;
      uint64_t v25 = (void *)v23[1];
      uint64_t v26 = v23[2];
      sub_1C0393418(*v23, v25);
      uint64_t *v22 = v24;
      v22[1] = (uint64_t)v25;
      uint64_t v22[2] = v26;
      uint64_t v27 = v11[7];
      uint64_t v28 = (void *)((char *)__dst + v27);
      uint64_t v29 = (void *)((char *)v10 + v27);
      if (*v29)
      {
        uint64_t v30 = v29[1];
        *uint64_t v28 = *v29;
        v28[1] = v30;
        swift_retain();
      }
      else
      {
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      }
      (*(void (**)(void *, void, uint64_t, int *))(v34 + 56))(__dst, 0, 1, v11);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

void destroy for PuzzleBarButtonItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  int v5 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + v5[5];
    uint64_t v7 = sub_1C151B2FC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    sub_1C03938F8(*(void *)(v4 + v5[6]), *(void **)(v4 + v5[6] + 8));
    if (*(void *)(v4 + v5[7]))
    {
      swift_release();
    }
  }
}

void sub_1C03938F8(uint64_t a1, void *a2)
{
  if (a1 < 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
}

void *initializeWithCopy for PuzzleBarButtonItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  a1[2] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    sub_1C03931C4();
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = v9[1];
    void *v8 = *v9;
    v8[1] = v15;
    uint64_t v16 = v10[5];
    uint64_t v30 = (char *)v9 + v16;
    uint64_t v31 = (char *)v8 + v16;
    uint64_t v17 = sub_1C151B2FC();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v31, v30, v17);
    uint64_t v19 = v10[6];
    uint64_t v20 = (void *)((char *)v8 + v19);
    uint64_t v21 = (void *)((char *)v9 + v19);
    uint64_t v22 = *v21;
    uint64_t v23 = (void *)v21[1];
    uint64_t v24 = v21[2];
    sub_1C0393418(*v21, v23);
    *uint64_t v20 = v22;
    v20[1] = (uint64_t)v23;
    void v20[2] = v24;
    uint64_t v25 = v10[7];
    uint64_t v26 = (void *)((char *)v8 + v25);
    uint64_t v27 = (void *)((char *)v9 + v25);
    if (*v27)
    {
      uint64_t v28 = v27[1];
      void *v26 = *v27;
      v26[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    }
    (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithCopy for PuzzleBarButtonItem(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      *uint64_t v10 = *v11;
      v10[1] = v11[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v31 = v12[5];
      uint64_t v32 = (char *)v10 + v31;
      uint64_t v33 = (char *)v11 + v31;
      uint64_t v34 = sub_1C151B2FC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
      uint64_t v35 = v12[6];
      uint64_t v36 = (void *)((char *)v10 + v35);
      uint64_t v37 = (void *)((char *)v11 + v35);
      uint64_t v38 = *v37;
      uint64_t v39 = (void *)v37[1];
      uint64_t v40 = v37[2];
      sub_1C0393418(*v37, v39);
      uint64_t v41 = *v36;
      uint64_t v42 = (void *)v36[1];
      *uint64_t v36 = v38;
      v36[1] = (uint64_t)v39;
      void v36[2] = v40;
      sub_1C03938F8(v41, v42);
      uint64_t v43 = v12[7];
      uint64_t v44 = (void *)((char *)v10 + v43);
      uint64_t v45 = (char *)v11 + v43;
      uint64_t v46 = *(void *)((char *)v11 + v43);
      if (*v44)
      {
        if (v46)
        {
          uint64_t v47 = *((void *)v45 + 1);
          *uint64_t v44 = v46;
          v44[1] = v47;
          swift_retain();
          swift_release();
          goto LABEL_13;
        }
        swift_release();
      }
      else if (v46)
      {
        uint64_t v49 = *((void *)v45 + 1);
        *uint64_t v44 = v46;
        v44[1] = v49;
        swift_retain();
        goto LABEL_13;
      }
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      goto LABEL_13;
    }
    sub_1C0393E8C((uint64_t)v10);
    goto LABEL_7;
  }
  if (v16)
  {
LABEL_7:
    sub_1C03931C4();
    memcpy(v10, v11, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  uint64_t v17 = v12[5];
  uint64_t v51 = (char *)v10 + v17;
  uint64_t v52 = a3;
  uint64_t v50 = (char *)v11 + v17;
  uint64_t v18 = sub_1C151B2FC();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v51, v50, v18);
  uint64_t v20 = v12[6];
  uint64_t v21 = (void *)((char *)v10 + v20);
  uint64_t v22 = (void *)((char *)v11 + v20);
  uint64_t v23 = *v22;
  uint64_t v24 = (void *)v22[1];
  uint64_t v25 = v22[2];
  sub_1C0393418(*v22, v24);
  *uint64_t v21 = v23;
  v21[1] = (uint64_t)v24;
  v21[2] = v25;
  uint64_t v26 = v12[7];
  uint64_t v27 = (void *)((char *)v10 + v26);
  uint64_t v28 = (void *)((char *)v11 + v26);
  if (*v28)
  {
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  a3 = v52;
  (*(void (**)(void *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_13:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C0393E8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleToolbarItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for PuzzleBarButtonItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  id v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    sub_1C03931C4();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    _OWORD *v7 = *v8;
    uint64_t v12 = v9[5];
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_1C151B2FC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    uint64_t v16 = v9[6];
    uint64_t v17 = (char *)v7 + v16;
    uint64_t v18 = (char *)v8 + v16;
    *((void *)v17 + 2) = *((void *)v18 + 2);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    uint64_t v19 = v9[7];
    uint64_t v20 = (void *)((char *)v7 + v19);
    uint64_t v21 = (uint64_t *)((char *)v8 + v19);
    uint64_t v22 = *v21;
    if (*v21)
    {
      uint64_t v23 = v21[1];
      *uint64_t v20 = v22;
      v20[1] = v23;
    }
    else
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for PuzzleBarButtonItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v29 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = v11[5];
      uint64_t v31 = (char *)v9 + v30;
      uint64_t v32 = (char *)v10 + v30;
      uint64_t v33 = sub_1C151B2FC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
      uint64_t v34 = v11[6];
      uint64_t v35 = (void *)((char *)v9 + v34);
      uint64_t v36 = (char *)v10 + v34;
      uint64_t v37 = *((void *)v36 + 2);
      uint64_t v38 = *v35;
      uint64_t v39 = (void *)v35[1];
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      v35[2] = v37;
      sub_1C03938F8(v38, v39);
      uint64_t v40 = v11[7];
      uint64_t v41 = (void *)((char *)v9 + v40);
      uint64_t v42 = (void *)((char *)v10 + v40);
      uint64_t v43 = *v42;
      if (*v41)
      {
        if (v43)
        {
          uint64_t v44 = v42[1];
          *uint64_t v41 = v43;
          v41[1] = v44;
          swift_release();
          goto LABEL_13;
        }
        swift_release();
      }
      else if (v43)
      {
        uint64_t v46 = v42[1];
        *uint64_t v41 = v43;
        v41[1] = v46;
        goto LABEL_13;
      }
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      goto LABEL_13;
    }
    sub_1C0393E8C((uint64_t)v9);
    goto LABEL_7;
  }
  if (v15)
  {
LABEL_7:
    sub_1C03931C4();
    memcpy(v9, v10, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v16 = v11[5];
  uint64_t v17 = (char *)v9 + v16;
  uint64_t v18 = (char *)v10 + v16;
  uint64_t v19 = sub_1C151B2FC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v11[6];
  uint64_t v21 = (char *)v9 + v20;
  uint64_t v22 = (char *)v10 + v20;
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  uint64_t v23 = v11[7];
  uint64_t v24 = (void *)((char *)v9 + v23);
  uint64_t v25 = (void *)((char *)v10 + v23);
  uint64_t v26 = *v25;
  if (*v25)
  {
    uint64_t v27 = v25[1];
    void *v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  }
  (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_13:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleBarButtonItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C039436C);
}

uint64_t sub_1C039436C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C03931C4();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleBarButtonItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0394430);
}

uint64_t sub_1C0394430(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C03931C4();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C03944D8()
{
  sub_1C03931C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void destroy for PuzzleToolbarItemType(uint64_t a1)
{
}

uint64_t *_s8NewsFeed21PuzzleToolbarItemTypeOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (void *)a2[1];
  uint64_t v5 = a2[2];
  sub_1C0393418(*a2, v4);
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for PuzzleToolbarItemType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (void *)a2[1];
  uint64_t v5 = a2[2];
  sub_1C0393418(*a2, v4);
  uint64_t v6 = *a1;
  uint64_t v7 = (void *)a1[1];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  sub_1C03938F8(v6, v7);
  return a1;
}

uint64_t *assignWithTake for PuzzleToolbarItemType(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v5 = (void *)a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1C03938F8(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleToolbarItemType()
{
  return &type metadata for PuzzleToolbarItemType;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleToolbarItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151B2FC();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    int v14 = (uint64_t *)((char *)v4 + v13);
    int v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = *v15;
    uint64_t v17 = (void *)v15[1];
    uint64_t v18 = v15[2];
    sub_1C0393418(*v15, v17);
    *int v14 = v16;
    v14[1] = (uint64_t)v17;
    long long v14[2] = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = (uint64_t *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    if (*v21)
    {
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
  }
  return v4;
}

void destroy for PuzzleToolbarItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C151B2FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1C03938F8(*(void *)(a1 + a2[6]), *(void **)(a1 + a2[6] + 8));
  if (*(void *)(a1 + a2[7]))
  {
    swift_release();
  }
}

void *initializeWithCopy for PuzzleToolbarItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151B2FC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  int v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = *v14;
  uint64_t v16 = (void *)v14[1];
  uint64_t v17 = v14[2];
  sub_1C0393418(*v14, v16);
  *uint64_t v13 = v15;
  v13[1] = (uint64_t)v16;
  void v13[2] = v17;
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  if (*v20)
  {
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  return a1;
}

void *assignWithCopy for PuzzleToolbarItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B2FC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = *v12;
  int v14 = (void *)v12[1];
  uint64_t v15 = v12[2];
  sub_1C0393418(*v12, v14);
  uint64_t v16 = *v11;
  uint64_t v17 = (void *)v11[1];
  *uint64_t v11 = v13;
  v11[1] = (uint64_t)v14;
  _OWORD v11[2] = v15;
  sub_1C03938F8(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = *(void *)((char *)a1 + v18);
  uint64_t v22 = *v20;
  if (!v21)
  {
    if (v22)
    {
      uint64_t v24 = v20[1];
      *uint64_t v19 = v22;
      v19[1] = v24;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    return a1;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v23 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v23;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for PuzzleToolbarItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B2FC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((void *)v12 + 2) = *((void *)v13 + 2);
  int v14 = (void *)((char *)a1 + v11);
  uint64_t v15 = (uint64_t *)((char *)a2 + v11);
  uint64_t v16 = *v15;
  if (*v15)
  {
    uint64_t v17 = v15[1];
    *int v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)int v14 = *(_OWORD *)v15;
  }
  return a1;
}

void *assignWithTake for PuzzleToolbarItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151B2FC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *((void *)v13 + 2);
  uint64_t v15 = *v12;
  uint64_t v16 = (void *)v12[1];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  _OWORD v12[2] = v14;
  sub_1C03938F8(v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a1 + v17);
  uint64_t v21 = *v19;
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = v19[1];
      *uint64_t v18 = v21;
      v18[1] = v23;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    return a1;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v22 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v22;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleToolbarItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0394CC8);
}

uint64_t sub_1C0394CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151B2FC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleToolbarItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0394D8C);
}

uint64_t sub_1C0394D8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151B2FC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0394E34()
{
  uint64_t result = sub_1C151B2FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static FeedItemFilter.apply(items:title:logger:filters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v45 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v42 = a1;
  uint64_t v47 = MEMORY[0x1C18C6830](a1, AssociatedTypeWitness);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v43 = a4;
  uint64_t v16 = sub_1C15198AC();
  os_log_type_t v17 = sub_1C151F38C();
  unint64_t v46 = a3;
  uint64_t v44 = a2;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v49.n128_u64[0] = v40;
    *(_DWORD *)uint64_t v18 = 136446722;
    uint64_t v41 = AssociatedTypeWitness;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1BFDA76EC(a2, a3, (uint64_t *)&v49);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2050;
    uint64_t v19 = type metadata accessor for FeedItemFilter();
    uint64_t v20 = MEMORY[0x1C18C6830](a5, v19);
    swift_bridgeObjectRelease();
    uint64_t v50 = v20;
    uint64_t v21 = v47;
    uint64_t AssociatedTypeWitness = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2050;
    uint64_t v50 = v21;
    sub_1C151FE1C();
    _os_log_impl(&dword_1BFC31000, v16, v17, "%{public}s applying %{public}ld filters to %{public}ld items.", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v40, -1, -1);
    MEMORY[0x1C18C9B00](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for FeedItemFilterResultEntry();
  uint64_t v50 = sub_1C151ECBC();
  v49.n128_u64[0] = a5;
  MEMORY[0x1F4188790](v50);
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  type metadata accessor for FeedItemFilter();
  uint64_t v22 = sub_1C151ED5C();
  uint64_t v23 = type metadata accessor for FeedItemFilterApplicator();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0396308, (uint64_t)v37, v22, v23, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v25);
  v49.n128_u64[0] = v42;
  MEMORY[0x1F4188790](v26);
  v37[0] = a6;
  v37[1] = a7;
  uint64_t v38 = v27;
  uint64_t v39 = &v50;
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v28 = sub_1C152023C();
  swift_bridgeObjectRelease();
  unint64_t v29 = v46;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1C15198AC();
  os_log_type_t v31 = sub_1C151F38C();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v49.n128_u64[0] = v42;
    *(_DWORD *)uint64_t v32 = 136446722;
    uint64_t v43 = a7;
    swift_bridgeObjectRetain();
    uint64_t v33 = v44;
    uint64_t v48 = sub_1BFDA76EC(v44, v29, (uint64_t *)&v49);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2050;
    uint64_t v48 = v47;
    sub_1C151FE1C();
    *(_WORD *)(v32 + 22) = 2050;
    uint64_t v34 = MEMORY[0x1C18C6830](v28, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    uint64_t v48 = v34;
    unint64_t v29 = v46;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v30, v31, "%{public}s filtered %{public}ld items to %{public}ld items.", (uint8_t *)v32, 0x20u);
    uint64_t v35 = v42;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v35, -1, -1);
    MEMORY[0x1C18C9B00](v32, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    uint64_t v33 = v44;
  }
  FeedItemFilterResultJournal.init(title:initialCount:entries:)(v33, v29, v47, v50, &v49);
  sub_1C12F77A0(v28, &v49, v45);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03954D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v22 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *(void (**)(char *, __n128))(v7 + 16);
  uint64_t v21 = v14;
  v13((char *)&v20 - v11, v10);
  swift_getEnumCaseMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
  uint64_t v15 = *(void *)(a1 + 24);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 24))(&v23, v2, v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  long long v20 = v23;
  uint64_t v16 = v22;
  ((void (*)(char *, uint64_t, uint64_t))v13)(v22, v21, a1);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  *(void *)(v18 + 24) = v15;
  *(_OWORD *)(v18 + 32) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v16, a1);
  return nullsub_1();
}

uint64_t sub_1C0395804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v38 = a3;
  uint64_t v44 = a1;
  uint64_t v48 = type metadata accessor for FeedItemFilterResultEntry();
  uint64_t v9 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = type metadata accessor for FeedItemFilter.Result();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v47 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v43 = (char *)&v34 - v19;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v20 = type metadata accessor for FeedItemFilterApplicator();
  uint64_t v21 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C18C6870](v21, v20))
  {
    uint64_t v34 = v11;
    uint64_t v35 = v14;
    uint64_t v36 = v9;
    uint64_t v37 = v5;
    uint64_t v22 = 0;
    uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v40 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v41 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v42 = v15;
    uint64_t v23 = a2 + 40;
    uint64_t v24 = a2;
    uint64_t v25 = v43;
    uint64_t v26 = v47;
    while (1)
    {
      char v27 = sub_1C151ECDC();
      uint64_t result = sub_1C151EC7C();
      if ((v27 & 1) == 0) {
        break;
      }
      uint64_t v29 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_11;
      }
      uint64_t v30 = *(uint64_t (**)(void))(v23 - 8);
      swift_retain();
      sub_1C099FE68(v44, v30);
      (*v40)(v26, v25, v15);
      if ((*v39)(v26, 1, v48) != 1)
      {
        swift_bridgeObjectRelease();
        os_log_type_t v31 = v35;
        uint64_t v32 = v36;
        uint64_t v33 = v48;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v47, v48);
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v31, v33);
        sub_1C151ED5C();
        sub_1C151ED1C();
        swift_release();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
        (*v41)(v25, v15);
        return 0;
      }
      (*v41)(v25, v15);
      swift_release();
      ++v22;
      v23 += 16;
      if (v29 == MEMORY[0x1C18C6870](v24, v20)) {
        goto LABEL_7;
      }
    }
    uint64_t result = sub_1C152016C();
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_1C0395BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v23 = type metadata accessor for FeedItemFilter();
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  type metadata accessor for FeedItemFilterMatcherApplicator();
  if (FeedItemFilterMatcherApplicator.matches(_:)())
  {
    uint64_t v15 = type metadata accessor for FeedItemFilterResultEntry();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = v25;
    return v16(v18, 1, 1, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v23);
    uint64_t v20 = v25;
    sub_1C0D428AC((uint64_t)v14, (uint64_t)v10, v25);
    uint64_t v21 = type metadata accessor for FeedItemFilterResultEntry();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  }
}

uint64_t sub_1C0395E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v23 = type metadata accessor for FeedItemFilter();
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  type metadata accessor for FeedItemFilterMatcherApplicator();
  if (FeedItemFilterMatcherApplicator.matches(_:)())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v23);
    uint64_t v15 = v25;
    sub_1C0D428AC((uint64_t)v14, (uint64_t)v10, v25);
    uint64_t v16 = type metadata accessor for FeedItemFilterResultEntry();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  }
  else
  {
    uint64_t v18 = type metadata accessor for FeedItemFilterResultEntry();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v20 = v18;
    uint64_t v21 = v25;
    return v19(v21, 1, 1, v20);
  }
}

uint64_t FeedItemFilter.wrap<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))(v14, v16, v12);
  swift_getEnumCaseMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
  FeedItemFilterMatcherType.wrap<A>(_:)(a1, a2, v7, a4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  type metadata accessor for FeedItemFilterWrapperMatcher();
  swift_getWitnessTable();
  type metadata accessor for FeedItemFilter();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0396308@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FeedItemFilter();
  uint64_t result = sub_1C03954D8(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for FeedItemFilter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C039636C(uint64_t a1)
{
  return sub_1C0395804(a1, v1[4], v1[5], v1[2], v1[3]) & 1;
}

uint64_t sub_1C0396394(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 4;
  uint64_t result = sub_1C151FE1C();
  *a1 = v5;
  return result;
}

uint64_t sub_1C03963F4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1C151FE1C();
  *a1 = v5;
  return result;
}

uint64_t sub_1C0396454@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void *sub_1C0396484(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = a2[v5];
    if (v10 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_18;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_18:
          int v13 = (v12 | ((v10 - 2) << (8 * v5))) + 2;
          unsigned int v14 = v12 + 2;
          if (v5 >= 4) {
            unsigned int v10 = v14;
          }
          else {
            unsigned int v10 = v13;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)v3 + v5) = v10 == 1;
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1C03965EC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_10;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_10:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  BOOL v10 = v5 == 1;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C039670C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_11;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_11:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    BOOL v14 = v9 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v8] = v14;
  }
  return a1;
}

uint64_t sub_1C0396874(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_10;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_10:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  BOOL v10 = v5 == 1;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C0396994(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_11;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_11:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    BOOL v14 = v9 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v8] = v14;
  }
  return a1;
}

uint64_t sub_1C0396AFC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_20:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_20;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_1C0396C24(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x1C0396DE0);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C0396E08(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1C0396EB4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C0396F84(uint64_t a1)
{
  return sub_1C0396FB8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))sub_1C0395E64);
}

uint64_t sub_1C0396FA0(uint64_t a1)
{
  return sub_1C0396FB8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))sub_1C0395BD0);
}

uint64_t sub_1C0396FB8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = *(void *)(type metadata accessor for FeedItemFilter() - 8);
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  int v9 = (char *)v2 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a2(a1, v7, v8, v9, v4, v5);
}

uint64_t type metadata accessor for FeedItemFilter.Result()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0397084()
{
  uint64_t result = type metadata accessor for FeedItemFilterResultEntry();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0397100(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = *(_DWORD *)(v8 + 80);
  uint64_t v12 = v10 + v11;
  size_t v13 = v9 + ((v10 + v11) & ~v11) + 1;
  uint64_t v14 = (*(unsigned char *)(v7 + 80) | *(unsigned char *)(v8 + 80));
  if (v14 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
    return a1;
  }
  uint64_t v18 = AssociatedTypeWitness;
  uint64_t v19 = ~v11;
  if (*(_DWORD *)(v7 + 84) < 0xFEu)
  {
    uint64_t v20 = (unsigned __int8 *)(((unint64_t)a2 + v12) & v19);
    if (v20[v9] <= 1u) {
      goto LABEL_14;
    }
LABEL_20:
    memcpy(a1, a2, v13);
    return a1;
  }
  if ((*(unsigned int (**)(uint64_t *))(v7 + 48))(a2)) {
    goto LABEL_20;
  }
  uint64_t v20 = (unsigned __int8 *)(((unint64_t)a2 + v12) & v19);
LABEL_14:
  uint64_t v21 = v20;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v18);
  unint64_t v22 = ((unint64_t)a1 + v12) & v19;
  unsigned int v23 = v21[v9];
  if (v23 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v24 = v9;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *v21;
        goto LABEL_24;
      case 2:
        int v25 = *(unsigned __int16 *)v21;
        goto LABEL_24;
      case 3:
        int v25 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        goto LABEL_24;
      case 4:
        int v25 = *(_DWORD *)v21;
LABEL_24:
        int v26 = (v25 | ((v23 - 2) << (8 * v9))) + 2;
        unsigned int v27 = v25 + 2;
        if (v9 >= 4) {
          unsigned int v23 = v27;
        }
        else {
          unsigned int v23 = v26;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(unint64_t))(v8 + 16))(v22);
  *(unsigned char *)(v22 + v9) = v23 == 1;
  return a1;
}

uint64_t sub_1C0397394(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = *(void *)(v3 - 8);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(result + 80);
  uint64_t v9 = ~v8;
  uint64_t v12 = result;
  if (*(_DWORD *)(v5 + 84) < 0xFEu)
  {
    uint64_t v10 = (v7 + v8 + a1) & v9;
    if (*(unsigned __int8 *)(v10 + *(void *)(result + 64)) > 1u) {
      return result;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 48))(a1);
    if (result) {
      return result;
    }
    uint64_t v10 = (v7 + v8 + a1) & v9;
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  return v11(v10, v3);
}

void *sub_1C039752C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  if (*(_DWORD *)(v5 + 84) < 0xFEu)
  {
    uint64_t v11 = (unsigned __int8 *)(((unint64_t)a2 + v10) & v9);
    if (v11[v7] <= 1u) {
      goto LABEL_5;
    }
LABEL_11:
    uint64_t v12 = a1;
    memcpy(a1, a2, v7 + (v10 & ~v8) + 1);
    return v12;
  }
  if ((*(unsigned int (**)(const void *))(v5 + 48))(a2)) {
    goto LABEL_11;
  }
  uint64_t v11 = (unsigned __int8 *)(((unint64_t)a2 + v10) & v9);
LABEL_5:
  uint64_t v12 = a1;
  (*(void (**)(void))(v5 + 16))();
  unint64_t v13 = ((unint64_t)a1 + v10) & v9;
  unsigned int v14 = v11[v7];
  if (v14 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *v11;
        goto LABEL_15;
      case 2:
        int v16 = *(unsigned __int16 *)v11;
        goto LABEL_15;
      case 3:
        int v16 = *(unsigned __int16 *)v11 | (v11[2] << 16);
        goto LABEL_15;
      case 4:
        int v16 = *(_DWORD *)v11;
LABEL_15:
        int v17 = (v16 | ((v14 - 2) << (8 * v7))) + 2;
        unsigned int v18 = v16 + 2;
        if (v7 >= 4) {
          unsigned int v14 = v18;
        }
        else {
          unsigned int v14 = v17;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v6 + 16))(((unint64_t)a1 + v10) & v9, v11, v4);
  *(unsigned char *)(v13 + v7) = v14 == 1;
  return v12;
}

void *sub_1C0397788(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ~v11;
  uint64_t v13 = *(void *)(v7 + 64) + v11;
  uint64_t v14 = v10 + (v13 & ~v11);
  size_t v15 = v14 + 1;
  uint64_t v39 = v10;
  if (v8 > 0xFD)
  {
    uint64_t v37 = v5;
    size_t __n = v14 + 1;
    uint64_t v36 = *(void *)(v5 - 8);
    int v16 = a1;
    int v17 = *(uint64_t (**)(void))(v7 + 48);
    unsigned int v18 = v16;
    int v19 = v17();
    int v20 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v17)(a2, v8, AssociatedTypeWitness);
    if (v19)
    {
      a1 = v18;
      uint64_t v9 = v36;
      uint64_t v5 = v37;
      size_t v15 = __n;
      if (!v20)
      {
        uint64_t v21 = (unsigned __int8 *)(((unint64_t)a1 + v13) & v12);
        unint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v12);
        goto LABEL_9;
      }
      goto LABEL_14;
    }
    a1 = v18;
    if (v20)
    {
      uint64_t v21 = (unsigned __int8 *)(((unint64_t)v18 + v13) & v12);
      uint64_t v9 = v36;
      uint64_t v5 = v37;
      goto LABEL_17;
    }
    uint64_t v21 = (unsigned __int8 *)(((unint64_t)v18 + v13) & v12);
    unint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v12);
    uint64_t v9 = v36;
    uint64_t v5 = v37;
    goto LABEL_20;
  }
  uint64_t v21 = (unsigned __int8 *)(((unint64_t)a1 + v13) & v12);
  unint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v12);
  unsigned int v23 = v22[v10];
  if (v21[v10] < 2u)
  {
    size_t __n = v15;
    if (v23 >= 2)
    {
LABEL_17:
      (*(void (**)(void *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v21, v5);
      uint64_t v28 = a1;
      uint64_t v29 = a2;
      size_t v15 = __n;
      goto LABEL_18;
    }
LABEL_20:
    (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
    if (v21 == v22) {
      return a1;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v21, v5);
    uint64_t v24 = v39;
    unsigned int v25 = v22[v39];
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v39 <= 3) {
        uint64_t v30 = v39;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
LABEL_26:
          int v31 = *v22;
          goto LABEL_30;
        case 2:
LABEL_27:
          int v31 = *(unsigned __int16 *)v22;
          goto LABEL_30;
        case 3:
LABEL_28:
          int v31 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_30;
        case 4:
LABEL_29:
          int v31 = *(_DWORD *)v22;
LABEL_30:
          int v32 = (v31 | (v26 << (8 * v24))) + 2;
          unsigned int v33 = v31 + 2;
          if (v24 >= 4) {
            unsigned int v25 = v33;
          }
          else {
            unsigned int v25 = v32;
          }
          break;
        default:
          goto LABEL_33;
      }
    }
    goto LABEL_33;
  }
  if (v23 > 1)
  {
LABEL_14:
    uint64_t v28 = a1;
    uint64_t v29 = a2;
LABEL_18:
    memcpy(v28, v29, v15);
    return a1;
  }
LABEL_9:
  (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
  uint64_t v24 = v39;
  unsigned int v25 = v22[v39];
  unsigned int v26 = v25 - 2;
  if (v25 >= 2)
  {
    if (v39 <= 3) {
      uint64_t v27 = v39;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        goto LABEL_26;
      case 2:
        goto LABEL_27;
      case 3:
        goto LABEL_28;
      case 4:
        goto LABEL_29;
      default:
        break;
    }
  }
LABEL_33:
  uint64_t v34 = v24;
  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(v21, v22, v5);
  v21[v34] = v25 == 1;
  return a1;
}

void *sub_1C0397B40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  if (*(_DWORD *)(v5 + 84) < 0xFEu)
  {
    uint64_t v11 = (unsigned __int8 *)(((unint64_t)a2 + v10) & v9);
    if (v11[v7] <= 1u) {
      goto LABEL_5;
    }
LABEL_11:
    uint64_t v12 = a1;
    memcpy(a1, a2, v7 + (v10 & ~v8) + 1);
    return v12;
  }
  if ((*(unsigned int (**)(const void *))(v5 + 48))(a2)) {
    goto LABEL_11;
  }
  uint64_t v11 = (unsigned __int8 *)(((unint64_t)a2 + v10) & v9);
LABEL_5:
  uint64_t v12 = a1;
  (*(void (**)(void))(v5 + 32))();
  unint64_t v13 = ((unint64_t)a1 + v10) & v9;
  unsigned int v14 = v11[v7];
  if (v14 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *v11;
        goto LABEL_15;
      case 2:
        int v16 = *(unsigned __int16 *)v11;
        goto LABEL_15;
      case 3:
        int v16 = *(unsigned __int16 *)v11 | (v11[2] << 16);
        goto LABEL_15;
      case 4:
        int v16 = *(_DWORD *)v11;
LABEL_15:
        int v17 = (v16 | ((v14 - 2) << (8 * v7))) + 2;
        unsigned int v18 = v16 + 2;
        if (v7 >= 4) {
          unsigned int v14 = v18;
        }
        else {
          unsigned int v14 = v17;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v6 + 32))(((unint64_t)a1 + v10) & v9, v11, v4);
  *(unsigned char *)(v13 + v7) = v14 == 1;
  return v12;
}

void *sub_1C0397D9C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ~v11;
  uint64_t v13 = *(void *)(v7 + 64) + v11;
  uint64_t v14 = v10 + (v13 & ~v11);
  size_t v15 = v14 + 1;
  uint64_t v39 = v10;
  if (v8 > 0xFD)
  {
    uint64_t v37 = v5;
    size_t __n = v14 + 1;
    uint64_t v36 = *(void *)(v5 - 8);
    int v16 = a1;
    int v17 = *(uint64_t (**)(void))(v7 + 48);
    unsigned int v18 = v16;
    int v19 = v17();
    int v20 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v17)(a2, v8, AssociatedTypeWitness);
    if (v19)
    {
      a1 = v18;
      uint64_t v9 = v36;
      uint64_t v5 = v37;
      size_t v15 = __n;
      if (!v20)
      {
        uint64_t v21 = (unsigned __int8 *)(((unint64_t)a1 + v13) & v12);
        unint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v12);
        goto LABEL_9;
      }
      goto LABEL_14;
    }
    a1 = v18;
    if (v20)
    {
      uint64_t v21 = (unsigned __int8 *)(((unint64_t)v18 + v13) & v12);
      uint64_t v9 = v36;
      uint64_t v5 = v37;
      goto LABEL_17;
    }
    uint64_t v21 = (unsigned __int8 *)(((unint64_t)v18 + v13) & v12);
    unint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v12);
    uint64_t v9 = v36;
    uint64_t v5 = v37;
    goto LABEL_20;
  }
  uint64_t v21 = (unsigned __int8 *)(((unint64_t)a1 + v13) & v12);
  unint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v12);
  unsigned int v23 = v22[v10];
  if (v21[v10] < 2u)
  {
    size_t __n = v15;
    if (v23 >= 2)
    {
LABEL_17:
      (*(void (**)(void *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v21, v5);
      uint64_t v28 = a1;
      uint64_t v29 = a2;
      size_t v15 = __n;
      goto LABEL_18;
    }
LABEL_20:
    (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
    if (v21 == v22) {
      return a1;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v21, v5);
    uint64_t v24 = v39;
    unsigned int v25 = v22[v39];
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v39 <= 3) {
        uint64_t v30 = v39;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
LABEL_26:
          int v31 = *v22;
          goto LABEL_30;
        case 2:
LABEL_27:
          int v31 = *(unsigned __int16 *)v22;
          goto LABEL_30;
        case 3:
LABEL_28:
          int v31 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_30;
        case 4:
LABEL_29:
          int v31 = *(_DWORD *)v22;
LABEL_30:
          int v32 = (v31 | (v26 << (8 * v24))) + 2;
          unsigned int v33 = v31 + 2;
          if (v24 >= 4) {
            unsigned int v25 = v33;
          }
          else {
            unsigned int v25 = v32;
          }
          break;
        default:
          goto LABEL_33;
      }
    }
    goto LABEL_33;
  }
  if (v23 > 1)
  {
LABEL_14:
    uint64_t v28 = a1;
    uint64_t v29 = a2;
LABEL_18:
    memcpy(v28, v29, v15);
    return a1;
  }
LABEL_9:
  (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
  uint64_t v24 = v39;
  unsigned int v25 = v22[v39];
  unsigned int v26 = v25 - 2;
  if (v25 >= 2)
  {
    if (v39 <= 3) {
      uint64_t v27 = v39;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        goto LABEL_26;
      case 2:
        goto LABEL_27;
      case 3:
        goto LABEL_28;
      case 4:
        goto LABEL_29;
      default:
        break;
    }
  }
LABEL_33:
  uint64_t v34 = v24;
  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(v21, v22, v5);
  v21[v34] = v25 == 1;
  return a1;
}

uint64_t sub_1C0398154(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  if (v8 <= 0xFE) {
    int v11 = 254;
  }
  else {
    int v11 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v12;
  if (v11 - 1 >= a2) {
    goto LABEL_25;
  }
  uint64_t v14 = v10 + (v13 & ~v12) + 1;
  char v15 = 8 * v14;
  if (v14 > 3) {
    goto LABEL_7;
  }
  unsigned int v18 = (((1 << v15) + a2 - v11) >> v15) + 1;
  if (HIWORD(v18))
  {
    int v16 = *(_DWORD *)((char *)a1 + v14);
    if (v16) {
      goto LABEL_15;
    }
LABEL_25:
    if (v8 < 0xFE)
    {
      unsigned int v23 = *(unsigned __int8 *)((((unint64_t)a1 + v13) & ~v12) + v10);
      if (v23 >= 2) {
        unsigned int v22 = (v23 ^ 0xFF) + 1;
      }
      else {
        unsigned int v22 = 0;
      }
    }
    else
    {
      unsigned int v22 = (*(uint64_t (**)(unsigned __int16 *))(v7 + 48))(a1);
    }
    if (v22 >= 2) {
      return v22 - 1;
    }
    else {
      return 0;
    }
  }
  if (v18 > 0xFF)
  {
    int v16 = *(unsigned __int16 *)((char *)a1 + v14);
    if (*(unsigned __int16 *)((char *)a1 + v14)) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
  if (v18 < 2) {
    goto LABEL_25;
  }
LABEL_7:
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_25;
  }
LABEL_15:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = v14;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return (v21 | v19) + v11;
}

void sub_1C0398394(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v11 = *(void *)(v8 + 64);
  if (v9 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v13 = v12 - 1;
  uint64_t v14 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v15 = v11 + v14;
  size_t v16 = v10 + 1;
  size_t v17 = ((v11 + v14) & ~v14) + v10 + 1;
  if (v12 - 1 >= a3)
  {
    int v18 = 0;
LABEL_13:
    if (v13 >= a2) {
      goto LABEL_21;
    }
    goto LABEL_14;
  }
  int v18 = 1;
  if (v17 > 3) {
    goto LABEL_13;
  }
  unsigned int v19 = (((1 << (8 * v17)) + a3 - v12) >> (8 * v17)) + 1;
  if (HIWORD(v19))
  {
    int v18 = 4;
    if (v13 >= a2) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v19 >= 0x100) {
      int v18 = 2;
    }
    else {
      int v18 = v19 > 1;
    }
    if (v13 >= a2)
    {
LABEL_21:
      switch(v18)
      {
        case 1:
          a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 3:
          goto LABEL_67;
        case 4:
          *(_DWORD *)&a1[v17] = 0;
          goto LABEL_25;
        default:
LABEL_25:
          if (a2)
          {
LABEL_26:
            if (a2 + 1 <= v12)
            {
              if (a2 != -1)
              {
                if (v9 < 0xFE)
                {
                  uint64_t v27 = (unsigned char *)((unint64_t)&a1[v15] & ~v14);
                  if (a2 + 1 > 0xFE)
                  {
                    if (v16 <= 3) {
                      int v28 = ~(-1 << (8 * v16));
                    }
                    else {
                      int v28 = -1;
                    }
                    if (v10 != -1)
                    {
                      int v29 = v28 & (a2 - 254);
                      if (v16 <= 3) {
                        int v30 = v10 + 1;
                      }
                      else {
                        int v30 = 4;
                      }
                      bzero(v27, v16);
                      switch(v30)
                      {
                        case 2:
                          *(_WORD *)uint64_t v27 = v29;
                          break;
                        case 3:
                          *(_WORD *)uint64_t v27 = v29;
                          void v27[2] = BYTE2(v29);
                          break;
                        case 4:
                          *(_DWORD *)uint64_t v27 = v29;
                          break;
                        default:
                          *uint64_t v27 = v29;
                          break;
                      }
                    }
                  }
                  else
                  {
                    v27[v10] = ~(_BYTE)a2;
                  }
                }
                else
                {
                  unsigned int v26 = *(void (**)(unsigned char *, void))(v8 + 56);
                  v26(a1, a2 + 1);
                }
              }
            }
            else
            {
              if (v17 <= 3) {
                int v23 = ~(-1 << (8 * v17));
              }
              else {
                int v23 = -1;
              }
              if (v17)
              {
                int v24 = v23 & (a2 - v12);
                if (v17 <= 3) {
                  int v25 = v17;
                }
                else {
                  int v25 = 4;
                }
                bzero(a1, v17);
                switch(v25)
                {
                  case 2:
                    *(_WORD *)a1 = v24;
                    break;
                  case 3:
                    *(_WORD *)a1 = v24;
                    a1[2] = BYTE2(v24);
                    break;
                  case 4:
                    *(_DWORD *)a1 = v24;
                    break;
                  default:
                    *a1 = v24;
                    break;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
LABEL_14:
  unsigned int v20 = a2 - v12;
  if (v17 < 4)
  {
    int v21 = (v20 >> (8 * v17)) + 1;
    if (v17)
    {
      int v22 = v20 & ~(-1 << (8 * v17));
      bzero(a1, v17);
      if (v17 == 3)
      {
        *(_WORD *)a1 = v22;
        a1[2] = BYTE2(v22);
      }
      else if (v17 == 2)
      {
        *(_WORD *)a1 = v22;
      }
      else
      {
        *a1 = v22;
      }
    }
  }
  else
  {
    bzero(a1, v17);
    *(_DWORD *)a1 = v20;
    int v21 = 1;
  }
  switch(v18)
  {
    case 1:
      a1[v17] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v17] = v21;
      break;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x1C0398774);
    case 4:
      *(_DWORD *)&a1[v17] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1C03987BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v4 + 84) < 0xFEu)
  {
    unsigned int v7 = *(unsigned __int8 *)(((*(void *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80))
                            + *(void *)(*(void *)(v3 - 8) + 64));
    if (v7 >= 2) {
      return (v7 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 48);
    return v5(a1);
  }
}

void sub_1C03988B4(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(v5 - 8) + 64);
  if (v8 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v12 = ~v11;
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v11;
  size_t v14 = v9 + 1;
  if (v10 >= a2)
  {
    if (a2)
    {
      if (v8 < 0xFE)
      {
        a1 = (unsigned char *)((unint64_t)&a1[v13] & v12);
        if (a2 > 0xFE)
        {
          if (v14 <= 3) {
            int v20 = ~(-1 << (8 * v14));
          }
          else {
            int v20 = -1;
          }
          if (v9 != -1)
          {
            int v17 = v20 & (a2 - 255);
            if (v14 <= 3) {
              int v21 = v9 + 1;
            }
            else {
              int v21 = 4;
            }
            bzero(a1, v14);
            switch(v21)
            {
              case 2:
LABEL_29:
                *(_WORD *)a1 = v17;
                break;
              case 3:
LABEL_30:
                *(_WORD *)a1 = v17;
                a1[2] = BYTE2(v17);
                break;
              case 4:
LABEL_31:
                *(_DWORD *)a1 = v17;
                break;
              default:
LABEL_13:
                *a1 = v17;
                break;
            }
          }
        }
        else
        {
          a1[v9] = -(char)a2;
        }
      }
      else
      {
        unsigned int v19 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
        v19(a1, a2);
      }
    }
  }
  else
  {
    size_t v15 = (v13 & v12) + v14;
    if (v15 <= 3) {
      int v16 = ~(-1 << (8 * v15));
    }
    else {
      int v16 = -1;
    }
    if (v15)
    {
      int v17 = v16 & (~v10 + a2);
      if (v15 <= 3) {
        int v18 = v15;
      }
      else {
        int v18 = 4;
      }
      bzero(a1, v15);
      switch(v18)
      {
        case 2:
          goto LABEL_29;
        case 3:
          goto LABEL_30;
        case 4:
          goto LABEL_31;
        default:
          goto LABEL_13;
      }
    }
  }
}

uint64_t FormatBoolean.value(context:)()
{
  sub_1C1517EFC();
  char v0 = FormatBoolean.value(contextLayoutOptions:)(v2);
  swift_release();
  return v0 & 1;
}

uint64_t sub_1C0398B90()
{
  return 0;
}

uint64_t sub_1C0398C44()
{
  return 0;
}

uint64_t FormatBoolean.description.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1C151E80C();
    sub_1C151E80C();
    return 0x286E6F6974706FLL;
  }
  else if (*(void *)v0)
  {
    return 1702195828;
  }
  else
  {
    return 0x65736C6166;
  }
}

uint64_t sub_1C0398D70()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1C151E80C();
    sub_1C151E80C();
    return 0x286E6F6974706FLL;
  }
  else if (*(void *)v0)
  {
    return 1702195828;
  }
  else
  {
    return 0x65736C6166;
  }
}

uint64_t FormatBoolean.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result & 1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_1C0398E14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void v81[3] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *a1;
  unint64_t v5 = (unint64_t)*a1 >> 60;
  if (((1 << v5) & 0x3EFE) != 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    sub_1C019FFF0(a3, v7);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return a3 & 1;
  }
  id v9 = v3;
  if (v5)
  {
    v81[0] = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    swift_retain_n();
    swift_retain();
    LOBYTE(a3) = sub_1C0398E14(v81, a2, a3);
    swift_release_n();
    swift_release();
    return a3 & 1;
  }
  LODWORD(a3) = *(unsigned __int8 *)(v4 + 16);
  if (!*(void *)(*(void *)(v4 + 24) + 16)) {
    return a3 & 1;
  }
  uint64_t v68 = *(void *)(v4 + 24);
  int v69 = a3;
  uint64_t v11 = *(void *)(*(void *)(a2 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v11 + 16) + 16))
  {
    v80[0] = *(void *)(a2 + 56);
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BFEF3B08(v12);
    sub_1BFEF3808(v13);
    uint64_t v77 = v80[0];
  }
  else
  {
    uint64_t v77 = sub_1BFEF3784();
  }
  uint64_t v71 = *(void *)(v68 + 16);
  if (!v71)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    LOBYTE(a3) = v69;
    return a3 & 1;
  }
  uint64_t v70 = v68 + 32;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
LABEL_14:
  uint64_t v15 = v70 + 24 * v14;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  int v18 = *(unsigned __int8 *)(v15 + 16);
  uint64_t v19 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1EB93C770;
  uint64_t v21 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  int v22 = (uint64_t *)(v20 + 16);
  swift_beginAccess();
  uint64_t v23 = *(void *)(v20 + 16);
  uint64_t v24 = *(void *)(v23 + 16);
  id v78 = v9;
  uint64_t v76 = v14;
  int v72 = v18;
  if (!v24)
  {
LABEL_20:
    uint64_t v73 = v21;
    swift_endAccess();
    v79[0] = v16;
    v79[1] = v17;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v79, v80);
    uint64_t v28 = v80[1];
    uint64_t v74 = v80[0];
    uint64_t v29 = v80[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v75 = v28;
    swift_bridgeObjectRetain();
    uint64_t v30 = v29;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v79[0] = *v22;
    uint64_t v32 = v79[0];
    uint64_t *v22 = 0x8000000000000000;
    uint64_t v33 = v17;
    unint64_t v35 = sub_1BFEF2D8C(v16, v17);
    uint64_t v36 = *(void *)(v32 + 16);
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_49:
      __break(1u);
    }
    char v39 = v34;
    if (*(void *)(v32 + 24) < v38)
    {
      sub_1BFFDF158(v38, isUniquelyReferenced_nonNull_native);
      unint64_t v40 = sub_1BFEF2D8C(v16, v33);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_51;
      }
      unint64_t v35 = v40;
      uint64_t v42 = (void *)v79[0];
      if ((v39 & 1) == 0) {
        goto LABEL_29;
      }
LABEL_27:
      uint64_t v43 = (void *)(v42[7] + 24 * v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v75;
      *uint64_t v43 = v74;
      v43[1] = v44;
      v43[2] = v30;
      uint64_t v17 = v33;
      uint64_t v27 = v30;
LABEL_31:
      uint64_t *v22 = (uint64_t)v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_32;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v42 = (void *)v79[0];
      if (v34) {
        goto LABEL_27;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v42 = (void *)v79[0];
      if (v39) {
        goto LABEL_27;
      }
    }
LABEL_29:
    v42[(v35 >> 6) + 8] |= 1 << v35;
    uint64_t v45 = (uint64_t *)(v42[6] + 16 * v35);
    *uint64_t v45 = v16;
    v45[1] = v33;
    uint64_t v17 = v33;
    uint64_t v46 = (void *)(v42[7] + 24 * v35);
    uint64_t v47 = v75;
    *uint64_t v46 = v74;
    v46[1] = v47;
    v46[2] = v30;
    uint64_t v48 = v42[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_49;
    }
    uint64_t v27 = v30;
    v42[2] = v50;
    swift_bridgeObjectRetain();
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_1BFEF2D8C(v16, v17);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 24 * v25 + 16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)(v27 + 16);
  if (!v51)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v74 = v27;
  uint64_t v75 = v17;
  uint64_t v52 = (uint64_t *)(v27 + 64);
  while (1)
  {
    uint64_t v53 = *(v52 - 1);
    uint64_t v54 = *v52;
    char v55 = *(unsigned char *)(v53 + 32);
    unsigned int v56 = v55 & 0x3F;
    unint64_t v57 = (unint64_t)((1 << v55) + 63) >> 6;
    size_t v58 = 8 * v57;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v56 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v60 = (char *)swift_slowAlloc();
    bzero(v60, v58);
    id v63 = v78;
    uint64_t v64 = sub_1BFEFB09C((uint64_t)v60, v57, v53, v77);
    id v78 = v63;
    if (v63) {
      goto LABEL_50;
    }
    uint64_t v62 = v64;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v60, -1, -1);
LABEL_42:
    char v65 = sub_1BFEFAE14(v62, v53);
    swift_release();
    if (v65)
    {
      char v66 = sub_1BFEFB810(v77, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v69 = v72;
LABEL_13:
        uint64_t v14 = v76 + 1;
        id v9 = v78;
        if (v76 + 1 == v71)
        {
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v52 += 5;
    if (!--v51) {
      goto LABEL_12;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v60 = (char *)&v68 - ((v58 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v60, v58);
  id v61 = v78;
  uint64_t v62 = sub_1BFEFB09C((uint64_t)v60, v57, v53, v77);
  swift_bridgeObjectRelease();
  id v78 = v61;
  if (!v61) {
    goto LABEL_42;
  }
  id v67 = v78;
  swift_willThrow();

  __break(1u);
LABEL_50:
  swift_bridgeObjectRelease();

  MEMORY[0x1C18C9B00](v60, -1, -1);
  __break(1u);
LABEL_51:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0399528()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v2 = *(void *)v0;
    uint64_t v1 = *(void *)(v0 + 8);
    sub_1BFE94AB4(*(void *)v0, v1, 1);
    uint64_t v3 = sub_1C00B857C((uint64_t)&unk_1F1B662A8);
    sub_1C0F49260(v2, v1, v3, 0);
    sub_1BFE94AD4(v2, v1, 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C03995C8()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v2 = *(void *)v0;
    uint64_t v1 = *(void *)(v0 + 8);
    sub_1BFE94AB4(*(void *)v0, v1, 1);
    uint64_t v3 = sub_1C00B857C((uint64_t)&unk_1F1B66398);
    sub_1C0F49260(v2, v1, v3, 0);
    sub_1BFE94AD4(v2, v1, 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void FormatBoolean.bind(binder:context:)()
{
  sub_1C00AB000();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v7 = v0;
    uint64_t v5 = *(void *)v0;
    uint64_t v6 = *(void *)(v7 + 8);
    uint64_t v8 = sub_1C00B857C((uint64_t)&unk_1F1B81770);
    sub_1C0EC63F8(v5, v6, v8, 1, (uint64_t)v4);
    if (!v1) {
      sub_1C0399974((uint64_t)v4, (uint64_t (*)(void))sub_1C00AB000);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1C0399754()
{
  sub_1C00AB000();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v7 = v0;
    uint64_t v5 = *(void *)v0;
    uint64_t v6 = *(void *)(v7 + 8);
    uint64_t v8 = sub_1C00B857C((uint64_t)&unk_1F1B6D170);
    sub_1C0EC63F8(v5, v6, v8, 1, (uint64_t)v4);
    if (!v1) {
      sub_1C0399974((uint64_t)v4, (uint64_t (*)(void))sub_1C00AB000);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t _s8NewsFeed13FormatBooleanO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      sub_1BFE94AD4(*(void *)a1, v2, 0);
      sub_1BFE94AD4(v5, v6, 0);
      char v9 = ((v3 & 1) == 0) ^ v5;
      return v9 & 1;
    }
LABEL_11:
    sub_1BFE94AB4(v5, v6, v7);
    sub_1BFE94AD4(v3, v2, v4);
    sub_1BFE94AD4(v5, v6, v7);
    char v9 = 0;
    return v9 & 1;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v3 == v5 && v2 == v6) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1C1520A9C();
  }
  sub_1BFE94AB4(v5, v6, 1);
  sub_1BFE94AB4(v3, v2, 1);
  sub_1BFE94AD4(v3, v2, 1);
  sub_1BFE94AD4(v5, v6, 1);
  return v9 & 1;
}

uint64_t sub_1C039996C()
{
  return sub_1C0398C44();
}

uint64_t sub_1C0399974(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C03999D4()
{
  return sub_1C0398B90();
}

unint64_t sub_1C03999DC(uint64_t a1)
{
  unint64_t result = sub_1C0399A04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0399A04()
{
  unint64_t result = qword_1EA19A7E8;
  if (!qword_1EA19A7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A7E8);
  }
  return result;
}

unint64_t sub_1C0399A58(void *a1)
{
  a1[1] = sub_1BFFC82FC();
  a1[2] = sub_1BFFB2AC8();
  unint64_t result = sub_1C0399A90();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0399A90()
{
  unint64_t result = qword_1EA19A7F0;
  if (!qword_1EA19A7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A7F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBoolean()
{
  return &type metadata for FormatBoolean;
}

uint64_t FeedPuzzleRankProgress.rawState.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  uint64_t v5 = *MEMORY[0x1E4FAC010];
  uint64_t v6 = sub_1C151A7DC();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(a1, v5, v6);
  return swift_bridgeObjectRetain();
}

uint64_t FeedPuzzleRankProgress.rankText.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FeedPuzzleRankProgress.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C0399BE4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  uint64_t v5 = *MEMORY[0x1E4FAC010];
  uint64_t v6 = sub_1C151A7DC();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(a1, v5, v6);
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FormatNodeCacheKey()
{
  return &type metadata for FormatNodeCacheKey;
}

uint64_t sub_1C0399C80()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0399CE4()
{
  return sub_1C1520DDC();
}

uint64_t sub_1C0399D1C()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0399D80()
{
  unint64_t result = qword_1EB87EB98;
  if (!qword_1EB87EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EB98);
  }
  return result;
}

uint64_t FormatViewNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatViewNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatViewNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatViewNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatViewNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 112);
}

unint64_t FormatViewNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 120);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatViewNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatViewNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatViewNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 152);
  *(void *)a1 = *(void *)(v1 + 144);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatViewNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v25 = swift_allocObject();
  FormatViewNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  return v25;
}

void sub_1C0399F9C(uint64_t a1)
{
}

unint64_t sub_1C0399FD0()
{
  unint64_t result = qword_1EB879680;
  if (!qword_1EB879680)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB879680);
  }
  return result;
}

unint64_t sub_1C039A028(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x656C797473;
      break;
    case 5:
      unint64_t result = 0x676E697A69736572;
      break;
    case 6:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 7:
      unint64_t result = 0x696C696269736976;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C039A1AC()
{
  return sub_1C039A028(*v0);
}

uint64_t sub_1C039A1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C039B50C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C039A1DC(uint64_t a1)
{
  unint64_t v2 = sub_1C039B014();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C039A218(uint64_t a1)
{
  unint64_t v2 = sub_1C039B014();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatViewNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C039B068(0, &qword_1EA19A7F8, (uint64_t (*)(void))sub_1C039B014, (uint64_t)&type metadata for FormatViewNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C039B014();
  sub_1C1520F0C();
  LOBYTE(v13[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    char v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C418(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 96);
    char v14 = 4;
    type metadata accessor for FormatViewNodeStyle();
    sub_1BFE4C418(&qword_1EB866978, 255, (void (*)(uint64_t))type metadata accessor for FormatViewNodeStyle);
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 104);
    char v14 = 5;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v13[0]) = 6;
    sub_1C15207FC();
    *(void *)&v13[0] = *(void *)(v3 + 120);
    char v14 = 7;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v13[0]) = 8;
    sub_1C15207DC();
    *(void *)&v13[0] = *(void *)(v3 + 136);
    char v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C418(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    char v11 = *(unsigned char *)(v3 + 152);
    *(void *)&v13[0] = *(void *)(v3 + 144);
    BYTE8(v13[0]) = v11;
    char v14 = 10;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 160);
    char v14 = 11;
    sub_1C039B068(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C039B0D0(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatViewNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatViewNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatViewNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C039B068(0, &qword_1EA19A808, (uint64_t (*)(void))sub_1C039B014, (uint64_t)&type metadata for FormatViewNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C039B014();
  uint64_t v17 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v15;
    LOBYTE(v18) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v18) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v18) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v20 = 3;
    sub_1BFE4C418(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v19;
    *(_OWORD *)(v1 + 64) = v18;
    *(_OWORD *)(v1 + 80) = v12;
    type metadata accessor for FormatViewNodeStyle();
    char v20 = 4;
    sub_1BFE4C418(&qword_1EB889208, 255, (void (*)(uint64_t))type metadata accessor for FormatViewNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 96) = v18;
    char v20 = 5;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 104) = v18;
    LOBYTE(v18) = 6;
    *(void *)(v1 + 112) = sub_1C15206DC();
    char v20 = 7;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 120) = v18;
    LOBYTE(v18) = 8;
    *(unsigned char *)(v1 + 128) = sub_1C15206AC() & 1;
    type metadata accessor for FormatContextLayoutOptions();
    char v20 = 9;
    sub_1BFE4C418(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 136) = v18;
    char v20 = 10;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v13 = BYTE8(v18);
    *(void *)(v1 + 144) = v18;
    *(unsigned char *)(v1 + 152) = v13;
    sub_1C039B068(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v20 = 11;
    sub_1C039B0D0(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v16);
    *(void *)(v1 + 160) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1C039AEE0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C039AEEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatViewNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C039AF44(void *a1)
{
  return FormatViewNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C039AF68(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C418(&qword_1EA19A848, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
  return sub_1C151798C();
}

unint64_t sub_1C039B014()
{
  unint64_t result = qword_1EA19A800;
  if (!qword_1EA19A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A800);
  }
  return result;
}

void sub_1C039B068(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C039B0D0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C039B068(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C039B174(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C418(&qword_1EA19A810, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
}

uint64_t sub_1C039B1BC(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C418(&qword_1EA19A818, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
}

uint64_t sub_1C039B204(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C418(&qword_1EA19A820, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
}

uint64_t sub_1C039B24C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C418(&qword_1EA19A828, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
}

uint64_t method lookup function for FormatViewNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatViewNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatViewNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatViewNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for FormatViewNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C039B3CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatViewNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatViewNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C039B408()
{
  unint64_t result = qword_1EA19A830;
  if (!qword_1EA19A830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A830);
  }
  return result;
}

unint64_t sub_1C039B460()
{
  unint64_t result = qword_1EA19A838;
  if (!qword_1EA19A838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A838);
  }
  return result;
}

unint64_t sub_1C039B4B8()
{
  unint64_t result = qword_1EA19A840;
  if (!qword_1EA19A840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A840);
  }
  return result;
}

uint64_t sub_1C039B50C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t SportsDataVisualizationRequest.tagIds.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  if (!*(unsigned char *)(v0 + 24)) {
    return SportsDataVisualizationRecentRequest.tagIds.getter();
  }
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    sub_1BFEF9A78();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = v4;
    *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
    uint64_t v7 = *(void **)(v2 + 16);
    uint64_t v6 = *(void *)(v2 + 24);
    if (*(unsigned char *)(v2 + 32))
    {
      *(void *)(v4 + 32) = v7;
      *(void *)(v4 + 40) = v6;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1C0254D40(v2, v1, v3, 1);
      sub_1C0254DD8((uint64_t)v7, v6, 0);
      id v13 = objc_msgSend(v7, sel_identifier);
      uint64_t v14 = sub_1C151E62C();
      uint64_t v16 = v15;

      sub_1C0254D20((uint64_t)v7, v6, 0);
      *(void *)(v5 + 32) = v14;
      *(void *)(v5 + 40) = v16;
      sub_1C0254C7C(v2, v1, v3, 1);
    }
  }
  else
  {
    sub_1BFEF9A78();
    uint64_t v8 = swift_allocObject();
    uint64_t v5 = v8;
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    if (v3)
    {
      *(void *)(v8 + 32) = v2;
      *(void *)(v8 + 40) = v1;
      sub_1C0254DD8(v2, v1, 1);
    }
    else
    {
      sub_1C0254DD8(v2, v1, 0);
      sub_1C0254DD8(v2, v1, 0);
      id v9 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      sub_1C0254C7C(v2, v1, v3, 2);
      sub_1C0254C7C(v2, v1, v3, 2);
      *(void *)(v5 + 32) = v10;
      *(void *)(v5 + 40) = v12;
      sub_1C0254C7C(v2, v1, v3, 2);
    }
  }
  return v5;
}

uint64_t SportsDataVisualizationRequest.fetchType.getter()
{
  uint64_t v1 = 5000257;
  if (*(unsigned char *)(v0 + 24) != 1) {
    uint64_t v1 = 0x544E455645;
  }
  if (*(unsigned char *)(v0 + 24)) {
    return v1;
  }
  else {
    return 0x544E45434552;
  }
}

BOOL SportsDataVisualizationRequest.isEventRequest.getter()
{
  return *(unsigned char *)(v0 + 24) == 2;
}

uint64_t SportsDataVisualizationRequest.hash(into:)()
{
  unint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24))
  {
    if (*(unsigned char *)(v0 + 24) == 1)
    {
      sub_1C1520DCC();
      uint64_t v4 = *(void **)(v2 + 16);
      uint64_t v5 = *(void *)(v2 + 24);
      char v6 = *(unsigned char *)(v2 + 32);
      sub_1C0254D40(v2, v1, v3, 1);
      if (v6)
      {
        sub_1C0254DD8((uint64_t)v4, v5, 1);
      }
      else
      {
        sub_1C0254DD8((uint64_t)v4, v5, 0);
        id v9 = objc_msgSend(v4, sel_identifier);
        sub_1C151E62C();

        sub_1C0254D20((uint64_t)v4, v5, 0);
      }
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      sub_1C1520DDC();
      uint64_t v10 = v2;
      uint64_t v11 = v1;
      char v12 = v3;
      char v13 = 1;
    }
    else
    {
      sub_1C1520DCC();
      if (v3)
      {
        sub_1C0254DD8(v2, v1, 1);
        sub_1C0254DD8(v2, v1, 1);
      }
      else
      {
        sub_1C0254DD8(v2, v1, 0);
        sub_1C0254DD8(v2, v1, 0);
        id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
        sub_1C151E62C();

        sub_1C0254C7C(v2, v1, v3, 2);
        sub_1C0254C7C(v2, v1, v3, 2);
      }
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t v10 = v2;
      uint64_t v11 = v1;
      char v12 = v3;
      char v13 = 2;
    }
    return sub_1C0254C7C(v10, v11, v12, v13);
  }
  sub_1C1520DCC();
  if (v1)
  {
    if (v2 >> 62)
    {
      uint64_t v27 = swift_bridgeObjectRetain();
      sub_1C0254D40(v27, v1, v3, 0);
      uint64_t v14 = v3;
      uint64_t v15 = sub_1C15204BC();
      if (v15) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v14 = v3;
      uint64_t v15 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_1C0254D40(v16, v1, v14, 0);
      if (v15)
      {
LABEL_13:
        uint64_t v30 = v14;
        uint64_t v31 = v1;
        unint64_t v32 = MEMORY[0x1E4FBC860];
        uint64_t result = sub_1BFF661B8(0, v15 & ~(v15 >> 63), 0);
        if (v15 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v18 = 0;
        unint64_t v7 = v32;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
          {
            long long v19 = (void *)MEMORY[0x1C18C7CB0](v18, v2);
          }
          else
          {
            long long v19 = *(void **)(v2 + 8 * v18 + 32);
            swift_unknownObjectRetain();
          }
          id v20 = objc_msgSend(v19, sel_identifier, v30);
          uint64_t v21 = sub_1C151E62C();
          uint64_t v23 = v22;
          swift_unknownObjectRelease();

          unint64_t v25 = *(void *)(v32 + 16);
          unint64_t v24 = *(void *)(v32 + 24);
          if (v25 >= v24 >> 1) {
            sub_1BFF661B8(v24 > 1, v25 + 1, 1);
          }
          ++v18;
          *(void *)(v32 + 16) = v25 + 1;
          unint64_t v26 = v32 + 16 * v25;
          *(void *)(v26 + 32) = v21;
          *(void *)(v26 + 40) = v23;
        }
        while (v15 != v18);
        swift_bridgeObjectRelease();
        sub_1C0254C7C(v2, v31, v30, 0);
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C0254C7C(v2, v1, v14, 0);
    unint64_t v7 = MEMORY[0x1E4FBC860];
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = v2;
LABEL_29:
  sub_1C1520DCC();
  uint64_t v28 = *(void *)(v7 + 16);
  if (v28)
  {
    unint64_t v29 = v7 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      v29 += 16;
      --v28;
    }
    while (v28);
  }
  swift_bridgeObjectRelease();
  return sub_1C1520DDC();
}

uint64_t SportsDataVisualizationRequest.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C039C0E8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C039C148()
{
  return sub_1C1520E0C();
}

uint64_t _s8NewsFeed30SportsDataVisualizationRequestO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24))
    {
      uint64_t v13 = *(void *)(a2 + 16);
      uint64_t v14 = v3;
      LOWORD(v15) = v2 & 0x101;
      uint64_t v16 = v4;
      uint64_t v11 = v7;
      LOWORD(v12) = v6 & 0x101;
      sub_1C0254D40(v7, v6, v8, 0);
      sub_1C0254D40(v3, v2, v4, 0);
      sub_1C0254D40(v3, v2, v4, 0);
      sub_1C0254D40(v7, v6, v8, 0);
      int v9 = _s8NewsFeed36SportsDataVisualizationRecentRequestV2eeoiySbAC_ACtFZ_0((uint64_t)&v14, (uint64_t)&v11);
      sub_1C0254C7C(v3, v2, v4, 0);
      sub_1C0254C7C(v7, v6, v8, 0);
      sub_1C0254C7C(v7, v6, v8, 0);
      sub_1C0254C7C(v3, v2, v4, 0);
      return v9 & 1;
    }
LABEL_9:
    sub_1C0254D40(*(void *)a1, v2, v4, v5);
    sub_1C0254D40(v7, v6, v8, v9);
    sub_1C0254C7C(v3, v2, v4, v5);
    sub_1C0254C7C(v7, v6, v8, v9);
    LOBYTE(v9) = 0;
    return v9 & 1;
  }
  if (v5 != 1)
  {
    if (v9 == 2)
    {
      uint64_t v14 = *(void *)a1;
      uint64_t v15 = v2;
      LOBYTE(v16) = v4 & 1;
      uint64_t v11 = v7;
      uint64_t v12 = v6;
      LOBYTE(v13) = v8 & 1;
      sub_1C0254D40(v7, v6, v8, 2);
      sub_1C0254D40(v3, v2, v4, 2);
      sub_1C0254D40(v3, v2, v4, 2);
      sub_1C0254D40(v7, v6, v8, 2);
      LOBYTE(v9) = _s8NewsFeed35SportsDataVisualizationEventRequestV2eeoiySbAC_ACtFZ_0((uint64_t)&v14, (uint64_t)&v11);
      sub_1C0254C7C(v3, v2, v4, 2);
      sub_1C0254C7C(v7, v6, v8, 2);
      sub_1C0254C7C(v7, v6, v8, 2);
      sub_1C0254C7C(v3, v2, v4, 2);
      return v9 & 1;
    }
    goto LABEL_9;
  }
  if (v9 != 1) {
    goto LABEL_9;
  }
  sub_1C0254D40(*(void *)a1, v2, v4, 1);
  sub_1C0254D40(v7, v6, v8, 1);
  LOBYTE(v9) = _s8NewsFeed33SportsDataVisualizationAllRequestC2eeoiySbAC_ACtFZ_0(v3, v7);
  sub_1C0254C7C(v3, v2, v4, 1);
  sub_1C0254C7C(v7, v6, v8, 1);
  return v9 & 1;
}

uint64_t destroy for SportsDataVisualizationRequest(uint64_t a1)
{
  return sub_1C0254C7C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for SportsDataVisualizationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0254D40(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0254D40(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C0254C7C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C0254C7C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationRequest()
{
  return &type metadata for SportsDataVisualizationRequest;
}

uint64_t static FormatCustomItemBinding.URL.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1C039C5C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C039C628()
{
  return sub_1C151E77C();
}

uint64_t sub_1C039C64C()
{
  return sub_1C1520E0C();
}

void sub_1C039C6A8(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B390;
}

uint64_t FormatCustomItemBinding.URL.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatCustomItemBinding.URL.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C039C728()
{
  unint64_t result = qword_1EA19A850;
  if (!qword_1EA19A850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A850);
  }
  return result;
}

unint64_t sub_1C039C77C(uint64_t a1)
{
  unint64_t result = sub_1C039C7A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C039C7A4()
{
  unint64_t result = qword_1EA19A858;
  if (!qword_1EA19A858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A858);
  }
  return result;
}

unint64_t sub_1C039C7F8(void *a1)
{
  a1[1] = sub_1BFD4D1C0();
  a1[2] = sub_1BFD6E460();
  unint64_t result = sub_1C039C728();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatCustomItemBinding.URL()
{
  return &type metadata for FormatCustomItemBinding.URL;
}

ValueMetadata *_s3URLO10CodingTypeOMa()
{
  return &_s3URLO10CodingTypeON;
}

unint64_t sub_1C039C87C()
{
  unint64_t result = qword_1EA19A860;
  if (!qword_1EA19A860)
  {
    sub_1C039C8D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A860);
  }
  return result;
}

void sub_1C039C8D4()
{
  if (!qword_1EA19A868)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19A868);
    }
  }
}

unint64_t sub_1C039C930()
{
  unint64_t result = qword_1EA19A870;
  if (!qword_1EA19A870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A870);
  }
  return result;
}

uint64_t sub_1C039C984@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_1C039CC3C(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v23 - v5;
  sub_1C039CC3C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v23 - v8;
  uint64_t v10 = type metadata accessor for FeedCustomItem();
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C039CC90(a1, (uint64_t)v13);
  uint64_t v14 = *(int *)(v11 + 28);
  uint64_t v15 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1C039CCF4((uint64_t)&v13[v14 + *(int *)(v15 + 24)], (uint64_t)v6);
  uint64_t v16 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v17 = 1;
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v6, 1, v16);
  uint64_t v19 = sub_1C1515FDC();
  uint64_t v20 = *(void *)(v19 - 8);
  if (v18 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v9, v6, v19);
    uint64_t v17 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v9, v17, 1, v19);
  sub_1C04338EC(0x4F206E6F69746341, 0xEF4C5255206E6570, (uint64_t)v9, a2);
  sub_1C039CD74((uint64_t)v13);
  uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 0, 1, v21);
}

void sub_1C039CC3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C039CC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedCustomItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C039CCF4(uint64_t a1, uint64_t a2)
{
  sub_1C039CC3C(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C039CD74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedCustomItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 FeedWeather.location.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t FeedWeather.condition.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedWeather.conditionCode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t FeedWeather.conditionIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedWeather(0) + 28);
  uint64_t v4 = sub_1C151E2BC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedWeather.partOfDay.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedWeather(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t FeedWeather.temperature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedWeather(0);
  return sub_1C039DB7C(v1 + *(int *)(v3 + 36), a1, type metadata accessor for FeedWeather.Temperature);
}

uint64_t FeedWeather.forecastDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeedWeather(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C039CF50()
{
  uint64_t result = 0x746E6572727563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1751607656;
      break;
    case 2:
      uint64_t result = 7827308;
      break;
    case 3:
      uint64_t result = 0x6B694C736C656566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C039CFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C039F15C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C039CFFC(uint64_t a1)
{
  unint64_t v2 = sub_1C039D2A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C039D038(uint64_t a1)
{
  unint64_t v2 = sub_1C039D2A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedWeather.Temperature.encode(to:)(void *a1)
{
  sub_1C039D83C(0, &qword_1EA19A878, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C039D2A4();
  sub_1C1520F0C();
  char v13 = 0;
  sub_1C0092BC8();
  sub_1C039D8A0(&qword_1EA19A888);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for FeedWeather.Temperature(0);
    char v12 = 1;
    sub_1C152080C();
    char v11 = 2;
    sub_1C152080C();
    char v10 = 3;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C039D2A4()
{
  unint64_t result = qword_1EA19A880;
  if (!qword_1EA19A880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A880);
  }
  return result;
}

uint64_t FeedWeather.Temperature.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  sub_1C0092BC8();
  uint64_t v37 = v3;
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v34 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - v6;
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v28 - v9;
  MEMORY[0x1F4188790](v11);
  unint64_t v40 = (char *)&v28 - v12;
  sub_1C039D83C(0, &qword_1EA19A890, MEMORY[0x1E4FBBDC0]);
  uint64_t v38 = v13;
  uint64_t v36 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = type metadata accessor for FeedWeather.Temperature(0);
  MEMORY[0x1F4188790](v16);
  int v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C039D2A4();
  char v39 = v15;
  uint64_t v19 = (uint64_t)v41;
  sub_1C1520EBC();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = v7;
  unint64_t v32 = v10;
  char v41 = a1;
  char v45 = 0;
  uint64_t v20 = sub_1C039D8A0(&qword_1EA19A898);
  uint64_t v22 = v37;
  uint64_t v21 = v38;
  sub_1C15206EC();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v30(v18, v40, v22);
  char v44 = 1;
  uint64_t v23 = v32;
  unint64_t v40 = (char *)v20;
  sub_1C15206EC();
  uint64_t v29 = v16;
  unint64_t v24 = v30;
  v30(&v18[*(int *)(v16 + 20)], v23, v22);
  char v43 = 2;
  unint64_t v25 = v31;
  unint64_t v32 = 0;
  sub_1C15206EC();
  v24(&v18[*(int *)(v29 + 24)], v25, v22);
  char v42 = 3;
  unint64_t v26 = v34;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v21);
  v24(&v18[*(int *)(v29 + 28)], v26, v22);
  sub_1C039DB7C((uint64_t)v18, v33, type metadata accessor for FeedWeather.Temperature);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1C039D8E4((uint64_t)v18);
}

void sub_1C039D83C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C039D2A4();
    unint64_t v7 = a3(a1, &type metadata for FeedWeather.Temperature.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C039D8A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0092BC8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C039D8E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedWeather.Temperature(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C039D940@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedWeather.Temperature.init(from:)(a1, a2);
}

uint64_t sub_1C039D958(void *a1)
{
  return FeedWeather.Temperature.encode(to:)(a1);
}

uint64_t FeedWeather.init(location:condition:conditionCode:conditionIcon:forecastDescription:partOfDay:temperature:highTemperature:lowTemperature:feelsLikeTemperature:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  char v17 = *a4;
  char v18 = *a8;
  *(_OWORD *)a9 = *a1;
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(unsigned char *)(a9 + 32) = v17;
  uint64_t v19 = (int *)type metadata accessor for FeedWeather(0);
  uint64_t v20 = a9 + v19[7];
  uint64_t v21 = sub_1C151E2BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a5, v21);
  uint64_t v22 = (void *)(a9 + v19[10]);
  void *v22 = a6;
  v22[1] = a7;
  *(unsigned char *)(a9 + v19[8]) = v18;
  uint64_t v23 = a9 + v19[9];
  sub_1C0092BC8();
  uint64_t v25 = v24;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v29)((void *)(v24 - 8), v23, a10, v24);
  unint64_t v26 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v29(v23 + v26[5], a11, v25);
  v29(v23 + v26[6], a12, v25);
  uint64_t v27 = v23 + v26[7];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v29)(v27, a13, v25);
}

uint64_t FeedWeather.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C039DB7C(v1, a1, type metadata accessor for FeedWeather);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C039DB7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C039DBE4@<X0>(uint64_t a1@<X8>)
{
  sub_1C039DB7C(v1, a1, type metadata accessor for FeedWeather);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedWeather.identifier.getter()
{
  return 0;
}

void FeedWeather.url.getter()
{
  sub_1BFC39268(0, (unint64_t *)&qword_1EB8633C8);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, *v0, v0[1]);
  sub_1C151F6FC();
}

void *initializeBufferWithCopyOfBuffer for FeedWeather(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a3[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C151E2BC();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    sub_1C0092BC8();
    uint64_t v17 = v16;
    char v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    v18(v14, v15, v16);
    uint64_t v19 = (int *)type metadata accessor for FeedWeather.Temperature(0);
    v18(&v14[v19[5]], v15 + v19[5], v17);
    v18(&v14[v19[6]], v15 + v19[6], v17);
    v18(&v14[v19[7]], v15 + v19[7], v17);
    uint64_t v20 = a3[10];
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FeedWeather(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C151E2BC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  sub_1C0092BC8();
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v9(v6, v7);
  uint64_t v10 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v9(v6 + v10[5], v8);
  v9(v6 + v10[6], v8);
  v9(v6 + v10[7], v8);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151E2BC();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  sub_1C0092BC8();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v17(v13, v14, v15);
  char v18 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v17(v13 + v18[5], v14 + v18[5], v16);
  v17(v13 + v18[6], v14 + v18[6], v16);
  v17(v13 + v18[7], v14 + v18[7], v16);
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151E2BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  sub_1C0092BC8();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v15(v11, v12, v13);
  uint64_t v16 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v15(v11 + v16[5], v12 + v16[5], v14);
  v15(v11 + v16[6], v12 + v16[6], v14);
  v15(v11 + v16[7], v12 + v16[7], v14);
  uint64_t v17 = a3[10];
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *char v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151E2BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1C0092BC8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v16(v12, v13, v14);
  uint64_t v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v16(v12 + v17[5], v13 + v17[5], v15);
  v16(v12 + v17[6], v13 + v17[6], v15);
  v16(v12 + v17[7], v13 + v17[7], v15);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151E2BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1C0092BC8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v16(v12, v13, v14);
  uint64_t v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v16(v12 + v17[5], v13 + v17[5], v15);
  v16(v12 + v17[6], v13 + v17[6], v15);
  v16(v12 + v17[7], v13 + v17[7], v15);
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedWeather(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C039E6A8);
}

uint64_t sub_1C039E6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151E2BC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FeedWeather(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C039E7E8);
}

uint64_t sub_1C039E7E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1C151E2BC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedWeather.Temperature(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1C0092BC8();
    uint64_t v8 = v7;
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v8);
    v9((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v8);
    v9((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v8);
  }
  return a1;
}

uint64_t destroy for FeedWeather.Temperature(uint64_t a1, int *a2)
{
  sub_1C0092BC8();
  uint64_t v5 = v4;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v4 - 8), a1, v4);
  v8(a1 + a2[5], v5);
  v8(a1 + a2[6], v5);
  uint64_t v6 = a1 + a2[7];
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
}

uint64_t initializeWithCopy for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C0092BC8();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t assignWithCopy for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C0092BC8();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t initializeWithTake for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C0092BC8();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t assignWithTake for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C0092BC8();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedWeather.Temperature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C039EE60);
}

uint64_t sub_1C039EE60(uint64_t a1, uint64_t a2)
{
  sub_1C0092BC8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedWeather.Temperature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C039EEE0);
}

uint64_t sub_1C039EEE0(uint64_t a1, uint64_t a2)
{
  sub_1C0092BC8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for FeedWeather.Temperature.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C039F01CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedWeather.Temperature.CodingKeys()
{
  return &type metadata for FeedWeather.Temperature.CodingKeys;
}

unint64_t sub_1C039F058()
{
  unint64_t result = qword_1EA19A8A0;
  if (!qword_1EA19A8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8A0);
  }
  return result;
}

unint64_t sub_1C039F0B0()
{
  unint64_t result = qword_1EA19A8A8;
  if (!qword_1EA19A8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8A8);
  }
  return result;
}

unint64_t sub_1C039F108()
{
  unint64_t result = qword_1EA19A8B0;
  if (!qword_1EA19A8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8B0);
  }
  return result;
}

uint64_t sub_1C039F15C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1751607656 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7827308 && a2 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B694C736C656566 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *assignWithCopy for FormatButtonNodeStateMaskDataLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatButtonNodeStateMaskDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedBlobEntity()
{
  return &type metadata for FeedBlobEntity;
}

uint64_t sub_1C039F3DC()
{
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  qword_1EA2B4F48 = qword_1EA198ED8;
  unk_1EA2B4F50 = unk_1EA198EE0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C039F448(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v16 = a3;
  sub_1BFCE9A7C(0, &qword_1EA19A8D8, (uint64_t (*)(void))sub_1C03A08C8, (uint64_t)&type metadata for FeedBlobEntity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03A08C8();
  sub_1C1520F0C();
  uint64_t v18 = a2;
  char v17 = 0;
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  sub_1C0304B0C((unint64_t *)&qword_1EA1999A0);
  sub_1C152080C();
  if (!v4)
  {
    uint64_t v12 = v15;
    uint64_t v18 = v16;
    char v17 = 1;
    sub_1C152080C();
    uint64_t v18 = v12;
    char v17 = 2;
    sub_1BFCE9A7C(0, &qword_1EB85AC30, (uint64_t (*)(void))sub_1BFCE9BE8, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAA610]);
    sub_1C03A091C(&qword_1EA19A8E0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C039F6E4()
{
  uint64_t v1 = 0x6449726F73727563;
  if (*v0 != 1) {
    uint64_t v1 = 1635017060;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1C039F72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03A0054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C039F754(uint64_t a1)
{
  unint64_t v2 = sub_1C03A08C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C039F790(uint64_t a1)
{
  unint64_t v2 = sub_1C03A08C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C039F7CC()
{
  if (qword_1EA194458 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA2B4F48;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C039F834(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98EEC();
  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1C039F880(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98EEC();
  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1C039F8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98EEC();
  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

void *sub_1C039F930@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C03A0184(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1C039F960(void *a1)
{
  return sub_1C039F448(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C039F980(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1BFD98EEC();
  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1C039F9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98EEC();
  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1C039FA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1BFD98EEC();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1C039FA8C()
{
  unint64_t result = qword_1EA19A8B8;
  if (!qword_1EA19A8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8B8);
  }
  return result;
}

uint64_t sub_1C039FAE0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v34 = a5;
  unint64_t v35 = a6;
  uint64_t v32 = a3;
  unint64_t v33 = a4;
  uint64_t v30 = a1;
  unint64_t v31 = a2;
  sub_1BFCE9B58();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - v9;
  sub_1BFCE9AE4();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v28 - v15;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, MEMORY[0x1E4FAA6B0]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v19(v16, 1, 1, v17);
  v19(v13, 1, 1, v18);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v20 = sub_1C151996C();
  v19(v16, 1, 1, v18);
  v19(v13, 1, 1, v18);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  sub_1C151996C();
  uint64_t v21 = MEMORY[0x1E4F277C0];
  sub_1BFCE9A7C(0, &qword_1EB85AC70, (uint64_t (*)(void))sub_1BFCE9BE8, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAA6B0]);
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v24(v10, 1, 1, v22);
  v24(v29, 1, 1, v23);
  sub_1BFCE9A7C(0, &qword_1EB85ACD0, (uint64_t (*)(void))sub_1BFCE9BE8, v21, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFCE9A7C(0, &qword_1EB85AC30, (uint64_t (*)(void))sub_1BFCE9BE8, v21, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  sub_1C151996C();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  uint64_t v36 = v30;
  unint64_t v37 = v31;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v36 = v32;
  unint64_t v37 = v33;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = v34;
  unint64_t v25 = v35;
  uint64_t v36 = v34;
  unint64_t v37 = v35;
  sub_1BFE95820(v34, v35);
  sub_1C1519C0C();
  sub_1BFE95664(v26, v25);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v20;
}

uint64_t sub_1C03A0054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449726F73727563 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1C03A0184(void *a1)
{
  unint64_t v33 = a1;
  sub_1BFCE9A7C(0, &qword_1EA19A8C0, (uint64_t (*)(void))sub_1C03A08C8, (uint64_t)&type metadata for FeedBlobEntity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v34 = (char *)&v28 - v2;
  sub_1BFCE9B58();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - v6;
  sub_1BFCE9AE4();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v28 - v12;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, MEMORY[0x1E4FAA6B0]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v16(v13, 1, 1, v14);
  v16(v10, 1, 1, v15);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v36 = sub_1C151996C();
  v16(v13, 1, 1, v15);
  v16(v10, 1, 1, v15);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v31 = sub_1C151996C();
  uint64_t v17 = MEMORY[0x1E4F277C0];
  sub_1BFCE9A7C(0, &qword_1EB85AC70, (uint64_t (*)(void))sub_1BFCE9BE8, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAA6B0]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v20(v7, 1, 1, v18);
  v20(v32, 1, 1, v19);
  uint64_t v21 = v33;
  sub_1BFCE9A7C(0, &qword_1EB85ACD0, (uint64_t (*)(void))sub_1BFCE9BE8, v17, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCE9A7C(0, &qword_1EB85AC30, (uint64_t (*)(void))sub_1BFCE9BE8, v17, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  sub_1C151996C();
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  sub_1C03A08C8();
  uint64_t v22 = v35;
  uint64_t v23 = v34;
  sub_1C1520EBC();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    swift_release();
    swift_release();
  }
  else
  {
    char v37 = 0;
    sub_1C0304B0C((unint64_t *)&qword_1EA199968);
    uint64_t v24 = v30;
    sub_1C15206EC();
    swift_release();
    char v37 = 1;
    uint64_t v36 = v38;
    swift_retain();
    sub_1C15206EC();
    uint64_t v26 = (uint64_t)v21;
    swift_release();
    char v37 = 2;
    sub_1C03A091C(&qword_1EA19A8D0);
    swift_retain();
    sub_1C15206EC();
    uint64_t v27 = (void (**)(char *, uint64_t))(v29 + 8);
    swift_release();
    (*v27)(v23, v24);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1(v26);
    swift_release();
    swift_release();
    uint64_t v21 = (void *)v36;
  }
  swift_release();
  return v21;
}

unint64_t sub_1C03A08C8()
{
  unint64_t result = qword_1EA19A8C8;
  if (!qword_1EA19A8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8C8);
  }
  return result;
}

uint64_t sub_1C03A091C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFCE9A7C(255, &qword_1EB85AC30, (uint64_t (*)(void))sub_1BFCE9BE8, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedBlobEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03A0A64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedBlobEntity.CodingKeys()
{
  return &type metadata for FeedBlobEntity.CodingKeys;
}

unint64_t sub_1C03A0AA0()
{
  unint64_t result = qword_1EA19A8E8;
  if (!qword_1EA19A8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8E8);
  }
  return result;
}

unint64_t sub_1C03A0AF8()
{
  unint64_t result = qword_1EA19A8F0;
  if (!qword_1EA19A8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8F0);
  }
  return result;
}

unint64_t sub_1C03A0B50()
{
  unint64_t result = qword_1EA19A8F8;
  if (!qword_1EA19A8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A8F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding()
{
  return &type metadata for FormatWeatherBinding;
}

void *sub_1C03A0BB4(uint64_t a1, uint64_t a2)
{
  sub_1BFF9E3FC(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  uint64_t v24 = a2;
  uint64_t v5 = sub_1C0182060((void (*)(char *))sub_1C03A0EBC, (uint64_t)v23, (uint64_t)&unk_1F1B68540);
  sub_1C09BCFA4(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v5, v27);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 32) = v6;
  *(void *)(v6 + 48) = v28;
  long long v7 = v27[1];
  *(_OWORD *)(v6 + 16) = v27[0];
  *(_OWORD *)(v6 + 32) = v7;
  uint64_t v22[2] = a2;
  v22[3] = a1;
  unint64_t v8 = sub_1C0283C00((void (*)(void))sub_1C03A0F24, (uint64_t)v22, (uint64_t)&unk_1F1B68568);
  sub_1C09BCFA4(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v8, v29);
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v9 = swift_allocObject();
  *(void *)(inited + 72) = v9;
  *(void *)(v9 + 48) = v30;
  long long v10 = v29[1];
  *(_OWORD *)(v9 + 16) = v29[0];
  *(_OWORD *)(v9 + 32) = v10;
  sub_1C0BC3814(a1, a2, (uint64_t)v31);
  *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 144) = &off_1F1BDEC90;
  uint64_t v11 = swift_allocObject();
  *(void *)(inited + 112) = v11;
  *(void *)(v11 + 48) = v32;
  long long v12 = v31[1];
  *(_OWORD *)(v11 + 16) = v31[0];
  *(_OWORD *)(v11 + 32) = v12;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)&v33[0] = MEMORY[0x1E4FBC860];
  uint64_t v14 = qword_1F1B68528;
  if (qword_1F1B68528)
  {
    uint64_t v15 = &byte_1F1B68538;
    do
    {
      char v16 = *v15++;
      char v26 = v16;
      sub_1C0A76260(&v26, a2, a1, &v25);
      sub_1C1047634(v25);
      --v14;
    }
    while (v14);
    uint64_t v13 = *(void *)&v33[0];
  }
  uint64_t v17 = sub_1C0233D40(v13);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(1954047316, 0xE400000000000000, 0, 0, v17, v33);
  swift_bridgeObjectRelease();
  *(void *)(inited + 176) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 184) = &off_1F1BDEC90;
  uint64_t v18 = swift_allocObject();
  *(void *)(inited + 152) = v18;
  *(void *)(v18 + 48) = v34;
  long long v19 = v33[1];
  *(_OWORD *)(v18 + 16) = v33[0];
  *(_OWORD *)(v18 + 32) = v19;
  uint64_t v20 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v20;
}

uint64_t sub_1C03A0EBC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C04AA264(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C03A0EDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C03A0F24@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0CD534C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for DebugInspectionDataSection()
{
  return &type metadata for DebugInspectionDataSection;
}

uint64_t sub_1C03A0F50()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  sub_1C03A0FBC();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v4;
}

void sub_1C03A0FBC()
{
  if (!qword_1EA19C720)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C720);
    }
  }
}

uint64_t sub_1C03A1014()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03A101C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1C03A13E0(v2, (uint64_t)v38);
      sub_1C03A13E0((uint64_t)v38, (uint64_t)v35);
      uint64_t v4 = v36;
      if (v36)
      {
        uint64_t v5 = v37;
        __swift_project_boxed_opaque_existential_1(v35, v36);
        uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
        sub_1C03A14F4((uint64_t)v38);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1C0EE4638(0, v3[2] + 1, 1, v3);
        }
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1) {
          uint64_t v3 = sub_1C0EE4638((void *)(v7 > 1), v8 + 1, 1, v3);
        }
        v3[2] = v8 + 1;
        v3[v8 + 4] = v6;
      }
      else
      {
        sub_1C03A14F4((uint64_t)v35);
        sub_1C03A14F4((uint64_t)v38);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    uint64_t v9 = v3[2];
    if (v9) {
      goto LABEL_12;
    }
LABEL_35:
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v24 = v11[2];
    if (v24)
    {
      uint64_t v25 = v11 + 5;
      uint64_t v26 = MEMORY[0x1E4FBC860];
      do
      {
        if (*(void *)(v25[1] + 16))
        {
          uint64_t v31 = *(v25 - 1);
          long long v34 = *(_OWORD *)v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v38[0] = v26;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1C05F7158(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v38[0];
          }
          unint64_t v28 = *(void *)(v26 + 16);
          unint64_t v27 = *(void *)(v26 + 24);
          long long v29 = v34;
          if (v28 >= v27 >> 1)
          {
            sub_1C05F7158(v27 > 1, v28 + 1, 1);
            long long v29 = v34;
            uint64_t v26 = v38[0];
          }
          *(void *)(v26 + 16) = v28 + 1;
          uint64_t v30 = v26 + 24 * v28;
          *(void *)(v30 + 32) = v31;
          *(_OWORD *)(v30 + 40) = v29;
        }
        v25 += 3;
        --v24;
      }
      while (v24);
    }
    else
    {
      uint64_t v26 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    return v26;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v9) {
    goto LABEL_35;
  }
LABEL_12:
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v12 = v3[v10 + 4];
    uint64_t v13 = *(void *)(v12 + 16);
    int64_t v14 = v11[2];
    int64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    swift_bridgeObjectRetain();
    char v16 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v16 && v15 <= v11[3] >> 1)
    {
      if (*(void *)(v12 + 16)) {
        goto LABEL_24;
      }
    }
    else
    {
      if (v14 <= v15) {
        int64_t v17 = v14 + v13;
      }
      else {
        int64_t v17 = v14;
      }
      uint64_t v11 = sub_1C0EE4624(v16, v17, 1, v11);
      if (*(void *)(v12 + 16))
      {
LABEL_24:
        uint64_t v18 = v11[2];
        if ((v11[3] >> 1) - v18 < v13) {
          goto LABEL_49;
        }
        unint64_t v19 = (unint64_t)&v11[3 * v18 + 4];
        if (v12 + 32 < v19 + 24 * v13 && v19 < v12 + 32 + 24 * v13) {
          goto LABEL_51;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v21 = v11[2];
          BOOL v22 = __OFADD__(v21, v13);
          uint64_t v23 = v21 + v13;
          if (v22) {
            goto LABEL_50;
          }
          _OWORD v11[2] = v23;
        }
        goto LABEL_14;
      }
    }
    if (v13) {
      goto LABEL_48;
    }
LABEL_14:
    ++v10;
    swift_bridgeObjectRelease();
    if (v9 == v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C03A13E0(uint64_t a1, uint64_t a2)
{
  sub_1C03A1444();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C03A1444()
{
  if (!qword_1EA1A8870)
  {
    sub_1C03A149C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8870);
    }
  }
}

unint64_t sub_1C03A149C()
{
  unint64_t result = qword_1EA19A900;
  if (!qword_1EA19A900)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA19A900);
  }
  return result;
}

uint64_t sub_1C03A14F4(uint64_t a1)
{
  sub_1C03A1444();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectionDataSource()
{
  return &type metadata for DebugInspectionDataSource;
}

void destroy for DebugInspectionDataItem(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 >= 2)
  {
    if (*(_DWORD *)a1 == -1) {
      goto LABEL_3;
    }
  }
  else if (v2 == 1)
  {
LABEL_3:
    uint64_t v3 = *(void **)a1;

    return;
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
}

uint64_t initializeWithCopy for DebugInspectionDataItem(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 56);
  if (v4 >= 2)
  {
    if (*(_DWORD *)a2 == -1) {
      goto LABEL_3;
    }
  }
  else if (v4 == 1)
  {
LABEL_3:
    uint64_t v5 = *a2;
    id v6 = (id)*a2;
    *(void *)a1 = v5;
    char v7 = 1;
    goto LABEL_8;
  }
  uint64_t v8 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v8;
  uint64_t v9 = a2 + 2;
  uint64_t v10 = a2[5];
  swift_bridgeObjectRetain();
  if (v10)
  {
    uint64_t v11 = a2[6];
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 16, (uint64_t)(a2 + 2), v10);
    char v7 = 0;
  }
  else
  {
    char v7 = 0;
    long long v12 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *v9;
    *(_OWORD *)(a1 + 32) = v12;
    *(void *)(a1 + 48) = a2[6];
  }
LABEL_8:
  *(unsigned char *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugInspectionDataItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
    }
    else
    {
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      id v6 = *(void **)a2;
      id v7 = v6;
      *(void *)a1 = v6;
      char v8 = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v9 = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      if (v9)
      {
        *(void *)(a1 + 40) = v9;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
        char v8 = 0;
      }
      else
      {
        char v8 = 0;
        long long v10 = *(_OWORD *)(a2 + 16);
        long long v11 = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(_OWORD *)(a1 + 16) = v10;
        *(_OWORD *)(a1 + 32) = v11;
      }
    }
    *(unsigned char *)(a1 + 56) = v8;
  }
  return a1;
}

uint64_t assignWithTake for DebugInspectionDataItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
    }
    else
    {
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionDataItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionDataItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C03A1960(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1C03A197C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionDataItem()
{
  return &type metadata for DebugInspectionDataItem;
}

uint64_t dispatch thunk of FeedWeatherServiceType.weather(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

unint64_t sub_1C03A19CC(char a1)
{
  unint64_t result = 0xD000000000000025;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000028;
      break;
    case 2:
      unint64_t result = 0xD000000000000030;
      break;
    case 3:
      unint64_t result = 0xD000000000000027;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C03A1A78()
{
  return sub_1C03A19CC(*v0);
}

uint64_t sub_1C03A1A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03A7500(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C03A1AA8(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2D4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03A1AE4(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2D4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03A1B20(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2BB0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03A1B5C(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2BB0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03A1B98()
{
  unint64_t v1 = 0x65676175676E616CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1C03A1BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03A76F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C03A1C14(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2C04();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03A1C50(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2C04();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03A1C8C(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2C58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03A1CC8(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2C58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03A1D04()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x6D6E6F7269766E65;
  }
}

uint64_t sub_1C03A1D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03A7834(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C03A1D74(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2CAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03A1DB0(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2CAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03A1DEC()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1C03A1E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03A793C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C03A1E48(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2B5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03A1E84(uint64_t a1)
{
  unint64_t v2 = sub_1C03A2B5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatDerivedDataWarningError.encode(to:)(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C03A3F40(0, &qword_1EA19A908, (uint64_t (*)(void))sub_1C03A2B5C, (uint64_t)&type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v68 = v3;
  uint64_t v57 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v66 = (char *)&v53 - v4;
  uint64_t v61 = type metadata accessor for FormatDeprecationWarning(0);
  MEMORY[0x1F4188790](v61);
  uint64_t v67 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03A3F40(0, &qword_1EA19A918, (uint64_t (*)(void))sub_1C03A2BB0, (uint64_t)&type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys, v2);
  uint64_t v64 = v6;
  uint64_t v55 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v62 = (char *)&v53 - v7;
  sub_1C03A3F40(0, &qword_1EA19A928, (uint64_t (*)(void))sub_1C03A2C04, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys, v2);
  uint64_t v65 = v8;
  uint64_t v56 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v63 = (char *)&v53 - v9;
  sub_1C03A3F40(0, &qword_1EA19A938, (uint64_t (*)(void))sub_1C03A2C58, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys, v2);
  uint64_t v60 = v10;
  uint64_t v54 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v59 = (char *)&v53 - v11;
  sub_1C03A3F40(0, &qword_1EA19A948, (uint64_t (*)(void))sub_1C03A2CAC, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys, v2);
  uint64_t v58 = v12;
  uint64_t v53 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  int64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1F4188790](v15);
  int64_t v17 = (uint64_t *)((char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03A3F40(0, &qword_1EA19A958, (uint64_t (*)(void))sub_1C03A2D4C, (uint64_t)&type metadata for FormatDerivedDataWarningError.CodingKeys, v2);
  uint64_t v72 = v18;
  uint64_t v69 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v53 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03A2D4C();
  uint64_t v21 = v20;
  sub_1C1520F0C();
  sub_1C03A508C(v71, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v27 = *v17;
      LOBYTE(v74) = 1;
      sub_1C03A2C58();
      unint64_t v28 = v59;
      uint64_t v29 = v72;
      uint64_t v30 = v21;
      sub_1C152073C();
      uint64_t v74 = v27;
      char v73 = 0;
      sub_1BFED9C20();
      sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
      uint64_t v31 = v60;
      uint64_t v32 = v70;
      sub_1C152080C();
      if (v32)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v31);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v29);
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      LOBYTE(v74) = 1;
      sub_1C15207CC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v31);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v30, v29);
      break;
    case 2u:
      uint64_t v33 = *v17;
      uint64_t v71 = v17[1];
      uint64_t v68 = v17[3];
      LOBYTE(v74) = 2;
      sub_1C03A2C04();
      long long v34 = v63;
      uint64_t v35 = v72;
      sub_1C152073C();
      uint64_t v74 = v33;
      char v73 = 0;
      sub_1BFED9C20();
      sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
      uint64_t v36 = v65;
      uint64_t v37 = v70;
      sub_1C152080C();
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v36);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v21, v35);
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v70 = v21;
        swift_bridgeObjectRelease();
        LOBYTE(v74) = 1;
        uint64_t v50 = v34;
        sub_1C15207CC();
        swift_bridgeObjectRelease();
        LOBYTE(v74) = 2;
        sub_1C15207CC();
        uint64_t v51 = v72;
        uint64_t v52 = v70;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v50, v36);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v52, v51);
      }
      break;
    case 3u:
      uint64_t v38 = *v17;
      LOBYTE(v74) = 3;
      sub_1C03A2BB0();
      char v39 = v62;
      uint64_t v40 = v72;
      sub_1C152073C();
      uint64_t v74 = v38;
      char v73 = 0;
      sub_1BFED9C20();
      sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
      uint64_t v41 = v64;
      char v42 = v70;
      sub_1C152080C();
      if (v42)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v41);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v40);
LABEL_10:
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        LOBYTE(v74) = 1;
        sub_1C15207CC();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v41);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v20, v40);
      }
      break;
    case 4u:
      sub_1C03A2DA0();
      uint64_t v43 = (uint64_t)v17;
      uint64_t v44 = v67;
      sub_1C03A3FA8(v43, v67, type metadata accessor for FormatDeprecationWarning);
      LOBYTE(v74) = 4;
      sub_1C03A2B5C();
      uint64_t v45 = v72;
      uint64_t v46 = v20;
      uint64_t v47 = v66;
      sub_1C152073C();
      LOBYTE(v74) = 0;
      sub_1C03A514C(&qword_1EA19A970, (void (*)(uint64_t))type metadata accessor for FormatDeprecationWarning);
      uint64_t v48 = v68;
      BOOL v49 = v70;
      sub_1C152080C();
      if (!v49)
      {
        LOBYTE(v74) = 1;
        sub_1C15207CC();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v48);
      sub_1C03A5C18(v44, type metadata accessor for FormatDeprecationWarning);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v46, v45);
      break;
    default:
      uint64_t v22 = *v17;
      LOBYTE(v74) = 0;
      sub_1C03A2CAC();
      uint64_t v23 = v72;
      sub_1C152073C();
      uint64_t v74 = v22;
      char v73 = 0;
      sub_1BFED9C20();
      sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
      uint64_t v24 = v58;
      uint64_t v25 = v70;
      sub_1C152080C();
      swift_bridgeObjectRelease();
      if (v25)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v24);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v23);
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        LOBYTE(v74) = 1;
        sub_1C15207CC();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v24);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v20, v23);
      }
      break;
  }
  return result;
}

unint64_t sub_1C03A2B5C()
{
  unint64_t result = qword_1EA19A910;
  if (!qword_1EA19A910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A910);
  }
  return result;
}

unint64_t sub_1C03A2BB0()
{
  unint64_t result = qword_1EA19A920;
  if (!qword_1EA19A920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A920);
  }
  return result;
}

unint64_t sub_1C03A2C04()
{
  unint64_t result = qword_1EA19A930;
  if (!qword_1EA19A930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A930);
  }
  return result;
}

unint64_t sub_1C03A2C58()
{
  unint64_t result = qword_1EA19A940;
  if (!qword_1EA19A940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A940);
  }
  return result;
}

unint64_t sub_1C03A2CAC()
{
  unint64_t result = qword_1EA19A950;
  if (!qword_1EA19A950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A950);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataWarningError()
{
  uint64_t result = qword_1EA19A9B8;
  if (!qword_1EA19A9B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C03A2D4C()
{
  unint64_t result = qword_1EA19A960;
  if (!qword_1EA19A960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A960);
  }
  return result;
}

void sub_1C03A2DA0()
{
  if (!qword_1EA19A968)
  {
    type metadata accessor for FormatDeprecationWarning(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19A968);
    }
  }
}

uint64_t FormatDerivedDataWarningError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C03A3F40(0, &qword_1EA19A978, (uint64_t (*)(void))sub_1C03A2B5C, (uint64_t)&type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v132 = v4;
  uint64_t v141 = *(char **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v140 = (char *)&v118 - v5;
  sub_1C03A3F40(0, &qword_1EA19A980, (uint64_t (*)(void))sub_1C03A2BB0, (uint64_t)&type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys, v3);
  uint64_t v130 = v6;
  uint64_t v139 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v137 = (char *)&v118 - v7;
  sub_1C03A3F40(0, &qword_1EA19A988, (uint64_t (*)(void))sub_1C03A2C04, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys, v3);
  uint64_t v131 = v8;
  uint64_t v125 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (char *)&v118 - v9;
  sub_1C03A3F40(0, &qword_1EA19A990, (uint64_t (*)(void))sub_1C03A2C58, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys, v3);
  uint64_t v129 = v10;
  uint64_t v127 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v135 = (char *)&v118 - v11;
  sub_1C03A3F40(0, &qword_1EA19A998, (uint64_t (*)(void))sub_1C03A2CAC, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys, v3);
  uint64_t v128 = v12;
  uint64_t v126 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v134 = (char *)&v118 - v13;
  sub_1C03A3F40(0, &qword_1EA19A9A0, (uint64_t (*)(void))sub_1C03A2D4C, (uint64_t)&type metadata for FormatDerivedDataWarningError.CodingKeys, v3);
  uint64_t v143 = v14;
  uint64_t v138 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v118 - v15;
  uint64_t v142 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1F4188790](v142);
  CGRect v133 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v118 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v118 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v118 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v118 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v118 - v31;
  uint64_t v33 = a1[3];
  v144 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_1C03A2D4C();
  uint64_t v34 = v145;
  sub_1C1520EBC();
  if (v34)
  {
LABEL_20:
    uint64_t v80 = (uint64_t)v144;
    return __swift_destroy_boxed_opaque_existential_1(v80);
  }
  unint64_t v120 = v29;
  uint64_t v121 = v26;
  uint64_t v122 = v20;
  uint64_t v119 = v23;
  uint64_t v145 = 0;
  uint64_t v35 = v139;
  uint64_t v36 = v141;
  uint64_t v123 = v32;
  uint64_t v37 = v143;
  uint64_t v38 = sub_1C152070C();
  uint64_t v39 = v37;
  uint64_t v40 = v16;
  if (*(void *)(v38 + 16) != 1)
  {
    uint64_t v45 = sub_1C15201EC();
    swift_allocError();
    uint64_t v47 = v46;
    sub_1C01AC8BC();
    *uint64_t v47 = v142;
    uint64_t v48 = v39;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v45 - 8) + 104))(v47, *MEMORY[0x1E4FBBA70], v45);
    swift_willThrow();
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v16, v48);
    goto LABEL_20;
  }
  switch(*(unsigned char *)(v38 + 32))
  {
    case 1:
      LOBYTE(v147) = 1;
      sub_1C03A2C58();
      BOOL v49 = v135;
      uint64_t v50 = v145;
      sub_1C15205CC();
      if (v50)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v138 + 8))(v16, v37);
        goto LABEL_20;
      }
      sub_1BFED9C20();
      char v146 = 0;
      sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
      uint64_t v60 = v129;
      sub_1C15206EC();
      uint64_t v141 = v16;
      uint64_t v73 = v147;
      char v146 = 1;
      uint64_t v74 = sub_1C152069C();
      uint64_t v75 = v60;
      uint64_t v76 = (void (**)(char *, uint64_t))(v138 + 8);
      uint64_t v93 = *(void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v145 = v74;
      uint64_t v95 = v94;
      v93(v49, v75);
      swift_bridgeObjectRelease();
      (*v76)(v141, v37);
      uint64_t v96 = v121;
      uint64_t v97 = v145;
      *uint64_t v121 = v73;
      v96[1] = v97;
      v96[2] = v95;
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = (uint64_t)v96;
      goto LABEL_22;
    case 2:
      LOBYTE(v147) = 2;
      sub_1C03A2C04();
      uint64_t v51 = v136;
      uint64_t v52 = v39;
      uint64_t v53 = v145;
      sub_1C15205CC();
      if (v53)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v138 + 8))(v16, v39);
        goto LABEL_20;
      }
      sub_1BFED9C20();
      char v146 = 0;
      sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
      uint64_t v61 = v131;
      sub_1C15206EC();
      uint64_t v77 = v147;
      char v146 = 1;
      id v78 = v51;
      uint64_t v79 = sub_1C152069C();
      uint64_t v99 = v98;
      v140 = (char *)v79;
      uint64_t v141 = v16;
      char v146 = 2;
      uint64_t v100 = sub_1C152069C();
      uint64_t v101 = v61;
      uint64_t v102 = v138;
      uint64_t v145 = 0;
      uint64_t v110 = v100;
      uint64_t v112 = v111;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v78, v101);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v141, v52);
      uint64_t v113 = v119;
      char v114 = v140;
      *uint64_t v119 = v77;
      v113[1] = v114;
      v113[2] = v99;
      v113[3] = v110;
      v113[4] = v112;
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = (uint64_t)v113;
      uint64_t v116 = (uint64_t)v123;
      sub_1C03A3FA8(v115, (uint64_t)v123, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
      uint64_t v117 = (uint64_t)v144;
      goto LABEL_23;
    case 3:
      uint64_t v54 = v35;
      LOBYTE(v147) = 3;
      sub_1C03A2BB0();
      uint64_t v55 = v137;
      uint64_t v42 = v37;
      uint64_t v56 = v145;
      sub_1C15205CC();
      if (v56) {
        goto LABEL_14;
      }
      sub_1BFED9C20();
      char v146 = 0;
      sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
      uint64_t v57 = v130;
      sub_1C15206EC();
      uint64_t v141 = v40;
      uint64_t v67 = v147;
      char v146 = 1;
      uint64_t v68 = v55;
      uint64_t v69 = sub_1C152069C();
      uint64_t v70 = (void (**)(char *, uint64_t))(v54 + 8);
      uint64_t v71 = v57;
      uint64_t v72 = (void (**)(char *, uint64_t))(v138 + 8);
      uint64_t v89 = v88;
      unint64_t v90 = *v70;
      uint64_t v145 = v69;
      v90(v68, v71);
      swift_bridgeObjectRelease();
      (*v72)(v141, v42);
      uint64_t v91 = v122;
      uint64_t v92 = v145;
      void *v122 = v67;
      v91[1] = v92;
      v91[2] = v89;
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = (uint64_t)v91;
      goto LABEL_22;
    case 4:
      uint64_t v58 = v36;
      LOBYTE(v147) = 4;
      sub_1C03A2B5C();
      uint64_t v48 = v37;
      uint64_t v59 = v145;
      sub_1C15205CC();
      if (v59) {
        goto LABEL_7;
      }
      type metadata accessor for FormatDeprecationWarning(0);
      LOBYTE(v147) = 0;
      sub_1C03A514C(&qword_1EA19A9A8, (void (*)(uint64_t))type metadata accessor for FormatDeprecationWarning);
      uint64_t v62 = v132;
      sub_1C15206EC();
      LOBYTE(v147) = 1;
      uint64_t v103 = sub_1C152069C();
      uint64_t v105 = v104;
      sub_1C03A2DA0();
      uint64_t v107 = v58;
      uint64_t v108 = v133;
      uint64_t v109 = (uint64_t *)&v133[*(int *)(v106 + 48)];
      (*((void (**)(void, uint64_t))v107 + 1))(0, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v16, v143);
      *uint64_t v109 = v103;
      v109[1] = v105;
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = (uint64_t)v108;
      goto LABEL_22;
    default:
      LOBYTE(v147) = 0;
      sub_1C03A2CAC();
      uint64_t v41 = v134;
      uint64_t v42 = v37;
      uint64_t v43 = v145;
      sub_1C15205CC();
      if (v43)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v138 + 8))(v40, v42);
        goto LABEL_20;
      }
      sub_1BFED9C20();
      char v146 = 0;
      sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
      uint64_t v44 = v128;
      sub_1C15206EC();
      uint64_t v141 = v40;
      uint64_t v63 = v147;
      char v146 = 1;
      uint64_t v64 = sub_1C152069C();
      uint64_t v65 = v44;
      char v66 = (void (**)(char *, uint64_t))(v138 + 8);
      uint64_t v82 = v64;
      uint64_t v83 = v41;
      uint64_t v85 = v84;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v83, v65);
      swift_bridgeObjectRelease();
      (*v66)(v141, v37);
      uint64_t v86 = v120;
      *unint64_t v120 = v63;
      v86[1] = v82;
      v86[2] = v85;
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = (uint64_t)v86;
LABEL_22:
      uint64_t v116 = (uint64_t)v123;
      sub_1C03A3FA8(v87, (uint64_t)v123, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
      uint64_t v117 = (uint64_t)v144;
LABEL_23:
      sub_1C03A3FA8(v116, v124, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
      uint64_t v80 = v117;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v80);
}

void sub_1C03A3F40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C03A3FA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C03A4010@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDerivedDataWarningError.init(from:)(a1, a2);
}

uint64_t sub_1C03A4028(void *a1)
{
  return FormatDerivedDataWarningError.encode(to:)(a1);
}

uint64_t FormatDerivedDataWarningError.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatDeprecationWarning(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03A508C(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v8 = *v7;
      swift_bridgeObjectRelease();
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_1C15200FC();
      uint64_t v9 = *(void *)(v8 + 16);
      swift_bridgeObjectRelease();
      uint64_t v21 = v9;
      uint64_t v10 = sub_1C152088C();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v22 = v10;
      unint64_t v23 = v12;
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 4u:
      sub_1C03A2DA0();
      swift_bridgeObjectRelease();
      sub_1C03A3FA8((uint64_t)v7, (uint64_t)v4, type metadata accessor for FormatDeprecationWarning);
      uint64_t v18 = FormatDeprecationWarning.message.getter();
      sub_1C03A5C18((uint64_t)v4, type metadata accessor for FormatDeprecationWarning);
      break;
    default:
      uint64_t v13 = *v7;
      swift_bridgeObjectRelease();
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_1C15200FC();
      uint64_t v14 = *(void *)(v13 + 16);
      swift_bridgeObjectRelease();
      uint64_t v21 = v14;
      uint64_t v15 = sub_1C152088C();
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v22 = v15;
      unint64_t v23 = v17;
LABEL_4:
      sub_1C151E80C();
      uint64_t v18 = v22;
      break;
  }
  return v18;
}

unint64_t FormatDerivedDataWarningError.errorHint.getter()
{
  sub_1C03A5034();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v62 - v5;
  uint64_t v7 = type metadata accessor for FormatDeprecationWarning(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (void *)((char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03A508C(v0, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v49 = *v12;
      swift_bridgeObjectRelease();
      unint64_t v67 = 0;
      unint64_t v68 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v67 = 0xD000000000000024;
      unint64_t v68 = 0x80000001C160D100;
      uint64_t v64 = v49;
      swift_bridgeObjectRetain();
      sub_1C03A4FC8(&v64);
      swift_bridgeObjectRelease();
      uint64_t v50 = v64;
      int64_t v51 = *(void *)(v64 + 16);
      if (!v51) {
        goto LABEL_29;
      }
      uint64_t v66 = MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v51, 0);
      uint64_t v16 = v66;
      uint64_t v63 = v50;
      uint64_t v52 = v50 + 40;
      do
      {
        uint64_t v64 = 0x2220A280E2;
        unint64_t v65 = 0xA500000000000000;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v53 = v64;
        unint64_t v54 = v65;
        uint64_t v66 = v16;
        unint64_t v56 = *(void *)(v16 + 16);
        unint64_t v55 = *(void *)(v16 + 24);
        if (v56 >= v55 >> 1)
        {
          sub_1BFF661B8(v55 > 1, v56 + 1, 1);
          uint64_t v16 = v66;
        }
        v52 += 16;
        *(void *)(v16 + 16) = v56 + 1;
        uint64_t v57 = v16 + 16 * v56;
        *(void *)(v57 + 32) = v53;
        *(void *)(v57 + 40) = v54;
        --v51;
      }
      while (v51);
      goto LABEL_28;
    case 2u:
      uint64_t v29 = *v12;
      uint64_t v28 = v12[1];
      uint64_t v30 = v12[2];
      swift_bridgeObjectRelease();
      unint64_t v67 = 0;
      unint64_t v68 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      sub_1C151E80C();
      uint64_t v64 = v29;
      swift_bridgeObjectRetain();
      sub_1C03A4FC8(&v64);
      swift_bridgeObjectRelease();
      uint64_t v31 = v64;
      int64_t v32 = *(void *)(v64 + 16);
      if (v32)
      {
        v62[2] = v28;
        uint64_t v63 = v30;
        uint64_t v66 = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v32, 0);
        uint64_t v33 = v66;
        v62[1] = v31;
        uint64_t v34 = v31 + 40;
        do
        {
          uint64_t v64 = 0x2220A280E2;
          unint64_t v65 = 0xA500000000000000;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v36 = v64;
          unint64_t v35 = v65;
          uint64_t v66 = v33;
          unint64_t v38 = *(void *)(v33 + 16);
          unint64_t v37 = *(void *)(v33 + 24);
          if (v38 >= v37 >> 1)
          {
            sub_1BFF661B8(v37 > 1, v38 + 1, 1);
            uint64_t v33 = v66;
          }
          v34 += 16;
          *(void *)(v33 + 16) = v38 + 1;
          uint64_t v39 = v33 + 16 * v38;
          *(void *)(v39 + 32) = v36;
          *(void *)(v39 + 40) = v35;
          --v32;
        }
        while (v32);
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v33 = MEMORY[0x1E4FBC860];
      }
      uint64_t v64 = v33;
      sub_1BFED9C20();
      sub_1C03A514C((unint64_t *)&qword_1EB879F30, (void (*)(uint64_t))sub_1BFED9C20);
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      return v67;
    case 3u:
      uint64_t v40 = *v12;
      swift_bridgeObjectRelease();
      unint64_t v67 = 0;
      unint64_t v68 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      uint64_t v64 = v40;
      swift_bridgeObjectRetain();
      sub_1C03A4FC8(&v64);
      swift_bridgeObjectRelease();
      uint64_t v41 = v64;
      int64_t v42 = *(void *)(v64 + 16);
      if (!v42) {
        goto LABEL_29;
      }
      uint64_t v66 = MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v42, 0);
      uint64_t v16 = v66;
      uint64_t v63 = v41;
      uint64_t v43 = v41 + 40;
      do
      {
        uint64_t v64 = 547520738;
        unint64_t v65 = 0xA400000000000000;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v44 = v64;
        unint64_t v45 = v65;
        uint64_t v66 = v16;
        unint64_t v47 = *(void *)(v16 + 16);
        unint64_t v46 = *(void *)(v16 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1BFF661B8(v46 > 1, v47 + 1, 1);
          uint64_t v16 = v66;
        }
        v43 += 16;
        *(void *)(v16 + 16) = v47 + 1;
        uint64_t v48 = v16 + 16 * v47;
        *(void *)(v48 + 32) = v44;
        *(void *)(v48 + 40) = v45;
        --v42;
      }
      while (v42);
      goto LABEL_28;
    case 4u:
      sub_1C03A2DA0();
      swift_bridgeObjectRelease();
      sub_1C03A3FA8((uint64_t)v12, (uint64_t)v9, type metadata accessor for FormatDeprecationWarning);
      if (*(void *)&v9[*(int *)(v7 + 24) + 8])
      {
        unint64_t v67 = 0;
        unint64_t v68 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1C15200FC();
        uint64_t v23 = FormatDeprecationWarning.message.getter();
        unint64_t v25 = v24;
        swift_bridgeObjectRelease();
        unint64_t v67 = v23;
        unint64_t v68 = v25;
        sub_1C151E80C();
        sub_1C03A508C((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v6, (uint64_t (*)(void))sub_1C03A5034);
        uint64_t v26 = sub_1C151801C();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v26) == 1)
        {
          sub_1C03A5C18((uint64_t)v6, (uint64_t (*)(void))sub_1C03A5034);
        }
        else
        {
          MEMORY[0x1C18BFAF0]();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v26);
        }
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v67 = 0;
        unint64_t v68 = 0xE000000000000000;
        sub_1C15200FC();
        FormatDeprecationWarning.message.getter();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        sub_1C03A508C((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v3, (uint64_t (*)(void))sub_1C03A5034);
        uint64_t v58 = sub_1C151801C();
        uint64_t v59 = *(void *)(v58 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v3, 1, v58) == 1)
        {
          sub_1C03A5C18((uint64_t)v3, (uint64_t (*)(void))sub_1C03A5034);
        }
        else
        {
          MEMORY[0x1C18BFAF0]();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v3, v58);
        }
        sub_1C151E80C();
        swift_bridgeObjectRelease();
      }
      sub_1C151E80C();
      unint64_t v60 = v67;
      sub_1C03A5C18((uint64_t)v9, type metadata accessor for FormatDeprecationWarning);
      return v60;
    default:
      uint64_t v13 = *v12;
      swift_bridgeObjectRelease();
      unint64_t v67 = 0;
      unint64_t v68 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      uint64_t v64 = v13;
      swift_bridgeObjectRetain();
      sub_1C03A4FC8(&v64);
      swift_bridgeObjectRelease();
      uint64_t v14 = v64;
      int64_t v15 = *(void *)(v64 + 16);
      if (v15)
      {
        uint64_t v66 = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v15, 0);
        uint64_t v16 = v66;
        uint64_t v63 = v14;
        uint64_t v17 = v14 + 40;
        do
        {
          uint64_t v64 = 547520738;
          unint64_t v65 = 0xA400000000000000;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v18 = v64;
          unint64_t v19 = v65;
          uint64_t v66 = v16;
          unint64_t v21 = *(void *)(v16 + 16);
          unint64_t v20 = *(void *)(v16 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1BFF661B8(v20 > 1, v21 + 1, 1);
            uint64_t v16 = v66;
          }
          v17 += 16;
          *(void *)(v16 + 16) = v21 + 1;
          uint64_t v22 = v16 + 16 * v21;
          *(void *)(v22 + 32) = v18;
          *(void *)(v22 + 40) = v19;
          --v15;
        }
        while (v15);
LABEL_28:
        swift_release();
      }
      else
      {
LABEL_29:
        swift_release();
        uint64_t v16 = MEMORY[0x1E4FBC860];
      }
      uint64_t v64 = v16;
      sub_1BFED9C20();
      sub_1C03A514C((unint64_t *)&qword_1EB879F30, (void (*)(uint64_t))sub_1BFED9C20);
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return v67;
  }
}

uint64_t sub_1C03A4FC8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFE72780(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C03A6AA8(v5);
  *a1 = v2;
  return result;
}

void sub_1C03A5034()
{
  if (!qword_1EA1995B0)
  {
    sub_1C151801C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1995B0);
    }
  }
}

uint64_t sub_1C03A508C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C03A50F4(uint64_t a1)
{
  uint64_t result = sub_1C03A514C(&qword_1EA19A9B0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataWarningError);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C03A514C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatDerivedDataWarningError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2[3];
        a1[2] = a2[2];
        a1[3] = v9;
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v10 = sub_1C151928C();
        uint64_t v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16);
        v11(a1, a2, v10);
        unint64_t v12 = (int *)type metadata accessor for FormatDeprecationWarning(0);
        v11((uint64_t *)((char *)a1 + v12[5]), (uint64_t *)((char *)a2 + v12[5]), v10);
        uint64_t v13 = v12[6];
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        int64_t v15 = (uint64_t *)((char *)a2 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        uint64_t v17 = v12[7];
        __dst = (char *)a1 + v17;
        uint64_t v18 = (char *)a2 + v17;
        uint64_t v19 = sub_1C151801C();
        uint64_t v20 = *(void *)(v19 - 8);
        unint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        swift_bridgeObjectRetain();
        if (v21(v18, 1, v19))
        {
          sub_1C03A5034();
          memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
        }
        uint64_t v23 = v12[8];
        unint64_t v24 = (uint64_t *)((char *)a1 + v23);
        unint64_t v25 = (uint64_t *)((char *)a2 + v23);
        uint64_t v26 = v25[1];
        void *v24 = *v25;
        v24[1] = v26;
        sub_1C03A2DA0();
        uint64_t v28 = *(int *)(v27 + 48);
        uint64_t v29 = (uint64_t *)((char *)a1 + v28);
        uint64_t v30 = (uint64_t *)((char *)a2 + v28);
        uint64_t v31 = v30[1];
        *uint64_t v29 = *v30;
        v29[1] = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatDerivedDataWarningError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4:
      uint64_t v3 = sub_1C151928C();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      uint64_t v5 = type metadata accessor for FormatDeprecationWarning(0);
      v4(a1 + *(int *)(v5 + 20), v3);
      swift_bridgeObjectRelease();
      uint64_t v6 = a1 + *(int *)(v5 + 28);
      uint64_t v7 = sub_1C151801C();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
      swift_bridgeObjectRelease();
      sub_1C03A2DA0();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for FormatDerivedDataWarningError(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v7 = sub_1C151928C();
      uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for FormatDeprecationWarning(0);
      v8((void *)((char *)a1 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
      uint64_t v10 = v9[6];
      uint64_t v11 = (void *)((char *)a1 + v10);
      unint64_t v12 = (void *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v13;
      uint64_t v14 = v9[7];
      uint64_t v30 = v9;
      __dst = (char *)a1 + v14;
      int64_t v15 = (char *)a2 + v14;
      uint64_t v16 = sub_1C151801C();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      swift_bridgeObjectRetain();
      if (v18(v15, 1, v16))
      {
        sub_1C03A5034();
        memcpy(__dst, v15, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      uint64_t v20 = v30[8];
      unint64_t v21 = (void *)((char *)a1 + v20);
      uint64_t v22 = (void *)((char *)a2 + v20);
      uint64_t v23 = v22[1];
      *unint64_t v21 = *v22;
      v21[1] = v23;
      sub_1C03A2DA0();
      uint64_t v25 = *(int *)(v24 + 48);
      uint64_t v26 = (void *)((char *)a1 + v25);
      uint64_t v27 = (void *)((char *)a2 + v25);
      uint64_t v28 = v27[1];
      void *v26 = *v27;
      v26[1] = v28;
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      a1[2] = a2[2];
      break;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for FormatDerivedDataWarningError(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C03A5C18((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v4 = sub_1C151928C();
        uint64_t v5 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
        v5(a1, a2, v4);
        uint64_t v6 = (int *)type metadata accessor for FormatDeprecationWarning(0);
        v5((void *)((char *)a1 + v6[5]), (void *)((char *)a2 + v6[5]), v4);
        uint64_t v7 = v6[6];
        uint64_t v8 = (void *)((char *)a1 + v7);
        uint64_t v9 = (void *)((char *)a2 + v7);
        void *v8 = *v9;
        v8[1] = v9[1];
        uint64_t v10 = v6[7];
        uint64_t v24 = v6;
        __dst = (char *)a1 + v10;
        uint64_t v11 = (char *)a2 + v10;
        uint64_t v12 = sub_1C151801C();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        if (v14(v11, 1, v12))
        {
          sub_1C03A5034();
          memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
        }
        uint64_t v16 = v24[8];
        uint64_t v17 = (void *)((char *)a1 + v16);
        uint64_t v18 = (void *)((char *)a2 + v16);
        void *v17 = *v18;
        v17[1] = v18[1];
        sub_1C03A2DA0();
        uint64_t v20 = *(int *)(v19 + 48);
        unint64_t v21 = (void *)((char *)a1 + v20);
        uint64_t v22 = (void *)((char *)a2 + v20);
        *unint64_t v21 = *v22;
        v21[1] = v22[1];
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C03A5C18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for FormatDerivedDataWarningError(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v6 = sub_1C151928C();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    uint64_t v8 = (int *)type metadata accessor for FormatDeprecationWarning(0);
    v7(&a1[v8[5]], &a2[v8[5]], v6);
    *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
    uint64_t v9 = v8[7];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_1C151801C();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1C03A5034();
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
    sub_1C03A2DA0();
    *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FormatDerivedDataWarningError(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C03A5C18((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v6 = sub_1C151928C();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for FormatDeprecationWarning(0);
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      uint64_t v9 = v8[7];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_1C151801C();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1C03A5034();
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      sub_1C03A2DA0();
      *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C03A6084()
{
  uint64_t v3 = &unk_1C1543C90;
  uint64_t v4 = &unk_1C1543C90;
  uint64_t v5 = &unk_1C1543CA8;
  uint64_t v6 = &unk_1C1543C90;
  uint64_t result = type metadata accessor for FormatDeprecationWarning(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataWarningError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03A6204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.CodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03A632CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys;
}

unsigned char *_s8NewsFeed29FormatDerivedDataWarningErrorO47MissingNewsroomEnvironmentsIdentifierCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03A6440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys;
}

unint64_t sub_1C03A647C()
{
  unint64_t result = qword_1EA19A9C8;
  if (!qword_1EA19A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A9C8);
  }
  return result;
}

unint64_t sub_1C03A64D4()
{
  unint64_t result = qword_1EA19A9D0;
  if (!qword_1EA19A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A9D0);
  }
  return result;
}

unint64_t sub_1C03A652C()
{
  unint64_t result = qword_1EA19A9D8;
  if (!qword_1EA19A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A9D8);
  }
  return result;
}

unint64_t sub_1C03A6584()
{
  unint64_t result = qword_1EA19A9E0;
  if (!qword_1EA19A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A9E0);
  }
  return result;
}

unint64_t sub_1C03A65DC()
{
  unint64_t result = qword_1EA19A9E8;
  if (!qword_1EA19A9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A9E8);
  }
  return result;
}

unint64_t sub_1C03A6634()
{
  unint64_t result = qword_1EA19A9F0;
  if (!qword_1EA19A9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A9F0);
  }
  return result;
}

unint64_t sub_1C03A668C()
{
  unint64_t result = qword_1EA19A9F8;
  if (!qword_1EA19A9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19A9F8);
  }
  return result;
}

unint64_t sub_1C03A66E4()
{
  unint64_t result = qword_1EA19AA00;
  if (!qword_1EA19AA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA00);
  }
  return result;
}

unint64_t sub_1C03A673C()
{
  unint64_t result = qword_1EA19AA08;
  if (!qword_1EA19AA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA08);
  }
  return result;
}

unint64_t sub_1C03A6794()
{
  unint64_t result = qword_1EA19AA10;
  if (!qword_1EA19AA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA10);
  }
  return result;
}

unint64_t sub_1C03A67EC()
{
  unint64_t result = qword_1EA19AA18;
  if (!qword_1EA19AA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA18);
  }
  return result;
}

unint64_t sub_1C03A6844()
{
  unint64_t result = qword_1EA19AA20;
  if (!qword_1EA19AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA20);
  }
  return result;
}

unint64_t sub_1C03A689C()
{
  unint64_t result = qword_1EA19AA28;
  if (!qword_1EA19AA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA28);
  }
  return result;
}

unint64_t sub_1C03A68F4()
{
  unint64_t result = qword_1EA19AA30;
  if (!qword_1EA19AA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA30);
  }
  return result;
}

unint64_t sub_1C03A694C()
{
  unint64_t result = qword_1EA19AA38;
  if (!qword_1EA19AA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA38);
  }
  return result;
}

unint64_t sub_1C03A69A4()
{
  unint64_t result = qword_1EA19AA40;
  if (!qword_1EA19AA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA40);
  }
  return result;
}

unint64_t sub_1C03A69FC()
{
  unint64_t result = qword_1EA19AA48;
  if (!qword_1EA19AA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA48);
  }
  return result;
}

unint64_t sub_1C03A6A54()
{
  unint64_t result = qword_1EA19AA50;
  if (!qword_1EA19AA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA50);
  }
  return result;
}

uint64_t sub_1C03A6AA8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1C03A7194(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1C03A7264((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1C063604C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C151ECCC();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (*v17 == v15 && v17[1] == v16)
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C1520A9C();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*v23 == *(v21 - 1) && v23[1] == *v21)
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C1520A9C()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1C0634CC8((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    int64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        unint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        unint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1C03A7264((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        int64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        unint64_t v38 = v33;
        do
        {
          BOOL v39 = *(v38 - 2) == v35 && *(v38 - 1) == v36;
          if (v39 || (sub_1C1520A9C() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)unint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C03A7194(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = v6;
    uint64_t v13 = (void *)v8;
    while (1)
    {
      uint64_t result = *(v13 - 2);
      BOOL v14 = result == v10 && *(v13 - 1) == v11;
      if (v14 || (uint64_t result = sub_1C1520A9C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v10 = *v13;
      uint64_t v11 = v13[1];
      *(_OWORD *)uint64_t v13 = *((_OWORD *)v13 - 1);
      *(v13 - 1) = v11;
      *(v13 - 2) = v10;
      v13 -= 2;
      if (v4 == ++v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C03A7264(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = v21 == *((void *)v17 - 2) && v22 == *((void *)v17 - 1);
          if (v23 || (sub_1C1520A9C() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    BOOL v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v4 == *(void *)v6 && *((void *)v4 + 1) == *((void *)v6 + 1);
        if (v15 || (sub_1C1520A9C() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1C0634DF8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C03A7500(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000025 && a2 == 0x80000001C160D1D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001C160D200 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x80000001C160D230 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001C160D270 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C160D2A0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C03A76F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C160D1B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C03A7834(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEC00000073746E65;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C160D1B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C03A793C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C160D1B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static CoverChannelViewLayout.make18ColumnCatalogLayout(context:factories:options:)(uint64_t a1)
{
  uint64_t v2 = sub_1C1517A9C();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  uint64_t v8 = a1;
  (*(void (**)(unsigned char *, void, __n128))(v5 + 104))(&v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB8F8], v3);
  sub_1C03A962C(0, (unint64_t *)&qword_1EA19AA58, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  return sub_1C1517BEC();
}

void sub_1C03A7B48(uint64_t a1, void *a2)
{
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v21[-v7];
  uint64_t v9 = a2[23];
  uint64_t v10 = a2[24];
  __swift_project_boxed_opaque_existential_1(a2 + 20, v9);
  double v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  uint64_t v12 = a2[23];
  uint64_t v13 = a2[24];
  __swift_project_boxed_opaque_existential_1(a2 + 20, v12);
  double v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
  double v15 = v11 + v14 + v14;
  uint64_t v16 = (void *)sub_1C03A9448((uint64_t)a2);
  if (a2[9]) {
    double v17 = 0.0;
  }
  else {
    double v17 = 20.0;
  }
  id v18 = v16;
  sub_1C151F80C();
  objc_msgSend(v18, sel_boundingRectWithSize_options_context_, 35, 0);
  double v19 = v17 + v15 + 20.0 + CGRectGetWidth(v28) + 10.0;
  uint64_t v27 = a1;
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA28], v5);
  double v22 = v19;
  BOOL v23 = a2;
  uint64_t v24 = 0x4024000000000000;
  id v25 = v18;
  double v26 = v17;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C03A962C(0, &qword_1EA19AA78, MEMORY[0x1E4FAB6F0]);
  sub_1C03A96B0(&qword_1EA19AA80, &qword_1EA19AA78, v20);
  sub_1C151734C();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C03A7DFC(uint64_t a1)
{
  sub_1C03A7B48(a1, *(void **)(v1 + 16));
}

unint64_t sub_1C03A7E04()
{
  unint64_t result = qword_1EA19AA60;
  if (!qword_1EA19AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA60);
  }
  return result;
}

unint64_t sub_1C03A7E58()
{
  unint64_t result = qword_1EA19AA68;
  if (!qword_1EA19AA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AA68);
  }
  return result;
}

uint64_t sub_1C03A7EAC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  double v14 = (void *)((char *)v37 - v13);
  uint64_t v51 = a1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0x4024000000000000;
  *double v14 = v15;
  unsigned int v45 = *MEMORY[0x1E4FABA08];
  uint64_t v16 = *(void (**)(uint64_t *))(v12 + 104);
  v16(v14);
  double v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v17);
  sub_1C151738C();
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  v21(v14, v11);
  uint64_t v51 = a1;
  uint64_t v22 = *MEMORY[0x1E4FABA28];
  unint64_t v38 = v16;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v16)(v14, v22, v11);
  v37[1] = v20;
  uint64_t v42 = v19;
  sub_1C151734C();
  uint64_t v40 = v12 + 8;
  unint64_t v41 = v21;
  v21(v14, v11);
  uint64_t v51 = a1;
  uint64_t v39 = a1;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0x4030000000000000;
  *double v14 = v23;
  ((void (*)(uint64_t *, void, uint64_t))v16)(v14, v45, v11);
  sub_1C151738C();
  v21(v14, v11);
  uint64_t v51 = a1;
  sub_1BFF35C38();
  uint64_t v25 = v24;
  uint64_t v26 = swift_allocBox();
  uint64_t v28 = v27;
  uint64_t v29 = v27 + *(int *)(v25 + 48);
  uint64_t v30 = *MEMORY[0x1E4FAB790];
  uint64_t v31 = sub_1C151786C();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104);
  v32(v28, v30, v31);
  v32(v29, *MEMORY[0x1E4FAB7B0], v31);
  *double v14 = v26;
  uint64_t v33 = v38;
  ((void (*)(uint64_t *, void, uint64_t))v38)(v14, *MEMORY[0x1E4FAB9E8], v11);
  double v46 = a4;
  uint64_t v47 = v43;
  double v48 = a5;
  uint64_t v49 = v44;
  double v50 = a6;
  sub_1C151731C();
  uint64_t v34 = (uint64_t (*)(uint64_t *, uint64_t))v41;
  v41(v14, v11);
  uint64_t v51 = v39;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = 0x404C000000000000;
  *double v14 = v35;
  ((void (*)(uint64_t *, void, uint64_t))v33)(v14, v45, v11);
  sub_1C151738C();
  return v34(v14, v11);
}

uint64_t sub_1C03A832C(uint64_t a1)
{
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v14 - v5);
  v14[1] = a1;
  swift_getKeyPath();
  uint64_t v7 = sub_1C1517A8C();
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = v9;
  uint64_t v11 = *MEMORY[0x1E4FAB8C0];
  uint64_t v12 = sub_1C1517A7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v10, *MEMORY[0x1E4FAB8E0], v7);
  *uint64_t v6 = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAB9F8], v3);
  sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C03A85C8(uint64_t a1, void *a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v47 = a1;
  uint64_t v48 = a3;
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v46 = v11;
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v44 - v12);
  uint64_t v53 = a1;
  sub_1BFF35C38();
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocBox();
  uint64_t v18 = v17;
  uint64_t v44 = (uint64_t *)((char *)v17 + *(int *)(v15 + 48));
  uint64_t v45 = v16;
  uint64_t v19 = sub_1C151786C();
  uint64_t v20 = swift_allocBox();
  uint64_t v22 = v21;
  uint64_t v23 = swift_allocObject();
  *(double *)(v23 + 16) = a4;
  uint64_t *v22 = v23;
  uint64_t v24 = *(void (**)(void))(*(void *)(v19 - 8) + 104);
  ((void (*)(uint64_t *, void, uint64_t))v24)(v22, *MEMORY[0x1E4FAB798], v19);
  *uint64_t v18 = v20;
  ((void (*)(uint64_t *, void, uint64_t))v24)(v18, *MEMORY[0x1E4FAB7A0], v19);
  uint64_t v25 = swift_allocObject();
  uint64_t v27 = a2[23];
  uint64_t v26 = a2[24];
  __swift_project_boxed_opaque_existential_1(a2 + 20, v27);
  *(double *)(v25 + 16) = (*(double (**)(uint64_t, uint64_t))(v26 + 32))(v27, v26);
  *uint64_t v44 = v25;
  v24();
  uint64_t v28 = v46;
  *uint64_t v13 = v45;
  uint64_t v29 = v49;
  uint64_t v30 = *(void (**)(uint64_t *, void, uint64_t))(v49 + 104);
  v30(v13, *MEMORY[0x1E4FAB9E8], v28);
  uint64_t v52 = a2;
  uint64_t v31 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
  sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v31);
  sub_1C151731C();
  uint64_t v32 = *(void (**)(uint64_t *, uint64_t))(v29 + 8);
  v32(v13, v28);
  uint64_t v49 = v29 + 8;
  uint64_t v33 = v47;
  uint64_t v53 = v47;
  uint64_t v34 = swift_allocObject();
  *(double *)(v34 + 16) = a5;
  *uint64_t v13 = v34;
  v30(v13, *MEMORY[0x1E4FABA00], v28);
  sub_1C151738C();
  v32(v13, v28);
  uint64_t v53 = v33;
  v30(v13, *MEMORY[0x1E4FABA28], v28);
  sub_1C03A9734();
  sub_1C03A97A8(0, &qword_1EA19AAA0, MEMORY[0x1E4FAB678]);
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C1529AE0;
  unint64_t v40 = v39 + v38;
  uint64_t v41 = *MEMORY[0x1E4FAB610];
  sub_1C03A97A8(0, &qword_1EA19AAA8, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v40, v41, v42);
  (*(void (**)(unint64_t, void, uint64_t))(v37 + 104))(v40, *MEMORY[0x1E4FAB620], v36);
  uint64_t v50 = v48;
  double v51 = a6;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v32)(v13, v28);
}

uint64_t sub_1C03A8B28(uint64_t a1, uint64_t a2)
{
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v28 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 200);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        uint64_t *v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    double v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    uint64_t *v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    sub_1C03A9734();
    sub_1C03A97A8(0, &qword_1EA19AAA0, MEMORY[0x1E4FAB678]);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
    unint64_t v23 = v22 + v21;
    uint64_t v24 = *MEMORY[0x1E4FAB600];
    sub_1C03A97A8(0, &qword_1EA19AAA8, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E4FAB620], v19);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
    sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v26);
    sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v27 = v17;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C03A8F80(uint64_t a1, void *a2, double a3)
{
  id v38 = a2;
  uint64_t v45 = a1;
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  uint64_t v41 = v8;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v33 - v9);
  uint64_t v46 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  uint64_t v39 = v10;
  *uint64_t v10 = v11;
  uint64_t v12 = *MEMORY[0x1E4FAB968];
  uint64_t v13 = *(void (**)(uint64_t *, void, uint64_t))(v8 + 104);
  uint64_t v43 = v8 + 104;
  uint64_t v44 = v13;
  v13(v10, v12, v7);
  sub_1C03A9734();
  sub_1C03A97A8(0, &qword_1EA19AAA0, MEMORY[0x1E4FAB678]);
  uint64_t v36 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v35 = *(void *)(v15 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v37 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1C1527210;
  unint64_t v18 = v17 + v16;
  *(double *)(v17 + v16) = a3;
  unsigned int v34 = *MEMORY[0x1E4FAB7E8];
  uint64_t v19 = v34;
  uint64_t v20 = sub_1C15178EC();
  uint64_t v33 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);
  v33(v18, v19, v20);
  uint64_t v21 = *MEMORY[0x1E4FAB858];
  uint64_t v22 = sub_1C15179EC();
  unint64_t v23 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);
  v23(v18, v21, v22);
  uint64_t v24 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
  uint64_t v25 = v36;
  v24(v18, *MEMORY[0x1E4FAB550], v36);
  uint64_t v26 = (void *)(v18 + v35);
  void *v26 = 0x4008000000000000;
  v33((unint64_t)v26, v34, v20);
  v23((unint64_t)v26, v21, v22);
  v24((unint64_t)v26, *MEMORY[0x1E4FAB560], v25);
  id v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
  sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v27);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  id v28 = v38;
  uint64_t v29 = v39;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = v40;
  uint64_t v31 = *(void (**)(uint64_t *, uint64_t))(v41 + 8);
  v31(v29, v40);
  uint64_t v46 = v45;
  swift_getKeyPath();
  v44(v29, *MEMORY[0x1E4FAB9F0], v30);
  sub_1C151737C();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v31)(v29, v30);
}

uint64_t sub_1C03A9448(uint64_t a1)
{
  uint64_t v2 = sub_1C151E24C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = qword_1EB8739C0;
  if ((*(unsigned char *)(a1 + 72) & 1) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 224);
    if (*(unsigned char *)(v7 + qword_1EB8739C0)) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    sub_1BFE4597C();
    uint64_t *v5 = sub_1C151F56C();
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
    a1 = sub_1C151E26C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
    v3 += 8;
    v8(v5, v2);
    if (a1) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    __break(1u);
  }
  uint64_t v7 = *(void *)(a1 + 232);
  if (*(unsigned char *)(v7 + v6)) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  sub_1BFE4597C();
  uint64_t *v5 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
  char v9 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v9) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  __break(1u);
  return result;
}

uint64_t sub_1C03A9604(uint64_t a1)
{
  return sub_1C03A970C(a1, sub_1C03A7EAC);
}

uint64_t sub_1C03A961C()
{
  return swift_deallocObject();
}

void sub_1C03A962C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for CoverChannelViewLayout;
    v8[1] = &type metadata for CoverChannelViewLayout.Attributes;
    v8[2] = sub_1C03A7E04();
    double v8[3] = sub_1C03A7E58();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C03A96B0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C03A962C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C03A96F4(uint64_t a1)
{
  return sub_1C03A970C(a1, (uint64_t (*)(uint64_t, void, void, double, double, double))sub_1C03A85C8);
}

uint64_t sub_1C03A970C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, double, double, double))
{
  return a2(a1, *(void *)(v2 + 24), *(void *)(v2 + 40), *(double *)(v2 + 16), *(double *)(v2 + 32), *(double *)(v2 + 48));
}

uint64_t sub_1C03A972C(uint64_t a1)
{
  return sub_1C03A8B28(a1, *(void *)(v1 + 16));
}

void sub_1C03A9734()
{
  if (!qword_1EA19AA98)
  {
    sub_1C03A97A8(255, &qword_1EA19AAA0, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19AA98);
    }
  }
}

void sub_1C03A97A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C03A7E04();
    unint64_t v7 = a3(a1, &type metadata for CoverChannelViewLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C03A980C(uint64_t a1)
{
  return sub_1C03A8F80(a1, *(void **)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1C03A9818()
{
  return swift_deallocObject();
}

uint64_t FormatSplitBackground.xAnchor.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatSplitBackground.degrees.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatSplitBackground.leftSide.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  char v10 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1C03A98B4(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C03A98B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BFDB3920(a7);
  }
  else
  {
    return swift_retain();
  }
}

uint64_t FormatSplitBackground.rightSide.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 104);
  uint64_t v5 = *(void *)(v1 + 112);
  uint64_t v6 = *(void *)(v1 + 120);
  uint64_t v7 = *(void *)(v1 + 128);
  uint64_t v8 = *(void *)(v1 + 136);
  uint64_t v9 = *(void *)(v1 + 144);
  char v10 = *(unsigned char *)(v1 + 152);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1C03A98B4(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C03A9988@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSplitBackground.init(from:)(a1, a2);
}

uint64_t sub_1C03A99A0(void *a1)
{
  return FormatSplitBackground.encode(to:)(a1);
}

uint64_t sub_1C03A99BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[11];
  uint64_t v45 = v1[12];
  uint64_t v40 = v1[13];
  uint64_t v30 = v1[14];
  uint64_t v31 = v1[15];
  uint64_t v5 = v1[17];
  uint64_t v32 = v1[16];
  uint64_t v6 = v1[18];
  int v43 = *((unsigned __int8 *)v1 + 152);
  int v44 = *((unsigned __int8 *)v1 + 80);
  uint64_t v41 = v1[1];
  uint64_t v42 = *v1;
  if (v44 == 1)
  {
    uint64_t v28 = v1[18];
    uint64_t v29 = v1[17];
    uint64_t v27 = v1[11];
    uint64_t v7 = v1[8];
    uint64_t v8 = v1[9];
    uint64_t v10 = v1[6];
    uint64_t v9 = v1[7];
    uint64_t v12 = v1[4];
    uint64_t v11 = v1[5];
    uint64_t v13 = v1[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C03A98B4(v3, v13, v12, v11, v10, v9, v7, v8, 1);
    uint64_t v33 = sub_1C096B5E4(v3);
    swift_bridgeObjectRetain();
    sub_1BFDB3920(v7);
    uint64_t v34 = v12;
    uint64_t v35 = v11;
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    uint64_t v16 = v11;
    uint64_t v36 = v10;
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    uint64_t v39 = v8;
    uint64_t v17 = v7;
    uint64_t v4 = v27;
    uint64_t v6 = v28;
    uint64_t v18 = v8;
    uint64_t v5 = v29;
    sub_1C03596EC(v3, v13, v14, v16, v10, v9, v17, v18, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C10E55EC(v46);
    uint64_t v15 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v33 = v46[0];
  }
  uint64_t v19 = v40;
  if (v43)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFDB3920(v5);
    uint64_t v20 = sub_1C096B5E4(v4);
    swift_bridgeObjectRetain();
    sub_1BFDB3920(v5);
    uint64_t v21 = v4;
    uint64_t v23 = v30;
    uint64_t v22 = v31;
    uint64_t v24 = v32;
    uint64_t result = sub_1C03596EC(v21, v45, v40, v30, v31, v32, v5, v6, 1);
    uint64_t v26 = v45;
  }
  else
  {
    uint64_t result = sub_1C10E55EC(v46);
    uint64_t v26 = 0;
    uint64_t v19 = 0;
    uint64_t v23 = 0;
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v20 = v46[0];
  }
  *(void *)a1 = v42;
  *(void *)(a1 + 8) = v41;
  *(void *)(a1 + 16) = v33;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v34;
  *(void *)(a1 + 40) = v35;
  *(void *)(a1 + 48) = v36;
  *(void *)(a1 + 56) = v37;
  *(void *)(a1 + 64) = v38;
  *(void *)(a1 + 72) = v39;
  *(unsigned char *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v20;
  *(void *)(a1 + 96) = v26;
  *(void *)(a1 + 104) = v19;
  *(void *)(a1 + 112) = v23;
  *(void *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = v24;
  *(void *)(a1 + 136) = v5;
  *(void *)(a1 + 144) = v6;
  *(unsigned char *)(a1 + 152) = v43;
  return result;
}

uint64_t _s8NewsFeed21FormatSplitBackgroundV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v44 = *(void *)(a1 + 16);
  uint64_t v45 = *(void *)(a1 + 8);
  uint64_t v43 = *(void *)(a1 + 24);
  uint64_t v39 = *(void *)(a1 + 40);
  uint64_t v40 = *(void *)(a1 + 32);
  uint64_t v37 = *(void *)(a1 + 56);
  uint64_t v38 = *(void *)(a1 + 48);
  uint64_t v35 = *(void *)(a1 + 72);
  uint64_t v36 = *(void *)(a1 + 64);
  char v34 = *(unsigned char *)(a1 + 80);
  uint64_t v41 = *(void *)(a1 + 96);
  uint64_t v42 = *(void *)(a1 + 88);
  uint64_t v23 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 104);
  uint64_t v21 = *(void *)(a1 + 128);
  uint64_t v22 = *(void *)(a1 + 120);
  uint64_t v19 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 136);
  char v18 = *(unsigned char *)(a1 + 152);
  uint64_t v4 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v32 = *(void *)(a2 + 24);
  uint64_t v33 = *(void *)(a2 + 16);
  uint64_t v30 = *(void *)(a2 + 40);
  uint64_t v31 = *(void *)(a2 + 32);
  uint64_t v28 = *(void *)(a2 + 56);
  uint64_t v29 = *(void *)(a2 + 48);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 64);
  char v25 = *(unsigned char *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 112);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  uint64_t v6 = *(void *)(a2 + 128);
  uint64_t v9 = *(void *)(a2 + 136);
  uint64_t v8 = *(void *)(a2 + 144);
  char v10 = *(unsigned char *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_1C00DE998(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00DE998(v45, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v55 = v44;
  uint64_t v56 = v43;
  uint64_t v57 = v40;
  uint64_t v58 = v39;
  uint64_t v59 = v38;
  uint64_t v60 = v37;
  uint64_t v61 = v36;
  uint64_t v62 = v35;
  char v63 = v34;
  uint64_t v46 = v33;
  uint64_t v47 = v32;
  uint64_t v48 = v31;
  uint64_t v49 = v30;
  uint64_t v50 = v29;
  uint64_t v51 = v28;
  uint64_t v52 = v27;
  uint64_t v53 = v26;
  char v54 = v25;
  if (_s8NewsFeed25FormatSplitBackgroundSideO2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)&v46))
  {
    uint64_t v55 = v42;
    uint64_t v56 = v41;
    uint64_t v57 = v24;
    uint64_t v58 = v23;
    uint64_t v59 = v22;
    uint64_t v60 = v21;
    uint64_t v61 = v20;
    uint64_t v62 = v19;
    char v63 = v18;
    uint64_t v46 = v17;
    uint64_t v47 = v16;
    uint64_t v48 = v15;
    uint64_t v49 = v5;
    uint64_t v50 = v7;
    uint64_t v51 = v6;
    uint64_t v52 = v9;
    uint64_t v53 = v8;
    char v54 = v10;
    char v13 = _s8NewsFeed25FormatSplitBackgroundSideO2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)&v46);
  }
  else
  {
LABEL_5:
    char v13 = 0;
  }
  return v13 & 1;
}

unint64_t sub_1C03A9ED0(uint64_t a1)
{
  unint64_t result = sub_1C03A9EF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03A9EF8()
{
  unint64_t result = qword_1EA19AAB0;
  if (!qword_1EA19AAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AAB0);
  }
  return result;
}

unint64_t sub_1C03A9F4C(void *a1)
{
  a1[1] = sub_1C03A9F84();
  a1[2] = sub_1C03A9FD8();
  unint64_t result = sub_1C03AA02C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C03A9F84()
{
  unint64_t result = qword_1EB866F78;
  if (!qword_1EB866F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866F78);
  }
  return result;
}

unint64_t sub_1C03A9FD8()
{
  unint64_t result = qword_1EB86BD58;
  if (!qword_1EB86BD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD58);
  }
  return result;
}

unint64_t sub_1C03AA02C()
{
  unint64_t result = qword_1EA19AAB8;
  if (!qword_1EA19AAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AAB8);
  }
  return result;
}

uint64_t destroy for FormatSplitBackground(uint64_t a1)
{
  return sub_1C03596EC(*(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(unsigned char *)(a1 + 152));
}

uint64_t initializeWithCopy for FormatSplitBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v21 = *(void *)(a2 + 64);
  uint64_t v22 = *(void *)(a2 + 72);
  char v11 = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C03A98B4(v5, v6, v7, v8, v9, v10, v21, v22, v11);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v21;
  *(void *)(a1 + 72) = v22;
  *(unsigned char *)(a1 + 80) = v11;
  uint64_t v12 = *(void *)(v2 + 88);
  uint64_t v13 = *(void *)(v2 + 96);
  uint64_t v14 = *(void *)(v2 + 104);
  uint64_t v15 = *(void *)(v2 + 112);
  uint64_t v16 = *(void *)(v2 + 120);
  uint64_t v17 = *(void *)(v2 + 128);
  uint64_t v18 = *(void *)(v2 + 136);
  uint64_t v19 = *(void *)(v2 + 144);
  LOBYTE(v2) = *(unsigned char *)(v2 + 152);
  sub_1C03A98B4(v12, v13, v14, v15, v16, v17, v18, v19, v2);
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = v19;
  *(unsigned char *)(a1 + 152) = v2;
  return a1;
}

uint64_t assignWithCopy for FormatSplitBackground(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v10 = v2[8];
  uint64_t v11 = v2[9];
  char v39 = *((unsigned char *)v2 + 80);
  sub_1C03A98B4(v4, v5, v6, v7, v8, v9, v10, v11, v39);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  char v20 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v39;
  sub_1C03596EC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = v2[11];
  uint64_t v22 = v2[12];
  uint64_t v23 = v2[13];
  uint64_t v24 = v2[14];
  uint64_t v25 = v2[15];
  uint64_t v26 = v2[16];
  uint64_t v27 = v2[17];
  uint64_t v28 = v2[18];
  LOBYTE(v2) = *((unsigned char *)v2 + 152);
  sub_1C03A98B4(v21, v22, v23, v24, v25, v26, v27, v28, (char)v2);
  uint64_t v29 = *(void *)(a1 + 88);
  uint64_t v30 = *(void *)(a1 + 96);
  uint64_t v31 = *(void *)(a1 + 104);
  uint64_t v32 = *(void *)(a1 + 112);
  uint64_t v33 = *(void *)(a1 + 120);
  uint64_t v34 = *(void *)(a1 + 128);
  uint64_t v35 = *(void *)(a1 + 136);
  uint64_t v36 = *(void *)(a1 + 144);
  char v37 = *(unsigned char *)(a1 + 152);
  *(void *)(a1 + 88) = v21;
  *(void *)(a1 + 96) = v22;
  *(void *)(a1 + 104) = v23;
  *(void *)(a1 + 112) = v24;
  *(void *)(a1 + 120) = v25;
  *(void *)(a1 + 128) = v26;
  *(void *)(a1 + 136) = v27;
  *(void *)(a1 + 144) = v28;
  *(unsigned char *)(a1 + 152) = (_BYTE)v2;
  sub_1C03596EC(v29, v30, v31, v32, v33, v34, v35, v36, v37);
  return a1;
}

uint64_t assignWithTake for FormatSplitBackground(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  char v13 = *(unsigned char *)(a1 + 80);
  long long v14 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v14;
  long long v15 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v15;
  *(unsigned char *)(a1 + 80) = v4;
  sub_1C03596EC(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  char v16 = *(unsigned char *)(a2 + 152);
  uint64_t v17 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 104);
  uint64_t v20 = *(void *)(a1 + 112);
  uint64_t v21 = *(void *)(a1 + 120);
  uint64_t v22 = *(void *)(a1 + 128);
  uint64_t v23 = *(void *)(a1 + 136);
  uint64_t v24 = *(void *)(a1 + 144);
  char v25 = *(unsigned char *)(a1 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = v16;
  sub_1C03596EC(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSplitBackground(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 153)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSplitBackground(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 152) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 153) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 153) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSplitBackground()
{
  return &type metadata for FormatSplitBackground;
}

void *sub_1C03AA4E8(uint64_t a1)
{
  sub_1C03AAA3C(a1, (uint64_t)v69);
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v1);
  sub_1C0181BEC(0);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v41 = *(void *)(*(void *)(v2 - 8) + 72);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152A660;
  uint64_t v37 = v4;
  uint64_t v5 = (void *)(v4 + v3);
  sub_1C03AAA3C((uint64_t)v69, (uint64_t)v70);
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  if (sub_1C00A0A24(v70) != 1)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C0BA9458(v8);
    uint64_t v7 = v9;
    swift_bridgeObjectRelease();
  }
  sub_1C0433600(0x726F68636E412058, 0xE800000000000000, v6, v7, v5);
  uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v40 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v40(v5, 0, 1, v10);
  sub_1C03AAA3C((uint64_t)v69, (uint64_t)&v62);
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  if (sub_1C00A0A24(&v62) != 1)
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C0BA9458(v13);
    uint64_t v12 = v14;
    swift_bridgeObjectRelease();
  }
  char v39 = v5;
  sub_1C0433600(0x73656572676544, 0xE700000000000000, v11, v12, (void *)((char *)v5 + v41));
  v40((void *)((char *)v5 + v41), 0, 1, v10);
  sub_1C03AAA3C((uint64_t)v69, (uint64_t)v52);
  if (sub_1C00A0A24(v52) == 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    char v23 = -1;
  }
  else
  {
    uint64_t v15 = v53;
    uint64_t v16 = v54;
    uint64_t v17 = v55;
    uint64_t v18 = v56;
    uint64_t v19 = v57;
    uint64_t v20 = v58;
    uint64_t v21 = v59;
    uint64_t v22 = v60;
    char v23 = v61;
    sub_1C03A98B4(v53, v54, v55, v56, v57, v58, v59, v60, v61);
  }
  v67[0] = v15;
  v67[1] = v16;
  v67[2] = v17;
  v67[3] = v18;
  v67[4] = v19;
  v67[5] = v20;
  v67[6] = v21;
  v67[7] = v22;
  char v68 = v23;
  sub_1C043801C(0x646953207466654CLL, 0xE900000000000065, (uint64_t)v67, (void *)((char *)v39 + 2 * v41));
  v40((void *)((char *)v39 + 2 * v41), 0, 1, v10);
  sub_1C03AAA3C((uint64_t)v69, (uint64_t)v42);
  if (sub_1C00A0A24(v42) == 1)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    char v32 = -1;
  }
  else
  {
    uint64_t v24 = v43;
    uint64_t v25 = v44;
    uint64_t v26 = v45;
    uint64_t v27 = v46;
    uint64_t v28 = v47;
    uint64_t v29 = v48;
    uint64_t v30 = v49;
    uint64_t v31 = v50;
    char v32 = v51;
    sub_1C03A98B4(v43, v44, v45, v46, v47, v48, v49, v50, v51);
  }
  v65[0] = v24;
  v65[1] = v25;
  v65[2] = v26;
  v65[3] = v27;
  v65[4] = v28;
  v65[5] = v29;
  v65[6] = v30;
  v65[7] = v31;
  char v66 = v32;
  sub_1C043801C(0x6953207468676952, 0xEA00000000006564, (uint64_t)v65, (void *)((char *)v39 + 3 * v41));
  v40((void *)((char *)v39 + 3 * v41), 0, 1, v10);
  sub_1C09BCFA4(0x69562074696C7053, 0xEA00000000007765, 0, 0, v37, v63);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v33 = swift_allocObject();
  *(void *)(inited + 32) = v33;
  *(void *)(v33 + 48) = v64;
  long long v34 = v63[1];
  *(_OWORD *)(v33 + 16) = v63[0];
  *(_OWORD *)(v33 + 32) = v34;
  uint64_t v35 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v35;
}

uint64_t sub_1C03AAA3C(uint64_t a1, uint64_t a2)
{
  sub_1C03AAAA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C03AAAA0()
{
  if (!qword_1EA1A5F80)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A5F80);
    }
  }
}

uint64_t sub_1C03AAAF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C03AAB40(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1C05F71A8(0, v1, 0);
  uint64_t v2 = v23;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v5;
  uint64_t v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    unint64_t v13 = *(void *)(v23 + 16);
    unint64_t v14 = *(void *)(v23 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1) {
      uint64_t result = sub_1C05F71A8(v14 > 1, v13 + 1, 1);
    }
    *(void *)(v23 + 16) = v13 + 1;
    *(void *)(v23 + 8 * v13 + 32) = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      int64_t v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v20;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v20;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C03AAD40(uint64_t a1, void *a2)
{
  uint64_t v21 = type metadata accessor for FormatDerivedDataWarningError();
  uint64_t v5 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v18 = v2;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F72C0(0, v8, 0);
    uint64_t v9 = v22;
    uint64_t v10 = *(void *)(type metadata accessor for FormatDeprecationWarning(0) - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v20 = *(void *)(v10 + 72);
    sub_1C03A2DA0();
    uint64_t v19 = v12;
    do
    {
      unint64_t v13 = &v7[*(int *)(v19 + 48)];
      sub_1C03BCE44(v11, (uint64_t)v7, type metadata accessor for FormatDeprecationWarning);
      uint64_t v14 = a2[1];
      *(void *)unint64_t v13 = *a2;
      *((void *)v13 + 1) = v14;
      swift_storeEnumTagMultiPayload();
      uint64_t v22 = v9;
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v16 >= v15 >> 1)
      {
        sub_1C05F72C0(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v22;
      }
      *(void *)(v9 + 16) = v16 + 1;
      sub_1C03BCF1C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
      v11 += v20;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1C03AAF78@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  v460 = a2;
  v453 = a3;
  uint64_t v441 = a4;
  uint64_t v439 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v439);
  uint64_t v440 = (uint64_t)&v412 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v442 = (uint64_t)&v412 - v7;
  uint64_t v8 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v8 - 8);
  v443 = (uint64_t *)((char *)&v412 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v437 = (uint64_t)&v412 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v438 = (uint64_t)&v412 - v13;
  sub_1C03B73C4();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v434 = v14;
  uint64_t v435 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v436 = (uint64_t)&v412 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v430 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v431 = (uint64_t)&v412 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v432 = (uint64_t)&v412 - v20;
  uint64_t v21 = type metadata accessor for FormatSlotDefinition();
  uint64_t v429 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21 - 8);
  v433 = (uint64_t *)((char *)&v412 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03B8104(0, &qword_1EA1974C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v448 = (uint64_t)&v412 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  unint64_t v445 = (unint64_t)&v412 - v26;
  uint64_t v450 = type metadata accessor for FormatDerivedDataFile();
  unint64_t v446 = *(void *)(v450 - 8);
  MEMORY[0x1F4188790](v450);
  uint64_t v444 = (uint64_t)&v412 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v451 = (uint64_t)&v412 - v29;
  sub_1C03BC768(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  unint64_t v447 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30 - 8);
  v452 = (uint64_t *)((char *)&v412 - v31);
  uint64_t v32 = type metadata accessor for FormatOption();
  *(void *)&long long v458 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32 - 8);
  v457 = (uint64_t *)((char *)&v412 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03BC768(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v455 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34 - 8);
  v449 = (uint64_t *)((char *)&v412 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v36);
  v454 = (uint64_t *)((char *)&v412 - v37);
  uint64_t v38 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v39 = *(void *)(v38 - 8);
  v463 = (char *)v38;
  uint64_t v464 = v39;
  MEMORY[0x1F4188790](v38);
  uint64_t v428 = (uint64_t)&v412 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v41);
  uint64_t v427 = (uint64_t)&v412 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v426 = (uint64_t)&v412 - v44;
  MEMORY[0x1F4188790](v45);
  uint64_t v425 = (uint64_t)&v412 - v46;
  MEMORY[0x1F4188790](v47);
  v462 = (uint64_t *)((char *)&v412 - v48);
  MEMORY[0x1F4188790](v49);
  v465 = (ValueMetadata *)((char *)&v412 - v50);
  v461 = (const char *)type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v461);
  uint64_t v52 = (ValueMetadata *)((char *)&v412 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (uint64_t *)((char *)&v412 - v54);
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (ValueMetadata *)((char *)&v412 - v57);
  uint64_t v59 = type metadata accessor for FormatCompilingSlotDefinition(0);
  v456 = *(void **)(v59 - 8);
  MEMORY[0x1F4188790](v59 - 8);
  char v61 = (uint64_t *)((char *)&v412 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  uint64_t v62 = swift_bridgeObjectRetain();
  uint64_t v63 = v466;
  unint64_t v64 = sub_1C03B742C(v62, a1);
  if (v63)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v423 = v58;
  v424 = v55;
  v422 = v52;
  unint64_t v466 = v64;
  swift_bridgeObjectRelease();
  uint64_t v66 = a1;
  swift_release();
  swift_retain();
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_1C03B7F10(v67, a1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v472 = MEMORY[0x1E4FBC870];
  uint64_t v69 = v466;
  uint64_t v70 = *(void *)(v466 + 16);
  v420 = 0;
  uint64_t v421 = v68;
  if (v70)
  {
    v419 = (ValueMetadata *)a1;
    uint64_t v71 = v466 + ((*((unsigned __int8 *)v456 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v456 + 80));
    uint64_t v72 = v456[9];
    swift_bridgeObjectRetain();
    do
    {
      sub_1C03BCE44(v71, (uint64_t)v61, type metadata accessor for FormatCompilingSlotDefinition);
      uint64_t v73 = v472;
      uint64_t v74 = *v61;
      uint64_t v75 = v61[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v76 = sub_1BFF896B4(v74, v75, v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v76)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        type metadata accessor for FormatDerivedDataError();
        sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
        swift_allocError();
        uint64_t v92 = v61[1];
        *unint64_t v93 = *v61;
        v93[1] = v92;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        return sub_1C03BC9EC((uint64_t)v61, type metadata accessor for FormatCompilingSlotDefinition);
      }
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(v469, v74, v75);
      swift_bridgeObjectRelease();
      sub_1C03BC9EC((uint64_t)v61, type metadata accessor for FormatCompilingSlotDefinition);
      v71 += v72;
      --v70;
    }
    while (v70);
    uint64_t v77 = v466;
    swift_bridgeObjectRelease();
    uint64_t v69 = v77;
    uint64_t v66 = (uint64_t)v419;
  }
  uint64_t v78 = v69;
  type metadata accessor for FormatDerivedDataState();
  uint64_t v79 = (void *)swift_allocObject();
  uint64_t v80 = MEMORY[0x1E4FBC868];
  v79[5] = MEMORY[0x1E4FBC868];
  v79[6] = v80;
  v79[7] = v80;
  uint64_t v81 = v460;
  uint64_t v79[2] = v66;
  v79[3] = v81;
  v469[0] = v78;
  sub_1C03B8104(0, &qword_1EA19AAE8, type metadata accessor for FormatCompilingSlotDefinition, MEMORY[0x1E4FBB320]);
  uint64_t v83 = v82;
  uint64_t v84 = sub_1C03BC924(&qword_1EA19AAF0, &qword_1EA19AAE8, type metadata accessor for FormatCompilingSlotDefinition);
  uint64_t v85 = sub_1C03BC7D0(&qword_1EA19AAF8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
  swift_retain();
  uint64_t v86 = v83;
  swift_bridgeObjectRetain();
  v79[4] = sub_1C151E91C();
  unint64_t v87 = sub_1C10DD314();
  v456 = v79;
  uint64_t v88 = v420;
  sub_1C0BFA88C(v87);
  p_uint64_t Kind = v88;
  if (v88)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v416 = v85;
  unint64_t v417 = v84;
  swift_bridgeObjectRelease();
  unint64_t v90 = (uint64_t *)(v66 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  uint64_t v91 = swift_bridgeObjectRetain();
  sub_1C0BFA88C(v91);
  uint64_t v415 = v86;
  v419 = (ValueMetadata *)v66;
  swift_bridgeObjectRelease();
  uint64_t v94 = v421;
  v420 = (uint64_t *)sub_1BFFCDB8C(v421);
  v414 = v90;
  if (v420)
  {
    uint64_t v95 = v464;
    unint64_t v418 = v94 + ((*(unsigned __int8 *)(v464 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v464 + 80));
    unint64_t v96 = (char *)(v424 + 3);
    swift_bridgeObjectRetain();
    uint64_t v97 = 0;
    uint64_t v98 = v465;
    uint64_t v99 = v424;
    while (1)
    {
      uint64_t v100 = (uint64_t *)(v97 + 1);
      if (__OFADD__(v97, 1)) {
        break;
      }
      sub_1C03BCE44(v418 + *(void *)(v95 + 72) * v97, (uint64_t)v98, type metadata accessor for FormatPropertyDefinition);
      uint64_t *v99 = FormatPropertyDefinition.identifier.getter();
      v99[1] = v101;
      uint64_t v102 = (uint64_t)v98;
      uint64_t v103 = (uint64_t)v462;
      sub_1C03BCE44(v102, (uint64_t)v462, type metadata accessor for FormatPropertyDefinition);
      uint64_t v104 = qword_1C1544628[(int)swift_getEnumCaseMultiPayload()];
      uint64_t v105 = v103;
      uint64_t v98 = v465;
      sub_1C03BC9EC(v105, type metadata accessor for FormatPropertyDefinition);
      v99[2] = v104;
      *(void *)unint64_t v96 = 0;
      *((void *)v96 + 1) = 0;
      v96[16] = 0;
      uint64_t v106 = sub_1C01AFDB0(0);
      sub_1C03BC9EC((uint64_t)v98, type metadata accessor for FormatPropertyDefinition);
      v99[6] = v106;
      uint64_t v107 = (char *)v99 + *((int *)v461 + 7);
      uint64_t v108 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v107, 1, 1, v108);
      uint64_t v109 = v423;
      sub_1C03BCF1C((uint64_t)v99, (uint64_t)v423, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      sub_1C0BFAA10((uint64_t)v109);
      sub_1C03BC9EC((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      ++v97;
      uint64_t v95 = v464;
      if (v100 == v420)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_18:
  uint64_t v110 = (uint64_t *)((char *)&v419->Kind + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v420 = v110;
  uint64_t v111 = *v110;
  uint64_t v112 = (uint64_t *)sub_1BFFCDB8C(*v110);
  uint64_t v113 = v455;
  uint64_t v114 = MEMORY[0x1E4FBC868];
  uint64_t v115 = MEMORY[0x1E4FBC870];
  v424 = v112;
  if (!v112) {
    goto LABEL_28;
  }
  uint64_t v98 = (ValueMetadata *)(v111
                        + ((*(unsigned __int8 *)(v455 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v455 + 80)));
  swift_bridgeObjectRetain();
  unint64_t v116 = 0;
  v461 = (const char *)v111;
  v423 = v98;
  do
  {
    uint64_t v117 = (ValueMetadata *)p_Kind;
    unint64_t v118 = v116;
    sub_1C017C084(v116, 1, v111);
    uint64_t v119 = (uint64_t)v98 + *(void *)(v113 + 72) * v118;
    unint64_t v120 = v454;
    sub_1C03B8C94(v119, (uint64_t)v454, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v462 = (uint64_t *)(v118 + 1);
    if (__OFADD__(v118, 1))
    {
      __break(1u);
      goto LABEL_72;
    }
    uint64_t v98 = (ValueMetadata *)&qword_1EB874220;
    uint64_t v121 = (uint64_t)v120;
    v465 = (ValueMetadata *)v120[1];
    v463 = (char *)v120[3];
    uint64_t v122 = v120[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C03B8D08(v121, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v123 = sub_1BFFCDB8C(v122);
    if (v123)
    {
      uint64_t v124 = v123;
      uint64_t v125 = v458;
      unint64_t v126 = v122 + ((*(unsigned __int8 *)(v458 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v458 + 80));
      swift_bridgeObjectRetain();
      uint64_t v127 = 0;
      do
      {
        uint64_t v128 = v127 + 1;
        if (__OFADD__(v127, 1)) {
          goto LABEL_56;
        }
        uint64_t v129 = v457;
        sub_1C03BCE44(v126 + *(void *)(v125 + 72) * v127, (uint64_t)v457, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v98 = v422;
        sub_1C0C49248(v129, (uint64_t)v422);
        sub_1C0BFAA10((uint64_t)v98);
        sub_1C03BC9EC((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
        ++v127;
        uint64_t v125 = v458;
      }
      while (v128 != v124);
      swift_bridgeObjectRelease();
    }
    uint64_t v111 = (uint64_t)v461;
    swift_bridgeObjectRelease();
    uint64_t v98 = v423;
    unint64_t v116 = (unint64_t)v462;
    p_uint64_t Kind = &v117->Kind;
    uint64_t v113 = v455;
    uint64_t v114 = MEMORY[0x1E4FBC868];
  }
  while (v462 != v424);
  uint64_t v115 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
LABEL_28:
  type metadata accessor for FormatDerivedDataBinder();
  uint64_t v130 = (void *)swift_allocObject();
  v130[3] = v114;
  v130[4] = sub_1BFEACEF4();
  v130[5] = sub_1BFEACEF4();
  v130[6] = v115;
  v130[7] = v115;
  v469[0] = v466;
  v130[2] = sub_1C151E91C();
  uint64_t v131 = *v414;
  swift_bridgeObjectRetain();
  sub_1C139C058((uint64_t)v456, v131, &v473);
  v465 = (ValueMetadata *)(v130 + 4);
  swift_bridgeObjectRelease();
  sub_1BFE4F744(0, &qword_1EA19AB00);
  CGRect v133 = v132;
  uint64_t v134 = swift_allocObject();
  sub_1C00BC788(v134, 2);
  *uint64_t v135 = 1802;
  uint64_t v136 = nullsub_1();
  sub_1C0F4CEC0(v136, &v478);
  swift_bridgeObjectRelease();
  uint64_t v538 = v473.i64[0];
  sub_1BFCA59C8((uint64_t)&v538);
  uint64_t v537 = v473.i64[1];
  sub_1BFCA59C8((uint64_t)&v537);
  uint64_t v536 = v474;
  sub_1BFCA59C8((uint64_t)&v536);
  uint64_t v535 = v475;
  sub_1BFCA59C8((uint64_t)&v535);
  uint64_t v534 = v476;
  sub_1BFCA59C8((uint64_t)&v534);
  uint64_t v533 = v477;
  sub_1BFCA59C8((uint64_t)&v533);
  uint64_t v531 = v479;
  uint64_t v532 = v481;
  uint64_t v530 = v478;
  sub_1C0FA5A6C(v478, v479, v481);
  sub_1BFCA59C8((uint64_t)&v530);
  uint64_t v529 = *((void *)&v478 + 1);
  sub_1BFCA59C8((uint64_t)&v529);
  sub_1BFCA59C8((uint64_t)&v531);
  uint64_t v528 = v480;
  sub_1BFCA59C8((uint64_t)&v528);
  sub_1BFCA59C8((uint64_t)&v532);
  uint64_t v527 = v482;
  sub_1BFCA59C8((uint64_t)&v527);
  uint64_t v471 = MEMORY[0x1E4FBC870];
  uint64_t v470 = MEMORY[0x1E4FBC870];
  uint64_t v98 = v419;
  uint64_t v137 = (uint64_t *)((char *)&v419->Kind + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  uint64_t v138 = swift_beginAccess();
  uint64_t v117 = (ValueMetadata *)&v412;
  uint64_t v139 = *v137;
  MEMORY[0x1F4188790](v138);
  *(&v412 - 6) = (uint64_t)v453;
  *(&v412 - 5) = (uint64_t)&v471;
  uint64_t v140 = (uint64_t)v456;
  *(&v412 - 4) = (uint64_t)v460;
  *(&v412 - 3) = v140;
  *(&v412 - 2) = (uint64_t)v130;
  *(&v412 - 1) = (uint64_t)&v470;
  swift_bridgeObjectRetain();
  uint64_t v141 = sub_1C0184238((void (*)(uint64_t, uint64_t *))sub_1C03B8C6C, (uint64_t)(&v412 - 8), v139);
  v462 = v130;
  v463 = 0;
  v461 = v133;
  v457 = (void *)v141;
  v422 = (ValueMetadata *)(v130 + 6);
  v423 = (ValueMetadata *)(v130 + 7);
  swift_bridgeObjectRelease();
  if ((*((unsigned char *)&v98->Kind + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) & 0xFE) != 4)
  {
LABEL_57:
    sub_1BFE4F744(0, (unint64_t *)&unk_1EB87A8F0);
    uint64_t v179 = swift_allocObject();
    sub_1C00BC788(v179, 3);
    long long v458 = xmmword_1C15445C0;
    *(_OWORD *)uint64_t v180 = xmmword_1C15445C0;
    *(void *)(v180 + 16) = 18;
    uint64_t v181 = nullsub_1();
    uint64_t v182 = sub_1C0605C10(v181);
    swift_bridgeObjectRelease();
    if (*(void *)(v471 + 16) <= *(void *)(v182 + 16) >> 3)
    {
      v469[0] = v182;
      uint64_t v185 = swift_bridgeObjectRetain();
      sub_1C0A8BEA4(v185);
      swift_bridgeObjectRelease();
      uint64_t v184 = v469[0];
    }
    else
    {
      uint64_t v183 = swift_bridgeObjectRetain();
      uint64_t v184 = sub_1C0A8C018(v183, v182);
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v184 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      v187 = v186;
      uint64_t v188 = sub_1BFF8F6B0(v184);
      swift_bridgeObjectRelease();
      v469[0] = (uint64_t)v188;
      swift_retain();
      uint64_t v189 = v463;
      sub_1BFF8F94C(v469);
      if (v189) {
        goto LABEL_307;
      }
      swift_release();
      uint64_t v190 = v469[0];
      uint64_t v191 = swift_allocObject();
      sub_1C00BC788(v191, 3);
      *(_OWORD *)uint64_t v192 = v458;
      *(void *)(v192 + 16) = 18;
      uint64_t v193 = nullsub_1();
      uint64_t v194 = sub_1C0605C10(v193);
      swift_bridgeObjectRelease();
      v195 = sub_1BFF8F6B0(v194);
      swift_bridgeObjectRelease();
      v469[0] = (uint64_t)v195;
      swift_retain();
      sub_1BFF8F94C(v469);
      swift_release();
      uint64_t v196 = v469[0];
      swift_bridgeObjectRelease();
      uint64_t *v187 = v190;
      v187[1] = v196;
      swift_storeEnumTagMultiPayload();
LABEL_69:
      swift_willThrow();
      swift_release();
      goto LABEL_70;
    }
    swift_bridgeObjectRelease();
    uint64_t v197 = v472;
    if (*(void *)(v470 + 16) <= *(void *)(v472 + 16) >> 3)
    {
      v469[0] = v472;
      swift_bridgeObjectRetain();
      uint64_t v199 = swift_bridgeObjectRetain();
      sub_1C0A8BCFC(v199);
      swift_bridgeObjectRelease();
      uint64_t v117 = (ValueMetadata *)v469[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v198 = swift_bridgeObjectRetain();
      uint64_t v117 = (ValueMetadata *)sub_1BFC63BD0(v198, v197);
      swift_bridgeObjectRelease();
    }
    if (v117[1].Kind)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      v201 = v200;
      uint64_t v202 = sub_1BFE71F8C((uint64_t)v117);
      swift_bridgeObjectRelease();
      v469[0] = (uint64_t)v202;
      swift_retain();
      uint64_t v203 = v463;
      sub_1BFFCDDC4(v469);
      if (v203) {
        goto LABEL_307;
      }
      swift_release();
      uint64_t v204 = v469[0];
      swift_bridgeObjectRelease();
      uint64_t *v201 = v204;
      swift_storeEnumTagMultiPayload();
      goto LABEL_69;
    }
LABEL_72:
    swift_bridgeObjectRelease();
  }
  uint64_t v142 = (void **)((char *)v419 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  v424 = (uint64_t *)*v142;
  v454 = (void *)sub_1BFFCDB8C((uint64_t)v424);
  if (!v454) {
    goto LABEL_41;
  }
  unint64_t v143 = v447;
  *(void *)&long long v458 = (char *)v424
                   + ((*(unsigned __int8 *)(v447 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v447 + 80));
  v144 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v446 + 56);
  uint64_t v145 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v446 + 48);
  uint64_t v146 = swift_bridgeObjectRetain();
  uint64_t v147 = 0;
  uint64_t v98 = &type metadata for FormatDecoration;
  uint64_t v149 = v452;
  v148 = v453;
  while (2)
  {
    uint64_t v150 = (void *)(v147 + 1);
    if (__OFADD__(v147, 1))
    {
      __break(1u);
      goto LABEL_96;
    }
    uint64_t v117 = v98;
    sub_1C03B8C94(v458 + *(void *)(v143 + 72) * v147, (uint64_t)v149, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)v98, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    __swift_project_boxed_opaque_existential_1(v148, v148[3]);
    if (sub_1C151890C())
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C03B8D08((uint64_t)v452, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
LABEL_82:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_86;
    }
    if (!v460[2])
    {
      uint64_t v155 = v445;
      (*v144)(v445, 1, 1, v450);
LABEL_79:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C03BCEAC(v155, &qword_1EA1974C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      v207 = v452;
      uint64_t v208 = v452[1];
      *(void *)uint64_t v209 = *v452;
      *(void *)(v209 + 8) = v208;
      *(unsigned char *)(v209 + 16) = 6;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      swift_release();
      v210 = &qword_1EB874180;
      v211 = &type metadata for FormatDecoration;
      uint64_t v212 = sub_1C00F6ACC;
LABEL_85:
      sub_1C03B8D08((uint64_t)v207, (unint64_t *)v210, (uint64_t (*)(void))v212, (uint64_t)v211);
      goto LABEL_86;
    }
    uint64_t v151 = *v452;
    uint64_t v152 = v452[1];
    swift_bridgeObjectRetain();
    unint64_t v153 = sub_1C1052498(v151, v152, 6u);
    if (v154)
    {
      uint64_t v155 = v445;
      sub_1C03BCE44(v460[7] + *(void *)(v446 + 72) * v153, v445, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      uint64_t v156 = 0;
    }
    else
    {
      uint64_t v156 = 1;
      uint64_t v155 = v445;
    }
    uint64_t v157 = v450;
    (*v144)(v155, v156, 1, v450);
    swift_bridgeObjectRelease();
    int v158 = (*v145)(v155, 1, v157);
    uint64_t v159 = (uint64_t)v456;
    if (v158 == 1) {
      goto LABEL_79;
    }
    sub_1C03BCF1C(v155, v451, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    unint64_t v160 = v463;
    sub_1C139C538(v159, &v483);
    if (v160)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C03BC9EC(v451, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      sub_1C03B8D08((uint64_t)v452, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
LABEL_88:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v161 = swift_allocObject();
    sub_1C00BC788(v161, 2);
    *unint64_t v162 = 10;
    uint64_t v163 = nullsub_1();
    sub_1C0F4CEC0(v163, &v488);
    swift_bridgeObjectRelease();
    v526[0] = v483;
    sub_1BFCA59C8((uint64_t)v526);
    uint64_t v525 = *((void *)&v483 + 1);
    sub_1BFCA59C8((uint64_t)&v525);
    uint64_t v524 = v484;
    sub_1BFCA59C8((uint64_t)&v524);
    uint64_t v523 = v485;
    sub_1BFCA59C8((uint64_t)&v523);
    uint64_t v522 = v486;
    sub_1BFCA59C8((uint64_t)&v522);
    uint64_t v521 = v487;
    sub_1BFCA59C8((uint64_t)&v521);
    uint64_t v520 = v491;
    uint64_t v519 = v489;
    uint64_t v518 = v488;
    sub_1C0FA5A6C(v488, v489, v491);
    v463 = 0;
    sub_1BFCA59C8((uint64_t)&v518);
    v517[0] = *((void *)&v488 + 1);
    sub_1BFCA59C8((uint64_t)v517);
    sub_1BFCA59C8((uint64_t)&v519);
    uint64_t v516 = v490;
    sub_1BFCA59C8((uint64_t)&v516);
    sub_1BFCA59C8((uint64_t)&v520);
    uint64_t v515 = v492;
    sub_1BFCA59C8((uint64_t)&v515);
    sub_1C03BC9EC(v451, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    uint64_t v149 = v452;
    uint64_t v98 = v117;
    uint64_t v146 = sub_1C03B8D08((uint64_t)v452, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)v117);
    ++v147;
    v148 = v453;
    unint64_t v143 = v447;
    if (v150 != v454) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_41:
  v454 = (void *)*v420;
  uint64_t v164 = sub_1BFFCDB8C((uint64_t)v454);
  if (!v164) {
    goto LABEL_53;
  }
  uint64_t v117 = (ValueMetadata *)v164;
  *(void *)&long long v458 = (char *)v454
                   + ((*(unsigned __int8 *)(v455 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v455 + 80));
  unint64_t v165 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v446 + 56);
  uint64_t v145 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v446 + 48);
  swift_bridgeObjectRetain();
  uint64_t v166 = 0;
  while (2)
  {
    uint64_t v167 = v166 + 1;
    if (__OFADD__(v166, 1))
    {
      __break(1u);
      goto LABEL_99;
    }
    sub_1C03B8C94(v458 + *(void *)(v455 + 72) * v166, (uint64_t)v449, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    __swift_project_boxed_opaque_existential_1(v453, v453[3]);
    if (sub_1C151890C())
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C03B8D08((uint64_t)v449, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
      goto LABEL_82;
    }
    if (!v460[2])
    {
      (*v165)(v448, 1, 1, v450);
LABEL_84:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C03BCEAC(v448, &qword_1EA1974C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      v207 = v449;
      uint64_t v213 = v449[1];
      *(void *)uint64_t v214 = *v449;
      *(void *)(v214 + 8) = v213;
      *(unsigned char *)(v214 + 16) = 3;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      swift_release();
      v210 = &qword_1EB874220;
      v211 = &type metadata for FormatStyle;
      uint64_t v212 = sub_1C00F6C5C;
      goto LABEL_85;
    }
    uint64_t v168 = *v449;
    uint64_t v169 = v449[1];
    swift_bridgeObjectRetain();
    unint64_t v170 = sub_1C1052498(v168, v169, 3u);
    if (v171)
    {
      sub_1C03BCE44(v460[7] + *(void *)(v446 + 72) * v170, v448, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      uint64_t v172 = 0;
    }
    else
    {
      uint64_t v172 = 1;
    }
    uint64_t v173 = v448;
    uint64_t v174 = v450;
    (*v165)(v448, v172, 1, v450);
    swift_bridgeObjectRelease();
    if ((*v145)(v173, 1, v174) == 1) {
      goto LABEL_84;
    }
    sub_1C03BCF1C(v448, v444, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    unint64_t v175 = v463;
    sub_1C139C538((uint64_t)v456, &v493);
    uint64_t v98 = (ValueMetadata *)v175;
    if (v175)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C03BC9EC(v444, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      sub_1C03B8D08((uint64_t)v449, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
      goto LABEL_88;
    }
    uint64_t v176 = swift_allocObject();
    sub_1C00BC788(v176, 2);
    *uint64_t v177 = 778;
    uint64_t v178 = nullsub_1();
    sub_1C0F4CEC0(v178, &v498);
    swift_bridgeObjectRelease();
    v514[0] = v493;
    sub_1BFCA59C8((uint64_t)v514);
    uint64_t v513 = *((void *)&v493 + 1);
    sub_1BFCA59C8((uint64_t)&v513);
    uint64_t v512 = v494;
    sub_1BFCA59C8((uint64_t)&v512);
    uint64_t v511 = v495;
    sub_1BFCA59C8((uint64_t)&v511);
    uint64_t v510 = v496;
    sub_1BFCA59C8((uint64_t)&v510);
    uint64_t v509 = v497;
    sub_1BFCA59C8((uint64_t)&v509);
    uint64_t v508 = v501;
    uint64_t v507 = v499;
    uint64_t v506 = v498;
    sub_1C0FA5A6C(v498, v499, v501);
    v463 = 0;
    sub_1BFCA59C8((uint64_t)&v506);
    v505[0] = *((void *)&v498 + 1);
    sub_1BFCA59C8((uint64_t)v505);
    sub_1BFCA59C8((uint64_t)&v507);
    uint64_t v504 = v500;
    sub_1BFCA59C8((uint64_t)&v504);
    sub_1BFCA59C8((uint64_t)&v508);
    uint64_t v503 = v502;
    sub_1BFCA59C8((uint64_t)&v503);
    sub_1C03BC9EC(v444, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    sub_1C03B8D08((uint64_t)v449, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
    ++v166;
    if ((ValueMetadata *)v167 != v117) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_53:
  __swift_project_boxed_opaque_existential_1(v453, v453[3]);
  if (sub_1C151890C())
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_74;
  }
  uint64_t v205 = v463;
  uint64_t v206 = sub_1C03B012C((uint64_t)v457, (uint64_t (*)(char *))sub_1C03B0118, 0);
  if (v205)
  {
LABEL_74:
    swift_release();
    goto LABEL_75;
  }
  uint64_t v117 = (ValueMetadata *)v206;
  __swift_project_boxed_opaque_existential_1(v453, v453[3]);
  if (sub_1C151890C())
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_91;
  }
  uint64_t v145 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_1C03B012C((uint64_t)v457, (uint64_t (*)(char *))sub_1C03B04CC, 0);
  __swift_project_boxed_opaque_existential_1(v453, v453[3]);
  if (sub_1C151890C())
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_91:
    swift_bridgeObjectRelease();
LABEL_75:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_76:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_86;
  }
  uint64_t v146 = sub_1C03B012C((uint64_t)v457, (uint64_t (*)(char *))sub_1C03B04E0, 0);
  uint64_t v98 = 0;
LABEL_96:
  uint64_t v167 = v146;
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v453, v453[3]);
  if (sub_1C151890C())
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
LABEL_99:
  v469[0] = (uint64_t)v117;
  sub_1BFFC6038((uint64_t)v145);
  sub_1BFFC6038(v167);
  uint64_t v215 = v469[0];
  uint64_t v216 = sub_1C01AFB00(0);
  if (sub_1BFFCDB8C(v216)) {
    uint64_t v217 = sub_1C00B818C(v216);
  }
  else {
    uint64_t v217 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  uint64_t v218 = sub_1C03BA82C(v215, v217);
  if (v98)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_86;
  }
  uint64_t v219 = v218;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v469[0] = v219;
  sub_1C03B8104(0, &qword_1EB879E50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, MEMORY[0x1E4FBB320]);
  sub_1C03BC924(&qword_1EA19AB08, &qword_1EB879E50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  sub_1C03BC7D0(&qword_1EA19AB10, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  uint64_t v220 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  uint64_t v221 = (uint64_t)v419;
  swift_retain();
  swift_bridgeObjectRetain();
  *(void *)&long long v458 = sub_1C03B8680(v466, v220, v221);
  v460 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  uint64_t v222 = swift_allocObject();
  v454 = (void *)v222;
  *(void *)(v222 + 16) = MEMORY[0x1E4FBC868];
  v457 = (void *)(v222 + 16);
  uint64_t v448 = sub_1BFFCDB8C(v458);
  if (v448)
  {
    v452 = (void *)OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings;
    v449 = (void *)(v458
                    + ((*(unsigned __int8 *)(v429 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v429 + 80)));
    swift_bridgeObjectRetain();
    unint64_t v223 = 0;
    unint64_t v466 = (unint64_t)"ration";
    unint64_t v446 = 0x80000001C15FCF70;
    v463 = "unusedProperties";
    v461 = "duplicateNewsroomIdentifiers";
    do
    {
      sub_1C017C084(v223, 1, v458);
      unint64_t v447 = v223 + 1;
      if (__OFADD__(v223, 1)) {
        goto LABEL_299;
      }
      uint64_t v224 = (uint64_t)v449 + *(void *)(v429 + 72) * v223;
      uint64_t v225 = v433;
      sub_1C03BCE44(v224, (uint64_t)v433, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v455 = v225[8];
      uint64_t v450 = sub_1BFFCDB8C(v455);
      if (v450)
      {
        uint64_t v451 = v455 + ((*(unsigned __int8 *)(v464 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v464 + 80));
        swift_bridgeObjectRetain();
        unint64_t v226 = 0;
        do
        {
          sub_1C017C084(v226, 1, v455);
          unint64_t v230 = v226 + 1;
          if (__OFADD__(v226, 1)) {
            goto LABEL_298;
          }
          uint64_t v231 = v451 + *(void *)(v464 + 72) * v226;
          uint64_t v232 = v425;
          sub_1C03BCE44(v231, v425, type metadata accessor for FormatPropertyDefinition);
          v233 = v460;
          sub_1C03B0680((uint64_t)v462, v232, v433);
          if (v233)
          {
            uint64_t v234 = *(void *)((char *)v452 + v459);
            if (!*(void *)(v234 + 16)
              || (sub_1C1520DBC(),
                  sub_1C151E77C(),
                  uint64_t v235 = sub_1C1520E0C(),
                  uint64_t v236 = -1 << *(unsigned char *)(v234 + 32),
                  unint64_t v237 = v235 & ~v236,
                  ((*(void *)(v234 + 56 + ((v237 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v237) & 1) == 0))
            {
LABEL_266:
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v370 = v425;
              goto LABEL_292;
            }
            v460 = 0;
            uint64_t v238 = ~v236;
            while (1)
            {
              int v239 = *(unsigned __int8 *)(*(void *)(v234 + 48) + v237);
              if (v239 != 1 && v239 != 2) {
                break;
              }
              char v240 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              if (v240) {
                goto LABEL_122;
              }
              unint64_t v237 = (v237 + 1) & v238;
              if (((*(void *)(v234 + 56 + ((v237 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v237) & 1) == 0) {
                goto LABEL_266;
              }
            }
            swift_bridgeObjectRelease();
LABEL_122:
          }
          else
          {
            v460 = 0;
          }
          uint64_t v228 = *v433;
          uint64_t v227 = v433[1];
          swift_bridgeObjectRetain();
          uint64_t v229 = v425;
          sub_1C03B0504(v425, v228, v227, 0, (uint64_t)v454);
          swift_bridgeObjectRelease();
          sub_1C03BC9EC(v229, type metadata accessor for FormatPropertyDefinition);
          unint64_t v226 = v230;
        }
        while (v230 != v450);
        swift_bridgeObjectRelease();
      }
      uint64_t v451 = v433[6];
      v424 = (uint64_t *)sub_1BFFCDB8C(v451);
      if (v424)
      {
        unint64_t v417 = (*(unsigned __int8 *)(v430 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80);
        uint64_t v444 = v451 + v417;
        swift_bridgeObjectRetain();
        unint64_t v241 = 0;
        do
        {
          sub_1C017C084(v241, 1, v451);
          v420 = (uint64_t *)(v241 + 1);
          if (__OFADD__(v241, 1)) {
            goto LABEL_302;
          }
          unint64_t v418 = *(void *)(v430 + 72);
          uint64_t v242 = v444 + v418 * v241;
          uint64_t v243 = v432;
          sub_1C03BCE44(v242, v432, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v455 = *(void *)(v243 + 16);
          unint64_t v445 = sub_1BFFCDB8C(v455);
          if (v445)
          {
            uint64_t v450 = v455
                 + ((*(unsigned __int8 *)(v464 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v464 + 80));
            swift_bridgeObjectRetain();
            unint64_t v244 = 0;
            do
            {
              sub_1C017C084(v244, 1, v455);
              unint64_t v245 = v244 + 1;
              if (__OFADD__(v244, 1)) {
                goto LABEL_300;
              }
              uint64_t v246 = v450 + *(void *)(v464 + 72) * v244;
              uint64_t v247 = v426;
              sub_1C03BCE44(v246, v426, type metadata accessor for FormatPropertyDefinition);
              uint64_t v248 = v460;
              sub_1C03B120C((uint64_t)v462, v247, v433);
              if (v248)
              {
                uint64_t v249 = *(void *)((char *)v452 + v459);
                if (!*(void *)(v249 + 16)
                  || (sub_1C1520DBC(),
                      sub_1C151E77C(),
                      uint64_t v250 = sub_1C1520E0C(),
                      uint64_t v251 = -1 << *(unsigned char *)(v249 + 32),
                      unint64_t v252 = v250 & ~v251,
                      ((*(void *)(v249 + 56 + ((v252 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v252) & 1) == 0))
                {
LABEL_268:
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  sub_1C03BC9EC(v432, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v370 = v426;
                  goto LABEL_292;
                }
                v460 = 0;
                uint64_t v253 = ~v251;
                while (1)
                {
                  int v254 = *(unsigned __int8 *)(*(void *)(v249 + 48) + v252);
                  if (v254 != 1 && v254 != 2) {
                    break;
                  }
                  char v255 = sub_1C1520A9C();
                  swift_bridgeObjectRelease();
                  if (v255) {
                    goto LABEL_141;
                  }
                  unint64_t v252 = (v252 + 1) & v253;
                  if (((*(void *)(v249 + 56 + ((v252 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v252) & 1) == 0) {
                    goto LABEL_268;
                  }
                }
                swift_bridgeObjectRelease();
LABEL_141:
              }
              else
              {
                v460 = 0;
              }
              uint64_t v257 = *v433;
              uint64_t v256 = v433[1];
              swift_bridgeObjectRetain();
              uint64_t v258 = FormatPropertyDefinition.identifier.getter();
              uint64_t v260 = v259;
              v261 = v457;
              swift_beginAccess();
              uint64_t v262 = *v261;
              if (*(void *)(v262 + 16) && (unint64_t v263 = sub_1BFEF2D8C(v258, v260), (v264 & 1) != 0))
              {
                uint64_t v265 = *(void *)(*(void *)(v262 + 56) + 8 * v263);
                swift_bridgeObjectRetain();
              }
              else
              {
                uint64_t v266 = sub_1C01AFFF0(0);
                if (sub_1BFFCDB8C(v266))
                {
                  uint64_t v265 = sub_1C00B9C74(v266);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_bridgeObjectRelease();
                  uint64_t v265 = MEMORY[0x1E4FBC870];
                }
              }
              swift_bridgeObjectRelease();
              swift_endAccess();
              sub_1C1520DBC();
              sub_1C1520DCC();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C151E77C();
              uint64_t v267 = sub_1C1520E0C();
              uint64_t v268 = -1 << *(unsigned char *)(v265 + 32);
              unint64_t v269 = v267 & ~v268;
              if ((*(void *)(v265 + 56 + ((v269 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v269))
              {
                uint64_t v270 = ~v268;
                uint64_t v271 = *(void *)(v265 + 48);
                while (1)
                {
                  uint64_t v272 = v271 + 24 * v269;
                  if (*(unsigned char *)(v272 + 16) == 2)
                  {
                    BOOL v273 = *(void *)v272 == v257 && *(void *)(v272 + 8) == v256;
                    if (v273 || (sub_1C1520A9C() & 1) != 0) {
                      break;
                    }
                  }
                  unint64_t v269 = (v269 + 1) & v270;
                  if (((*(void *)(v265 + 56 + ((v269 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v269) & 1) == 0) {
                    goto LABEL_158;
                  }
                }
                swift_bridgeObjectRelease();
              }
              else
              {
LABEL_158:
                swift_bridgeObjectRelease();
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v468 = v265;
                unint64_t v275 = *(void *)(v265 + 16);
                unint64_t v276 = *(void *)(v265 + 24);
                swift_bridgeObjectRetain();
                if (v276 <= v275)
                {
                  if (isUniquelyReferenced_nonNull_native) {
                    sub_1C02BDB94();
                  }
                  else {
                    sub_1C02CA73C();
                  }
                  uint64_t v265 = v468;
                  sub_1C1520DBC();
                  sub_1C1520DCC();
                  sub_1C151E77C();
                  uint64_t v277 = sub_1C1520E0C();
                  uint64_t v278 = -1 << *(unsigned char *)(v265 + 32);
                  unint64_t v269 = v277 & ~v278;
                  if ((*(void *)(v265 + 56 + ((v269 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v269))
                  {
                    uint64_t v279 = ~v278;
                    uint64_t v280 = *(void *)(v265 + 48);
                    do
                    {
                      uint64_t v281 = v280 + 24 * v269;
                      if (*(unsigned char *)(v281 + 16) == 2)
                      {
                        BOOL v282 = *(void *)v281 == v257 && *(void *)(v281 + 8) == v256;
                        if (v282 || (sub_1C1520A9C() & 1) != 0) {
                          goto LABEL_308;
                        }
                      }
                      unint64_t v269 = (v269 + 1) & v279;
                    }
                    while (((*(void *)(v265 + 56 + ((v269 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v269) & 1) != 0);
                  }
                }
                else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1C02C7360();
                  uint64_t v265 = v468;
                }
                *(void *)(v265 + ((v269 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v269;
                uint64_t v283 = *(void *)(v265 + 48) + 24 * v269;
                *(void *)uint64_t v283 = v257;
                *(void *)(v283 + 8) = v256;
                *(unsigned char *)(v283 + 16) = 2;
                uint64_t v284 = *(void *)(v265 + 16);
                BOOL v285 = __OFADD__(v284, 1);
                uint64_t v286 = v284 + 1;
                if (v285) {
                  goto LABEL_301;
                }
                *(void *)(v265 + 16) = v286;
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              uint64_t v287 = v426;
              uint64_t v288 = FormatPropertyDefinition.identifier.getter();
              uint64_t v290 = v289;
              v291 = v457;
              swift_beginAccess();
              char v292 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v468 = *v291;
              uint64_t *v291 = 0x8000000000000000;
              sub_1C10678BC(v265, v288, v290, v292);
              uint64_t *v291 = v468;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
              swift_bridgeObjectRelease();
              sub_1C03BC9EC(v287, type metadata accessor for FormatPropertyDefinition);
              unint64_t v244 = v245;
            }
            while (v245 != v445);
            swift_bridgeObjectRelease();
          }
          uint64_t v455 = *(void *)(v432 + 24);
          if (v455)
          {
            uint64_t v450 = *(void *)(v432 + 32);
            uint64_t v416 = sub_1BFFCDB8C(v455);
            if (v416)
            {
              uint64_t v293 = v455;
              sub_1BFDB3920(v455);
              unint64_t v445 = v293
                   + ((*(unsigned __int8 *)(v464 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v464 + 80));
              swift_bridgeObjectRetain();
              unint64_t v294 = 0;
              do
              {
                sub_1C017C084(v294, 1, v455);
                unint64_t v295 = v294 + 1;
                if (__OFADD__(v294, 1)) {
                  goto LABEL_303;
                }
                uint64_t v296 = v445 + *(void *)(v464 + 72) * v294;
                uint64_t v297 = v427;
                sub_1C03BCE44(v296, v427, type metadata accessor for FormatPropertyDefinition);
                v298 = v460;
                sub_1C03B1BF4((uint64_t)v462, v297, v433);
                if (v298)
                {
                  uint64_t v299 = *(void *)((char *)v452 + v459);
                  if (!*(void *)(v299 + 16)
                    || (sub_1C1520DBC(),
                        sub_1C151E77C(),
                        uint64_t v300 = sub_1C1520E0C(),
                        uint64_t v301 = -1 << *(unsigned char *)(v299 + 32),
                        unint64_t v302 = v300 & ~v301,
                        ((*(void *)(v299 + 56 + ((v302 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v302) & 1) == 0))
                  {
LABEL_269:
                    swift_willThrow();
                    swift_release();
                    swift_release();
                    sub_1BFDB3960(v455);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1C03BC9EC(v432, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v370 = v427;
                    goto LABEL_292;
                  }
                  v460 = 0;
                  uint64_t v303 = ~v301;
                  while (1)
                  {
                    int v304 = *(unsigned __int8 *)(*(void *)(v299 + 48) + v302);
                    if (v304 != 1 && v304 != 2) {
                      break;
                    }
                    char v305 = sub_1C1520A9C();
                    swift_bridgeObjectRelease();
                    if (v305) {
                      goto LABEL_193;
                    }
                    unint64_t v302 = (v302 + 1) & v303;
                    if (((*(void *)(v299 + 56 + ((v302 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v302) & 1) == 0) {
                      goto LABEL_269;
                    }
                  }
                  swift_bridgeObjectRelease();
LABEL_193:
                }
                else
                {
                  v460 = 0;
                }
                uint64_t v307 = *v433;
                uint64_t v306 = v433[1];
                swift_bridgeObjectRetain();
                uint64_t v308 = FormatPropertyDefinition.identifier.getter();
                uint64_t v310 = v309;
                v311 = v457;
                swift_beginAccess();
                uint64_t v312 = *v311;
                if (*(void *)(v312 + 16) && (unint64_t v313 = sub_1BFEF2D8C(v308, v310), (v314 & 1) != 0))
                {
                  uint64_t v315 = *(void *)(*(void *)(v312 + 56) + 8 * v313);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  uint64_t v316 = sub_1C01AFFF0(0);
                  if (sub_1BFFCDB8C(v316))
                  {
                    uint64_t v315 = sub_1C00B9C74(v316);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v315 = MEMORY[0x1E4FBC870];
                  }
                }
                swift_bridgeObjectRelease();
                swift_endAccess();
                sub_1C1520DBC();
                sub_1C1520DCC();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C151E77C();
                uint64_t v317 = sub_1C1520E0C();
                uint64_t v318 = -1 << *(unsigned char *)(v315 + 32);
                unint64_t v319 = v317 & ~v318;
                if ((*(void *)(v315 + 56 + ((v319 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v319))
                {
                  uint64_t v320 = ~v318;
                  uint64_t v321 = *(void *)(v315 + 48);
                  while (1)
                  {
                    uint64_t v322 = v321 + 24 * v319;
                    if (*(unsigned char *)(v322 + 16) == 3)
                    {
                      BOOL v323 = *(void *)v322 == v307 && *(void *)(v322 + 8) == v306;
                      if (v323 || (sub_1C1520A9C() & 1) != 0) {
                        break;
                      }
                    }
                    unint64_t v319 = (v319 + 1) & v320;
                    if (((*(void *)(v315 + 56 + ((v319 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v319) & 1) == 0) {
                      goto LABEL_210;
                    }
                  }
                  swift_bridgeObjectRelease();
                }
                else
                {
LABEL_210:
                  swift_bridgeObjectRelease();
                  int v324 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v468 = v315;
                  unint64_t v325 = *(void *)(v315 + 16);
                  unint64_t v326 = *(void *)(v315 + 24);
                  swift_bridgeObjectRetain();
                  if (v326 <= v325)
                  {
                    if (v324) {
                      sub_1C02BDB94();
                    }
                    else {
                      sub_1C02CA73C();
                    }
                    uint64_t v315 = v468;
                    sub_1C1520DBC();
                    sub_1C1520DCC();
                    sub_1C151E77C();
                    uint64_t v327 = sub_1C1520E0C();
                    uint64_t v328 = -1 << *(unsigned char *)(v315 + 32);
                    unint64_t v319 = v327 & ~v328;
                    if ((*(void *)(v315 + 56 + ((v319 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v319))
                    {
                      uint64_t v329 = ~v328;
                      uint64_t v330 = *(void *)(v315 + 48);
                      do
                      {
                        uint64_t v331 = v330 + 24 * v319;
                        if (*(unsigned char *)(v331 + 16) == 3)
                        {
                          BOOL v332 = *(void *)v331 == v307 && *(void *)(v331 + 8) == v306;
                          if (v332 || (sub_1C1520A9C() & 1) != 0) {
                            goto LABEL_308;
                          }
                        }
                        unint64_t v319 = (v319 + 1) & v329;
                      }
                      while (((*(void *)(v315 + 56 + ((v319 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v319) & 1) != 0);
                    }
                  }
                  else if ((v324 & 1) == 0)
                  {
                    sub_1C02C7360();
                    uint64_t v315 = v468;
                  }
                  *(void *)(v315 + ((v319 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v319;
                  uint64_t v333 = *(void *)(v315 + 48) + 24 * v319;
                  *(void *)uint64_t v333 = v307;
                  *(void *)(v333 + 8) = v306;
                  *(unsigned char *)(v333 + 16) = 3;
                  uint64_t v334 = *(void *)(v315 + 16);
                  BOOL v285 = __OFADD__(v334, 1);
                  uint64_t v335 = v334 + 1;
                  if (v285) {
                    goto LABEL_304;
                  }
                  *(void *)(v315 + 16) = v335;
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                uint64_t v336 = v427;
                uint64_t v337 = FormatPropertyDefinition.identifier.getter();
                uint64_t v339 = v338;
                v340 = v457;
                swift_beginAccess();
                char v341 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v468 = *v340;
                uint64_t *v340 = 0x8000000000000000;
                sub_1C10678BC(v315, v337, v339, v341);
                uint64_t *v340 = v468;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_endAccess();
                swift_bridgeObjectRelease();
                sub_1C03BC9EC(v336, type metadata accessor for FormatPropertyDefinition);
                unint64_t v294 = v295;
              }
              while (v295 != v416);
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            uint64_t v342 = v450;
            swift_bridgeObjectRetain();
            sub_1BFDB3960(v455);
            uint64_t v413 = sub_1BFFCDB8C(v342);
            if (v413)
            {
              unint64_t v343 = 0;
              uint64_t v415 = v450 + v417;
              do
              {
                sub_1C017C084(v343, 1, v450);
                v414 = (uint64_t *)(v343 + 1);
                if (__OFADD__(v343, 1)) {
                  goto LABEL_306;
                }
                uint64_t v344 = v415 + v343 * v418;
                uint64_t v345 = v431;
                sub_1C03BCE44(v344, v431, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
                uint64_t v455 = *(void *)(v345 + 16);
                uint64_t v416 = sub_1BFFCDB8C(v455);
                if (v416)
                {
                  unint64_t v445 = v455
                       + ((*(unsigned __int8 *)(v464 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v464 + 80));
                  swift_bridgeObjectRetain();
                  unint64_t v346 = 0;
                  do
                  {
                    sub_1C017C084(v346, 1, v455);
                    unint64_t v350 = v346 + 1;
                    if (__OFADD__(v346, 1)) {
                      goto LABEL_305;
                    }
                    uint64_t v351 = v445 + *(void *)(v464 + 72) * v346;
                    uint64_t v352 = v428;
                    sub_1C03BCE44(v351, v428, type metadata accessor for FormatPropertyDefinition);
                    v353 = v460;
                    sub_1C03B22BC((uint64_t)v462, v352, (uint64_t)v433);
                    if (v353)
                    {
                      uint64_t v354 = *(void *)((char *)v452 + v459);
                      if (!*(void *)(v354 + 16)
                        || (sub_1C1520DBC(),
                            sub_1C151E77C(),
                            uint64_t v355 = sub_1C1520E0C(),
                            uint64_t v356 = -1 << *(unsigned char *)(v354 + 32),
                            unint64_t v357 = v355 & ~v356,
                            ((*(void *)(v354 + 56 + ((v357 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v357) & 1) == 0))
                      {
LABEL_291:
                        swift_willThrow();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        sub_1C03BC9EC(v431, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
                        swift_bridgeObjectRelease();
                        sub_1C03BC9EC(v432, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v370 = v428;
LABEL_292:
                        sub_1C03BC9EC(v370, type metadata accessor for FormatPropertyDefinition);
                        v393 = (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition;
                        v394 = v433;
LABEL_293:
                        sub_1C03BC9EC((uint64_t)v394, v393);
LABEL_70:
                        swift_release();
LABEL_86:
                        swift_bridgeObjectRelease();
                        return swift_bridgeObjectRelease();
                      }
                      v460 = 0;
                      uint64_t v358 = ~v356;
                      while (1)
                      {
                        int v359 = *(unsigned __int8 *)(*(void *)(v354 + 48) + v357);
                        if (v359 != 1 && v359 != 2) {
                          break;
                        }
                        char v360 = sub_1C1520A9C();
                        swift_bridgeObjectRelease();
                        if (v360) {
                          goto LABEL_249;
                        }
                        unint64_t v357 = (v357 + 1) & v358;
                        if (((*(void *)(v354 + 56 + ((v357 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v357) & 1) == 0) {
                          goto LABEL_291;
                        }
                      }
                      swift_bridgeObjectRelease();
LABEL_249:
                    }
                    else
                    {
                      v460 = 0;
                    }
                    uint64_t v348 = *v433;
                    uint64_t v347 = v433[1];
                    swift_bridgeObjectRetain();
                    uint64_t v349 = v428;
                    sub_1C03B0504(v428, v348, v347, 4, (uint64_t)v454);
                    swift_bridgeObjectRelease();
                    sub_1C03BC9EC(v349, type metadata accessor for FormatPropertyDefinition);
                    unint64_t v346 = v350;
                  }
                  while (v350 != v416);
                  swift_bridgeObjectRelease();
                }
                sub_1C03BC9EC(v431, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
                unint64_t v343 = (unint64_t)v414;
              }
              while (v414 != (uint64_t *)v413);
            }
            swift_bridgeObjectRelease();
          }
          sub_1C03BC9EC(v432, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          unint64_t v241 = (unint64_t)v420;
        }
        while (v420 != v424);
        swift_bridgeObjectRelease();
      }
      sub_1C03BC9EC((uint64_t)v433, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      unint64_t v223 = v447;
    }
    while (v447 != v448);
    swift_bridgeObjectRelease();
  }
  uint64_t v361 = OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings;
  v362 = v460;
  sub_1C03B27F4((uint64_t)v419, (uint64_t)v462);
  v420 = v362;
  if (v362)
  {
    uint64_t v363 = *(void *)(v459 + v361);
    if (!*(void *)(v363 + 16)
      || (sub_1C1520DBC(),
          v463 = "ration",
          sub_1C151E77C(),
          uint64_t v364 = sub_1C1520E0C(),
          uint64_t v365 = -1 << *(unsigned char *)(v363 + 32),
          unint64_t v366 = v364 & ~v365,
          ((*(void *)(v363 + 56 + ((v366 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v366) & 1) == 0))
    {
LABEL_265:
      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_76;
    }
    uint64_t v464 = 0;
    uint64_t v367 = ~v365;
    unint64_t v466 = (unint64_t)"unusedProperties";
    while (1)
    {
      int v368 = *(unsigned __int8 *)(*(void *)(v363 + 48) + v366);
      if (v368 != 1 && v368 != 2) {
        break;
      }
      char v369 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v369) {
        goto LABEL_271;
      }
      unint64_t v366 = (v366 + 1) & v367;
      if (((*(void *)(v363 + 56 + ((v366 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v366) & 1) == 0) {
        goto LABEL_265;
      }
    }
    swift_bridgeObjectRelease();
LABEL_271:
  }
  else
  {
    uint64_t v464 = 0;
  }
  v371 = &v465->Kind;
  swift_beginAccess();
  v465 = (ValueMetadata *)*v371;
  uint64_t v372 = sub_1BFFCDB8C((uint64_t)v465);
  if (!v372)
  {
LABEL_282:
    v386 = &v422->Kind;
    swift_beginAccess();
    uint64_t v387 = *v386;
    v388 = &v423->Kind;
    swift_beginAccess();
    uint64_t v389 = *v388;
    uint64_t v390 = (uint64_t)v419;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0ADBB38(v390, v458, v421, v387, v389, (uint64_t)v443);
    __swift_project_boxed_opaque_existential_1(v453, v453[3]);
    if (sub_1C151890C())
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      uint64_t v391 = v464;
      v392 = sub_1C03B2D08(v443, (uint64_t)v462);
      if (!v391)
      {
        uint64_t v401 = (uint64_t)v392;
        __swift_project_boxed_opaque_existential_1(v453, v453[3]);
        if ((sub_1C151890C() & 1) == 0)
        {
          v402 = v443;
          sub_1C03BCE44((uint64_t)v443, v442, (uint64_t (*)(void))type metadata accessor for FormatPackage);
          swift_storeEnumTagMultiPayload();
          uint64_t v467 = sub_1BFEACEF4();
          uint64_t v403 = sub_1C03AAD40(v401, v402);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C1048874(v403);
          uint64_t Kind = v423->Kind;
          swift_bridgeObjectRetain();
          uint64_t v405 = sub_1C03B5204((uint64_t)v419, Kind, v402);
          swift_bridgeObjectRelease();
          sub_1C1048874(v405);
          unint64_t v406 = sub_1C03BC018(v402);
          sub_1C1048874(v406);
          uint64_t v407 = v467;
          if (sub_1BFFCDB8C(v467))
          {
            uint64_t v408 = v442;
            uint64_t v409 = v440;
            sub_1C03BCE44(v442, v440, (uint64_t (*)(void))type metadata accessor for FormatFile);
            type metadata accessor for FormatDerivedDataWarning();
            uint64_t v410 = swift_allocObject();
            sub_1C03BCF1C(v409, v410 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file, (uint64_t (*)(void))type metadata accessor for FormatFile);
            *(void *)(v410 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_errors) = v407;
            sub_1C03BC7D0(&qword_1EA19AB18, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataWarning);
            swift_allocError();
            uint64_t *v411 = v410;
            swift_willThrow();
            swift_release();
            swift_release();
            sub_1C03BC9EC(v408, (uint64_t (*)(void))type metadata accessor for FormatFile);
          }
          else
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            sub_1C03BCF1C(v442, v441, (uint64_t (*)(void))type metadata accessor for FormatFile);
          }
          goto LABEL_287;
        }
        type metadata accessor for FormatDerivedDataError();
        sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_286:
        swift_release();
        swift_bridgeObjectRelease();
LABEL_287:
        v393 = (uint64_t (*)(void))type metadata accessor for FormatPackage;
        v394 = v443;
        goto LABEL_293;
      }
    }
    swift_release();
    goto LABEL_286;
  }
  uint64_t v373 = v372;
  uint64_t v374 = v436 + *(int *)(v434 + 48);
  uint64_t v375 = (uint64_t)v465 + ((*(unsigned __int8 *)(v435 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v435 + 80));
  unint64_t v466 = *(void *)(v435 + 72);
  swift_bridgeObjectRetain();
  uint64_t v376 = 0;
  while (1)
  {
    sub_1C03BCE44(v375, v436, (uint64_t (*)(void))sub_1C03B73C4);
    uint64_t v379 = v376 + 1;
    if (__OFADD__(v376, 1)) {
      break;
    }
    sub_1C00BB39C(*(void *)v374, *(void *)(v374 + 8), *(unsigned char *)(v374 + 16));
    uint64_t v380 = v438;
    sub_1C03BCF1C(v436, v438, type metadata accessor for FormatDerivedDataResultOptionReference);
    uint64_t v382 = *(void *)(v380 + 8);
    uint64_t v381 = *(void *)(v380 + 16);
    uint64_t v383 = (uint64_t)v457;
    swift_beginAccess();
    if (*(void *)(*(void *)v383 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1BFEF2D8C(v382, v381);
      if (v384)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v385 = v437;
        sub_1C03BCE44(v438, v437, type metadata accessor for FormatDerivedDataResultOptionReference);
        sub_1C03BC9EC(v385, type metadata accessor for FormatDerivedDataResultOptionReference);
        goto LABEL_276;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v377 = v437;
    sub_1C03BCE44(v438, v437, type metadata accessor for FormatDerivedDataResultOptionReference);
    uint64_t v378 = *(void *)(v377 + 32);
    sub_1C03BC9EC(v377, type metadata accessor for FormatDerivedDataResultOptionReference);
    if ((v378 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatDerivedDataError();
      sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      uint64_t v395 = v438;
      uint64_t v396 = *(void *)(v438 + 16);
      uint64_t v397 = *(void *)(v438 + 40);
      uint64_t v398 = *(void *)(v438 + 48);
      unsigned __int8 v399 = *(unsigned char *)(v438 + 56);
      *(void *)uint64_t v400 = *(void *)(v438 + 8);
      *(void *)(v400 + 8) = v396;
      *(void *)(v400 + 16) = v397;
      *(void *)(v400 + 24) = v398;
      *(unsigned char *)(v400 + 32) = v399;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1C015F808(v397, v398, v399);
      swift_willThrow();
      swift_release();
      swift_release();
      v393 = type metadata accessor for FormatDerivedDataResultOptionReference;
      v394 = (uint64_t *)v395;
      goto LABEL_293;
    }
LABEL_276:
    sub_1C03BC9EC(v438, type metadata accessor for FormatDerivedDataResultOptionReference);
    ++v376;
    v375 += v466;
    if (v379 == v373)
    {
      swift_bridgeObjectRelease();
      goto LABEL_282;
    }
  }
  __break(1u);
LABEL_298:
  __break(1u);
LABEL_299:
  __break(1u);
LABEL_300:
  __break(1u);
LABEL_301:
  __break(1u);
LABEL_302:
  __break(1u);
LABEL_303:
  __break(1u);
LABEL_304:
  __break(1u);
LABEL_305:
  __break(1u);
LABEL_306:
  __break(1u);
LABEL_307:
  swift_release();
  __break(1u);
LABEL_308:
  uint64_t result = sub_1C1520CEC();
  __break(1u);
  return result;
}

uint64_t sub_1C03AFAAC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v38 = a8;
  uint64_t v33 = a6;
  uint64_t v31 = a7;
  uint64_t v32 = a9;
  uint64_t v35 = a5;
  uint64_t v36 = a3;
  sub_1C03B8104(0, &qword_1EA1974C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  if (sub_1C151890C())
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    uint64_t v18 = swift_allocError();
    swift_storeEnumTagMultiPayload();
LABEL_10:
    uint64_t result = swift_willThrow();
LABEL_11:
    *uint64_t v38 = v18;
    return result;
  }
  uint64_t v19 = v35;
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1C111C48C(v20);
  uint64_t v21 = a1;
  if (!*(void *)(v37 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_9:
    sub_1C03BCEAC((uint64_t)v13, &qword_1EA1974C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    uint64_t v18 = swift_allocError();
    uint64_t v26 = v21[1];
    *(void *)uint64_t v27 = *v21;
    *(void *)(v27 + 8) = v26;
    *(unsigned char *)(v27 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  uint64_t v22 = *a1;
  uint64_t v23 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1C1052498(v22, v23, 0);
  if (v25)
  {
    sub_1C03BCE44(*(void *)(v37 + 56) + *(void *)(v15 + 72) * v24, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    goto LABEL_9;
  }
  sub_1C03BCF1C((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
  uint64_t v29 = v34;
  sub_1C139C538(v19, &v39);
  uint64_t v18 = v29;
  if (v29)
  {
    uint64_t result = sub_1C03BC9EC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    goto LABEL_11;
  }
  sub_1C0F4CEC0((uint64_t)&unk_1F1B81898, &v44);
  uint64_t v59 = v39;
  sub_1BFCA59C8((uint64_t)&v59);
  uint64_t v58 = *((void *)&v39 + 1);
  sub_1BFCA59C8((uint64_t)&v58);
  uint64_t v57 = v40;
  sub_1BFCA59C8((uint64_t)&v57);
  uint64_t v56 = v41;
  sub_1BFCA59C8((uint64_t)&v56);
  uint64_t v55 = v42;
  sub_1BFCA59C8((uint64_t)&v55);
  uint64_t v54 = v43;
  sub_1BFCA59C8((uint64_t)&v54);
  uint64_t v52 = v45;
  uint64_t v53 = v47;
  uint64_t v51 = v44;
  sub_1C0FA5A6C(v44, v45, v47);
  uint64_t v30 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v30);
  sub_1C0F9FDA8((uint64_t)v21, &v44, v32);
  sub_1C03BC9EC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
  sub_1BFCA59C8((uint64_t)&v51);
  swift_bridgeObjectRelease();
  sub_1BFCA59C8((uint64_t)&v52);
  v50[0] = v46;
  sub_1BFCA59C8((uint64_t)v50);
  sub_1BFCA59C8((uint64_t)&v53);
  uint64_t v49 = v48;
  return sub_1BFCA59C8((uint64_t)&v49);
}

BOOL sub_1C03B0118(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 128) & 0xFE) == 192;
}

uint64_t sub_1C03B012C(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v10 = type metadata accessor for FormatDerivedDataBinderResult();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v38 - v15;
  swift_bridgeObjectRetain();
  sub_1C062237C(a2, a3, a1);
  uint64_t v41 = MEMORY[0x1E4FBC870];
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    v38[0] = v13;
    v38[1] = v17;
    uint64_t v19 = *(int *)(v10 + 28);
    v38[2] = v6;
    uint64_t v39 = v19;
    uint64_t v20 = v17 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v21 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    uint64_t v22 = v20;
    uint64_t v23 = v18;
    do
    {
      sub_1C03BCE44(v22, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
      uint64_t v24 = v21;
      uint64_t v25 = *(void *)&v16[v39];
      swift_bridgeObjectRetain();
      sub_1C03BC9EC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
      uint64_t v26 = v25;
      uint64_t v21 = v24;
      sub_1BFEF3808(v26);
      v22 += v24;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRetain();
    uint64_t v27 = v38[0];
    while (1)
    {
      sub_1C03BCE44(v20, v27, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
      sub_1C03B5FAC(&v40, v27);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      sub_1C03BC9EC(v27, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
      v20 += v21;
      if (!--v18)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v28 = v40;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C03BC9EC(v27, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC868];
LABEL_9:
    swift_retain();
    uint64_t v29 = sub_1C03BA61C(v28);
    if (v5)
    {
      swift_release();
      uint64_t v30 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = v29;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v32 = sub_1C03AAB40(v31);
      swift_release();
      uint64_t v40 = MEMORY[0x1E4FBC860];
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v33; ++i)
        {
          uint64_t v35 = swift_bridgeObjectRetain();
          sub_1BFFC6038(v35);
        }
        swift_bridgeObjectRelease_n();
        uint64_t v36 = v40;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = MEMORY[0x1E4FBC860];
      }
      uint64_t v30 = sub_1C03BA82C(v36, v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return v30;
  }
  return result;
}

BOOL sub_1C03B04CC(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 128) & 0xFD) == 192;
}

BOOL sub_1C03B04E0(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 128);
  BOOL v2 = (v1 & 0xE0) == 192;
  unsigned int v3 = (v1 + 61);
  return !v2 || v3 < 0xFD;
}

uint64_t sub_1C03B0504(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t *)(a5 + 16);
  uint64_t v10 = FormatPropertyDefinition.identifier.getter();
  uint64_t v12 = v11;
  swift_beginAccess();
  uint64_t v13 = *(void *)(a5 + 16);
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_1BFEF2D8C(v10, v12), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v16;
  swift_endAccess();
  sub_1C02CDD4C(a2, a3, a4);
  sub_1C02B8D08((uint64_t)v24, a2, a3, a4);
  sub_1C00BB39C(v24[0], v24[1], v25);
  uint64_t v17 = FormatPropertyDefinition.identifier.getter();
  uint64_t v19 = v18;
  uint64_t v20 = v26;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v9;
  *uint64_t v9 = 0x8000000000000000;
  sub_1C10678BC(v20, v17, v19, isUniquelyReferenced_nonNull_native);
  *uint64_t v9 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1C03B0680(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (void *)((char *)v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v103 = (void *)((char *)v100 - v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v104 = (void *)((char *)v100 - v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v105 = (void *)((char *)v100 - v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v106 = (void *)((char *)v100 - v17);
  uint64_t v18 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v21 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v22 = FormatPropertyDefinition.identifier.getter();
  if (*(void *)(v21 + 16) && (unint64_t v24 = sub_1BFEF2D8C(v22, v23), (v25 & 1) != 0))
  {
    uint64_t v107 = *(void *)(*(void *)(v21 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v107 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v26 = sub_1C0BD52C4();
  sub_1C03BCE44(a2, (uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
  if (v26)
  {
LABEL_6:
    sub_1C03BC9EC((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
    uint64_t v27 = (uint64_t)v106;
    sub_1C03BCE44((uint64_t)a3, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v29 = (uint64_t)v103;
    uint64_t v28 = (uint64_t)v104;
    uint64_t v30 = (uint64_t)v105;
LABEL_7:
    sub_1C03BC9EC(v27, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCE44((uint64_t)a3, v30, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
LABEL_8:
    sub_1C03BC9EC(v30, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCE44((uint64_t)a3, v28, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
LABEL_9:
    sub_1C03BC9EC(v28, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCE44((uint64_t)a3, v29, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
LABEL_10:
    sub_1C03BC9EC(v29, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCE44((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  v100[1] = a2;
  v100[2] = v3;
  uint64_t v101 = v9;
  uint64_t v102 = a3;
  uint64_t v32 = sub_1C0BD5AFC();
  if (*(void *)(v32 + 16))
  {
    sub_1C1520DBC();
    v100[0] = "isolatedThunderstormsNight";
    sub_1C151E77C();
    uint64_t v33 = sub_1C1520E0C();
    uint64_t v34 = -1 << *(unsigned char *)(v32 + 32);
    unint64_t v35 = v33 & ~v34;
    if ((*(void *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35))
    {
      uint64_t v36 = ~v34;
      while (1)
      {
        int v37 = *(unsigned __int8 *)(*(void *)(v32 + 48) + v35);
        if (v37 != 1 && v37 != 2) {
          break;
        }
        char v38 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v38) {
          goto LABEL_80;
        }
        unint64_t v35 = (v35 + 1) & v36;
        if (((*(void *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
LABEL_80:
      swift_bridgeObjectRelease();
      uint64_t v9 = v101;
      a3 = v102;
      goto LABEL_6;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  sub_1C03BC9EC((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
  a3 = v102;
  uint64_t v39 = v106;
  sub_1C03BCE44((uint64_t)v102, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v40 = v107;
  uint64_t v9 = v101;
  if (*(void *)(v107 + 16))
  {
    uint64_t v42 = *v39;
    uint64_t v41 = v39[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v43 = sub_1C1520E0C();
    uint64_t v44 = -1 << *(unsigned char *)(v40 + 32);
    unint64_t v45 = v43 & ~v44;
    uint64_t v46 = v40 + 56;
    if ((*(void *)(v40 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45))
    {
      uint64_t v47 = ~v44;
      uint64_t v48 = *(void *)(v107 + 48);
      while (1)
      {
        uint64_t v49 = v48 + 24 * v45;
        if (!*(unsigned char *)(v49 + 16))
        {
          BOOL v50 = *(void *)v49 == v42 && *(void *)(v49 + 8) == v41;
          if (v50 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v45 = (v45 + 1) & v47;
        if (((*(void *)(v46 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
          goto LABEL_29;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = (uint64_t)v103;
      uint64_t v28 = (uint64_t)v104;
      uint64_t v30 = (uint64_t)v105;
      uint64_t v27 = (uint64_t)v106;
      goto LABEL_7;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v40 = v107;
    uint64_t v39 = v106;
  }
  sub_1C03BC9EC((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v51 = v105;
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (*(void *)(v40 + 16))
  {
    uint64_t v53 = *v51;
    uint64_t v52 = v51[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v54 = sub_1C1520E0C();
    uint64_t v55 = -1 << *(unsigned char *)(v40 + 32);
    unint64_t v56 = v54 & ~v55;
    uint64_t v57 = v40 + 56;
    if ((*(void *)(v40 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56))
    {
      uint64_t v58 = ~v55;
      uint64_t v59 = *(void *)(v107 + 48);
      while (1)
      {
        uint64_t v60 = v59 + 24 * v56;
        if (*(unsigned char *)(v60 + 16) == 1)
        {
          BOOL v61 = *(void *)v60 == v53 && *(void *)(v60 + 8) == v52;
          if (v61 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v56 = (v56 + 1) & v58;
        if (((*(void *)(v57 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56) & 1) == 0) {
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = (uint64_t)v103;
      uint64_t v28 = (uint64_t)v104;
      uint64_t v30 = (uint64_t)v105;
      goto LABEL_8;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    uint64_t v40 = v107;
    uint64_t v51 = v105;
  }
  sub_1C03BC9EC((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v62 = v104;
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (*(void *)(v40 + 16))
  {
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v65 = sub_1C1520E0C();
    uint64_t v66 = -1 << *(unsigned char *)(v40 + 32);
    unint64_t v67 = v65 & ~v66;
    uint64_t v68 = v40 + 56;
    if ((*(void *)(v40 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67))
    {
      uint64_t v69 = ~v66;
      uint64_t v70 = *(void *)(v107 + 48);
      while (1)
      {
        uint64_t v71 = v70 + 24 * v67;
        if (*(unsigned char *)(v71 + 16) == 2)
        {
          BOOL v72 = *(void *)v71 == v64 && *(void *)(v71 + 8) == v63;
          if (v72 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v67 = (v67 + 1) & v69;
        if (((*(void *)(v68 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67) & 1) == 0) {
          goto LABEL_53;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = (uint64_t)v103;
      uint64_t v28 = (uint64_t)v104;
      goto LABEL_9;
    }
LABEL_53:
    swift_bridgeObjectRelease();
    uint64_t v40 = v107;
    uint64_t v62 = v104;
  }
  sub_1C03BC9EC((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v73 = v103;
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (*(void *)(v40 + 16))
  {
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v76 = sub_1C1520E0C();
    uint64_t v77 = -1 << *(unsigned char *)(v40 + 32);
    unint64_t v78 = v76 & ~v77;
    uint64_t v79 = v40 + 56;
    if ((*(void *)(v40 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v78))
    {
      uint64_t v80 = ~v77;
      uint64_t v81 = *(void *)(v107 + 48);
      while (1)
      {
        uint64_t v82 = v81 + 24 * v78;
        if (*(unsigned char *)(v82 + 16) == 3)
        {
          BOOL v83 = *(void *)v82 == v75 && *(void *)(v82 + 8) == v74;
          if (v83 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v78 = (v78 + 1) & v80;
        if (((*(void *)(v79 + ((v78 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v78) & 1) == 0) {
          goto LABEL_65;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = (uint64_t)v103;
      goto LABEL_10;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    uint64_t v40 = v107;
    uint64_t v73 = v103;
  }
  sub_1C03BC9EC((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (!*(void *)(v40 + 16)) {
    goto LABEL_78;
  }
  uint64_t v85 = *v9;
  uint64_t v84 = v9[1];
  sub_1C1520DBC();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v86 = sub_1C1520E0C();
  uint64_t v87 = -1 << *(unsigned char *)(v40 + 32);
  unint64_t v88 = v86 & ~v87;
  uint64_t v89 = v40 + 56;
  if (((*(void *)(v40 + 56 + ((v88 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v88) & 1) == 0)
  {
LABEL_77:
    swift_bridgeObjectRelease();
LABEL_78:
    swift_bridgeObjectRelease();
    sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    uint64_t v95 = v94;
    uint64_t v97 = *a3;
    uint64_t v96 = a3[1];
    swift_bridgeObjectRetain();
    uint64_t v98 = FormatPropertyDefinition.identifier.getter();
    *uint64_t v95 = v97;
    v95[1] = v96;
    v95[2] = v98;
    v95[3] = v99;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v90 = ~v87;
  uint64_t v91 = *(void *)(v107 + 48);
  while (1)
  {
    uint64_t v92 = v91 + 24 * v88;
    if (*(unsigned char *)(v92 + 16) == 4)
    {
      BOOL v93 = *(void *)v92 == v85 && *(void *)(v92 + 8) == v84;
      if (v93 || (sub_1C1520A9C() & 1) != 0) {
        break;
      }
    }
    unint64_t v88 = (v88 + 1) & v90;
    if (((*(void *)(v89 + ((v88 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v88) & 1) == 0) {
      goto LABEL_77;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1C03B120C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (void *)((char *)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v91 = (void *)((char *)v87 - v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v92 = (void *)((char *)v87 - v13);
  MEMORY[0x1F4188790](v14);
  BOOL v93 = (void *)((char *)v87 - v15);
  uint64_t v16 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v20 = FormatPropertyDefinition.identifier.getter();
  if (*(void *)(v19 + 16) && (unint64_t v22 = sub_1BFEF2D8C(v20, v21), (v23 & 1) != 0))
  {
    uint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * v22);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v24 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v25 = sub_1C0BD52C4();
  sub_1C03BCE44(a2, (uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
  if (v25)
  {
LABEL_6:
    sub_1C03BC9EC((uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
    uint64_t v26 = (uint64_t)v93;
    sub_1C03BCE44((uint64_t)a3, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
LABEL_7:
    sub_1C03BC9EC(v26, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v27 = (uint64_t)v92;
    sub_1C03BCE44((uint64_t)a3, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v28 = (uint64_t)v91;
LABEL_8:
    sub_1C03BC9EC(v27, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCE44((uint64_t)a3, v28, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
LABEL_9:
    sub_1C03BC9EC(v28, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCE44((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  uint64_t v89 = a3;
  uint64_t v90 = v24;
  v87[2] = a2;
  v87[3] = v3;
  unint64_t v88 = v9;
  uint64_t v30 = sub_1C0BD5AFC();
  if (*(void *)(v30 + 16))
  {
    sub_1C1520DBC();
    v87[1] = "isolatedThunderstormsNight";
    sub_1C151E77C();
    uint64_t v31 = sub_1C1520E0C();
    uint64_t v32 = -1 << *(unsigned char *)(v30 + 32);
    unint64_t v33 = v31 & ~v32;
    if ((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33))
    {
      uint64_t v34 = ~v32;
      while (1)
      {
        int v35 = *(unsigned __int8 *)(*(void *)(v30 + 48) + v33);
        if (v35 != 1 && v35 != 2) {
          break;
        }
        char v36 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v36) {
          goto LABEL_67;
        }
        unint64_t v33 = (v33 + 1) & v34;
        if (((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
LABEL_67:
      swift_bridgeObjectRelease();
      uint64_t v9 = v88;
      a3 = v89;
      goto LABEL_6;
    }
  }
LABEL_17:
  swift_bridgeObjectRelease();
  sub_1C03BC9EC((uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
  a3 = v89;
  int v37 = v93;
  sub_1C03BCE44((uint64_t)v89, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v38 = v90;
  uint64_t v9 = v88;
  if (*(void *)(v90 + 16))
  {
    uint64_t v40 = *v37;
    uint64_t v39 = v37[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v41 = sub_1C1520E0C();
    uint64_t v42 = -1 << *(unsigned char *)(v38 + 32);
    unint64_t v43 = v41 & ~v42;
    uint64_t v44 = v38 + 56;
    if ((*(void *)(v38 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43))
    {
      uint64_t v45 = ~v42;
      uint64_t v46 = *(void *)(v90 + 48);
      while (1)
      {
        uint64_t v47 = v46 + 24 * v43;
        if (*(unsigned char *)(v47 + 16) == 1)
        {
          BOOL v48 = *(void *)v47 == v40 && *(void *)(v47 + 8) == v39;
          if (v48 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v43 = (v43 + 1) & v45;
        if (((*(void *)(v44 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = (uint64_t)v93;
      goto LABEL_7;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v38 = v90;
    int v37 = v93;
  }
  sub_1C03BC9EC((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v49 = v92;
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (*(void *)(v38 + 16))
  {
    uint64_t v51 = *v49;
    uint64_t v50 = v49[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v52 = sub_1C1520E0C();
    uint64_t v53 = -1 << *(unsigned char *)(v38 + 32);
    unint64_t v54 = v52 & ~v53;
    uint64_t v55 = v38 + 56;
    if ((*(void *)(v38 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54))
    {
      uint64_t v56 = ~v53;
      uint64_t v57 = *(void *)(v90 + 48);
      while (1)
      {
        uint64_t v58 = v57 + 24 * v54;
        if (*(unsigned char *)(v58 + 16) == 2)
        {
          BOOL v59 = *(void *)v58 == v51 && *(void *)(v58 + 8) == v50;
          if (v59 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v54 = (v54 + 1) & v56;
        if (((*(void *)(v55 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54) & 1) == 0) {
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = (uint64_t)v91;
      uint64_t v27 = (uint64_t)v92;
      goto LABEL_8;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    uint64_t v38 = v90;
    uint64_t v49 = v92;
  }
  sub_1C03BC9EC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v60 = v91;
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (*(void *)(v38 + 16))
  {
    uint64_t v62 = *v60;
    uint64_t v61 = v60[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v63 = sub_1C1520E0C();
    uint64_t v64 = -1 << *(unsigned char *)(v38 + 32);
    unint64_t v65 = v63 & ~v64;
    uint64_t v66 = v38 + 56;
    if ((*(void *)(v38 + 56 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65))
    {
      uint64_t v67 = ~v64;
      uint64_t v68 = *(void *)(v90 + 48);
      while (1)
      {
        uint64_t v69 = v68 + 24 * v65;
        if (*(unsigned char *)(v69 + 16) == 3)
        {
          BOOL v70 = *(void *)v69 == v62 && *(void *)(v69 + 8) == v61;
          if (v70 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v65 = (v65 + 1) & v67;
        if (((*(void *)(v66 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
          goto LABEL_52;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = (uint64_t)v91;
      goto LABEL_9;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    uint64_t v38 = v90;
    uint64_t v60 = v91;
  }
  sub_1C03BC9EC((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (!*(void *)(v38 + 16)) {
    goto LABEL_65;
  }
  uint64_t v72 = *v9;
  uint64_t v71 = v9[1];
  sub_1C1520DBC();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v73 = sub_1C1520E0C();
  uint64_t v74 = -1 << *(unsigned char *)(v38 + 32);
  unint64_t v75 = v73 & ~v74;
  uint64_t v76 = v38 + 56;
  if (((*(void *)(v38 + 56 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) == 0)
  {
LABEL_64:
    swift_bridgeObjectRelease();
LABEL_65:
    swift_bridgeObjectRelease();
    sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    uint64_t v82 = v81;
    uint64_t v84 = *a3;
    uint64_t v83 = a3[1];
    swift_bridgeObjectRetain();
    uint64_t v85 = FormatPropertyDefinition.identifier.getter();
    *uint64_t v82 = v84;
    v82[1] = v83;
    v82[2] = v85;
    v82[3] = v86;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v77 = ~v74;
  uint64_t v78 = *(void *)(v90 + 48);
  while (1)
  {
    uint64_t v79 = v78 + 24 * v75;
    if (*(unsigned char *)(v79 + 16) == 4)
    {
      BOOL v80 = *(void *)v79 == v72 && *(void *)(v79 + 8) == v71;
      if (v80 || (sub_1C1520A9C() & 1) != 0) {
        break;
      }
    }
    unint64_t v75 = (v75 + 1) & v77;
    if (((*(void *)(v76 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) == 0) {
      goto LABEL_64;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1C03B1BF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (void *)((char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v63 = (void *)((char *)v59 - v11);
  uint64_t v12 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v16 = FormatPropertyDefinition.identifier.getter();
  if (*(void *)(v15 + 16) && (unint64_t v18 = sub_1BFEF2D8C(v16, v17), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(*(void *)(v15 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v21 = sub_1C0BD52C4();
  sub_1C03BCE44(a2, (uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
  if (v21)
  {
LABEL_6:
    sub_1C03BC9EC((uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
    uint64_t v22 = (uint64_t)v63;
    sub_1C03BCE44((uint64_t)a3, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
LABEL_7:
    sub_1C03BC9EC(v22, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCE44((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  uint64_t v61 = a3;
  uint64_t v62 = v20;
  v59[2] = a2;
  uint64_t v60 = v9;
  v59[1] = v3;
  uint64_t v24 = sub_1C0BD5AFC();
  if (*(void *)(v24 + 16))
  {
    sub_1C1520DBC();
    v59[0] = "isolatedThunderstormsNight";
    sub_1C151E77C();
    uint64_t v25 = sub_1C1520E0C();
    uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
    unint64_t v27 = v25 & ~v26;
    if ((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27))
    {
      uint64_t v28 = ~v26;
      while (1)
      {
        int v29 = *(unsigned __int8 *)(*(void *)(v24 + 48) + v27);
        if (v29 != 1 && v29 != 2) {
          break;
        }
        char v30 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_41;
        }
        unint64_t v27 = (v27 + 1) & v28;
        if (((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
      uint64_t v9 = v60;
      a3 = v61;
      goto LABEL_6;
    }
  }
LABEL_15:
  swift_bridgeObjectRelease();
  sub_1C03BC9EC((uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
  a3 = v61;
  uint64_t v31 = v63;
  sub_1C03BCE44((uint64_t)v61, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v32 = v62;
  uint64_t v9 = v60;
  if (*(void *)(v62 + 16))
  {
    uint64_t v34 = *v31;
    uint64_t v33 = v31[1];
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v35 = sub_1C1520E0C();
    uint64_t v36 = -1 << *(unsigned char *)(v32 + 32);
    unint64_t v37 = v35 & ~v36;
    uint64_t v38 = v32 + 56;
    if ((*(void *)(v38 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37))
    {
      uint64_t v39 = ~v36;
      uint64_t v40 = *(void *)(v62 + 48);
      while (1)
      {
        uint64_t v41 = v40 + 24 * v37;
        if (*(unsigned char *)(v41 + 16) == 3)
        {
          BOOL v42 = *(void *)v41 == v34 && *(void *)(v41 + 8) == v33;
          if (v42 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
        }
        unint64_t v37 = (v37 + 1) & v39;
        if (((*(void *)(v38 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = (uint64_t)v63;
      goto LABEL_7;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v32 = v62;
    uint64_t v31 = v63;
  }
  sub_1C03BC9EC((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  sub_1C03BCE44((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  if (!*(void *)(v32 + 16)) {
    goto LABEL_39;
  }
  uint64_t v44 = *v9;
  uint64_t v43 = v9[1];
  sub_1C1520DBC();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v45 = sub_1C1520E0C();
  uint64_t v46 = -1 << *(unsigned char *)(v32 + 32);
  unint64_t v47 = v45 & ~v46;
  uint64_t v48 = v32 + 56;
  if (((*(void *)(v48 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a3 = v61;
LABEL_39:
    swift_bridgeObjectRelease();
    sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    unint64_t v54 = v53;
    uint64_t v56 = *a3;
    uint64_t v55 = a3[1];
    swift_bridgeObjectRetain();
    uint64_t v57 = FormatPropertyDefinition.identifier.getter();
    *unint64_t v54 = v56;
    v54[1] = v55;
    v54[2] = v57;
    v54[3] = v58;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v49 = ~v46;
  uint64_t v50 = *(void *)(v62 + 48);
  while (1)
  {
    uint64_t v51 = v50 + 24 * v47;
    if (*(unsigned char *)(v51 + 16) == 4)
    {
      BOOL v52 = *(void *)v51 == v44 && *(void *)(v51 + 8) == v43;
      if (v52 || (sub_1C1520A9C() & 1) != 0) {
        break;
      }
    }
    unint64_t v47 = (v47 + 1) & v49;
    if (((*(void *)(v48 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1C03B22BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v14 = FormatPropertyDefinition.identifier.getter();
  if (*(void *)(v13 + 16) && (unint64_t v16 = sub_1BFEF2D8C(v14, v15), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void *)(*(void *)(v13 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v19 = sub_1C0BD52C4();
  sub_1C03BCE44(a2, (uint64_t)v12, type metadata accessor for FormatPropertyDefinition);
  if (v19)
  {
LABEL_6:
    sub_1C03BC9EC((uint64_t)v12, type metadata accessor for FormatPropertyDefinition);
    sub_1C03BCE44(a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BC9EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  uint64_t v50 = v18;
  uint64_t v48 = (uint64_t *)a3;
  uint64_t v49 = v9;
  v47[2] = a2;
  _OWORD v47[3] = v3;
  uint64_t v21 = sub_1C0BD5AFC();
  if (*(void *)(v21 + 16))
  {
    sub_1C1520DBC();
    v47[1] = "isolatedThunderstormsNight";
    sub_1C151E77C();
    uint64_t v22 = sub_1C1520E0C();
    uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
    {
      uint64_t v25 = ~v23;
      while (1)
      {
        int v26 = *(unsigned __int8 *)(*(void *)(v21 + 48) + v24);
        if (v26 != 1 && v26 != 2) {
          break;
        }
        char v27 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_28;
        }
        unint64_t v24 = (v24 + 1) & v25;
        if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
LABEL_28:
      swift_bridgeObjectRelease();
      a3 = (uint64_t)v48;
      uint64_t v9 = v49;
      goto LABEL_6;
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  sub_1C03BC9EC((uint64_t)v12, type metadata accessor for FormatPropertyDefinition);
  int v29 = v48;
  uint64_t v28 = (uint64_t *)v49;
  sub_1C03BCE44((uint64_t)v48, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v30 = v50;
  if (!*(void *)(v50 + 16)) {
    goto LABEL_26;
  }
  uint64_t v32 = *v28;
  uint64_t v31 = v28[1];
  sub_1C1520DBC();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v33 = sub_1C1520E0C();
  uint64_t v34 = -1 << *(unsigned char *)(v30 + 32);
  unint64_t v35 = v33 & ~v34;
  uint64_t v36 = v30 + 56;
  if (((*(void *)(v30 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    int v29 = v48;
    uint64_t v28 = (uint64_t *)v49;
LABEL_26:
    swift_bridgeObjectRelease();
    sub_1C03BC9EC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    BOOL v42 = v41;
    uint64_t v44 = *v29;
    uint64_t v43 = v29[1];
    swift_bridgeObjectRetain();
    uint64_t v45 = FormatPropertyDefinition.identifier.getter();
    *BOOL v42 = v44;
    v42[1] = v43;
    v42[2] = v45;
    void v42[3] = v46;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v37 = ~v34;
  uint64_t v38 = *(void *)(v50 + 48);
  while (1)
  {
    uint64_t v39 = v38 + 24 * v35;
    if (*(unsigned char *)(v39 + 16) == 4)
    {
      BOOL v40 = *(void *)v39 == v32 && *(void *)(v39 + 8) == v31;
      if (v40 || (sub_1C1520A9C() & 1) != 0) {
        break;
      }
    }
    unint64_t v35 = (v35 + 1) & v37;
    if (((*(void *)(v36 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C03BC9EC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
}

void sub_1C03B27F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatCompilerProperty(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v39 = (uint64_t)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v32 - v9;
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    v32[1] = v2;
    uint64_t v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    swift_bridgeObjectRetain();
    uint64_t v38 = (uint64_t *)(a2 + 24);
    swift_beginAccess();
    unint64_t v14 = 0;
    unint64_t v34 = 0x80000001C15FF830;
    BOOL v40 = "ignoreUnusedProperty";
    uint64_t v15 = v39;
    uint64_t v33 = v6;
    uint64_t v35 = v11;
    uint64_t v37 = v12;
    uint64_t v36 = v13;
    while (v14 < *(void *)(v11 + 16))
    {
      sub_1C03BCE44(v13 + *(void *)(v6 + 72) * v14, (uint64_t)v10, type metadata accessor for FormatCompilerProperty);
      if ((sub_1C131DD48() & 1) == 0)
      {
        uint64_t v16 = *v38;
        swift_bridgeObjectRetain();
        uint64_t v17 = FormatCompilerProperty.identifier.getter();
        if (*(void *)(v16 + 16) && (sub_1BFEF2D8C(v17, v18), (v19 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C03BCE44((uint64_t)v10, v15, type metadata accessor for FormatCompilerProperty);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C03BCE44((uint64_t)v10, v15, type metadata accessor for FormatCompilerProperty);
          uint64_t v20 = sub_1C131E8A0();
          if (!*(void *)(v20 + 16)
            || (sub_1C1520DBC(),
                sub_1C151E77C(),
                uint64_t v21 = sub_1C1520E0C(),
                uint64_t v22 = -1 << *(unsigned char *)(v20 + 32),
                unint64_t v23 = v21 & ~v22,
                ((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0))
          {
LABEL_21:
            swift_bridgeObjectRelease();
            sub_1C03BC9EC(v39, type metadata accessor for FormatCompilerProperty);
            swift_bridgeObjectRelease();
            type metadata accessor for FormatDerivedDataError();
            sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
            swift_allocError();
            uint64_t v28 = v27;
            sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
            *(void *)(inited + 32) = FormatCompilerProperty.identifier.getter();
            *(void *)(inited + 40) = v30;
            uint64_t v31 = sub_1C00B818C(inited);
            swift_setDeallocating();
            swift_arrayDestroy();
            *uint64_t v28 = v31;
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            sub_1C03BC9EC((uint64_t)v10, type metadata accessor for FormatCompilerProperty);
            return;
          }
          uint64_t v24 = ~v22;
          while (1)
          {
            int v25 = *(unsigned __int8 *)(*(void *)(v20 + 48) + v23);
            if (v25 != 1 && v25 != 2) {
              break;
            }
            char v26 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if (v26) {
              goto LABEL_20;
            }
            unint64_t v23 = (v23 + 1) & v24;
            if (((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          uint64_t v6 = v33;
          uint64_t v15 = v39;
          uint64_t v11 = v35;
        }
        sub_1C03BC9EC(v15, type metadata accessor for FormatCompilerProperty);
        uint64_t v12 = v37;
        uint64_t v13 = v36;
      }
      ++v14;
      sub_1C03BC9EC((uint64_t)v10, type metadata accessor for FormatCompilerProperty);
      if (v14 == v12)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

char *sub_1C03B2D08(uint64_t *a1, uint64_t a2)
{
  uint64_t v221 = (char *)a2;
  uint64_t v218 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v218);
  uint64_t v202 = (uint64_t)&v199 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v217 = (uint64_t)&v199 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v204 = (uint64_t)&v199 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v211 = (uint64_t)&v199 - v10;
  uint64_t v219 = type metadata accessor for FormatVersioningError(0);
  MEMORY[0x1F4188790](v219);
  uint64_t v209 = (char *)&v199 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v208 = (char *)&v199 - v13;
  MEMORY[0x1F4188790](v14);
  v207 = (char *)&v199 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v206 = (char *)&v199 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v205 = (char *)&v199 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v199 - v21;
  unint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C03B8104(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v24 - 8);
  char v26 = (char *)&v199 - v25;
  sub_1C03B8104(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70], v23);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v216 = (char *)&v199 - v28;
  uint64_t v29 = sub_1C151836C();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v215 = (char *)&v199 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_1C151928C();
  uint64_t v224 = *(void *)(v222 - 8);
  MEMORY[0x1F4188790](v222);
  v201 = (char *)&v199 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  v200 = (char *)&v199 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v203 = (char *)&v199 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v214 = (char *)&v199 - v37;
  MEMORY[0x1F4188790](v38);
  BOOL v40 = (char *)&v199 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v213 = (char *)&v199 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v199 - v44;
  MEMORY[0x1F4188790](v46);
  v210 = (char *)&v199 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v50 = (char *)&v199 - v49;
  MEMORY[0x1F4188790](v51);
  uint64_t v212 = (char *)&v199 - v52;
  uint64_t v53 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v199 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = *a1;
  unint64_t v223 = a1;
  unint64_t v225 = a1[1];
  uint64_t v56 = v2 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings;
  uint64_t v57 = type metadata accessor for FormatDerivedDataCompilerSettings();
  sub_1C03BCE44(v56 + *(int *)(v57 + 20), (uint64_t)v55, type metadata accessor for FormatVersioningModeSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v74 = v217;
      sub_1C03BCF1C((uint64_t)v55, v217, type metadata accessor for FormatVersioningModeRelease);
      uint64_t v75 = v74 + *(int *)(v218 + 20);
      unint64_t v76 = v225;
      swift_bridgeObjectRetain();
      sub_1C151926C();
      uint64_t v77 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v216, 1, 1, v77);
      uint64_t v78 = v214;
      sub_1C151925C();
      uint64_t v79 = (uint64_t)v223;
      BOOL v80 = (void *)v226;
      uint64_t v81 = sub_1C03BBD18((uint64_t)v223, (uint64_t)v221, v75);
      if (v80)
      {
        id v229 = v80;
        id v82 = v80;
        sub_1C017F734();
        char v26 = v206;
        char v83 = swift_dynamicCast();
        uint64_t v84 = v222;
        if (v83)
        {

          sub_1C03BCF1C((uint64_t)v26, (uint64_t)v209, type metadata accessor for FormatVersioningError);
          if (qword_1EA1943D0 != -1) {
            swift_once();
          }
          v228[0] = 0;
          v228[1] = 0xE000000000000000;
          sub_1C15200FC();
          sub_1C151E80C();
          sub_1C03BC7D0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
          sub_1C152088C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151E80C();
          sub_1C151E80C();
          sub_1C02306F8(0, 0, 0, v228[0], v228[1]);
          swift_bridgeObjectRelease();
          if (qword_1EA194B48 != -1) {
            swift_once();
          }
          uint64_t v85 = sub_1C15198DC();
          __swift_project_value_buffer(v85, (uint64_t)qword_1EA2B5390);
          uint64_t v86 = v224;
          uint64_t v87 = v201;
          (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v201, v78, v84);
          swift_bridgeObjectRetain();
          unint64_t v88 = sub_1C15198AC();
          os_log_type_t v89 = sub_1C151F36C();
          int v90 = v89;
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v91 = v84;
            uint64_t v92 = v87;
            uint64_t v93 = swift_slowAlloc();
            uint64_t v226 = swift_slowAlloc();
            v228[0] = v226;
            *(_DWORD *)uint64_t v93 = 136446466;
            LODWORD(v223) = v90;
            uint64_t v94 = sub_1C152088C();
            uint64_t v227 = sub_1BFDA76EC(v94, v95, v228);
            sub_1C151FE1C();
            swift_bridgeObjectRelease();
            uint64_t v96 = *(void (**)(char *, uint64_t))(v86 + 8);
            uint64_t v97 = v92;
            uint64_t v84 = v91;
            v96(v97, v91);
            *(_WORD *)(v93 + 12) = 2082;
            swift_bridgeObjectRetain();
            uint64_t v227 = sub_1BFDA76EC(v220, v76, v228);
            sub_1C151FE1C();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1BFC31000, v88, (os_log_type_t)v223, "Fixed release public release version %{public}s NOT satisfied for %{public}s", (uint8_t *)v93, 0x16u);
            uint64_t v98 = v226;
            swift_arrayDestroy();
            MEMORY[0x1C18C9B00](v98, -1, -1);
            MEMORY[0x1C18C9B00](v93, -1, -1);
          }
          else
          {
            uint64_t v96 = *(void (**)(char *, uint64_t))(v86 + 8);
            v96(v87, v84);

            swift_bridgeObjectRelease_n();
          }
          sub_1C03BC7D0(qword_1EA1995E0, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
          swift_allocError();
          char v26 = v209;
          sub_1C03BCE44((uint64_t)v209, v196, type metadata accessor for FormatVersioningError);
          swift_willThrow();
          sub_1C03BC9EC((uint64_t)v26, type metadata accessor for FormatVersioningError);
          v96(v214, v84);
        }
        else
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v224 + 8))(v78, v84);
        }
        sub_1C03BC9EC(v217, type metadata accessor for FormatVersioningModeRelease);
        goto LABEL_82;
      }
      uint64_t v221 = (char *)v81;
      uint64_t v164 = v222;
      if (qword_1EA194B48 != -1) {
        swift_once();
      }
      uint64_t v165 = sub_1C15198DC();
      __swift_project_value_buffer(v165, (uint64_t)qword_1EA2B5390);
      uint64_t v166 = v224;
      uint64_t v167 = v203;
      (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v203, v78, v164);
      unint64_t v168 = v225;
      swift_bridgeObjectRetain();
      uint64_t v169 = sub_1C15198AC();
      uint64_t v170 = v164;
      os_log_type_t v171 = sub_1C151F38C();
      if (os_log_type_enabled(v169, v171))
      {
        uint64_t v172 = swift_slowAlloc();
        uint64_t v173 = swift_slowAlloc();
        uint64_t v226 = 0;
        uint64_t v219 = v173;
        v228[0] = v173;
        *(_DWORD *)uint64_t v172 = 136446466;
        sub_1C03BC7D0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
        uint64_t v174 = sub_1C152088C();
        id v229 = (id)sub_1BFDA76EC(v174, v175, v228);
        uint64_t v166 = v224;
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        uint64_t v176 = v167;
        uint64_t v177 = v170;
        (*(void (**)(char *, uint64_t))(v166 + 8))(v176, v170);
        *(_WORD *)(v172 + 12) = 2082;
        swift_bridgeObjectRetain();
        id v229 = (id)sub_1BFDA76EC(v220, v168, v228);
        uint64_t v78 = v214;
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BFC31000, v169, v171, "Fixed release public release version %{public}s satisfied for %{public}s", (uint8_t *)v172, 0x16u);
        uint64_t v178 = v219;
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v178, -1, -1);
        uint64_t v179 = v172;
        uint64_t v79 = (uint64_t)v223;
        MEMORY[0x1C18C9B00](v179, -1, -1);

        sub_1C03BC9EC(v217, type metadata accessor for FormatVersioningModeRelease);
        char v26 = v221;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v170);
        sub_1C03BC9EC(v217, type metadata accessor for FormatVersioningModeRelease);
        char v26 = v221;
        uint64_t v177 = v170;
      }
      uint64_t v193 = v79 + *(int *)(type metadata accessor for FormatPackage() + 96);
      (*(void (**)(uint64_t, char *, uint64_t))(v166 + 40))(v193, v78, v177);
      break;
    case 2u:
      uint64_t v99 = (uint64_t)v213;
      uint64_t v100 = v222;
      (*(void (**)(void))(v224 + 32))();
      unint64_t v101 = v225;
      swift_bridgeObjectRetain();
      uint64_t v102 = (uint64_t)v223;
      uint64_t v103 = (void *)v226;
      uint64_t v104 = sub_1C03BBD18((uint64_t)v223, (uint64_t)v221, v99);
      if (v103)
      {
        id v229 = v103;
        id v105 = v103;
        sub_1C017F734();
        if ((swift_dynamicCast() & 1) == 0)
        {
          (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v99, v100);
          goto LABEL_64;
        }

        sub_1C03BCF1C((uint64_t)v22, (uint64_t)v207, type metadata accessor for FormatVersioningError);
        if (qword_1EA1943D0 != -1) {
          swift_once();
        }
        v228[0] = 0;
        v228[1] = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        strcpy((char *)v228, "Fixed version ");
        HIBYTE(v228[1]) = -18;
        sub_1C03BC7D0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        sub_1C151E80C();
        sub_1C02306F8(0, 0, 0, v228[0], v228[1]);
        swift_bridgeObjectRelease();
        uint64_t v106 = v99;
        uint64_t v107 = v224;
        if (qword_1EA194B48 != -1) {
          swift_once();
        }
        uint64_t v108 = sub_1C15198DC();
        __swift_project_value_buffer(v108, (uint64_t)qword_1EA2B5390);
        uint64_t v109 = v200;
        (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v200, v106, v100);
        swift_bridgeObjectRetain();
        uint64_t v110 = sub_1C15198AC();
        os_log_type_t v111 = sub_1C151F36C();
        int v112 = v111;
        if (os_log_type_enabled(v110, v111))
        {
          uint64_t v113 = swift_slowAlloc();
          uint64_t v226 = swift_slowAlloc();
          v228[0] = v226;
          *(_DWORD *)uint64_t v113 = 136446466;
          LODWORD(v223) = v112;
          uint64_t v114 = sub_1C152088C();
          uint64_t v227 = sub_1BFDA76EC(v114, v115, v228);
          sub_1C151FE1C();
          swift_bridgeObjectRelease();
          unint64_t v116 = *(void (**)(char *, uint64_t))(v107 + 8);
          v116(v109, v100);
          *(_WORD *)(v113 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v227 = sub_1BFDA76EC(v220, v101, v228);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BFC31000, v110, (os_log_type_t)v223, "Fixed version %{public}s NOT satisfied for %{public}s", (uint8_t *)v113, 0x16u);
          uint64_t v117 = v226;
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v117, -1, -1);
          MEMORY[0x1C18C9B00](v113, -1, -1);
        }
        else
        {
          unint64_t v116 = *(void (**)(char *, uint64_t))(v107 + 8);
          v116(v109, v100);

          swift_bridgeObjectRelease_n();
        }
        sub_1C03BC7D0(qword_1EA1995E0, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
        swift_allocError();
        char v26 = v207;
        sub_1C03BCE44((uint64_t)v207, v197, type metadata accessor for FormatVersioningError);
        swift_willThrow();
        sub_1C03BC9EC((uint64_t)v26, type metadata accessor for FormatVersioningError);
        v116(v213, v100);
        goto LABEL_82;
      }
      uint64_t v221 = (char *)v104;
      uint64_t v226 = 0;
      if (qword_1EA194B48 != -1) {
        swift_once();
      }
      uint64_t v180 = sub_1C15198DC();
      __swift_project_value_buffer(v180, (uint64_t)qword_1EA2B5390);
      uint64_t v181 = v224;
      (*(void (**)(char *, uint64_t, uint64_t))(v224 + 16))(v40, v99, v100);
      swift_bridgeObjectRetain();
      uint64_t v182 = sub_1C15198AC();
      os_log_type_t v183 = sub_1C151F38C();
      if (os_log_type_enabled(v182, v183))
      {
        uint64_t v184 = swift_slowAlloc();
        uint64_t v219 = swift_slowAlloc();
        v228[0] = v219;
        *(_DWORD *)uint64_t v184 = 136446466;
        uint64_t v218 = v184 + 4;
        sub_1C03BC7D0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
        uint64_t v185 = sub_1C152088C();
        id v229 = (id)sub_1BFDA76EC(v185, v186, v228);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v224 + 8))(v40, v100);
        *(_WORD *)(v184 + 12) = 2082;
        swift_bridgeObjectRetain();
        id v229 = (id)sub_1BFDA76EC(v220, v101, v228);
        uint64_t v181 = v224;
        sub_1C151FE1C();
        uint64_t v99 = (uint64_t)v213;
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BFC31000, v182, v183, "Fixed version %{public}s satisfied for %{public}s", (uint8_t *)v184, 0x16u);
        uint64_t v187 = v219;
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v187, -1, -1);
        uint64_t v188 = v184;
        uint64_t v102 = (uint64_t)v223;
        MEMORY[0x1C18C9B00](v188, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v181 + 8))(v40, v100);

        swift_bridgeObjectRelease_n();
      }
      char v26 = v221;
      uint64_t v194 = v102 + *(int *)(type metadata accessor for FormatPackage() + 96);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 40))(v194, v99, v100);
      break;
    case 3u:
      unint64_t v118 = v225;
      swift_bridgeObjectRetain();
      uint64_t v119 = (uint64_t)v223;
      sub_1C03B6978((uint64_t)v223, (uint64_t)v221, (uint64_t)v26);
      uint64_t v120 = v224;
      uint64_t v121 = v222;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v26, 1, v222) == 1)
      {
        sub_1C03BCEAC((uint64_t)v26, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        if (qword_1EA194B48 != -1) {
          swift_once();
        }
        uint64_t v122 = sub_1C15198DC();
        __swift_project_value_buffer(v122, (uint64_t)qword_1EA2B5390);
        swift_bridgeObjectRetain();
        uint64_t v123 = sub_1C15198AC();
        os_log_type_t v124 = sub_1C151F38C();
        if (os_log_type_enabled(v123, v124))
        {
          uint64_t v125 = (uint8_t *)swift_slowAlloc();
          uint64_t v126 = swift_slowAlloc();
          v228[0] = v126;
          *(_DWORD *)uint64_t v125 = 136446210;
          swift_bridgeObjectRetain();
          id v229 = (id)sub_1BFDA76EC(v220, v118, v228);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          uint64_t v127 = "No detected version for %{public}s";
          goto LABEL_35;
        }
        goto LABEL_65;
      }
      uint64_t v138 = v210;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v210, v26, v121);
      if (qword_1EA194B48 != -1) {
        swift_once();
      }
      uint64_t v139 = sub_1C15198DC();
      __swift_project_value_buffer(v139, (uint64_t)qword_1EA2B5390);
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v45, v138, v121);
      swift_bridgeObjectRetain();
      uint64_t v140 = sub_1C15198AC();
      os_log_type_t v141 = sub_1C151F38C();
      if (os_log_type_enabled(v140, v141))
      {
        uint64_t v142 = swift_slowAlloc();
        uint64_t v221 = (char *)swift_slowAlloc();
        v228[0] = (uint64_t)v221;
        *(_DWORD *)uint64_t v142 = 136446466;
        sub_1C03BC7D0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
        uint64_t v143 = sub_1C152088C();
        id v229 = (id)sub_1BFDA76EC(v143, v144, v228);
        uint64_t v120 = v224;
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v120 + 8))(v45, v121);
        *(_WORD *)(v142 + 12) = 2082;
        swift_bridgeObjectRetain();
        id v229 = (id)sub_1BFDA76EC(v220, v118, v228);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BFC31000, v140, v141, "Detected version %{public}s for %{public}s", (uint8_t *)v142, 0x16u);
        uint64_t v145 = (uint64_t)v221;
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v145, -1, -1);
        uint64_t v146 = v142;
        uint64_t v119 = (uint64_t)v223;
        MEMORY[0x1C18C9B00](v146, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v120 + 8))(v45, v121);

        swift_bridgeObjectRelease_n();
      }
      uint64_t v189 = type metadata accessor for FormatPackage();
      (*(void (**)(uint64_t, char *, uint64_t))(v120 + 40))(v119 + *(int *)(v189 + 96), v210, v121);
      char v26 = (char *)MEMORY[0x1E4FBC860];
      break;
    case 4u:
      uint64_t v128 = qword_1EA194B48;
      unint64_t v129 = v225;
      swift_bridgeObjectRetain();
      if (v128 != -1) {
        swift_once();
      }
      uint64_t v130 = sub_1C15198DC();
      __swift_project_value_buffer(v130, (uint64_t)qword_1EA2B5390);
      swift_bridgeObjectRetain();
      uint64_t v123 = sub_1C15198AC();
      os_log_type_t v124 = sub_1C151F38C();
      if (os_log_type_enabled(v123, v124))
      {
        uint64_t v125 = (uint8_t *)swift_slowAlloc();
        uint64_t v126 = swift_slowAlloc();
        v228[0] = v126;
        *(_DWORD *)uint64_t v125 = 136315138;
        swift_bridgeObjectRetain();
        id v229 = (id)sub_1BFDA76EC(v220, v129, v228);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        uint64_t v127 = "Bypassing versioning for %s";
LABEL_35:
        _os_log_impl(&dword_1BFC31000, v123, v124, v127, v125, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v126, -1, -1);
        MEMORY[0x1C18C9B00](v125, -1, -1);
      }
      else
      {
LABEL_65:

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_66;
    case 5u:
      uint64_t v131 = qword_1EA194B48;
      unint64_t v132 = v225;
      swift_bridgeObjectRetain();
      if (v131 != -1) {
        swift_once();
      }
      uint64_t v133 = sub_1C15198DC();
      __swift_project_value_buffer(v133, (uint64_t)qword_1EA2B5390);
      swift_bridgeObjectRetain();
      uint64_t v134 = sub_1C15198AC();
      os_log_type_t v135 = sub_1C151F38C();
      if (os_log_type_enabled(v134, v135))
      {
        uint64_t v136 = (uint8_t *)swift_slowAlloc();
        uint64_t v137 = swift_slowAlloc();
        v228[0] = v137;
        *(_DWORD *)uint64_t v136 = 136315138;
        swift_bridgeObjectRetain();
        id v229 = (id)sub_1BFDA76EC(v220, v132, v228);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BFC31000, v134, v135, "Forcing public version for %s", v136, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v137, -1, -1);
        MEMORY[0x1C18C9B00](v136, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v147 = v222;
      uint64_t v148 = v224;
      uint64_t v149 = v212;
      uint64_t v150 = v216;
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v151 = __swift_project_value_buffer(v147, (uint64_t)qword_1EB8799C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v50, v151, v147);
      sub_1C151926C();
      uint64_t v152 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56))(v150, 1, 1, v152);
      sub_1C151925C();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v50, v147);
      uint64_t v153 = type metadata accessor for FormatPackage();
      (*(void (**)(uint64_t, char *, uint64_t))(v148 + 40))((uint64_t)v223 + *(int *)(v153 + 96), v149, v147);
LABEL_66:
      char v26 = (char *)MEMORY[0x1E4FBC860];
      break;
    default:
      uint64_t v58 = v211;
      sub_1C03BCF1C((uint64_t)v55, v211, type metadata accessor for FormatVersioningModeRelease);
      char v26 = (char *)(v58 + *(int *)(v218 + 20));
      unint64_t v59 = v225;
      swift_bridgeObjectRetain();
      uint64_t v60 = (void *)v226;
      uint64_t v61 = sub_1C03BBD18((uint64_t)v223, (uint64_t)v221, (uint64_t)v26);
      if (v60)
      {
        id v229 = v60;
        id v62 = v60;
        sub_1C017F734();
        uint64_t v63 = (uint64_t)v205;
        if (swift_dynamicCast())
        {

          sub_1C03BCF1C(v63, (uint64_t)v208, type metadata accessor for FormatVersioningError);
          if (qword_1EA1943D0 != -1) {
            swift_once();
          }
          v228[0] = 0;
          v228[1] = 0xE000000000000000;
          sub_1C15200FC();
          swift_bridgeObjectRelease();
          v228[0] = 0xD000000000000016;
          v228[1] = 0x80000001C160D380;
          sub_1C03BC7D0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
          sub_1C152088C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151E80C();
          unint64_t v64 = v225;
          sub_1C151E80C();
          sub_1C02306F8(0, 0, 0, v228[0], v228[1]);
          swift_bridgeObjectRelease();
          if (qword_1EA194B48 != -1) {
            swift_once();
          }
          uint64_t v65 = sub_1C15198DC();
          __swift_project_value_buffer(v65, (uint64_t)qword_1EA2B5390);
          uint64_t v66 = v202;
          sub_1C03BCE44(v58, v202, type metadata accessor for FormatVersioningModeRelease);
          swift_bridgeObjectRetain();
          uint64_t v67 = sub_1C15198AC();
          os_log_type_t v68 = sub_1C151F36C();
          if (os_log_type_enabled(v67, v68))
          {
            uint64_t v69 = swift_slowAlloc();
            uint64_t v70 = swift_slowAlloc();
            v228[0] = v70;
            *(_DWORD *)uint64_t v69 = 136446466;
            uint64_t v71 = sub_1C152088C();
            uint64_t v227 = sub_1BFDA76EC(v71, v72, v228);
            sub_1C151FE1C();
            swift_bridgeObjectRelease();
            sub_1C03BC9EC(v66, type metadata accessor for FormatVersioningModeRelease);
            *(_WORD *)(v69 + 12) = 2082;
            swift_bridgeObjectRetain();
            uint64_t v227 = sub_1BFDA76EC(v220, v64, v228);
            sub_1C151FE1C();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1BFC31000, v67, v68, "Fixed release version %{public}s NOT satisfied for %{public}s", (uint8_t *)v69, 0x16u);
            swift_arrayDestroy();
            uint64_t v73 = v70;
            uint64_t v58 = v211;
            MEMORY[0x1C18C9B00](v73, -1, -1);
            MEMORY[0x1C18C9B00](v69, -1, -1);
          }
          else
          {
            sub_1C03BC9EC(v66, type metadata accessor for FormatVersioningModeRelease);

            swift_bridgeObjectRelease_n();
          }
          sub_1C03BC7D0(qword_1EA1995E0, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
          swift_allocError();
          char v26 = v208;
          sub_1C03BCE44((uint64_t)v208, v195, type metadata accessor for FormatVersioningError);
          swift_willThrow();
          sub_1C03BC9EC((uint64_t)v26, type metadata accessor for FormatVersioningError);
          sub_1C03BC9EC(v58, type metadata accessor for FormatVersioningModeRelease);
        }
        else
        {
          sub_1C03BC9EC(v58, type metadata accessor for FormatVersioningModeRelease);
LABEL_64:
          swift_bridgeObjectRelease();
        }
LABEL_82:
      }
      else
      {
        uint64_t v221 = (char *)v61;
        uint64_t v226 = 0;
        if (qword_1EA194B48 != -1) {
          swift_once();
        }
        uint64_t v154 = sub_1C15198DC();
        __swift_project_value_buffer(v154, (uint64_t)qword_1EA2B5390);
        uint64_t v155 = v204;
        sub_1C03BCE44(v58, v204, type metadata accessor for FormatVersioningModeRelease);
        swift_bridgeObjectRetain();
        uint64_t v156 = sub_1C15198AC();
        os_log_type_t v157 = sub_1C151F38C();
        BOOL v158 = os_log_type_enabled(v156, v157);
        uint64_t v159 = v222;
        if (v158)
        {
          uint64_t v160 = swift_slowAlloc();
          uint64_t v219 = swift_slowAlloc();
          v228[0] = v219;
          *(_DWORD *)uint64_t v160 = 136446466;
          uint64_t v217 = v160 + 4;
          sub_1C03BC7D0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
          uint64_t v161 = sub_1C152088C();
          id v229 = (id)sub_1BFDA76EC(v161, v162, v228);
          sub_1C151FE1C();
          swift_bridgeObjectRelease();
          sub_1C03BC9EC(v155, type metadata accessor for FormatVersioningModeRelease);
          *(_WORD *)(v160 + 12) = 2082;
          swift_bridgeObjectRetain();
          id v229 = (id)sub_1BFDA76EC(v220, v59, v228);
          uint64_t v58 = v211;
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BFC31000, v156, v157, "Fixed release version %{public}s satisfied for %{public}s", (uint8_t *)v160, 0x16u);
          uint64_t v163 = v219;
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v163, -1, -1);
          MEMORY[0x1C18C9B00](v160, -1, -1);
        }
        else
        {
          sub_1C03BC9EC(v155, type metadata accessor for FormatVersioningModeRelease);

          swift_bridgeObjectRelease_n();
        }
        uint64_t v190 = v224;
        uint64_t v191 = v212;
        (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v212, v26, v159);
        sub_1C03BC9EC(v58, type metadata accessor for FormatVersioningModeRelease);
        uint64_t v192 = type metadata accessor for FormatPackage();
        (*(void (**)(uint64_t, char *, uint64_t))(v190 + 40))((uint64_t)v223 + *(int *)(v192 + 96), v191, v159);
        char v26 = v221;
      }
      break;
  }
  return v26;
}

uint64_t sub_1C03B5204(uint64_t a1, uint64_t a2, int64_t *a3)
{
  uint64_t v117 = a3;
  uint64_t v116 = type metadata accessor for FormatDerivedDataWarningError();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  unint64_t v118 = (int64_t *)((char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v113 = (unint64_t *)((char *)&v104 - v7);
  uint64_t v133 = sub_1C15154CC();
  uint64_t v8 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  uint64_t v131 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v122 = (char *)&v104 - v11;
  sub_1C151546C();
  id v12 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  unint64_t v13 = 0;
  id v132 = sub_1C03B72E8(0x5C2A535C7B5C7B5CLL, 0xEB000000007D5C7DLL, 0);
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v128 = a2 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations;
  swift_bridgeObjectRetain();
  int64_t v114 = v18;
  swift_beginAccess();
  int64_t v19 = 0;
  int64_t v129 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v20 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v126 = MEMORY[0x1E4FBC868];
  uint64_t v127 = (void (**)(char *, uint64_t))(v8 + 8);
  os_log_type_t v124 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v21 = (unint64_t)v122;
  uint64_t v130 = a2;
  if (!v17) {
    goto LABEL_7;
  }
LABEL_4:
  while (2)
  {
    unint64_t v22 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    int64_t v134 = v19;
    for (unint64_t i = v22 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v39)) + (v40 << 6))
    {
      uint64_t v24 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
      a1 = *v24;
      uint64_t v25 = v24[1];
      swift_bridgeObjectRetain();
      char v26 = (void *)sub_1C151E5EC();
      uint64_t v27 = sub_1C151E7AC();
      uint64_t v28 = (void *)sub_1C151E5EC();
      id v29 = objc_msgSend(v132, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v26, 0, 0, v27, v28);

      uint64_t v30 = sub_1C151E62C();
      unint64_t v32 = v31;

      uint64_t v137 = v30;
      unint64_t v138 = v32;
      uint64_t v33 = v131;
      sub_1C151545C();
      sub_1BFF27ECC();
      unint64_t v13 = MEMORY[0x1E4FBB1A0];
      uint64_t v34 = sub_1C151FE9C();
      unint64_t v36 = v35;
      (*v20)(v33, v133);
      swift_bridgeObjectRelease();
      uint64_t v137 = v34;
      unint64_t v138 = v36;
      sub_1C151FE6C();
      int64_t v18 = v37;
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_6;
      }
      int64_t v18 = *(void *)(v114 + 8);
      if (*(void *)(v18 + 16)) {
        break;
      }
LABEL_24:
      uint64_t v43 = v124;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = sub_1BFEF9B68(0, v43[2] + 1, 1, v43);
      }
      a2 = v130;
      uint64_t v44 = v43;
      unint64_t v45 = v43[2];
      os_log_type_t v124 = v44;
      unint64_t v46 = v44[3];
      int64_t v18 = v45 + 1;
      if (v45 >= v46 >> 1) {
        os_log_type_t v124 = sub_1BFEF9B68((void *)(v46 > 1), v45 + 1, 1, v124);
      }
      uint64_t v47 = v124;
      v124[2] = v18;
      uint64_t v48 = &v47[2 * v45];
      v48[4] = a1;
      v48[5] = v25;
      unint64_t v21 = (unint64_t)v122;
      int64_t v19 = v134;
      if (v17) {
        goto LABEL_4;
      }
LABEL_7:
      int64_t v38 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        unint64_t v21 = sub_1C0EE5574((unint64_t)v38 > 1, v18, 1, v21);
LABEL_74:
        *(void *)(v21 + 16) = v18;
        sub_1C03BCF1C(a1, v21+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v13, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
LABEL_76:
        a1 = v17 + 64;
        uint64_t v88 = 1 << *(unsigned char *)(v17 + 32);
        uint64_t v89 = -1;
        if (v88 < 64) {
          uint64_t v89 = ~(-1 << v88);
        }
        unint64_t v90 = v89 & *(void *)(v17 + 64);
        int64_t v91 = (unint64_t)(v88 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v92 = 0;
        if (v90)
        {
LABEL_79:
          unint64_t v93 = __clz(__rbit64(v90));
          v90 &= v90 - 1;
          unint64_t v94 = v93 | (v92 << 6);
          goto LABEL_80;
        }
        while (1)
        {
          int64_t v38 = v92 + 1;
          if (__OFADD__(v92, 1)) {
            goto LABEL_104;
          }
          int64_t v18 = (int64_t)v127;
          if (v38 >= v91) {
            goto LABEL_102;
          }
          unint64_t v95 = *(void *)(a1 + 8 * v38);
          ++v92;
          if (!v95)
          {
            int64_t v92 = v38 + 1;
            if (v38 + 1 >= v91) {
              goto LABEL_102;
            }
            unint64_t v95 = *(void *)(a1 + 8 * v92);
            if (!v95)
            {
              int64_t v92 = v38 + 2;
              if (v38 + 2 >= v91) {
                goto LABEL_102;
              }
              unint64_t v95 = *(void *)(a1 + 8 * v92);
              if (!v95)
              {
                v38 += 3;
                if (v38 >= v91)
                {
LABEL_102:
                  swift_release();

                  (*(void (**)(char *, uint64_t))v18)(v122, v133);
                  swift_bridgeObjectRelease();
                  return v21;
                }
                unint64_t v95 = *(void *)(a1 + 8 * v38);
                if (!v95)
                {
                  while (1)
                  {
                    int64_t v92 = v38 + 1;
                    if (__OFADD__(v38, 1)) {
                      goto LABEL_107;
                    }
                    if (v92 >= v91) {
                      goto LABEL_102;
                    }
                    unint64_t v95 = *(void *)(a1 + 8 * v92);
                    ++v38;
                    if (v95) {
                      goto LABEL_95;
                    }
                  }
                }
                int64_t v92 = v38;
              }
            }
          }
LABEL_95:
          unint64_t v90 = (v95 - 1) & v95;
          unint64_t v94 = __clz(__rbit64(v95)) + (v92 << 6);
LABEL_80:
          int64_t v18 = *(void *)(*(void *)(v17 + 56) + 8 * v94);
          if (*(void *)(v18 + 16))
          {
            uint64_t v98 = (int64_t *)(*(void *)(v17 + 48) + 16 * v94);
            int64_t v96 = *v98;
            int64_t v97 = v98[1];
            int64_t v99 = *v117;
            int64_t v100 = v117[1];
            unint64_t v101 = v118;
            *unint64_t v118 = v18;
            v101[1] = v96;
            v101[2] = v97;
            v101[3] = v99;
            v101[4] = v100;
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v21 = sub_1C0EE5574(0, *(void *)(v21 + 16) + 1, 1, v21);
            }
            unint64_t v13 = *(void *)(v21 + 16);
            unint64_t v102 = *(void *)(v21 + 24);
            int64_t v18 = v13 + 1;
            if (v13 >= v102 >> 1) {
              unint64_t v21 = sub_1C0EE5574(v102 > 1, v13 + 1, 1, v21);
            }
            *(void *)(v21 + 16) = v18;
            sub_1C03BCF1C((uint64_t)v118, v21+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v13, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
            if (v90) {
              goto LABEL_79;
            }
          }
          else if (v90)
          {
            goto LABEL_79;
          }
        }
      }
      if (v38 >= v129)
      {
        swift_release();
        unint64_t v17 = v126;
        goto LABEL_72;
      }
      unint64_t v39 = *(void *)(v128 + 8 * v38);
      int64_t v40 = v19 + 1;
      unint64_t v17 = v126;
      if (!v39)
      {
        int64_t v40 = v19 + 2;
        if (v19 + 2 >= v129) {
          goto LABEL_71;
        }
        unint64_t v39 = *(void *)(v128 + 8 * v40);
        if (!v39)
        {
          int64_t v40 = v19 + 3;
          if (v19 + 3 >= v129) {
            goto LABEL_71;
          }
          unint64_t v39 = *(void *)(v128 + 8 * v40);
          if (!v39)
          {
            int64_t v38 = v19 + 4;
            if (v19 + 4 >= v129) {
              goto LABEL_71;
            }
            unint64_t v39 = *(void *)(v128 + 8 * v38);
            if (!v39)
            {
              while (1)
              {
                int64_t v40 = v38 + 1;
                if (__OFADD__(v38, 1)) {
                  goto LABEL_106;
                }
                if (v40 >= v129) {
                  break;
                }
                unint64_t v39 = *(void *)(v128 + 8 * v40);
                ++v38;
                if (v39) {
                  goto LABEL_20;
                }
              }
LABEL_71:
              swift_release();
LABEL_72:
              a1 = (uint64_t)v113;
              if (!v124[2])
              {
                swift_bridgeObjectRelease();
                unint64_t v21 = MEMORY[0x1E4FBC860];
                goto LABEL_76;
              }
              uint64_t v86 = *v117;
              uint64_t v87 = v117[1];
              *uint64_t v113 = v124;
              *(void *)(a1 + 8) = v86;
              *(void *)(a1 + 16) = v87;
              swift_storeEnumTagMultiPayload();
              swift_bridgeObjectRetain();
              unint64_t v21 = sub_1C0EE5574(0, 1, 1, MEMORY[0x1E4FBC860]);
              unint64_t v13 = *(void *)(v21 + 16);
              int64_t v38 = *(void *)(v21 + 24);
              int64_t v18 = v13 + 1;
              if (v13 < (unint64_t)v38 >> 1) {
                goto LABEL_74;
              }
              goto LABEL_108;
            }
            int64_t v40 = v19 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v17 = (v39 - 1) & v39;
      int64_t v134 = v40;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v41 = sub_1BFEF2D8C(a1, v25);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    uint64_t v49 = (void *)(*(void *)(v18 + 56) + 40 * v41);
    int64_t v50 = v49[1];
    uint64_t v51 = v49[4];
    unint64_t v104 = v49[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v105 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void *)(v112 + 16);
    uint64_t v110 = *(void *)(v52 + 16);
    if (!v110)
    {
      int64_t v18 = v105;
      unint64_t v13 = v104;
LABEL_69:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      a2 = v130;
      int64_t v19 = v134;
      if (v17) {
        continue;
      }
      goto LABEL_7;
    }
    break;
  }
  uint64_t v53 = *(void *)(v51 + 16);
  uint64_t v108 = v52 + 32;
  uint64_t v106 = v51 + 32;
  swift_bridgeObjectRetain();
  unint64_t v54 = 0;
  uint64_t v109 = v53;
  unint64_t v13 = v53 - 1;
  uint64_t v120 = v51;
  uint64_t v107 = v52;
  unint64_t v119 = v53 - 1;
  while (2)
  {
    if (v54 >= *(void *)(v52 + 16))
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
      goto LABEL_112;
    }
    unint64_t v111 = v54;
    uint64_t v55 = (uint64_t *)(v108 + 16 * v54);
    uint64_t v56 = v55[1];
    uint64_t v123 = *v55;
    if (!v109)
    {
      swift_bridgeObjectRetain();
      goto LABEL_47;
    }
    uint64_t v57 = v56;
    unint64_t v21 = *(void *)(v51 + 16);
    uint64_t v121 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v21) {
      goto LABEL_105;
    }
    unint64_t v21 = 0;
    LOBYTE(v38) = 0;
    uint64_t v58 = v106;
LABEL_39:
    if (v38) {
      goto LABEL_41;
    }
    unint64_t v59 = *(void *)(v58 + 8);
    uint64_t v125 = *(void **)v58;
    uint64_t v137 = 0x2D676E616CLL;
    unint64_t v138 = 0xE500000000000000;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    uint64_t v60 = v137;
    unint64_t v61 = v138;
    uint64_t v137 = (uint64_t)v125;
    unint64_t v138 = v59;
    uint64_t v135 = v60;
    unint64_t v136 = v61;
    int64_t v18 = sub_1C151FF0C();
    uint64_t v51 = v120;
    swift_bridgeObjectRelease();
    uint64_t v20 = v127;
    swift_bridgeObjectRelease_n();
    unint64_t v13 = v119;
    swift_bridgeObjectRelease();
    if (v18)
    {
LABEL_41:
      if (v13 != v21)
      {
        int64_t v38 = 1;
        goto LABEL_38;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v21 = (unint64_t)v122;
LABEL_33:
      uint64_t v52 = v107;
      unint64_t v54 = v111 + 1;
      if (v111 + 1 != v110) {
        continue;
      }
      swift_bridgeObjectRelease();
      unint64_t v13 = v105;
      int64_t v18 = v25;
      goto LABEL_69;
    }
    break;
  }
  if (v13 != v21)
  {
    int64_t v38 = 0;
LABEL_38:
    ++v21;
    v58 += 32;
    if (v21 >= *(void *)(v51 + 16)) {
      goto LABEL_105;
    }
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = v121;
LABEL_47:
  if (*(void *)(v126 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v62 = sub_1BFEF2D8C(v123, v56);
    uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
    if (v64)
    {
      uint64_t v63 = *(void **)(*(void *)(v126 + 56) + 8 * v62);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = v56;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v63 = sub_1BFEF9B68(0, v63[2] + 1, 1, v63);
  }
  unint64_t v67 = v63[2];
  unint64_t v66 = v63[3];
  uint64_t v125 = v63;
  if (v67 >= v66 >> 1) {
    uint64_t v125 = sub_1BFEF9B68((void *)(v66 > 1), v67 + 1, 1, v125);
  }
  os_log_type_t v68 = v125;
  v125[2] = v67 + 1;
  uint64_t v69 = &v68[2 * v67];
  v69[4] = a1;
  v69[5] = v25;
  int64_t v18 = v126;
  LODWORD(v121) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v137 = v18;
  uint64_t v70 = v65;
  unint64_t v72 = sub_1BFEF2D8C(v123, v65);
  uint64_t v73 = *(void *)(v18 + 16);
  BOOL v74 = (v71 & 1) == 0;
  uint64_t v75 = v73 + v74;
  if (__OFADD__(v73, v74)) {
    goto LABEL_110;
  }
  char v76 = v71;
  if (*(void *)(v18 + 24) >= v75)
  {
    if ((v121 & 1) == 0)
    {
      int64_t v18 = (int64_t)&v137;
      LODWORD(v126) = v71;
      unint64_t v85 = v72;
      sub_1C106B5D8();
      unint64_t v72 = v85;
      char v76 = v126;
    }
LABEL_62:
    uint64_t v79 = (void *)v137;
    uint64_t v126 = v137;
    if (v76)
    {
      uint64_t v80 = *(void *)(v137 + 56);
      int64_t v18 = 8 * v72;
      swift_bridgeObjectRelease();
      *(void *)(v80 + v18) = v125;
    }
    else
    {
      *(void *)(v137 + 8 * (v72 >> 6) + 64) |= 1 << v72;
      uint64_t v81 = (void *)(v79[6] + 16 * v72);
      *uint64_t v81 = v123;
      v81[1] = v70;
      *(void *)(v79[7] + 8 * v72) = v125;
      uint64_t v82 = v79[2];
      BOOL v83 = __OFADD__(v82, 1);
      uint64_t v84 = v82 + 1;
      if (v83) {
        goto LABEL_111;
      }
      uint64_t v79[2] = v84;
      swift_bridgeObjectRetain();
    }
    unint64_t v21 = (unint64_t)v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  sub_1C1055BEC(v75, v121);
  int64_t v18 = v137;
  unint64_t v77 = sub_1BFEF2D8C(v123, v70);
  if ((v76 & 1) == (v78 & 1))
  {
    unint64_t v72 = v77;
    goto LABEL_62;
  }
LABEL_112:
  sub_1C1520CFC();
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C03B5FAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataBinderResult();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(v7 + 56);
  uint64_t v44 = v7 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v45 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v47 = a2;
  uint64_t v48 = v7;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v49)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v49 = i;
      unint64_t v15 = v14 | (i << 6);
    }
    else
    {
      int64_t v16 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_42;
      }
      if (v16 >= v45) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v44 + 8 * v16);
      int64_t v18 = i + 1;
      if (!v17)
      {
        int64_t v18 = i + 2;
        if (i + 2 >= v45) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v44 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = i + 3;
          if (i + 3 >= v45) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v44 + 8 * v18);
          if (!v17)
          {
            uint64_t v19 = i + 4;
            if (i + 4 >= v45) {
              return swift_release();
            }
            unint64_t v17 = *(void *)(v44 + 8 * v19);
            if (!v17)
            {
              while (1)
              {
                int64_t v18 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_43;
                }
                if (v18 >= v45) {
                  return swift_release();
                }
                unint64_t v17 = *(void *)(v44 + 8 * v18);
                ++v19;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = i + 4;
          }
        }
      }
LABEL_21:
      unint64_t v11 = (v17 - 1) & v17;
      int64_t v49 = v18;
      unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    uint64_t v20 = *(void *)(*(void *)(v48 + 48) + 8 * v15);
    uint64_t v21 = *a1;
    if (*(void *)(*a1 + 16))
    {
      unint64_t v22 = sub_1BFC44E98(v20);
      unint64_t v23 = MEMORY[0x1E4FBC860];
      if (v24)
      {
        unint64_t v23 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      unint64_t v23 = MEMORY[0x1E4FBC860];
    }
    sub_1C03BCE44(v47, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v23 = sub_1C0EE5604(0, *(void *)(v23 + 16) + 1, 1, v23);
    }
    unint64_t v26 = *(void *)(v23 + 16);
    unint64_t v25 = *(void *)(v23 + 24);
    if (v26 >= v25 >> 1) {
      unint64_t v23 = sub_1C0EE5604(v25 > 1, v26 + 1, 1, v23);
    }
    *(void *)(v23 + 16) = v26 + 1;
    uint64_t v27 = v6;
    sub_1C03BCF1C((uint64_t)v6, v23+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v26, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v50 = (void *)*a1;
    id v29 = v50;
    *a1 = 0x8000000000000000;
    unint64_t v31 = sub_1BFC44E98(v20);
    uint64_t v32 = v29[2];
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      break;
    }
    char v35 = v30;
    if (v29[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C106EE60();
      }
    }
    else
    {
      sub_1C105AE30(v34, isUniquelyReferenced_nonNull_native);
      unint64_t v36 = sub_1BFC44E98(v20);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_44;
      }
      unint64_t v31 = v36;
    }
    int64_t v38 = v50;
    if (v35)
    {
      uint64_t v13 = v50[7];
      swift_bridgeObjectRelease();
      *(void *)(v13 + 8 * v31) = v23;
    }
    else
    {
      v50[(v31 >> 6) + 8] |= 1 << v31;
      *(void *)(v38[6] + 8 * v31) = v20;
      *(void *)(v38[7] + 8 * v31) = v23;
      uint64_t v39 = v38[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_41;
      }
      v38[2] = v41;
    }
    *a1 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    uint64_t v6 = v27;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C03B63C0(uint64_t *a1, _OWORD *a2)
{
  sub_1C03BCDD4(0, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  uint64_t v5 = v4;
  uint64_t v53 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (_OWORD *)((char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (_OWORD *)((char *)&v52 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v52 - v12;
  MEMORY[0x1F4188790](v14);
  int64_t v16 = (_OWORD *)((char *)&v52 - v15);
  uint64_t v18 = *(int *)(v17 + 48);
  uint64_t v19 = (uint64_t *)((char *)&v52 + v18 - v15);
  long long v20 = a2[7];
  v16[6] = a2[6];
  v16[7] = v20;
  v16[8] = a2[8];
  long long v21 = a2[3];
  v16[2] = a2[2];
  v16[3] = v21;
  long long v22 = a2[5];
  v16[4] = a2[4];
  v16[5] = v22;
  long long v23 = a2[1];
  *int64_t v16 = *a2;
  v16[1] = v23;
  uint64_t v54 = (uint64_t)a2 + v18;
  sub_1C03BCE44((uint64_t)a2 + v18, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v25 = *v19;
  uint64_t v24 = v19[1];
  swift_bridgeObjectRetain();
  sub_1C03BC9EC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v26 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v27 = sub_1BFEF2D8C(v25, v24), (v28 & 1) != 0))
  {
    uint64_t v29 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t)&v13[*(int *)(v5 + 48)];
  long long v31 = a2[7];
  long long v62 = a2[6];
  long long v63 = v31;
  long long v64 = a2[8];
  long long v32 = a2[3];
  long long v58 = a2[2];
  long long v59 = v32;
  long long v33 = a2[5];
  long long v60 = a2[4];
  long long v61 = v33;
  long long v34 = a2[1];
  long long v56 = *a2;
  long long v57 = v34;
  uint64_t v35 = v54;
  sub_1C03BCE44(v54, v30, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v36 = (uint64_t)v10 + *(int *)(v5 + 48);
  long long v37 = v63;
  v10[6] = v62;
  v10[7] = v37;
  v10[8] = v64;
  long long v38 = v61;
  v10[4] = v60;
  v10[5] = v38;
  long long v39 = v59;
  void v10[2] = v58;
  v10[3] = v39;
  long long v40 = v57;
  *uint64_t v10 = v56;
  v10[1] = v40;
  sub_1C03BCF1C(v30, v36, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  sub_1C0187D08((uint64_t)&v56);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v29 = sub_1C0EE564C(0, *(void *)(v29 + 16) + 1, 1, v29);
  }
  unint64_t v42 = *(void *)(v29 + 16);
  unint64_t v41 = *(void *)(v29 + 24);
  if (v42 >= v41 >> 1) {
    uint64_t v29 = sub_1C0EE564C(v41 > 1, v42 + 1, 1, v29);
  }
  *(void *)(v29 + 16) = v42 + 1;
  sub_1C03BCD60((uint64_t)v10, v29+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v42, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  uint64_t v43 = (uint64_t *)((char *)v7 + *(int *)(v5 + 48));
  long long v44 = v63;
  _OWORD v7[6] = v62;
  v7[7] = v44;
  v7[8] = v64;
  long long v45 = v61;
  v7[4] = v60;
  v7[5] = v45;
  long long v46 = v59;
  void v7[2] = v58;
  v7[3] = v46;
  long long v47 = v57;
  _OWORD *v7 = v56;
  v7[1] = v47;
  sub_1C03BCE44(v35, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v48 = *v43;
  uint64_t v49 = v43[1];
  swift_bridgeObjectRetain();
  sub_1C03BC9EC((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v55 = *a1;
  *a1 = 0x8000000000000000;
  sub_1C1067C90(v29, v48, v49, isUniquelyReferenced_nonNull_native);
  *a1 = v55;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03B67FC@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  sub_1C03BCDD4(0, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (_OWORD *)((char *)&v17 - v5);
  uint64_t v8 = *(int *)(v7 + 56);
  uint64_t v9 = (uint64_t)v6 + v8;
  long long v10 = a1[7];
  v6[6] = a1[6];
  v6[7] = v10;
  unsigned char v6[8] = a1[8];
  long long v11 = a1[3];
  _OWORD v6[2] = a1[2];
  v6[3] = v11;
  long long v12 = a1[5];
  v6[4] = a1[4];
  v6[5] = v12;
  long long v13 = a1[1];
  *uint64_t v6 = *a1;
  v6[1] = v13;
  sub_1C03BCE44((uint64_t)a1 + v8, (uint64_t)v6 + v8, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v14 = *(void *)(v9 + 48);
  swift_bridgeObjectRetain();
  sub_1C03BC9EC(v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v15;
  return result;
}

uint64_t sub_1C03B6920@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)(result + 48) + 16);
  return result;
}

uint64_t sub_1C03B6930@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatPropertyDefinition.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C03B696C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03B6978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[1] = a1;
  uint64_t v5 = type metadata accessor for FormatVersionInfo(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03B8104(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  long long v11 = (char *)v21 - v10;
  uint64_t v12 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  unint64_t v16 = sub_1C018E6EC(MEMORY[0x1E4FBC860]);
  uint64_t v26 = v15;
  unint64_t v27 = v16;
  swift_storeEnumTagMultiPayload();
  Dictionary<>.seedFormatCodingVersion(mode:)((uint64_t)v14);
  sub_1C03BC9EC((uint64_t)v14, type metadata accessor for FormatVersioningMode);
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  uint64_t v22 = v26;
  uint64_t v23 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C139559C(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = &type metadata for TraversalOnlyEncoder;
  unint64_t v25 = sub_1BFEFC8E4();
  uint64_t v22 = v17;
  uint64_t v23 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormatPackage.encode(to:)(&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  swift_bridgeObjectRelease();
  Dictionary<>.formatCodingVersionInfo.getter(v18, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    sub_1C03BCEAC((uint64_t)v11, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    uint64_t v20 = sub_1C151928C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 1, 1, v20);
  }
  else
  {
    sub_1C03BCE44((uint64_t)v11, (uint64_t)v8, type metadata accessor for FormatVersionInfo);
    sub_1C03BCEAC((uint64_t)v11, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    sub_1BFEBF7B8((uint64_t)&v8[*(int *)(v5 + 20)], a3, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    return sub_1C03BC9EC((uint64_t)v8, type metadata accessor for FormatVersionInfo);
  }
}

uint64_t sub_1C03B6F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C03B8104(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v22 - v11;
  if (*(void *)(a1 + 8))
  {
    sub_1C151632C();
    uint64_t v13 = sub_1C151635C();
    int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13);
    uint64_t result = sub_1C03BCEAC((uint64_t)v12, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990]);
    if (v14 != 1) {
      return result;
    }
    unint64_t v16 = (void **)(a4 + 16);
  }
  else
  {
    unint64_t v16 = (void **)(a5 + 16);
  }
  swift_beginAccess();
  uint64_t v17 = *v16;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v16 = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v17 = sub_1BFEF9B68(0, v17[2] + 1, 1, v17);
    *unint64_t v16 = v17;
  }
  unint64_t v20 = v17[2];
  unint64_t v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    uint64_t v17 = sub_1BFEF9B68((void *)(v19 > 1), v20 + 1, 1, v17);
    *unint64_t v16 = v17;
  }
  v17[2] = v20 + 1;
  long long v21 = &v17[2 * v20];
  v21[4] = a2;
  v21[5] = a3;
  return swift_endAccess();
}

uint64_t FormatDerivedDataCompiler.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C03BC9EC(v0 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataCompilerSettings);
  swift_release();
  return v0;
}

uint64_t FormatDerivedDataCompiler.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C03BC9EC(v0 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataCompilerSettings);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C03B71D0()
{
  return type metadata accessor for FormatDerivedDataCompiler();
}

uint64_t type metadata accessor for FormatDerivedDataCompiler()
{
  uint64_t result = qword_1EA19AAD0;
  if (!qword_1EA19AAD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C03B7224()
{
  uint64_t result = type metadata accessor for FormatDerivedDataCompilerSettings();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FormatDerivedDataCompiler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatDerivedDataCompiler);
}

id sub_1C03B72E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1C1515D3C();

    swift_willThrow();
  }
  return v6;
}

void sub_1C03B73C4()
{
  if (!qword_1EA19AAE0)
  {
    type metadata accessor for FormatDerivedDataResultOptionReference(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19AAE0);
    }
  }
}

unint64_t sub_1C03B742C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v119 = a2;
  uint64_t v5 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v116 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03B8104(0, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v87 - v9;
  uint64_t v11 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int v14 = (uint64_t *)((char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v103);
  uint64_t v112 = (uint64_t *)((char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for FormatCompilingSlotDefinition(0);
  uint64_t v106 = *(void *)(v16 - 8);
  uint64_t v107 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v104 = (uint64_t)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v93 = *(void *)(a1 + 16);
  if (!v93) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v96 = type metadata accessor for FormatCompilerSlotDefinition(0);
  uint64_t v19 = a1
      + ((*(unsigned __int8 *)(*(void *)(v96 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v96 - 8) + 80));
  uint64_t v20 = *(void *)(*(void *)(v96 - 8) + 72);
  unint64_t v95 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v91 = a1;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  unint64_t v108 = v18;
  unint64_t v90 = v10;
  uint64_t v97 = v11;
  uint64_t v98 = v14;
  uint64_t v88 = v19;
  uint64_t v89 = v20;
  uint64_t v117 = v7;
  while (1)
  {
    uint64_t v23 = v14;
    uint64_t v24 = v10;
    unint64_t v25 = (void *)(v19 + v20 * v22);
    if ((v25[8] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      swift_release();
      LODWORD(v86) = 0;
      uint64_t v85 = 1092;
      v84[0] = 2;
      unint64_t result = sub_1C152052C();
      __break(1u);
      return result;
    }
    unint64_t v26 = v18;
    uint64_t v94 = v22;
    MEMORY[0x1F4188790](v21);
    uint64_t v86 = v19 + v20 * v22;
    char v28 = sub_1C0182584(sub_1BFFE2DF4, (uint64_t)v84, 0, v27);
    int64_t v29 = v28[2];
    if (v29) {
      break;
    }
    uint64_t v81 = v11;
    swift_bridgeObjectRelease();
    unint64_t v82 = v26;
    uint64_t v10 = v24;
    int v14 = v23;
LABEL_22:
    uint64_t v66 = *(void *)(v82 + 16);
    int64_t v67 = *(void *)(v108 + 16);
    int64_t v68 = v67 + v66;
    if (__OFADD__(v67, v66)) {
      goto LABEL_45;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v70 = v108;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v68 > *(void *)(v108 + 24) >> 1)
    {
      if (v67 <= v68) {
        int64_t v71 = v67 + v66;
      }
      else {
        int64_t v71 = v67;
      }
      uint64_t v70 = sub_1C0EE55BC(isUniquelyReferenced_nonNull_native, v71, 1, v108);
    }
    uint64_t v11 = v81;
    uint64_t v72 = *(void *)(v82 + 16);
    uint64_t v20 = v89;
    unint64_t v108 = v70;
    if (v72)
    {
      uint64_t v73 = *(void *)(v70 + 16);
      if ((*(void *)(v70 + 24) >> 1) - v73 < v66) {
        goto LABEL_47;
      }
      unint64_t v74 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
      uint64_t v75 = *(void *)(v106 + 72);
      unint64_t v76 = v70 + v74 + v75 * v73;
      if (v82 + v74 < v76 + v75 * v66 && v76 < v82 + v74 + v75 * v66) {
        goto LABEL_49;
      }
      swift_arrayInitWithCopy();
      unint64_t v18 = MEMORY[0x1E4FBC860];
      if (v66)
      {
        uint64_t v78 = *(void *)(v108 + 16);
        BOOL v79 = __OFADD__(v78, v66);
        uint64_t v80 = v78 + v66;
        if (v79) {
          goto LABEL_48;
        }
        *(void *)(v108 + 16) = v80;
      }
    }
    else
    {
      unint64_t v18 = MEMORY[0x1E4FBC860];
      if (v66) {
        goto LABEL_46;
      }
    }
    uint64_t v22 = v94 + 1;
    uint64_t v21 = swift_bridgeObjectRelease();
    uint64_t v19 = v88;
    if (v22 == v93)
    {
      swift_bridgeObjectRelease();
      return v108;
    }
  }
  unint64_t v121 = v26;
  sub_1C05F6F78(0, v29, 0);
  unint64_t v115 = v121;
  int64_t v92 = v28;
  int64_t v105 = v28 + 4;
  uint64_t v30 = v25[3];
  uint64_t v100 = v25[2];
  uint64_t v99 = v25[4];
  uint64_t v31 = v25[5];
  uint64_t v32 = v25[6];
  uint64_t v33 = v25[7];
  int64_t v101 = v29;
  unint64_t v102 = v25;
  uint64_t v10 = v24;
  uint64_t v34 = 0;
  uint64_t v109 = v32;
  uint64_t v113 = v31;
  uint64_t v114 = v33;
  uint64_t v118 = v30;
  while (1)
  {
    uint64_t v35 = &v105[2 * v34];
    uint64_t v36 = v35[1];
    uint64_t v110 = *v35;
    uint64_t v111 = v34;
    int64_t v37 = *(void *)(v32 + 16);
    if (v37) {
      break;
    }
    uint64_t v39 = v36;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v49 = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t v48 = v30;
LABEL_14:
    uint64_t v50 = v96;
    uint64_t v51 = v102;
    uint64_t v52 = v112;
    sub_1BFEBF7B8((uint64_t)v102 + *(int *)(v96 + 44), (uint64_t)v112 + *(int *)(v103 + 40), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    void *v52 = v110;
    v52[1] = v39;
    uint64_t v110 = v39;
    uint64_t v52[2] = v100;
    v52[3] = v48;
    v52[4] = v99;
    v52[5] = v49;
    uint64_t v53 = MEMORY[0x1E4FBC860];
    uint64_t v54 = v114;
    v52[6] = MEMORY[0x1E4FBC860];
    v52[7] = v54;
    v52[8] = v40;
    sub_1BFEBF7B8((uint64_t)v51 + *(int *)(v50 + 40), (uint64_t)v10, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    uint64_t v55 = v97;
    if ((*v95)(v10, 1, v97) == 1)
    {
      int v14 = v98;
      long long v56 = (char *)v98 + *(int *)(v55 + 20);
      uint64_t v57 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
      long long v58 = (char *)v14 + *(int *)(v55 + 24);
      uint64_t v59 = sub_1C1518CDC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
      *int v14 = v53;
      sub_1C03BCEAC((uint64_t)v10, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    }
    else
    {
      int v14 = v98;
      sub_1C03BCF1C((uint64_t)v10, (uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    }
    uint64_t v60 = v104;
    uint64_t v61 = v111;
    sub_1C03BCF1C((uint64_t)v112, v104, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCF1C((uint64_t)v14, v60 + *(int *)(v107 + 20), (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    swift_bridgeObjectRelease();
    unint64_t v62 = v115;
    unint64_t v121 = v115;
    unint64_t v64 = *(void *)(v115 + 16);
    unint64_t v63 = *(void *)(v115 + 24);
    uint64_t v30 = v118;
    if (v64 >= v63 >> 1)
    {
      sub_1C05F6F78(v63 > 1, v64 + 1, 1);
      uint64_t v60 = v104;
      unint64_t v62 = v121;
    }
    uint64_t v34 = v61 + 1;
    *(void *)(v62 + 16) = v64 + 1;
    unint64_t v65 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    unint64_t v115 = v62;
    sub_1C03BCF1C(v60, v62 + v65 + *(void *)(v106 + 72) * v64, type metadata accessor for FormatCompilingSlotDefinition);
    uint64_t v32 = v109;
    if (v34 == v101)
    {
      uint64_t v81 = v55;
      swift_bridgeObjectRelease();
      unint64_t v82 = v115;
      goto LABEL_22;
    }
  }
  uint64_t v38 = v32;
  uint64_t v120 = MEMORY[0x1E4FBC860];
  uint64_t v39 = v36;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C05F6FC0(0, v37, 0);
  uint64_t v40 = v120;
  uint64_t v41 = *(void *)(type metadata accessor for FormatCompilerProperty(0) - 8);
  uint64_t v42 = v38 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  uint64_t v43 = *(void *)(v41 + 72);
  uint64_t v44 = (uint64_t)v117;
  while (1)
  {
    sub_1C131CDA8(v119, v44);
    if (v3) {
      break;
    }
    uint64_t v120 = v40;
    unint64_t v46 = *(void *)(v40 + 16);
    unint64_t v45 = *(void *)(v40 + 24);
    if (v46 >= v45 >> 1)
    {
      sub_1C05F6FC0(v45 > 1, v46 + 1, 1);
      uint64_t v40 = v120;
    }
    *(void *)(v40 + 16) = v46 + 1;
    uint64_t v44 = (uint64_t)v117;
    sub_1C03BCF1C((uint64_t)v117, v40+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * v46, type metadata accessor for FormatPropertyDefinition);
    v42 += v43;
    --v37;
    uint64_t v47 = v118;
    if (!v37)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v90;
      uint64_t v48 = v47;
      uint64_t v49 = v113;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03B7F10(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F6FC0(0, v8, 0);
    uint64_t v9 = v17;
    uint64_t v10 = *(void *)(type metadata accessor for FormatCompilerProperty(0) - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v15 = *(void *)(v10 + 72);
    while (1)
    {
      sub_1C131CDA8(v16, (uint64_t)v7);
      if (v2) {
        break;
      }
      uint64_t v17 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C05F6FC0(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v17;
      }
      *(void *)(v9 + 16) = v13 + 1;
      sub_1C03BCF1C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, type metadata accessor for FormatPropertyDefinition);
      v11 += v15;
      if (!--v8) {
        return v9;
      }
    }
    swift_release();
  }
  return v9;
}

void sub_1C03B8104(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C03B8168(uint64_t a1, void (*a2)(uint64_t, uint64_t, void, void, char *), uint64_t a3)
{
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  sub_1C03BCDD4(0, &qword_1EA19AB48, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  uint64_t v58 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (void *)((char *)v42 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)v42 - v10;
  sub_1C03BCDD4(0, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v57 = (uint64_t)v42 - v12;
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (!v13) {
    return v14;
  }
  v42[1] = v3;
  uint64_t v59 = MEMORY[0x1E4FBC860];
  sub_1C05F7308(0, v13, 0);
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v17 = result;
  uint64_t v18 = 0;
  uint64_t v19 = a1 + 64;
  uint64_t v43 = a1 + 80;
  int64_t v44 = v13;
  uint64_t v46 = a1 + 64;
  uint64_t v47 = a1;
  uint64_t v45 = v16;
  uint64_t v20 = v50;
  while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v22 = (unint64_t)v17 >> 6;
    if ((*(void *)(v19 + 8 * ((unint64_t)v17 >> 6)) & (1 << v17)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v16) {
      goto LABEL_26;
    }
    uint64_t v55 = v18;
    uint64_t v56 = 1 << v17;
    uint64_t v23 = v58;
    uint64_t v24 = (uint64_t)v20 + *(int *)(v58 + 48);
    uint64_t v25 = *(void *)(a1 + 48);
    uint64_t v26 = *(void *)(a1 + 56);
    uint64_t v27 = (uint64_t *)(v25 + 16 * v17);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = type metadata accessor for FormatDerivedDataBindingSlotResult();
    sub_1C03BCE44(v26 + *(void *)(*(void *)(v30 - 8) + 72) * v17, v24, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
    *uint64_t v20 = v29;
    v20[1] = v28;
    uint64_t v31 = v51;
    *uint64_t v51 = v29;
    v31[1] = v28;
    sub_1C03BCE44(v24, (uint64_t)v31 + *(int *)(v23 + 48), (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
    uint64_t v32 = (uint64_t)v31;
    uint64_t v33 = v57;
    uint64_t v34 = v52;
    sub_1C03BCD60(v32, (uint64_t)v52, &qword_1EA19AB48, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    swift_bridgeObjectRetain_n();
    sub_1C03BCC08((uint64_t)v20, &qword_1EA19AB48, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    v53(v33, v33 + *(int *)(v49 + 48), *(void *)v34, *((void *)v34 + 1), &v34[*(int *)(v58 + 48)]);
    sub_1C03BCC08((uint64_t)v34, &qword_1EA19AB48, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    uint64_t v14 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F7308(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v14 = v59;
    }
    unint64_t v36 = *(void *)(v14 + 16);
    unint64_t v35 = *(void *)(v14 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_1C05F7308(v35 > 1, v36 + 1, 1);
      uint64_t v14 = v59;
    }
    *(void *)(v14 + 16) = v36 + 1;
    uint64_t result = sub_1C03BCD60(v57, v14+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v36, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    a1 = v47;
    int64_t v21 = 1 << *(unsigned char *)(v47 + 32);
    if (v17 >= v21) {
      goto LABEL_27;
    }
    uint64_t v19 = v46;
    uint64_t v37 = *(void *)(v46 + 8 * v22);
    if ((v37 & v56) == 0) {
      goto LABEL_28;
    }
    LODWORD(v16) = v45;
    if (*(_DWORD *)(v47 + 36) != v45) {
      goto LABEL_29;
    }
    unint64_t v38 = v37 & (-2 << (v17 & 0x3F));
    if (v38)
    {
      int64_t v21 = __clz(__rbit64(v38)) | v17 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v39 = v22 + 1;
      unint64_t v40 = (unint64_t)(v21 + 63) >> 6;
      if (v22 + 1 < v40)
      {
        unint64_t v41 = *(void *)(v46 + 8 * v39);
        if (v41)
        {
LABEL_22:
          int64_t v21 = __clz(__rbit64(v41)) + (v39 << 6);
        }
        else
        {
          while (v40 - 2 != v22)
          {
            unint64_t v41 = *(void *)(v43 + 8 * v22++);
            if (v41)
            {
              unint64_t v39 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v18 = v55 + 1;
    uint64_t v17 = v21;
    if (v55 + 1 == v44) {
      return v14;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1C03B8680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v53 = a3;
  sub_1C03B8104(0, &qword_1EB889B38, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v47 - v8;
  uint64_t v10 = type metadata accessor for FormatSlotDefinition();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v61 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v47 - v14);
  MEMORY[0x1F4188790](v16);
  uint64_t v52 = (char *)v47 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v51 = (uint64_t)v47 - v19;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v21 = *(void *)(type metadata accessor for FormatCompilingSlotDefinition(0) - 8);
    unint64_t v22 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)));
    uint64_t v62 = *(void *)(v21 + 72);
    unint64_t v63 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v60 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    v47[1] = a1;
    swift_bridgeObjectRetain();
    unint64_t v64 = MEMORY[0x1E4FBC860];
    uint64_t v49 = a2;
    uint64_t v50 = v9;
    uint64_t v59 = v10;
    uint64_t v48 = v11;
    while (*(void *)(a2 + 16))
    {
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_1BFEF2D8C(v24, v23);
      if (v26)
      {
        sub_1C03BCE44(*(void *)(a2 + 56) + *(void *)(v11 + 72) * v25, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        uint64_t v27 = 0;
      }
      else
      {
        uint64_t v27 = 1;
      }
      (*v63)(v9, v27, 1, v10);
      swift_bridgeObjectRelease();
      if ((*v60)(v9, 1, v10) == 1) {
        goto LABEL_4;
      }
      uint64_t v28 = sub_1C03BCF1C((uint64_t)v9, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v29 = *v15;
      uint64_t v30 = v15[1];
      uint64_t v31 = v15[3];
      uint64_t v56 = v15[2];
      uint64_t v57 = v29;
      uint64_t v32 = v15[5];
      uint64_t v55 = v15[4];
      uint64_t v33 = v15[6];
      MEMORY[0x1F4188790](v28);
      uint64_t v34 = v53;
      v47[-2] = v22;
      v47[-1] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1C0183C68((void (*)(uint64_t, uint64_t *))sub_1C03BC818, (uint64_t)&v47[-4], v33);
      uint64_t v58 = v4;
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C03BC9EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v64;
      }
      uint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v38 = v15[7];
      uint64_t v37 = v15[8];
      uint64_t v39 = *(int *)(v59 + 40);
      uint64_t v54 = v32;
      unint64_t v40 = v52;
      sub_1BFEBF7B8((uint64_t)v15 + v39, (uint64_t)&v52[v39], (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      *unint64_t v40 = v57;
      v40[1] = v30;
      v40[2] = v56;
      void v40[3] = v31;
      uint64_t v41 = v54;
      v40[4] = v55;
      v40[5] = v41;
      v40[6] = v36;
      v40[7] = v38;
      v40[8] = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03BC9EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v42 = v51;
      sub_1C03BCF1C((uint64_t)v40, v51, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      sub_1C03BCF1C(v42, v61, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v64 = sub_1BFFE40D0(0, *(void *)(v64 + 16) + 1, 1, v64);
      }
      uint64_t v4 = v58;
      uint64_t v10 = v59;
      uint64_t v11 = v48;
      a2 = v49;
      unint64_t v44 = *(void *)(v64 + 16);
      unint64_t v43 = *(void *)(v64 + 24);
      if (v44 >= v43 >> 1) {
        unint64_t v64 = sub_1BFFE40D0(v43 > 1, v44 + 1, 1, v64);
      }
      unint64_t v45 = v64;
      *(void *)(v64 + 16) = v44 + 1;
      sub_1C03BCF1C(v61, v45+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v44, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v9 = v50;
LABEL_5:
      unint64_t v22 = (uint64_t *)((char *)v22 + v62);
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        return v64;
      }
    }
    (*v63)(v9, 1, 1, v10);
LABEL_4:
    sub_1C03BCEAC((uint64_t)v9, &qword_1EB889B38, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    goto LABEL_5;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C03B8C6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C03AFAAC(a1, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), a2, a3);
}

uint64_t sub_1C03B8C94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1C03BC768(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C03B8D08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  sub_1C03BC768(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C03B8D78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v278 = type metadata accessor for FormatSlotDefinition();
  uint64_t v247 = *(void *)(v278 - 8);
  MEMORY[0x1F4188790](v278);
  uint64_t v250 = (uint64_t)&v246 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03B8104(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v269 = (uint64_t)&v246 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v273 = (uint64_t)&v246 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v272 = (uint64_t)&v246 - v10;
  uint64_t v271 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v277 = *(void *)(v271 - 8);
  MEMORY[0x1F4188790](v271);
  unint64_t v276 = (char *)&v246 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v270 = (uint64_t)&v246 - v13;
  MEMORY[0x1F4188790](v14);
  v291 = (_DWORD *)((char *)&v246 - v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v275 = (uint64_t)&v246 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v274 = (uint64_t)&v246 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v279 = (uint64_t)&v246 - v21;
  MEMORY[0x1F4188790](v22);
  char v292 = (char *)&v246 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v297 = (uint64_t)&v246 - v25;
  sub_1C03BC838();
  MEMORY[0x1F4188790](v26 - 8);
  BOOL v282 = (uint64_t *)((char *)&v246 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v28);
  uint64_t v280 = (char *)&v246 - v29;
  sub_1C03BCDD4(0, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  uint64_t v295 = v30;
  uint64_t v264 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v248 = (_OWORD *)((char *)&v246 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v32);
  uint64_t v268 = (char *)&v246 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v267 = (char *)&v246 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v260 = (_OWORD *)((char *)&v246 - v37);
  MEMORY[0x1F4188790](v38);
  unint64_t v263 = (_OWORD *)((char *)&v246 - v39);
  MEMORY[0x1F4188790](v40);
  v261 = (long long *)((char *)&v246 - v41);
  MEMORY[0x1F4188790](v42);
  uint64_t v251 = (char *)&v246 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v281 = (long long *)((char *)&v246 - v45);
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)&v246 - v47;
  uint64_t v293 = a1;
  uint64_t v49 = *(void *)(a1 + 16);
  unint64_t v50 = MEMORY[0x1E4FBC860];
  if (v49)
  {
    uint64_t v290 = (char *)&v246 - v47;
    uint64_t v296 = (void *)type metadata accessor for FormatDerivedDataBinderResult();
    uint64_t v51 = v293
        + ((*(unsigned __int8 *)(*(v296 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(v296 - 1) + 80));
    uint64_t v294 = *(void *)(*(v296 - 1) + 72);
    uint64_t v52 = swift_bridgeObjectRetain();
    unint64_t v53 = MEMORY[0x1E4FBC860];
    while (1)
    {
      MEMORY[0x1F4188790](v52);
      uint64_t v245 = v51;
      uint64_t v54 = swift_bridgeObjectRetain();
      uint64_t v48 = (char *)sub_1C03B8168(v54, (void (*)(uint64_t, uint64_t, void, void, char *))sub_1C03BCAE4, (uint64_t)v243);
      swift_bridgeObjectRelease();
      uint64_t v55 = *((void *)v48 + 2);
      int64_t v56 = *(void *)(v53 + 16);
      int64_t v57 = v56 + v55;
      if (__OFADD__(v56, v55))
      {
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
        goto LABEL_117;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v57 <= *(void *)(v53 + 24) >> 1)
      {
        if (*((void *)v48 + 2)) {
          goto LABEL_14;
        }
      }
      else
      {
        if (v56 <= v57) {
          int64_t v59 = v56 + v55;
        }
        else {
          int64_t v59 = v56;
        }
        unint64_t v53 = sub_1C0EE564C(isUniquelyReferenced_nonNull_native, v59, 1, v53);
        if (*((void *)v48 + 2))
        {
LABEL_14:
          uint64_t v60 = *(void *)(v53 + 16);
          if ((*(void *)(v53 + 24) >> 1) - v60 < v55) {
            goto LABEL_113;
          }
          unint64_t v61 = (*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80);
          uint64_t v62 = *(void *)(v264 + 72);
          unint64_t v63 = v53 + v61 + v62 * v60;
          if ((unint64_t)&v48[v61] < v63 + v62 * v55 && v63 < (unint64_t)&v48[v61 + v62 * v55]) {
            goto LABEL_120;
          }
          swift_arrayInitWithCopy();
          if (v55)
          {
            uint64_t v65 = *(void *)(v53 + 16);
            BOOL v66 = __OFADD__(v65, v55);
            uint64_t v67 = v65 + v55;
            if (v66) {
              goto LABEL_115;
            }
            *(void *)(v53 + 16) = v67;
          }
          goto LABEL_4;
        }
      }
      if (v55) {
        goto LABEL_112;
      }
LABEL_4:
      uint64_t v52 = swift_bridgeObjectRelease();
      v51 += v294;
      if (!--v49)
      {
        swift_bridgeObjectRelease();
        unint64_t v50 = MEMORY[0x1E4FBC860];
        uint64_t v48 = v290;
        goto LABEL_25;
      }
    }
  }
  unint64_t v53 = MEMORY[0x1E4FBC860];
LABEL_25:
  *(void *)&long long v310 = MEMORY[0x1E4FBC868];
  uint64_t v68 = *(void *)(v53 + 16);
  if (v68)
  {
    uint64_t v69 = v53 + ((*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80));
    uint64_t v70 = *(void *)(v264 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C03BCB78(v69, (uint64_t)v48);
      sub_1C03B63C0((uint64_t *)&v310, v48);
      if (v2) {
        goto LABEL_119;
      }
      uint64_t v2 = 0;
      sub_1C03BCC08((uint64_t)v48, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
      v69 += v70;
      --v68;
    }
    while (v68);
    swift_bridgeObjectRelease_n();
    unint64_t v50 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  int64_t v71 = 0;
  uint64_t v48 = (char *)v310;
  uint64_t v72 = *(void *)(v310 + 64);
  uint64_t v265 = v310 + 64;
  uint64_t v73 = 1 << *(unsigned char *)(v310 + 32);
  uint64_t v74 = -1;
  if (v73 < 64) {
    uint64_t v74 = ~(-1 << v73);
  }
  uint64_t v75 = v74 & v72;
  int64_t v266 = (unint64_t)(v73 + 63) >> 6;
  uint64_t v257 = &v309;
  unint64_t v258 = v50;
  uint64_t v76 = v295;
  unint64_t v77 = (unint64_t *)v280;
  if (!v75) {
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v283 = (v75 - 1) & v75;
  for (int64_t i = v71; ; int64_t i = v78)
  {
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v82 = v81;
    uint64_t v83 = *(void *)(v81 + 16);
    if (!v83)
    {
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    uint64_t v249 = v48;
    uint64_t v84 = v281;
    uint64_t v85 = (void *)((char *)v281 + *(int *)(v76 + 48));
    uint64_t v252 = v83;
    uint64_t v86 = v83 - 1;
    unint64_t v87 = v82 + ((*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80));
    uint64_t v88 = v82;
    uint64_t v255 = *(void *)(v264 + 72);
    unint64_t v256 = v87;
    uint64_t v48 = v251;
    sub_1C03BCB78(v87 + v255 * (v83 - 1), (uint64_t)v251);
    uint64_t v89 = (uint64_t)&v48[*(int *)(v76 + 48)];
    long long v90 = *((_OWORD *)v48 + 7);
    v84[6] = *((_OWORD *)v48 + 6);
    v84[7] = v90;
    char v84[8] = *((_OWORD *)v48 + 8);
    long long v91 = *((_OWORD *)v48 + 5);
    v84[4] = *((_OWORD *)v48 + 4);
    v84[5] = v91;
    long long v92 = *((_OWORD *)v48 + 3);
    v84[2] = *((_OWORD *)v48 + 2);
    v84[3] = v92;
    long long v93 = *((_OWORD *)v48 + 1);
    *uint64_t v84 = *(_OWORD *)v48;
    v84[1] = v93;
    uint64_t v296 = v85;
    sub_1C03BCF1C(v89, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    if (v86) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_100:
    sub_1C03BCE44((uint64_t)v296, v250, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v214 = v2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v258 = sub_1BFFE40D0(0, *(void *)(v258 + 16) + 1, 1, v258);
    }
    unint64_t v216 = *(void *)(v258 + 16);
    unint64_t v215 = *(void *)(v258 + 24);
    if (v216 >= v215 >> 1) {
      unint64_t v258 = sub_1BFFE40D0(v215 > 1, v216 + 1, 1, v258);
    }
    unint64_t v217 = v258;
    *(void *)(v258 + 16) = v216 + 1;
    sub_1C03BCF1C(v250, v217+ ((*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80))+ *(void *)(v247 + 72) * v216, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BCC08((uint64_t)v281, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    uint64_t v2 = v214;
    uint64_t v48 = v249;
LABEL_50:
    uint64_t v75 = v283;
    int64_t v71 = i;
    if (v283) {
      goto LABEL_34;
    }
LABEL_35:
    BOOL v66 = __OFADD__(v71, 1);
    int64_t v78 = v71 + 1;
    if (v66) {
      goto LABEL_114;
    }
    if (v78 >= v266)
    {
LABEL_106:
      swift_release();
      unint64_t v241 = (void *)sub_1C151EC0C();
      swift_bridgeObjectRelease();
      return (uint64_t)v241;
    }
    uint64_t v79 = *(void *)(v265 + 8 * v78);
    if (!v79)
    {
      int64_t v80 = v78 + 1;
      if (v78 + 1 >= v266) {
        goto LABEL_106;
      }
      uint64_t v79 = *(void *)(v265 + 8 * v80);
      if (!v79)
      {
        int64_t v80 = v78 + 2;
        if (v78 + 2 >= v266) {
          goto LABEL_106;
        }
        uint64_t v79 = *(void *)(v265 + 8 * v80);
        if (!v79)
        {
          int64_t v80 = v78 + 3;
          if (v78 + 3 >= v266) {
            goto LABEL_106;
          }
          uint64_t v79 = *(void *)(v265 + 8 * v80);
          if (!v79)
          {
            int64_t v80 = v78 + 4;
            if (v78 + 4 >= v266) {
              goto LABEL_106;
            }
            uint64_t v79 = *(void *)(v265 + 8 * v80);
            if (!v79)
            {
              while (1)
              {
                int64_t v78 = v80 + 1;
                if (__OFADD__(v80, 1)) {
                  goto LABEL_118;
                }
                if (v78 >= v266) {
                  goto LABEL_106;
                }
                uint64_t v79 = *(void *)(v265 + 8 * v78);
                ++v80;
                if (v79) {
                  goto LABEL_47;
                }
              }
            }
          }
        }
      }
      int64_t v78 = v80;
    }
LABEL_47:
    uint64_t v283 = (v79 - 1) & v79;
  }
  uint64_t v94 = v86;
  uint64_t v95 = (uint64_t)v261 + *(int *)(v76 + 48);
  uint64_t v253 = v88;
  uint64_t v254 = v95;
  while (2)
  {
    uint64_t v96 = v94 - 1;
    if (v96 >= *(void *)(v88 + 16)) {
      goto LABEL_116;
    }
    uint64_t v262 = v2;
    uint64_t v259 = v96;
    uint64_t v97 = v261;
    sub_1C03BCB78(v256 + v96 * v255, (uint64_t)v261);
    uint64_t v98 = *(int *)(v76 + 48);
    long long v99 = v97[5];
    long long v100 = v97[7];
    long long v316 = v97[6];
    long long v317 = v100;
    long long v101 = v97[7];
    long long v318 = v97[8];
    long long v102 = v97[3];
    long long v103 = v97[5];
    long long v314 = v97[4];
    long long v104 = v314;
    long long v315 = v103;
    long long v105 = v97[1];
    long long v106 = v97[3];
    long long v312 = v97[2];
    long long v107 = v312;
    long long v313 = v106;
    long long v108 = v97[1];
    long long v310 = *v97;
    long long v109 = v310;
    long long v311 = v108;
    uint64_t v110 = v263;
    v263[6] = v316;
    v110[7] = v101;
    v110[8] = v97[8];
    v110[2] = v107;
    v110[3] = v102;
    v110[4] = v104;
    v110[5] = v99;
    uint64_t v111 = (uint64_t)v110 + v98;
    _OWORD *v110 = v109;
    v110[1] = v105;
    sub_1C03BCF1C(v254, (uint64_t)v110 + v98, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v112 = *(int *)(v76 + 48);
    uint64_t v113 = v260;
    uint64_t v114 = (uint64_t)v260 + v112;
    long long v115 = v311;
    *uint64_t v260 = v310;
    v113[1] = v115;
    long long v116 = v317;
    v113[6] = v316;
    v113[7] = v116;
    v113[8] = v318;
    long long v117 = v313;
    v113[2] = v312;
    v113[3] = v117;
    long long v118 = v315;
    v113[4] = v314;
    v113[5] = v118;
    uint64_t v293 = v111;
    sub_1C03BCE44(v111, (uint64_t)v113 + v112, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v119 = *(void *)(v114 + 48);
    sub_1C0187D08((uint64_t)&v310);
    swift_bridgeObjectRetain();
    sub_1C03BC9EC(v114, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v308 = v119;
    uint64_t v120 = v257;
    *uint64_t v257 = 0;
    v120[1] = 0;
    while (2)
    {
      unint64_t v121 = v282;
      sub_1C13EC47C(v282);
      sub_1C03BCF1C((uint64_t)v121, (uint64_t)v77, (uint64_t (*)(void))sub_1C03BC838);
      sub_1C03BCDD4(0, &qword_1EA19AB28, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      uint64_t v123 = v122;
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 48))(v77, 1, v122) != 1)
      {
        unint64_t v124 = *v77;
        sub_1C03BCF1C((uint64_t)v77 + *(int *)(v123 + 48), v297, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v125 = v279;
        uint64_t v126 = (uint64_t)v292;
        if ((v124 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
          goto LABEL_111;
        }
        uint64_t v127 = v296[6];
        if (v124 >= *(void *)(v127 + 16)) {
          goto LABEL_109;
        }
        unint64_t v128 = (*(unsigned __int8 *)(v277 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v277 + 80);
        uint64_t v290 = (char *)(*(void *)(v277 + 72) * v124);
        sub_1C03BCE44((uint64_t)&v290[v127 + v128], (uint64_t)v292, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1C03BCE44(v297, v125, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v129 = *(void *)(v126 + 8);
        uint64_t v130 = *(void *)(v125 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v131 = sub_1C00AC6B0(v129, v130);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v132 = v274;
        sub_1C03BCE44(v126, v274, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        if (v131)
        {
          sub_1C03BC9EC(v132, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v133 = v275;
          sub_1C03BCE44(v125, v275, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v134 = (uint64_t)v276;
          goto LABEL_68;
        }
        uint64_t v135 = *(void *)(*(void *)(v132 + 8) + 16);
        sub_1C03BC9EC(v132, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v133 = v275;
        sub_1C03BCE44(v125, v275, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v134 = (uint64_t)v276;
        if (v135)
        {
          uint64_t v136 = *(void *)(*(void *)(v133 + 8) + 16);
          sub_1C03BC9EC(v133, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          if (v136)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v294 = type metadata accessor for FormatDerivedDataError();
            sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
            uint64_t v262 = swift_allocError();
            uint64_t v219 = v218;
            sub_1C03BCC64();
            uint64_t v221 = (uint64_t)v219 + v220[12];
            uint64_t v222 = (void *)((char *)v219 + v220[16]);
            v291 = (_DWORD *)((char *)v219 + v220[20]);
            uint64_t v223 = (uint64_t)v281;
            uint64_t v224 = *((void *)v281 + 1);
            void *v219 = *(void *)v281;
            v219[1] = v224;
            sub_1C03BCE44((uint64_t)v296, v221, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            uint64_t v225 = v295;
            uint64_t v226 = v260;
            uint64_t v296 = (void *)((char *)v260 + *(int *)(v295 + 48));
            uint64_t v227 = v296;
            long long v228 = v317;
            v260[6] = v316;
            v226[7] = v228;
            v226[8] = v318;
            long long v229 = v315;
            v226[4] = v314;
            v226[5] = v229;
            long long v230 = v313;
            v226[2] = v312;
            v226[3] = v230;
            long long v231 = v311;
            _OWORD *v226 = v310;
            v226[1] = v231;
            uint64_t v232 = v293;
            sub_1C03BCE44(v293, (uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            uint64_t v233 = *((void *)&v310 + 1);
            *uint64_t v222 = v310;
            v222[1] = v233;
            uint64_t v234 = *(int *)(v225 + 48);
            uint64_t v235 = v248;
            uint64_t v236 = (uint64_t)v248 + v234;
            long long v237 = v311;
            *uint64_t v248 = v310;
            v235[1] = v237;
            long long v238 = v317;
            v235[6] = v316;
            v235[7] = v238;
            v235[8] = v318;
            long long v239 = v313;
            v235[2] = v312;
            v235[3] = v239;
            long long v240 = v315;
            v235[4] = v314;
            v235[5] = v240;
            sub_1C03BCE44(v232, (uint64_t)v235 + v234, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C0187DF4((uint64_t)&v310);
            sub_1C03BCF1C(v236, (uint64_t)v291, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            sub_1C03BC9EC(v279, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1C03BC9EC((uint64_t)v292, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1C03BC9EC(v297, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            unint64_t v241 = &unk_1EA19C790;
            sub_1C03BCC08((uint64_t)v263, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
            swift_release();
            sub_1C03BC9EC((uint64_t)v296, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            sub_1C03BCC08(v223, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
            return (uint64_t)v241;
          }
        }
        else
        {
LABEL_68:
          sub_1C03BC9EC(v133, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        }
        unint64_t v289 = v128;
        uint64_t v137 = *(void *)(v126 + 8);
        swift_bridgeObjectRetain();
        uint64_t v138 = swift_bridgeObjectRetain();
        uint64_t v288 = sub_1C01B0924(v138, v137);
        int v139 = *(_DWORD *)v126;
        int v140 = *(_DWORD *)(v126 + 4);
        int v141 = *(_DWORD *)(v125 + 4);
        if (*(_DWORD *)v125 < *(_DWORD *)v126) {
          int v139 = *(_DWORD *)v125;
        }
        LODWORD(v287) = v139;
        if (v141 <= v140) {
          int v142 = v140;
        }
        else {
          int v142 = v141;
        }
        LODWORD(v286) = v142;
        uint64_t v143 = v126;
        uint64_t v144 = *(void *)(v126 + 24);
        uint64_t v145 = *(void *)(v126 + 32);
        uint64_t v146 = v270;
        sub_1C03BCE44(v125, v270, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v147 = (uint64_t (*)())v144;
        uint64_t v294 = v145;
        if (!v144)
        {
          uint64_t v147 = *(uint64_t (**)())(v146 + 24);
          uint64_t v294 = *(void *)(v146 + 32);
          sub_1BFDB3920((uint64_t)v147);
        }
        BOOL v285 = v147;
        sub_1BFDB3920(v144);
        sub_1C03BC9EC(v146, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v148 = v271;
        uint64_t v149 = v143 + *(int *)(v271 + 36);
        uint64_t v150 = v273;
        sub_1BFEBF7B8(v149, v273, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        sub_1C03BCE44(v125, v134, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v151 = sub_1C1518CDC();
        uint64_t v152 = *(void *)(v151 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151) == 1)
        {
          uint64_t v153 = v134 + *(int *)(v148 + 36);
          uint64_t v154 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          uint64_t v155 = v134;
          uint64_t v156 = v148;
          uint64_t v157 = v272;
          sub_1BFEBF7B8(v153, v272, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1C03BC9EC(v155, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C03BCEAC(v150, (unint64_t *)&qword_1EB884FE0, v154);
        }
        else
        {
          sub_1C03BC9EC(v134, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v156 = v148;
          uint64_t v157 = v272;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 32))(v272, v150, v151);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v152 + 56))(v157, 0, 1, v151);
        }
        BOOL v158 = v291;
        int v159 = (int)v286;
        _DWORD *v291 = v287;
        v158[1] = v159;
        *((void *)v158 + 1) = v288;
        uint64_t v160 = v285;
        *((void *)v158 + 2) = MEMORY[0x1E4FBC860];
        *((void *)v158 + 3) = v160;
        *((void *)v158 + 4) = v294;
        sub_1BFEF6F58(v157, (uint64_t)v158 + *(int *)(v156 + 36));
        unint64_t v161 = v296[6];
        swift_bridgeObjectRetain();
        char v162 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v48 = v292;
        unint64_t v163 = v289;
        if ((v162 & 1) == 0) {
          unint64_t v161 = sub_1C0378EA8(v161);
        }
        if (v124 >= *(void *)(v161 + 16)) {
          goto LABEL_110;
        }
        sub_1C03BC988((uint64_t)v291, (uint64_t)&v290[v161 + v163]);
        uint64_t v294 = v161;
        sub_1C03BC9EC(v125, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1C03BC9EC((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1C03BC9EC(v297, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v164 = v281;
        long long v165 = v281[8];
        long long v166 = v281[6];
        long long v306 = v281[7];
        long long v307 = v165;
        long long v167 = v281[4];
        long long v304 = v281[5];
        long long v305 = v166;
        long long v168 = v281[2];
        long long v302 = v281[3];
        long long v303 = v167;
        long long v169 = *v281;
        long long v300 = v281[1];
        long long v301 = v168;
        long long v299 = v169;
        uint64_t v48 = (char *)v296;
        uint64_t v170 = (char *)*v296;
        unint64_t v289 = v296[1];
        uint64_t v290 = v170;
        uint64_t v171 = v296[2];
        unint64_t v172 = v296[3];
        uint64_t v173 = *(int *)(v295 + 48);
        uint64_t v174 = v267;
        uint64_t v175 = (uint64_t)&v267[v173];
        long long v176 = v317;
        *((_OWORD *)v267 + 6) = v316;
        v174[7] = v176;
        v174[8] = v318;
        long long v177 = v313;
        v174[2] = v312;
        v174[3] = v177;
        long long v178 = v315;
        v174[4] = v314;
        v174[5] = v178;
        long long v179 = v311;
        *uint64_t v174 = v310;
        v174[1] = v179;
        uint64_t v286 = type metadata accessor for FormatSlotDefinition;
        sub_1C03BCE44(v293, (uint64_t)v174 + v173, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        uint64_t v180 = *(void *)(v175 + 16);
        unint64_t v181 = *(void *)(v175 + 24);
        sub_1C0187D08((uint64_t)&v299);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        BOOL v285 = type metadata accessor for FormatSlotDefinition;
        sub_1C03BC9EC(v175, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        uint64_t v182 = HIBYTE(v172) & 0xF;
        if ((v172 & 0x2000000000000000) == 0) {
          uint64_t v182 = v171 & 0xFFFFFFFFFFFFLL;
        }
        if (v182) {
          uint64_t v183 = v171;
        }
        else {
          uint64_t v183 = v180;
        }
        if (v182) {
          unint64_t v184 = v172;
        }
        else {
          unint64_t v184 = v181;
        }
        unint64_t v287 = v184;
        uint64_t v288 = v183;
        swift_bridgeObjectRelease();
        uint64_t v186 = *((void *)v48 + 4);
        uint64_t v185 = (uint64_t (*)())*((void *)v48 + 5);
        uint64_t v187 = *(int *)(v295 + 48);
        uint64_t v188 = v268;
        uint64_t v189 = (uint64_t)&v268[v187];
        long long v190 = v317;
        *((_OWORD *)v268 + 6) = v316;
        v188[7] = v190;
        v188[8] = v318;
        long long v191 = v313;
        v188[2] = v312;
        v188[3] = v191;
        long long v192 = v315;
        v188[4] = v314;
        v188[5] = v192;
        long long v193 = v311;
        *uint64_t v188 = v310;
        v188[1] = v193;
        sub_1C03BCE44(v293, (uint64_t)v188 + v187, (uint64_t (*)(void))v286);
        uint64_t v194 = *(void *)(v189 + 32);
        uint64_t v195 = *(uint64_t (**)())(v189 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v196 = v285;
        sub_1C03BC9EC(v189, (uint64_t (*)(void))v285);
        uint64_t v197 = ((unint64_t)v185 >> 56) & 0xF;
        if (((unint64_t)v185 & 0x2000000000000000) == 0) {
          uint64_t v197 = v186 & 0xFFFFFFFFFFFFLL;
        }
        if (v197)
        {
          uint64_t v194 = v186;
          uint64_t v198 = v185;
        }
        else
        {
          uint64_t v198 = v195;
        }
        uint64_t v286 = v198;
        swift_bridgeObjectRelease();
        uint64_t v199 = *((void *)v48 + 7);
        uint64_t v200 = *((void *)v48 + 8);
        uint64_t v201 = (uint64_t)&v48[*(int *)(v278 + 40)];
        uint64_t v202 = v269;
        sub_1BFEBF7B8(v201, v269, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C03BC9EC((uint64_t)v48, (uint64_t (*)(void))v196);
        unint64_t v203 = v289;
        *(void *)uint64_t v48 = v290;
        *((void *)v48 + 1) = v203;
        unint64_t v204 = v287;
        *((void *)v48 + 2) = v288;
        *((void *)v48 + 3) = v204;
        uint64_t v205 = v286;
        *((void *)v48 + 4) = v194;
        *((void *)v48 + 5) = v205;
        *((void *)v48 + 6) = v294;
        *((void *)v48 + 7) = v199;
        *((void *)v48 + 8) = v200;
        sub_1BFEF6F58(v202, v201);
        long long v206 = v164[7];
        v298[6] = v164[6];
        v298[7] = v206;
        v298[8] = v164[8];
        long long v207 = v164[3];
        v298[2] = v164[2];
        v298[3] = v207;
        long long v208 = v164[5];
        v298[4] = v164[4];
        v298[5] = v208;
        long long v209 = v164[1];
        v298[0] = *v164;
        v298[1] = v209;
        sub_1C0187DF4((uint64_t)v298);
        long long v210 = v306;
        v164[6] = v305;
        v164[7] = v210;
        v164[8] = v307;
        long long v211 = v302;
        v164[2] = v301;
        v164[3] = v211;
        long long v212 = v304;
        v164[4] = v303;
        v164[5] = v212;
        long long v213 = v300;
        *uint64_t v164 = v299;
        v164[1] = v213;
        unint64_t v77 = (unint64_t *)v280;
        continue;
      }
      break;
    }
    sub_1C0187DF4((uint64_t)&v310);
    swift_bridgeObjectRelease();
    sub_1C03BCC08((uint64_t)v263, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    uint64_t v2 = v262;
    uint64_t v94 = v259;
    if (!v259)
    {
      swift_bridgeObjectRelease();
      uint64_t v76 = v295;
      goto LABEL_100;
    }
    uint64_t v88 = v253;
    uint64_t v76 = v295;
    if (v252 > v259) {
      continue;
    }
    break;
  }
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  swift_bridgeObjectRelease();
  sub_1C03BCC08((uint64_t)v48, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_120:
  LODWORD(v245) = 0;
  uint64_t v244 = 1092;
  v243[0] = 2;
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C03BA61C(uint64_t a1)
{
  sub_1C03BCA4C();
  uint64_t result = sub_1C15204DC();
  uint64_t v4 = (void *)result;
  int64_t v5 = 0;
  uint64_t v24 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  int64_t v22 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v23 = result + 64;
  if ((v10 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v24 + 48) + 8 * i);
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C03B8D78(v18);
    uint64_t result = swift_bridgeObjectRelease();
    if (v1)
    {
      swift_release();
      return (uint64_t)v4;
    }
    *(void *)(v23 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v4[6] + 8 * i) = v17;
    *(void *)(v4[7] + 8 * i) = v19;
    uint64_t v20 = v4[2];
    BOOL v14 = __OFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (v14)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v21;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v14 = __OFADD__(v5++, 1);
    if (v14) {
      goto LABEL_27;
    }
    if (v5 >= v22) {
      return (uint64_t)v4;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v5);
    if (!v15) {
      break;
    }
LABEL_15:
    unint64_t v11 = (v15 - 1) & v15;
  }
  int64_t v16 = v5 + 1;
  if (v5 + 1 >= v22) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v5 + 2;
  if (v5 + 2 >= v22) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v5 + 3;
  if (v5 + 3 >= v22) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_14:
    int64_t v5 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v22) {
      return (uint64_t)v4;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C03BA82C(uint64_t a1, uint64_t a2)
{
  uint64_t v175 = a2;
  sub_1C03B8104(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v168 = (uint64_t)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v174 = (uint64_t)&v153 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v173 = (uint64_t)&v153 - v8;
  uint64_t v172 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v178 = *(void *)(v172 - 8);
  MEMORY[0x1F4188790](v172);
  uint64_t v171 = (uint64_t)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v170 = (char *)&v153 - v11;
  MEMORY[0x1F4188790](v12);
  long long v169 = (_DWORD *)((char *)&v153 - v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v177 = (uint64_t)&v153 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v176 = (uint64_t)&v153 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v153 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v153 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v194 = (uint64_t)&v153 - v25;
  sub_1C03BC838();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v180 = (uint64_t *)((char *)&v153 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (uint64_t *)((char *)&v153 - v29);
  uint64_t v183 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v183);
  uint64_t v155 = (uint64_t)&v153 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  long long v167 = (uint64_t *)((char *)&v153 - v33);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v153 - v35;
  MEMORY[0x1F4188790](v37);
  unint64_t v189 = (unint64_t)&v153 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v187 = (uint64_t *)((char *)&v153 - v41);
  uint64_t v42 = *(void *)(a1 + 16);
  long long v192 = v23;
  long long v193 = v20;
  long long v191 = v36;
  uint64_t v157 = v40;
  long long v179 = v30;
  if (v42)
  {
    unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v185 = a1;
    uint64_t v186 = v43;
    uint64_t v44 = a1 + v43;
    uint64_t v188 = *(void *)(v40 + 72);
    swift_bridgeObjectRetain();
    uint64_t v45 = MEMORY[0x1E4FBC868];
    uint64_t v46 = v187;
    while (1)
    {
      sub_1C03BCE44(v44, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v49 = *v46;
      uint64_t v50 = v46[1];
      if (*(void *)(v45 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = v49;
        unint64_t v52 = sub_1BFEF2D8C(v49, v50);
        unint64_t v53 = MEMORY[0x1E4FBC860];
        if (v54)
        {
          unint64_t v53 = *(void *)(*(void *)(v45 + 56) + 8 * v52);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v51 = *v46;
        unint64_t v53 = MEMORY[0x1E4FBC860];
      }
      sub_1C03BCE44((uint64_t)v46, v189, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v53 = sub_1BFFE40D0(0, *(void *)(v53 + 16) + 1, 1, v53);
      }
      unint64_t v56 = *(void *)(v53 + 16);
      unint64_t v55 = *(void *)(v53 + 24);
      if (v56 >= v55 >> 1) {
        unint64_t v53 = sub_1BFFE40D0(v55 > 1, v56 + 1, 1, v53);
      }
      *(void *)(v53 + 16) = v56 + 1;
      sub_1C03BCF1C(v189, v53 + v186 + v56 * v188, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v195 = v45;
      unint64_t v59 = sub_1BFEF2D8C(v51, v50);
      uint64_t v60 = *(void *)(v45 + 16);
      BOOL v61 = (v58 & 1) == 0;
      uint64_t v62 = v60 + v61;
      if (__OFADD__(v60, v61)) {
        break;
      }
      char v63 = v58;
      if (*(void *)(v45 + 24) >= v62)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1C106EDDC();
        }
      }
      else
      {
        sub_1C105ADAC(v62, isUniquelyReferenced_nonNull_native);
        unint64_t v64 = sub_1BFEF2D8C(v51, v50);
        if ((v63 & 1) != (v65 & 1)) {
          goto LABEL_106;
        }
        unint64_t v59 = v64;
      }
      uint64_t v20 = v193;
      uint64_t v45 = v195;
      if (v63)
      {
        uint64_t v47 = v195;
        uint64_t v48 = *(void *)(v195 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v48 + 8 * v59) = v53;
        uint64_t v45 = v47;
      }
      else
      {
        *(void *)(v195 + 8 * (v59 >> 6) + 64) |= 1 << v59;
        BOOL v66 = (uint64_t *)(*(void *)(v45 + 48) + 16 * v59);
        *BOOL v66 = v51;
        v66[1] = v50;
        *(void *)(*(void *)(v45 + 56) + 8 * v59) = v53;
        uint64_t v67 = *(void *)(v45 + 16);
        BOOL v68 = __OFADD__(v67, 1);
        uint64_t v69 = v67 + 1;
        if (v68) {
          goto LABEL_102;
        }
        *(void *)(v45 + 16) = v69;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = v187;
      sub_1C03BC9EC((uint64_t)v187, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      v44 += v188;
      --v42;
      uint64_t v23 = v192;
      if (!v42)
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = v191;
        uint64_t v30 = v179;
        goto LABEL_25;
      }
    }
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  uint64_t v45 = MEMORY[0x1E4FBC868];
LABEL_25:
  int64_t v70 = 0;
  uint64_t v71 = *(void *)(v45 + 64);
  uint64_t v165 = v45 + 64;
  uint64_t v72 = 1 << *(unsigned char *)(v45 + 32);
  uint64_t v73 = -1;
  if (v72 < 64) {
    uint64_t v73 = ~(-1 << v72);
  }
  uint64_t v74 = v73 & v71;
  int64_t v166 = (unint64_t)(v72 + 63) >> 6;
  unint64_t v161 = &v196;
  unint64_t v162 = MEMORY[0x1E4FBC860];
  uint64_t v156 = v45;
  uint64_t v75 = v190;
  if (!v74) {
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v181 = (v74 - 1) & v74;
  for (int64_t i = v70; ; int64_t i = v76)
  {
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v80 = *(void *)(v79 + 16);
    if (!v80)
    {
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    uint64_t v160 = *(void *)(v79 + 16);
    uint64_t v81 = v80 - 1;
    unint64_t v154 = (*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80);
    uint64_t v163 = *(void *)(v157 + 72);
    unint64_t v159 = v79 + v154;
    sub_1C03BCE44(v79 + v154 + v163 * (v80 - 1), (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    if (v81)
    {
      uint64_t v158 = v79;
      do
      {
        if (v160 <= v81) {
          goto LABEL_103;
        }
        uint64_t v82 = v81 - 1;
        if (v82 >= *(void *)(v79 + 16)) {
          goto LABEL_104;
        }
        uint64_t v164 = v82;
        uint64_t v83 = v167;
        sub_1C03BCE44(v159 + v82 * v163, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        uint64_t v195 = v83[6];
        uint64_t v84 = v161;
        *(void *)unint64_t v161 = 0;
        *((void *)v84 + 1) = 0;
        swift_bridgeObjectRetain();
        while (1)
        {
          long long v90 = v180;
          sub_1C13EC47C(v180);
          sub_1C03BCF1C((uint64_t)v90, (uint64_t)v30, (uint64_t (*)(void))sub_1C03BC838);
          sub_1C03BCDD4(0, &qword_1EA19AB28, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v92 = v91;
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v30, 1, v91) == 1) {
            break;
          }
          unint64_t v93 = *v30;
          sub_1C03BCF1C((uint64_t)v30 + *(int *)(v92 + 48), v194, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v94 = (uint64_t *)v191;
          if ((v93 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
            goto LABEL_100;
          }
          uint64_t v95 = *((void *)v191 + 6);
          if (v93 >= *(void *)(v95 + 16)) {
            goto LABEL_98;
          }
          unint64_t v189 = (*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80);
          uint64_t v188 = *(void *)(v178 + 72) * v93;
          sub_1C03BCE44(v95 + v189 + v188, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C03BCE44(v194, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v96 = *((void *)v23 + 1);
          uint64_t v97 = *((void *)v20 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v98 = sub_1C00AC6B0(v96, v97);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v99 = v176;
          sub_1C03BCE44((uint64_t)v23, v176, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          if (v98)
          {
            sub_1C03BC9EC(v99, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            uint64_t v100 = v177;
            sub_1C03BCE44((uint64_t)v20, v177, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
LABEL_65:
            sub_1C03BC9EC(v100, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            goto LABEL_66;
          }
          uint64_t v101 = *(void *)(*(void *)(v99 + 8) + 16);
          sub_1C03BC9EC(v99, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v100 = v177;
          sub_1C03BCE44((uint64_t)v20, v177, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          if (!v101) {
            goto LABEL_65;
          }
          uint64_t v102 = *(void *)(*(void *)(v100 + 8) + 16);
          sub_1C03BC9EC(v100, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          if (v102)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            type metadata accessor for FormatDerivedDataError();
            sub_1C03BC7D0((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
            swift_allocError();
            uint64_t v147 = v146;
            sub_1C03BC8BC();
            uint64_t v149 = v147 + *(int *)(v148 + 48);
            sub_1C03BCE44((uint64_t)v94, v147, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            uint64_t v150 = v167;
            sub_1C03BCE44((uint64_t)v167, v149, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            sub_1C03BC9EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1C03BC9EC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1C03BC9EC(v194, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            uint64_t v151 = (uint64_t)type metadata accessor for FormatSlotDefinition;
            sub_1C03BC9EC((uint64_t)v150, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            sub_1C03BC9EC((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            swift_release();
            return v151;
          }
LABEL_66:
          uint64_t v104 = *v94;
          uint64_t v103 = v94[1];
          swift_bridgeObjectRetain();
          char v105 = sub_1BFF896B4(v104, v103, v175);
          swift_bridgeObjectRelease();
          uint64_t v106 = *((void *)v23 + 1);
          swift_bridgeObjectRetain();
          uint64_t v107 = swift_bridgeObjectRetain();
          uint64_t v186 = sub_1C01B0924(v107, v106);
          if (v105)
          {
            LODWORD(v185) = 0;
          }
          else
          {
            int v108 = *(_DWORD *)v23;
            if (*(_DWORD *)v20 > *(_DWORD *)v23) {
              int v108 = *(_DWORD *)v20;
            }
            LODWORD(v185) = v108;
          }
          uint64_t v109 = (uint64_t)v170;
          int v110 = *((_DWORD *)v23 + 1);
          if (*((_DWORD *)v20 + 1) > v110) {
            int v110 = *((_DWORD *)v20 + 1);
          }
          int v184 = v110;
          uint64_t v197 = *((void *)v23 + 2);
          swift_bridgeObjectRetain();
          uint64_t v111 = swift_bridgeObjectRetain();
          sub_1C1048848(v111);
          sub_1C03B8104(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
          sub_1C03BC924((unint64_t *)&qword_1EB863310, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition);
          uint64_t v187 = (uint64_t *)sub_1C151E92C();
          uint64_t v190 = v75;
          swift_bridgeObjectRelease();
          uint64_t v112 = v23;
          uint64_t v113 = *((void *)v23 + 3);
          uint64_t v114 = *((void *)v23 + 4);
          sub_1C03BCE44((uint64_t)v20, v109, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v115 = v113;
          uint64_t v116 = v114;
          if (!v113)
          {
            uint64_t v115 = *(void *)(v109 + 24);
            uint64_t v116 = *(void *)(v109 + 32);
            sub_1BFDB3920(v115);
          }
          sub_1BFDB3920(v113);
          sub_1C03BC9EC(v109, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v117 = v172;
          uint64_t v118 = v174;
          sub_1BFEBF7B8((uint64_t)&v112[*(int *)(v172 + 36)], v174, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          uint64_t v119 = (uint64_t)v20;
          uint64_t v120 = v118;
          uint64_t v121 = v171;
          sub_1C03BCE44(v119, v171, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v122 = sub_1C1518CDC();
          uint64_t v123 = *(void *)(v122 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v120, 1, v122) == 1)
          {
            unint64_t v124 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            uint64_t v125 = v173;
            sub_1BFEBF7B8(v121 + *(int *)(v117 + 36), v173, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1C03BC9EC(v121, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1C03BCEAC(v120, (unint64_t *)&qword_1EB884FE0, v124);
          }
          else
          {
            sub_1C03BC9EC(v121, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            uint64_t v126 = v173;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32))(v173, v120, v122);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v123 + 56))(v126, 0, 1, v122);
            uint64_t v125 = v126;
          }
          uint64_t v127 = (uint64_t)v169;
          int v128 = v184;
          _DWORD *v169 = v185;
          *(_DWORD *)(v127 + 4) = v128;
          uint64_t v129 = (uint64_t)v187;
          *(void *)(v127 + 8) = v186;
          *(void *)(v127 + 16) = v129;
          *(void *)(v127 + 24) = v115;
          *(void *)(v127 + 32) = v116;
          sub_1BFEF6F58(v125, v127 + *(int *)(v117 + 36));
          uint64_t v130 = (uint64_t *)v191;
          unint64_t v131 = *((void *)v191 + 6);
          swift_bridgeObjectRetain();
          char v132 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v133 = (uint64_t)v192;
          if ((v132 & 1) == 0) {
            unint64_t v131 = sub_1C0378EA8(v131);
          }
          uint64_t v134 = (uint64_t)v193;
          if (v93 >= *(void *)(v131 + 16)) {
            goto LABEL_99;
          }
          sub_1C03BC988(v127, v131 + v189 + v188);
          sub_1C03BC9EC(v134, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C03BC9EC(v133, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C03BC9EC(v194, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          unint64_t v135 = v130[2];
          unint64_t v136 = v130[3];
          uint64_t v137 = HIBYTE(v136) & 0xF;
          if ((v136 & 0x2000000000000000) == 0) {
            uint64_t v137 = v135 & 0xFFFFFFFFFFFFLL;
          }
          uint64_t v187 = (uint64_t *)v131;
          if (v137)
          {
            unint64_t v189 = v135;
          }
          else
          {
            unint64_t v136 = v167[3];
            unint64_t v189 = v167[2];
          }
          uint64_t v139 = *v130;
          uint64_t v138 = v130[1];
          swift_bridgeObjectRetain();
          uint64_t v141 = v130[4];
          unint64_t v140 = v130[5];
          uint64_t v142 = HIBYTE(v140) & 0xF;
          if ((v140 & 0x2000000000000000) == 0) {
            uint64_t v142 = v141 & 0xFFFFFFFFFFFFLL;
          }
          uint64_t v188 = v139;
          if (!v142)
          {
            uint64_t v141 = v167[4];
            unint64_t v140 = v167[5];
          }
          swift_bridgeObjectRetain();
          uint64_t v85 = v130[7];
          uint64_t v86 = v130[8];
          uint64_t v87 = (uint64_t)v130 + *(int *)(v183 + 40);
          uint64_t v88 = v130;
          uint64_t v89 = v168;
          sub_1BFEBF7B8(v87, v168, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C03BC9EC((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          *uint64_t v88 = v188;
          v88[1] = v138;
          v88[2] = v189;
          _OWORD v88[3] = v136;
          v88[4] = v141;
          v88[5] = v140;
          v88[6] = (uint64_t)v187;
          v88[7] = v85;
          v88[8] = v86;
          sub_1BFEF6F58(v89, v87);
          uint64_t v75 = v190;
          uint64_t v23 = v192;
          uint64_t v20 = v193;
          uint64_t v30 = v179;
        }
        swift_bridgeObjectRelease();
        sub_1C03BC9EC((uint64_t)v167, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        uint64_t v36 = v191;
        uint64_t v79 = v158;
        uint64_t v81 = v164;
      }
      while (v164);
    }
    swift_bridgeObjectRelease();
    sub_1C03BCE44((uint64_t)v36, v155, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v162 = sub_1BFFE40D0(0, *(void *)(v162 + 16) + 1, 1, v162);
    }
    unint64_t v144 = *(void *)(v162 + 16);
    unint64_t v143 = *(void *)(v162 + 24);
    if (v144 >= v143 >> 1) {
      unint64_t v162 = sub_1BFFE40D0(v143 > 1, v144 + 1, 1, v162);
    }
    unint64_t v145 = v162;
    *(void *)(v162 + 16) = v144 + 1;
    sub_1C03BCF1C(v155, v145 + v154 + v144 * v163, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    sub_1C03BC9EC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
LABEL_44:
    uint64_t v74 = v181;
    int64_t v70 = i;
    if (v181) {
      goto LABEL_28;
    }
LABEL_29:
    BOOL v68 = __OFADD__(v70, 1);
    int64_t v76 = v70 + 1;
    if (v68) {
      goto LABEL_101;
    }
    if (v76 >= v166) {
      break;
    }
    uint64_t v77 = *(void *)(v165 + 8 * v76);
    if (!v77)
    {
      int64_t v78 = v76 + 1;
      if (v76 + 1 >= v166) {
        break;
      }
      uint64_t v77 = *(void *)(v165 + 8 * v78);
      if (!v77)
      {
        int64_t v78 = v76 + 2;
        if (v76 + 2 >= v166) {
          break;
        }
        uint64_t v77 = *(void *)(v165 + 8 * v78);
        if (!v77)
        {
          int64_t v78 = v76 + 3;
          if (v76 + 3 >= v166) {
            break;
          }
          uint64_t v77 = *(void *)(v165 + 8 * v78);
          if (!v77)
          {
            int64_t v78 = v76 + 4;
            if (v76 + 4 >= v166) {
              break;
            }
            uint64_t v77 = *(void *)(v165 + 8 * v78);
            if (!v77)
            {
              while (1)
              {
                int64_t v76 = v78 + 1;
                if (__OFADD__(v78, 1)) {
                  goto LABEL_105;
                }
                if (v76 >= v166) {
                  goto LABEL_95;
                }
                uint64_t v77 = *(void *)(v165 + 8 * v76);
                ++v78;
                if (v77) {
                  goto LABEL_41;
                }
              }
            }
          }
        }
      }
      int64_t v76 = v78;
    }
LABEL_41:
    uint64_t v181 = (v77 - 1) & v77;
  }
LABEL_95:
  swift_release();
  uint64_t v151 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  return v151;
}

uint64_t sub_1C03BBCE0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C03BBD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C03B8104(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1C018E6EC(MEMORY[0x1E4FBC860]);
  uint64_t v26 = v12;
  unint64_t v27 = v13;
  uint64_t v14 = sub_1C151928C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v11, a3, v14);
  swift_storeEnumTagMultiPayload();
  Dictionary<>.seedFormatCodingVersion(mode:)((uint64_t)v11);
  sub_1C03BC9EC((uint64_t)v11, type metadata accessor for FormatVersioningMode);
  uint64_t v15 = v26;
  unint64_t v16 = v27;
  uint64_t v22 = v26;
  unint64_t v23 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = &v22;
  sub_1C139559C(a2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v17;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = &type metadata for TraversalOnlyEncoder;
  unint64_t v25 = sub_1BFEFC8E4();
  uint64_t v22 = v15;
  unint64_t v23 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormatPackage.encode(to:)(&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  uint64_t v19 = swift_bridgeObjectRetain();
  Dictionary<>.formatCodingVersionInfo.getter(v19, (uint64_t)v8);
  swift_bridgeObjectRelease();
  uint64_t v20 = type metadata accessor for FormatVersionInfo(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v8, 1, v20);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(uint64_t **)&v8[*(int *)(v20 + 24)];
    swift_bridgeObjectRetain();
    sub_1C03BC9EC((uint64_t)v8, type metadata accessor for FormatVersionInfo);
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C03BC018(uint64_t *a1)
{
  uint64_t v57 = type metadata accessor for FormatDerivedDataWarningError();
  uint64_t v59 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  char v58 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  char v54 = (char *)&v52 - v4;
  sub_1C03BC768(0, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v52 - v6;
  uint64_t v8 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (uint64_t *)((char *)&v52 - v12);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (uint64_t *)((char *)&v52 - v15);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v55 = v17;
  *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v52 = v17 + 16;
  uint64_t v19 = swift_allocObject();
  uint64_t v61 = v19;
  *(void *)(v19 + 16) = v18;
  unint64_t v53 = (uint64_t *)(v19 + 16);
  uint64_t v20 = *(int *)(type metadata accessor for FormatPackage() + 92);
  unint64_t v56 = a1;
  uint64_t v60 = (uint64_t)a1 + v20 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 24);
  sub_1C03B8C94(v60, (uint64_t)v7, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C03BCF1C((uint64_t)v7, (uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v21 = *v16;
  uint64_t v22 = v16[1];
  sub_1BFD5A4A4(*v16, v22);
  sub_1C03BC9EC((uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  if (v22 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v21, v22);
    uint64_t v23 = v21;
    uint64_t v24 = v22;
  }
  uint64_t v62 = v23;
  uint64_t v63 = v24;
  uint64_t v25 = v55;
  sub_1C03B6F0C((uint64_t)&v62, 24945, 0xE200000000000000, v61, v55);
  swift_bridgeObjectRelease();
  sub_1C03B8C94(v60, (uint64_t)v7, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C03BCF1C((uint64_t)v7, (uint64_t)v13, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v26 = *v13;
  uint64_t v27 = v13[1];
  uint64_t v29 = v13[2];
  uint64_t v28 = v13[3];
  sub_1BFD5A4A4(*v13, v27);
  sub_1C03BC9EC((uint64_t)v13, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v27 == 1)
  {
    uint64_t v29 = 0;
    uint64_t v28 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v26, v27);
  }
  uint64_t v30 = v56;
  uint64_t v62 = v29;
  uint64_t v63 = v28;
  uint64_t v31 = v61;
  sub_1C03B6F0C((uint64_t)&v62, 0x676E6967617473, 0xE700000000000000, v61, v25);
  swift_bridgeObjectRelease();
  sub_1C03B8C94(v60, (uint64_t)v7, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C03BCF1C((uint64_t)v7, (uint64_t)v10, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v32 = *v10;
  uint64_t v33 = v10[1];
  uint64_t v35 = v10[4];
  uint64_t v34 = v10[5];
  sub_1BFD5A4A4(*v10, v33);
  sub_1C03BC9EC((uint64_t)v10, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v33 == 1)
  {
    uint64_t v35 = 0;
    uint64_t v34 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v32, v33);
  }
  uint64_t v37 = v58;
  uint64_t v36 = v59;
  uint64_t v38 = v54;
  uint64_t v62 = v35;
  uint64_t v63 = v34;
  sub_1C03B6F0C((uint64_t)&v62, 0x69746375646F7270, 0xEA00000000006E6FLL, v31, v25);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v39 = *(void *)(v25 + 16);
  if (*(void *)(v39 + 16))
  {
    uint64_t v40 = *v30;
    uint64_t v41 = v30[1];
    *uint64_t v38 = v39;
    v38[1] = v40;
    v38[2] = v41;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_1C0EE5574(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v44 = *(void *)(v42 + 16);
    unint64_t v43 = *(void *)(v42 + 24);
    if (v44 >= v43 >> 1) {
      unint64_t v42 = sub_1C0EE5574(v43 > 1, v44 + 1, 1, v42);
    }
    *(void *)(v42 + 16) = v44 + 1;
    sub_1C03BCF1C((uint64_t)v38, v42+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v44, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
  }
  else
  {
    unint64_t v42 = MEMORY[0x1E4FBC860];
  }
  uint64_t v45 = v53;
  swift_beginAccess();
  uint64_t v46 = *v45;
  if (*(void *)(v46 + 16))
  {
    uint64_t v47 = *v30;
    uint64_t v48 = v30[1];
    *uint64_t v37 = v46;
    v37[1] = v47;
    void v37[2] = v48;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v42 = sub_1C0EE5574(0, *(void *)(v42 + 16) + 1, 1, v42);
    }
    unint64_t v50 = *(void *)(v42 + 16);
    unint64_t v49 = *(void *)(v42 + 24);
    if (v50 >= v49 >> 1) {
      unint64_t v42 = sub_1C0EE5574(v49 > 1, v50 + 1, 1, v42);
    }
    *(void *)(v42 + 16) = v50 + 1;
    sub_1C03BCF1C((uint64_t)v37, v42+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v50, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
  }
  swift_release();
  swift_release();
  return v42;
}

void sub_1C03BC768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C03BC7D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C03BC818@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1C02E1E24(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

void sub_1C03BC838()
{
  if (!qword_1EA19AB20)
  {
    sub_1C03BCDD4(255, &qword_1EA19AB28, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19AB20);
    }
  }
}

void sub_1C03BC8BC()
{
  if (!qword_1EA19AB30)
  {
    type metadata accessor for FormatSlotDefinition();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19AB30);
    }
  }
}

uint64_t sub_1C03BC924(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C03B8104(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C03BC988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03BC9EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C03BCA4C()
{
  if (!qword_1EA19AB38)
  {
    sub_1C03B8104(255, &qword_1EB879E50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19AB38);
    }
  }
}

uint64_t sub_1C03BCAE4(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(_OWORD **)(v5 + 16);
  v18[0] = *v6;
  long long v7 = v6[1];
  long long v8 = v6[2];
  long long v9 = v6[4];
  v18[3] = v6[3];
  v18[4] = v9;
  v18[1] = v7;
  void v18[2] = v8;
  long long v10 = v6[5];
  long long v11 = v6[6];
  long long v12 = v6[8];
  v18[7] = v6[7];
  v18[8] = v12;
  v18[5] = v10;
  v18[6] = v11;
  long long v13 = v6[7];
  a1[6] = v6[6];
  a1[7] = v13;
  a1[8] = v6[8];
  long long v14 = v6[3];
  a1[2] = v6[2];
  a1[3] = v14;
  long long v15 = v6[5];
  a1[4] = v6[4];
  a1[5] = v15;
  long long v16 = v6[1];
  *a1 = *v6;
  a1[1] = v16;
  sub_1C03BCE44(a5, a2, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  return sub_1C0187D08((uint64_t)v18);
}

uint64_t sub_1C03BCB78(uint64_t a1, uint64_t a2)
{
  sub_1C03BCDD4(0, (unint64_t *)&unk_1EA19C790, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03BCC08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C03BCDD4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C03BCC64()
{
  if (!qword_1EA19AB40)
  {
    MEMORY[0x1F4188790](0);
    type metadata accessor for FormatSlotDefinition();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA19AB40);
    }
  }
}

uint64_t sub_1C03BCD60(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C03BCDD4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1C03BCDD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C03BCE44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C03BCEAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C03B8104(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C03BCF1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C03BCF90(void *a1)
{
  return FormatSupplementaryNodePinTrait.encode(to:)(a1);
}

uint64_t _s8NewsFeed31FormatSupplementaryNodePinTraitO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a1;
  uint64_t v3 = *(unsigned __int16 *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 10);
  unint64_t v5 = *(void *)a2;
  uint64_t v6 = *(unsigned __int16 *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 10);
  if (*(unsigned char *)(a1 + 10))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        unint64_t v19 = *(void *)a1;
        __int16 v20 = v3 & 0x1FF;
        unint64_t v17 = v5;
        __int16 v18 = v6 & 0x1FF;
        sub_1BFFA742C(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        char v8 = _s8NewsFeed34FormatSupplementaryNodePinDistanceO2eeoiySbAC_ACtFZ_0((uint64_t)&v19, (uint64_t)&v17);
        sub_1BFFA742C(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        sub_1BFFA742C(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        sub_1BFFA742C(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        sub_1BFFA742C(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        return v8 & 1;
      }
      sub_1BFFE2FD4(*(void *)a1, v3, BYTE1(v3) & 1);
      goto LABEL_29;
    }
    if (v7 == 2)
    {
      if (v3 >> 8 <= 0xFE)
      {
        unint64_t v19 = *(void *)a1;
        __int16 v20 = v3;
        if (v6 >> 8 <= 0xFE)
        {
          unint64_t v17 = v5;
          __int16 v18 = v6 & 0x1FF;
          sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          char v16 = _s8NewsFeed34FormatSupplementaryNodePinDistanceO2eeoiySbAC_ACtFZ_0((uint64_t)&v19, (uint64_t)&v17);
          sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          sub_1BFFDF4D8(v19, v20, SHIBYTE(v20));
          sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          if ((v16 & 1) == 0) {
            goto LABEL_30;
          }
LABEL_38:
          char v8 = 1;
          return v8 & 1;
        }
        sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        sub_1BFFDF4D8(v2, v3, SHIBYTE(v20));
      }
      else
      {
        sub_1BFFE2FE0(*(void *)a2, *(_WORD *)(a2 + 8));
        sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1BFFA742C(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        sub_1BFFA742C(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        if (v6 >> 8 > 0xFE) {
          goto LABEL_38;
        }
      }
      sub_1BFFDF4E4(v2, v3);
      sub_1BFFDF4E4(v5, v6);
      goto LABEL_30;
    }
    sub_1BFFE2FE0(*(void *)a1, v3);
LABEL_29:
    sub_1BFFA742C(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
    sub_1BFFA742C(v2, v3, v4, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    sub_1BFFA742C(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
LABEL_30:
    char v8 = 0;
    return v8 & 1;
  }
  if (*(unsigned char *)(a2 + 10)) {
    goto LABEL_29;
  }
  if (v2) {
    uint64_t v9 = 0x676E696C69617274;
  }
  else {
    uint64_t v9 = 0x676E696461656CLL;
  }
  if (v2) {
    unint64_t v10 = 0xE800000000000000;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5) {
    uint64_t v11 = 0x676E696C69617274;
  }
  else {
    uint64_t v11 = 0x676E696461656CLL;
  }
  if (v5) {
    unint64_t v12 = 0xE800000000000000;
  }
  else {
    unint64_t v12 = 0xE700000000000000;
  }
  if (v9 != v11 || v10 != v12)
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFFA742C(v2, v3, 0, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    sub_1BFFA742C(v5, v6, 0, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    return v14 & 1;
  }
  swift_bridgeObjectRelease_n();
  sub_1BFFA742C(v2, v3, 0, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  sub_1BFFA742C(v5, v6, 0, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  char v8 = 1;
  return v8 & 1;
}

unint64_t sub_1C03BD6CC(uint64_t a1)
{
  unint64_t result = sub_1C03BD6F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03BD6F4()
{
  unint64_t result = qword_1EA19AB50;
  if (!qword_1EA19AB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AB50);
  }
  return result;
}

unint64_t sub_1C03BD748(void *a1)
{
  a1[1] = sub_1BFD0C460();
  a1[2] = sub_1C03BD780();
  unint64_t result = sub_1C03BD7D4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C03BD780()
{
  unint64_t result = qword_1EB860960;
  if (!qword_1EB860960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860960);
  }
  return result;
}

unint64_t sub_1C03BD7D4()
{
  unint64_t result = qword_1EA19AB58;
  if (!qword_1EA19AB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AB58);
  }
  return result;
}

uint64_t destroy for FormatSupplementaryNodePinTrait(uint64_t a1)
{
  return sub_1BFFA742C(*(void *)a1, *(unsigned __int16 *)(a1 + 8), *(unsigned char *)(a1 + 10), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
}

uint64_t _s8NewsFeed31FormatSupplementaryNodePinTraitOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 10);
  unsigned __int16 v5 = *(_WORD *)(a2 + 8);
  sub_1BFFA742C(*(void *)a2, v5, v4, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
  *(void *)a1 = v3;
  *(_WORD *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 10) = v4;
  return a1;
}

uint64_t assignWithCopy for FormatSupplementaryNodePinTrait(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 10);
  unsigned __int16 v5 = *(_WORD *)(a2 + 8);
  sub_1BFFA742C(*(void *)a2, v5, v4, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = v3;
  uint64_t v7 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v5;
  char v8 = *(unsigned char *)(a1 + 10);
  *(unsigned char *)(a1 + 10) = v4;
  sub_1BFFA742C(v6, v7, v8, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  return a1;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for FormatSupplementaryNodePinTrait(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 10);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v3;
  char v7 = *(unsigned char *)(a1 + 10);
  *(unsigned char *)(a1 + 10) = v4;
  sub_1BFFA742C(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  return a1;
}

uint64_t sub_1C03BDA34(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 10);
}

uint64_t sub_1C03BDA3C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 10) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinTrait()
{
  return &type metadata for FormatSupplementaryNodePinTrait;
}

void *sub_1C03BDA54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 10) == 255)
  {
    uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v1);
    sub_1C0181BEC(0);
    unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
    uint64_t v6 = (void *)(v5 + v4);
    sub_1C0433600(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v6);
    uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
    sub_1C09BCFA4(7235920, 0xE300000000000000, 0, 0, v5, v43);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v8 = *(void *)a1;
    uint64_t v9 = *(unsigned __int16 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 10) << 16);
    if (WORD1(v9))
    {
      unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v10);
      sub_1C0181BEC(0);
      uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 72);
      unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
      if (WORD1(v9) == 1)
      {
        sub_1BFFA742C(v8, v9, 1, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6465786946, 0xE500000000000000, (void *)(v14 + v13));
        uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
        unint64_t v42 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
        v42(v14 + v13, 0, 1, v15);
        char v16 = (void *)(v14 + v13 + v12);
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v10);
        uint64_t v17 = swift_initStackObject();
        *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
        *(void *)&v43[0] = v8;
        WORD4(v43[0]) = v9 & 0x1FF;
        __int16 v18 = sub_1C0DA044C((uint64_t)v43);
        sub_1BFF9C84C(v8, v9);
        *(void *)(v17 + 56) = &type metadata for FormatInspection;
        *(void *)(v17 + 64) = &off_1F1C29D30;
        *(void *)(v17 + 32) = v18;
        uint64_t v19 = sub_1C0233FC8(v17);
        swift_setDeallocating();
        sub_1C01004D8();
        swift_arrayDestroy();
        __int16 v20 = sub_1C131B79C(v19);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x65636E6174736944, 0xE800000000000000, (uint64_t)v20, 0, 0, v16);
        v42((unint64_t)v16, 0, 1, v15);
      }
      else
      {
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6E6F6974636553, 0xE700000000000000, (void *)(v14 + v13));
        uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v32 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
        v32(v14 + v13, 0, 1, v31);
        uint64_t v33 = (void *)(v14 + v13 + v12);
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v10);
        uint64_t v34 = swift_initStackObject();
        *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
        *(void *)&v43[0] = v8;
        WORD4(v43[0]) = v9;
        uint64_t v35 = sub_1C0DA044C((uint64_t)v43);
        *(void *)(v34 + 56) = &type metadata for FormatInspection;
        *(void *)(v34 + 64) = &off_1F1C29D30;
        *(void *)(v34 + 32) = v35;
        uint64_t v36 = sub_1C0233FC8(v34);
        swift_setDeallocating();
        sub_1C01004D8();
        swift_arrayDestroy();
        uint64_t v37 = sub_1C131B79C(v36);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x65636E6174736944, 0xE800000000000000, (uint64_t)v37, 0, 0, v33);
        v32((unint64_t)v33, 0, 1, v31);
      }
      sub_1C09BCFA4(7235920, 0xE300000000000000, 0, 0, v14, v43);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    else
    {
      uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v21);
      sub_1C0181BEC(0);
      uint64_t v23 = *(void *)(*(void *)(v22 - 8) + 72);
      unint64_t v24 = (*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1C1527210;
      uint64_t v26 = (void *)(v25 + v24);
      sub_1C0433600(1701869908, 0xE400000000000000, 1701274693, 0xE400000000000000, v26);
      uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v28 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
      v28(v26, 0, 1, v27);
      if (v8) {
        uint64_t v29 = 0x676E696C69617274;
      }
      else {
        uint64_t v29 = 0x676E696461656CLL;
      }
      if (v8) {
        uint64_t v30 = 0xE800000000000000;
      }
      else {
        uint64_t v30 = 0xE700000000000000;
      }
      sub_1C0433600(1701274693, 0xE400000000000000, v29, v30, (void *)((char *)v26 + v23));
      v28((void *)((char *)v26 + v23), 0, 1, v27);
      sub_1C09BCFA4(7235920, 0xE300000000000000, 0, 0, v25, v43);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
  }
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v38 = swift_allocObject();
  *(void *)(inited + 32) = v38;
  *(void *)(v38 + 48) = v44;
  long long v39 = v43[1];
  *(_OWORD *)(v38 + 16) = v43[0];
  *(_OWORD *)(v38 + 32) = v39;
  uint64_t v40 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v40;
}

uint64_t sub_1C03BE430()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C03BE478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = *(void *)(a3 + 88);
  if (v7 && *(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(a1, a2);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v11 = sub_1C03BE788(v10, v4);
      swift_bridgeObjectRelease();
      swift_release();
      return v11;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB85E5D8 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EB93C270;
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1BFE9C558();
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C03BE600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = *(void *)(a3 + 96);
  if (v7 && *(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(a1, a2);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v11 = sub_1C03BEA88(v10, v4);
      swift_bridgeObjectRelease();
      swift_release();
      return v11;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB85E5D8 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EB93C270;
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1BFE9C558();
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C03BE788(uint64_t a1, void *a2)
{
  uint64_t v29 = type metadata accessor for LayeredMediaImageVariant();
  uint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v7 = (void *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v25[1] = v2;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1C05F6A5C(0, v8, 0);
    uint64_t v9 = v30;
    uint64_t v10 = type metadata accessor for LayeredMedia.ImageResource();
    uint64_t v11 = *(void *)(v10 - 8);
    id v12 = (void *)(a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)));
    uint64_t v27 = a2 + 2;
    uint64_t v28 = v10;
    uint64_t v26 = *(void *)(v11 + 72);
    do
    {
      uint64_t v13 = a2[5];
      uint64_t v14 = a2[6];
      __swift_project_boxed_opaque_existential_1(v27, v13);
      uint64_t v15 = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v14 + 8))(*v12, v12[1], v13, v14);
      uint64_t v16 = v12[2];
      uint64_t v17 = v12[3];
      __int16 v18 = (char *)v12 + *(int *)(v28 + 24);
      uint64_t v19 = (char *)v7 + *(int *)(v29 + 24);
      uint64_t v20 = sub_1C1519E9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
      uint64_t *v7 = v15;
      v7[1] = v16;
      void v7[2] = v17;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C05F6A5C(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v30;
      }
      unint64_t v23 = *(void *)(v9 + 16);
      unint64_t v22 = *(void *)(v9 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1C05F6A5C(v22 > 1, v23 + 1, 1);
        uint64_t v9 = v30;
      }
      *(void *)(v9 + 16) = v23 + 1;
      sub_1C03BEA24((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v23);
      id v12 = (void *)((char *)v12 + v26);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1C03BEA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayeredMediaImageVariant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03BEA88(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F6AA4(0, v2, 0);
    uint64_t v3 = v22;
    uint64_t v19 = a2 + 2;
    uint64_t v20 = a2;
    uint64_t v6 = (char *)(a1 + 64);
    do
    {
      uint64_t v7 = *((void *)v6 - 4);
      uint64_t v8 = *((void *)v6 - 3);
      uint64_t v9 = *((void *)v6 - 2);
      uint64_t v10 = *((void *)v6 - 1);
      uint64_t v21 = qword_1C15447E0[*v6];
      uint64_t v12 = a2[5];
      uint64_t v11 = a2[6];
      __swift_project_boxed_opaque_existential_1(v19, v12);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
      swift_bridgeObjectRetain();
      uint64_t v14 = v13(v7, v8, v12, v11);
      swift_bridgeObjectRelease();
      unint64_t v16 = *(void *)(v22 + 16);
      unint64_t v15 = *(void *)(v22 + 24);
      if (v16 >= v15 >> 1) {
        sub_1C05F6AA4(v15 > 1, v16 + 1, 1);
      }
      *(void *)(v22 + 16) = v16 + 1;
      uint64_t v17 = (void *)(v22 + 40 * v16);
      void v17[4] = v14;
      v17[5] = v9;
      v17[6] = v10;
      a2 = v20;
      v17[7] = v21;
      v17[8] = 0xE300000000000000;
      v6 += 40;
      --v2;
    }
    while (v2);
  }
  return v3;
}

double FormatCustomFont.size.getter()
{
  return *(double *)(v0 + 16);
}

void FormatCustomFont.scaling.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t FormatCustomFont.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FormatCustomFont.size.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*FormatCustomFont.size.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCustomFont.scaling.setter(uint64_t result)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)(v1 + 24) = *(void *)result;
  *(_WORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*FormatCustomFont.scaling.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C03BECA0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  unint64_t v6 = v5 | 0xB000000000000000;
  uint64_t v7 = *(void **)(a1 + 48);
  uint64_t v8 = v7[2];
  if (v8)
  {
    unint64_t v9 = v7[v8 + 3];
    swift_retain();
    swift_bridgeObjectRetain();
    char v10 = sub_1C0387D88(v9, v6);
    swift_release();
    if (v10) {
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_1C0EE23FC(0, v7[2] + 1, 1, v7);
  }
  unint64_t v13 = v7[2];
  unint64_t v12 = v7[3];
  if (v13 >= v12 >> 1) {
    uint64_t v7 = sub_1C0EE23FC((void *)(v12 > 1), v13 + 1, 1, v7);
  }
  void v7[2] = v13 + 1;
  v7[v13 + 4] = v6;
  uint64_t result = swift_release();
  *(void *)(a1 + 48) = v7;
  return result;
}

uint64_t sub_1C03BEDDC(uint64_t a1)
{
  return sub_1C03BECA0(a1);
}

BOOL _s8NewsFeed16FormatCustomFontV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  __int16 v4 = *(_WORD *)(a1 + 32);
  double v6 = *(double *)(a2 + 16);
  double v5 = *(double *)(a2 + 24);
  __int16 v7 = *(_WORD *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v3 != v6) {
      return 0;
    }
    goto LABEL_9;
  }
  char v9 = sub_1C1520A9C();
  BOOL result = 0;
  if ((v9 & 1) != 0 && v3 == v6)
  {
LABEL_9:
    if ((v4 & 0xFF00) == 0xC00) {
      return (v7 & 0xFF00) == 0xC00;
    }
    if ((v7 & 0xFF00) != 0xC00)
    {
      if (v4)
      {
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
      else if ((v7 & 1) != 0 || v2 != v5)
      {
        return 0;
      }
      uint64_t v11 = FormatFontScalingStyle.rawValue.getter();
      uint64_t v13 = v12;
      if (v11 == FormatFontScalingStyle.rawValue.getter() && v13 == v14)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v15 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C03BEF50(uint64_t a1)
{
  unint64_t result = sub_1C03BEF78();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03BEF78()
{
  unint64_t result = qword_1EA19AB60;
  if (!qword_1EA19AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AB60);
  }
  return result;
}

unint64_t sub_1C03BEFCC(void *a1)
{
  a1[1] = sub_1BFDE25C4();
  a1[2] = sub_1BFDC4AEC();
  unint64_t result = sub_1C03BF004();
  a1[3] = result;
  return result;
}

unint64_t sub_1C03BF004()
{
  unint64_t result = qword_1EA19AB68;
  if (!qword_1EA19AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AB68);
  }
  return result;
}

double sub_1C03BF058@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

double sub_1C03BF064(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(a2 + 16) = *a1;
  return result;
}

uint64_t sub_1C03BF070@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2 = *(_WORD *)(result + 32);
  *(void *)a2 = *(void *)(result + 24);
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1C03BF084(uint64_t result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)(a2 + 24) = *(void *)result;
  *(_WORD *)(a2 + 32) = v2;
  return result;
}

uint64_t initializeWithCopy for FormatCustomFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatCustomFont(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for FormatCustomFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for FormatCustomFont()
{
  return &type metadata for FormatCustomFont;
}

uint64_t sub_1C03BF1A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C03BF1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(void *)(*(void *)a1 + 112);
  uint64_t v3 = a2 + *(void *)(*(void *)a2 + 112);
  if (*(double *)v2 != *(double *)v3) {
    return 0;
  }
  if (!sub_1C00F1720(*(void *)(v2 + 8), *(void *)(v3 + 8))) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if ((MEMORY[0x1C18BE8B0](v2 + *(int *)(v6 + 24), v3 + *(int *)(v6 + 24)) & 1) == 0
    || (sub_1C00F2D8C(*(void *)(v2 + *(int *)(v6 + 28)), *(void *)(v3 + *(int *)(v6 + 28))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + *(void *)(*(void *)a1 + 120));
  uint64_t v8 = *(void *)(a2 + *(void *)(*(void *)a2 + 120));
  return sub_1C00F274C(v7, v8);
}

uint64_t sub_1C03BF2E8(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32)) {
      char v6 = *(unsigned char *)(a2 + 40);
    }
    else {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  if (*(void *)(a1 + 48))
  {
    if (!v5) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_1BFEFAE14(v7, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a2 + 56);
  return sub_1C00F335C(v9, v10);
}

uint64_t sub_1C03BF3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C00E88B0(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  return sub_1C00F41C4(v7, v8);
}

uint64_t FeedDaysOfWeek.values.getter()
{
  return sub_1BFD0C508((uint64_t)*(&off_1E64163C8 + *v0));
}

uint64_t FeedDaysOfWeek.rawValue.getter()
{
  uint64_t result = 0x7961646E7573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7961646E6F6DLL;
      break;
    case 2:
      uint64_t result = 0x79616473657574;
      break;
    case 3:
      uint64_t result = 0x616473656E646577;
      break;
    case 4:
      uint64_t result = 0x7961647372756874;
      break;
    case 5:
      uint64_t result = 0x796164697266;
      break;
    case 6:
      uint64_t result = 0x7961647275746173;
      break;
    case 7:
      uint64_t result = 0x737961646B656577;
      break;
    case 8:
      uint64_t result = 0x73646E656B656577;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C03BF5A4(char *a1, char *a2)
{
  return sub_1C14944C4(*a1, *a2);
}

uint64_t sub_1C03BF5B0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03BF5F8()
{
  return sub_1BFC5DE08();
}

uint64_t sub_1C03BF600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedDaysOfWeek.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C03BF628()
{
  return sub_1C151EAEC();
}

NewsFeed::FeedTimeOfDay_optional __swiftcall FeedTimeOfDay.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t FeedTimeOfDay.rawValue.getter()
{
  uint64_t result = 0x676E696E726F6DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F6F6E7265746661;
      break;
    case 2:
      uint64_t result = 0x676E696E657665;
      break;
    case 3:
      uint64_t result = 0x746867696ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C03BF760(unsigned __int8 *a1, char *a2)
{
  return sub_1C1492664(*a1, *a2);
}

uint64_t sub_1C03BF76C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03BF844()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03BF904()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedTimeOfDay_optional sub_1C03BF9D8(Swift::String *a1)
{
  return FeedTimeOfDay.init(rawValue:)(*a1);
}

void sub_1C03BF9E4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x676E696E726F6DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006ELL;
      uint64_t v3 = 0x6F6F6E7265746661;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E696E657665;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x746867696ELL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C03BFA7C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C03BFADC()
{
  return sub_1C151EAEC();
}

__n128 FeedGroupKnobsRules.init(rankMultiplier:baseScore:scoreThreshold:selectors:maxOccurrence:maxOccurrencePerConfig:maxOccurrencePerPublishDate:maxOccurrencePerEditions:precededBy:preferredPrecededBy:notPrecededBy:preferredNotPrecededBy:priorOccurrenceOf:noPriorOccurrenceOf:groupDistance:preferredGroupDistance:followedBy:preferredFollowedBy:notFollowedBy:preferredNotFollowedBy:daysOfWeek:notDaysOfWeek:timesOfDay:notTimesOfDay:feedModes:notFeedModes:alwaysSkip:alwaysSkipUntilEndOfFeed:allowedPlatforms:blockedPlatforms:contentOverlay:bundleSessionStates:notBundleSessionStates:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, long long a19, long long a20,__n128 a21,uint64_t a22)
{
  __n128 result = a21;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(_OWORD *)(a9 + 176) = a17;
  *(_OWORD *)(a9 + 192) = a18;
  *(_OWORD *)(a9 + 208) = a19;
  *(_OWORD *)(a9 + 224) = a20;
  *(__n128 *)(a9 + 240) = a21;
  *(void *)(a9 + 256) = a22;
  return result;
}

uint64_t FeedGroupKnobsRules.emitterRules(cursor:kind:)(uint64_t a1, uint64_t a2)
{
  memcpy(__dst, v2, sizeof(__dst));
  type metadata accessor for FeedGroupEmitterRule();
  sub_1C151ED5C();
  sub_1C152089C();
  swift_allocObject();
  uint64_t v5 = sub_1C151EC6C();
  uint64_t v7 = v6;
  memcpy(v11, v2, sizeof(v11));
  uint64_t *v7 = sub_1C03C00A4(a1, a2);
  memcpy(v11, __dst, sizeof(v11));
  v7[1] = sub_1C03C03B8(a1, a2);
  memcpy(v11, __dst, sizeof(v11));
  void v7[2] = sub_1C03C06CC(a1, a2);
  memcpy(v11, __dst, sizeof(v11));
  v7[3] = sub_1C03C09E0(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[4] = sub_1C03C0B30();
  memcpy(v11, __dst, sizeof(v11));
  v7[5] = sub_1C03C0C64();
  memcpy(v11, __dst, sizeof(v11));
  _OWORD v7[6] = sub_1C03C0D98();
  memcpy(v11, __dst, sizeof(v11));
  v7[7] = sub_1C03C0ECC();
  memcpy(v11, __dst, sizeof(v11));
  v7[8] = sub_1C03C1000();
  memcpy(v11, __dst, sizeof(v11));
  v7[9] = sub_1C03C1134();
  memcpy(v11, __dst, sizeof(v11));
  v7[10] = sub_1C03C1268(a1, a2);
  memcpy(v11, __dst, sizeof(v11));
  v7[11] = sub_1C03C157C(a1, a2);
  memcpy(v11, __dst, sizeof(v11));
  v7[12] = sub_1C03C1890();
  memcpy(v11, __dst, sizeof(v11));
  v7[13] = sub_1C03C19C4();
  memcpy(v11, __dst, sizeof(v11));
  v7[14] = sub_1C03C1AF8();
  memcpy(v11, __dst, sizeof(v11));
  v7[15] = sub_1C03C1C2C();
  memcpy(v11, __dst, sizeof(v11));
  unsigned char v7[16] = sub_1C03C2F2C(a1 + *(void *)(*(void *)a1 + 176));
  memcpy(v11, __dst, sizeof(v11));
  v7[17] = sub_1C03C31D4(a1 + *(void *)(*(void *)a1 + 176));
  memcpy(v11, __dst, sizeof(v11));
  v7[18] = sub_1C03C1D60(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[19] = sub_1C03C1F44(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[20] = sub_1C03C2128(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[21] = sub_1C03C225C(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[22] = sub_1C03C2390(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[23] = sub_1C03C24C4(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[24] = sub_1C03C25F8(a1);
  memcpy(v11, __dst, sizeof(v11));
  v7[25] = sub_1C03C272C(a1);
  v11[0] = sub_1BFE94A38(v5);
  sub_1C151ED5C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v8 = sub_1C151EA0C();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C03C00A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 32);
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(*(void *)a1 + 176);
  unint64_t v7 = *(void *)(v3 + 24);
  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    uint64_t v10 = *(void *)(v3 + 16);
    if ((v10 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v8 = *(void *)(a1 + v6 + *(int *)(type metadata accessor for FeedContext() + 40));
  uint64_t v9 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C00C9BB4(v9, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v11 = sub_1C151EC6C();
    uint64_t v13 = v12;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v13, a2, AssociatedTypeWitness);
    *(void *)(v13 + v15) = v10;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v11);
  }
LABEL_10:
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

uint64_t sub_1C03C03B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 40);
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(*(void *)a1 + 176);
  unint64_t v7 = *(void *)(v3 + 24);
  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    uint64_t v10 = *(void *)(v3 + 16);
    if ((v10 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v8 = *(void *)(a1 + v6 + *(int *)(type metadata accessor for FeedContext() + 40));
  uint64_t v9 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C00C9BB4(v9, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v11 = sub_1C151EC6C();
    uint64_t v13 = v12;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v13, a2, AssociatedTypeWitness);
    *(void *)(v13 + v15) = v10;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v11);
  }
LABEL_10:
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}