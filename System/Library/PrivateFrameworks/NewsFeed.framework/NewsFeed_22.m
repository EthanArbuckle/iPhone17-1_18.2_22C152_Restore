void *sub_1C0A28878(void *a1, uint64_t a2)
{
  uint64_t inited;
  void *v4;
  uint64_t v5;
  void (*v6)(void *, void, uint64_t, uint64_t);
  void *v7;
  void *v8;
  void *v9;
  long long v11;
  long long v12;
  long long v13;
  long long v14;
  long long v15;
  _OWORD v16[2];
  _OWORD v17[2];
  long long v18;
  _OWORD v19[4];

  sub_1C0A28A94(a2, (uint64_t)&v11, (unint64_t *)&qword_1EA1ACFC0);
  if (*((void *)&v12 + 1))
  {
    v19[1] = v15;
    v19[2] = v16[0];
    *(_OWORD *)((char *)&v19[2] + 9) = *(_OWORD *)((char *)v16 + 9);
    v17[0] = v11;
    v17[1] = v12;
    v18 = v13;
    v19[0] = v14;
    sub_1C01B2D70();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
    v11 = *(_OWORD *)((char *)v19 + 8);
    v12 = *(_OWORD *)((char *)&v19[1] + 8);
    v13 = *(_OWORD *)((char *)&v19[2] + 8);
    v4 = sub_1C0951008(&v11);
    *(void *)(inited + 56) = &type metadata for FormatInspection;
    *(void *)(inited + 64) = &off_1F1C29D30;
    *(void *)(inited + 32) = v4;
    v5 = *((void *)&v18 + 1);
    v6 = *(void (**)(void *, void, uint64_t, uint64_t))&v19[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1C0A27044(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(inited + 96) = &type metadata for FormatInspection;
    *(void *)(inited + 104) = &off_1F1C29D30;
    *(void *)(inited + 72) = v7;
    sub_1BFC66384((uint64_t)v17, (uint64_t)&v11);
    v8 = sub_1C0A27970(a1, (uint64_t)&v11);
    sub_1BFF19770((uint64_t)&v11);
    *(void *)(inited + 136) = &type metadata for FormatInspection;
    *(void *)(inited + 144) = &off_1F1C29D30;
    *(void *)(inited + 112) = v8;
    v9 = sub_1C131B79C(inited);
    swift_setDeallocating();
    sub_1BFEE7E48(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    sub_1C044538C((uint64_t)v17);
  }
  else
  {
    sub_1C0A28B00((uint64_t)&v11, (unint64_t *)&qword_1EA1ACFC0);
    return sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  return v9;
}

void sub_1C0A28A60(uint64_t a1)
{
}

uint64_t sub_1C0A28A94(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1BFC77FBC(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A28B00(uint64_t a1, unint64_t *a2)
{
  sub_1BFC77FBC(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0A28B5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A28BC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0A28C24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0A28C88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for FormatInspectionFeedItem(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 64);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatInspectionFeedItem(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    uint64_t v7 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for FormatInspectionFeedItem(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0A28FA0(a1 + 56);
      long long v8 = *(_OWORD *)(a2 + 72);
      long long v7 = *(_OWORD *)(a2 + 88);
      *long long v4 = *v5;
      *(_OWORD *)(a1 + 72) = v8;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *long long v4 = v9;
  }
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t sub_1C0A28FA0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatInspectionFeedItem(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 64)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 64);
  if (!v6)
  {
    sub_1C0A28FA0(a1 + 56);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatInspectionFeedItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatInspectionFeedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionFeedItem()
{
  return &type metadata for FormatInspectionFeedItem;
}

ValueMetadata *type metadata accessor for DebugFormatSnapshotTransform()
{
  return &type metadata for DebugFormatSnapshotTransform;
}

BOOL sub_1C0A2918C(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2]) {
    return 0;
  }
  if (a1[4] == a2[4]) {
    return a1[3] == a2[3];
  }
  return 0;
}

CATransform3D *sub_1C0A291D0@<X0>(_OWORD *a1@<X8>)
{
  double v3 = *v1;
  if (*v1 == 0.0 && v1[1] == 0.0 && v1[2] == 1.0 && v1[3] == 0.0 && v1[4] == 0.0)
  {
    long long v4 = *MEMORY[0x1E4F39B10];
    long long v5 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 16);
    long long v6 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 32);
    long long v7 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 48);
    long long v8 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 64);
    long long v9 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 80);
    long long v10 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 96);
    long long v11 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 112);
  }
  else
  {
    CGFloat v12 = *(double *)(MEMORY[0x1E4F39B10] + 80);
    long long v13 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 16);
    *(_OWORD *)&v22.m11 = *MEMORY[0x1E4F39B10];
    *(_OWORD *)&v22.m13 = v13;
    long long v14 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 48);
    *(_OWORD *)&v22.m21 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 32);
    *(_OWORD *)&v22.m23 = v14;
    *(_OWORD *)&v22.m31 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 64);
    v22.m33 = v12;
    v22.m34 = -0.001;
    long long v15 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 112);
    *(_OWORD *)&v22.m41 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 96);
    *(_OWORD *)&v22.m43 = v15;
    CATransform3DRotate(&v21, &v22, v3 * 3.14159265 / 180.0, 1.0, 0.0, 0.0);
    double v16 = v1[1] * 3.14159265;
    CATransform3D v22 = v21;
    CATransform3DRotate(&v21, &v22, v16 / 180.0, 0.0, 1.0, 0.0);
    CGFloat v17 = v1[2];
    CATransform3D v22 = v21;
    CATransform3DScale(&v21, &v22, v17, v17, v17);
    CGFloat v18 = v1[3];
    CGFloat v19 = v1[4];
    CATransform3D v22 = v21;
    uint64_t result = CATransform3DTranslate(&v21, &v22, v18, v19, 0.0);
    long long v4 = *(_OWORD *)&v21.m11;
    long long v5 = *(_OWORD *)&v21.m13;
    long long v6 = *(_OWORD *)&v21.m21;
    long long v7 = *(_OWORD *)&v21.m23;
    long long v8 = *(_OWORD *)&v21.m31;
    long long v9 = *(_OWORD *)&v21.m33;
    long long v10 = *(_OWORD *)&v21.m41;
    long long v11 = *(_OWORD *)&v21.m43;
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return result;
}

BOOL static FormatButtonNodeBinding.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 6)
  {
    case 1u:
      BOOL result = (v3 & 0xC0) == 64;
      break;
    case 2u:
      BOOL result = (v3 & 0xC0) == 128;
      break;
    case 3u:
      BOOL result = v3 > 0xBF;
      break;
    default:
      BOOL v4 = ((v3 ^ v2) & 1) == 0;
      BOOL result = v3 < 0x40 && v4;
      break;
  }
  return result;
}

unint64_t sub_1C0A29434(uint64_t a1)
{
  unint64_t result = sub_1C0A2945C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A2945C()
{
  unint64_t result = qword_1EA1A27D8;
  if (!qword_1EA1A27D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27D8);
  }
  return result;
}

unint64_t sub_1C0A294B0(void *a1)
{
  a1[1] = sub_1C0020BEC();
  a1[2] = sub_1C08FE900();
  unint64_t result = sub_1C0A294E8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A294E8()
{
  unint64_t result = qword_1EA1A27E0;
  if (!qword_1EA1A27E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27E0);
  }
  return result;
}

uint64_t sub_1C0A2953C(void *a1)
{
  return FormatButtonNodeBinding.encode(to:)(a1);
}

BOOL sub_1C0A29554(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 6)
  {
    case 1u:
      BOOL result = (v3 & 0xC0) == 64;
      break;
    case 2u:
      BOOL result = (v3 & 0xC0) == 128;
      break;
    case 3u:
      BOOL result = v3 > 0xBF;
      break;
    default:
      BOOL v4 = ((v3 ^ v2) & 1) == 0;
      BOOL result = v3 < 0x40 && v4;
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatButtonNodeBinding()
{
  return &type metadata for FormatButtonNodeBinding;
}

uint64_t static FormatHeadlineBinding.ActivityItemsConfiguration.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatHeadlineBinding.ActivityItemsConfiguration.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineBinding.ActivityItemsConfiguration.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0A29684()
{
  unint64_t result = qword_1EA1A27E8;
  if (!qword_1EA1A27E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27E8);
  }
  return result;
}

unint64_t sub_1C0A296D8(uint64_t a1)
{
  unint64_t result = sub_1C0A29700();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A29700()
{
  unint64_t result = qword_1EA1A27F0;
  if (!qword_1EA1A27F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27F0);
  }
  return result;
}

unint64_t sub_1C0A29754(void *a1)
{
  a1[1] = sub_1C0870ED0();
  a1[2] = sub_1C090122C();
  unint64_t result = sub_1C0A29684();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0A2978C(void *a1)
{
  return FormatHeadlineBinding.ActivityItemsConfiguration.init(from:)(a1);
}

uint64_t sub_1C0A297A4(void *a1)
{
  return FormatHeadlineBinding.ActivityItemsConfiguration.encode(to:)(a1);
}

unsigned char *_s26ActivityItemsConfigurationOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0A29858);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.ActivityItemsConfiguration()
{
  return &type metadata for FormatHeadlineBinding.ActivityItemsConfiguration;
}

void PuzzleShareData.init(puzzleHistoryItem:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    id v14 = 0;
    char v15 = 1;
    goto LABEL_11;
  }
  id v11 = a1;
  id v12 = objc_msgSend(v11, sel_completedDate);
  if (v12)
  {
    long long v13 = v12;
    sub_1C15162BC();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
    {
      sub_1BFF97BE4((uint64_t)v10);
      id v14 = objc_msgSend(v11, sel_playDuration);
      char v15 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  sub_1BFF97BE4((uint64_t)v10);
  id v14 = 0;
  char v15 = 1;
LABEL_8:
  id v18 = objc_msgSend(v11, sel_rankID);
  if (v18)
  {
    CGFloat v19 = v18;
    uint64_t v16 = sub_1C151E62C();
    uint64_t v17 = v20;
  }
  else
  {

    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
LABEL_11:
  *(void *)a2 = v14;
  *(unsigned char *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v17;
  *(unsigned char *)(a2 + 32) = a1 != 0;
}

uint64_t PuzzleShareData.solveTime.getter()
{
  return *(void *)v0;
}

uint64_t PuzzleShareData.rankID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleShareData.puzzlePlayed.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

void __swiftcall PuzzleShareData.init(solveTime:rankID:puzzlePlayed:)(NewsFeed::PuzzleShareData *__return_ptr retstr, Swift::Int_optional solveTime, Swift::String_optional rankID, Swift::Bool puzzlePlayed)
{
  retstr->solveTime.value = solveTime.value;
  retstr->solveTime.is_nil = solveTime.is_nil;
  retstr->rankID = rankID;
  retstr->puzzlePlayed = puzzlePlayed;
}

uint64_t destroy for FormatSystemFont()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleShareData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleShareData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  return a1;
}

uint64_t assignWithTake for PuzzleShareData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleShareData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleShareData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleShareData()
{
  return &type metadata for PuzzleShareData;
}

void static FormatTagFollowContext.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static FormatTagMoreActions.default.getter(void *a1@<X8>)
{
  *a1 = 0xF000000000000007;
  a1[1] = &unk_1F1B88510;
}

void static FormatTagNavigate.default.getter(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

unsigned char *FormatTagFollowContext.init(notificationsAction:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void FormatTagFollowContext.notificationsAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatTagNavigate.init(parameters:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FormatTagNavigate.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0A29D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0A2A1C0(a1, a2, (void (*)(void))sub_1C002FEB0, a3);
}

uint64_t sub_1C0A29D8C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v30 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C002FEFC(0);
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C15156FC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  CGFloat v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = a1[1];
  v33[0] = *a1;
  v33[1] = v20;
  long long v21 = a1[3];
  v33[2] = a1[2];
  v33[3] = v21;
  if (*(void *)(a2 + 16))
  {
    uint64_t v29 = a3;
    sub_1C151564C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v15, (uint64_t (*)(void))sub_1C002FEFC);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v29, v4, v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      uint64_t v24 = sub_1C15155FC();
      if (v24) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v24);
      *(&v28 - 2) = (uint64_t)v33;
      unint64_t v26 = sub_1C002FB68((void (*)(void))sub_1C0A3F4B8, (uint64_t)(&v28 - 4), a2);
      uint64_t v32 = v25;
      sub_1C002FB3C(v26);
      sub_1C151560C();
      sub_1C151565C();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      v27 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v4, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v8) == 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v29, v27, v8);
        return sub_1BFEFEBC8((uint64_t)v12, (uint64_t (*)(void))sub_1BFF00BEC);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v8);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v29, v12, v8);
      }
    }
  }
  else
  {
    v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
    return v23(a3, v4, v8);
  }
}

uint64_t sub_1C0A2A1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a1;
  v30 = a3;
  uint64_t v5 = v4;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C002FEFC(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C15156FC();
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = MEMORY[0x1F4188790](v17);
  long long v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16))
  {
    sub_1C151564C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v16, (uint64_t (*)(void))sub_1C002FEFC);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(a4, v5, v8);
    }
    else
    {
      uint64_t v28 = a4;
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
      uint64_t v24 = sub_1C15155FC();
      if (v24) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v24);
      unint64_t v26 = v30;
      *(&v28 - 2) = v29;
      unint64_t v27 = sub_1C002FB68(v26, (uint64_t)(&v28 - 4), a2);
      uint64_t v32 = v25;
      sub_1C002FB3C(v27);
      sub_1C151560C();
      sub_1C151565C();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v10, v5, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v8) == 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v28, v10, v8);
        return sub_1BFEFEBC8((uint64_t)v13, (uint64_t (*)(void))sub_1BFF00BEC);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v28, v13, v8);
      }
    }
  }
  else
  {
    v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v31 + 16);
    return v23(a4, v5, v8, v19);
  }
}

char *sub_1C0A2A5DC(void *a1, _OWORD *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v32 = a2;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v32 - v17;
  switch(a5)
  {
    case 1:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA7FC((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *CATransform3D v22 = 0xD000000000000014;
      v22[1] = 0x80000001C15880D0;
      v22[5] = &type metadata for FormatVersions.StarSky;
      v22[6] = &off_1F1C39BA8;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      break;
    case 2:
      swift_bridgeObjectRetain();
      id v23 = objc_msgSend(a1, sel_identifier);
      if (!v23)
      {
        sub_1C151E62C();
        id v23 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v24 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v23);

      sub_1C1515F1C();
      sub_1C0A29D8C(v32, a3, (uint64_t)v18);
      sub_1C002B840(a3, a4, 2);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
      v25(v15, v12);
      if (qword_1EB87B130 != -1) {
        swift_once();
      }
      uint64_t v26 = qword_1EB871698;
      sub_1C151706C();
      swift_retain();
      sub_1C151704C();
      if (qword_1EB896B90 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v15 = (char *)sub_1C00257AC(v26, (uint64_t)v11);
      v25(v18, v12);
      break;
    case 3:
      if (a3 | a4)
      {
        if (qword_1EB85E4E0 != -1) {
          swift_once();
        }
        type metadata accessor for FormatCommandAction();
        swift_allocObject();
        swift_unknownObjectRetain();
        uint64_t v27 = swift_retain();
        uint64_t v28 = sub_1C0A3BEDC(v27, (uint64_t)a1);
      }
      else
      {
        if (qword_1EB87B188 != -1) {
          swift_once();
        }
        type metadata accessor for FormatCommandAction();
        swift_allocObject();
        swift_unknownObjectRetain();
        uint64_t v30 = swift_retain();
        uint64_t v28 = sub_1C0A3BBEC(v30, (uint64_t)a1);
      }
      goto LABEL_23;
    default:
      if (a3)
      {
        char v21 = 1;
      }
      else
      {
        type metadata accessor for FormatVariableCollection();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = MEMORY[0x1E4FBC868];
        type metadata accessor for FormatOptionCollection();
        swift_initStackObject();
        uint64_t v20 = v32;
        sub_1C01677F4((uint64_t)v32);
        sub_1BFEF13D8(MEMORY[0x1E4FBC860], v19);
        swift_release();
        char v21 = sub_1C1520A9C();
        sub_1C0167828((uint64_t)v20);
      }
      if (qword_1EB87B198 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_unknownObjectRetain();
      uint64_t v29 = swift_retain();
      uint64_t v28 = sub_1C0A3C1CC(v29, (uint64_t)a1, v21 & 1 | 0x100u);
LABEL_23:
      uint64_t v15 = (char *)v28;
      swift_release();
      break;
  }
  return v15;
}

uint64_t sub_1C0A2ABD0(unsigned __int8 *a1, char *a2)
{
  return sub_1C148DCD8(*a1, *a2);
}

uint64_t sub_1C0A2ABDC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A2ACCC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A2ADA4()
{
  return sub_1C1520E0C();
}

void sub_1C0A2AEA4(void *a1@<X8>)
{
  *a1 = &unk_1F1B69D88;
}

BOOL static FormatTagFollowContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t static FormatTagNavigate.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BFD81AE8(*a1, *a2);
}

uint64_t sub_1C0A2AEE0@<X0>(unsigned char *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  int v5 = *a1;
  unint64_t v6 = 0xE600000000000000;
  uint64_t v7 = 0x776F6C6C6F66;
  uint64_t v8 = v4;
  switch(*a1)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v7 = 0x6B636F6C62;
      break;
    case 2:
      unint64_t v6 = 0xEB00000000736E6FLL;
      uint64_t v7 = 0x6974634165726F6DLL;
      break;
    case 3:
      uint64_t v7 = 0x65726F6E6769;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x657461676976616ELL;
      break;
    default:
      break;
  }
  swift_bridgeObjectRetain();
  sub_1BFE7E4D4(v7, v6);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_1BFF27ECC();
    uint64_t v41 = sub_1C151FE5C();
    int v42 = v5;
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1C029748C(1uLL, v7, v6);
    uint64_t v18 = v17;
    v44 = a3;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v16, v18, v20, v22);
    uint64_t v8 = v4;
    swift_bridgeObjectRelease();
    unint64_t v43 = v15;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    int v5 = v42;
    swift_bridgeObjectRelease();
    a3 = v44;
    swift_bridgeObjectRelease();
    uint64_t v7 = v41;
    unint64_t v6 = v43;
  }
  switch(v5)
  {
    case 1:
      if (qword_1EB87B188 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_unknownObjectRetain();
      uint64_t v27 = swift_retain();
      uint64_t v26 = sub_1C0A3BBEC(v27, (uint64_t)a2);
      goto LABEL_19;
    case 2:
      sub_1C151E80C();
      unint64_t v28 = v6;
      uint64_t v29 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v30 = (uint64_t *)((char *)a4 + *(int *)(v29 + 24));
      void *v30 = 0;
      v30[1] = 0xE000000000000000;
      uint64_t v31 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
      *a4 = v7;
      a4[1] = v28;
      goto LABEL_20;
    case 3:
      if (qword_1EB85E4E0 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_unknownObjectRetain();
      uint64_t v32 = swift_retain();
      uint64_t v26 = sub_1C0A3BEDC(v32, (uint64_t)a2);
      goto LABEL_19;
    case 4:
      v37 = sub_1C0A2A5DC(a2, a3, MEMORY[0x1E4FBC860], 0, 2);
      if (v8)
      {

        uint64_t v38 = 0;
      }
      else
      {
        uint64_t v38 = (uint64_t)v37;
      }
      sub_1C0439354(v7, v6, v38, a4);
      goto LABEL_25;
    default:
      type metadata accessor for FormatVariableCollection();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = MEMORY[0x1E4FBC868];
      type metadata accessor for FormatOptionCollection();
      swift_initStackObject();
      sub_1C01677F4((uint64_t)a3);
      sub_1BFEF13D8(MEMORY[0x1E4FBC860], v23);
      swift_release();
      char v24 = sub_1C1520A9C();
      sub_1C0167828((uint64_t)a3);
      if (qword_1EB87B198 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_unknownObjectRetain();
      uint64_t v25 = swift_retain();
      uint64_t v26 = sub_1C0A3C1CC(v25, (uint64_t)a2, v24 & 1 | 0x100u);
LABEL_19:
      uint64_t v33 = v26;
      swift_release();
      uint64_t v29 = type metadata accessor for FormatInspectionItem(0);
      v34 = (uint64_t *)((char *)a4 + *(int *)(v29 + 24));
      uint64_t *v34 = v33;
      uint64_t v35 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
      *a4 = v7;
      a4[1] = v6;
LABEL_20:
      a4[2] = 0;
      a4[3] = 0;
      v36 = (char *)a4 + *(int *)(v29 + 28);
      *(void *)v36 = 0;
      *((void *)v36 + 1) = 0;
      v36[16] = -1;
LABEL_25:
      uint64_t v39 = type metadata accessor for FormatInspectionItem(0);
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a4, 0, 1, v39);
  }
}

uint64_t FormatTagNavigate.parameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*FormatTagNavigate.parameters.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0A2B518(uint64_t *a1, uint64_t *a2)
{
  return sub_1BFD81AE8(*a1, *a2);
}

uint64_t FormatTagMoreActions.title.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatTagMoreActions.actions.getter()
{
  return swift_bridgeObjectRetain();
}

void *FormatTagMoreActions.init(title:actions:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t FormatTagMoreActions.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0A3AF78(0, &qword_1EA1A2800, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A3AED0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v15 = 0;
  sub_1BFE3CF48();
  sub_1C152065C();
  uint64_t v11 = (uint64_t)v16;
  sub_1C0A41508(0, &qword_1EB85F0B8, (uint64_t)&type metadata for FormatTagMoreActions.Action, MEMORY[0x1E4FBB320]);
  char v15 = 1;
  sub_1BFDC11A4(v11);
  sub_1C0A3AFDC(&qword_1EB85F0D0, (void (*)(void))sub_1C0A3AF24);
  sub_1C152065C();
  uint64_t v12 = v16;
  if (!v16) {
    uint64_t v12 = &unk_1F1B89328;
  }
  unint64_t v14 = v12;
  unint64_t v16 = v12;
  sub_1C0A3BA34((unint64_t *)&unk_1EB85F0C0, &qword_1EB85F0B8, (uint64_t)&type metadata for FormatTagMoreActions.Action);
  uint64_t v13 = sub_1C151E92C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  sub_1BFDC11A4(v11);
  swift_bridgeObjectRetain();
  sub_1BFDC11BC(v11);
  *a2 = v11;
  a2[1] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BFDC11BC(v11);
  return swift_bridgeObjectRelease();
}

unsigned char *sub_1C0A2B884@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 0x776F6C6C6F66;
  if (*result) {
    uint64_t v2 = 0x6B636F6C62;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*result) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t FormatTagMoreActions.Action.rawValue.getter()
{
  if (*v0) {
    return 0x6B636F6C62;
  }
  else {
    return 0x776F6C6C6F66;
  }
}

uint64_t FormatTagMoreActions.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A3AF78(0, &qword_1EA1A2818, MEMORY[0x1E4FBBDE0]);
  uint64_t v27 = v6;
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = *v1;
  uint64_t v22 = v1[1];
  uint64_t v23 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A3AED0();
  sub_1C1520F0C();
  uint64_t v10 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BFF05D18();
  uint64_t v12 = &v5[*(int *)(v11 + 48)];
  uint64_t v13 = *(int *)(v11 + 64);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C151928C();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB93CAB0);
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v16(v5, v15, v14);
  if (qword_1EB8875F8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB93C9F0);
  v16(v12, v17, v14);
  *(_OWORD *)&v5[v13] = xmmword_1C1587CC0;
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v26;
  sub_1BFE97CE8((uint64_t)v5, (uint64_t)sub_1C01B158C, 0, v10, v25);
  sub_1BFEFEBC8((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v27);
  }
  uint64_t v29 = v23;
  char v28 = 0;
  sub_1BFF8B470();
  uint64_t v20 = v27;
  sub_1C152078C();
  uint64_t v29 = v22;
  char v28 = 1;
  sub_1C0A41508(0, &qword_1EB85F0B8, (uint64_t)&type metadata for FormatTagMoreActions.Action, MEMORY[0x1E4FBB320]);
  sub_1C0A3AFDC(&qword_1EB85EF38, (void (*)(void))sub_1C0A3B06C);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v20);
}

uint64_t sub_1C0A2BCF0(char *a1, char *a2)
{
  return sub_1C1487180(*a1, *a2);
}

uint64_t sub_1C0A2BCFC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A2BD7C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A2BDE8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A2BE64@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0A2BEC4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656C746974;
  if (*v1) {
    uint64_t v2 = 0x736E6F69746361;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0A2BF00()
{
  if (*v0) {
    return 0x736E6F69746361;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C0A2BF38@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0A2BF9C(uint64_t a1)
{
  unint64_t v2 = sub_1C0A3AED0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A2BFD8(uint64_t a1)
{
  unint64_t v2 = sub_1C0A3AED0();
  return MEMORY[0x1F41862B0](a1, v2);
}

NewsFeed::FormatTagMoreActions::Action_optional __swiftcall FormatTagMoreActions.Action.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0A2C078(char *a1, char *a2)
{
  return sub_1C14870E0(*a1, *a2);
}

uint64_t sub_1C0A2C084()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A2C100()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A2C168()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatTagMoreActions::Action_optional sub_1C0A2C1E0(Swift::String *a1)
{
  return FormatTagMoreActions.Action.init(rawValue:)(*a1);
}

void sub_1C0A2C1EC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x776F6C6C6F66;
  if (*v1) {
    uint64_t v2 = 0x6B636F6C62;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0A2C224()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A2C284()
{
  return sub_1C151EAEC();
}

void sub_1C0A2C2D4(void *a1@<X8>)
{
  *a1 = 0xF000000000000007;
  a1[1] = &unk_1F1B89890;
}

uint64_t sub_1C0A2C2E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTagMoreActions.init(from:)(a1, a2);
}

uint64_t sub_1C0A2C300(void *a1)
{
  return FormatTagMoreActions.encode(to:)(a1);
}

unsigned char *FormatTagFollowContext.notificationsAction.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*FormatTagFollowContext.notificationsAction.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0A2C348@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTagFollowContext.init(from:)(a1, a2);
}

uint64_t sub_1C0A2C360(void *a1)
{
  return FormatTagFollowContext.encode(to:)(a1);
}

uint64_t sub_1C0A2C378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadline(0);
  sub_1C0A41398();
  sub_1C0088B70();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A2C478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1C0A40DC8();
  sub_1C0088AA4();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A2C578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A41A20();
  sub_1C00881C4();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A2C670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A418C0();
  sub_1C0088FC8();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A2C768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A417B0();
  sub_1C0087CB4();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A2C860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A415EC();
  sub_1C008ACC4();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A2C958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for LiveActivityCommandContext();
  sub_1C0A4238C();
  sub_1C0067980();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A2CA58(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int16 a5)
{
  double v43 = *(double *)&a4;
  int v45 = a5;
  sub_1BFE66DE0();
  uint64_t v46 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151A7DC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v41 - v16;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (double *)((char *)&v41 - v21);
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v41 - v25;
  int v42 = v14;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v17 = a1 & 1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v17 = a1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *v27, v11, v24);
  }
  else
  {
    *(void *)uint64_t v17 = a1;
    *((void *)v17 + 1) = a2;
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *MEMORY[0x1E4FAC010], v11, v24);
    swift_bridgeObjectRetain();
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v41(v26, v17, v11);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v30 = 1;
  v29(v26, 0, 1, v11);
  if ((v45 & 0x100) == 0)
  {
    double v31 = v43;
    if (v45) {
      double v31 = 0.0;
    }
    *uint64_t v22 = v31;
    ((void (*)(double *, void, uint64_t))v28)(v22, *MEMORY[0x1E4FAC008], v11);
    uint64_t v30 = 0;
  }
  v29((char *)v22, v30, 1, v11);
  uint64_t v32 = (uint64_t)&v10[*(int *)(v46 + 48)];
  sub_1BFF0A690((uint64_t)v26, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v22, v32, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v33((uint64_t)v10, 1, v11) == 1)
  {
    sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
    int v34 = v33(v32, 1, v11);
    if (v34 == 1) {
      uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
    }
    else {
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    if (v34 == 1) {
      char v36 = -1;
    }
    else {
      char v36 = 0;
    }
  }
  else
  {
    uint64_t v37 = v44;
    sub_1BFF0A690((uint64_t)v10, v44, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v33(v32, 1, v11) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v11);
      char v36 = 0;
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v38 = v42;
      v41(v42, (char *)v32, v11);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v36 = sub_1C151E5CC();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v12 + 8);
      v39(v38, v11);
      uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      v39((char *)v37, v11);
    }
  }
  sub_1BFEFEBC8((uint64_t)v10, v35);
  return v36 & 1;
}

uint64_t sub_1C0A2CF98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a5;
  uint64_t v44 = a4;
  sub_1BFE66DE0();
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151A7DC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v41 - v16;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v18 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v41 - v20;
  __n128 v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v41 - v24;
  int v42 = v14;
  uint64_t v43 = v26;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v17 = a1 & 1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v17 = a1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *v27, v11, v23);
  }
  else
  {
    *(void *)uint64_t v17 = a1;
    *((void *)v17 + 1) = a2;
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *MEMORY[0x1E4FAC010], v11, v23);
    swift_bridgeObjectRetain();
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v41(v25, v17, v11);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v30 = 1;
  v29(v25, 0, 1, v11);
  uint64_t v31 = v46;
  if (v46)
  {
    *(void *)uint64_t v21 = v44;
    *((void *)v21 + 1) = v31;
    ((void (*)(char *, void, uint64_t))v28)(v21, *MEMORY[0x1E4FAC010], v11);
    uint64_t v30 = 0;
  }
  v29(v21, v30, 1, v11);
  uint64_t v32 = (uint64_t)&v10[*(int *)(v45 + 48)];
  sub_1BFF0A690((uint64_t)v25, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v21, v32, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v33((uint64_t)v10, 1, v11) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v25, (uint64_t (*)(void))sub_1BFF0A6F8);
    int v34 = v33(v32, 1, v11);
    if (v34 == 1) {
      uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
    }
    else {
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    if (v34 == 1) {
      char v36 = -1;
    }
    else {
      char v36 = 0;
    }
  }
  else
  {
    uint64_t v37 = v43;
    sub_1BFF0A690((uint64_t)v10, v43, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v33(v32, 1, v11) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v25, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v11);
      char v36 = 0;
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v38 = v42;
      v41(v42, (char *)v32, v11);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      swift_bridgeObjectRetain();
      char v36 = sub_1C151E5CC();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v12 + 8);
      v39(v38, v11);
      uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v25, (uint64_t (*)(void))sub_1BFF0A6F8);
      v39((char *)v37, v11);
    }
  }
  sub_1BFEFEBC8((uint64_t)v10, v35);
  return v36 & 1;
}

uint64_t sub_1C0A2D4E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5)
{
  int v44 = a5;
  uint64_t v42 = a4;
  sub_1BFE66DE0();
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151A7DC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - v16;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v40 - v21;
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v40 - v25;
  uint64_t v41 = v14;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v17 = a1 & 1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v17 = a1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *v27, v11, v24);
  }
  else
  {
    *(void *)uint64_t v17 = a1;
    *((void *)v17 + 1) = a2;
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *MEMORY[0x1E4FAC010], v11, v24);
    swift_bridgeObjectRetain();
  }
  v40 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v40(v26, v17, v11);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v30 = 1;
  v29(v26, 0, 1, v11);
  if ((v44 & 1) == 0)
  {
    *(void *)uint64_t v22 = v42;
    ((void (*)(char *, void, uint64_t))v28)(v22, *MEMORY[0x1E4FABFF8], v11);
    uint64_t v30 = 0;
  }
  v29(v22, v30, 1, v11);
  uint64_t v31 = (uint64_t)&v10[*(int *)(v45 + 48)];
  sub_1BFF0A690((uint64_t)v26, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v22, v31, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v32((uint64_t)v10, 1, v11) == 1)
  {
    sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
    int v33 = v32(v31, 1, v11);
    if (v33 == 1) {
      int v34 = (uint64_t (*)(void))sub_1BFF0A6F8;
    }
    else {
      int v34 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    if (v33 == 1) {
      char v35 = -1;
    }
    else {
      char v35 = 0;
    }
  }
  else
  {
    uint64_t v36 = v43;
    sub_1BFF0A690((uint64_t)v10, v43, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v36, v11);
      char v35 = 0;
      int v34 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v37 = v41;
      v40(v41, (char *)v31, v11);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v35 = sub_1C151E5CC();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v12 + 8);
      v38(v37, v11);
      int v34 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      v38((char *)v36, v11);
    }
  }
  sub_1BFEFEBC8((uint64_t)v10, v34);
  return v35 & 1;
}

uint64_t sub_1C0A2DA10(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5)
{
  int v44 = a5;
  uint64_t v42 = a4;
  sub_1BFE66DE0();
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151A7DC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - v16;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v40 - v21;
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v40 - v25;
  uint64_t v41 = v14;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v17 = a1 & 1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v17 = a1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *v27, v11, v24);
  }
  else
  {
    *(void *)uint64_t v17 = a1;
    *((void *)v17 + 1) = a2;
    char v28 = *(void (**)(char *, void, uint64_t, __n128))(v12 + 104);
    v28(v17, *MEMORY[0x1E4FAC010], v11, v24);
    swift_bridgeObjectRetain();
  }
  v40 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v40(v26, v17, v11);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v30 = 1;
  v29(v26, 0, 1, v11);
  if (v44 > 1u)
  {
    if (v44 != 2) {
      goto LABEL_12;
    }
    *(void *)uint64_t v22 = 0;
  }
  else
  {
    *(void *)uint64_t v22 = v42;
  }
  ((void (*)(char *, void, uint64_t))v28)(v22, *MEMORY[0x1E4FAC008], v11);
  uint64_t v30 = 0;
LABEL_12:
  v29(v22, v30, 1, v11);
  uint64_t v31 = (uint64_t)&v10[*(int *)(v45 + 48)];
  sub_1BFF0A690((uint64_t)v26, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v22, v31, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v32((uint64_t)v10, 1, v11) == 1)
  {
    sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
    int v33 = v32(v31, 1, v11);
    if (v33 == 1) {
      int v34 = (uint64_t (*)(void))sub_1BFF0A6F8;
    }
    else {
      int v34 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    if (v33 == 1) {
      char v35 = -1;
    }
    else {
      char v35 = 0;
    }
  }
  else
  {
    uint64_t v36 = v43;
    sub_1BFF0A690((uint64_t)v10, v43, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v36, v11);
      char v35 = 0;
      int v34 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v37 = v41;
      v40(v41, (char *)v31, v11);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v35 = sub_1C151E5CC();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v12 + 8);
      v38(v37, v11);
      int v34 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v22, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      v38((char *)v36, v11);
    }
  }
  sub_1BFEFEBC8((uint64_t)v10, v34);
  return v35 & 1;
}

uint64_t sub_1C0A2DF58(uint64_t a1, void (*a2)(void, void, void), char a3, char a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v45 = a2;
  sub_1BFE66DE0();
  uint64_t v49 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151A7DC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v43 - v22;
  __n128 v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v43 - v26;
  int v44 = v15;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v18 = a1 & 1;
      char v28 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v18 = a1;
      char v28 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v18, *v28, v12, v25);
  }
  else
  {
    uint64_t v29 = v45;
    *(void *)uint64_t v18 = a1;
    *((void *)v18 + 1) = v29;
    (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v18, *MEMORY[0x1E4FAC010], v12, v25);
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = *(void (**)(void, void, void))(v13 + 32);
  v45(v27, v18, v12);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v31 = v30(v27, 0, 1, v12);
  char v50 = a4;
  if (a4 == 4)
  {
    uint64_t v32 = v23;
    uint64_t v33 = 1;
  }
  else
  {
    v46(v31);
    sub_1C151B1DC();
    uint64_t v32 = v23;
    uint64_t v33 = 0;
  }
  v30(v32, v33, 1, v12);
  uint64_t v34 = (uint64_t)&v11[*(int *)(v49 + 48)];
  sub_1BFF0A690((uint64_t)v27, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v23, v34, (uint64_t (*)(void))sub_1BFF0A6F8);
  char v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v35((uint64_t)v11, 1, v12) == 1)
  {
    uint64_t v36 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v35(v34, 1, v12) == 1)
    {
      char v37 = -1;
    }
    else
    {
      uint64_t v36 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v37 = 0;
    }
  }
  else
  {
    uint64_t v38 = v48;
    sub_1BFF0A690((uint64_t)v11, v48, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v35(v34, 1, v12) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v12);
      char v37 = 0;
      uint64_t v36 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v39 = v44;
      v45(v44, v34, v12);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v37 = sub_1C151E5CC();
      v40 = *(void (**)(char *, uint64_t))(v13 + 8);
      v40(v39, v12);
      uint64_t v41 = v38;
      uint64_t v36 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      v40((char *)v41, v12);
    }
  }
  sub_1BFEFEBC8((uint64_t)v11, v36);
  return v37 & 1;
}

uint64_t sub_1C0A2E494(uint64_t a1, void (*a2)(void, void, void), char a3, char a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v45 = a2;
  sub_1BFE66DE0();
  uint64_t v49 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151A7DC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v43 - v22;
  __n128 v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v43 - v26;
  int v44 = v15;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v18 = a1 & 1;
      char v28 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v18 = a1;
      char v28 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v18, *v28, v12, v25);
  }
  else
  {
    uint64_t v29 = v45;
    *(void *)uint64_t v18 = a1;
    *((void *)v18 + 1) = v29;
    (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v18, *MEMORY[0x1E4FAC010], v12, v25);
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = *(void (**)(void, void, void))(v13 + 32);
  v45(v27, v18, v12);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v31 = v30(v27, 0, 1, v12);
  char v50 = a4;
  if (a4 == 3)
  {
    uint64_t v32 = v23;
    uint64_t v33 = 1;
  }
  else
  {
    v46(v31);
    sub_1C151B1DC();
    uint64_t v32 = v23;
    uint64_t v33 = 0;
  }
  v30(v32, v33, 1, v12);
  uint64_t v34 = (uint64_t)&v11[*(int *)(v49 + 48)];
  sub_1BFF0A690((uint64_t)v27, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v23, v34, (uint64_t (*)(void))sub_1BFF0A6F8);
  char v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v35((uint64_t)v11, 1, v12) == 1)
  {
    uint64_t v36 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v35(v34, 1, v12) == 1)
    {
      char v37 = -1;
    }
    else
    {
      uint64_t v36 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v37 = 0;
    }
  }
  else
  {
    uint64_t v38 = v48;
    sub_1BFF0A690((uint64_t)v11, v48, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v35(v34, 1, v12) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v12);
      char v37 = 0;
      uint64_t v36 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v39 = v44;
      v45(v44, v34, v12);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v37 = sub_1C151E5CC();
      v40 = *(void (**)(char *, uint64_t))(v13 + 8);
      v40(v39, v12);
      uint64_t v41 = v38;
      uint64_t v36 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      v40((char *)v41, v12);
    }
  }
  sub_1BFEFEBC8((uint64_t)v11, v36);
  return v37 & 1;
}

uint64_t sub_1C0A2E9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadline(0);
  sub_1C0A41398();
  sub_1C0088B70();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2EAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1C0A40DC8();
  sub_1C0088AA4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2EBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A41A20();
  sub_1C00881C4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2ECC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A418C0();
  sub_1C0088FC8();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2EDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A417B0();
  sub_1C0087CB4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2EEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A415EC();
  sub_1C008ACC4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2EFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for LiveActivityCommandContext();
  sub_1C0A4238C();
  sub_1C0067980();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadline(0);
  sub_1C0A41398();
  sub_1C0088B70();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1C0A40DC8();
  sub_1C0088AA4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, void, void, void, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  swift_retain();
  a9(a5, a6, a8, v15, &type metadata for FeedPuzzle, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB3A8], MEMORY[0x1E4FAD910], ObjectType, a2);
  return swift_release();
}

uint64_t sub_1C0A2F3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A41A20();
  sub_1C00881C4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A418C0();
  sub_1C0088FC8();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A417B0();
  sub_1C0087CB4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A415EC();
  sub_1C008ACC4();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for LiveActivityCommandContext();
  sub_1C0A4238C();
  sub_1C0067980();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A2F880(uint64_t a1, __int16 a2, void (*a3)(double *))
{
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (double *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 0x100) != 0)
  {
    uint64_t v13 = sub_1C151A7DC();
    (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  }
  else
  {
    double v9 = *(double *)&a1;
    if (a2) {
      double v9 = 0.0;
    }
    *uint64_t v8 = v9;
    uint64_t v10 = *MEMORY[0x1E4FAC008];
    uint64_t v11 = sub_1C151A7DC();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(double *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
    (*(void (**)(double *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
  a3(v8);
  return sub_1BFEFEBC8((uint64_t)v8, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A2FA10(uint64_t a1, unsigned __int8 a2, void (*a3)(void *))
{
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2 > 1u)
  {
    if (a2 != 2)
    {
      uint64_t v12 = sub_1C151A7DC();
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
      goto LABEL_7;
    }
    *uint64_t v8 = 0;
  }
  else
  {
    *uint64_t v8 = a1;
  }
  uint64_t v9 = *MEMORY[0x1E4FAC008];
  uint64_t v10 = sub_1C151A7DC();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v11 + 104))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  a3(v8);
  return sub_1BFEFEBC8((uint64_t)v8, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A2FBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_1C0A2FC60(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1C007685C, (uint64_t)&type metadata for IgnoringCommandState, (void (*)(uint64_t))sub_1C0A3EFF0) & 1;
}

uint64_t sub_1C0A2FC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_1C0A2FC60(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, (void (*)(uint64_t))sub_1C0A3EC5C) & 1;
}

uint64_t sub_1C0A2FC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, void (*a10)(uint64_t))
{
  char v50 = a8;
  uint64_t v51 = a6;
  LODWORD(v53) = a5;
  uint64_t v46 = a4;
  uint64_t v48 = a3;
  uint64_t v52 = a2;
  sub_1BFE66DE0();
  uint64_t v49 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151A7DC();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v45 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v44 - v18;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v47 = (uint64_t)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v44 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v44 - v26;
  uint64_t v56 = a7;
  swift_getObjectType();
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  v50();
  uint64_t v51 = a9;
  sub_1C151AD7C();
  if ((_BYTE)v53)
  {
    if (v53 == 1)
    {
      *uint64_t v19 = v48 & 1;
      char v28 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v19 = v48;
      char v28 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v19, *v28, v14);
  }
  else
  {
    uint64_t v29 = v46;
    *(void *)uint64_t v19 = v48;
    *((void *)v19 + 1) = v29;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E4FAC010], v14);
    swift_bridgeObjectRetain();
  }
  uint64_t v30 = v49;
  v53 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v53(v27, v19, v14);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v32 = v31(v27, 0, 1, v14);
  char v54 = v55;
  if (v55 == 2)
  {
    uint64_t v33 = v24;
    uint64_t v34 = 1;
  }
  else
  {
    a10(v32);
    sub_1C151B1DC();
    uint64_t v33 = v24;
    uint64_t v34 = 0;
  }
  v31(v33, v34, 1, v14);
  uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
  sub_1BFF0A690((uint64_t)v27, (uint64_t)v13, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v24, v35, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v36((uint64_t)v13, 1, v14) == 1)
  {
    char v37 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v36(v35, 1, v14) == 1)
    {
      char v38 = -1;
    }
    else
    {
      char v37 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v38 = 0;
    }
  }
  else
  {
    uint64_t v39 = v47;
    sub_1BFF0A690((uint64_t)v13, v47, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v36(v35, 1, v14) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v39, v14);
      char v38 = 0;
      char v37 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      v40 = v45;
      v53(v45, (char *)v35, v14);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v38 = sub_1C151E5CC();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v15 + 8);
      v41(v40, v14);
      uint64_t v42 = v39;
      char v37 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      v41((char *)v42, v14);
    }
  }
  sub_1BFEFEBC8((uint64_t)v13, v37);
  return v38 & 1;
}

uint64_t sub_1C0A30218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  LODWORD(v48) = a5;
  uint64_t v43 = a4;
  uint64_t v45 = a3;
  uint64_t v47 = a2;
  sub_1BFE66DE0();
  uint64_t v46 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151A7DC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v42 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v42 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v42 - v25;
  uint64_t v51 = a7;
  __int16 v52 = a8;
  swift_getObjectType();
  sub_1C00764C0();
  sub_1C151AD7C();
  if ((_BYTE)v48)
  {
    if (v48 == 1)
    {
      *uint64_t v18 = v45 & 1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v18 = v45;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v18, *v27, v13);
  }
  else
  {
    uint64_t v28 = v43;
    *(void *)uint64_t v18 = v45;
    *((void *)v18 + 1) = v28;
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v18, *MEMORY[0x1E4FAC010], v13);
    swift_bridgeObjectRetain();
  }
  uint64_t v29 = v46;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v48(v26, v18, v13);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v30(v26, 0, 1, v13);
  char v49 = v50;
  if (v50 == 2)
  {
    uint64_t v31 = v23;
    uint64_t v32 = 1;
  }
  else
  {
    sub_1C0A3E984();
    sub_1C151B1DC();
    uint64_t v31 = v23;
    uint64_t v32 = 0;
  }
  v30(v31, v32, 1, v13);
  uint64_t v33 = (uint64_t)&v12[*(int *)(v29 + 48)];
  sub_1BFF0A690((uint64_t)v26, (uint64_t)v12, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v23, v33, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v34((uint64_t)v12, 1, v13) == 1)
  {
    uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v34(v33, 1, v13) == 1)
    {
      char v36 = -1;
    }
    else
    {
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v36 = 0;
    }
  }
  else
  {
    uint64_t v37 = v44;
    sub_1BFF0A690((uint64_t)v12, v44, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v34(v33, 1, v13) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
      char v36 = 0;
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      char v38 = v42;
      v48(v42, (char *)v33, v13);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v36 = sub_1C151E5CC();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v14 + 8);
      v39(v38, v13);
      uint64_t v40 = v37;
      uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      v39((char *)v40, v13);
    }
  }
  sub_1BFEFEBC8((uint64_t)v12, v35);
  return v36 & 1;
}

uint64_t sub_1C0A307B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a3;
  uint64_t v46 = a7;
  LODWORD(v48) = a5;
  uint64_t v43 = a4;
  uint64_t v47 = a2;
  sub_1BFE66DE0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151A7DC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - v14;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (double *)((char *)&v42 - v19);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v42 - v22;
  swift_getObjectType();
  type metadata accessor for FeedHeadline(0);
  sub_1C0088B70();
  sub_1C151AD7C();
  uint64_t v24 = v8;
  if ((_BYTE)v48)
  {
    if (v48 == 1)
    {
      *uint64_t v15 = v45 & 1;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v15 = v45;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    uint64_t v27 = *(void (**)(char *, void, uint64_t))(v11 + 104);
    v27(v15, *v25, v10);
  }
  else
  {
    uint64_t v26 = v43;
    *(void *)uint64_t v15 = v45;
    *((void *)v15 + 1) = v26;
    uint64_t v27 = *(void (**)(char *, void, uint64_t))(v11 + 104);
    v27(v15, *MEMORY[0x1E4FAC010], v10);
    swift_bridgeObjectRetain();
  }
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v48(v23, v15, v10);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v29 = 1;
  v28(v23, 0, 1, v10);
  if ((v52 & 1) == 0)
  {
    double v30 = v50;
    if (v51) {
      double v30 = 0.0;
    }
    *uint64_t v20 = v30;
    v27((char *)v20, *MEMORY[0x1E4FAC008], v10);
    uint64_t v29 = 0;
  }
  v28((char *)v20, v29, 1, v10);
  uint64_t v31 = *(int *)(v24 + 48);
  uint64_t v32 = v49;
  uint64_t v33 = v49 + v31;
  sub_1BFF0A690((uint64_t)v23, v49, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v20, v33, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v34(v32, 1, v10) == 1)
  {
    uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v34(v33, 1, v10) == 1)
    {
      char v36 = -1;
    }
    else
    {
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v36 = 0;
    }
  }
  else
  {
    uint64_t v37 = v32;
    uint64_t v38 = v44;
    sub_1BFF0A690(v37, v44, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v34(v33, 1, v10) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v38, v10);
      char v36 = 0;
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v39 = v42;
      v48(v42, (char *)v33, v10);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v36 = sub_1C151E5CC();
      uint64_t v40 = *(void (**)(char *, uint64_t))(v11 + 8);
      v40(v39, v10);
      uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      v40((char *)v38, v10);
    }
  }
  sub_1BFEFEBC8(v49, v35);
  return v36 & 1;
}

uint64_t sub_1C0A30D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a7;
  uint64_t v46 = a2;
  LODWORD(v47) = a5;
  uint64_t v41 = a4;
  uint64_t v43 = a3;
  sub_1BFE66DE0();
  uint64_t v44 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151A7DC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v40 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v39 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v39 - v22;
  swift_getObjectType();
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1C0088AA4();
  sub_1C151AD7C();
  if ((_BYTE)v47)
  {
    if (v47 == 1)
    {
      *uint64_t v15 = v43 & 1;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v15 = v43;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v15, *v24, v10);
  }
  else
  {
    uint64_t v25 = v41;
    *(void *)uint64_t v15 = v43;
    *((void *)v15 + 1) = v25;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v15, *MEMORY[0x1E4FAC010], v10);
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = v44;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v47(v23, v15, v10);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v27(v23, 0, 1, v10);
  char v48 = v49;
  if (v49 == 4)
  {
    uint64_t v28 = v20;
    uint64_t v29 = 1;
  }
  else
  {
    sub_1C0A40D3C();
    sub_1C151B1DC();
    uint64_t v28 = v20;
    uint64_t v29 = 0;
  }
  v27(v28, v29, 1, v10);
  uint64_t v30 = (uint64_t)&v9[*(int *)(v26 + 48)];
  sub_1BFF0A690((uint64_t)v23, (uint64_t)v9, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v20, v30, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v31((uint64_t)v9, 1, v10) == 1)
  {
    uint64_t v32 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v31(v30, 1, v10) == 1)
    {
      char v33 = -1;
    }
    else
    {
      uint64_t v32 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v33 = 0;
    }
  }
  else
  {
    uint64_t v34 = v42;
    sub_1BFF0A690((uint64_t)v9, v42, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v31(v30, 1, v10) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v34, v10);
      char v33 = 0;
      uint64_t v32 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v35 = v40;
      v47(v40, (char *)v30, v10);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v33 = sub_1C151E5CC();
      char v36 = *(void (**)(char *, uint64_t))(v11 + 8);
      v36(v35, v10);
      uint64_t v37 = v34;
      uint64_t v32 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      v36((char *)v37, v10);
    }
  }
  sub_1BFEFEBC8((uint64_t)v9, v32);
  return v33 & 1;
}

uint64_t sub_1C0A312EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v47 = a3;
  uint64_t v48 = a6;
  LODWORD(v50) = a5;
  uint64_t v45 = a4;
  uint64_t v49 = a2;
  sub_1BFE66DE0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151A7DC();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v44 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v44 - v18;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v46 = (uint64_t)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v44 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v44 - v26;
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v55 = a9;
  swift_getObjectType();
  sub_1C151AD7C();
  uint64_t v28 = v12;
  if ((_BYTE)v50)
  {
    if (v50 == 1)
    {
      *uint64_t v19 = v47 & 1;
      uint64_t v29 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v19 = v47;
      uint64_t v29 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v19, *v29, v14);
  }
  else
  {
    uint64_t v30 = v45;
    *(void *)uint64_t v19 = v47;
    *((void *)v19 + 1) = v30;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E4FAC010], v14);
    swift_bridgeObjectRetain();
  }
  double v50 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v50(v27, v19, v14);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v32 = 1;
  v31(v27, 0, 1, v14);
  if (v52 != 2)
  {
    sub_1C151EDAC();
    uint64_t v32 = 0;
  }
  v31(v24, v32, 1, v14);
  uint64_t v33 = *(int *)(v28 + 48);
  uint64_t v34 = v51;
  uint64_t v35 = v51 + v33;
  sub_1BFF0A690((uint64_t)v27, v51, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v24, v35, (uint64_t (*)(void))sub_1BFF0A6F8);
  char v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v36(v34, 1, v14) == 1)
  {
    uint64_t v37 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v36(v35, 1, v14) == 1)
    {
      char v38 = -1;
    }
    else
    {
      uint64_t v37 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v38 = 0;
    }
  }
  else
  {
    uint64_t v39 = v34;
    uint64_t v40 = v46;
    sub_1BFF0A690(v39, v46, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v36(v35, 1, v14) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v40, v14);
      char v38 = 0;
      uint64_t v37 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v41 = v44;
      v50(v44, (char *)v35, v14);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v38 = sub_1C151E5CC();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v15 + 8);
      v42(v41, v14);
      uint64_t v37 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      v42((char *)v40, v14);
    }
  }
  sub_1BFEFEBC8(v51, v37);
  return v38 & 1;
}

uint64_t sub_1C0A3186C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  LODWORD(v48) = a5;
  uint64_t v43 = a4;
  uint64_t v45 = a3;
  uint64_t v47 = a2;
  sub_1BFE66DE0();
  uint64_t v46 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151A7DC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v42 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v42 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v42 - v25;
  uint64_t v51 = a7;
  char v52 = a8;
  swift_getObjectType();
  sub_1BFE6DC1C(0, &qword_1EB87ED58, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  sub_1BFE6DCD8();
  sub_1C151AD7C();
  if ((_BYTE)v48)
  {
    if (v48 == 1)
    {
      *uint64_t v18 = v45 & 1;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v18 = v45;
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v18, *v27, v13);
  }
  else
  {
    uint64_t v28 = v43;
    *(void *)uint64_t v18 = v45;
    *((void *)v18 + 1) = v28;
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v18, *MEMORY[0x1E4FAC010], v13);
    swift_bridgeObjectRetain();
  }
  uint64_t v29 = v46;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v48(v26, v18, v13);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v30(v26, 0, 1, v13);
  char v49 = v50;
  if (v50 == 2)
  {
    uint64_t v31 = v23;
    uint64_t v32 = 1;
  }
  else
  {
    sub_1BFE6DD2C();
    sub_1C151B1DC();
    uint64_t v31 = v23;
    uint64_t v32 = 0;
  }
  v30(v31, v32, 1, v13);
  uint64_t v33 = (uint64_t)&v12[*(int *)(v29 + 48)];
  sub_1BFF0A690((uint64_t)v26, (uint64_t)v12, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v23, v33, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v34((uint64_t)v12, 1, v13) == 1)
  {
    uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v34(v33, 1, v13) == 1)
    {
      char v36 = -1;
    }
    else
    {
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v36 = 0;
    }
  }
  else
  {
    uint64_t v37 = v44;
    sub_1BFF0A690((uint64_t)v12, v44, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v34(v33, 1, v13) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
      char v36 = 0;
      uint64_t v35 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      char v38 = v42;
      v48(v42, (char *)v33, v13);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v36 = sub_1C151E5CC();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v14 + 8);
      v39(v38, v13);
      uint64_t v40 = v37;
      uint64_t v35 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v26, (uint64_t (*)(void))sub_1BFF0A6F8);
      v39((char *)v40, v13);
    }
  }
  sub_1BFEFEBC8((uint64_t)v12, v35);
  return v36 & 1;
}

uint64_t sub_1C0A31E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v43) = a5;
  uint64_t v40 = a4;
  uint64_t v42 = a3;
  sub_1BFE66DE0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v44 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151A7DC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - v12;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v41 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v38 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v38 - v20;
  swift_getObjectType();
  sub_1C151AD7C();
  uint64_t v22 = v6;
  if ((_BYTE)v43)
  {
    if (v43 == 1)
    {
      *uint64_t v13 = v42 & 1;
      uint64_t v23 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v13 = v42;
      uint64_t v23 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v13, *v23, v8);
  }
  else
  {
    uint64_t v24 = v40;
    *(void *)uint64_t v13 = v42;
    *((void *)v13 + 1) = v24;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v13, *MEMORY[0x1E4FAC010], v8);
    swift_bridgeObjectRetain();
  }
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v43(v21, v13, v8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v26 = 1;
  v25(v21, 0, 1, v8);
  if (v45 != 2)
  {
    sub_1C151EDAC();
    uint64_t v26 = 0;
  }
  v25(v18, v26, 1, v8);
  uint64_t v27 = *(int *)(v22 + 48);
  uint64_t v28 = v44;
  uint64_t v29 = v44 + v27;
  sub_1BFF0A690((uint64_t)v21, v44, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v18, v29, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30(v28, 1, v8) == 1)
  {
    uint64_t v31 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v30(v29, 1, v8) == 1)
    {
      char v32 = -1;
    }
    else
    {
      uint64_t v31 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v32 = 0;
    }
  }
  else
  {
    uint64_t v33 = v28;
    uint64_t v34 = v41;
    sub_1BFF0A690(v33, v41, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v30(v29, 1, v8) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v34, v8);
      char v32 = 0;
      uint64_t v31 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v35 = v39;
      v43(v39, (char *)v29, v8);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v32 = sub_1C151E5CC();
      char v36 = *(void (**)(char *, uint64_t))(v9 + 8);
      v36(v35, v8);
      uint64_t v31 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      v36((char *)v34, v8);
    }
  }
  sub_1BFEFEBC8(v44, v31);
  return v32 & 1;
}

uint64_t sub_1C0A323B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v41) = a5;
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  sub_1BFE66DE0();
  uint64_t v42 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v44 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151A7DC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v38 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v37 - v11;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v43 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v37 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v37 - v19;
  swift_getObjectType();
  sub_1C00881C4();
  sub_1C151AD7C();
  if ((_BYTE)v41)
  {
    if (v41 == 1)
    {
      *uint64_t v12 = v40 & 1;
      uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v12 = v40;
      uint64_t v21 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    uint64_t v23 = *(void (**)(char *, void, uint64_t))(v8 + 104);
    v23(v12, *v21, v7);
  }
  else
  {
    uint64_t v22 = v39;
    *(void *)uint64_t v12 = v40;
    *((void *)v12 + 1) = v22;
    uint64_t v23 = *(void (**)(char *, void, uint64_t))(v8 + 104);
    v23(v12, *MEMORY[0x1E4FAC010], v7);
    swift_bridgeObjectRetain();
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v41(v20, v12, v7);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v25 = 1;
  v24(v20, 0, 1, v7);
  uint64_t v26 = v46;
  if (v46)
  {
    *(void *)uint64_t v17 = v45;
    *((void *)v17 + 1) = v26;
    v23(v17, *MEMORY[0x1E4FAC010], v7);
    uint64_t v25 = 0;
  }
  v24(v17, v25, 1, v7);
  uint64_t v27 = v44;
  uint64_t v28 = v44 + *(int *)(v42 + 48);
  sub_1BFF0A690((uint64_t)v20, v44, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v17, v28, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v29(v27, 1, v7) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFEFEBC8((uint64_t)v17, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
    swift_bridgeObjectRelease();
    int v30 = v29(v28, 1, v7);
    if (v30 == 1) {
      uint64_t v31 = (uint64_t (*)(void))sub_1BFF0A6F8;
    }
    else {
      uint64_t v31 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    if (v30 == 1) {
      char v32 = -1;
    }
    else {
      char v32 = 0;
    }
  }
  else
  {
    sub_1BFF0A690(v27, v43, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v29(v28, 1, v7) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BFEFEBC8((uint64_t)v17, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v43, v7);
      char v32 = 0;
      uint64_t v31 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v33 = v38;
      v41(v38, (char *)v28, v7);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      swift_bridgeObjectRetain();
      uint64_t v34 = v43;
      char v32 = sub_1C151E5CC();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v8 + 8);
      v35(v33, v7);
      uint64_t v31 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v17, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      swift_bridgeObjectRelease();
      v35((char *)v34, v7);
    }
  }
  sub_1BFEFEBC8(v27, v31);
  return v32 & 1;
}

uint64_t sub_1C0A32978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v45) = a5;
  uint64_t v41 = a4;
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  sub_1BFE66DE0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151A7DC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - v12;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v39 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v39 - v20;
  swift_getObjectType();
  sub_1C0088FC8();
  sub_1C151AD7C();
  uint64_t v22 = v6;
  if ((_BYTE)v45)
  {
    if (v45 == 1)
    {
      *uint64_t v13 = v43 & 1;
      uint64_t v23 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v13 = v43;
      uint64_t v23 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    uint64_t v25 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v25(v13, *v23, v8);
  }
  else
  {
    uint64_t v24 = v41;
    *(void *)uint64_t v13 = v43;
    *((void *)v13 + 1) = v24;
    uint64_t v25 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v25(v13, *MEMORY[0x1E4FAC010], v8);
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v45(v21, v13, v8);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v27 = 1;
  v26(v21, 0, 1, v8);
  if ((v48 & 1) == 0)
  {
    *(void *)uint64_t v18 = v47;
    v25(v18, *MEMORY[0x1E4FABFF8], v8);
    uint64_t v27 = 0;
  }
  v26(v18, v27, 1, v8);
  uint64_t v28 = *(int *)(v22 + 48);
  uint64_t v29 = v46;
  uint64_t v30 = v46 + v28;
  sub_1BFF0A690((uint64_t)v21, v46, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v18, v30, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v31(v29, 1, v8) == 1)
  {
    char v32 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v31(v30, 1, v8) == 1)
    {
      char v33 = -1;
    }
    else
    {
      char v32 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v33 = 0;
    }
  }
  else
  {
    uint64_t v34 = v29;
    uint64_t v35 = v42;
    sub_1BFF0A690(v34, v42, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v31(v30, 1, v8) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v35, v8);
      char v33 = 0;
      char v32 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      char v36 = v40;
      v45(v40, (char *)v30, v8);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v33 = sub_1C151E5CC();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
      v37(v36, v8);
      char v32 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      v37((char *)v35, v8);
    }
  }
  sub_1BFEFEBC8(v46, v32);
  return v33 & 1;
}

uint64_t sub_1C0A32F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v43) = a5;
  uint64_t v38 = a4;
  uint64_t v40 = a3;
  uint64_t v42 = a2;
  sub_1BFE66DE0();
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151A7DC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v37 - v12;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v37 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v37 - v20;
  swift_getObjectType();
  sub_1C0087CB4();
  sub_1C151AD7C();
  if ((_BYTE)v43)
  {
    if (v43 == 1)
    {
      *uint64_t v13 = v40 & 1;
      uint64_t v22 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v13 = v40;
      uint64_t v22 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v13, *v22, v8);
  }
  else
  {
    uint64_t v23 = v38;
    *(void *)uint64_t v13 = v40;
    *((void *)v13 + 1) = v23;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v13, *MEMORY[0x1E4FAC010], v8);
    swift_bridgeObjectRetain();
  }
  uint64_t v24 = v41;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v43(v21, v13, v8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v25(v21, 0, 1, v8);
  char v44 = v45;
  if (v45 == 3)
  {
    uint64_t v26 = v18;
    uint64_t v27 = 1;
  }
  else
  {
    sub_1C0A41724();
    sub_1C151B1DC();
    uint64_t v26 = v18;
    uint64_t v27 = 0;
  }
  v25(v26, v27, 1, v8);
  uint64_t v28 = (uint64_t)&v7[*(int *)(v24 + 48)];
  sub_1BFF0A690((uint64_t)v21, (uint64_t)v7, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v18, v28, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v7, 1, v8) == 1)
  {
    uint64_t v30 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v29(v28, 1, v8) == 1)
    {
      char v31 = -1;
    }
    else
    {
      uint64_t v30 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v31 = 0;
    }
  }
  else
  {
    uint64_t v32 = v39;
    sub_1BFF0A690((uint64_t)v7, v39, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v29(v28, 1, v8) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v32, v8);
      char v31 = 0;
      uint64_t v30 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      char v33 = v37;
      v43(v37, (char *)v28, v8);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v31 = sub_1C151E5CC();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34(v33, v8);
      uint64_t v35 = v32;
      uint64_t v30 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      v34((char *)v35, v8);
    }
  }
  sub_1BFEFEBC8((uint64_t)v7, v30);
  return v31 & 1;
}

uint64_t sub_1C0A3349C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v42) = a5;
  uint64_t v38 = a4;
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  sub_1BFE66DE0();
  uint64_t v43 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151A7DC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v36 - v12;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v39 = (uint64_t)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v36 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v36 - v20;
  swift_getObjectType();
  sub_1C008ACC4();
  sub_1C151AD7C();
  if ((_BYTE)v42)
  {
    if (v42 == 1)
    {
      *uint64_t v13 = v40 & 1;
      uint64_t v22 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v13 = v40;
      uint64_t v22 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    uint64_t v24 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v24(v13, *v22, v8);
  }
  else
  {
    uint64_t v23 = v38;
    *(void *)uint64_t v13 = v40;
    *((void *)v13 + 1) = v23;
    uint64_t v24 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v24(v13, *MEMORY[0x1E4FAC010], v8);
    swift_bridgeObjectRetain();
  }
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v42(v21, v13, v8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v26 = 1;
  v25(v21, 0, 1, v8);
  if (v45 > 1u)
  {
    if (v45 != 2) {
      goto LABEL_12;
    }
    *(void *)uint64_t v18 = 0;
  }
  else
  {
    *(void *)uint64_t v18 = v44;
  }
  v24(v18, *MEMORY[0x1E4FAC008], v8);
  uint64_t v26 = 0;
LABEL_12:
  v25(v18, v26, 1, v8);
  uint64_t v27 = (uint64_t)&v7[*(int *)(v43 + 48)];
  sub_1BFF0A690((uint64_t)v21, (uint64_t)v7, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v18, v27, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v28((uint64_t)v7, 1, v8) == 1)
  {
    uint64_t v29 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v28(v27, 1, v8) == 1)
    {
      char v30 = -1;
    }
    else
    {
      uint64_t v29 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v30 = 0;
    }
  }
  else
  {
    uint64_t v31 = v39;
    sub_1BFF0A690((uint64_t)v7, v39, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v28(v27, 1, v8) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v31, v8);
      char v30 = 0;
      uint64_t v29 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v32 = v37;
      v42(v37, (char *)v27, v8);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v30 = sub_1C151E5CC();
      char v33 = *(void (**)(char *, uint64_t))(v9 + 8);
      v33(v32, v8);
      uint64_t v34 = v31;
      uint64_t v29 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v18, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      v33((char *)v34, v8);
    }
  }
  sub_1BFEFEBC8((uint64_t)v7, v29);
  return v30 & 1;
}

uint64_t sub_1C0A33A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a7;
  uint64_t v46 = a2;
  LODWORD(v47) = a5;
  uint64_t v41 = a4;
  uint64_t v43 = a3;
  sub_1BFE66DE0();
  uint64_t v44 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151A7DC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v40 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v39 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v39 - v22;
  swift_getObjectType();
  type metadata accessor for LiveActivityCommandContext();
  sub_1C0067980();
  sub_1C151AD7C();
  if ((_BYTE)v47)
  {
    if (v47 == 1)
    {
      *uint64_t v15 = v43 & 1;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v15 = v43;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v15, *v24, v10);
  }
  else
  {
    uint64_t v25 = v41;
    *(void *)uint64_t v15 = v43;
    *((void *)v15 + 1) = v25;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v15, *MEMORY[0x1E4FAC010], v10);
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = v44;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v47(v23, v15, v10);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v27(v23, 0, 1, v10);
  char v48 = v49;
  if (v49 == 3)
  {
    uint64_t v28 = v20;
    uint64_t v29 = 1;
  }
  else
  {
    sub_1C0A42300();
    sub_1C151B1DC();
    uint64_t v28 = v20;
    uint64_t v29 = 0;
  }
  v27(v28, v29, 1, v10);
  uint64_t v30 = (uint64_t)&v9[*(int *)(v26 + 48)];
  sub_1BFF0A690((uint64_t)v23, (uint64_t)v9, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v20, v30, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v31((uint64_t)v9, 1, v10) == 1)
  {
    uint64_t v32 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v31(v30, 1, v10) == 1)
    {
      char v33 = -1;
    }
    else
    {
      uint64_t v32 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v33 = 0;
    }
  }
  else
  {
    uint64_t v34 = v42;
    sub_1BFF0A690((uint64_t)v9, v42, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v31(v30, 1, v10) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v34, v10);
      char v33 = 0;
      uint64_t v32 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v35 = v40;
      v47(v40, (char *)v30, v10);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v33 = sub_1C151E5CC();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
      v36(v35, v10);
      uint64_t v37 = v34;
      uint64_t v32 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      v36((char *)v37, v10);
    }
  }
  sub_1BFEFEBC8((uint64_t)v9, v32);
  return v33 & 1;
}

uint64_t sub_1C0A33FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7)
{
  LODWORD(v46) = a5;
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  sub_1BFE66DE0();
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151A7DC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - v15;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v40 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v40 - v23;
  char v49 = a7 & 1;
  swift_getObjectType();
  sub_1C0A427F0();
  sub_1C151AD7C();
  if ((_BYTE)v46)
  {
    if (v46 == 1)
    {
      *uint64_t v16 = v44 & 1;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v16 = v44;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v16, *v25, v11);
  }
  else
  {
    uint64_t v26 = v42;
    *(void *)uint64_t v16 = v44;
    *((void *)v16 + 1) = v26;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v16, *MEMORY[0x1E4FAC010], v11);
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = v45;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v46(v24, v16, v11);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v28(v24, 0, 1, v11);
  char v47 = v48;
  if (v48 == 2)
  {
    uint64_t v29 = v21;
    uint64_t v30 = 1;
  }
  else
  {
    sub_1C0A42844();
    sub_1C151B1DC();
    uint64_t v29 = v21;
    uint64_t v30 = 0;
  }
  v28(v29, v30, 1, v11);
  uint64_t v31 = (uint64_t)&v10[*(int *)(v27 + 48)];
  sub_1BFF0A690((uint64_t)v24, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v21, v31, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v32((uint64_t)v10, 1, v11) == 1)
  {
    char v33 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      char v34 = -1;
    }
    else
    {
      char v33 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v34 = 0;
    }
  }
  else
  {
    uint64_t v35 = v43;
    sub_1BFF0A690((uint64_t)v10, v43, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v35, v11);
      char v34 = 0;
      char v33 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v36 = v41;
      v46(v41, (char *)v31, v11);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v34 = sub_1C151E5CC();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v12 + 8);
      v37(v36, v11);
      uint64_t v38 = v35;
      char v33 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      v37((char *)v38, v11);
    }
  }
  sub_1BFEFEBC8((uint64_t)v10, v33);
  return v34 & 1;
}

uint64_t sub_1C0A3456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7)
{
  LODWORD(v46) = a5;
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  sub_1BFE66DE0();
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151A7DC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - v15;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v40 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v40 - v23;
  char v49 = a7 & 1;
  swift_getObjectType();
  sub_1C019EB6C();
  sub_1C151AD7C();
  if ((_BYTE)v46)
  {
    if (v46 == 1)
    {
      *uint64_t v16 = v44 & 1;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v16 = v44;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v16, *v25, v11);
  }
  else
  {
    uint64_t v26 = v42;
    *(void *)uint64_t v16 = v44;
    *((void *)v16 + 1) = v26;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v16, *MEMORY[0x1E4FAC010], v11);
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = v45;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v46(v24, v16, v11);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v28(v24, 0, 1, v11);
  char v47 = v48;
  if (v48 == 4)
  {
    uint64_t v29 = v21;
    uint64_t v30 = 1;
  }
  else
  {
    sub_1C0A42594();
    sub_1C151B1DC();
    uint64_t v29 = v21;
    uint64_t v30 = 0;
  }
  v28(v29, v30, 1, v11);
  uint64_t v31 = (uint64_t)&v10[*(int *)(v27 + 48)];
  sub_1BFF0A690((uint64_t)v24, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v21, v31, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v32((uint64_t)v10, 1, v11) == 1)
  {
    char v33 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      char v34 = -1;
    }
    else
    {
      char v33 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v34 = 0;
    }
  }
  else
  {
    uint64_t v35 = v43;
    sub_1BFF0A690((uint64_t)v10, v43, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v35, v11);
      char v34 = 0;
      char v33 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v36 = v41;
      v46(v41, (char *)v31, v11);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v34 = sub_1C151E5CC();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v12 + 8);
      v37(v36, v11);
      uint64_t v38 = v35;
      char v33 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      v37((char *)v38, v11);
    }
  }
  sub_1BFEFEBC8((uint64_t)v10, v33);
  return v34 & 1;
}

uint64_t sub_1C0A34B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7)
{
  LODWORD(v46) = a5;
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  sub_1BFE66DE0();
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151A7DC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - v15;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v40 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v40 - v23;
  char v49 = a7 & 1;
  swift_getObjectType();
  sub_1C04561E0();
  sub_1C151AD7C();
  if ((_BYTE)v46)
  {
    if (v46 == 1)
    {
      *uint64_t v16 = v44 & 1;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v16 = v44;
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v16, *v25, v11);
  }
  else
  {
    uint64_t v26 = v42;
    *(void *)uint64_t v16 = v44;
    *((void *)v16 + 1) = v26;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v16, *MEMORY[0x1E4FAC010], v11);
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = v45;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v46(v24, v16, v11);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v28(v24, 0, 1, v11);
  char v47 = v48;
  if (v48 == 3)
  {
    uint64_t v29 = v21;
    uint64_t v30 = 1;
  }
  else
  {
    sub_1C0A42474();
    sub_1C151B1DC();
    uint64_t v29 = v21;
    uint64_t v30 = 0;
  }
  v28(v29, v30, 1, v11);
  uint64_t v31 = (uint64_t)&v10[*(int *)(v27 + 48)];
  sub_1BFF0A690((uint64_t)v24, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v21, v31, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v32((uint64_t)v10, 1, v11) == 1)
  {
    char v33 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      char v34 = -1;
    }
    else
    {
      char v33 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v34 = 0;
    }
  }
  else
  {
    uint64_t v35 = v43;
    sub_1BFF0A690((uint64_t)v10, v43, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v11) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v35, v11);
      char v34 = 0;
      char v33 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v36 = v41;
      v46(v41, (char *)v31, v11);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v34 = sub_1C151E5CC();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v12 + 8);
      v37(v36, v11);
      uint64_t v38 = v35;
      char v33 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v21, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      v37((char *)v38, v11);
    }
  }
  sub_1BFEFEBC8((uint64_t)v10, v33);
  return v34 & 1;
}

uint64_t sub_1C0A350A4@<X0>(void (*a1)(void)@<X4>, void (*a2)(uint64_t)@<X6>, uint64_t a3@<X8>)
{
  swift_getObjectType();
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  a1();
  uint64_t v6 = sub_1C151AD7C();
  if (v10 == 2)
  {
    uint64_t v7 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a3, 1, 1, v7);
  }
  else
  {
    a2(v6);
    sub_1C151B1DC();
    uint64_t v9 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 0, 1, v9);
  }
}

uint64_t sub_1C0A351FC@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1C00764C0();
  sub_1C151AD7C();
  if (v5 == 2)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C0A3E984();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A35324@<X0>(double *a1@<X8>)
{
  swift_getObjectType();
  type metadata accessor for FeedHeadline(0);
  sub_1C0088B70();
  sub_1C151AD7C();
  if (v10)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    double v4 = v8;
    if (v9) {
      double v4 = 0.0;
    }
    *a1 = v4;
    uint64_t v5 = *MEMORY[0x1E4FAC008];
    uint64_t v6 = sub_1C151A7DC();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(double *, uint64_t, uint64_t))(v7 + 104))(a1, v5, v6);
    return (*(uint64_t (**)(double *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
}

uint64_t sub_1C0A354A0@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1C0088AA4();
  sub_1C151AD7C();
  if (v5 == 4)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C0A40D3C();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A355D4@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1BFE6DC1C(0, &qword_1EB87ED58, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  sub_1BFE6DCD8();
  sub_1C151AD7C();
  if (v5 == 2)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BFE6DD2C();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A35730@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1C151AD7C();
  if (v5 == 2)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C151EDAC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A3583C@<X0>(void *a1@<X8>)
{
  swift_getObjectType();
  sub_1C00881C4();
  sub_1C151AD7C();
  if (v8)
  {
    *a1 = v7;
    a1[1] = v8;
    uint64_t v2 = *MEMORY[0x1E4FAC010];
    uint64_t v3 = sub_1C151A7DC();
    uint64_t v4 = *(void *)(v3 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
  }
  else
  {
    uint64_t v6 = sub_1C151A7DC();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

uint64_t sub_1C0A35998@<X0>(void *a1@<X8>)
{
  swift_getObjectType();
  sub_1C0088FC8();
  sub_1C151AD7C();
  if (v8)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    *a1 = v7;
    uint64_t v4 = *MEMORY[0x1E4FABFF8];
    uint64_t v5 = sub_1C151A7DC();
    uint64_t v6 = *(void *)(v5 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v6 + 104))(a1, v4, v5);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
}

uint64_t sub_1C0A35B08@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1C0087CB4();
  sub_1C151AD7C();
  if (v5 == 3)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C0A41724();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A35C2C@<X0>(void *a1@<X8>)
{
  swift_getObjectType();
  sub_1C008ACC4();
  sub_1C151AD7C();
  if (v8 <= 1u)
  {
    *a1 = v7;
LABEL_5:
    uint64_t v2 = *MEMORY[0x1E4FAC008];
    uint64_t v3 = sub_1C151A7DC();
    uint64_t v4 = *(void *)(v3 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
  }
  if (v8 == 2)
  {
    *a1 = 0;
    goto LABEL_5;
  }
  uint64_t v6 = sub_1C151A7DC();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 1, 1, v6);
}

uint64_t sub_1C0A35DB0@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  type metadata accessor for LiveActivityCommandContext();
  sub_1C0067980();
  sub_1C151AD7C();
  if (v5 == 3)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C0A42300();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A35EE4@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1C0A427F0();
  sub_1C151AD7C();
  if (v5 == 2)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C0A42844();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A36010@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1C019EB6C();
  sub_1C151AD7C();
  if (v5 == 4)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C0A42594();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A3613C@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1C04561E0();
  sub_1C151AD7C();
  if (v5 == 3)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C0A42474();
    sub_1C151B1DC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A36268()
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A36384()
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A3647C(uint64_t a1, uint64_t a2)
{
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  uint64_t v5 = 0x28646E616D6D6F43;
  unint64_t v6 = 0xE800000000000000;
  sub_1C151C99C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C0A41480(a2, (uint64_t)v4);
  sub_1C0A41508(0, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBB718]);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v5;
}

uint64_t sub_1C0A36580()
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A36690(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 0;
  char v7 = a2 & 1;
  char v25 = a2 & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFF5DF80((uint64_t)&v25, v8 + 24, &qword_1EA1A28E8, MEMORY[0x1E4FBC848] + 8);
  *(void *)(v3 + 40) = sub_1C0A3FDE8;
  *(void *)(v3 + 48) = v8;
  char v24 = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v24, v10 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 56) = sub_1C0A3FDEC;
  *(void *)(v3 + 64) = v10;
  char v23 = v7;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v23, v11 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 72) = sub_1C0A3FE04;
  *(void *)(v3 + 80) = v11;
  char v22 = v7;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v22, v12 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 88) = sub_1C0A42B20;
  *(void *)(v3 + 96) = v12;
  char v21 = v7;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v21, v13 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 104) = sub_1BFE31C54;
  *(void *)(v3 + 112) = v13;
  char v20 = v7;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v14 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 120) = sub_1C0A3F58C;
  *(void *)(v3 + 128) = v14;
  char v19 = v7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v15 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 136) = sub_1C0A42B20;
  *(void *)(v3 + 144) = v15;
  char v18 = v7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v16 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 152) = sub_1C0A42B14;
  *(void *)(v3 + 160) = v16;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A36944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  *(void *)(v4 + 16) = sub_1C151C99C();
  *(void *)(v4 + 24) = v8;
  *(unsigned char *)(v4 + 32) = 0;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  sub_1BFF5DF80((uint64_t)&v19, v9 + 24, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0]);
  *(void *)(v4 + 40) = sub_1C0A40514;
  *(void *)(v4 + 48) = v9;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v11 + 24, (unint64_t *)&qword_1EB879C00, v10);
  *(void *)(v4 + 56) = sub_1C0A40590;
  *(void *)(v4 + 64) = v11;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v12 + 24, (unint64_t *)&qword_1EB879C00, v10);
  *(void *)(v4 + 72) = sub_1C0A40610;
  *(void *)(v4 + 80) = v12;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v13 + 24, (unint64_t *)&qword_1EB879C00, v10);
  *(void *)(v4 + 88) = sub_1C0A42B20;
  *(void *)(v4 + 96) = v13;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v14 + 24, (unint64_t *)&qword_1EB879C00, v10);
  *(void *)(v4 + 104) = sub_1BFE31C54;
  *(void *)(v4 + 112) = v14;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v15 + 24, (unint64_t *)&qword_1EB879C00, v10);
  *(void *)(v4 + 120) = sub_1C0A3F58C;
  *(void *)(v4 + 128) = v15;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1BFF5DF80((uint64_t)&v19, v16 + 24, (unint64_t *)&qword_1EB879C00, v10);
  *(void *)(v4 + 136) = sub_1C0A42B20;
  *(void *)(v4 + 144) = v16;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v17 + 24, (unint64_t *)&qword_1EB879C00, v10);
  *(void *)(v4 + 152) = sub_1C0A4073C;
  *(void *)(v4 + 160) = v17;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return v4;
}

uint64_t sub_1C0A36C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(void *)(v5 + 16) = sub_1C151C99C();
  *(void *)(v5 + 24) = v10;
  *(unsigned char *)(v5 + 32) = 0;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v11 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 40) = sub_1C0A3FBFC;
  *(void *)(v5 + 48) = v11;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v12 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 56) = sub_1C0A3FC2C;
  *(void *)(v5 + 64) = v12;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v13 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 72) = sub_1C0A3FC58;
  *(void *)(v5 + 80) = v13;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v14 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 88) = sub_1C0A42B20;
  *(void *)(v5 + 96) = v14;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v15 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 104) = sub_1BFE31C54;
  *(void *)(v5 + 112) = v15;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v16 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 120) = sub_1C0A3F58C;
  *(void *)(v5 + 128) = v16;
  sub_1C0A3FCD8(a2);
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v17 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 136) = sub_1C0A3FD24;
  *(void *)(v5 + 144) = v17;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v18 + 24, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(void *)(v5 + 152) = sub_1C0A3FD88;
  *(void *)(v5 + 160) = v18;
  swift_retain();
  sub_1C0A3FCD8(a2);
  swift_retain();
  sub_1C0A3FCD8(a2);
  swift_retain();
  sub_1C0A3FCD8(a2);
  swift_retain();
  sub_1C0A3FCD8(a2);
  swift_retain();
  sub_1C0A3FCD8(a2);
  swift_retain();
  sub_1C0A3FCD8(a2);
  swift_retain();
  return v5;
}

uint64_t sub_1C0A36F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 0;
  uint64_t v16 = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v7 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 40) = sub_1C0A4035C;
  *(void *)(v3 + 48) = v7;
  uint64_t v16 = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v8 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 56) = sub_1C0A403AC;
  *(void *)(v3 + 64) = v8;
  uint64_t v16 = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v9 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 72) = sub_1C0A3F874;
  *(void *)(v3 + 80) = v9;
  uint64_t v16 = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v10 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 88) = sub_1C0A42B20;
  *(void *)(v3 + 96) = v10;
  uint64_t v16 = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v11 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 104) = sub_1BFE31C54;
  *(void *)(v3 + 112) = v11;
  uint64_t v16 = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v12 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 120) = sub_1C0A3F58C;
  *(void *)(v3 + 128) = v12;
  uint64_t v16 = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  swift_unknownObjectRetain();
  sub_1C0A402D8((uint64_t)&v16, v13 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 136) = sub_1C0A42B20;
  *(void *)(v3 + 144) = v13;
  uint64_t v16 = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v14 + 24, &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(void *)(v3 + 152) = sub_1C0A404DC;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  swift_unknownObjectRetain_n();
  return v3;
}

uint64_t sub_1C0A37280(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 0;
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v7 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 40) = sub_1C0A3F60C;
  *(void *)(v3 + 48) = v7;
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v8 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 56) = sub_1C0A3F61C;
  *(void *)(v3 + 64) = v8;
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v9 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 72) = sub_1C0A3F640;
  *(void *)(v3 + 80) = v9;
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v10 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 88) = sub_1C0A42B20;
  *(void *)(v3 + 96) = v10;
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v11 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 104) = sub_1BFE31C54;
  *(void *)(v3 + 112) = v11;
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v12 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 120) = sub_1C0A3F58C;
  *(void *)(v3 + 128) = v12;
  sub_1C0A3F6CC(a2);
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v13 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 136) = sub_1C0A42B20;
  *(void *)(v3 + 144) = v13;
  sub_1BFF5DF80(a2, (uint64_t)v16, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v14 + 24, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  *(void *)(v3 + 152) = sub_1C0A3F778;
  *(void *)(v3 + 160) = v14;
  swift_retain();
  sub_1C0A3F6CC(a2);
  swift_retain();
  sub_1C0A3F6CC(a2);
  swift_retain();
  sub_1C0A3F6CC(a2);
  swift_retain();
  sub_1C0A3F6CC(a2);
  swift_retain();
  sub_1C0A3F6CC(a2);
  swift_retain();
  sub_1C0A3F6CC(a2);
  swift_retain();
  return v3;
}

uint64_t sub_1C0A37610(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  *(void *)(v5 + 16) = sub_1C151C99C();
  *(void *)(v5 + 24) = v10;
  *(unsigned char *)(v5 + 32) = 0;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v11 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 40) = sub_1C0A3F4D8;
  *(void *)(v5 + 48) = v11;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v12 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 56) = sub_1C0A3F4E8;
  *(void *)(v5 + 64) = v12;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v13 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 72) = sub_1C0A3F50C;
  *(void *)(v5 + 80) = v13;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v14 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 88) = sub_1C0A42B20;
  *(void *)(v5 + 96) = v14;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v15 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 104) = sub_1BFE31C54;
  *(void *)(v5 + 112) = v15;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v16 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 120) = sub_1C0A3F58C;
  *(void *)(v5 + 128) = v16;
  sub_1C0A3F590(a2, a3, a4);
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v17 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 136) = sub_1C0A42B20;
  *(void *)(v5 + 144) = v17;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  char v22 = a4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v18 + 24, &qword_1EB85F178, (uint64_t)&type metadata for OpenCommandContext);
  *(void *)(v5 + 152) = sub_1C0A3F5F8;
  *(void *)(v5 + 160) = v18;
  swift_retain();
  sub_1C0A3F590(a2, a3, a4);
  swift_retain();
  sub_1C0A3F590(a2, a3, a4);
  swift_retain();
  sub_1C0A3F590(a2, a3, a4);
  swift_retain();
  sub_1C0A3F590(a2, a3, a4);
  swift_retain();
  sub_1C0A3F590(a2, a3, a4);
  swift_retain();
  sub_1C0A3F590(a2, a3, a4);
  swift_retain();
  return v5;
}

uint64_t sub_1C0A37988(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 0;
  uint64_t v16 = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v7 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 40) = sub_1C0A3FAC0;
  *(void *)(v3 + 48) = v7;
  uint64_t v16 = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v8 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 56) = sub_1C0A3FB14;
  *(void *)(v3 + 64) = v8;
  uint64_t v16 = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v9 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 72) = sub_1C0A3F874;
  *(void *)(v3 + 80) = v9;
  uint64_t v16 = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v10 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 88) = sub_1C0A42B20;
  *(void *)(v3 + 96) = v10;
  uint64_t v16 = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v11 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 104) = sub_1BFE31C54;
  *(void *)(v3 + 112) = v11;
  uint64_t v16 = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v12 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 120) = sub_1C0A3F58C;
  *(void *)(v3 + 128) = v12;
  uint64_t v16 = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  swift_retain();
  sub_1BFF5E5B4((uint64_t)&v16, v13 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 136) = sub_1C0A42B20;
  *(void *)(v3 + 144) = v13;
  uint64_t v16 = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v14 + 24, (uint64_t (*)(void))sub_1C0A3FA8C);
  *(void *)(v3 + 152) = sub_1C0A3FBF0;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A37C30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 0;
  uint64_t v16 = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v7 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 40) = sub_1C0A3F938;
  *(void *)(v3 + 48) = v7;
  uint64_t v16 = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v8 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 56) = sub_1C0A3F98C;
  *(void *)(v3 + 64) = v8;
  uint64_t v16 = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v9 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 72) = sub_1C0A3F874;
  *(void *)(v3 + 80) = v9;
  uint64_t v16 = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v10 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 88) = sub_1C0A42B20;
  *(void *)(v3 + 96) = v10;
  uint64_t v16 = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v11 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 104) = sub_1BFE31C54;
  *(void *)(v3 + 112) = v11;
  uint64_t v16 = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v12 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 120) = sub_1C0A3F58C;
  *(void *)(v3 + 128) = v12;
  uint64_t v16 = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1BFF5E5B4((uint64_t)&v16, v13 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 136) = sub_1C0A42B20;
  *(void *)(v3 + 144) = v13;
  uint64_t v16 = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v16, v14 + 24, (uint64_t (*)(void))sub_1C0A3F904);
  *(void *)(v3 + 152) = sub_1C0A3FA68;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return v3;
}

uint64_t sub_1C0A37ED8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 0;
  uint64_t v18 = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v7 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 40) = sub_1C0A3F800;
  *(void *)(v3 + 48) = v7;
  uint64_t v18 = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v8 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 56) = sub_1C0A3F83C;
  *(void *)(v3 + 64) = v8;
  uint64_t v18 = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v9 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 72) = sub_1C0A3F874;
  *(void *)(v3 + 80) = v9;
  uint64_t v18 = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v10 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 88) = sub_1C0A42B20;
  *(void *)(v3 + 96) = v10;
  uint64_t v18 = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v11 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 104) = sub_1BFE31C54;
  *(void *)(v3 + 112) = v11;
  uint64_t v18 = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v12 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 120) = sub_1C0A3F58C;
  *(void *)(v3 + 128) = v12;
  uint64_t v18 = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  id v14 = a2;
  sub_1BFF5E5B4((uint64_t)&v18, v13 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 136) = sub_1C0A42B20;
  *(void *)(v3 + 144) = v13;
  uint64_t v18 = a2;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v15 + 24, (uint64_t (*)(void))sub_1C0A3F7CC);
  *(void *)(v3 + 152) = sub_1C0A3F8E0;
  *(void *)(v3 + 160) = v15;
  swift_retain_n();
  id v16 = v14;
  return v3;
}

uint64_t sub_1C0A38194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A38218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A382A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(uint64_t, char *))
{
  uint64_t v6 = a3(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - v7;
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  uint64_t v10 = 0x28646E616D6D6F43;
  unint64_t v11 = 0xE800000000000000;
  sub_1C151C99C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  a4(a2, v8);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v10;
}

uint64_t sub_1C0A383D4()
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A384EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t), unint64_t *a6, uint64_t a7)
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A38628(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A3874C(uint64_t a1, uint64_t a2)
{
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  uint64_t v5 = 0x28646E616D6D6F43;
  unint64_t v6 = 0xE800000000000000;
  sub_1C151C99C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1BFF5DF80(a2, (uint64_t)v4, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  sub_1C0A3F6CC(a2);
  sub_1C0A41508(0, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent, MEMORY[0x1E4FBB718]);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v5;
}

uint64_t sub_1C0A3886C(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A38998()
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A38A88()
{
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A38B78(uint64_t a1, void *a2)
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151C99C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C0A3F7CC(0);
  id v3 = a2;
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0x28646E616D6D6F43;
}

uint64_t sub_1C0A38C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v20 = *a6;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  uint64_t v15 = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  unint64_t v16 = sub_1C0A3F0B4();
  unint64_t v17 = sub_1C007685C();
  swift_retain();
  a9(a5, &v20, a8, v14, v15, &type metadata for IgnoringCommandState, v16, v17, ObjectType, a2);
  return swift_release();
}

uint64_t sub_1C0A38D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6)
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A38E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6)
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A38E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  sub_1C0A3ECE8();
  sub_1C0078974();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A38FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  sub_1C0A3ECE8();
  sub_1C0078974();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A390A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  sub_1C0A3ECE8();
  sub_1C0078974();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A391A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t *, uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))
{
  __int16 v13 = *((_WORD *)a6 + 4);
  uint64_t v20 = *a6;
  __int16 v21 = v13;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  unint64_t v16 = sub_1C0987F28();
  unint64_t v17 = sub_1C00764C0();
  swift_retain();
  a9(a5, &v20, a8, v15, &type metadata for FollowingCommandContext, &type metadata for FollowingCommandState, v16, v17, ObjectType, a2);
  return swift_release();
}

uint64_t sub_1C0A3929C()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A3931C()
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A393A0@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_1C151AD7C();
  if (v5 == 2)
  {
    uint64_t v2 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1C151EDAC();
    uint64_t v4 = sub_1C151A7DC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1C0A394B0()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A39564()
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A3961C()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A3969C()
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A39728()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A397A0()
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A39824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A398AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A39938(unsigned char *a1, void (*a2)(char *))
{
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 2)
  {
    uint64_t v7 = sub_1C151A7DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_1C151EDAC();
    uint64_t v8 = sub_1C151A7DC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  }
  a2(v6);
  return sub_1BFEFEBC8((uint64_t)v6, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A39A64(void *a1, void (*a2)(void *))
{
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = a1[1];
  if (v7)
  {
    *uint64_t v6 = *a1;
    v6[1] = v7;
    uint64_t v8 = *MEMORY[0x1E4FAC010];
    uint64_t v9 = sub_1C151A7DC();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v10 + 104))(v6, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = sub_1C151A7DC();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  }
  swift_bridgeObjectRetain();
  a2(v6);
  return sub_1BFEFEBC8((uint64_t)v6, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A39BF4(uint64_t a1, void (*a2)(void *))
{
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v7 = sub_1C151A7DC();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  }
  else
  {
    *uint64_t v6 = *(void *)a1;
    uint64_t v8 = *MEMORY[0x1E4FABFF8];
    uint64_t v9 = sub_1C151A7DC();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v10 + 104))(v6, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  a2(v6);
  return sub_1BFEFEBC8((uint64_t)v6, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A39D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A428D0();
  sub_1C0A427F0();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A39E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A428D0();
  sub_1C0A427F0();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A39F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0A428D0();
  sub_1C0A427F0();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A3A064(char *a1, void (*a2)(char *), uint64_t a3, void (*a4)(__n128))
{
  sub_1BFF0A6F8(0);
  __n128 v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *a1;
  if (v15 == 2)
  {
    uint64_t v11 = sub_1C151A7DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  else
  {
    a4(v8);
    sub_1C151B1DC();
    uint64_t v12 = sub_1C151A7DC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  a2(v10);
  return sub_1BFEFEBC8((uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A3A1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C019E7D8();
  sub_1C019EB6C();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A3A2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C019E7D8();
  sub_1C019EB6C();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A3A3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C019E7D8();
  sub_1C019EB6C();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A3A498(char *a1, void (*a2)(char *), uint64_t a3, void (*a4)(__n128))
{
  sub_1BFF0A6F8(0);
  __n128 v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *a1;
  if (v15 == 4)
  {
    uint64_t v11 = sub_1C151A7DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  else
  {
    a4(v8);
    sub_1C151B1DC();
    uint64_t v12 = sub_1C151A7DC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  a2(v10);
  return sub_1BFEFEBC8((uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A3A5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0455F18();
  sub_1C04561E0();
  swift_retain();
  sub_1C151AD6C();
  return swift_release();
}

uint64_t sub_1C0A3A6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0455F18();
  sub_1C04561E0();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A3A7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  sub_1C0455F18();
  sub_1C04561E0();
  swift_retain();
  sub_1C151AD5C();
  return swift_release();
}

uint64_t sub_1C0A3A8CC(char *a1, void (*a2)(char *), uint64_t a3, void (*a4)(__n128))
{
  sub_1BFF0A6F8(0);
  __n128 v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *a1;
  if (v15 == 3)
  {
    uint64_t v11 = sub_1C151A7DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  else
  {
    a4(v8);
    sub_1C151B1DC();
    uint64_t v12 = sub_1C151A7DC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  a2(v10);
  return sub_1BFEFEBC8((uint64_t)v10, (uint64_t (*)(void))sub_1BFF0A6F8);
}

uint64_t sub_1C0A3AA24@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1C15155AC();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C15155DC();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

double sub_1C0A3AAD0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v7[2] = a2;
  v7[3] = a1;
  uint64_t v4 = sub_1C0182048((void (*)(char *))sub_1C0A3E650, (uint64_t)v7, (uint64_t)&unk_1F1B67B60);
  sub_1C09BCFA4(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v4, v8);
  swift_bridgeObjectRelease();
  double result = *(double *)v8;
  long long v6 = v8[1];
  *(_OWORD *)a3 = v8[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(void *)(a3 + 32) = v9;
  return result;
}

uint64_t _s8NewsFeed20FormatTagMoreActionsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v5 & 0xF000000000000007) == 0) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *a1;
  if ((~v5 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    sub_1BFDC11A4(v5);
    sub_1BFDC11BC(v2);
    sub_1BFDC11BC(v5);
    return 0;
  }
  uint64_t v8 = v5;
  swift_retain_n();
  char v6 = static FormatTextContent.== infix(_:_:)(&v9, (unint64_t *)&v8);
  swift_release();
  sub_1BFDC11BC(v2);
  if ((v6 & 1) == 0) {
    return 0;
  }
LABEL_8:
  return sub_1C00F4EB0(v3, v4);
}

uint64_t _s8NewsFeed16FormatTagBindingV7CommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 == 1)
      {
        v15[0] = *(void *)a1;
        v15[1] = v3;
        v14[0] = v5;
        v14[1] = v6;
        sub_1C00AB56C(v5, v6, 1);
        sub_1C00AB56C(v2, v3, 1);
        sub_1C00AB56C(v5, v6, 1);
        sub_1C00AB56C(v2, v3, 1);
        char v8 = _s8NewsFeed20FormatTagMoreActionsV2eeoiySbAC_ACtFZ_0(v15, v14);
        sub_1C002B840(v2, v3, 1);
        sub_1C002B840(v5, v6, 1);
        sub_1C002B840(v5, v6, 1);
        sub_1C002B840(v2, v3, 1);
        return v8 & 1;
      }
      sub_1BFDC11A4(*(void *)a1);
      goto LABEL_19;
    case 2:
      if (v7 == 2)
      {
        char v9 = sub_1BFD81AE8(v2, *(void *)a2);
        sub_1C00AB56C(v5, v6, 2);
        sub_1C00AB56C(v2, v3, 2);
        sub_1C002B840(v2, v3, 2);
        sub_1C002B840(v5, v6, 2);
        return v9 & 1;
      }
LABEL_19:
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 3:
      if (v2 | v3)
      {
        if (v7 == 3 && v5 == 1 && v6 == 0)
        {
          sub_1C002B840(*(void *)a1, v3, 3);
          char v8 = 1;
          sub_1C002B840(1, 0, 3);
          return v8 & 1;
        }
        goto LABEL_20;
      }
      if (v7 != 3 || (v6 | v5) != 0)
      {
LABEL_20:
        sub_1C00AB56C(v5, v6, v7);
        sub_1C002B840(v2, v3, v4);
        sub_1C002B840(v5, v6, v7);
        char v8 = 0;
        return v8 & 1;
      }
      sub_1C002B840(*(void *)a1, v3, 3);
      sub_1C002B840(0, 0, 3);
      char v8 = 1;
      return v8 & 1;
    default:
      if (*(unsigned char *)(a2 + 16)) {
        goto LABEL_20;
      }
      sub_1C002B840(*(void *)a1, v3, 0);
      sub_1C002B840(v5, v6, 0);
      char v8 = ((v5 ^ v2) & 1) == 0;
      return v8 & 1;
  }
}

unint64_t sub_1C0A3AED0()
{
  unint64_t result = qword_1EA1A2808;
  if (!qword_1EA1A2808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2808);
  }
  return result;
}

unint64_t sub_1C0A3AF24()
{
  unint64_t result = qword_1EB85F068;
  if (!qword_1EB85F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F068);
  }
  return result;
}

void sub_1C0A3AF78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A3AED0();
    unint64_t v7 = a3(a1, &type metadata for FormatTagMoreActions.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0A3AFDC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0A41508(255, &qword_1EB85F0B8, (uint64_t)&type metadata for FormatTagMoreActions.Action, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0A3B06C()
{
  unint64_t result = qword_1EB85EBC0;
  if (!qword_1EB85EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EBC0);
  }
  return result;
}

unint64_t sub_1C0A3B0C0(uint64_t a1)
{
  unint64_t result = sub_1C08B8728();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0A3B0E8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3B434(a1, a2, a3, (uint64_t (*)(void))sub_1BFD37594, (uint64_t (*)(void))sub_1BFD7C504, (uint64_t (*)(void))sub_1C0A3B128);
}

unint64_t sub_1C0A3B128()
{
  unint64_t result = qword_1EA1A2820;
  if (!qword_1EA1A2820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2820);
  }
  return result;
}

unint64_t sub_1C0A3B17C(uint64_t a1)
{
  unint64_t result = sub_1C0A3B1A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A3B1A4()
{
  unint64_t result = qword_1EA1A2828;
  if (!qword_1EA1A2828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2828);
  }
  return result;
}

uint64_t sub_1C0A3B1F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3B434(a1, a2, a3, (uint64_t (*)(void))sub_1BFD4250C, (uint64_t (*)(void))sub_1BFD81BA0, (uint64_t (*)(void))sub_1C0A3B238);
}

unint64_t sub_1C0A3B238()
{
  unint64_t result = qword_1EA1A2830;
  if (!qword_1EA1A2830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2830);
  }
  return result;
}

unint64_t sub_1C0A3B290()
{
  unint64_t result = qword_1EA1A2838;
  if (!qword_1EA1A2838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2838);
  }
  return result;
}

uint64_t sub_1C0A3B2E4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3B434(a1, a2, a3, (uint64_t (*)(void))sub_1C08BE054, (uint64_t (*)(void))sub_1C08ED00C, (uint64_t (*)(void))sub_1C0A3B324);
}

unint64_t sub_1C0A3B324()
{
  unint64_t result = qword_1EA1A2840;
  if (!qword_1EA1A2840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2840);
  }
  return result;
}

unint64_t sub_1C0A3B378(uint64_t a1)
{
  unint64_t result = sub_1C0A3B3A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A3B3A0()
{
  unint64_t result = qword_1EA1A2848;
  if (!qword_1EA1A2848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2848);
  }
  return result;
}

uint64_t sub_1C0A3B3F4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3B434(a1, a2, a3, (uint64_t (*)(void))sub_1C08BE0A8, (uint64_t (*)(void))sub_1C08ECFB8, (uint64_t (*)(void))sub_1C0A3B488);
}

uint64_t sub_1C0A3B434(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A3B488()
{
  unint64_t result = qword_1EA1A2850;
  if (!qword_1EA1A2850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2850);
  }
  return result;
}

uint64_t sub_1C0A3B4DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0A3B4E8(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unsigned char *sub_1C0A3B52C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned char *sub_1C0A3B538(unsigned char *result, unsigned char *a2)
{
  *a2 = *result;
  return result;
}

uint64_t _s7CommandOwxx(uint64_t a1)
{
  return sub_1C002B840(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s7CommandOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C00AB56C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s7CommandOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C00AB56C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C002B840(v6, v7, v8);
  return a1;
}

uint64_t _s7CommandOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C002B840(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Command()
{
  return &type metadata for FormatTagBinding.Command;
}

ValueMetadata *type metadata accessor for FormatTagNavigate()
{
  return &type metadata for FormatTagNavigate;
}

uint64_t destroy for FormatTagMoreActions(void *a1)
{
  if ((~*a1 & 0xF000000000000007) != 0) {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed20FormatTagMoreActionsVwCP_0(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatTagMoreActions(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v5 != 0xF000000000000007)
    {
      *a1 = v4;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_1C0A3B7B4((uint64_t)a1);
    uint64_t v4 = *a2;
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
LABEL_6:
    *a1 = v4;
    goto LABEL_8;
  }
  *a1 = v4;
  swift_retain();
LABEL_8:
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0A3B7B4(uint64_t a1)
{
  return a1;
}

void *assignWithTake for FormatTagMoreActions(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v4 & 0xF000000000000007) != 0)
    {
      *a1 = v4;
      swift_release();
      goto LABEL_6;
    }
    sub_1C0A3B7B4((uint64_t)a1);
  }
  *a1 = v4;
LABEL_6:
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTagMoreActions()
{
  return &type metadata for FormatTagMoreActions;
}

ValueMetadata *type metadata accessor for FormatTagMoreActions.Action()
{
  return &type metadata for FormatTagMoreActions.Action;
}

ValueMetadata *type metadata accessor for FormatTagFollowContext()
{
  return &type metadata for FormatTagFollowContext;
}

unsigned char *_s8NewsFeed22FormatTagFollowContextVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A3B980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTagMoreActions.CodingKeys()
{
  return &type metadata for FormatTagMoreActions.CodingKeys;
}

ValueMetadata *_s7CommandO10CodingTypeOMa_0()
{
  return &_s7CommandO10CodingTypeON_0;
}

uint64_t sub_1C0A3B9F0()
{
  return sub_1C0A3BA34(&qword_1EA1A2858, &qword_1EA1A2860, (uint64_t)&_s7CommandO10CodingTypeON_0);
}

uint64_t sub_1C0A3BA34(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0A41508(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0A3BA90()
{
  unint64_t result = qword_1EA1A2868;
  if (!qword_1EA1A2868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2868);
  }
  return result;
}

unint64_t sub_1C0A3BAE8()
{
  unint64_t result = qword_1EA1A2870;
  if (!qword_1EA1A2870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2870);
  }
  return result;
}

unint64_t sub_1C0A3BB40()
{
  unint64_t result = qword_1EA1A2878;
  if (!qword_1EA1A2878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2878);
  }
  return result;
}

unint64_t sub_1C0A3BB98()
{
  unint64_t result = qword_1EA1A2880;
  if (!qword_1EA1A2880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2880);
  }
  return result;
}

uint64_t sub_1C0A3BBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  uint64_t v16 = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v7 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 40) = sub_1C0A3EA78;
  *(void *)(v3 + 48) = v7;
  uint64_t v16 = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v8 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 56) = sub_1C0A3EAC8;
  *(void *)(v3 + 64) = v8;
  uint64_t v16 = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v9 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 72) = sub_1C0A3EB14;
  *(void *)(v3 + 80) = v9;
  uint64_t v16 = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v10 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 88) = sub_1C0A3EB3C;
  *(void *)(v3 + 96) = v10;
  uint64_t v16 = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v11 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 136) = sub_1C0A3EB64;
  *(void *)(v3 + 144) = v11;
  uint64_t v16 = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v12 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 104) = sub_1C0A3EB8C;
  *(void *)(v3 + 112) = v12;
  uint64_t v16 = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v13 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 120) = sub_1C0A3EBC0;
  *(void *)(v3 + 128) = v13;
  uint64_t v16 = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v14 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 152) = sub_1C0A3EC28;
  *(void *)(v3 + 160) = v14;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3BEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  uint64_t v16 = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v7 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 40) = sub_1C0A42B1C;
  *(void *)(v3 + 48) = v7;
  uint64_t v16 = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v8 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 56) = sub_1C0A429C4;
  *(void *)(v3 + 64) = v8;
  uint64_t v16 = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v9 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 72) = sub_1C0A3EDDC;
  *(void *)(v3 + 80) = v9;
  uint64_t v16 = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v10 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 88) = sub_1C0A3EE50;
  *(void *)(v3 + 96) = v10;
  uint64_t v16 = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v11 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 136) = sub_1C0A3EEC4;
  *(void *)(v3 + 144) = v11;
  uint64_t v16 = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v12 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 104) = sub_1C0A3EF38;
  *(void *)(v3 + 112) = v12;
  uint64_t v16 = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v13 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 120) = sub_1C0A3EF88;
  *(void *)(v3 + 128) = v13;
  uint64_t v16 = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1C0A402D8((uint64_t)&v16, v14 + 24, (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
  *(void *)(v3 + 152) = sub_1C0A42B2C;
  *(void *)(v3 + 160) = v14;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3C1CC(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v4 = v3;
  swift_retain();
  *(void *)(v4 + 16) = sub_1C151C99C();
  *(void *)(v4 + 24) = v8;
  *(unsigned char *)(v4 + 32) = 1;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v9 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 40) = sub_1C0A3E68C;
  *(void *)(v4 + 48) = v9;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v10 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 56) = sub_1C0A3E724;
  *(void *)(v4 + 64) = v10;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v11 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 72) = sub_1C0A3E7C0;
  *(void *)(v4 + 80) = v11;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v12 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 88) = sub_1C0A3E834;
  *(void *)(v4 + 96) = v12;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v13 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 136) = sub_1C0A3E8A8;
  *(void *)(v4 + 144) = v13;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v14 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 104) = sub_1C0A3E91C;
  *(void *)(v4 + 112) = v14;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v15 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 120) = sub_1C0A3E950;
  *(void *)(v4 + 128) = v15;
  uint64_t v18 = a2;
  __int16 v19 = a3;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v16 + 24, &qword_1EB8617B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(void *)(v4 + 152) = sub_1C0A3E978;
  *(void *)(v4 + 160) = v16;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v4;
}

uint64_t sub_1C0A3C4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1BFFFCF8C(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v10;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0485F0C(a2, (uint64_t)v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v12 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 40) = sub_1C0A40E6C;
  *(void *)(v3 + 48) = v12;
  sub_1C0485F0C(a2, (uint64_t)v9);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v13 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 56) = sub_1C0A40E9C;
  *(void *)(v3 + 64) = v13;
  sub_1C0485F0C(a2, (uint64_t)v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v14 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 72) = sub_1C0A40EE0;
  *(void *)(v3 + 80) = v14;
  sub_1C0485F0C(a2, (uint64_t)v9);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v15 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 88) = sub_1C0A40F10;
  *(void *)(v3 + 96) = v15;
  sub_1C0485F0C(a2, (uint64_t)v9);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v16 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 136) = sub_1C0A40F40;
  *(void *)(v3 + 144) = v16;
  sub_1C0485F0C(a2, (uint64_t)v9);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v17 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 104) = sub_1C0A40F70;
  *(void *)(v3 + 112) = v17;
  sub_1C0485F0C(a2, (uint64_t)v9);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v18 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 120) = sub_1C0A41048;
  *(void *)(v3 + 128) = v18;
  sub_1BFF5E5B4(a2, (uint64_t)v9, (uint64_t (*)(void))sub_1BFFFCF8C);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v19 + v11, (uint64_t (*)(void))sub_1BFFFCF8C);
  *(void *)(v3 + 152) = sub_1C0A41334;
  *(void *)(v3 + 160) = v19;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3C828(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C0A40748(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v10;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0A4077C(a2, (uint64_t)v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v12 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 40) = sub_1C0A40798;
  *(void *)(v3 + 48) = v12;
  sub_1C0A4077C(a2, (uint64_t)v9);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v13 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 56) = sub_1C0A40A8C;
  *(void *)(v3 + 64) = v13;
  sub_1C0A4077C(a2, (uint64_t)v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v14 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 72) = sub_1C0A40AD0;
  *(void *)(v3 + 80) = v14;
  sub_1C0A4077C(a2, (uint64_t)v9);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v15 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 88) = sub_1C0A40B00;
  *(void *)(v3 + 96) = v15;
  sub_1C0A4077C(a2, (uint64_t)v9);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v16 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 136) = sub_1C0A40BEC;
  *(void *)(v3 + 144) = v16;
  sub_1C0A4077C(a2, (uint64_t)v9);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v17 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 104) = sub_1C0A40C1C;
  *(void *)(v3 + 112) = v17;
  sub_1C0A4077C(a2, (uint64_t)v9);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v18 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 120) = sub_1C0A40C4C;
  *(void *)(v3 + 128) = v18;
  sub_1BFF5E5B4(a2, (uint64_t)v9, (uint64_t (*)(void))sub_1C0A40748);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v19 + v11, (uint64_t (*)(void))sub_1C0A40748);
  *(void *)(v3 + 152) = sub_1C0A40C7C;
  *(void *)(v3 + 160) = v19;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3CB98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 40) = sub_1C0A41558;
  *(void *)(v3 + 48) = v7;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 56) = sub_1C0A41560;
  *(void *)(v3 + 64) = v8;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 72) = sub_1C0A4157C;
  *(void *)(v3 + 80) = v9;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 88) = sub_1C0A4158C;
  *(void *)(v3 + 96) = v10;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 136) = sub_1C0A4159C;
  *(void *)(v3 + 144) = v11;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 104) = sub_1C0A415AC;
  *(void *)(v3 + 112) = v12;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 120) = sub_1C0A415C8;
  *(void *)(v3 + 128) = v13;
  sub_1BFF5DF80(a2, (uint64_t)v16, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 152) = sub_1C0A42B28;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3CE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 40) = sub_1C0A41558;
  *(void *)(v3 + 48) = v7;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 56) = sub_1C0A41560;
  *(void *)(v3 + 64) = v8;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 72) = sub_1C0A416C8;
  *(void *)(v3 + 80) = v9;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 88) = sub_1C0A416D8;
  *(void *)(v3 + 96) = v10;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 136) = sub_1C0A416E8;
  *(void *)(v3 + 144) = v11;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 104) = sub_1C0A416F8;
  *(void *)(v3 + 112) = v12;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 120) = sub_1C0A41714;
  *(void *)(v3 + 128) = v13;
  sub_1BFF5DF80(a2, (uint64_t)v16, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 152) = sub_1C0A42B28;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3D1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 40) = sub_1C0A41558;
  *(void *)(v3 + 48) = v7;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 56) = sub_1C0A41560;
  *(void *)(v3 + 64) = v8;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 72) = sub_1C0A4185C;
  *(void *)(v3 + 80) = v9;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 88) = sub_1C0A4186C;
  *(void *)(v3 + 96) = v10;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 136) = sub_1C0A4187C;
  *(void *)(v3 + 144) = v11;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 104) = sub_1C0A4188C;
  *(void *)(v3 + 112) = v12;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 120) = sub_1C0A418A8;
  *(void *)(v3 + 128) = v13;
  sub_1BFF5DF80(a2, (uint64_t)v16, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 152) = sub_1C0A42B28;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3D4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 40) = sub_1C0A41558;
  *(void *)(v3 + 48) = v7;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 56) = sub_1C0A41560;
  *(void *)(v3 + 64) = v8;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 72) = sub_1C0A4199C;
  *(void *)(v3 + 80) = v9;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 88) = sub_1C0A419AC;
  *(void *)(v3 + 96) = v10;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 136) = sub_1C0A419BC;
  *(void *)(v3 + 144) = v11;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 104) = sub_1C0A419CC;
  *(void *)(v3 + 112) = v12;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 120) = sub_1C0A419E8;
  *(void *)(v3 + 128) = v13;
  sub_1BFF5DF80(a2, (uint64_t)v16, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 152) = sub_1C0A419F8;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3D7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 40) = sub_1C0A41558;
  *(void *)(v3 + 48) = v7;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 56) = sub_1C0A41560;
  *(void *)(v3 + 64) = v8;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 72) = sub_1C0A41BCC;
  *(void *)(v3 + 80) = v9;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 88) = sub_1C0A41C28;
  *(void *)(v3 + 96) = v10;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 136) = sub_1C0A41C84;
  *(void *)(v3 + 144) = v11;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 104) = sub_1C0A41CE0;
  *(void *)(v3 + 112) = v12;
  sub_1C0A41480(a2, (uint64_t)v16);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 120) = sub_1C0A41D1C;
  *(void *)(v3 + 128) = v13;
  sub_1BFF5DF80(a2, (uint64_t)v16, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  *(void *)(v3 + 152) = sub_1C0A42B28;
  *(void *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3DAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C0A41DD0(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v10;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1C0A41E04(a2, (uint64_t)v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v12 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 40) = sub_1C0A41E20;
  *(void *)(v3 + 48) = v12;
  sub_1C0A41E04(a2, (uint64_t)v9);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v13 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 56) = sub_1C0A4204C;
  *(void *)(v3 + 64) = v13;
  sub_1C0A41E04(a2, (uint64_t)v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v14 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 72) = sub_1C0A4212C;
  *(void *)(v3 + 80) = v14;
  sub_1C0A41E04(a2, (uint64_t)v9);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v15 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 88) = sub_1C0A4215C;
  *(void *)(v3 + 96) = v15;
  sub_1C0A41E04(a2, (uint64_t)v9);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v16 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 136) = sub_1C0A4218C;
  *(void *)(v3 + 144) = v16;
  sub_1C0A41E04(a2, (uint64_t)v9);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v17 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 104) = sub_1C0A421BC;
  *(void *)(v3 + 112) = v17;
  sub_1C0A41E04(a2, (uint64_t)v9);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v18 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 120) = sub_1C0A421EC;
  *(void *)(v3 + 128) = v18;
  sub_1BFF5E5B4(a2, (uint64_t)v9, (uint64_t (*)(void))sub_1C0A41DD0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)v9, v19 + v11, (uint64_t (*)(void))sub_1C0A41DD0);
  *(void *)(v3 + 152) = sub_1C0A422C0;
  *(void *)(v3 + 160) = v19;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3DE1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  char v7 = a2 & 1;
  char v25 = a2 & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFF5DF80((uint64_t)&v25, v8 + 24, &qword_1EA1A28E8, MEMORY[0x1E4FBC848] + 8);
  *(void *)(v3 + 40) = sub_1C0A3FDE8;
  *(void *)(v3 + 48) = v8;
  char v24 = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v24, v10 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 56) = sub_1C0A3FDEC;
  *(void *)(v3 + 64) = v10;
  char v23 = v7;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v23, v11 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 72) = sub_1C0A4242C;
  *(void *)(v3 + 80) = v11;
  char v22 = v7;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v22, v12 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 88) = sub_1C0A42438;
  *(void *)(v3 + 96) = v12;
  char v21 = v7;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v21, v13 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 136) = sub_1C0A42444;
  *(void *)(v3 + 144) = v13;
  char v20 = v7;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v14 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 104) = sub_1C0A42450;
  *(void *)(v3 + 112) = v14;
  char v19 = v7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v15 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 120) = sub_1C0A42468;
  *(void *)(v3 + 128) = v15;
  char v18 = v7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v16 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 152) = sub_1C0A42B14;
  *(void *)(v3 + 160) = v16;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3E0D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  char v7 = a2 & 1;
  char v25 = a2 & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFF5DF80((uint64_t)&v25, v8 + 24, &qword_1EA1A28E8, MEMORY[0x1E4FBC848] + 8);
  *(void *)(v3 + 40) = sub_1C0A3FDE8;
  *(void *)(v3 + 48) = v8;
  char v24 = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v24, v10 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 56) = sub_1C0A3FDEC;
  *(void *)(v3 + 64) = v10;
  char v23 = v7;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v23, v11 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 72) = sub_1C0A4254C;
  *(void *)(v3 + 80) = v11;
  char v22 = v7;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v22, v12 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 88) = sub_1C0A42558;
  *(void *)(v3 + 96) = v12;
  char v21 = v7;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v21, v13 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 136) = sub_1C0A42564;
  *(void *)(v3 + 144) = v13;
  char v20 = v7;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v14 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 104) = sub_1C0A42570;
  *(void *)(v3 + 112) = v14;
  char v19 = v7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v15 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 120) = sub_1C0A42588;
  *(void *)(v3 + 128) = v15;
  char v18 = v7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v16 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 152) = sub_1C0A42B14;
  *(void *)(v3 + 160) = v16;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3E394(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  swift_retain();
  *(void *)(v3 + 16) = sub_1C151C99C();
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(v3 + 32) = 1;
  char v7 = a2 & 1;
  char v25 = a2 & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFF5DF80((uint64_t)&v25, v8 + 24, &qword_1EA1A28E8, MEMORY[0x1E4FBC848] + 8);
  *(void *)(v3 + 40) = sub_1C0A3FDE8;
  *(void *)(v3 + 48) = v8;
  char v24 = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v24, v10 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 56) = sub_1C0A3FDEC;
  *(void *)(v3 + 64) = v10;
  char v23 = v7;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v23, v11 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 72) = sub_1C0A42768;
  *(void *)(v3 + 80) = v11;
  char v22 = v7;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v22, v12 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 88) = sub_1C0A42774;
  *(void *)(v3 + 96) = v12;
  char v21 = v7;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v21, v13 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 136) = sub_1C0A42780;
  *(void *)(v3 + 144) = v13;
  char v20 = v7;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v14 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 104) = sub_1C0A4278C;
  *(void *)(v3 + 112) = v14;
  char v19 = v7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v19, v15 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 120) = sub_1C0A427C4;
  *(void *)(v3 + 128) = v15;
  char v18 = v7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v18, v16 + 24, &qword_1EA1A28E8, v9);
  *(void *)(v3 + 152) = sub_1C0A427D0;
  *(void *)(v3 + 160) = v16;
  swift_retain_n();
  return v3;
}

uint64_t sub_1C0A3E650@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0A2AEE0(a1, *(void **)(v2 + 16), *(_OWORD **)(v2 + 24), a2);
}

uint64_t sub_1C0A3E670()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E68C()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A3E708()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E724()
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A3E7A4()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A391A8(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE2C30, (uint64_t)sub_1C0A3EA10, MEMORY[0x1E4FAC318]);
}

uint64_t sub_1C0A3E818()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A391A8(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE2C08, (uint64_t)sub_1C035B780, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A3E88C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A391A8(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE2BE0, (uint64_t)sub_1C0A3E9D8, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A3E900()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A30218(a1, a2, *(void *)a3, *(void *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(void *)(v3 + 16), *(void *)(v3 + 24), *(_WORD *)(v3 + 32));
}

uint64_t sub_1C0A3E934()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E950@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A351FC(a1);
}

uint64_t sub_1C0A3E95C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3E978()
{
  return sub_1C0A36268();
}

unint64_t sub_1C0A3E984()
{
  unint64_t result = qword_1EB866CA8;
  if (!qword_1EB866CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866CA8);
  }
  return result;
}

uint64_t sub_1C0A3E9D8(char *a1)
{
  return sub_1C0A3A064(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A3E984);
}

uint64_t sub_1C0A3EA10(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A3EA28);
}

uint64_t sub_1C0A3EA28(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A3E984, (uint64_t)&type metadata for FollowingCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1BFE6D52C);
}

uint64_t sub_1C0A3EA5C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A38D68(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1EB87A160) & 1;
}

uint64_t sub_1C0A3EAAC()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A38E00(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1EB87A160);
}

uint64_t sub_1C0A3EAF8()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A38E9C(a1, a2, a3, a4);
}

uint64_t sub_1C0A3EB20()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A38FA0(a1, a2, a3, a4);
}

uint64_t sub_1C0A3EB48()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A390A4(a1, a2, a3, a4);
}

uint64_t sub_1C0A3EB70()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3EF50(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1C0A2FC0C);
}

uint64_t sub_1C0A3EBA4()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EBC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A350A4((void (*)(void))sub_1C0078974, (void (*)(uint64_t))sub_1C0A3EC5C, a1);
}

uint64_t sub_1C0A3EC0C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EC28()
{
  return sub_1C0A38628(*(void *)(v0 + 16), *(void *)(v0 + 24), (unint64_t *)&unk_1EB87A170, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
}

unint64_t sub_1C0A3EC5C()
{
  unint64_t result = qword_1EA1A2888;
  if (!qword_1EA1A2888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2888);
  }
  return result;
}

uint64_t sub_1C0A3ECB0(char *a1)
{
  return sub_1C0A3A064(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A3EC5C);
}

unint64_t sub_1C0A3ECE8()
{
  unint64_t result = qword_1EA1A2890;
  if (!qword_1EA1A2890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2890);
  }
  return result;
}

uint64_t sub_1C0A3ED3C(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A3ED54);
}

uint64_t sub_1C0A3ED54(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A3EC5C, (uint64_t)&type metadata for BlockingCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1BFE6D52C);
}

uint64_t sub_1C0A3ED88()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EDA4()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EDC0()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A38C64(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE2FA0, (uint64_t)sub_1C0A3F108, MEMORY[0x1E4FAC318]);
}

uint64_t sub_1C0A3EE34()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A38C64(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE2F78, (uint64_t)sub_1C035B780, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A3EEA8()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A38C64(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE2F50, (uint64_t)sub_1C0A3F07C, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A3EF1C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3EF50(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1C0A2FBB8);
}

uint64_t sub_1C0A3EF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a4(a1, a2, *(void *)a3, *(void *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C0A3EF6C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3EF88@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A350A4((void (*)(void))sub_1C007685C, (void (*)(uint64_t))sub_1C0A3EFF0, a1);
}

uint64_t sub_1C0A3EFD4()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

unint64_t sub_1C0A3EFF0()
{
  unint64_t result = qword_1EA1A28A0;
  if (!qword_1EA1A28A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A28A0);
  }
  return result;
}

uint64_t sub_1C0A3F044()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A3F07C(char *a1)
{
  return sub_1C0A3A064(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A3EFF0);
}

unint64_t sub_1C0A3F0B4()
{
  unint64_t result = qword_1EA1A28A8;
  if (!qword_1EA1A28A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A28A8);
  }
  return result;
}

uint64_t sub_1C0A3F108(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A3F120);
}

uint64_t sub_1C0A3F120(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A3EFF0, (uint64_t)&type metadata for IgnoringCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1BFE6D52C);
}

uint64_t sub_1C0A3F158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41E4C(a1, a2, a3, (uint64_t (*)(void))sub_1BFF00BEC, MEMORY[0x1E4F276F0]);
}

uint64_t objectdestroy_132Tm_0()
{
  sub_1BFF00BEC();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A3F2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4208C(a1, a2, a3, (uint64_t (*)(void))sub_1BFF00BEC, MEMORY[0x1E4F276F0]);
}

double sub_1C0A3F2F0@<D0>(void (*a1)(uint64_t (*)(), void *)@<X2>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  uint64_t v6 = v2
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  _OWORD v8[2] = *(void *)(v2 + 16);
  v8[3] = v6;
  a1(sub_1BFE31C54, v8);
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1C0A3F3A4()
{
  return 1;
}

uint64_t sub_1C0A3F3C8@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF00BEC();
  uint64_t v2 = sub_1C151A7DC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

double sub_1C0A3F440@<D0>(uint64_t a1@<X8>)
{
  sub_1BFF00BEC();
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_1C0A3F478()
{
  return sub_1C0A40CBC((uint64_t (*)(void))sub_1BFF00BEC, (uint64_t (*)(void))sub_1BFF00BEC, (void (*)(uint64_t, char *))sub_1C0025B10);
}

uint64_t sub_1C0A3F4B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A3AA24(a1);
}

uint64_t sub_1C0A3F4D8()
{
  return sub_1C0A39728();
}

uint64_t sub_1C0A3F4E8()
{
  return sub_1C0A397A0();
}

double sub_1C0A3F50C@<D0>(void (*a1)(uint64_t (*)(), void *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  char v5 = *(unsigned char *)(v2 + 40);
  long long v8 = *(_OWORD *)(v2 + 24);
  char v9 = v5;
  v7[2] = v4;
  v7[3] = &v8;
  a1(sub_1BFE31C54, v7);
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

id sub_1C0A3F590(id result, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_1C00DB4F8(result, a2, a3);
  }
  return result;
}

uint64_t objectdestroy_156Tm()
{
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255) {
    sub_1C00DB52C(*(id *)(v0 + 24), *(void *)(v0 + 32), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A3F5F8()
{
  return sub_1C0A3886C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1C0A3F60C()
{
  return sub_1C0A3961C();
}

uint64_t sub_1C0A3F61C()
{
  return sub_1C0A3969C();
}

double sub_1C0A3F640@<D0>(void (*a1)(uint64_t (*)(), void *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  char v5 = *(unsigned char *)(v2 + 72);
  long long v6 = *(_OWORD *)(v2 + 40);
  v9[0] = *(_OWORD *)(v2 + 24);
  v9[1] = v6;
  v9[2] = *(_OWORD *)(v2 + 56);
  char v10 = v5;
  _OWORD v8[2] = v4;
  v8[3] = v9;
  a1(sub_1BFE31C54, v8);
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1C0A3F6CC(uint64_t a1)
{
  return a1;
}

id sub_1C0A3F708(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1) {
    return sub_1C04B1268(result, a2, a3, a4, a5, a6, a7);
  }
  return result;
}

uint64_t objectdestroy_180Tm_0()
{
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 != 255) {
    sub_1C04B3940(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A3F778()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1BFF5DF80(v0 + 24, (uint64_t)v3, &qword_1EB860290, (uint64_t)&type metadata for CommandShareContent);
  return sub_1C0A3874C(v1, (uint64_t)v3);
}

void sub_1C0A3F7CC(uint64_t a1)
{
}

uint64_t sub_1C0A3F800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A39824(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (void (*)(void))sub_1BFC4483C) & 1;
}

uint64_t sub_1C0A3F83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A398AC(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (void (*)(void))sub_1BFC4483C);
}

double sub_1C0A3F874@<D0>(void (*a1)(uint64_t, void *)@<X2>, uint64_t a2@<X8>)
{
  return sub_1C0A403F8(a1, (uint64_t)sub_1BFE31C54, a2);
}

uint64_t objectdestroy_204Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0A3F8E0()
{
  return sub_1C0A38B78(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C0A3F8E8()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

void sub_1C0A3F904(uint64_t a1)
{
}

uint64_t sub_1C0A3F938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A39824(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, sub_1BFC53CA4) & 1;
}

uint64_t sub_1C0A3F970()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A3F98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A398AC(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, sub_1BFC53CA4);
}

uint64_t sub_1C0A3F9C0()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A3F9DC()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A3F9F8()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A3FA14()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A3FA30()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A3FA4C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A3FA68()
{
  return sub_1C0A38A88();
}

uint64_t sub_1C0A3FA70()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

void sub_1C0A3FA8C(uint64_t a1)
{
}

uint64_t sub_1C0A3FAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A39824(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (void (*)(void))type metadata accessor for Commands.RemoveIssues.Prompt) & 1;
}

uint64_t sub_1C0A3FAF8()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A3FB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A398AC(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (void (*)(void))type metadata accessor for Commands.RemoveIssues.Prompt);
}

uint64_t sub_1C0A3FB48()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A3FB64()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A3FB80()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A3FB9C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A3FBB8()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A3FBD4()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A3FBF0()
{
  return sub_1C0A38998();
}

uint64_t sub_1C0A3FBFC()
{
  return sub_1C0A3929C() & 1;
}

uint64_t sub_1C0A3FC2C()
{
  return sub_1C0A3931C();
}

double sub_1C0A3FC58@<D0>(void (*a1)(uint64_t (*)(), void *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 40);
  long long v8 = *(_OWORD *)(v2 + 24);
  uint64_t v9 = v5;
  v7[2] = v4;
  v7[3] = &v8;
  a1(sub_1BFE31C54, v7);
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1C0A3FCD8(uint64_t result)
{
  if (result != 1)
  {
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

double sub_1C0A3FD24@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t objectdestroy_276Tm()
{
  swift_release();
  if (*(void *)(v0 + 24) != 1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A3FD88()
{
  return sub_1C0A40274((void (*)(uint64_t, uint64_t, uint64_t))sub_1C0A3FCD8, &qword_1EB860870, (uint64_t)&type metadata for OpenChannelCommandContext);
}

uint64_t sub_1C0A3FDB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A3FDEC()
{
  return sub_1C0A426E8();
}

double sub_1C0A3FE04@<D0>(void (*a1)(uint64_t (*)(), void *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 24);
  v6[2] = v4;
  v6[3] = &v7;
  a1(sub_1BFE31C54, v6);
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1C0A3FE70()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3FE8C()
{
  return sub_1C0A394B0();
}

uint64_t sub_1C0A3FE98()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3FEB4()
{
  return sub_1C0A39564();
}

uint64_t sub_1C0A3FED4()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3FEF0()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3FF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFE6DAF4(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE3B30, (uint64_t)sub_1C035B780, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A3FF64()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3FF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFE6DAF4(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE3B08, (uint64_t)sub_1C0A4005C, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A3FFD8()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A3FFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3186C(a1, a2, *(void *)a3, *(void *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
}

uint64_t sub_1C0A4000C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A40028@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A355D4(a1);
}

uint64_t sub_1C0A40034()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A40050()
{
  return sub_1C0A36384();
}

uint64_t sub_1C0A4005C(char *a1)
{
  return sub_1C0A3A064(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1BFE6DD2C);
}

uint64_t sub_1C0A40098()
{
  return sub_1C0A3929C() & 1;
}

uint64_t sub_1C0A400C8()
{
  return sub_1C0A3931C();
}

uint64_t sub_1C0A400F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFE6AE50(a1, a2, a3, a4, *(void *)(v4 + 16), (long long *)(v4 + 24), (uint64_t)&unk_1F1BE3CE8, (uint64_t)sub_1C035B780, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A40154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFE6AE50(a1, a2, a3, a4, *(void *)(v4 + 16), (long long *)(v4 + 24), (uint64_t)&unk_1F1BE3CC0, (uint64_t)sub_1C0A402A0, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A401B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A312EC(a1, a2, *(void *)a3, *(void *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), v3[2], v3[3], v3[4], v3[5]) & 1;
}

uint64_t sub_1C0A401F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A393A0(a1);
}

uint64_t objectdestroy_357Tm()
{
  swift_release();
  if (*(void *)(v0 + 24))
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A4024C()
{
  return sub_1C0A40274((void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF5E000, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
}

uint64_t sub_1C0A40274(void (*a1)(uint64_t, uint64_t, uint64_t), unint64_t *a2, uint64_t a3)
{
  return sub_1C0A384EC(v3[2], v3[3], v3[4], v3[5], a1, a2, a3);
}

uint64_t sub_1C0A402A0(unsigned char *a1)
{
  return sub_1C0A39938(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1C0A402BC()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A402D8(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1BFE6DC1C(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C0A4035C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A38D68(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1EB895E90) & 1;
}

uint64_t sub_1C0A40390()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A403AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A38E00(a1, a2, a3, *(void *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1EB895E90);
}

uint64_t sub_1C0A403DC()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

double sub_1C0A403F8@<D0>(void (*a1)(uint64_t, void *)@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  v7[2] = v5;
  v7[3] = &v8;
  a1(a2, v7);
  *(void *)(a3 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_1C0A40450()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A4046C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A40488()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A404A4()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A404C0()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C0A404DC()
{
  return sub_1C0A38628(*(void *)(v0 + 16), *(void *)(v0 + 24), &qword_1EB87A1E8, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
}

uint64_t sub_1C0A40514()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A40590()
{
  return sub_1C151AD8C();
}

double sub_1C0A40610@<D0>(void (*a1)(uint64_t (*)(), void *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  long long v7 = *(_OWORD *)(v2 + 24);
  v6[2] = v4;
  v6[3] = &v7;
  a1(sub_1BFE31C54, v6);
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1C0A40688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C151A7DC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t objectdestroy_414Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A4073C()
{
  return sub_1C0A383D4();
}

void sub_1C0A40748(uint64_t a1)
{
}

uint64_t sub_1C0A4077C(uint64_t a1, uint64_t a2)
{
  return sub_1BFF0A690(a1, a2, (uint64_t (*)(void))sub_1C0A40748);
}

uint64_t sub_1C0A40798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41E4C(a1, a2, a3, (uint64_t (*)(void))sub_1C0A40748, (void (*)(void))type metadata accessor for FeedHeadlineAudioCommandContext);
}

uint64_t objectdestroy_438Tm()
{
  sub_1C0A40748(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for FeedHeadlineAudioCommandContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v5 = (int *)type metadata accessor for FeedHeadline(0);
    uint64_t v6 = v5[10];
    uint64_t v7 = v3 + v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    uint64_t v8 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      uint64_t v9 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);

      uint64_t v10 = v7 + *(int *)(v8 + 28);
      uint64_t v11 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v3 + v5[11];
    uint64_t v13 = sub_1C151D2DC();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    if (*(void *)(v3 + v5[12] + 8) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v3 + v5[13]) >= 3uLL) {
      swift_unknownObjectRelease();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A40A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4208C(a1, a2, a3, (uint64_t (*)(void))sub_1C0A40748, (void (*)(void))type metadata accessor for FeedHeadlineAudioCommandContext);
}

uint64_t sub_1C0A40AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C0A40748, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2C478);
}

uint64_t sub_1C0A40B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C0A40748, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2EAD0);
}

uint64_t sub_1C0A40B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = *(void *)(a5(0) - 8);
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = v6 + ((*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a6(a1, a2, a3, a4, v12, v13);
}

uint64_t sub_1C0A40BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C0A40748, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2F1B0);
}

uint64_t sub_1C0A40C1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0A40F9C(a1, a2, a3, (uint64_t (*)(void))sub_1C0A40748, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A30D5C);
}

uint64_t sub_1C0A40C4C(uint64_t a1, uint64_t a2)
{
  return sub_1C0A42218(a1, a2, (uint64_t (*)(void))sub_1C0A40748, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A354A0);
}

uint64_t sub_1C0A40C7C()
{
  return sub_1C0A40CBC((uint64_t (*)(void))sub_1C0A40748, (uint64_t (*)(void))sub_1C0A40748, (void (*)(uint64_t, char *))sub_1C0A4077C);
}

uint64_t sub_1C0A40CBC(uint64_t (*a1)(void), uint64_t (*a2)(void), void (*a3)(uint64_t, char *))
{
  uint64_t v6 = *(void *)(a1(0) - 8);
  return sub_1C0A382A0(*(void *)(v3 + 16), v3 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2, a3);
}

unint64_t sub_1C0A40D3C()
{
  unint64_t result = qword_1EB881750[0];
  if (!qword_1EB881750[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB881750);
  }
  return result;
}

uint64_t sub_1C0A40D90(char *a1)
{
  return sub_1C0A3A498(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A40D3C);
}

unint64_t sub_1C0A40DC8()
{
  unint64_t result = qword_1EB872968[0];
  if (!qword_1EB872968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB872968);
  }
  return result;
}

uint64_t sub_1C0A40E1C(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A40E34);
}

uint64_t sub_1C0A40E34(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A40D3C, (uint64_t)&type metadata for FeedAudioPlaybackState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1C0A2DF58);
}

uint64_t sub_1C0A40E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41E4C(a1, a2, a3, (uint64_t (*)(void))sub_1BFFFCF8C, (void (*)(void))type metadata accessor for FeedHeadline);
}

uint64_t sub_1C0A40E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4208C(a1, a2, a3, (uint64_t (*)(void))sub_1BFFFCF8C, (void (*)(void))type metadata accessor for FeedHeadline);
}

uint64_t sub_1C0A40EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BFFFCF8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2C378);
}

uint64_t sub_1C0A40F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BFFFCF8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2E9D0);
}

uint64_t sub_1C0A40F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BFFFCF8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2F0B0);
}

uint64_t sub_1C0A40F70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0A40F9C(a1, a2, a3, (uint64_t (*)(void))sub_1BFFFCF8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A307B4);
}

uint64_t sub_1C0A40F9C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = *(void *)(a4(0) - 8);
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  uint64_t v14 = *((unsigned __int8 *)a3 + 16);
  return a5(a1, a2, v12, v13, v14, v10, v11);
}

uint64_t sub_1C0A41048(uint64_t a1, uint64_t a2)
{
  return sub_1C0A42218(a1, a2, (uint64_t (*)(void))sub_1BFFFCF8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A35324);
}

uint64_t objectdestroy_471Tm()
{
  sub_1BFFFCF8C(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = (int *)type metadata accessor for FeedHeadline(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((void *)v4 - 1) + 48))(v0 + v2, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v5 = v4[10];
    uint64_t v6 = v3 + v5 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    uint64_t v7 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      uint64_t v8 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);

      uint64_t v9 = v6 + *(int *)(v7 + 28);
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v3 + v4[11];
    uint64_t v12 = sub_1C151D2DC();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    if (*(void *)(v3 + v4[12] + 8) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v3 + v4[13]) >= 3uLL) {
      swift_unknownObjectRelease();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A41334()
{
  return sub_1C0A40CBC((uint64_t (*)(void))sub_1BFFFCF8C, (uint64_t (*)(void))sub_1BFFFCF8C, (void (*)(uint64_t, char *))sub_1C0485F0C);
}

uint64_t sub_1C0A41374(uint64_t a1)
{
  return sub_1C0A2F880(*(void *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(void (**)(double *))(v1 + 16));
}

unint64_t sub_1C0A41398()
{
  unint64_t result = qword_1EB86F030;
  if (!qword_1EB86F030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F030);
  }
  return result;
}

uint64_t sub_1C0A413EC(uint64_t *a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), void *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  char v4 = *((unsigned char *)a1 + 9);
  uint64_t v7 = *a1;
  char v8 = v3;
  char v9 = v4;
  v6[2] = &v7;
  return v2(sub_1C0A41454, v6);
}

uint64_t sub_1C0A41454(uint64_t a1)
{
  return sub_1C0A2CA58(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), **(void **)(v1 + 16), *(unsigned __int8 *)(*(void *)(v1 + 16) + 8) | (unsigned __int16)(*(unsigned __int8 *)(*(void *)(v1 + 16) + 9) << 8));
}

uint64_t sub_1C0A41480(uint64_t a1, uint64_t a2)
{
  sub_1C0A41508(0, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0A41508(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0A41560()
{
  return sub_1C0A41B58();
}

uint64_t sub_1C0A4157C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2C860(a1, a2, a3, a4);
}

uint64_t sub_1C0A4158C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2EEB8(a1, a2, a3, a4);
}

uint64_t sub_1C0A4159C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2F688(a1, a2, a3, a4);
}

uint64_t sub_1C0A415AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41CF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, uint64_t))sub_1C0A3349C);
}

uint64_t sub_1C0A415C8@<X0>(void *a1@<X8>)
{
  return sub_1C0A35C2C(a1);
}

uint64_t sub_1C0A415D8(uint64_t a1)
{
  return sub_1C0A2FA10(*(void *)a1, *(unsigned char *)(a1 + 8), *(void (**)(void *))(v1 + 16));
}

unint64_t sub_1C0A415EC()
{
  unint64_t result = qword_1EB864FB8;
  if (!qword_1EB864FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864FB8);
  }
  return result;
}

uint64_t sub_1C0A41640(uint64_t *a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), void *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v6 = *a1;
  char v7 = v3;
  v5[2] = &v6;
  return v2(sub_1C0A416A0, v5);
}

uint64_t sub_1C0A416A0(uint64_t a1)
{
  return sub_1C0A2DA10(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), **(void **)(v1 + 16), *(unsigned __int8 *)(*(void *)(v1 + 16) + 8));
}

uint64_t sub_1C0A416C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2C768(a1, a2, a3, a4);
}

uint64_t sub_1C0A416D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2EDC0(a1, a2, a3, a4);
}

uint64_t sub_1C0A416E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2F590(a1, a2, a3, a4);
}

uint64_t sub_1C0A416F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41CF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, uint64_t))sub_1C0A32F0C);
}

uint64_t sub_1C0A41714@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A35B08(a1);
}

unint64_t sub_1C0A41724()
{
  unint64_t result = qword_1EB865418;
  if (!qword_1EB865418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865418);
  }
  return result;
}

uint64_t sub_1C0A41778(char *a1)
{
  return sub_1C0A3A8CC(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A41724);
}

unint64_t sub_1C0A417B0()
{
  unint64_t result = qword_1EB865430;
  if (!qword_1EB865430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865430);
  }
  return result;
}

uint64_t sub_1C0A41804(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A4181C);
}

uint64_t sub_1C0A4181C(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A41724, (uint64_t)&type metadata for FeedPuzzleProgressState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1C0A2E494);
}

uint64_t sub_1C0A4185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2C670(a1, a2, a3, a4);
}

uint64_t sub_1C0A4186C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2ECC8(a1, a2, a3, a4);
}

uint64_t sub_1C0A4187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2F498(a1, a2, a3, a4);
}

uint64_t sub_1C0A4188C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41CF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, uint64_t))sub_1C0A32978);
}

uint64_t sub_1C0A418A8@<X0>(void *a1@<X8>)
{
  return sub_1C0A35998(a1);
}

uint64_t sub_1C0A418B8(uint64_t a1)
{
  return sub_1C0A39BF4(a1, *(void (**)(void *))(v1 + 16));
}

unint64_t sub_1C0A418C0()
{
  unint64_t result = qword_1EB86FAE0;
  if (!qword_1EB86FAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FAE0);
  }
  return result;
}

uint64_t sub_1C0A41914(uint64_t *a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), void *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v6 = *a1;
  char v7 = v3;
  v5[2] = &v6;
  return v2(sub_1C0A41974, v5);
}

uint64_t sub_1C0A41974(uint64_t a1)
{
  return sub_1C0A2D4E0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), **(void **)(v1 + 16), *(unsigned __int8 *)(*(void *)(v1 + 16) + 8));
}

uint64_t sub_1C0A4199C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2C578(a1, a2, a3, a4);
}

uint64_t sub_1C0A419AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2EBD0(a1, a2, a3, a4);
}

uint64_t sub_1C0A419BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2F3A0(a1, a2, a3, a4);
}

uint64_t sub_1C0A419CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41CF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, uint64_t))sub_1C0A323B4);
}

uint64_t sub_1C0A419E8@<X0>(void *a1@<X8>)
{
  return sub_1C0A3583C(a1);
}

uint64_t sub_1C0A419F8()
{
  return sub_1C0A3647C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1C0A41A18(void *a1)
{
  return sub_1C0A39A64(a1, *(void (**)(void *))(v1 + 16));
}

unint64_t sub_1C0A41A20()
{
  unint64_t result = qword_1EA1A28F0;
  if (!qword_1EA1A28F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A28F0);
  }
  return result;
}

uint64_t sub_1C0A41A74(long long *a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), void *))(v1 + 16);
  long long v5 = *a1;
  v4[2] = &v5;
  return v2(sub_1C0A41ACC, v4);
}

uint64_t sub_1C0A41ACC(uint64_t a1)
{
  return sub_1C0A2CF98(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8));
}

uint64_t sub_1C0A41AE8()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A41B58()
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A41BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2F2B0(a1, a2, a3, a4, *(void *)(v4 + 16), v4 + 24, (uint64_t)&unk_1F1BE4B98, (uint64_t)sub_1C0059B48, MEMORY[0x1E4FAC318]);
}

uint64_t sub_1C0A41C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2F2B0(a1, a2, a3, a4, *(void *)(v4 + 16), v4 + 24, (uint64_t)&unk_1F1BE4B70, (uint64_t)sub_1C035B780, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A41C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2F2B0(a1, a2, a3, a4, *(void *)(v4 + 16), v4 + 24, (uint64_t)&unk_1F1BE4B48, (uint64_t)sub_1C0A42B24, MEMORY[0x1E4FAC310]);
}

uint64_t sub_1C0A41CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41CF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, uint64_t))sub_1C0A31E3C);
}

uint64_t sub_1C0A41CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, uint64_t))
{
  return a4(a1, a2, *(void *)a3, *(void *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(void *)(v4 + 16), v4 + 24);
}

uint64_t sub_1C0A41D1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A35730(a1);
}

uint64_t objectdestroy_504Tm()
{
  swift_release();
  if (*(void *)(v0 + 72))
  {
    if (*(void *)(v0 + 56) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
    if (*(void *)(v0 + 176)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 152);
    }
    if (*(void *)(v0 + 216)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 192);
    }
  }
  return swift_deallocObject();
}

void sub_1C0A41DD0(uint64_t a1)
{
}

uint64_t sub_1C0A41E04(uint64_t a1, uint64_t a2)
{
  return sub_1BFF0A690(a1, a2, (uint64_t (*)(void))sub_1C0A41DD0);
}

uint64_t sub_1C0A41E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A41E4C(a1, a2, a3, (uint64_t (*)(void))sub_1C0A41DD0, (void (*)(void))type metadata accessor for LiveActivityCommandContext);
}

uint64_t sub_1C0A41E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void))
{
  uint64_t v10 = *(void *)(a4(0) - 8);
  return sub_1C0A38194(a1, a2, a3, *(void *)(v5 + 16), v5 + ((*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a5) & 1;
}

uint64_t objectdestroy_669Tm()
{
  sub_1C0A41DD0(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = type metadata accessor for LiveActivityCommandContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    uint64_t v4 = sub_1C151976C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
    unint64_t v5 = v0 + v2 + *(int *)(v3 + 20);
    uint64_t v6 = sub_1C15196AC();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0A4204C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4208C(a1, a2, a3, (uint64_t (*)(void))sub_1C0A41DD0, (void (*)(void))type metadata accessor for LiveActivityCommandContext);
}

uint64_t sub_1C0A4208C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void))
{
  uint64_t v10 = *(void *)(a4(0) - 8);
  return sub_1C0A38218(a1, a2, a3, *(void *)(v5 + 16), v5 + ((*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a5);
}

uint64_t sub_1C0A4212C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C0A41DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2C958);
}

uint64_t sub_1C0A4215C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C0A41DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2EFB0);
}

uint64_t sub_1C0A4218C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A40B2C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C0A41DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A2F780);
}

uint64_t sub_1C0A421BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0A40F9C(a1, a2, a3, (uint64_t (*)(void))sub_1C0A41DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A33A40);
}

uint64_t sub_1C0A421EC(uint64_t a1, uint64_t a2)
{
  return sub_1C0A42218(a1, a2, (uint64_t (*)(void))sub_1C0A41DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A35DB0);
}

uint64_t sub_1C0A42218(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a1, a2, v8, v9);
}

uint64_t sub_1C0A422C0()
{
  return sub_1C0A40CBC((uint64_t (*)(void))sub_1C0A41DD0, (uint64_t (*)(void))sub_1C0A41DD0, (void (*)(uint64_t, char *))sub_1C0A41E04);
}

unint64_t sub_1C0A42300()
{
  unint64_t result = qword_1EB863198;
  if (!qword_1EB863198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863198);
  }
  return result;
}

uint64_t sub_1C0A42354(char *a1)
{
  return sub_1C0A3A8CC(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A42300);
}

unint64_t sub_1C0A4238C()
{
  unint64_t result = qword_1EB8631A0;
  if (!qword_1EB8631A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8631A0);
  }
  return result;
}

uint64_t sub_1C0A423E0(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A423F8);
}

uint64_t sub_1C0A423F8(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A42300, (uint64_t)&type metadata for LiveActivitySubscriptionCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1C0A2E494);
}

uint64_t sub_1C0A4242C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A3A5F0(a1, a2, a3, a4);
}

uint64_t sub_1C0A42438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A3A6E4(a1, a2, a3, a4);
}

uint64_t sub_1C0A42444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A3A7D8(a1, a2, a3, a4);
}

uint64_t sub_1C0A42450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A427A4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1C0A34B08);
}

uint64_t sub_1C0A42468@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A3613C(a1);
}

unint64_t sub_1C0A42474()
{
  unint64_t result = qword_1EA1A2900;
  if (!qword_1EA1A2900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2900);
  }
  return result;
}

uint64_t sub_1C0A424C8(char *a1)
{
  return sub_1C0A3A8CC(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A42474);
}

uint64_t sub_1C0A42500(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A42518);
}

uint64_t sub_1C0A42518(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A42474, (uint64_t)&type metadata for NotificationsCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1C0A2E494);
}

uint64_t sub_1C0A4254C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A3A1BC(a1, a2, a3, a4);
}

uint64_t sub_1C0A42558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A3A2B0(a1, a2, a3, a4);
}

uint64_t sub_1C0A42564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A3A3A4(a1, a2, a3, a4);
}

uint64_t sub_1C0A42570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A427A4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1C0A3456C);
}

uint64_t sub_1C0A42588@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A36010(a1);
}

unint64_t sub_1C0A42594()
{
  unint64_t result = qword_1EA1A2908;
  if (!qword_1EA1A2908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2908);
  }
  return result;
}

uint64_t sub_1C0A425E8(char *a1)
{
  return sub_1C0A3A498(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A42594);
}

uint64_t sub_1C0A42620(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A42638);
}

uint64_t sub_1C0A42638(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A42594, (uint64_t)&type metadata for FamilyStatusCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1C0A2DF58);
}

uint64_t sub_1C0A4266C()
{
  return sub_1C151AD3C() & 1;
}

uint64_t sub_1C0A426E8()
{
  return sub_1C151AD8C();
}

uint64_t sub_1C0A42768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A39D88(a1, a2, a3, a4);
}

uint64_t sub_1C0A42774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A39E7C(a1, a2, a3, a4);
}

uint64_t sub_1C0A42780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A39F70(a1, a2, a3, a4);
}

uint64_t sub_1C0A4278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A427A4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1C0A33FD0);
}

uint64_t sub_1C0A427A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a4(a1, a2, *(void *)a3, *(void *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(void *)(v4 + 16), *(unsigned __int8 *)(v4 + 24));
}

uint64_t sub_1C0A427C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A35EE4(a1);
}

uint64_t sub_1C0A427D0()
{
  return sub_1C0A36580();
}

unint64_t sub_1C0A427F0()
{
  unint64_t result = qword_1EB86FC48;
  if (!qword_1EB86FC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FC48);
  }
  return result;
}

unint64_t sub_1C0A42844()
{
  unint64_t result = qword_1EA1A2920;
  if (!qword_1EA1A2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2920);
  }
  return result;
}

uint64_t sub_1C0A42898(char *a1)
{
  return sub_1C0A3A064(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), (void (*)(__n128))sub_1C0A42844);
}

unint64_t sub_1C0A428D0()
{
  unint64_t result = qword_1EA1A2928;
  if (!qword_1EA1A2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2928);
  }
  return result;
}

uint64_t sub_1C0A42924(char *a1)
{
  return sub_1BFE664C8(a1, (uint64_t)sub_1C0A4293C);
}

uint64_t sub_1C0A4293C(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1C0A42844, (uint64_t)&type metadata for NewslettersCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1BFE6D52C);
}

unint64_t sub_1C0A42970()
{
  unint64_t result = qword_1EB85F050[0];
  if (!qword_1EB85F050[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB85F050);
  }
  return result;
}

uint64_t sub_1C0A429C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A3EAC8(a1, a2, a3);
}

unint64_t sub_1C0A42B30()
{
  unint64_t result = qword_1EB865B60;
  if (!qword_1EB865B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B60);
  }
  return result;
}

uint64_t sub_1C0A42B88(char *a1, char *a2)
{
  return sub_1C1481368(*a1, *a2);
}

uint64_t sub_1C0A42B94()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A42C10()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A42C78()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A42CF0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0A42D50(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65756C6176;
  if (*v1) {
    uint64_t v2 = 0x6E6F6974706FLL;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0A42D88@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0A42DEC(uint64_t a1)
{
  unint64_t v2 = sub_1BFE234AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A42E28(uint64_t a1)
{
  unint64_t v2 = sub_1BFE234AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0A42E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A42EB4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1C1268270);
}

uint64_t sub_1C0A42E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A42EB4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1C1268BA0);
}

uint64_t sub_1C0A42E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A42EB4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1C1267960);
}

uint64_t sub_1C0A42EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1C0A42EDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionCompareValue.init(from:)(a1, a2);
}

uint64_t sub_1C0A42EF4(void *a1)
{
  return FormatOptionCompareValue.encode(to:)(a1);
}

uint64_t _s8NewsFeed24FormatOptionCompareValueO1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  if (*(unsigned char *)(a1 + 16) != 1)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      unint64_t v8 = *(void *)a2;
      uint64_t v9 = v3;
      char v7 = static FormatOptionValue.< infix(_:_:)(&v9, &v8);
      return v7 & 1;
    }
LABEL_11:
    char v7 = 0;
    return v7 & 1;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v3 == *(void *)a2 && v4 == *(void *)(a2 + 8)) {
    goto LABEL_11;
  }
  return sub_1C1520A9C();
}

uint64_t _s8NewsFeed24FormatOptionCompareValueO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  if (*(unsigned char *)(a1 + 16) != 1)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      unint64_t v8 = *(void *)a2;
      uint64_t v9 = v3;
      char v7 = static FormatOptionValue.== infix(_:_:)(&v9, &v8);
      return v7 & 1;
    }
LABEL_11:
    char v7 = 0;
    return v7 & 1;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v3 == *(void *)a2 && v4 == *(void *)(a2 + 8))
  {
    char v7 = 1;
    return v7 & 1;
  }
  return sub_1C1520A9C();
}

unint64_t sub_1C0A4303C(void *a1)
{
  a1[1] = sub_1C0A43074();
  a1[2] = sub_1C0A430C8();
  unint64_t result = sub_1C0A4311C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A43074()
{
  unint64_t result = qword_1EA1A2930;
  if (!qword_1EA1A2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2930);
  }
  return result;
}

unint64_t sub_1C0A430C8()
{
  unint64_t result = qword_1EA1A2938;
  if (!qword_1EA1A2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2938);
  }
  return result;
}

unint64_t sub_1C0A4311C()
{
  unint64_t result = qword_1EA1A2940;
  if (!qword_1EA1A2940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2940);
  }
  return result;
}

uint64_t destroy for FormatOptionCompareValue(uint64_t a1)
{
  return sub_1BFE1D230(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed24FormatOptionCompareValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1BFF27F28(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatOptionCompareValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1BFF27F28(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1BFE1D230(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatOptionCompareValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1BFE1D230(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatOptionCompareValue()
{
  return &type metadata for FormatOptionCompareValue;
}

unsigned char *storeEnumTagSinglePayload for FormatOptionCompareValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A43350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionCompareValue.CodingKeys()
{
  return &type metadata for FormatOptionCompareValue.CodingKeys;
}

unint64_t sub_1C0A4338C()
{
  unint64_t result = qword_1EA1A2948[0];
  if (!qword_1EA1A2948[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A2948);
  }
  return result;
}

uint64_t sub_1C0A433E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  void v5[4] = a5;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0A43404, 0, 0);
}

uint64_t sub_1C0A43404()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  uint64_t v5 = v2 + *(int *)(type metadata accessor for LiveActivityCommandContext() + 20);
  unsigned int v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_1C0A434D4;
  uint64_t v7 = v0[4];
  return MEMORY[0x1F4138A38](v7, v5, v3, v4);
}

uint64_t sub_1C0A434D4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v2 = sub_1C0A44544;
  }
  else
  {
    uint64_t v2 = sub_1C0A435F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A435F0()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 48) != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0A43618()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A43658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for LiveActivityCommandContext();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C0A44200(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = *v4;
  uint64_t v13 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  sub_1BFC66384(v12 + 16, (uint64_t)v18);
  sub_1C0A44254(a4, (uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  sub_1BFC773DC(v18, v15 + 32);
  sub_1C0A443EC((uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_1C0C8356C((uint64_t)v11, (uint64_t)&unk_1EA1A29A0, v15);
  return swift_release();
}

uint64_t sub_1C0A4381C@<X0>(uint64_t a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C0A43BB4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0A4384C()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C151965C() & 1;
}

uint64_t sub_1C0A43898()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C0A438B8, 0, 0);
}

uint64_t sub_1C0A438B8()
{
  sub_1C151EE6C();
  *(void *)(v0 + 24) = sub_1C151EE5C();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C0A44548, v2, v1);
}

uint64_t sub_1C0A4394C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C0A4396C, 0, 0);
}

uint64_t sub_1C0A4396C()
{
  sub_1C151EE6C();
  *(void *)(v0 + 24) = sub_1C151EE5C();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C0A43A00, v2, v1);
}

uint64_t sub_1C0A43A00()
{
  swift_release();
  swift_getObjectType();
  if (qword_1EB885318 != -1) {
    swift_once();
  }
  type metadata accessor for LiveActivityCommandContext();
  sub_1C151AD4C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0A43ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1BFC542F4;
  return MEMORY[0x1F4138A90](a1, a2, v9, a4);
}

uint64_t sub_1C0A43BB4(uint64_t a1)
{
  sub_1C0A44200(0, &qword_1EB8629A0, MEMORY[0x1E4F81D38]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v28 - v4;
  sub_1C0A44200(0, &qword_1EA1A2990, MEMORY[0x1E4F81D30]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - v10;
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v28 - v13;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v15 = sub_1C151967C();
  if (*(void *)(v15 + 16) && (uint64_t v16 = sub_1C1052684(a1), (v17 & 1) != 0))
  {
    uint64_t v18 = v16;
    uint64_t v19 = *(void *)(v15 + 56);
    uint64_t v20 = sub_1C151974C();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v5, v19 + *(void *)(v21 + 72) * v18, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v5, 0, 1, v20);
  }
  else
  {
    uint64_t v20 = sub_1C151974C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  sub_1C151974C();
  uint64_t v22 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v5, 1, v20) == 1)
  {
    sub_1C0A441A4((uint64_t)v5, &qword_1EB8629A0, MEMORY[0x1E4F81D38]);
    uint64_t v23 = sub_1C15196FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v14, 1, 1, v23);
  }
  else
  {
    sub_1C151970C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v20);
    uint64_t v23 = sub_1C15196FC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v14, 0, 1, v23);
  }
  sub_1C0A44124((uint64_t)v14, (uint64_t)v11);
  sub_1C15196FC();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v23) == 1) {
    goto LABEL_9;
  }
  sub_1C0A44124((uint64_t)v11, (uint64_t)v8);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v8, v23);
  if (v26 == *MEMORY[0x1E4F81D28])
  {
    sub_1C0A441A4((uint64_t)v14, &qword_1EA1A2990, MEMORY[0x1E4F81D30]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v23);
LABEL_18:
    uint64_t v25 = 2;
    goto LABEL_19;
  }
  if (v26 == *MEMORY[0x1E4F81D18])
  {
    sub_1C0A441A4((uint64_t)v14, &qword_1EA1A2990, MEMORY[0x1E4F81D30]);
    uint64_t v25 = 1;
    goto LABEL_19;
  }
  if (v26 == *MEMORY[0x1E4F81D10])
  {
LABEL_17:
    sub_1C0A441A4((uint64_t)v14, &qword_1EA1A2990, MEMORY[0x1E4F81D30]);
    goto LABEL_18;
  }
  if (v26 != *MEMORY[0x1E4F81D20])
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v23);
    goto LABEL_17;
  }
LABEL_9:
  sub_1C0A441A4((uint64_t)v14, &qword_1EA1A2990, MEMORY[0x1E4F81D30]);
  uint64_t v25 = 0;
LABEL_19:
  sub_1C0A441A4((uint64_t)v11, &qword_1EA1A2990, MEMORY[0x1E4F81D30]);
  return v25;
}

uint64_t sub_1C0A44124(uint64_t a1, uint64_t a2)
{
  sub_1C0A44200(0, &qword_1EA1A2990, MEMORY[0x1E4F81D30]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A441A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0A44200(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C0A44200(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0A44254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveActivityCommandContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A442B8()
{
  uint64_t v1 = (int *)(type metadata accessor for LiveActivityCommandContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1C151976C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v3 + v1[7];
  uint64_t v6 = sub_1C15196AC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_1C0A443EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveActivityCommandContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A44450(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LiveActivityCommandContext() - 8);
  uint64_t v5 = v1 + 32;
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[3] = v5;
  void v7[4] = v6;
  v7[1] = sub_1C005E7F4;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0A43404, 0, 0);
}

unint64_t FormatSlotItemTagFilterAndCondition.lhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFF58F10(v2);
}

unint64_t FormatSlotItemTagFilterAndCondition.rhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1BFF58F10(v2);
}

uint64_t sub_1C0A44568@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatSlotItemTagFilterAndCondition.init(from:)(a1, a2);
}

uint64_t sub_1C0A44580(void *a1)
{
  return FormatSlotItemTagFilterAndCondition.encode(to:)(a1);
}

uint64_t _s8NewsFeed35FormatSlotItemTagFilterAndConditionV2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  unint64_t v8 = v2;
  if (static FormatSlotItemTagFilterCondition.== infix(_:_:)(&v8, &v7))
  {
    unint64_t v7 = v4;
    unint64_t v8 = v3;
    char v5 = static FormatSlotItemTagFilterCondition.== infix(_:_:)(&v8, &v7);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1C0A445F8(uint64_t a1)
{
  unint64_t result = sub_1C0A44620();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A44620()
{
  unint64_t result = qword_1EA1A29A8;
  if (!qword_1EA1A29A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A29A8);
  }
  return result;
}

unint64_t sub_1C0A44674(void *a1)
{
  a1[1] = sub_1C08622D0();
  a1[2] = sub_1C0907CEC();
  unint64_t result = sub_1C0A446AC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A446AC()
{
  unint64_t result = qword_1EA1A29B0;
  if (!qword_1EA1A29B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A29B0);
  }
  return result;
}

unint64_t destroy for FormatSlotItemTagFilterAndCondition(unint64_t *a1)
{
  sub_1BFF07CD8(*a1);
  unint64_t v2 = a1[1];
  return sub_1BFF07CD8(v2);
}

unint64_t *_s8NewsFeed35FormatSlotItemTagFilterAndConditionVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF58F10(*a2);
  *a1 = v4;
  unint64_t v5 = a2[1];
  sub_1BFF58F10(v5);
  a1[1] = v5;
  return a1;
}

unint64_t *assignWithCopy for FormatSlotItemTagFilterAndCondition(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF58F10(*a2);
  unint64_t v5 = *a1;
  *a1 = v4;
  sub_1BFF07CD8(v5);
  unint64_t v6 = a2[1];
  sub_1BFF58F10(v6);
  unint64_t v7 = a1[1];
  a1[1] = v6;
  sub_1BFF07CD8(v7);
  return a1;
}

unint64_t *assignWithTake for FormatSlotItemTagFilterAndCondition(unint64_t *a1, _OWORD *a2)
{
  sub_1BFF07CD8(*a1);
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BFF07CD8(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeAlternativeLogic.LogicalOperator(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeAlternativeLogic.LogicalOperator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)unint64_t result = a2 - 125;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterAndCondition()
{
  return &type metadata for FormatSlotItemTagFilterAndCondition;
}

id SportsBoxScoreDataVisualization.leagueTag.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
  return v1;
}

uint64_t SportsBoxScoreDataVisualization.competitorTags.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v2 = v1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

uint64_t SportsBoxScoreDataVisualization.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBoxScoreDataVisualization.umcCanonicalId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBoxScoreDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBoxScoreDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl, a1);
}

uint64_t SportsBoxScoreDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBoxScoreDataVisualization.roster.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsBoxScoreDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 24);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 32);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1C025C670(v2, v3);
}

uint64_t SportsBoxScoreDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl, a1);
}

uint64_t SportsBoxScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14 = swift_allocObject();
  SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

char *SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  unint64_t v8 = v7;
  uint64_t v54 = a5;
  uint64_t v15 = sub_1C1515FDC();
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v52 = (uint64_t)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a6;
  uint64_t v19 = *a7;
  uint64_t v20 = a7[1];
  uint64_t v21 = a7[2];
  uint64_t v22 = a7[3];
  uint64_t v24 = a7[4];
  uint64_t v23 = a7[5];
  uint64_t v49 = a1;
  uint64_t v50 = v25;
  *((void *)v8 + 4) = a1;
  *((void *)v8 + 5) = a2;
  uint64_t v26 = v19;
  uint64_t v27 = a3;
  *((void *)v8 + 6) = a3;
  uint64_t v28 = v21;
  uint64_t v29 = *(void (**)(char *, uint64_t, __n128))(v25 + 16);
  uint64_t v51 = a4;
  uint64_t v30 = a4;
  uint64_t v31 = v22;
  uint64_t v53 = v32;
  v29(&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl], v30, v16);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources] = v54;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster] = v18;
  char v33 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config];
  uint64_t v54 = v26;
  *char v33 = v26;
  v33[1] = v20;
  uint64_t v34 = v20;
  v33[2] = v28;
  v33[3] = v31;
  _OWORD v33[4] = v24;
  v33[5] = v23;
  uint64_t v47 = v31;
  uint64_t v48 = v24;
  uint64_t v45 = v23;
  uint64_t v46 = v27;
  if (v20)
  {
    uint64_t v55 = 14906;
    unint64_t v56 = 0xE200000000000000;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1C025C670(v54, v20);
    uint64_t v35 = v28;
    sub_1C151E80C();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v35 = v28;
  }
  v44[1] = v35;
  uint64_t v36 = v51;
  uint64_t v55 = sub_1C1515E2C();
  unint64_t v56 = v37;
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v38 = v56;
  *((void *)v8 + 2) = v55;
  *((void *)v8 + 3) = v38;
  uint64_t v39 = v54;
  uint64_t v55 = v54;
  unint64_t v56 = v34;
  uint64_t v57 = v35;
  uint64_t v58 = v47;
  uint64_t v59 = v48;
  uint64_t v60 = v45;
  uint64_t v40 = v52;
  sub_1C0B98938(v36, &v55, 0xD000000000000019, 0x80000001C1618F70, v52);
  swift_unknownObjectRelease();
  uint64_t v41 = v50;
  uint64_t v42 = v53;
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v36, v53);
  sub_1C025EF94(v39, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl], v40, v42);
  return v8;
}

uint64_t SportsBoxScoreDataVisualization.with(config:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v13 = v1[4];
  uint64_t v21 = v1[5];
  uint64_t v22 = v1[6];
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl, v4);
  uint64_t v15 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources);
  uint64_t v16 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster);
  v24[5] = v11;
  uint64_t v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v21;
  swift_bridgeObjectRetain();
  uint64_t v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsBoxScoreDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsBoxScoreDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsBoxScoreDataVisualization.init(from:)(void *a1)
{
  uint64_t v39 = a1;
  uint64_t v2 = v1;
  uint64_t v40 = *(void *)v2;
  uint64_t v34 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - v7;
  sub_1C025F004();
  uint64_t v10 = v9;
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A47324(0, &qword_1EA1A29B8, MEMORY[0x1E4FBBDC0]);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A472D0();
  unint64_t v37 = v16;
  uint64_t v17 = v38;
  uint64_t v18 = v2;
  sub_1C1520EBC();
  if (v17)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    unint64_t v38 = v8;
    uint64_t v31 = v5;
    LOBYTE(v41) = 0;
    uint64_t v19 = v35;
    *((void *)v2 + 4) = sub_1C152069C();
    *((void *)v2 + 5) = v20;
    LOBYTE(v41) = 1;
    sub_1C025F0C0(&qword_1EB863FA0, (void (*)(uint64_t))sub_1C025F004);
    sub_1C15206EC();
    sub_1C151948C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    *((void *)v2 + 6) = v41;
    LOBYTE(v41) = 2;
    uint64_t v21 = sub_1C025F0C0((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    uint64_t v22 = v38;
    uint64_t v23 = v34;
    sub_1C15206EC();
    uint64_t v33 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl], v24, v23);
    sub_1BFF5D74C(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    char v44 = 3;
    sub_1C0A473A4(&qword_1EB86B2E0, &qword_1EB86A8C0);
    unint64_t v38 = 0;
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources] = v41;
    char v44 = 6;
    sub_1C025F108();
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster] = v41;
    char v44 = 5;
    sub_1C025F15C();
    sub_1C152065C();
    uint64_t v26 = &v18[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config];
    long long v27 = v42;
    *(_OWORD *)uint64_t v26 = v41;
    *((_OWORD *)v26 + 1) = v27;
    *((_OWORD *)v26 + 2) = v43;
    LOBYTE(v41) = 4;
    *((void *)v18 + 2) = sub_1C152069C();
    *((void *)v18 + 3) = v28;
    LOBYTE(v41) = 7;
    uint64_t v29 = v31;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v19);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl], v29, v23);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v18;
}

uint64_t SportsBoxScoreDataVisualization.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025F004();
  uint64_t v7 = v6;
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A47324(0, &qword_1EA1A29D0, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A472D0();
  uint64_t v15 = v11;
  uint64_t v16 = v36;
  sub_1C1520F0C();
  LOBYTE(v37) = 0;
  uint64_t v17 = v35;
  sub_1C15207CC();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v30 = 0;
  uint64_t v31 = v9;
  uint64_t v19 = v32;
  uint64_t v35 = v14;
  uint64_t v29 = v12;
  *(void *)&long long v37 = *(void *)(v16 + 48);
  uint64_t v20 = qword_1EB863C98;
  swift_unknownObjectRetain_n();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB863C78);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v5, v21, v19);
  MEMORY[0x1F4188790](v22);
  *(&v29 - 2) = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB890230);
  swift_getKeyPath();
  uint64_t v23 = v31;
  sub_1C151947C();
  swift_unknownObjectRelease();
  LOBYTE(v37) = 1;
  sub_1C025F0C0((unint64_t *)&unk_1EB863F90, (void (*)(uint64_t))sub_1C025F004);
  uint64_t v24 = v35;
  uint64_t v25 = v30;
  sub_1C152080C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v7);
  if (v25) {
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v24, v15);
  }
  uint64_t v26 = v36;
  LOBYTE(v37) = 2;
  sub_1C1515FDC();
  sub_1C025F0C0((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
  sub_1C152080C();
  *(void *)&long long v37 = *(void *)(v26 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources);
  char v40 = 3;
  sub_1BFF5D74C(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
  sub_1C0A473A4((unint64_t *)&qword_1EB86B2D0, (unint64_t *)&unk_1EB86A8B0);
  sub_1C152080C();
  *(void *)&long long v37 = *(void *)(v26 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster);
  char v40 = 6;
  sub_1C025F39C();
  sub_1C152080C();
  uint64_t v27 = v29;
  long long v28 = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 16);
  long long v37 = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config);
  long long v38 = v28;
  long long v39 = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 32);
  char v40 = 5;
  sub_1C025F3F0();
  sub_1C152078C();
  LOBYTE(v37) = 4;
  sub_1C15207CC();
  LOBYTE(v37) = 7;
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v24, v15);
}

unint64_t sub_1C0A45E78(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x696669746E656469;
      break;
    case 5:
      unint64_t result = 0x6769666E6F63;
      break;
    case 6:
      unint64_t result = 0x726574736F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0A45F90(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x696669746E656469;
      break;
    case 5:
      unint64_t result = 0x6769666E6F63;
      break;
    case 6:
      unint64_t result = 0x726574736F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A460A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1478554(*a1, *a2);
}

uint64_t sub_1C0A460B4()
{
  return sub_1C044C380(0, *v0);
}

uint64_t sub_1C0A460C0(uint64_t a1)
{
  return sub_1C0447410(a1, *v1);
}

uint64_t sub_1C0A460C8(uint64_t a1)
{
  return sub_1C044C380(a1, *v1);
}

uint64_t sub_1C0A460D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0A477DC();
  *a1 = result;
  return result;
}

unint64_t sub_1C0A46100@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0A45E78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C0A4612C()
{
  return sub_1C0A45F90(*v0);
}

uint64_t sub_1C0A46134@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0A477DC();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A4615C(uint64_t a1)
{
  unint64_t v2 = sub_1C0A472D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A46198(uint64_t a1)
{
  unint64_t v2 = sub_1C0A472D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsBoxScoreDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl;
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C025EF94(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsBoxScoreDataVisualization.__deallocating_deinit()
{
  SportsBoxScoreDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1C0A46314@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsBoxScoreDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0A4636C(void *a1)
{
  return SportsBoxScoreDataVisualization.encode(to:)(a1);
}

uint64_t static SportsBoxScoreDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

void *sub_1C0A463C0(uint64_t a1)
{
  uint64_t v2 = (char *)sub_1C1515FDC();
  unint64_t v3 = *((void *)v2 - 1);
  MEMORY[0x1F4188790](v2);
  v97 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF5D74C(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  v96 = (void **)((char *)&v90 - v7);
  sub_1BFF5D74C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v5);
  MEMORY[0x1F4188790](v8 - 8);
  MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v90 - v13;
  if (a1)
  {
    uint64_t v115 = v12;
    uint64_t v106 = v11;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF5D74C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF5D74C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v15);
    uint64_t v17 = v16;
    sub_1C0181BEC(0);
    uint64_t v117 = v18;
    uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 72);
    uint64_t v20 = *(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
    uint64_t v21 = (v20 + 32) & ~v20;
    uint64_t v114 = v17;
    uint64_t v112 = v21 + 3 * v19;
    uint64_t v111 = v20 | 7;
    uint64_t v22 = swift_allocObject();
    long long v110 = xmmword_1C152C7F0;
    *(_OWORD *)(v22 + 16) = xmmword_1C152C7F0;
    uint64_t v91 = v22;
    uint64_t v113 = v21;
    uint64_t v23 = (void *)(v22 + v21);
    uint64_t v24 = *(void *)(a1 + 32);
    uint64_t v93 = a1;
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v27 = (char *)v23 + *(int *)(v26 + 24);
    *(void *)uint64_t v27 = v24;
    *((void *)v27 + 1) = v25;
    uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56);
    uint64_t v124 = v28;
    v123 = v30;
    uint64_t v122 = v29 + 56;
    v30(v27, 0, 1, v28);
    *uint64_t v23 = 0xD000000000000010;
    v23[1] = 0x80000001C1608E60;
    v23[2] = 0;
    v23[3] = 0;
    uint64_t v31 = (char *)v23 + *(int *)(v26 + 28);
    *(void *)uint64_t v31 = 0;
    *((void *)v31 + 1) = 0;
    v31[16] = -1;
    uint64_t v32 = *(void *)(v26 - 8);
    uint64_t v33 = *(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56);
    uint64_t v34 = v32 + 56;
    v33(v23, 0, 1, v26);
    v90 = v23;
    uint64_t v118 = v19;
    uint64_t v35 = (void *)((char *)v23 + v19);
    uint64_t v36 = (void *)v26;
    long long v37 = *(void (**)(char *, uint64_t, char *))(v3 + 16);
    unint64_t v109 = v3 + 16;
    v37(v14, v93 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl, v2);
    long long v38 = *(void (**)(uint64_t, void, uint64_t, char *))(v3 + 56);
    unint64_t v108 = v3 + 56;
    v107 = v38;
    v38((uint64_t)v14, 0, 1, v2);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C04338EC(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v14, v35);
    v126 = (void (*)(char *, void, uint64_t, void *))v33;
    uint64_t v125 = v34;
    v33(v35, 0, 1, (uint64_t)v36);
    unint64_t v39 = *(void *)(v93 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources);
    if (v39 >> 62) {
      goto LABEL_24;
    }
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v40)
    {
      while (1)
      {
        uint64_t v129 = MEMORY[0x1E4FBC860];
        uint64_t result = (void *)sub_1C05F6B44(0, v40 & ~(v40 >> 63), 0);
        if (v40 < 0) {
          break;
        }
        v119 = v36;
        uint64_t v42 = 0;
        uint64_t v43 = v129;
        unint64_t v103 = v39 & 0xC000000000000001;
        uint64_t v116 = 2 * v118;
        v102 = (unsigned int (**)(uint64_t, uint64_t, char *))(v3 + 48);
        v95 = (void (**)(char *, char *, char *))(v3 + 32);
        v94 = (void (**)(uint64_t, char *))(v3 + 8);
        uint64_t v44 = MEMORY[0x1E4FBB1A0];
        long long v99 = xmmword_1C1536B40;
        long long v98 = xmmword_1C1536B50;
        v105 = v2;
        v104 = v37;
        unint64_t v101 = v39;
        uint64_t v100 = v40;
        while (v40 != v42)
        {
          uint64_t v121 = v42;
          uint64_t v120 = v43;
          if (v103)
          {
            uint64_t v45 = (void *)MEMORY[0x1C18C7CB0](v42, v39);
          }
          else
          {
            uint64_t v45 = *(void **)(v39 + 8 * v42 + 32);
            swift_retain();
          }
          uint64_t v46 = v119;
          uint64_t v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = v110;
          uint64_t v48 = (void *)(v47 + v113);
          uint64_t v49 = v45[2];
          unint64_t v50 = v45[3];
          sub_1C025F810(v49, v50);
          sub_1C0436838(0x20746E65746E6F43, 0xEC00000065707954, v49, v50, (char *)v48);
          v126((char *)v48, 0, 1, v46);
          uint64_t v51 = (char *)v48 + v118;
          uint64_t v52 = v45[5];
          *(void *)&long long v128 = v45[4];
          *((void *)&v128 + 1) = v52;
          sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
          swift_bridgeObjectRetain_n();
          if (swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
            uint64_t v53 = &v51[*((int *)v46 + 6)];
            *(void *)uint64_t v53 = v130;
            uint64_t v54 = v124;
            swift_storeEnumTagMultiPayload();
            v123(v53, 0, 1, v54);
            *(_OWORD *)uint64_t v51 = v99;
            *((void *)v51 + 2) = 0;
            *((void *)v51 + 3) = 0;
            uint64_t v55 = &v51[*((int *)v46 + 7)];
            *(void *)uint64_t v55 = 0;
            *((void *)v55 + 1) = 0;
            v55[16] = -1;
          }
          else
          {
            *((void *)&v131 + 1) = v44;
            v132 = (char **)MEMORY[0x1E4FBB208];
            long long v130 = v128;
            sub_1BFC773DC(&v130, (uint64_t)v127);
            unint64_t v56 = __swift_project_boxed_opaque_existential_1(v127, v127[3]);
            uint64_t v57 = *v56;
            uint64_t v58 = v56[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v59 = (uint64_t)v96;
            void *v96 = v57;
            *(void *)(v59 + 8) = v58;
            uint64_t v46 = v119;
            uint64_t v60 = v124;
            swift_storeEnumTagMultiPayload();
            v123((char *)v59, 0, 1, v60);
            *(_OWORD *)uint64_t v51 = v99;
            *((void *)v51 + 2) = 0;
            *((void *)v51 + 3) = 0;
            sub_1C025F820(v59, (uint64_t)&v51[*((int *)v46 + 6)]);
            v61 = &v51[*((int *)v46 + 7)];
            *(void *)v61 = 0;
            *((void *)v61 + 1) = 0;
            v61[16] = -1;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
          }
          uint64_t v62 = v106;
          swift_bridgeObjectRelease();
          v126(v51, 0, 1, v46);
          long long v37 = (void (*)(char *, uint64_t, char *))((char *)v48 + v116);
          v63 = v46;
          v64 = v105;
          v65 = v104;
          v104((char *)v62, (uint64_t)v45 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v105);
          v107(v62, 0, 1, v64);
          uint64_t v66 = v115;
          sub_1C0025B10(v62, v115);
          if ((*v102)(v66, 1, v64) == 1)
          {
            sub_1C002F608(v62);
            v123((char *)v37 + *((int *)v63 + 6), 1, 1, v124);
            *(_OWORD *)long long v37 = v98;
            *((void *)v37 + 2) = 0;
            *((void *)v37 + 3) = 0;
            v67 = (char *)v37 + *((int *)v63 + 7);
            *(void *)v67 = 0;
            *((void *)v67 + 1) = 0;
            v67[16] = -1;
          }
          else
          {
            v68 = v97;
            v65(v97, v66, v64);
            sub_1C002F608(v62);
            v69 = (char *)v37 + *((int *)v63 + 6);
            (*v95)(v69, v68, v64);
            uint64_t v70 = v124;
            swift_storeEnumTagMultiPayload();
            v123(v69, 0, 1, v70);
            *(_OWORD *)long long v37 = v98;
            *((void *)v37 + 2) = 0;
            *((void *)v37 + 3) = 0;
            v71 = (char *)v37 + *((int *)v63 + 7);
            *(void *)v71 = 0;
            *((void *)v71 + 1) = 0;
            v71[16] = -1;
            (*v94)(v66, v64);
          }
          unint64_t v39 = v101;
          uint64_t v40 = v100;
          v126((char *)v37, 0, 1, v63);
          sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, v47, v133);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          *((void *)&v131 + 1) = &type metadata for FormatInspectionGroup;
          v132 = &off_1F1BDEC90;
          uint64_t v72 = swift_allocObject();
          *(void *)&long long v130 = v72;
          swift_release();
          *(void *)(v72 + 48) = v134;
          long long v73 = v133[1];
          *(_OWORD *)(v72 + 16) = v133[0];
          *(_OWORD *)(v72 + 32) = v73;
          uint64_t v129 = v120;
          unint64_t v3 = *(void *)(v120 + 16);
          unint64_t v74 = *(void *)(v120 + 24);
          if (v3 >= v74 >> 1) {
            sub_1C05F6B44(v74 > 1, v3 + 1, 1);
          }
          uint64_t v42 = v121 + 1;
          uint64_t v75 = *((void *)&v131 + 1);
          uint64_t v76 = (uint64_t)v132;
          uint64_t v77 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v130, *((uint64_t *)&v131 + 1));
          uint64_t v36 = &v90;
          __n128 v78 = MEMORY[0x1F4188790](v77);
          uint64_t v2 = (char *)&v90 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v80 + 16))(v2, v78);
          sub_1BFEA7C90(v3, (uint64_t)v2, &v129, v75, v76);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v130);
          uint64_t v43 = v129;
          uint64_t v44 = MEMORY[0x1E4FBB1A0];
          if (v40 == v42)
          {
            swift_bridgeObjectRelease();
            uint64_t v36 = v119;
            uint64_t v81 = v116;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1C15204BC();
        if (!v40) {
          goto LABEL_25;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v81 = 2 * v118;
      uint64_t v43 = MEMORY[0x1E4FBC860];
LABEL_26:
      v83 = (void *)inited;
      v84 = (void *)((char *)v90 + v81);
      uint64_t v85 = sub_1C0233FC8(v43);
      swift_bridgeObjectRelease();
      v86 = sub_1C131B79C(v85);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x756F532061746144, 0xEC00000073656372, (uint64_t)v86, 0, 0, (char *)v84);
      v126((char *)v84, 0, 1, v36);
      sub_1C09BCFA4(0x726F635320786F42, 0xE900000000000065, 0, 0, v91, &v130);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v83[7] = &type metadata for FormatInspectionGroup;
      v83[8] = &off_1F1BDEC90;
      uint64_t v87 = swift_allocObject();
      v83[4] = v87;
      *(void *)(v87 + 48) = v132;
      long long v88 = v131;
      *(_OWORD *)(v87 + 16) = v130;
      *(_OWORD *)(v87 + 32) = v88;
      v89 = sub_1C131B79C((uint64_t)v83);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      swift_release();
      return v89;
    }
  }
  else
  {
    uint64_t v82 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v82);
  }
  return result;
}

unint64_t sub_1C0A472D0()
{
  unint64_t result = qword_1EA1A29C0;
  if (!qword_1EA1A29C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A29C0);
  }
  return result;
}

void sub_1C0A47324(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A472D0();
    unint64_t v7 = a3(a1, &type metadata for SportsBoxScoreDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0A4738C()
{
  return 8;
}

void *sub_1C0A47398(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0A473A4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFF5D74C(255, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C025F0C0(a2, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0A47464()
{
  return type metadata accessor for SportsBoxScoreDataVisualization();
}

uint64_t type metadata accessor for SportsBoxScoreDataVisualization()
{
  uint64_t result = qword_1EB8693B0;
  if (!qword_1EB8693B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0A474B8()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SportsBoxScoreDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsBoxScoreDataVisualization);
}

uint64_t dispatch thunk of SportsBoxScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsBoxScoreDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for SportsBoxScoreDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A4769CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsBoxScoreDataVisualization.CodingKeys()
{
  return &type metadata for SportsBoxScoreDataVisualization.CodingKeys;
}

unint64_t sub_1C0A476D8()
{
  unint64_t result = qword_1EA1A29D8;
  if (!qword_1EA1A29D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A29D8);
  }
  return result;
}

unint64_t sub_1C0A47730()
{
  unint64_t result = qword_1EA1A29E0;
  if (!qword_1EA1A29E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A29E0);
  }
  return result;
}

unint64_t sub_1C0A47788()
{
  unint64_t result = qword_1EA1A29E8;
  if (!qword_1EA1A29E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A29E8);
  }
  return result;
}

uint64_t sub_1C0A477DC()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0A47828()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A47870()
{
  sub_1C0A48F84(0, qword_1EA1A2A38, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = &v7[-v2];
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_editor];
  sub_1C09C871C((uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile], (uint64_t)v8, (uint64_t (*)(void))sub_1C017F2CC);
  sub_1C09C871C((uint64_t)v8, (uint64_t)v7, (uint64_t (*)(void))sub_1C017F2CC);
  swift_retain();
  sub_1C0A0C01C(v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
  sub_1C09C8054(v4, (uint64_t)v7, (uint64_t)v3);
  uint64_t v5 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight];
  swift_beginAccess();
  sub_1C0A48D30((uint64_t)v3, v5);
  swift_endAccess();
  objc_msgSend(v0, sel_setNeedsLayout);
  return sub_1C0A48DC4((uint64_t)v3);
}

char *sub_1C0A479E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile];
  sub_1C017F2B4(v19);
  sub_1C09C871C((uint64_t)v19, v5, (uint64_t (*)(void))sub_1C017F2CC);
  unsigned int v6 = &v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
  *(void *)unsigned int v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel;
  sub_1C151A4AC();
  uint64_t v8 = v2;
  *(void *)&v2[v7] = sub_1C151A47C();
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont;
  *(void *)&v8[v9] = objc_msgSend(self, sel_monospacedSystemFontOfSize_weight_, 10.0, *MEMORY[0x1E4FB09E0]);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor;
  *(void *)&v8[v10] = objc_msgSend(self, sel_whiteColor);
  uint64_t v11 = &v8[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight];
  uint64_t v12 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_editor] = a1;
  swift_retain();

  v18.receiver = v8;
  v18.super_class = ObjectType;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel];
  uint64_t v15 = v13;
  objc_msgSend(v14, sel_setTextAlignment_, 1);
  objc_msgSend(v14, sel_setHidden_, 1);
  objc_msgSend(v14, sel_setLineBreakMode_, 4);
  objc_msgSend(v15, sel_addSubview_, v14);
  uint64_t v16 = (void *)sub_1C151A49C();
  swift_allocObject();
  swift_unknownObjectWeakInit();

  swift_release();
  swift_release();
  return v15;
}

void sub_1C0A47C50(uint64_t a1)
{
  sub_1C0A48F84(0, qword_1EA1A2A38, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C18C9C60](a1 + 16);
  if (v9)
  {
    uint64_t v10 = (char *)v9;
    uint64_t v11 = v9 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight;
    swift_beginAccess();
    sub_1C0A48E90(v11, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {

      sub_1C0A48DC4((uint64_t)v4);
    }
    else
    {
      sub_1C09C871C((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugFormatDebuggerSourceHighlight);
      uint64_t v12 = &v10[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
      swift_beginAccess();
      uint64_t v13 = *(void (**)(char *, uint64_t))v12;
      if (*(void *)v12)
      {
        swift_endAccess();
        uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel];
        swift_retain();
        v13(v8, v14);
        sub_1BFC3E5C0((uint64_t)v13);
        sub_1C0A48F24((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugFormatDebuggerSourceHighlight);
      }
      else
      {
        sub_1C0A48F24((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugFormatDebuggerSourceHighlight);
        swift_endAccess();
      }
    }
  }
}

void sub_1C0A47EEC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for FormatDebuggerContext();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A48F84(0, qword_1EA1A2A38, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, MEMORY[0x1E4FBB718]);
  *(void *)&double v7 = MEMORY[0x1F4188790](v6 - 8).n128_u64[0];
  uint64_t v9 = (void **)((char *)&v59 - v8);
  v63.receiver = v1;
  v63.super_class = ObjectType;
  objc_msgSendSuper2(&v63, sel_layoutSubviews, v7);
  objc_msgSend(v1, sel_setHidden_, 0);
  uint64_t v10 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight];
  swift_beginAccess();
  sub_1C0A48E90(v10, (uint64_t)v9);
  uint64_t v11 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) == 1)
  {
    objc_msgSend(v1, sel_setHidden_, 1);
    return;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C09C871C((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
      sub_1C0A488B0();
      uint64_t v15 = v14;
      objc_msgSend(v13, sel_appendAttributedString_, v14);

      sub_1C065BEBC();
      uint64_t v61 = 32;
      unint64_t v62 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v60 = v61;
      sub_1C0A48F84(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1527210;
      uint64_t v17 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
      objc_super v18 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor];
      uint64_t v19 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      *(void *)(inited + 40) = v18;
      uint64_t v20 = (void *)*MEMORY[0x1E4FB06F8];
      *(void *)(inited + 64) = v19;
      *(void *)(inited + 72) = v20;
      uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont];
      *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      *(void *)(inited + 80) = v21;
      swift_bridgeObjectRetain();
      id v22 = v17;
      id v23 = v18;
      id v24 = v20;
      id v25 = v21;
      sub_1BFF991DC(inited);
      id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v27 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BFF9A290();
      uint64_t v28 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);
      swift_bridgeObjectRelease();

      objc_msgSend(v13, sel_appendAttributedString_, v29);
      uint64_t v30 = self;
      id v31 = v13;
      id v32 = objc_msgSend(v30, sel_systemBlueColor);
      sub_1C0A486C0(v13, v32);

      sub_1C0A48F24((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
      return;
    }
    id v56 = objc_msgSend(self, sel_systemBlueColor);
    id v57 = objc_msgSend(v56, sel_colorWithAlphaComponent_, 0.3);
  }
  else
  {
    uint64_t v33 = *v9;
    if (*v9)
    {
      id v34 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      id v35 = v33;
      id v36 = objc_msgSend(v34, sel_init);
      sub_1C0A488B0();
      long long v38 = v37;
      objc_msgSend(v36, sel_appendAttributedString_, v37);

      sub_1C0A49168(v33);
      uint64_t v61 = 32;
      unint64_t v62 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v60 = v61;
      sub_1C0A48F84(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
      uint64_t v39 = swift_initStackObject();
      *(_OWORD *)(v39 + 16) = xmmword_1C1527210;
      uint64_t v40 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(v39 + 32) = *MEMORY[0x1E4FB0700];
      long long v41 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor];
      uint64_t v42 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      *(void *)(v39 + 40) = v41;
      uint64_t v43 = (void *)*MEMORY[0x1E4FB06F8];
      *(void *)(v39 + 64) = v42;
      *(void *)(v39 + 72) = v43;
      uint64_t v44 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont];
      *(void *)(v39 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      *(void *)(v39 + 80) = v44;
      swift_bridgeObjectRetain();
      id v45 = v40;
      id v46 = v41;
      id v47 = v43;
      id v48 = v44;
      sub_1BFF991DC(v39);
      id v49 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      unint64_t v50 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BFF9A290();
      uint64_t v51 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v52 = objc_msgSend(v49, sel_initWithString_attributes_, v50, v51);
      swift_bridgeObjectRelease();

      objc_msgSend(v36, sel_appendAttributedString_, v52);
      uint64_t v53 = self;
      id v54 = v36;
      id v55 = objc_msgSend(v53, sel_systemRedColor);
      sub_1C0A486C0(v36, v55);

      return;
    }
    id v56 = objc_msgSend(self, sel_systemRedColor);
    id v57 = objc_msgSend(v56, sel_colorWithAlphaComponent_, 0.3);
  }
  id v58 = v57;
  objc_msgSend(v1, sel_setBackgroundColor_, v58);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel], sel_setHidden_, 1);
}

void sub_1C0A486C0(void *a1, id a2)
{
  id v5 = objc_msgSend(a2, sel_colorWithAlphaComponent_, 0.3);
  objc_msgSend(v2, sel_setBackgroundColor_, v5);

  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel];
  objc_msgSend(v6, sel_setHidden_, 1);
  if (a1)
  {
    id v13 = a1;
    objc_msgSend(v6, sel_setHidden_, 0);
    objc_msgSend(v6, sel_setBackgroundColor_, a2);
    objc_msgSend(v6, sel_setAttributedText_, v13);
    objc_msgSend(v6, sel_sizeToFit);
    objc_msgSend(v2, sel_bounds);
    double v7 = CGRectGetWidth(v15) * 0.5;
    objc_msgSend(v2, sel_bounds);
    double Width = CGRectGetWidth(v16);
    objc_msgSend(v6, sel_frame);
    double v9 = Width - CGRectGetWidth(v17);
    if (v7 <= v9) {
      double v7 = v9;
    }
    objc_msgSend(v6, sel_frame);
    double v10 = CGRectGetWidth(v18);
    objc_msgSend(v2, sel_bounds);
    double v11 = CGRectGetWidth(v19) * 0.5;
    if (v11 >= v10) {
      double v11 = v10;
    }
    double v12 = v11 + 8.0;
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v6, sel_setFrame_, v7 + -8.0, 0.0, v12, CGRectGetHeight(v20));
  }
}

void sub_1C0A488B0()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(self, sel_systemImageNamed_, v1);

  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont);
    id v4 = objc_msgSend(self, sel_configurationWithFont_, v3);
    id v5 = objc_msgSend(v2, sel_imageWithConfiguration_, v4);

    id v6 = objc_msgSend(self, sel_textAttachmentWithImage_, v5);
    id v7 = objc_msgSend(self, sel_attributedStringWithAttachment_, v6);
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor);
    uint64_t v13 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    v12[0] = v8;
    id v9 = v8;
    double v10 = (void *)sub_1C151F5FC();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v13 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    v12[0] = v3;
    id v11 = v3;
    sub_1C151F5FC();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C0A48BE8()
{
  return type metadata accessor for DebugFormatDebuggerSourceHighlightView();
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceHighlightView()
{
  uint64_t result = qword_1EA1A2A28;
  if (!qword_1EA1A2A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0A48C3C()
{
  sub_1C0A48F84(319, qword_1EA1A2A38, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C0A48D30(uint64_t a1, uint64_t a2)
{
  sub_1C0A48F84(0, qword_1EA1A2A38, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A48DC4(uint64_t a1)
{
  sub_1C0A48F84(0, qword_1EA1A2A38, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0A48E50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0A48E88()
{
  sub_1C0A47C50(v0);
}

uint64_t sub_1C0A48E90(uint64_t a1, uint64_t a2)
{
  sub_1C0A48F84(0, qword_1EA1A2A38, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A48F24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0A48F84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0A48FE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile];
  sub_1C017F2B4(v9);
  sub_1C09C871C((uint64_t)v9, v2, (uint64_t (*)(void))sub_1C017F2CC);
  uint64_t v3 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel;
  sub_1C151A4AC();
  *(void *)&v1[v4] = sub_1C151A47C();
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont;
  *(void *)&v1[v5] = objc_msgSend(self, sel_monospacedSystemFontOfSize_weight_, 10.0, *MEMORY[0x1E4FB09E0]);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor;
  *(void *)&v1[v6] = objc_msgSend(self, sel_whiteColor);
  uint64_t v7 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight];
  uint64_t v8 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0A49168(void *a1)
{
  uint64_t v13 = a1;
  id v2 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A5FA0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v11, (uint64_t)v8);
    uint64_t v3 = v9;
    uint64_t v4 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    v8[0] = a1;
    id v6 = a1;
    return sub_1C151E6AC();
  }
  return v5;
}

uint64_t FeedActivityIndicatorCoverStyler.indicatorStyle.getter()
{
  return *(void *)v0;
}

id FeedActivityIndicatorCoverStyler.indicatorColor.getter()
{
  return *(id *)(v0 + 8);
}

id FeedActivityIndicatorCoverStyler.backgroundColor.getter()
{
  return *(id *)(v0 + 16);
}

id sub_1C0A4928C()
{
  return *(id *)(v0 + 8);
}

id sub_1C0A49294()
{
  return *(id *)(v0 + 16);
}

void sub_1C0A4929C()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_labelColor);
  id v2 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  id v3 = objc_msgSend(v0, sel_systemBackgroundColor);
  id v4 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v2, v3);

  qword_1EB8611F8 = 100;
  unk_1EB861200 = v1;
  qword_1EB861208 = (uint64_t)v4;
}

id static FeedActivityIndicatorCoverStyler.feedBackground.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB862CD0 != -1) {
    swift_once();
  }
  id v2 = (void *)unk_1EB861200;
  uint64_t v3 = qword_1EB861208;
  id v6 = (id)qword_1EB861208;
  *a1 = qword_1EB8611F8;
  a1[1] = v2;
  a1[2] = v3;
  id v4 = v2;
  return v6;
}

void *initializeBufferWithCopyOfBuffer for FeedActivityIndicatorCoverStyler(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = (void *)a2[2];
  a1[2] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void *assignWithCopy for FeedActivityIndicatorCoverStyler(void *a1, void *a2)
{
  *a1 = *a2;
  id v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for FeedActivityIndicatorCoverStyler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  id v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for FeedActivityIndicatorCoverStyler()
{
  return &type metadata for FeedActivityIndicatorCoverStyler;
}

uint64_t FormatTranslate.init(x:y:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FormatRange();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a3, a1, v6);
  uint64_t v8 = type metadata accessor for FormatTranslate();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(a3 + *(int *)(v8 + 52), a2, v6);
}

uint64_t type metadata accessor for FormatTranslate()
{
  return swift_getGenericMetadata();
}

uint64_t FormatTranslate.x.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatRange();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FormatTranslate.y.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t v5 = type metadata accessor for FormatRange();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t static FormatTranslate.== infix(_:_:)()
{
  if (static FormatRange.== infix(_:_:)())
  {
    type metadata accessor for FormatTranslate();
    char v0 = static FormatRange.== infix(_:_:)();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1C0A49754(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0A49790(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0A49810@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FormatTranslate.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_1C0A49834(void *a1, uint64_t a2)
{
  return FormatTranslate.encode(to:)(a1, a2);
}

uint64_t sub_1C0A4984C()
{
  return static FormatTranslate.== infix(_:_:)();
}

uint64_t sub_1C0A4985C()
{
  uint64_t result = type metadata accessor for FormatRange();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0A498F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  uint64_t v11 = ((v7 + v8) & ~v8) + v7;
  uint64_t v12 = v11 + v8;
  unint64_t v13 = ((v11 + v8) & ~v8) + v11;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    CGRect v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, v5);
    v17((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
    unint64_t v18 = ((unint64_t)a2 + v12) & v9;
    v17((uint64_t *)(((unint64_t)v4 + v12) & v9), (uint64_t *)v18, v5);
    v17((uint64_t *)((v10 + (((unint64_t)v4 + v12) & v9)) & v9), (uint64_t *)((v10 + v18) & v9), v5);
  }
  return v4;
}

uint64_t sub_1C0A49A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(a1, v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + v5;
  uint64_t v7 = v6 + a1;
  v10(v7 & ~v5, v3);
  uint64_t v8 = (v7 + (v6 & ~v5)) & ~v5;
  v10(v8, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)((v6 + v8) & ~v5, v3);
}

uint64_t sub_1C0A49B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v8 + v9;
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  uint64_t v11 = ((v8 + v9) & ~v9) + v8;
  uint64_t v12 = (v9 + a1 + v11) & ~v9;
  uint64_t v13 = (v9 + a2 + v11) & ~v9;
  v7(v12, v13, v5);
  v7((v10 + v12) & ~v9, (v10 + v13) & ~v9, v5);
  return a1;
}

uint64_t sub_1C0A49C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v8 + v9;
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  uint64_t v11 = ((v8 + v9) & ~v9) + v8;
  uint64_t v12 = (v9 + a1 + v11) & ~v9;
  uint64_t v13 = (v9 + a2 + v11) & ~v9;
  v7(v12, v13, v5);
  v7((v10 + v12) & ~v9, (v10 + v13) & ~v9, v5);
  return a1;
}

uint64_t sub_1C0A49D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v8 + v9;
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  uint64_t v11 = ((v8 + v9) & ~v9) + v8;
  uint64_t v12 = (v9 + a1 + v11) & ~v9;
  uint64_t v13 = (v9 + a2 + v11) & ~v9;
  v7(v12, v13, v5);
  v7((v10 + v12) & ~v9, (v10 + v13) & ~v9, v5);
  return a1;
}

uint64_t sub_1C0A49E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v8 + v9;
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  uint64_t v11 = ((v8 + v9) & ~v9) + v8;
  uint64_t v12 = (v9 + a1 + v11) & ~v9;
  uint64_t v13 = (v9 + a2 + v11) & ~v9;
  v7(v12, v13, v5);
  v7((v10 + v12) & ~v9, (v10 + v13) & ~v9, v5);
  return a1;
}

uint64_t sub_1C0A49F10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v9 = ((((v6 + v8) & ~v8) + v6 + v8) & ~v8) + ((v6 + v8) & ~v8) + v6;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v12 = ((v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_19;
  }
LABEL_11:
  int v13 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v13 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v9 | v13) + 1;
}

void sub_1C0A4A088(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((*(void *)(v6 + 64) + v8) & ~v8) + *(void *)(v6 + 64);
  size_t v10 = ((v9 + v8) & ~v8) + v9;
  BOOL v11 = a3 >= v7;
  unsigned int v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v14 = ~v7 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C0A4A2BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v18 = *(void (**)(void))(v6 + 56);
        v18();
      }
      return;
  }
}

ValueMetadata *type metadata accessor for A18_V2()
{
  return &type metadata for A18_V2;
}

uint64_t sub_1C0A4A2F4(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0A4D270(0, &qword_1EA1A2B70, (uint64_t (*)(void))sub_1C0A4D21C, (uint64_t)&type metadata for A18_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A4D21C();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0A4D2D8(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0A4A53C(uint64_t a1)
{
  unint64_t v2 = sub_1C0A4D21C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A4A578(uint64_t a1)
{
  unint64_t v2 = sub_1C0A4D21C();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0A4A5B4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A4CF6C(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0A4A5FC(void *a1)
{
  return sub_1C0A4A2F4(a1);
}

uint64_t sub_1C0A4A614()
{
  sub_1C0A4CC08();
  return sub_1C151798C();
}

uint64_t sub_1C0A4A690@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0A4D270(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0A4A74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  id v46 = a3;
  uint64_t v49 = sub_1C151635C();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  int v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v58 = a1;
  sub_1BFF1AFA4(a1, v50, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  id v54 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v47 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  v67 = &type metadata for A18_V2;
  unint64_t v20 = sub_1C0186044();
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v22;
  uint64_t v63 = 95;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 45;
  unint64_t v62 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  id v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v47;
  *id v26 = v48;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v65, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  uint64_t v29 = (uint64_t)v53;
  sub_1BFF2389C(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v30, 0, 1, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  sub_1BFFFC630(v17, v18);
  v67 = &type metadata for A18_V2;
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  uint64_t v31 = v29;
  sub_1BFF1AFA4(v55, v29, (uint64_t (*)(void))v54);
  sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v33 = (void *)(v32 + 16);
  swift_beginAccess();
  id v34 = *(void **)(v32 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v32 + 16) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v34 = sub_1BFFB83AC(0, v34[2] + 1, 1, v34);
    *uint64_t v33 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    id v34 = sub_1BFFB83AC((void *)(v36 > 1), v37 + 1, 1, v34);
    *uint64_t v33 = v34;
  }
  v34[2] = v37 + 1;
  long long v38 = &v34[2 * v37];
  v38[4] = sub_1C064667C;
  v38[5] = 0;
  swift_endAccess();
  uint64_t v39 = v69;
  uint64_t v40 = sub_1C001E608((uint64_t)&unk_1F1B83338, 0, 0, v32, 4, 0, 0, 0);
  if (v39)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v31, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  }
  else
  {
    uint64_t v42 = v40;
    swift_release();
    uint64_t v43 = type metadata accessor for A18_V2.Bound();
    uint64_t v44 = v46;
    v46[3] = v43;
    v44[4] = sub_1C0A4D2D8(&qword_1EA1A2AD0, (void (*)(uint64_t))type metadata accessor for A18_V2.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v65, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v31, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

uint64_t sub_1C0A4ADC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v26 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  long long v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A18_V2.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v33);
  sub_1BFC66384(v9 + 56, (uint64_t)v32);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v33, inited + 16);
  sub_1BFC773DC(v32, inited + 56);
  *(double *)(inited + 96) = v11;
  v31[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v31, v37);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  v29[2] = v2;
  v29[3] = v37;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C0A4CB8C, (uint64_t)v29, v13, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  uint64_t v15 = *MEMORY[0x1E4FAB6D8];
  uint64_t v16 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v26);
  uint64_t v28 = v14;
  sub_1C0A4CCC0(0, &qword_1EA1A2AF0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v26 = sub_1C1517BEC();
  uint64_t v17 = sub_1C1517BFC();
  long long v25 = v33;
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  *(void *)&long long v33 = v14;
  *(void *)&v32[0] = v36;
  MEMORY[0x1F4188790](v17);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v33 = v20;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v21 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v27;
  unsigned char *v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((void *)v22 + 3) = v18;
  *((void *)v22 + 4) = v19;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  *((void *)v22 + 5) = v21;
  *((void *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1C0A4B250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0A4B328(uint64_t a1, uint64_t a2)
{
  sub_1C0A4D270(0, &qword_1EA1A2B08, (uint64_t (*)(void))sub_1C0A4CBB4, (uint64_t)&type metadata for A18_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 18;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  double v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0A4CCC0(0, &qword_1EA1A2B10, MEMORY[0x1E4FAB6F0]);
  sub_1C0A4CC7C(&qword_1EA1A2B18, &qword_1EA1A2B10, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0A4B514(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  uint64_t v22 = sub_1C0A4CBB4;
  sub_1C0A4D270(0, &qword_1EA1A2B08, (uint64_t (*)(void))sub_1C0A4CBB4, (uint64_t)&type metadata for A18_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (void *)((char *)v21 - v6);
  uint64_t v25 = a1;
  uint64_t v8 = sub_1C151729C();
  uint64_t v9 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, *MEMORY[0x1E4FAB4E8], v8);
  *uint64_t v7 = v9;
  double v11 = *(void (**)(uint64_t *, void, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E4FAB940], v4);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0A4CCC0(0, &qword_1EA1A2B20, MEMORY[0x1E4FAB4D0]);
  v21[1] = v13;
  sub_1C0A4CC7C(&qword_1EA1A2B28, &qword_1EA1A2B20, v12);
  sub_1C151738C();
  uint64_t v14 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v14(v7, v4);
  uint64_t v25 = a1;
  v11(v7, *MEMORY[0x1E4FAB9E0], v4);
  sub_1C0A4CD44();
  sub_1C0A4D270(0, &qword_1EA1A2B38, (uint64_t (*)(void))v22, (uint64_t)&type metadata for A18_V2.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E4FAB638], v16);
  uint64_t v24 = v23;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v7, v4);
}

uint64_t sub_1C0A4B880(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C0A4D270(0, &qword_1EA1A2B08, (uint64_t (*)(void))sub_1C0A4CBB4, (uint64_t)&type metadata for A18_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 9;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  double v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0A4CCC0(0, &qword_1EA1A2B20, MEMORY[0x1E4FAB4D0]);
  sub_1C0A4CC7C(&qword_1EA1A2B28, &qword_1EA1A2B20, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 9;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C0A4BB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  double v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A4D270(0, &qword_1EA1A2B08, (uint64_t (*)(void))sub_1C0A4CBB4, (uint64_t)&type metadata for A18_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *double v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0A4CCC0(0, &qword_1EA1A2B20, MEMORY[0x1E4FAB4D0]);
  sub_1C0A4CC7C(&qword_1EA1A2B28, &qword_1EA1A2B20, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C0A4C0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  double v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A4D270(0, &qword_1EA1A2B08, (uint64_t (*)(void))sub_1C0A4CBB4, (uint64_t)&type metadata for A18_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *double v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0A4CCC0(0, &qword_1EA1A2B20, MEMORY[0x1E4FAB4D0]);
  sub_1C0A4CC7C(&qword_1EA1A2B28, &qword_1EA1A2B20, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C0A4C6C8@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V2.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0A4C7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0A4A74C(a1, a2, a3);
}

uint64_t sub_1C0A4C7D0()
{
  return sub_1C12BC400();
}

unint64_t sub_1C0A4C7E0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0A4C810();
  unint64_t result = sub_1C0A4C864();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0A4C810()
{
  unint64_t result = qword_1EA1A2AC0;
  if (!qword_1EA1A2AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2AC0);
  }
  return result;
}

unint64_t sub_1C0A4C864()
{
  unint64_t result = qword_1EA1A2AC8;
  if (!qword_1EA1A2AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2AC8);
  }
  return result;
}

uint64_t type metadata accessor for A18_V2.Bound()
{
  uint64_t result = qword_1EA1A2AD8;
  if (!qword_1EA1A2AD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0A4C904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0A4C918);
}

uint64_t sub_1C0A4C918(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0A4C9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0A4C9DC);
}

void *sub_1C0A4C9DC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0A4CA84()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0A4CB34(uint64_t a1)
{
  uint64_t result = sub_1C0A4D2D8(&qword_1EA1A2AE8, (void (*)(uint64_t))type metadata accessor for A18_V2.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0A4CB8C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0A4B250(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C0A4CBAC(uint64_t a1)
{
  return sub_1C0A4B328(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0A4CBB4()
{
  unint64_t result = qword_1EA1A2AF8;
  if (!qword_1EA1A2AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2AF8);
  }
  return result;
}

unint64_t sub_1C0A4CC08()
{
  unint64_t result = qword_1EA1A2B00;
  if (!qword_1EA1A2B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B00);
  }
  return result;
}

uint64_t sub_1C0A4CC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0A4C6C8(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0A4CC64()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A4CC74(uint64_t a1)
{
  return sub_1C0A4B514(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0A4CC7C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0A4CCC0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0A4CCC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V2.Layout;
    v8[1] = &type metadata for A18_V2.Layout.Attributes;
    _OWORD v8[2] = sub_1C0A4CBB4();
    void v8[3] = sub_1C0A4CC08();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0A4CD44()
{
  if (!qword_1EA1A2B30)
  {
    sub_1C0A4D270(255, &qword_1EA1A2B38, (uint64_t (*)(void))sub_1C0A4CBB4, (uint64_t)&type metadata for A18_V2.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2B30);
    }
  }
}

uint64_t sub_1C0A4CDD4(uint64_t a1)
{
  return sub_1C0A4B880(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0A4CDDC(uint64_t a1)
{
  return sub_1C0A4BB24(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0A4CDE4(uint64_t a1)
{
  return sub_1C0A4C0F0(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V2.Layout.Attributes()
{
  return &type metadata for A18_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V2.Layout()
{
  return &type metadata for A18_V2.Layout;
}

unint64_t sub_1C0A4CE10()
{
  unint64_t result = qword_1EA1A2B40;
  if (!qword_1EA1A2B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B40);
  }
  return result;
}

unint64_t sub_1C0A4CE68()
{
  unint64_t result = qword_1EA1A2B48;
  if (!qword_1EA1A2B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B48);
  }
  return result;
}

unint64_t sub_1C0A4CEC0()
{
  unint64_t result = qword_1EA1A2B50;
  if (!qword_1EA1A2B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B50);
  }
  return result;
}

unint64_t sub_1C0A4CF18()
{
  unint64_t result = qword_1EA1A2B58;
  if (!qword_1EA1A2B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B58);
  }
  return result;
}

uint64_t sub_1C0A4CF6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0A4D270(0, &qword_1EA1A2B60, (uint64_t (*)(void))sub_1C0A4D21C, (uint64_t)&type metadata for A18_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A4D21C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0A4D2D8(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0A4D21C()
{
  unint64_t result = qword_1EA1A2B68;
  if (!qword_1EA1A2B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B68);
  }
  return result;
}

void sub_1C0A4D270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0A4D2D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V2.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A4D3ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0A4D428()
{
  unint64_t result = qword_1EA1A2B78;
  if (!qword_1EA1A2B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B78);
  }
  return result;
}

unint64_t sub_1C0A4D480()
{
  unint64_t result = qword_1EA1A2B80;
  if (!qword_1EA1A2B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B80);
  }
  return result;
}

unint64_t sub_1C0A4D4D8()
{
  unint64_t result = qword_1EA1A2B88;
  if (!qword_1EA1A2B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B88);
  }
  return result;
}

BOOL static FormatTextNodeAlternativeLogic.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        return 0;
      }
      uint64_t v14 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      char v15 = *(unsigned char *)(v14 + 24);
      uint64_t v16 = *(void *)(v14 + 16);
      uint64_t v17 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v18 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      char v19 = *(unsigned char *)(v17 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v20 = sub_1C00DE998(v16, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_21;
      }
      LOBYTE(v27) = v15;
      LOBYTE(v26) = v19;
      unint64_t v21 = FormatOperator.rawValue.getter();
      uint64_t v23 = v22;
      if (v21 != FormatOperator.rawValue.getter() || v23 != v24)
      {
        char v25 = sub_1C1520A9C();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (v25 & 1) != 0;
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      return 1;
    case 2uLL:
      if (v3 >> 62 != 2) {
        return 0;
      }
      goto LABEL_12;
    case 3uLL:
      if (v3 >> 62 != 3) {
        return 0;
      }
LABEL_12:
      uint64_t v7 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t v10 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(v10 + 24);
      uint64_t v26 = *(void *)(v10 + 16);
      uint64_t v27 = v8;
      swift_retain();
      swift_retain();
      if (static FormatTextNodeAlternativeLogic.== infix(_:_:)(&v27, &v26))
      {
        uint64_t v26 = v11;
        uint64_t v27 = v9;
LABEL_14:
        char v12 = static FormatTextNodeAlternativeLogic.== infix(_:_:)(&v27, &v26);
        swift_release();
        swift_release();
        if (v12) {
          return 1;
        }
      }
      else
      {
LABEL_21:
        swift_release();
        swift_release();
      }
      return 0;
    default:
      if (v3 >> 62) {
        return 0;
      }
      uint64_t v4 = *(void *)(v2 + 32);
      uint64_t v5 = *(void *)(v3 + 32);
      BOOL v6 = *(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24);
      if (!v6 && (sub_1C1520A9C() & 1) == 0) {
        return 0;
      }
      uint64_t v26 = v5;
      uint64_t v27 = v4;
      swift_retain();
      swift_retain();
      goto LABEL_14;
  }
}

uint64_t sub_1C0A4D7AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeAlternativeLogic.AlternativeLogic.init(from:)(a1, a2);
}

uint64_t sub_1C0A4D7C4(void *a1)
{
  return FormatTextNodeAlternativeLogic.AlternativeLogic.encode(to:)(a1);
}

uint64_t sub_1C0A4D7E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatTextNodeAlternativeLogic.LogicalOperator.init(from:)(a1, a2);
}

uint64_t sub_1C0A4D7FC(void *a1)
{
  return FormatTextNodeAlternativeLogic.LogicalOperator.encode(to:)(a1);
}

uint64_t _s8NewsFeed30FormatTextNodeAlternativeLogicO0D5LinesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_1C00DE998(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    unint64_t v5 = FormatOperator.rawValue.getter();
    uint64_t v7 = v6;
    if (v5 == FormatOperator.rawValue.getter() && v7 == v8) {
      char v9 = 1;
    }
    else {
      char v9 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

BOOL _s8NewsFeed30FormatTextNodeAlternativeLogicO0fG0V2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  unint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C1520A9C(), v6 = 0, (v5 & 1) != 0))
  {
    unint64_t v8 = v3;
    unint64_t v9 = v2;
    return static FormatTextNodeAlternativeLogic.== infix(_:_:)(&v9, &v8);
  }
  return v6;
}

BOOL _s8NewsFeed30FormatTextNodeAlternativeLogicO15LogicalOperatorV2eeoiySbAE_AEtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  unint64_t v8 = v2;
  if (static FormatTextNodeAlternativeLogic.== infix(_:_:)(&v8, &v7))
  {
    unint64_t v7 = v4;
    unint64_t v8 = v3;
    return static FormatTextNodeAlternativeLogic.== infix(_:_:)(&v8, &v7);
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1C0A4D9D8(uint64_t a1)
{
  unint64_t result = sub_1C0A4DA00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A4DA00()
{
  unint64_t result = qword_1EA1A2B90;
  if (!qword_1EA1A2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B90);
  }
  return result;
}

uint64_t sub_1C0A4DA54(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4DDC4(a1, a2, a3, (uint64_t (*)(void))sub_1BFCF10A8, (uint64_t (*)(void))sub_1BFCABD60, (uint64_t (*)(void))sub_1C0A4DA94);
}

unint64_t sub_1C0A4DA94()
{
  unint64_t result = qword_1EA1A2B98;
  if (!qword_1EA1A2B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2B98);
  }
  return result;
}

unint64_t sub_1C0A4DAE8(uint64_t a1)
{
  unint64_t result = sub_1C0A4DB10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A4DB10()
{
  unint64_t result = qword_1EA1A2BA0;
  if (!qword_1EA1A2BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BA0);
  }
  return result;
}

uint64_t sub_1C0A4DB64(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4DDC4(a1, a2, a3, (uint64_t (*)(void))sub_1C08BF568, (uint64_t (*)(void))sub_1C08EC830, (uint64_t (*)(void))sub_1C0A4DBA4);
}

unint64_t sub_1C0A4DBA4()
{
  unint64_t result = qword_1EA1A2BA8;
  if (!qword_1EA1A2BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BA8);
  }
  return result;
}

unint64_t sub_1C0A4DBF8(uint64_t a1)
{
  unint64_t result = sub_1C0A4DC20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A4DC20()
{
  unint64_t result = qword_1EA1A2BB0;
  if (!qword_1EA1A2BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BB0);
  }
  return result;
}

uint64_t sub_1C0A4DC74(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4DDC4(a1, a2, a3, (uint64_t (*)(void))sub_1C08BF4C8, (uint64_t (*)(void))sub_1C08EC884, (uint64_t (*)(void))sub_1C0A4DCB4);
}

unint64_t sub_1C0A4DCB4()
{
  unint64_t result = qword_1EA1A2BB8;
  if (!qword_1EA1A2BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BB8);
  }
  return result;
}

unint64_t sub_1C0A4DD08(uint64_t a1)
{
  unint64_t result = sub_1C0A4DD30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A4DD30()
{
  unint64_t result = qword_1EA1A2BC0;
  if (!qword_1EA1A2BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BC0);
  }
  return result;
}

uint64_t sub_1C0A4DD84(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A4DDC4(a1, a2, a3, (uint64_t (*)(void))sub_1BFCF15CC, (uint64_t (*)(void))sub_1BFD0E0D0, (uint64_t (*)(void))sub_1C0A4DE18);
}

uint64_t sub_1C0A4DDC4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A4DE18()
{
  unint64_t result = qword_1EA1A2BC8;
  if (!qword_1EA1A2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic()
{
  return &type metadata for FormatTextNodeAlternativeLogic;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatFrameExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatFrameExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FormatFrameExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic.TextLines()
{
  return &type metadata for FormatTextNodeAlternativeLogic.TextLines;
}

uint64_t destroy for FormatTextNodeAlternativeLogic.AlternativeLogic()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *_s8NewsFeed30FormatTextNodeAlternativeLogicO16AlternativeLogicVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FormatTextNodeAlternativeLogic.AlternativeLogic(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for FormatTextNodeAlternativeLogic.AlternativeLogic(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic.AlternativeLogic()
{
  return &type metadata for FormatTextNodeAlternativeLogic.AlternativeLogic;
}

uint64_t destroy for FormatTextNodeAlternativeLogic.LogicalOperator()
{
  swift_release();
  return swift_release();
}

void *_s8NewsFeed30FormatTextNodeAlternativeLogicO15LogicalOperatorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FormatTextNodeAlternativeLogic.LogicalOperator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatTextNodeAlternativeLogic.LogicalOperator(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic.LogicalOperator()
{
  return &type metadata for FormatTextNodeAlternativeLogic.LogicalOperator;
}

void sub_1C0A4E1F8()
{
  if (!qword_1EA1A2BD0)
  {
    sub_1C151749C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A2BD0);
    }
  }
}

NewsFeed::FormatSlotTransformPolicy_optional __swiftcall FormatSlotTransformPolicy.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FormatSlotTransformPolicy.rawValue.getter()
{
  uint64_t result = 0x657571696E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74696D696CLL;
      break;
    case 2:
      uint64_t result = 0x6C616E6F73726570;
      break;
    case 3:
      uint64_t result = 0x65726975716572;
      break;
    case 4:
      uint64_t result = 0x6F43657269707865;
      break;
    case 5:
      uint64_t result = 6775156;
      break;
    case 6:
      uint64_t result = 0x7453656C7A7A7570;
      break;
    case 7:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 8:
      uint64_t result = 0x7265746C6966;
      break;
    case 9:
      uint64_t result = 1953656691;
      break;
    case 0xA:
      uint64_t result = 0x7974706D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A4E40C(unsigned __int8 *a1, char *a2)
{
  return sub_1C147FD1C(*a1, *a2);
}

unint64_t sub_1C0A4E41C()
{
  unint64_t result = qword_1EB88BBD8;
  if (!qword_1EB88BBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BBD8);
  }
  return result;
}

uint64_t sub_1C0A4E470()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A4E4B8()
{
  return sub_1C04489AC();
}

uint64_t sub_1C0A4E4C0()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatSlotTransformPolicy_optional sub_1C0A4E504(Swift::String *a1)
{
  return FormatSlotTransformPolicy.init(rawValue:)(*a1);
}

uint64_t sub_1C0A4E510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatSlotTransformPolicy.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatSlotTransformPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A4E604);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotTransformPolicy()
{
  return &type metadata for FormatSlotTransformPolicy;
}

uint64_t sub_1C0A4E63C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      char v3 = 3;
      goto LABEL_14;
    case 2uLL:
      return sub_1C0A4E63C();
    case 3uLL:
      char v3 = 4;
      goto LABEL_14;
    case 4uLL:
      char v3 = 5;
      goto LABEL_14;
    case 5uLL:
      char v3 = 6;
      goto LABEL_14;
    case 6uLL:
      char v3 = 7;
      goto LABEL_14;
    case 7uLL:
      goto LABEL_13;
    case 8uLL:
      char v3 = 9;
      goto LABEL_14;
    case 9uLL:
      if (v2 == 0x9000000000000000)
      {
        *a1 = 0;
      }
      else
      {
        if (v2 == 0x9000000000000008) {
          char v3 = 2;
        }
        else {
LABEL_13:
        }
          char v3 = 8;
LABEL_14:
        *a1 = v3;
      }
      return result;
    default:
      char v3 = 1;
      goto LABEL_14;
  }
}

uint64_t sub_1C0A4E734(void *a1, uint64_t *a2)
{
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  __swift_project_boxed_opaque_existential_1(a1 + 4, v3);
  uint64_t v5 = *a2;
  uint64_t v6 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  return ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:)(v5, 25, (uint64_t)a2 + *(int *)(v6 + 20), *MEMORY[0x1E4F7E010], v3, v4);
}

void sub_1C0A4E7BC(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C15198DC();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB863FB8);
  sub_1C0A4FA98(a2, (uint64_t)v6, type metadata accessor for SportsDataServiceBatchResourceRequest);
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_1C15198AC();
  os_log_type_t v11 = sub_1C151F36C();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = MEMORY[0x1C18C6710](v14, MEMORY[0x1E4FBB1A0]);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1BFDA76EC(v15, v17, &v22);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0A4FA38((uint64_t)v6, type metadata accessor for SportsDataServiceBatchResourceRequest);
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v21 = (uint64_t)a1;
    id v18 = a1;
    sub_1C017F734();
    uint64_t v19 = sub_1C151E6AC();
    uint64_t v21 = sub_1BFDA76EC(v19, v20, &v22);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v10, v11, "Sports data service failed to resolve resources %{public}s, error=%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v13, -1, -1);
    MEMORY[0x1C18C9B00](v12, -1, -1);
  }
  else
  {
    sub_1C0A4FA38((uint64_t)v6, type metadata accessor for SportsDataServiceBatchResourceRequest);
  }
}

uint64_t sub_1C0A4EA90(uint64_t a1)
{
  return sub_1C1518A1C();
}

char *sub_1C0A4EB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v71 = a4;
  uint64_t v79 = a2;
  *(void *)&long long v73 = a1;
  uint64_t v76 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v70 = (uint64_t)&v68 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF2E7B4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v68 - v9;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v80 = *(char **)(v11 - 8);
  uint64_t v81 = v11;
  MEMORY[0x1F4188790](v11);
  __n128 v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v74 = (void (*)(char *, uint64_t))sub_1C15155DC();
  uint64_t v13 = *((void *)v74 - 1);
  MEMORY[0x1F4188790](v74);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E7B4(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], v7);
  MEMORY[0x1F4188790](v16 - 8);
  id v18 = (char *)&v68 - v17;
  uint64_t v19 = sub_1C15156FC();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  char v25 = (char *)&v68 - v24;
  sub_1C151564C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1BFF51164((uint64_t)v18, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v26 = 3;
    swift_willThrow();
  }
  else
  {
    uint64_t v77 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v18, v19);
    sub_1C151562C();
    sub_1C151563C();
    uint64_t v72 = v25;
    uint64_t v28 = (void (*)(uint64_t *, void))sub_1C151561C();
    unint64_t v29 = *v27;
    uint64_t v69 = v19;
    if (v29)
    {
      uint64_t v30 = v27;
      sub_1C151942C();
      sub_1C15155AC();
      swift_bridgeObjectRelease();
      unint64_t v31 = *v30;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v30 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v31 = sub_1BFFB4568(0, *(void *)(v31 + 16) + 1, 1, v31);
        unint64_t *v30 = v31;
      }
      unint64_t v34 = *(void *)(v31 + 16);
      unint64_t v33 = *(void *)(v31 + 24);
      if (v34 >= v33 >> 1)
      {
        unint64_t v31 = sub_1BFFB4568(v33 > 1, v34 + 1, 1, v31);
        unint64_t *v30 = v31;
      }
      *(void *)(v31 + 16) = v34 + 1;
      (*(void (**)(unint64_t, char *, void (*)(char *, uint64_t)))(v13 + 32))(v31+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v34, v15, v74);
      v28(v82, 0);
      uint64_t v35 = v69;
    }
    else
    {
      uint64_t v35 = v19;
      v28(v82, 0);
    }
    uint64_t v36 = v77;
    uint64_t v37 = v72;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v22, v72, v35);
    sub_1C151565C();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v36 + 8);
    uint64_t v39 = v36 + 8;
    uint64_t v38 = v40;
    v40(v22, v35);
    uint64_t v15 = v80;
    uint64_t v41 = v81;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v80 + 6))(v10, 1, v81) == 1)
    {
      sub_1BFF51164((uint64_t)v10, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      sub_1C0254A10();
      swift_allocError();
      *uint64_t v42 = 4;
      swift_willThrow();
      v38(v37, v35);
    }
    else
    {
      unint64_t v74 = v38;
      uint64_t v77 = v39;
      (*((void (**)(char *, char *, uint64_t))v15 + 4))(v78, v10, v41);
      sub_1BFF2E7B4(0, (unint64_t *)&unk_1EB86BBE0, (uint64_t (*)(uint64_t))sub_1C0254A64, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      long long v73 = xmmword_1C1529AE0;
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      strcpy((char *)(inited + 32), "X-REQUEST-ID");
      *(unsigned char *)(inited + 45) = 0;
      *(_WORD *)(inited + 46) = -5120;
      sub_1BFE9DF08(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v73;
      uint64_t v45 = v76;
      uint64_t v46 = v71;
      uint64_t v47 = (uint64_t *)(v71 + *(int *)(v76 + 32));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      *(void *)(v44 + 32) = v49;
      *(void *)(v44 + 40) = v48;
      *(void *)(inited + 48) = v44;
      swift_bridgeObjectRetain();
      *(void *)&long long v73 = sub_1C018DD38(inited);
      if (qword_1EB863FD0 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C15198DC();
      __swift_project_value_buffer(v50, (uint64_t)qword_1EB863FB8);
      uint64_t v51 = v70;
      sub_1C0A4FA98(v46, v70, type metadata accessor for SportsDataServiceURLRequest);
      uint64_t v52 = v75;
      sub_1C0A4FA98(v46, v75, type metadata accessor for SportsDataServiceURLRequest);
      uint64_t v53 = sub_1C15198AC();
      os_log_type_t v54 = sub_1C151F38C();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        v82[0] = v68;
        *(_DWORD *)uint64_t v55 = 136446466;
        uint64_t v56 = (uint64_t *)(v51 + *(int *)(v45 + 32));
        uint64_t v57 = *v56;
        unint64_t v58 = v56[1];
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_1BFDA76EC(v57, v58, v82);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        sub_1C0A4FA38(v51, type metadata accessor for SportsDataServiceURLRequest);
        *(_WORD *)(v55 + 12) = 2082;
        uint64_t v59 = v75;
        uint64_t v60 = sub_1C1515E2C();
        uint64_t v83 = sub_1BFDA76EC(v60, v61, v82);
        uint64_t v45 = v76;
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        sub_1C0A4FA38(v59, type metadata accessor for SportsDataServiceURLRequest);
        _os_log_impl(&dword_1BFC31000, v53, v54, "SportsDataService executing fetch with identifier=%{public}s, url=%{public}s", (uint8_t *)v55, 0x16u);
        uint64_t v62 = v68;
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v62, -1, -1);
        MEMORY[0x1C18C9B00](v55, -1, -1);
      }
      else
      {
        sub_1C0A4FA38(v51, type metadata accessor for SportsDataServiceURLRequest);
        sub_1C0A4FA38(v52, type metadata accessor for SportsDataServiceURLRequest);
      }

      uint64_t v63 = (uint64_t *)(v46 + *(int *)(v45 + 28));
      if (v63[3])
      {
        unint64_t v64 = v63[1];
        uint64_t v76 = v63[2];
        uint64_t v65 = *v63;
        uint64_t v75 = sub_1C151E62C();
        sub_1BFE95820(v65, v64);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v75 = sub_1C151E62C();
        uint64_t v76 = 0;
        uint64_t v65 = 0;
        unint64_t v64 = 0xF000000000000000;
      }
      swift_getObjectType();
      unsigned __int8 v66 = v78;
      uint64_t v15 = (char *)FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)();
      swift_bridgeObjectRelease();
      sub_1BFE95878(v65, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v80 + 1))(v66, v81);
      v74(v72, v69);
    }
  }
  return v15;
}

uint64_t sub_1C0A4F5B8()
{
  swift_getObjectType();
  sub_1C018DD38(MEMORY[0x1E4FBC860]);
  sub_1C151E62C();
  uint64_t v0 = FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0A4F694(uint64_t a1, uint64_t *a2)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  type metadata accessor for SportsDataServiceResourceRequest(0);
  return ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:)(v3, v4);
}

void sub_1C0A4F728(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C15198DC();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB863FB8);
  sub_1C0A4FA98(a2, (uint64_t)v6, type metadata accessor for SportsDataServiceResourceRequest);
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_1C15198AC();
  os_log_type_t v11 = sub_1C151F36C();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v14 = *v6;
    unint64_t v15 = v6[1];
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1BFDA76EC(v14, v15, &v20);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0A4FA38((uint64_t)v6, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v19 = (uint64_t)a1;
    id v16 = a1;
    sub_1C017F734();
    uint64_t v17 = sub_1C151E6AC();
    uint64_t v19 = sub_1BFDA76EC(v17, v18, &v20);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v10, v11, "Sports data service failed to resolve resource %{public}s, error=%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v13, -1, -1);
    MEMORY[0x1C18C9B00](v12, -1, -1);
  }
  else
  {
    sub_1C0A4FA38((uint64_t)v6, type metadata accessor for SportsDataServiceResourceRequest);
  }
}

uint64_t sub_1C0A4F9E0()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t sub_1C0A4FA38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0A4FA98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SportsDataServiceRequestFetcher.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0A4FB9CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataServiceRequestFetcher.Errors()
{
  return &type metadata for SportsDataServiceRequestFetcher.Errors;
}

uint64_t sub_1C0A4FBD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0A4FCA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_1C0A4FE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_1C0A4FEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0A4FF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0A4FFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0A5009C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0A50144(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(void *)(a3 + 16);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1C0A5033C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C0A50608);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SportsDataServiceResponse()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C0A50648()
{
  uint64_t result = type metadata accessor for SportsDataServiceBatchRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0A506E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for SportsDataServiceBatchRequest(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0A507CC(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for SportsDataServiceBatchRequest(0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A50854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0A508F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0A509A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_1C0A50A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0A50AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0A50AE4);
}

uint64_t sub_1C0A50AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SportsDataServiceBatchRequest(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C0A50BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0A50BB8);
}

uint64_t sub_1C0A50BB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SportsDataServiceBatchRequest(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataServiceBatchResponse()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1C0A50C90()
{
  unint64_t result = qword_1EA1A2BE0;
  if (!qword_1EA1A2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BE0);
  }
  return result;
}

uint64_t SportsLinksDataVisualizationResponse.supportedVisualizations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsLinksDataVisualizationResponse.standingResponseChildTagIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsLinksDataVisualizationResponse.bracketResponseChildTagIds.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for SportsLinksDataVisualizationResponse()
{
  return &type metadata for SportsLinksDataVisualizationResponse;
}

uint64_t FormatFeedConfig.init(selectors:options:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1C0A50D14()
{
  if (*v0) {
    return 0x736E6F6974706FLL;
  }
  else {
    return 0x726F7463656C6573;
  }
}

uint64_t sub_1C0A50D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0A51E74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A50D7C(uint64_t a1)
{
  unint64_t v2 = sub_1C0A51030();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A50DB8(uint64_t a1)
{
  unint64_t v2 = sub_1C0A51030();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatFeedConfig.encode(to:)(void *a1)
{
  sub_1C0A51B64(0, &qword_1EA1A2BF0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *v1;
  uint64_t v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A51030();
  sub_1C1520F0C();
  if (!v9
    || (char v13 = 0,
        uint64_t v12 = v9,
        sub_1C0A51084(),
        sub_1C0A5112C(0, &qword_1EA1A2C38, (uint64_t (*)(uint64_t))sub_1C0A5137C, MEMORY[0x1E4FBB718]),
        sub_1C0A51418(),
        sub_1C1520BAC(),
        !v2))
  {
    if (v11)
    {
      char v13 = 1;
      uint64_t v12 = v11;
      sub_1C0A51084();
      sub_1C0A5112C(0, &qword_1EA1A2C08, (uint64_t (*)(uint64_t))sub_1C0A510F8, MEMORY[0x1E4FBB718]);
      sub_1C0A512A4();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C0A51030()
{
  unint64_t result = qword_1EA1A2BF8;
  if (!qword_1EA1A2BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2BF8);
  }
  return result;
}

unint64_t sub_1C0A51084()
{
  unint64_t result = qword_1EA1A2C00;
  if (!qword_1EA1A2C00)
  {
    sub_1C0A51B64(255, &qword_1EA1A2BF0, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2C00);
  }
  return result;
}

void sub_1C0A510F8(uint64_t a1)
{
}

void sub_1C0A5112C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0A51190()
{
  if (!qword_1EA1A2C18)
  {
    type metadata accessor for FormatOption();
    sub_1C0A5125C(&qword_1EB874230, (void (*)(uint64_t))type metadata accessor for FormatOption);
    sub_1C0A5125C(&qword_1EB870AC0, (void (*)(uint64_t))type metadata accessor for FormatOption);
    unint64_t v0 = type metadata accessor for FormatFeedConfigValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2C18);
    }
  }
}

uint64_t sub_1C0A5125C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0A512A4()
{
  unint64_t result = qword_1EA1A2C20;
  if (!qword_1EA1A2C20)
  {
    sub_1C0A5112C(255, &qword_1EA1A2C08, (uint64_t (*)(uint64_t))sub_1C0A510F8, MEMORY[0x1E4FBB718]);
    sub_1C0A514F0(&qword_1EA1A2C28, sub_1C0A510F8, &qword_1EA1A2C30, (void (*)(uint64_t))sub_1C0A51190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2C20);
  }
  return result;
}

void sub_1C0A5137C(uint64_t a1)
{
}

void sub_1C0A513B0()
{
  if (!qword_1EA1A2C48)
  {
    unint64_t v0 = type metadata accessor for FormatFeedConfigValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2C48);
    }
  }
}

unint64_t sub_1C0A51418()
{
  unint64_t result = qword_1EA1A2C50;
  if (!qword_1EA1A2C50)
  {
    sub_1C0A5112C(255, &qword_1EA1A2C38, (uint64_t (*)(uint64_t))sub_1C0A5137C, MEMORY[0x1E4FBB718]);
    sub_1C0A514F0(&qword_1EA1A2C58, sub_1C0A5137C, &qword_1EA1A2C60, (void (*)(uint64_t))sub_1C0A513B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2C50);
  }
  return result;
}

uint64_t sub_1C0A514F0(unint64_t *a1, void (*a2)(uint64_t), unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    sub_1C0A5125C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatFeedConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v34 = a2;
  sub_1C0A519CC();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  uint64_t v32 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A51A98();
  uint64_t v8 = v7;
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A51B64(0, &qword_1EA1A2C88, MEMORY[0x1E4FBBDC0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  BOOL v15 = (char *)&v29 - v14;
  uint64_t v16 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1C0A51030();
  uint64_t v17 = v36;
  sub_1C1520EBC();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  else
  {
    uint64_t v36 = v13;
    uint64_t v30 = v6;
    uint64_t v20 = v33;
    int v19 = v34;
    char v40 = 0;
    if (sub_1C152071C())
    {
      char v37 = 0;
      sub_1C0A5125C(&qword_1EA1A2C98, (void (*)(uint64_t))sub_1C0A51A98);
      uint64_t v21 = v8;
      sub_1C15206EC();
      uint64_t v22 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
    }
    else
    {
      uint64_t v22 = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v39 = 1;
    char v23 = sub_1C152071C();
    uint64_t v24 = v19;
    uint64_t v25 = v32;
    if (v23)
    {
      char v38 = 1;
      sub_1C0A5125C(&qword_1EA1A2C90, (void (*)(uint64_t))sub_1C0A519CC);
      uint64_t v27 = v30;
      uint64_t v26 = v31;
      sub_1C15206EC();
      uint64_t v28 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v26);
    }
    else
    {
      uint64_t v28 = 0;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v24 = v22;
    v24[1] = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0A519CC()
{
  if (!qword_1EA1A2C68)
  {
    sub_1C0A51190();
    sub_1C0A5125C(&qword_1EA1A2C70, (void (*)(uint64_t))sub_1C0A51190);
    sub_1C0A5125C(&qword_1EA1A2C30, (void (*)(uint64_t))sub_1C0A51190);
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2C68);
    }
  }
}

void sub_1C0A51A98()
{
  if (!qword_1EA1A2C78)
  {
    sub_1C0A513B0();
    sub_1C0A5125C(&qword_1EA1A2C80, (void (*)(uint64_t))sub_1C0A513B0);
    sub_1C0A5125C(&qword_1EA1A2C60, (void (*)(uint64_t))sub_1C0A513B0);
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2C78);
    }
  }
}

void sub_1C0A51B64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A51030();
    unint64_t v7 = a3(a1, &type metadata for FormatFeedConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0A51BC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatFeedConfig.init(from:)(a1, a2);
}

uint64_t sub_1C0A51BE0(void *a1)
{
  return FormatFeedConfig.encode(to:)(a1);
}

void *assignWithCopy for FormatImageNodeRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatFeedConfig()
{
  return &type metadata for FormatFeedConfig;
}

unsigned char *storeEnumTagSinglePayload for FormatFeedConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A51D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFeedConfig.CodingKeys()
{
  return &type metadata for FormatFeedConfig.CodingKeys;
}

unint64_t sub_1C0A51D70()
{
  unint64_t result = qword_1EA1A2CA0;
  if (!qword_1EA1A2CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2CA0);
  }
  return result;
}

unint64_t sub_1C0A51DC8()
{
  unint64_t result = qword_1EA1A2CA8;
  if (!qword_1EA1A2CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2CA8);
  }
  return result;
}

unint64_t sub_1C0A51E20()
{
  unint64_t result = qword_1EA1A2CB0;
  if (!qword_1EA1A2CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2CB0);
  }
  return result;
}

uint64_t sub_1C0A51E74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t Array<A>.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v25 = (char *)&v18 - v13;
  swift_bridgeObjectRetain();
  if (!MEMORY[0x1C18C6870](a3, a4)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = v10;
  uint64_t v14 = 0;
  uint64_t v21 = a5;
  int v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8);
  uint64_t v20 = a5 + 8;
  uint64_t v22 = (void (**)(char *, uint64_t *, uint64_t))(v9 + 16);
  while (1)
  {
    char v15 = sub_1C151ECDC();
    sub_1C151EC7C();
    if (v15)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v25, a3+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v14, a4);
      uint64_t v16 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_11;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1C152016C();
    if (v18 != 8) {
      break;
    }
    uint64_t v26 = result;
    (*v22)(v25, &v26, a4);
    swift_unknownObjectRelease();
    uint64_t v16 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v25, a4);
    v19(v23, v24, a4, v21);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a4);
    if (!v5)
    {
      ++v14;
      if (v16 != MEMORY[0x1C18C6870](a3, a4)) {
        continue;
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0A521DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Array<A>.bind(binder:context:)(a1, a2, *v4, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t Dictionary.bind(binder:context:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v54 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v62 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v46 - v14;
  uint64_t v71 = v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_1C151FD8C();
  uint64_t v18 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  v67 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v46 - v21;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = sub_1C15203BC();
    unint64_t v49 = 0;
    uint64_t v24 = 0;
    unint64_t v25 = 0;
    unint64_t v26 = v23 | 0x8000000000000000;
  }
  else
  {
    uint64_t v27 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v24 = ~v27;
    uint64_t v28 = *(void *)(a3 + 64);
    unint64_t v49 = a3 + 64;
    uint64_t v29 = -v27;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    else {
      uint64_t v30 = -1;
    }
    unint64_t v25 = v30 & v28;
    unint64_t v26 = a3;
  }
  uint64_t v51 = v26 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v65 = TupleTypeMetadata2 - 8;
  uint64_t v48 = v24;
  uint64_t v52 = v54 + 16;
  uint64_t v70 = (void (**)(char *, char *, uint64_t))(v53 + 16);
  unint64_t v64 = (void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v54 + 32);
  unint64_t v61 = (void (**)(char *, char *, uint64_t))(v53 + 32);
  uint64_t v59 = (void (**)(char *, uint64_t))(v53 + 8);
  int64_t v50 = (unint64_t)(v24 + 64) >> 6;
  int64_t v47 = v50 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v32 = 0;
  uint64_t v56 = v15;
  uint64_t v33 = v67;
  for (i = v26; ; unint64_t v26 = i)
  {
    int64_t v68 = v32;
    unint64_t v69 = v25;
    if ((v26 & 0x8000000000000000) == 0) {
      break;
    }
    if (sub_1C15203EC())
    {
      sub_1C1520A5C();
      swift_unknownObjectRelease();
      sub_1C1520A5C();
      swift_unknownObjectRelease();
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 1;
    }
    uint64_t v75 = v69;
LABEL_23:
    uint64_t v38 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v33, v35, 1, TupleTypeMetadata2);
    (*v64)(v22, v33, v66);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v22, 1, TupleTypeMetadata2) == 1) {
      return sub_1BFEFB808();
    }
    (*v61)(v15, &v22[*(int *)(TupleTypeMetadata2 + 48)], a5);
    (*v60)(v62, v22, v71);
    sub_1C0A52A28();
    if (swift_dynamicCast())
    {
      uint64_t v39 = *((void *)&v73 + 1);
      uint64_t v40 = v74;
      __swift_project_boxed_opaque_existential_1(&v72, *((uint64_t *)&v73 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8))(v57, v58, v39, v40);
      if (v6)
      {
        (*v59)(v56, a5);
LABEL_46:
        sub_1BFEFB808();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
      char v15 = v56;
    }
    else
    {
      uint64_t v74 = 0;
      long long v72 = 0u;
      long long v73 = 0u;
      sub_1C0A52A80((uint64_t)&v72);
    }
    (*v70)(v55, v15, a5);
    if (swift_dynamicCast())
    {
      uint64_t v41 = *((void *)&v73 + 1);
      uint64_t v42 = v74;
      __swift_project_boxed_opaque_existential_1(&v72, *((uint64_t *)&v73 + 1));
      uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8);
      uint64_t v44 = v42;
      char v15 = v56;
      v43(v57, v58, v41, v44);
      (*v59)(v15, a5);
      if (v6) {
        goto LABEL_46;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
    }
    else
    {
      uint64_t v74 = 0;
      long long v72 = 0u;
      long long v73 = 0u;
      (*v59)(v15, a5);
      uint64_t result = sub_1C0A52A80((uint64_t)&v72);
    }
    unint64_t v25 = v75;
    uint64_t v33 = v67;
  }
  if (v25)
  {
    uint64_t v75 = (v25 - 1) & v25;
    unint64_t v34 = __clz(__rbit64(v25)) | (v32 << 6);
    goto LABEL_13;
  }
  if (__OFADD__(v32++, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v32 >= v50)
  {
    uint64_t v75 = 0;
    uint64_t v35 = 1;
    int64_t v32 = v68;
    goto LABEL_23;
  }
  unint64_t v37 = *(void *)(v49 + 8 * v32);
  if (v37) {
    goto LABEL_19;
  }
  if (v32 + 1 >= v50)
  {
    uint64_t v75 = 0;
    uint64_t v35 = 1;
    goto LABEL_23;
  }
  unint64_t v37 = *(void *)(v49 + 8 * (v32 + 1));
  if (v37)
  {
    ++v32;
    goto LABEL_19;
  }
  int64_t v45 = v32 + 2;
  if (v32 + 2 >= v50)
  {
    uint64_t v75 = 0;
    uint64_t v35 = 1;
    ++v32;
    goto LABEL_23;
  }
  unint64_t v37 = *(void *)(v49 + 8 * v45);
  if (v37)
  {
    v32 += 2;
LABEL_19:
    uint64_t v75 = (v37 - 1) & v37;
    unint64_t v34 = __clz(__rbit64(v37)) + (v32 << 6);
LABEL_13:
    (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v33, *(void *)(v26 + 48) + *(void *)(v54 + 72) * v34, v71);
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(&v33[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v26 + 56) + *(void *)(v53 + 72) * v34, a5);
    uint64_t v35 = 0;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v32 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v32 >= v50)
    {
      uint64_t v75 = 0;
      uint64_t v35 = 1;
      int64_t v32 = v47;
      goto LABEL_23;
    }
    unint64_t v37 = *(void *)(v49 + 8 * v32);
    ++v45;
    if (v37) {
      goto LABEL_19;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C0A52A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Dictionary.bind(binder:context:)(a1, a2, *v3, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

unint64_t sub_1C0A52A28()
{
  unint64_t result = qword_1EB874938;
  if (!qword_1EB874938)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB874938);
  }
  return result;
}

uint64_t sub_1C0A52A80(uint64_t a1)
{
  sub_1C0A52ADC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0A52ADC()
{
  if (!qword_1EB874940[0])
  {
    sub_1C0A52A28();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, qword_1EB874940);
    }
  }
}

uint64_t dispatch thunk of FormatBindable.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t static FormatCodingMetadataStrategy.defaultValue.getter@<X0>(char *a1@<X8>)
{
  return FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, a1, 0, 0, 0, 0);
}

BOOL static FormatCodingMetadataStrategy.shouldEncode(wrappedValue:)(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v4, 0, 0, 0, 0);
  LOBYTE(a1) = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(a1, v4);
  sub_1C0A52D64((uint64_t)v4);
  return (a1 & 1) == 0;
}

uint64_t sub_1C0A52C60@<X0>(char *a1@<X8>)
{
  return FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, a1, 0, 0, 0, 0);
}

BOOL sub_1C0A52CA8(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v4, 0, 0, 0, 0);
  LOBYTE(a1) = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(a1, v4);
  sub_1C0A52D64((uint64_t)v4);
  return (a1 & 1) == 0;
}

uint64_t sub_1C0A52D64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0A52DC0(uint64_t a1)
{
  unint64_t result = sub_1C006C050();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0A52DE8()
{
  return sub_1BFEBE3AC(&qword_1EB874B00);
}

uint64_t sub_1C0A52E1C()
{
  return sub_1BFEBE3AC(&qword_1EB85D128);
}

ValueMetadata *type metadata accessor for FormatCodingMetadataStrategy()
{
  return &type metadata for FormatCodingMetadataStrategy;
}

uint64_t FormatLayoutContext.key.getter()
{
  return swift_retain();
}

uint64_t FormatLayoutContext.inventory.getter()
{
  return swift_retain();
}

uint64_t FormatLayoutContext.annotator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double FormatLayoutContext.itemFrame.getter()
{
  return *(double *)(v0 + 48);
}

double FormatLayoutContext.sectionFrame.getter()
{
  return *(double *)(v0 + 80);
}

uint64_t FormatLayoutContext.itemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutContext.copy(itemFrame:sectionFrame:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)a1 = *(void *)v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v9 + 24);
  *(void *)(a1 + 40) = v12;
  *(double *)(a1 + 48) = a2;
  *(double *)(a1 + 56) = a3;
  *(double *)(a1 + 64) = a4;
  *(double *)(a1 + 72) = a5;
  *(double *)(a1 + 80) = a6;
  *(double *)(a1 + 88) = a7;
  *(double *)(a1 + 96) = a8;
  *(double *)(a1 + 104) = a9;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

Swift::String __swiftcall FormatLayoutContext.sourceIdentifier(layoutIdentifier:)(Swift::String layoutIdentifier)
{
  object = layoutIdentifier._object;
  uint64_t countAndFlagsBits = layoutIdentifier._countAndFlagsBits;
  if (*(void *)(v1 + 120))
  {
    uint64_t v7 = *(void *)(v1 + 112);
    uint64_t v8 = *(void **)(v1 + 120);
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    uint64_t countAndFlagsBits = v7;
    object = v8;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v4 = countAndFlagsBits;
  uint64_t v5 = object;
  result._object = v5;
  result._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t sub_1C0A5300C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C0A5305C()
{
  return *(double *)(v0 + 48);
}

double sub_1C0A53068()
{
  return *(double *)(v0 + 80);
}

uint64_t sub_1C0A53074()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0A530A4@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)a1 = *(void *)v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v9 + 24);
  *(void *)(a1 + 40) = v12;
  *(double *)(a1 + 48) = a2;
  *(double *)(a1 + 56) = a3;
  *(double *)(a1 + 64) = a4;
  *(double *)(a1 + 72) = a5;
  *(double *)(a1 + 80) = a6;
  *(double *)(a1 + 88) = a7;
  *(double *)(a1 + 96) = a8;
  *(double *)(a1 + 104) = a9;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0A53128(uint64_t a1)
{
  if (*(void *)(v1 + 120))
  {
    uint64_t v4 = *(void *)(v1 + 112);
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    return v4;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t dispatch thunk of FormatLayoutContextType.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatLayoutContextType.inventory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FormatLayoutContextType.annotator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FormatLayoutContextType.itemFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FormatLayoutContextType.sectionFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FormatLayoutContextType.itemIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FormatLayoutContextType.copy(itemFrame:sectionFrame:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FormatLayoutContextType.sourceIdentifier(layoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

void *assignWithCopy for FormatLayoutContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatLayoutContext(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatLayoutContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatLayoutContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)Swift::String result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)Swift::String result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutContext()
{
  return &type metadata for FormatLayoutContext;
}

uint64_t WebEmbedDataVisualizationDataServiceFailure.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate;
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_createdDate, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_request;
  uint64_t v5 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t WebEmbedDataVisualizationDataServiceFailure.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate;
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_createdDate, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_request;
  uint64_t v5 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A5367C()
{
  return type metadata accessor for WebEmbedDataVisualizationDataServiceFailure();
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataServiceFailure()
{
  uint64_t result = qword_1EA1A2CB8;
  if (!qword_1EA1A2CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0A536D0()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151526C();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for WebEmbedDataVisualizationDataServiceFailure(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WebEmbedDataVisualizationDataServiceFailure);
}

uint64_t dispatch thunk of LatestPuzzleProviderType.fetchLatestPuzzles(for:minPuzzles:maxPuzzles:limitedToSamePublishDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 8)
                                                                                              + **(int **)(a7 + 8));
  char v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *char v15 = v7;
  v15[1] = sub_1C014AF5C;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

ValueMetadata *type metadata accessor for LatestPuzzleProviderError()
{
  return &type metadata for LatestPuzzleProviderError;
}

uint64_t sub_1C0A5390C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 144) = a4;
  *(void *)(v6 + 152) = v5;
  *(unsigned char *)(v6 + 280) = a5;
  *(void *)(v6 + 128) = a2;
  *(void *)(v6 + 136) = a3;
  *(void *)(v6 + 120) = a1;
  sub_1BFF97C40();
  *(void *)(v6 + 160) = swift_task_alloc();
  *(void *)(v6 + 168) = swift_task_alloc();
  uint64_t v7 = sub_1C151631C();
  *(void *)(v6 + 176) = v7;
  *(void *)(v6 + 184) = *(void *)(v7 - 8);
  *(void *)(v6 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A53A14, 0, 0);
}

uint64_t sub_1C0A53A14()
{
  unint64_t v1 = (void *)v0[19];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  id v4 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, 120.0);
  v0[25] = v4;
  uint64_t v5 = v1 + 2;
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  sub_1BFEF9A78();
  uint64_t v8 = swift_allocObject();
  v0[26] = v8;
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v2;
  uint64_t v12 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 128) + **(int **)(v7 + 128));
  swift_bridgeObjectRetain();
  id v9 = v4;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[27] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C0A53BA8;
  return v12(v8, v4, 25, v6, v7);
}

uint64_t sub_1C0A53BA8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1C0A54C84;
  }
  else
  {

    swift_bridgeObjectRelease();
    id v4 = sub_1C0A53CCC;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0A53CCC()
{
  int64_t v50 = v0;
  unint64_t v2 = v0[28];
  if (!(v2 >> 62))
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_31;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = (void *)MEMORY[0x1C18C7CB0](0, v0[28]);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v3 = *(void **)(v0[28] + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v3, sel_latestPuzzleIDs);
  swift_unknownObjectRelease();
  if (!v4)
  {
LABEL_32:
    uint64_t v22 = (void *)v0[25];
    sub_1C0A559DC();
    swift_allocError();
    *(void *)uint64_t v42 = 0;
    *(void *)(v42 + 8) = 0;
    *(unsigned char *)(v42 + 16) = 1;
LABEL_33:
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (uint64_t (*)(void))v0[1];
    return v43();
  }
  uint64_t v5 = v0[17];
  uint64_t v6 = sub_1C151EBCC();

  uint64_t v1 = *(void *)(v6 + 16);
  if (v1 < v5)
  {
    if (qword_1EB8814A0 == -1)
    {
LABEL_9:
      uint64_t v7 = sub_1C15198DC();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EB93C7A8);
      swift_bridgeObjectRetain_n();
      uint64_t v8 = sub_1C15198AC();
      os_log_type_t v9 = sub_1C151F36C();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v45 = v0[15];
        unint64_t v11 = v0[16];
        uint64_t v10 = v0[17];
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        v49[0] = v13;
        *(_DWORD *)uint64_t v12 = 134218242;
        v0[13] = v10;
        sub_1C151FE1C();
        *(_WORD *)(v12 + 12) = 2080;
        swift_bridgeObjectRetain();
        v0[14] = sub_1BFDA76EC(v45, v11, v49);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BFC31000, v8, v9, "Failed to meet minimum item requirement of %ld for Puzzle Type %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v13, -1, -1);
        MEMORY[0x1C18C9B00](v12, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)v0[25];
      uint64_t v23 = v0[17];
      sub_1C0A559DC();
      swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v1;
      *(unsigned char *)(v24 + 16) = 0;
      goto LABEL_33;
    }
LABEL_38:
    swift_once();
    goto LABEL_9;
  }
  int64_t v14 = sub_1C0B823EC(v0[18], v6);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  unint64_t v20 = v19;
  if (v19)
  {
    sub_1C1520B6C();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v25 = swift_dynamicCastClass();
    if (!v25)
    {
      swift_unknownObjectRelease();
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
    uint64_t v26 = *(void *)(v25 + 16);
    swift_release();
    if (__OFSUB__(v20 >> 1, v18))
    {
      __break(1u);
    }
    else if (v26 == (v20 >> 1) - v18)
    {
      uint64_t v21 = swift_dynamicCastClass();
      if (!v21)
      {
        swift_unknownObjectRelease();
        uint64_t v21 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_22;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = sub_1C00B34F8(v14, v16, v18, v20);
LABEL_22:
  v0[30] = v21;
  swift_unknownObjectRelease();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C15198DC();
  v0[31] = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v28 = sub_1C15198AC();
  os_log_type_t v29 = sub_1C151F38C();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v46 = v0[18];
    unint64_t v30 = v0[16];
    uint64_t v44 = v0[15];
    uint64_t v31 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v49[0] = v47;
    *(_DWORD *)uint64_t v31 = 134218754;
    v0[9] = *(void *)(v21 + 16);
    sub_1C151FE1C();
    swift_release();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[10] = sub_1BFDA76EC(v44, v30, v49);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 22) = 2080;
    uint64_t v32 = swift_bridgeObjectRetain();
    uint64_t v33 = MEMORY[0x1C18C6710](v32, MEMORY[0x1E4FBB1A0]);
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    v0[11] = sub_1BFDA76EC(v33, v35, v49);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 32) = 2048;
    v0[12] = v46;
    sub_1C151FE1C();
    _os_log_impl(&dword_1BFC31000, v28, v29, "%ld Puzzle IDs available to be fetched for Puzzle Type %s: %s - Max Number of Puzzles: %ld", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v47, -1, -1);
    MEMORY[0x1C18C9B00](v31, -1, -1);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v36 = (void *)v0[19];
  uint64_t v37 = v36[5];
  uint64_t v38 = v36[6];
  __swift_project_boxed_opaque_existential_1(v36 + 2, v37);
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 56) + **(int **)(v38 + 56));
  uint64_t v39 = (void *)swift_task_alloc();
  v0[32] = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_1C0A54498;
  return v48(v21, 1, v37, v38);
}

uint64_t sub_1C0A54498(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 264) = a1;
  *(void *)(v3 + 272) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1C0A54D18;
  }
  else
  {
    swift_release();
    id v4 = sub_1C0A545B4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0A545B4()
{
  uint64_t v56 = v0;
  uint64_t v1 = v0;
  char v2 = NFInternalBuild();
  unint64_t v3 = *(void *)(v0 + 264);
  if (v2)
  {
    *(void *)(v0 + 40) = MEMORY[0x1E4FBC860];
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      int64_t v4 = sub_1C15204BC();
      unint64_t v52 = v3;
      if (v4) {
        goto LABEL_4;
      }
    }
    else
    {
      int64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v52 = v3;
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          goto LABEL_44;
        }
        uint64_t v5 = 0;
        unint64_t v6 = v3 & 0xC000000000000001;
        uint64_t v53 = *(void *)(v0 + 264) + 32;
        uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if (v6)
          {
            uint64_t v8 = (void *)MEMORY[0x1C18C7CB0](v5, *(void *)(v0 + 264));
          }
          else
          {
            uint64_t v8 = *(void **)(v53 + 8 * v5);
            swift_unknownObjectRetain();
          }
          id v9 = objc_msgSend(v8, sel_identifier);
          uint64_t v10 = sub_1C151E62C();
          uint64_t v12 = v11;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v7 = sub_1BFEF9B68(0, v7[2] + 1, 1, v7);
          }
          unint64_t v14 = v7[2];
          unint64_t v13 = v7[3];
          if (v14 >= v13 >> 1) {
            uint64_t v7 = sub_1BFEF9B68((void *)(v13 > 1), v14 + 1, 1, v7);
          }
          ++v5;
          v7[2] = v14 + 1;
          uint64_t v15 = &v7[2 * v14];
          v15[4] = v10;
          v15[5] = v12;
          swift_unknownObjectRelease();
        }
        while (v4 != v5);
        uint64_t v1 = v0;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 40) = v7;
        unint64_t v3 = v52;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1C15198AC();
    os_log_type_t v18 = sub_1C151F38C();
    BOOL v19 = os_log_type_enabled(v17, v18);
    unint64_t v20 = *(void *)(v1 + 128);
    if (v19)
    {
      uint64_t v51 = *(void *)(v1 + 120);
      uint64_t v21 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v55[0] = v54;
      *(_DWORD *)uint64_t v21 = 134218498;
      swift_beginAccess();
      *(void *)(v1 + 48) = *(void *)(*(void *)(v1 + 40) + 16);
      sub_1C151FE1C();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 56) = sub_1BFDA76EC(v51, v20, v55);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 22) = 2080;
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = MEMORY[0x1C18C6710](v22, MEMORY[0x1E4FBB1A0]);
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      *(void *)(v1 + 64) = sub_1BFDA76EC(v23, v25, v55);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v17, v18, "Successfully Fetched %ld Puzzles for Puzzle Type %s: %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v54, -1, -1);
      uint64_t v26 = v21;
      unint64_t v3 = v52;
      MEMORY[0x1C18C9B00](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    unint64_t v16 = *(void *)(v1 + 264);
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v0 + 264);
LABEL_22:
  uint64_t v27 = *(void *)(v1 + 152);
  if ((v16 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v28 = (uint64_t)sub_1C00B33B4(v16);
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v1 + 152);
  }
  else
  {
    uint64_t v28 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  uint64_t v29 = *(void *)(v1 + 272);
  v55[0] = v28;
  swift_retain();
  sub_1C0A5701C(v55, v27);
  if (v29)
  {
    swift_release_n();
    return swift_release();
  }
  char v31 = *(unsigned char *)(v1 + 280);
  swift_release_n();
  swift_bridgeObjectRelease();
  int64_t v4 = v55[0];
  if (v31)
  {
    if ((v55[0] & 0x8000000000000000) == 0 && (v55[0] & 0x4000000000000000) == 0)
    {
      uint64_t v32 = *(void *)(v55[0] + 16);
      uint64_t result = swift_retain();
      if (v32) {
        goto LABEL_33;
      }
      goto LABEL_45;
    }
LABEL_44:
    swift_retain();
    uint64_t result = sub_1C15204BC();
    if (result)
    {
LABEL_33:
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v33 = (void *)MEMORY[0x1C18C7CB0](0, v4);
      }
      else
      {
        if (!*(void *)(v4 + 16))
        {
          __break(1u);
          return result;
        }
        uint64_t v33 = *(void **)(v4 + 32);
        swift_unknownObjectRetain();
      }
      swift_release();
      id v34 = objc_msgSend(v33, sel_publishDate);
      swift_unknownObjectRelease();
      if (v34)
      {
        sub_1C15162BC();

        uint64_t v35 = 0;
      }
      else
      {
        uint64_t v35 = 1;
      }
      uint64_t v36 = *(void *)(v1 + 176);
      uint64_t v37 = *(void *)(v1 + 184);
      uint64_t v39 = *(void *)(v1 + 160);
      uint64_t v38 = *(void *)(v1 + 168);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v39, v35, 1, v36);
      sub_1BFCB311C(v39, v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) != 1)
      {
        uint64_t v40 = *(void *)(v1 + 192);
        uint64_t v41 = *(void **)(v1 + 200);
        uint64_t v43 = *(void *)(v1 + 176);
        uint64_t v42 = *(void *)(v1 + 184);
        uint64_t v44 = *(void *)(v1 + 152);
        (*(void (**)(uint64_t, void, uint64_t))(v42 + 32))(v40, *(void *)(v1 + 168), v43);
        uint64_t v45 = (void *)swift_task_alloc();
        v45[2] = v40;
        v45[3] = v44;
        int64_t v4 = (int64_t)sub_1C0621ACC((uint64_t (*)(uint64_t *))sub_1C0A570C8, v45, v4);

        swift_task_dealloc();
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v43);
        goto LABEL_47;
      }
LABEL_46:
      uint64_t v49 = *(void *)(v1 + 168);

      sub_1BFF97BE4(v49);
      goto LABEL_47;
    }
LABEL_45:
    uint64_t v46 = *(void *)(v1 + 176);
    uint64_t v47 = *(void *)(v1 + 184);
    uint64_t v48 = *(void *)(v1 + 168);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v48, 1, 1, v46);
    goto LABEL_46;
  }

LABEL_47:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v50 = *(uint64_t (**)(int64_t))(v1 + 8);
  return v50(v4);
}

uint64_t sub_1C0A54C84()
{
  uint64_t v1 = *(void **)(v0 + 200);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0A54D18()
{
  uint64_t v1 = *(void **)(v0 + 200);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0A54DA8(void **a1, id *a2, uint64_t a3)
{
  uint64_t v40 = a3;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v39 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v36 - v15;
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  uint64_t v38 = (char *)&v36 - v19;
  unint64_t v20 = *a1;
  id v41 = *a2;
  uint64_t v21 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  id v37 = v20;
  id v22 = objc_msgSend(v20, sel_publishDate, v18);
  if (!v22)
  {
    unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v25(v10, 1, 1, v11);
    goto LABEL_5;
  }
  uint64_t v23 = v22;
  sub_1C15162BC();

  unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24(v10, v16, v11);
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v25(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v21 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
LABEL_5:
    uint64_t v26 = v38;
    sub_1C151630C();
    sub_1BFF97BE4((uint64_t)v10);
    goto LABEL_7;
  }
  uint64_t v26 = v38;
  v24(v38, v10, v11);
  uint64_t v21 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
LABEL_7:
  id v27 = [v41 (SEL)v21[446]];
  if (v27)
  {
    uint64_t v28 = v27;
    sub_1C15162BC();

    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v29(v7, v16, v11);
    v25(v7, 0, 1, v11);
    int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
    char v31 = v39;
    if (v30 != 1)
    {
      v29(v39, v7, v11);
      goto LABEL_12;
    }
  }
  else
  {
    v25(v7, 1, 1, v11);
    char v31 = v39;
  }
  sub_1C151630C();
  sub_1BFF97BE4((uint64_t)v7);
LABEL_12:
  if (sub_1C15162EC())
  {
    id v32 = objc_msgSend(v37, sel_difficulty);
    char v33 = (uint64_t)v32 < (uint64_t)objc_msgSend(v41, sel_difficulty);
  }
  else
  {
    char v33 = sub_1C151622C();
  }
  id v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v31, v11);
  v34(v26, v11);
  return v33 & 1;
}

uint64_t sub_1C0A55198(id *a1)
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = MEMORY[0x1F4188790](v9).n128_u64[0];
  uint64_t v12 = (char *)&v18 - v11;
  id v13 = objc_msgSend(*a1, sel_publishDate, v10);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  uint64_t v14 = v13;
  sub_1C15162BC();

  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v15(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1BFF97BE4((uint64_t)v4);
    char v16 = 0;
    return v16 & 1;
  }
  v15(v12, v4, v5);
  char v16 = sub_1C15162EC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v16 & 1;
}

uint64_t sub_1C0A553E0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed20LatestPuzzleProvider_timeZone;
  uint64_t v2 = sub_1C15166BC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A55488()
{
  return type metadata accessor for LatestPuzzleProvider();
}

uint64_t type metadata accessor for LatestPuzzleProvider()
{
  uint64_t result = qword_1EB86FBF8;
  if (!qword_1EB86FBF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0A554DC()
{
  uint64_t result = sub_1C15166BC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0A55578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1C0125AF8;
  return sub_1C0A5390C(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0A55640(void **a1, void **__src, unint64_t a3, id *__dst, uint64_t a5)
{
  uint64_t v6 = __dst;
  uint64_t v8 = __src;
  uint64_t v9 = (char *)__src - (char *)a1;
  uint64_t v10 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v10 = (char *)__src - (char *)a1;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)__src;
  uint64_t v13 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v13 = a3 - (void)__src;
  }
  uint64_t v14 = v13 >> 3;
  id v41 = a1;
  uint64_t v40 = __dst;
  __srca = a1;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      uint64_t v22 = v5;
      if (__dst != __src || &__src[v14] <= __dst)
      {
        memmove(__dst, __src, 8 * v14);
        a1 = __srca;
      }
      uint64_t v23 = &v6[v14];
      uint64_t v39 = v23;
      id v41 = v8;
      if (a1 >= v8 || v12 < 8) {
        goto LABEL_48;
      }
      unint64_t v24 = (void **)(a3 - 8);
      unint64_t v25 = v8;
      id v34 = v6;
      while (1)
      {
        unint64_t v27 = (unint64_t)v23;
        uint64_t v28 = v23 - 1;
        uint64_t v38 = *(v23 - 1);
        uint64_t v29 = *--v25;
        id v37 = v29;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        char v30 = sub_1C0A54DA8(&v38, &v37, a5);
        if (v22) {
          goto LABEL_47;
        }
        char v31 = v30;
        id v32 = v24 + 1;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v31)
        {
          if (v32 != v8 || v24 >= v8) {
            *unint64_t v24 = *v25;
          }
          id v41 = v25;
          uint64_t v22 = 0;
          uint64_t v26 = v34;
          uint64_t v23 = (id *)v27;
          if (v25 <= __srca) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v39 = v28;
          if ((unint64_t)v32 < v27 || (unint64_t)v24 >= v27 || v32 != (void **)v27) {
            *unint64_t v24 = *v28;
          }
          unint64_t v25 = v8;
          uint64_t v23 = v28;
          uint64_t v22 = 0;
          uint64_t v26 = v34;
          if (v8 <= __srca) {
            goto LABEL_48;
          }
        }
        --v24;
        uint64_t v8 = v25;
        if (v23 <= v26) {
          goto LABEL_48;
        }
      }
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != a1 || &a1[v11] <= __dst)
    {
      memmove(__dst, a1, 8 * v11);
      a1 = __srca;
    }
    uint64_t v15 = &v6[v11];
    uint64_t v39 = v15;
    if ((unint64_t)v8 >= a3 || v9 < 8) {
      goto LABEL_48;
    }
    while (1)
    {
      char v16 = a1;
      uint64_t v38 = *v8;
      uint64_t v17 = v6;
      id v37 = *v6;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      char v18 = sub_1C0A54DA8(&v38, &v37, a5);
      if (v5) {
        break;
      }
      char v19 = v18;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (v19)
      {
        unint64_t v20 = v8 + 1;
        uint64_t v21 = v16;
        if (v16 < v8 || v16 >= v20 || v16 != v8) {
          *char v16 = *v8;
        }
        uint64_t v6 = v17;
      }
      else
      {
        uint64_t v21 = v16;
        if (v16 != v17) {
          *char v16 = *v17;
        }
        uint64_t v6 = v17 + 1;
        uint64_t v40 = v17 + 1;
        unint64_t v20 = v8;
      }
      a1 = v21 + 1;
      id v41 = a1;
      if (v6 < v15)
      {
        uint64_t v8 = v20;
        if ((unint64_t)v20 < a3) {
          continue;
        }
      }
      goto LABEL_48;
    }
LABEL_47:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_48:
    sub_1C0634F70((void **)&v41, (const void **)&v40, &v39);
    swift_release();
    return 1;
  }
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

unint64_t sub_1C0A559DC()
{
  unint64_t result = qword_1EA1A2CE8;
  if (!qword_1EA1A2CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2CE8);
  }
  return result;
}

void sub_1C0A55A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v52 = a1;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v68 = sub_1C151631C();
  MEMORY[0x1F4188790](v68);
  uint64_t v58 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v62 = (char *)&v50 - v17;
  MEMORY[0x1F4188790](v18);
  unint64_t v64 = (char *)&v50 - v20;
  uint64_t v51 = a2;
  uint64_t v60 = a3;
  if (a3 != a2)
  {
    uint64_t v21 = *a4;
    uint64_t v56 = a5 + OBJC_IVAR____TtC8NewsFeed20LatestPuzzleProvider_timeZone;
    uint64_t v57 = v14;
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v66 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    unint64_t v61 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    uint64_t v55 = (void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v59 = v21;
    uint64_t v22 = v21 + 8 * v60 - 8;
    uint64_t v63 = v11;
LABEL_5:
    uint64_t v23 = *(void **)(v59 + 8 * v60);
    uint64_t v24 = v52;
    uint64_t v53 = v22;
    unint64_t v25 = v64;
    while (1)
    {
      uint64_t v26 = *(void **)v22;
      swift_unknownObjectRetain();
      id v67 = v26;
      swift_unknownObjectRetain();
      id v27 = objc_msgSend(v23, sel_publishDate);
      if (!v27) {
        break;
      }
      uint64_t v28 = v27;
      uint64_t v29 = v68;
      char v30 = v62;
      sub_1C15162BC();

      char v31 = *v65;
      uint64_t v32 = (uint64_t)v57;
      (*v65)(v57, v30, v29);
      char v33 = *v66;
      (*v66)(v32, 0, 1, v29);
      if ((*v61)(v32, 1, v29) == 1)
      {
        unint64_t v25 = v64;
LABEL_10:
        sub_1C151630C();
        sub_1BFF97BE4(v32);
        goto LABEL_12;
      }
      id v34 = v64;
      v31(v64, (char *)v32, v29);
      unint64_t v25 = v34;
      uint64_t v11 = v63;
LABEL_12:
      id v35 = objc_msgSend(v67, sel_publishDate);
      uint64_t v36 = v58;
      if (v35)
      {
        id v37 = v35;
        uint64_t v38 = v62;
        sub_1C15162BC();

        uint64_t v39 = *v65;
        uint64_t v40 = v38;
        unint64_t v25 = v64;
        uint64_t v41 = v68;
        (*v65)(v11, v40, v68);
        v33((uint64_t)v11, 0, 1, v41);
        if ((*v61)((uint64_t)v11, 1, v41) != 1)
        {
          v39(v36, v11, v68);
          goto LABEL_17;
        }
      }
      else
      {
        v33((uint64_t)v11, 1, 1, v68);
      }
      sub_1C151630C();
      sub_1BFF97BE4((uint64_t)v11);
LABEL_17:
      if (sub_1C15162EC())
      {
        id v54 = objc_msgSend(v23, sel_difficulty);
        id v42 = objc_msgSend(v67, sel_difficulty);
        uint64_t v43 = v36;
        uint64_t v44 = *v55;
        uint64_t v45 = v68;
        (*v55)(v43, v68);
        v44(v25, v45);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v11 = v63;
        if ((uint64_t)v54 >= (uint64_t)v42) {
          goto LABEL_4;
        }
      }
      else
      {
        char v46 = sub_1C151622C();
        uint64_t v47 = *v55;
        uint64_t v48 = v68;
        (*v55)(v36, v68);
        v47(v25, v48);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v11 = v63;
        if ((v46 & 1) == 0) {
          goto LABEL_4;
        }
      }
      if (!v59)
      {
        __break(1u);
        return;
      }
      uint64_t v49 = *(void **)v22;
      uint64_t v23 = *(void **)(v22 + 8);
      *(void *)uint64_t v22 = v23;
      *(void *)(v22 + 8) = v49;
      v22 -= 8;
      if (v60 == ++v24)
      {
LABEL_4:
        uint64_t v22 = v53 + 8;
        if (++v60 == v51) {
          return;
        }
        goto LABEL_5;
      }
    }
    char v33 = *v66;
    uint64_t v32 = (uint64_t)v57;
    (*v66)((uint64_t)v57, 1, 1, v68);
    goto LABEL_10;
  }
}

uint64_t sub_1C0A55F74(uint64_t *a1, uint64_t a2)
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v191 = (char *)&v173 - v9;
  MEMORY[0x1F4188790](v10);
  v181 = (char *)&v173 - v11;
  MEMORY[0x1F4188790](v12);
  v180 = (char *)&v173 - v13;
  uint64_t v14 = sub_1C151631C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  v190 = (char *)&v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v200 = (char *)&v173 - v18;
  MEMORY[0x1F4188790](v19);
  v179 = (char *)&v173 - v20;
  MEMORY[0x1F4188790](v21);
  v198 = (char *)&v173 - v22;
  MEMORY[0x1F4188790](v23);
  v184 = (char *)&v173 - v24;
  v177 = a1;
  uint64_t v25 = a1[1];
  uint64_t v187 = a2;
  swift_retain_n();
  uint64_t v26 = sub_1C152086C();
  if (v26 >= v25)
  {
    if (v25 < 0) {
      goto LABEL_163;
    }
    if (v25)
    {
      uint64_t v30 = v187;
      swift_retain();
      sub_1C0A55A30(0, v25, 1, v177, v30);
    }
    return swift_release_n();
  }
  if (v25 >= 0) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 + 1;
  }
  if (v25 < -1) {
    goto LABEL_171;
  }
  uint64_t v176 = v26;
  uint64_t v203 = v14;
  uint64_t v182 = v25;
  uint64_t v188 = v2;
  if (v25 < 2)
  {
    uint64_t v32 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v206 = MEMORY[0x1E4FBC860];
    v186 = (id *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v25 != 1)
    {
      unint64_t v103 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_127:
      if (v103 >= 2)
      {
        uint64_t v160 = *v177;
        uint64_t v203 = *v177;
        uint64_t v161 = v187;
        do
        {
          unint64_t v162 = v103 - 2;
          if (v103 < 2) {
            goto LABEL_157;
          }
          if (!v160) {
            goto LABEL_170;
          }
          v163 = v32;
          uint64_t v164 = *(void *)&v32[16 * v162 + 32];
          uint64_t v165 = *(void *)&v32[16 * v103 + 24];
          v166 = (void **)(v160 + 8 * v164);
          v167 = (void **)(v160 + 8 * *(void *)&v32[16 * v103 + 16]);
          unint64_t v168 = v160 + 8 * v165;
          swift_retain();
          v169 = v166;
          uint64_t v170 = v188;
          sub_1C0A55640(v169, v167, v168, v186, v161);
          uint64_t v188 = v170;
          if (v170) {
            break;
          }
          if (v165 < v164) {
            goto LABEL_159;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v163 = sub_1C063604C((uint64_t)v32);
          }
          if (v162 >= *((void *)v163 + 2)) {
            goto LABEL_160;
          }
          v171 = &v163[16 * v162 + 32];
          *(void *)v171 = v164;
          *((void *)v171 + 1) = v165;
          unint64_t v172 = *((void *)v163 + 2);
          if (v103 > v172) {
            goto LABEL_161;
          }
          memmove(&v163[16 * v103 + 16], &v163[16 * v103 + 32], 16 * (v172 - v103));
          *((void *)v163 + 2) = v172 - 1;
          unint64_t v103 = v172 - 1;
          uint64_t v32 = v163;
          uint64_t v160 = v203;
        }
        while (v172 > 2);
      }
LABEL_138:
      swift_bridgeObjectRelease();
LABEL_139:
      *(void *)((v206 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C151EBEC();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v28 = v27 >> 1;
    sub_1C0403070();
    uint64_t v29 = sub_1C151ECCC();
    *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) = v28;
    v186 = (id *)((v29 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v206 = v29;
  }
  uint64_t v33 = 0;
  uint64_t v34 = *v177;
  uint64_t v193 = v187 + OBJC_IVAR____TtC8NewsFeed20LatestPuzzleProvider_timeZone;
  v199 = (void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v201 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v197 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v192 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v173 = v34 + 16;
  uint64_t v174 = v34 - 8;
  uint64_t v32 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v35 = v182;
  v194 = v7;
  uint64_t v195 = v34;
  while (1)
  {
    uint64_t v36 = v32;
    uint64_t v37 = v33;
    uint64_t v38 = v33 + 1;
    uint64_t v185 = v33;
    if (v33 + 1 >= v35) {
      goto LABEL_43;
    }
    uint64_t v39 = *(void **)(v34 + 8 * v38);
    id v204 = *(id *)(v34 + 8 * v33);
    v205 = v39;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v40 = v188;
    LODWORD(v189) = sub_1C0A54DA8(&v205, &v204, v187);
    uint64_t v188 = v40;
    if (v40)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_139;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v38 = v37 + 2;
    if (v37 + 2 >= v182) {
      goto LABEL_34;
    }
    v175 = v36;
    uint64_t v41 = (void **)(v173 + 8 * v37);
    uint64_t v42 = v203;
    do
    {
      uint64_t v196 = v38;
      uint64_t v47 = (void **)*(v41 - 1);
      char v46 = *v41;
      swift_unknownObjectRetain();
      v202 = v47;
      swift_unknownObjectRetain();
      id v48 = objc_msgSend(v46, sel_publishDate);
      if (v48)
      {
        uint64_t v49 = v48;
        uint64_t v50 = v198;
        sub_1C15162BC();

        uint64_t v51 = v199;
        uint64_t v52 = *v199;
        uint64_t v53 = (uint64_t)v180;
        (*v199)((uint64_t)v180, v50, v42);
        id v54 = *v201;
        (*v201)(v53, 0, 1, v42);
        int v55 = (*v197)(v53, 1, v42);
        uint64_t v56 = (uint64_t)v181;
        if (v55 != 1)
        {
          v52((uint64_t)v184, (char *)v53, v42);
          goto LABEL_25;
        }
      }
      else
      {
        id v54 = *v201;
        uint64_t v53 = (uint64_t)v180;
        (*v201)((uint64_t)v180, 1, 1, v42);
        uint64_t v56 = (uint64_t)v181;
      }
      sub_1C151630C();
      sub_1BFF97BE4(v53);
      uint64_t v51 = v199;
LABEL_25:
      id v57 = objc_msgSend(v202, sel_publishDate, v173);
      if (v57)
      {
        uint64_t v58 = v57;
        uint64_t v59 = v198;
        sub_1C15162BC();

        uint64_t v60 = *v51;
        uint64_t v42 = v203;
        (*v51)(v56, v59, v203);
        v54(v56, 0, 1, v42);
        if ((*v197)(v56, 1, v42) != 1)
        {
          unint64_t v61 = v179;
          v60((uint64_t)v179, (char *)v56, v42);
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v42 = v203;
        v54(v56, 1, 1, v203);
      }
      unint64_t v61 = v179;
      sub_1C151630C();
      sub_1BFF97BE4(v56);
LABEL_30:
      uint64_t v62 = v184;
      if (sub_1C15162EC())
      {
        id v43 = objc_msgSend(v46, sel_difficulty);
        BOOL v44 = (uint64_t)v43 >= (uint64_t)objc_msgSend(v202, sel_difficulty);
        uint64_t v45 = *v192;
        (*v192)(v61, v42);
        v45(v62, v42);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (((v189 ^ v44) & 1) == 0) {
          goto LABEL_32;
        }
      }
      else
      {
        int v63 = sub_1C151622C();
        unint64_t v64 = *v192;
        (*v192)(v61, v42);
        v64(v62, v42);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if ((v189 ^ v63))
        {
LABEL_32:
          uint64_t v36 = v175;
          uint64_t v38 = v196;
          uint64_t v7 = v194;
          uint64_t v37 = v185;
          goto LABEL_34;
        }
      }
      uint64_t v38 = v196 + 1;
      ++v41;
      uint64_t v37 = v185;
    }
    while (v182 != v196 + 1);
    uint64_t v38 = v182;
    uint64_t v36 = v175;
    uint64_t v7 = v194;
LABEL_34:
    uint64_t v34 = v195;
    if (v189) {
      break;
    }
LABEL_43:
    if (v38 >= v182) {
      goto LABEL_74;
    }
    if (__OFSUB__(v38, v37)) {
      goto LABEL_162;
    }
    if (v38 - v37 >= v176) {
      goto LABEL_74;
    }
    if (__OFADD__(v37, v176)) {
      goto LABEL_164;
    }
    uint64_t v70 = v182;
    if (v37 + v176 < v182) {
      uint64_t v70 = v37 + v176;
    }
    if (v70 < v37)
    {
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }
    if (v38 == v70) {
      goto LABEL_74;
    }
    v175 = v36;
    uint64_t v71 = v174 + 8 * v38;
    uint64_t v178 = v70;
    while (2)
    {
      long long v73 = *(void **)(v34 + 8 * v38);
      uint64_t v74 = v37;
      uint64_t v183 = v71;
      uint64_t v196 = v38;
      while (1)
      {
        uint64_t v75 = *(void ***)v71;
        swift_unknownObjectRetain();
        v202 = v75;
        swift_unknownObjectRetain();
        id v76 = objc_msgSend(v73, sel_publishDate);
        if (!v76)
        {
          uint64_t v82 = *v201;
          uint64_t v80 = (uint64_t)v191;
          (*v201)((uint64_t)v191, 1, 1, v203);
LABEL_59:
          sub_1C151630C();
          sub_1BFF97BE4(v80);
          goto LABEL_61;
        }
        uint64_t v77 = v76;
        __n128 v78 = v198;
        sub_1C15162BC();

        uint64_t v79 = *v199;
        uint64_t v80 = (uint64_t)v191;
        uint64_t v81 = v203;
        (*v199)((uint64_t)v191, v78, v203);
        uint64_t v82 = *v201;
        (*v201)(v80, 0, 1, v81);
        if ((*v197)(v80, 1, v81) == 1) {
          goto LABEL_59;
        }
        v79((uint64_t)v200, (char *)v80, v81);
LABEL_61:
        id v83 = objc_msgSend(v202, sel_publishDate, v173);
        if (v83)
        {
          v84 = v83;
          uint64_t v85 = v198;
          sub_1C15162BC();

          v86 = *v199;
          uint64_t v87 = v85;
          uint64_t v88 = v203;
          (*v199)((uint64_t)v7, v87, v203);
          v82((uint64_t)v7, 0, 1, v88);
          if ((*v197)((uint64_t)v7, 1, v88) != 1)
          {
            v89 = v190;
            v86((uint64_t)v190, v7, v203);
            goto LABEL_66;
          }
        }
        else
        {
          v82((uint64_t)v7, 1, 1, v203);
        }
        v89 = v190;
        sub_1C151630C();
        sub_1BFF97BE4((uint64_t)v7);
LABEL_66:
        v90 = v200;
        if (sub_1C15162EC())
        {
          int64_t v189 = (int64_t)objc_msgSend(v73, sel_difficulty);
          id v91 = objc_msgSend(v202, sel_difficulty);
          v92 = *v192;
          uint64_t v93 = v89;
          uint64_t v94 = v203;
          (*v192)(v93, v203);
          v92(v90, v94);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          if (v189 >= (uint64_t)v91) {
            break;
          }
          goto LABEL_70;
        }
        char v95 = sub_1C151622C();
        v96 = *v192;
        v97 = v89;
        uint64_t v98 = v203;
        (*v192)(v97, v203);
        v96(v90, v98);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if ((v95 & 1) == 0) {
          break;
        }
LABEL_70:
        uint64_t v34 = v195;
        uint64_t v72 = v196;
        if (!v195) {
          goto LABEL_167;
        }
        long long v99 = *(void ***)v71;
        long long v73 = *(void **)(v71 + 8);
        *(void *)uint64_t v71 = v73;
        *(void *)(v71 + 8) = v99;
        v71 -= 8;
        ++v74;
        uint64_t v7 = v194;
        if (v72 == v74) {
          goto LABEL_53;
        }
      }
      uint64_t v7 = v194;
      uint64_t v34 = v195;
      uint64_t v72 = v196;
LABEL_53:
      uint64_t v38 = v72 + 1;
      uint64_t v71 = v183 + 8;
      uint64_t v37 = v185;
      if (v38 != v178) {
        continue;
      }
      break;
    }
    uint64_t v38 = v178;
    uint64_t v36 = v175;
LABEL_74:
    if (v38 < v37) {
      goto LABEL_158;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v196 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v36 = sub_1C0634CC8(0, *((void *)v36 + 2) + 1, 1, v36);
    }
    unint64_t v102 = *((void *)v36 + 2);
    unint64_t v101 = *((void *)v36 + 3);
    unint64_t v103 = v102 + 1;
    uint64_t v34 = v195;
    if (v102 >= v101 >> 1)
    {
      v159 = sub_1C0634CC8((char *)(v101 > 1), v102 + 1, 1, v36);
      uint64_t v34 = v195;
      uint64_t v36 = v159;
    }
    *((void *)v36 + 2) = v103;
    v104 = v36 + 32;
    v105 = &v36[16 * v102 + 32];
    uint64_t v106 = v196;
    *(void *)v105 = v37;
    *((void *)v105 + 1) = v106;
    if (v102)
    {
      uint64_t v32 = v36;
      while (1)
      {
        unint64_t v107 = v103 - 1;
        if (v103 >= 4)
        {
          uint64_t v112 = &v104[16 * v103];
          uint64_t v113 = *((void *)v112 - 8);
          uint64_t v114 = *((void *)v112 - 7);
          BOOL v118 = __OFSUB__(v114, v113);
          uint64_t v115 = v114 - v113;
          if (v118) {
            goto LABEL_146;
          }
          uint64_t v117 = *((void *)v112 - 6);
          uint64_t v116 = *((void *)v112 - 5);
          BOOL v118 = __OFSUB__(v116, v117);
          uint64_t v110 = v116 - v117;
          char v111 = v118;
          if (v118) {
            goto LABEL_147;
          }
          unint64_t v119 = v103 - 2;
          uint64_t v120 = &v104[16 * v103 - 32];
          uint64_t v122 = *(void *)v120;
          uint64_t v121 = *((void *)v120 + 1);
          BOOL v118 = __OFSUB__(v121, v122);
          uint64_t v123 = v121 - v122;
          if (v118) {
            goto LABEL_149;
          }
          BOOL v118 = __OFADD__(v110, v123);
          uint64_t v124 = v110 + v123;
          if (v118) {
            goto LABEL_152;
          }
          if (v124 >= v115)
          {
            v142 = &v104[16 * v107];
            uint64_t v144 = *(void *)v142;
            uint64_t v143 = *((void *)v142 + 1);
            BOOL v118 = __OFSUB__(v143, v144);
            uint64_t v145 = v143 - v144;
            if (v118) {
              goto LABEL_156;
            }
            BOOL v135 = v110 < v145;
            goto LABEL_112;
          }
        }
        else
        {
          if (v103 != 3)
          {
            uint64_t v136 = *((void *)v32 + 4);
            uint64_t v137 = *((void *)v32 + 5);
            BOOL v118 = __OFSUB__(v137, v136);
            uint64_t v129 = v137 - v136;
            char v130 = v118;
            goto LABEL_106;
          }
          uint64_t v109 = *((void *)v32 + 4);
          uint64_t v108 = *((void *)v32 + 5);
          BOOL v118 = __OFSUB__(v108, v109);
          uint64_t v110 = v108 - v109;
          char v111 = v118;
        }
        if (v111) {
          goto LABEL_148;
        }
        unint64_t v119 = v103 - 2;
        uint64_t v125 = &v104[16 * v103 - 32];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v128 = __OFSUB__(v126, v127);
        uint64_t v129 = v126 - v127;
        char v130 = v128;
        if (v128) {
          goto LABEL_151;
        }
        long long v131 = &v104[16 * v107];
        uint64_t v133 = *(void *)v131;
        uint64_t v132 = *((void *)v131 + 1);
        BOOL v118 = __OFSUB__(v132, v133);
        uint64_t v134 = v132 - v133;
        if (v118) {
          goto LABEL_154;
        }
        if (__OFADD__(v129, v134)) {
          goto LABEL_155;
        }
        if (v129 + v134 >= v110)
        {
          BOOL v135 = v110 < v134;
LABEL_112:
          if (v135) {
            unint64_t v107 = v119;
          }
          goto LABEL_114;
        }
LABEL_106:
        if (v130) {
          goto LABEL_150;
        }
        v138 = &v104[16 * v107];
        uint64_t v140 = *(void *)v138;
        uint64_t v139 = *((void *)v138 + 1);
        BOOL v118 = __OFSUB__(v139, v140);
        uint64_t v141 = v139 - v140;
        if (v118) {
          goto LABEL_153;
        }
        if (v141 < v129) {
          goto LABEL_123;
        }
LABEL_114:
        unint64_t v146 = v107 - 1;
        if (v107 - 1 >= v103)
        {
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
          goto LABEL_165;
        }
        if (!v34) {
          goto LABEL_168;
        }
        v147 = &v104[16 * v146];
        uint64_t v148 = *(void *)v147;
        v149 = v104;
        unint64_t v150 = v107;
        v151 = &v104[16 * v107];
        uint64_t v152 = *((void *)v151 + 1);
        v153 = (void **)(v34 + 8 * *(void *)v147);
        v202 = (void **)(v34 + 8 * *(void *)v151);
        int64_t v189 = v34 + 8 * v152;
        uint64_t v154 = v187;
        swift_retain();
        v155 = v153;
        uint64_t v156 = v188;
        sub_1C0A55640(v155, v202, v189, v186, v154);
        uint64_t v188 = v156;
        if (v156) {
          goto LABEL_138;
        }
        if (v152 < v148) {
          goto LABEL_143;
        }
        if (v150 > *((void *)v32 + 2)) {
          goto LABEL_144;
        }
        unint64_t v157 = v150;
        *(void *)v147 = v148;
        *(void *)&v149[16 * v146 + 8] = v152;
        unint64_t v158 = *((void *)v32 + 2);
        if (v150 >= v158) {
          goto LABEL_145;
        }
        v104 = v149;
        unint64_t v103 = v158 - 1;
        memmove(v151, v151 + 16, 16 * (v158 - 1 - v157));
        *((void *)v32 + 2) = v158 - 1;
        uint64_t v7 = v194;
        uint64_t v34 = v195;
        if (v158 <= 2) {
          goto LABEL_123;
        }
      }
    }
    unint64_t v103 = 1;
    uint64_t v32 = v36;
LABEL_123:
    uint64_t v35 = v182;
    uint64_t v33 = v196;
    if (v196 >= v182) {
      goto LABEL_127;
    }
  }
  if (v38 >= v37)
  {
    if (v37 < v38)
    {
      uint64_t v65 = (uint64_t *)(v174 + 8 * v38);
      uint64_t v66 = v38;
      uint64_t v67 = v37;
      uint64_t v68 = (uint64_t *)(v195 + 8 * v37);
      while (1)
      {
        if (v67 != --v66)
        {
          if (!v34) {
            goto LABEL_169;
          }
          uint64_t v69 = *v68;
          uint64_t *v68 = *v65;
          *uint64_t v65 = v69;
        }
        ++v67;
        --v65;
        ++v68;
        if (v67 >= v66) {
          goto LABEL_43;
        }
      }
    }
    goto LABEL_43;
  }
LABEL_166:
  __break(1u);
LABEL_167:
  swift_release_n();
  __break(1u);
LABEL_168:
  swift_release_n();
  __break(1u);
LABEL_169:
  swift_release_n();
  __break(1u);
LABEL_170:
  swift_release_n();
  __break(1u);
LABEL_171:
  swift_release_n();
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C0A5701C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1BFEAF960(v4);
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_retain();
  sub_1C0A55F74(v8, a2);
  swift_release();
  sub_1C152026C();
  return swift_release_n();
}

uint64_t sub_1C0A570C8(id *a1)
{
  return sub_1C0A55198(a1) & 1;
}

Swift::Bool __swiftcall FeedPrerollAdRequester.hasScheduledRequest(for:)(Swift::String a1)
{
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v2;
}

uint64_t sub_1C0A5717C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_1BFF896B4(a2, a3, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = a3 & 1;
  return result;
}

uint64_t sub_1C0A571FC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C0A5717C(v1[2], v1[3], v1[4], a1);
}

uint64_t FeedPrerollAdRequester.scheduleRequest(for:createContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v6 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_1C151D72C();
  uint64_t v14 = *(void *)(v3 + 56);
  uint64_t v47 = v15;
  uint64_t v48 = v14;
  uint64_t v45 = v3;
  uint64_t v46 = v13;
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_bridgeObjectRelease();
  swift_release();
  if (v49)
  {
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)qword_1EB93C6F8;
    sub_1BFEE7F7C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    id v18 = v16;
    uint64_t v19 = sub_1C151D72C();
    uint64_t v21 = v20;
    *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v17 + 64) = sub_1BFE9C558();
    *(void *)(v17 + 32) = v19;
    *(void *)(v17 + 40) = v21;
    sub_1C151F38C();
    sub_1C15197BC();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = v7;
    sub_1C151D72C();
    sub_1C151DABC();
    swift_bridgeObjectRelease();
    sub_1C151D72C();
    sub_1C151DAEC();
    swift_bridgeObjectRelease();
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    uint64_t v23 = (void *)qword_1EB93C6F8;
    sub_1BFEE7F7C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    id v25 = v23;
    uint64_t v26 = sub_1C151D72C();
    uint64_t v28 = v27;
    *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v24 + 64) = sub_1BFE9C558();
    *(void *)(v24 + 32) = v26;
    *(void *)(v24 + 40) = v28;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C1517E7C();
    uint64_t v29 = sub_1C151D72C();
    uint64_t v31 = v30;
    swift_beginAccess();
    sub_1BFEFFC1C(&v49, v29, v31);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_1C151D73C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v12, a1, v32);
    uint64_t v33 = &v12[*(int *)(v6 + 20)];
    uint64_t v34 = v44;
    *(void *)uint64_t v33 = v43;
    *((void *)v33 + 1) = v34;
    sub_1C0A57D54((uint64_t)v12, (uint64_t)v10);
    uint64_t v35 = (unint64_t *)(v4 + 24);
    swift_beginAccess();
    unint64_t v36 = *(void *)(v4 + 24);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v4 + 24) = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v36 = sub_1C0EE6D48(0, *(void *)(v36 + 16) + 1, 1, v36);
      *uint64_t v35 = v36;
    }
    unint64_t v39 = *(void *)(v36 + 16);
    unint64_t v38 = *(void *)(v36 + 24);
    uint64_t v40 = v42;
    if (v39 >= v38 >> 1)
    {
      unint64_t v36 = sub_1C0EE6D48(v38 > 1, v39 + 1, 1, v36);
      *uint64_t v35 = v36;
    }
    *(void *)(v36 + 16) = v39 + 1;
    sub_1C0A57DB8((uint64_t)v10, v36+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v39);
    swift_endAccess();
    sub_1C1517E8C();
    return sub_1C0A58008((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
  }
}

uint64_t type metadata accessor for FeedPrerollAdRequester.ScheduledRequest()
{
  uint64_t result = qword_1EA1A2D08;
  if (!qword_1EA1A2D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FeedPrerollAdRequester.initiateScheduledRequest(for:)()
{
  sub_1C0A57E1C();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE7F7C(0, &qword_1EA1A2CF8, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v34 = (uint64_t)v30 - v5;
  uint64_t v33 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  uint64_t v6 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v32 = (uint64_t)v30 - v10;
  uint64_t v35 = *(void *)(v0 + 56);
  sub_1C1517ECC();
  sub_1BFEE7F7C(0, &qword_1EA1A2D00, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, MEMORY[0x1E4FBB320]);
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  uint64_t v11 = *(void *)(v36 + 16);
  if (v11)
  {
    v30[1] = v0;
    uint64_t v31 = v3;
    uint64_t v12 = v36 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C0A57D54(v12, (uint64_t)v8);
      uint64_t v14 = sub_1C151D72C();
      uint64_t v16 = v15;
      if (v14 == sub_1C151D72C() && v16 == v17) {
        break;
      }
      char v18 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_11;
      }
      sub_1C0A58008((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = 1;
        uint64_t v3 = v31;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v21 = v33;
    swift_bridgeObjectRelease();
    uint64_t v20 = v34;
    sub_1C0A57DB8((uint64_t)v8, v34);
    uint64_t v19 = 0;
    uint64_t v3 = v31;
  }
  else
  {
    uint64_t v19 = 1;
LABEL_9:
    uint64_t v21 = v33;
    uint64_t v20 = v34;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, v19, 1, v21);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v20, 1, v21) == 1)
  {
    sub_1C0A57F20(v20);
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    id v22 = (id)qword_1EB93C6F8;
    sub_1C151F36C();
    sub_1BFEE7F7C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
    uint64_t v24 = sub_1C151D72C();
    uint64_t v26 = v25;
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 64) = sub_1BFE9C558();
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v26;
    sub_1C15197BC();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = v32;
    sub_1C0A57DB8(v20, v32);
    uint64_t v29 = sub_1C151D0FC();
    MEMORY[0x1F4188790](v29);
    v30[-2] = v28;
    sub_1C151D54C();
    swift_release();
    sub_1C0A58008((uint64_t)v3, (uint64_t (*)(void))sub_1C0A57E1C);
    return sub_1C0A58008(v28, (uint64_t (*)(void))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
  }
}

uint64_t FeedPrerollAdRequester.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FeedPrerollAdRequester.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A57D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A57DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0A57E1C()
{
  if (!qword_1EA1A2CF0)
  {
    sub_1C151D80C();
    sub_1C151D73C();
    sub_1C008E358(&qword_1EB896BE0, MEMORY[0x1E4F7AE40]);
    unint64_t v0 = sub_1C151D44C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2CF0);
    }
  }
}

uint64_t sub_1C0A57ED8@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0A57F20(uint64_t a1)
{
  sub_1BFEE7F7C(0, &qword_1EA1A2CF8, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0A57FAC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  return (*(uint64_t (**)(uint64_t))(v3 + *(int *)(v4 + 20)))(a1);
}

uint64_t sub_1C0A58008(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t method lookup function for FeedPrerollAdRequester(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedPrerollAdRequester);
}

uint64_t *sub_1C0A58080(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1C151D73C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C0A58154(uint64_t a1)
{
  uint64_t v2 = sub_1C151D73C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_1C0A581CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_1C0A58254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C0A582E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C0A58364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1C0A583EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0A58400);
}

uint64_t sub_1C0A58400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151D73C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C0A584C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0A584D4);
}

uint64_t sub_1C0A584D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151D73C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C0A58590()
{
  uint64_t result = sub_1C151D73C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLayoutSection()
{
  return &type metadata for DebugFormatLayoutSection;
}

uint64_t PuzzleHintFormatter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C152A650;
  type metadata accessor for PuzzleTagConverter();
  unint64_t v1 = (void *)swift_allocObject();
  v1[2] = 23390;
  v1[3] = 0xE200000000000000;
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = 0;
  *(void *)(v0 + 32) = v1;
  return v0;
}

void sub_1C0A586A4()
{
}

uint64_t sub_1C0A586C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A5A128(a1, a2, a3, (void (*)(void))sub_1C0A5B058);
}

uint64_t sub_1C0A586D8()
{
  return sub_1C151E49C();
}

void sub_1C0A5871C()
{
}

uint64_t PuzzleHintFormatter.init()()
{
  *(_OWORD *)(v0 + 16) = xmmword_1C152A650;
  type metadata accessor for PuzzleTagConverter();
  unint64_t v1 = (void *)swift_allocObject();
  v1[2] = 23390;
  v1[3] = 0xE200000000000000;
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = 0;
  *(void *)(v0 + 32) = v1;
  return v0;
}

uint64_t type metadata accessor for PuzzleTagConverter()
{
  return self;
}

uint64_t PuzzleHintFormatter.attributedString(from:format:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  v51._object = a2;
  uint64_t v52 = a3;
  uint64_t v50 = a4;
  v51._uint64_t countAndFlagsBits = a1;
  sub_1BFF2E818(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v46 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v43 - v7;
  uint64_t v49 = sub_1C1515A2C();
  uint64_t v8 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  unint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515A3C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C1515A5C();
  MEMORY[0x1F4188790](v15 - 8);
  MEMORY[0x1F4188790](v16);
  sub_1BFF2E818(0, (unint64_t *)&qword_1EA1A17D0, MEMORY[0x1E4F273A8]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v43 - v21;
  uint64_t v23 = sub_1C1515B3C();
  uint64_t v47 = *(void *)(v23 - 8);
  uint64_t v48 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v44 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v43 - v26;
  uint64_t v28 = sub_1C1515BDC();
  __n128 v30 = MEMORY[0x1F4188790](v28 - 8);
  if (!*v52)
  {
    swift_bridgeObjectRetain();
    sub_1C1515BCC();
LABEL_8:
    sub_1C1515B4C();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    *(&v43 - 2) = v36;
    swift_getKeyPath();
    sub_1BFF63CD0();
    uint64_t v53 = sub_1C151F88C();
    sub_1BFF67A50();
    return sub_1C15159BC();
  }
  if (*v52 == 1)
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v12 + 104))(v14, *MEMORY[0x1E4F27300], v11, v30);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F272E8], v49);
    swift_bridgeObjectRetain();
    sub_1C1515A4C();
    uint64_t v31 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v45, 1, 1, v31);
    sub_1C0A5A500();
    sub_1C1515B2C();
    uint64_t v34 = v47;
    uint64_t v33 = v48;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v22, 0, 1, v48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v33) == 1)
    {
      sub_1C0981C78((uint64_t)v22);
      swift_bridgeObjectRetain();
      sub_1C1515BCC();
      goto LABEL_8;
    }
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v27, v22, v33);
    sub_1C0A590C0((uint64_t)v27, v50);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v27, v33);
  }
  else
  {
    uint64_t v52 = (char *)&v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    PuzzleTagConverter.convertToMarkup(html:)(v51);
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4F27300], v11);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F272E8], v49);
    swift_bridgeObjectRetain();
    sub_1C1515A4C();
    uint64_t v32 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v46, 1, 1, v32);
    sub_1C0A5A500();
    sub_1C1515B2C();
    uint64_t v39 = v47;
    uint64_t v38 = v48;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v19, 0, 1, v48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v19, 1, v38) == 1)
    {
      sub_1C0981C78((uint64_t)v19);
      swift_bridgeObjectRetain();
      sub_1C1515BCC();
      sub_1C1515B4C();
      uint64_t v40 = swift_getKeyPath();
      MEMORY[0x1F4188790](v40);
      *(&v43 - 2) = v41;
      swift_getKeyPath();
      sub_1BFF63CD0();
      uint64_t v53 = sub_1C151F88C();
      sub_1BFF67A50();
      sub_1C15159BC();
    }
    else
    {
      uint64_t v42 = (uint64_t)v44;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v44, v19, v38);
      sub_1C0A590C0(v42, v50);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v38);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t static UIFont.scaledPuzzleHintFont(ofSize:style:weight:traits:)()
{
  return sub_1C151F88C();
}

uint64_t sub_1C0A590C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v94 = (char *)a1;
  sub_1BFF2F030();
  uint64_t v91 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v73 = (uint64_t)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v95 = (uint64_t)v69 - v6;
  uint64_t v80 = sub_1C1515ABC();
  uint64_t v70 = *(void (***)(char *, uint64_t))(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v93 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E818(0, &qword_1EB884CC0, MEMORY[0x1E4F27350]);
  MEMORY[0x1F4188790](v8 - 8);
  v86 = (char *)v69 - v9;
  uint64_t v88 = sub_1C1515ACC();
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v85 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)v69 - v12;
  uint64_t v13 = sub_1C1515ADC();
  uint64_t v89 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C1515B3C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2EF9C();
  id v83 = (int *)(v20 - 8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v82 = (void (*)(char *))((char *)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v69 - v24;
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v17 + 16);
  v26(a2, v94, v16, v23);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v27, sel_scaledValueForValue_, 15.0);
  double v29 = v28;

  if (v29 <= 19.66665) {
    double v30 = v29;
  }
  else {
    double v30 = 19.66665;
  }
  ((void (*)(char *, uint64_t, uint64_t))v26)(v19, a2, v16);
  sub_1C1515AFC();
  uint64_t v31 = v19;
  uint64_t v32 = v80;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v16);
  uint64_t v33 = v89;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
  uint64_t v35 = (uint64_t)v82;
  uint64_t v78 = v89 + 16;
  uint64_t v77 = v34;
  v34((char *)v82, (uint64_t)v15, v13);
  uint64_t v36 = sub_1BFF6770C(&qword_1EB884CC8, MEMORY[0x1E4F27368]);
  uint64_t v37 = v87;
  uint64_t v84 = v36;
  sub_1C151F09C();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v79 = v15;
  uint64_t v89 = v33 + 8;
  id v76 = v38;
  v38(v15, v13);
  uint64_t v39 = v83;
  uint64_t v40 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v35 + v83[11], v37, v88);
  sub_1C0A5ADAC(v35, (uint64_t)v25);
  uint64_t v41 = v39[11];
  uint64_t v94 = v25;
  uint64_t v82 = *(void (**)(char *))(v40 + 16);
  uint64_t v90 = v40 + 16;
  uint64_t v81 = (void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v75 = (void (**)(char *))(v70 + 2);
  id v83 = (int *)(v70 + 7);
  uint64_t v74 = (unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 6);
  uint64_t v71 = (void (**)(char *, char *, uint64_t))(v70 + 4);
  v69[2] = *MEMORY[0x1E4FB2950];
  ++v70;
  uint64_t v92 = a2;
  uint64_t v72 = &v25[v41];
  while (1)
  {
    uint64_t v48 = v87;
    uint64_t v49 = v88;
    v82(v87);
    uint64_t v50 = v85;
    sub_1C151F0EC();
    sub_1BFF6770C(&qword_1EB862830, MEMORY[0x1E4F27358]);
    char v51 = sub_1C151E5CC();
    uint64_t v52 = v13;
    uint64_t v53 = *v81;
    (*v81)(v50, v49);
    v53(v48, v49);
    if (v51) {
      break;
    }
    uint64_t v54 = (uint64_t)v94;
    int v55 = (void (*)(char *, void))sub_1C151F19C();
    uint64_t v56 = v86;
    (*v75)(v86);
    v55(v99, 0);
    id v57 = v79;
    v77(v79, v54, v52);
    sub_1C151F0FC();
    v76(v57, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))v83)(v56, 0, 1, v32);
    if ((*v74)(v56, 1, v32) == 1) {
      return sub_1C0A5AE10((uint64_t)v94, (uint64_t (*)(void))sub_1BFF2EF9C);
    }
    uint64_t v13 = v52;
    (*v71)(v93, v56, v32);
    sub_1C1515AAC();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    v69[-2] = v59;
    swift_getKeyPath();
    sub_1C0A5AF34();
    sub_1C1515A8C();
    swift_release();
    switch(v99[0])
    {
      case 1:
        uint64_t v63 = v73;
        sub_1C0A5AF88(v95, v73);
        swift_getKeyPath();
        swift_getKeyPath();
        double v96 = v30 / 3.0;
        goto LABEL_14;
      case 2:
        uint64_t v63 = v73;
        sub_1C0A5AF88(v95, v73);
        swift_getKeyPath();
        swift_getKeyPath();
        double v96 = v30 * -0.125;
LABEL_14:
        char v97 = 0;
        v69[1] = sub_1BFF6770C(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
        unint64_t v64 = (void (*)(char *, void))sub_1C1515B5C();
        sub_1C151593C();
        sub_1BFF6770C(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
        uint64_t v65 = (void (*)(unsigned char *, void))sub_1C1515C9C();
        sub_1BFF678F0();
        sub_1BFF67CF0();
        sub_1C1515D5C();
        v65(v98, 0);
        swift_release();
        v64(v99, 0);
        sub_1C0A5AE10(v63, (uint64_t (*)(void))sub_1BFF2F030);
        sub_1C0A5AF88(v95, v63);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1BFF63CD0();
        double v96 = COERCE_DOUBLE(sub_1C151F88C());
        uint64_t v66 = (void (*)(char *, void))sub_1C1515B5C();
        uint64_t v67 = (void (*)(unsigned char *, void))sub_1C1515C9C();
        sub_1BFF67A50();
        sub_1C1515D5C();
        v67(v98, 0);
        swift_release();
        v66(v99, 0);
        sub_1C0A5AE10(v63, (uint64_t (*)(void))sub_1BFF2F030);
        uint64_t v47 = v95;
        goto LABEL_7;
      case 3:
      case 4:
      case 5:
        uint64_t v42 = v95;
        uint64_t v43 = v73;
        sub_1C0A5AF88(v95, v73);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1BFF63CD0();
        double v96 = COERCE_DOUBLE(sub_1C151F88C());
        sub_1BFF6770C(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
        uint64_t v44 = (void (*)(char *, void))sub_1C1515B5C();
        sub_1C151593C();
        sub_1BFF6770C(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
        uint64_t v45 = (void (*)(unsigned char *, void))sub_1C1515C9C();
        sub_1BFF678F0();
        sub_1BFF67A50();
        sub_1C1515D5C();
        v45(v98, 0);
        swift_release();
        v44(v99, 0);
        uint64_t v46 = v43;
        goto LABEL_6;
      default:
        uint64_t v42 = v95;
        uint64_t v60 = v73;
        sub_1C0A5AF88(v95, v73);
        swift_getKeyPath();
        swift_getKeyPath();
        *(void *)&double v96 = 1;
        char v97 = 0;
        sub_1BFF6770C(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
        unint64_t v61 = (void (*)(char *, void))sub_1C1515B5C();
        sub_1C151593C();
        sub_1BFF6770C(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
        uint64_t v62 = (void (*)(unsigned char *, void))sub_1C1515C9C();
        sub_1BFF678F0();
        sub_1BFF67BF4();
        sub_1C1515D5C();
        v62(v98, 0);
        swift_release();
        v61(v99, 0);
        uint64_t v46 = v60;
LABEL_6:
        sub_1C0A5AE10(v46, (uint64_t (*)(void))sub_1BFF2F030);
        uint64_t v47 = v42;
LABEL_7:
        sub_1C0A5AE10(v47, (uint64_t (*)(void))sub_1BFF2F030);
        uint64_t v32 = v80;
        (*v70)(v93, v80);
        break;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v83)(v86, 1, 1, v32);
  return sub_1C0A5AE10((uint64_t)v94, (uint64_t (*)(void))sub_1BFF2EF9C);
}

uint64_t sub_1C0A5A128(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return sub_1C151E5CC() & 1;
}

Swift::String __swiftcall PuzzleTagConverter.convertToMarkup(html:)(Swift::String html)
{
  uint64_t v2 = v1;
  object = html._object;
  uint64_t countAndFlagsBits = html._countAndFlagsBits;
  sub_1C0A5AD60(0, &qword_1EA1A2D20, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2D0]);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v41 - v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C0A5A688();
  uint64_t v9 = v8[2];
  if (v9)
  {
    sub_1BFF27ECC();
    uint64_t v10 = v8 + 7;
    do
    {
      uint64_t v11 = *(v10 - 3);
      uint64_t v12 = (void *)*(v10 - 2);
      uint64_t v13 = *(v10 - 1);
      unint64_t v14 = *v10;
      uint64_t v48 = countAndFlagsBits;
      uint64_t v49 = object;
      uint64_t v46 = v11;
      uint64_t v47 = v12;
      uint64_t v44 = v13;
      unint64_t v45 = v14;
      uint64_t countAndFlagsBits = sub_1C151FEBC();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      object = v16;
      v10 += 4;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  v41[1] = v2;
  uint64_t v17 = sub_1C0A5A6D0();
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    sub_1BFF27ECC();
    uint64_t v19 = (unint64_t *)(v17 + 56);
    do
    {
      uint64_t v20 = *(v19 - 3);
      uint64_t v21 = (void *)*(v19 - 2);
      uint64_t v22 = *(v19 - 1);
      unint64_t v23 = *v19;
      uint64_t v48 = countAndFlagsBits;
      uint64_t v49 = object;
      uint64_t v46 = v20;
      uint64_t v47 = v21;
      uint64_t v44 = v22;
      unint64_t v45 = v23;
      uint64_t countAndFlagsBits = sub_1C151FEBC();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      v19 += 4;
      object = v25;
      --v18;
    }
    while (v18);
  }
  else
  {
    uint64_t v25 = object;
  }
  swift_bridgeObjectRelease();
  sub_1C151963C();
  uint64_t v46 = countAndFlagsBits;
  uint64_t v47 = v25;
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1C0A5A730();
  sub_1C0A5A784();
  sub_1C0A5A7D8();
  uint64_t v26 = v43;
  sub_1C151F1BC();
  swift_bridgeObjectRelease();
  uint64_t v27 = v48;
  double v28 = v49;
  double v29 = sub_1C0A5ABF8();
  uint64_t v30 = v29[2];
  if (v30)
  {
    sub_1BFF27ECC();
    uint64_t v31 = v29 + 7;
    do
    {
      uint64_t v32 = *(v31 - 3);
      uint64_t v33 = (void *)*(v31 - 2);
      uint64_t v34 = *(v31 - 1);
      unint64_t v35 = *v31;
      uint64_t v48 = v27;
      uint64_t v49 = v28;
      uint64_t v46 = v32;
      uint64_t v47 = v33;
      uint64_t v44 = v34;
      unint64_t v45 = v35;
      uint64_t v27 = sub_1C151FEBC();
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      v31 += 4;
      double v28 = v37;
      --v30;
    }
    while (v30);
  }
  else
  {
    uint64_t v37 = v28;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v26);
  uint64_t v38 = v27;
  uint64_t v39 = v37;
  result._object = v39;
  result._uint64_t countAndFlagsBits = v38;
  return result;
}

unint64_t sub_1C0A5A500()
{
  unint64_t result = qword_1EA1A2D18;
  if (!qword_1EA1A2D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2D18);
  }
  return result;
}

void sub_1C0A5A554()
{
}

void sub_1C0A5A570()
{
}

uint64_t sub_1C0A5A598()
{
  return 8;
}

uint64_t sub_1C0A5A5A4()
{
  return swift_release();
}

uint64_t sub_1C0A5A5AC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C0A5A5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A5A128(a1, a2, a3, (void (*)(void))sub_1C0A5B058) & 1;
}

uint64_t sub_1C0A5A5E8(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, (void (*)(void))sub_1C0A5B058);
}

void *sub_1C0A5A600(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t PuzzleHintFormatter.deinit()
{
  swift_release();
  return v0;
}

uint64_t PuzzleHintFormatter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A5A664@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  return PuzzleHintFormatter.attributedString(from:format:)(a1, a2, a3, a4);
}

void *sub_1C0A5A688()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void **)(v0 + 32);
  }
  else
  {
    uint64_t v1 = &unk_1F1B67258;
    *(void *)(v0 + 32) = &unk_1F1B67258;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0A5A6D0()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v1 = sub_1C0A5A854(v0);
    *(void *)(v0 + 40) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C0A5A730()
{
  unint64_t result = qword_1EA1A2D28;
  if (!qword_1EA1A2D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2D28);
  }
  return result;
}

unint64_t sub_1C0A5A784()
{
  unint64_t result = qword_1EA1A2D30;
  if (!qword_1EA1A2D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2D30);
  }
  return result;
}

unint64_t sub_1C0A5A7D8()
{
  unint64_t result = qword_1EA1A2D38;
  if (!qword_1EA1A2D38)
  {
    sub_1C0A5AD60(255, &qword_1EA1A2D20, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2D38);
  }
  return result;
}

uint64_t sub_1C0A5A854(uint64_t a1)
{
  sub_1C0A5AD60(0, &qword_1EA1A2D40, (uint64_t)&type metadata for PuzzleTagConverter.TagPair, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1589AE0;
  *(void *)(v2 + 32) = 4088380;
  *(void *)(v2 + 40) = 0xE300000000000000;
  *(void *)(v2 + 48) = 10794;
  *(void *)(v2 + 56) = 0xE200000000000000;
  *(void *)(v2 + 64) = 1046622012;
  *(void *)(v2 + 72) = 0xE400000000000000;
  *(void *)(v2 + 80) = 10794;
  *(void *)(v2 + 88) = 0xE200000000000000;
  *(void *)(v2 + 96) = 0x3E676E6F7274733CLL;
  *(void *)(v2 + 104) = 0xE800000000000000;
  *(void *)(v2 + 112) = 10794;
  *(void *)(v2 + 120) = 0xE200000000000000;
  *(void *)(v2 + 128) = 0x676E6F7274732F3CLL;
  *(void *)(v2 + 136) = 0xE90000000000003ELL;
  *(void *)(v2 + 144) = 10794;
  *(void *)(v2 + 152) = 0xE200000000000000;
  *(void *)(v2 + 160) = 4090172;
  *(void *)(v2 + 168) = 0xE300000000000000;
  *(void *)(v2 + 176) = 95;
  *(void *)(v2 + 184) = 0xE100000000000000;
  *(void *)(v2 + 192) = 1047080764;
  *(void *)(v2 + 200) = 0xE400000000000000;
  *(void *)(v2 + 208) = 95;
  *(void *)(v2 + 216) = 0xE100000000000000;
  *(void *)(v2 + 224) = 1047356732;
  *(void *)(v2 + 232) = 0xE400000000000000;
  *(void *)(v2 + 240) = 95;
  *(void *)(v2 + 248) = 0xE100000000000000;
  *(void *)(v2 + 256) = 0x3E6D652F3CLL;
  *(void *)(v2 + 264) = 0xE500000000000000;
  *(void *)(v2 + 272) = 95;
  *(void *)(v2 + 280) = 0xE100000000000000;
  *(void *)(v2 + 288) = 4092732;
  *(void *)(v2 + 296) = 0xE300000000000000;
  *(void *)(v2 + 304) = 32382;
  *(void *)(v2 + 312) = 0xE200000000000000;
  *(void *)(v2 + 320) = 1047736124;
  *(void *)(v2 + 328) = 0xE400000000000000;
  *(void *)(v2 + 336) = 32382;
  *(void *)(v2 + 344) = 0xE200000000000000;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(v2 + 352) = 4093244;
  *(void *)(v2 + 360) = 0xE300000000000000;
  *(void *)(v2 + 368) = v4;
  *(void *)(v2 + 376) = v3;
  swift_bridgeObjectRetain();
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 384) = 1047867196;
  *(void *)(v2 + 392) = 0xE400000000000000;
  *(void *)(v2 + 400) = 0xD00000000000001BLL;
  *(void *)(v2 + 408) = 0x80000001C16194C0;
  *(void *)(v2 + 416) = 0x3E7075733CLL;
  *(void *)(v2 + 424) = 0xE500000000000000;
  *(void *)(v2 + 432) = v4;
  *(void *)(v2 + 440) = v3;
  swift_bridgeObjectRetain();
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 448) = 0x3E7075732F3CLL;
  *(void *)(v2 + 456) = 0xE600000000000000;
  *(void *)(v2 + 464) = 0xD00000000000001DLL;
  *(void *)(v2 + 472) = 0x80000001C16194E0;
  *(void *)(v2 + 480) = 0x3E6275733CLL;
  *(void *)(v2 + 488) = 0xE500000000000000;
  *(void *)(v2 + 496) = v4;
  *(void *)(v2 + 504) = v3;
  swift_bridgeObjectRetain();
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 512) = 0x3E6275732F3CLL;
  *(void *)(v2 + 520) = 0xE600000000000000;
  *(void *)(v2 + 528) = 0xD00000000000001BLL;
  *(void *)(v2 + 536) = 0x80000001C1619500;
  *(void *)(v2 + 544) = 0x3E6769623CLL;
  *(void *)(v2 + 552) = 0xE500000000000000;
  *(void *)(v2 + 560) = v4;
  *(void *)(v2 + 568) = v3;
  swift_bridgeObjectRetain();
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 576) = 0x3E6769622F3CLL;
  *(void *)(v2 + 584) = 0xE600000000000000;
  *(void *)(v2 + 592) = 0xD000000000000018;
  *(void *)(v2 + 600) = 0x80000001C1619520;
  *(void *)(v2 + 608) = 0x3E6C6C616D733CLL;
  *(void *)(v2 + 616) = 0xE700000000000000;
  *(void *)(v2 + 624) = v4;
  *(void *)(v2 + 632) = v3;
  swift_bridgeObjectRetain();
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 640) = 0x3E6C6C616D732F3CLL;
  *(void *)(v2 + 648) = 0xE800000000000000;
  *(void *)(v2 + 656) = 0xD000000000000019;
  *(void *)(v2 + 664) = 0x80000001C1619540;
  *(void *)(v2 + 672) = 1047683644;
  *(void *)(v2 + 680) = 0xE400000000000000;
  *(void *)(v2 + 688) = 10;
  *(void *)(v2 + 696) = 0xE100000000000000;
  *(void *)(v2 + 704) = 0x3E72622F3CLL;
  *(void *)(v2 + 712) = 0xE500000000000000;
  *(void *)(v2 + 720) = 10;
  *(void *)(v2 + 728) = 0xE100000000000000;
  return v2;
}

void *sub_1C0A5ABF8()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void **)(v0 + 48);
  }
  else
  {
    uint64_t v1 = &unk_1F1B672D8;
    *(void *)(v0 + 48) = &unk_1F1B672D8;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleTagConverter.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PuzzleTagConverter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double static UIFont.maxPuzzleHintScaleFactor.getter()
{
  return 1.31111;
}

uint64_t dispatch thunk of PuzzleHintFormatterType.attributedString(from:format:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for PuzzleHintFormatter()
{
  return self;
}

uint64_t method lookup function for PuzzleHintFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleHintFormatter);
}

uint64_t dispatch thunk of PuzzleHintFormatter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for PuzzleTagConverter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleTagConverter);
}

ValueMetadata *type metadata accessor for PuzzleTagConverter.TagPair()
{
  return &type metadata for PuzzleTagConverter.TagPair;
}

void sub_1C0A5AD60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0A5ADAC(uint64_t a1, uint64_t a2)
{
  sub_1BFF2EF9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A5AE10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0A5AE70()
{
}

uint64_t sub_1C0A5AE98()
{
  return 8;
}

uint64_t sub_1C0A5AEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A5A128(a1, a2, a3, (void (*)(void))sub_1C0A5AFF8) & 1;
}

uint64_t sub_1C0A5AED4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, (void (*)(void))sub_1C0A5AFF8);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1C151E49C();
}

unint64_t sub_1C0A5AF34()
{
  unint64_t result = qword_1EA1A2D48;
  if (!qword_1EA1A2D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2D48);
  }
  return result;
}

uint64_t sub_1C0A5AF88(uint64_t a1, uint64_t a2)
{
  sub_1BFF2F030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0A5AFF8()
{
  if (!qword_1EA1A2D50)
  {
    unint64_t v0 = sub_1C1520F1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2D50);
    }
  }
}

void sub_1C0A5B058()
{
  if (!qword_1EA1A2D58)
  {
    sub_1C151593C();
    unint64_t v0 = sub_1C1520F1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2D58);
    }
  }
}

uint64_t FormatMediaTiming.duration.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.speed.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.beginTime.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.timeOffset.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

void FormatMediaTiming.fillMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t FormatMediaTiming.repeatCount.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.repeatDuration.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.autoreverses.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 72);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatMediaTiming.timingFunction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t v5 = *(void *)(v1 + 104);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1C006F0D4(v2, v3, v4, v5, v6);
}

uint64_t FormatMediaTiming.removeOnCompletion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 128);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 136);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t sub_1C0A5B160(void *a1)
{
  return FormatMediaTiming.encode(to:)(a1);
}

uint64_t sub_1C0A5B17C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  char v7 = *((unsigned char *)v1 + 32);
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = v1[8];
  unsigned __int8 v12 = *((unsigned char *)v1 + 72);
  uint64_t v13 = v1[10];
  uint64_t v14 = v1[11];
  uint64_t v15 = v1[12];
  uint64_t v16 = v1[13];
  int v17 = *((unsigned __int8 *)v1 + 112);
  uint64_t v18 = v1[15];
  uint64_t v19 = v1[16];
  unsigned __int8 v20 = *((unsigned char *)v1 + 136);
  uint64_t v37 = v18;
  if (v17 != 255)
  {
    if (v17)
    {
      uint64_t v36 = v1[7];
      uint64_t v33 = v1[8];
      uint64_t v34 = v1[5];
      uint64_t v30 = v1[2];
      uint64_t v31 = v1[3];
      uint64_t v21 = *v1;
      unsigned __int8 v35 = *((unsigned char *)v1 + 72);
      uint64_t v32 = v1[16];
      unsigned __int8 v22 = *((unsigned char *)v1 + 136);
      char v23 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v7 = v23;
      uint64_t v3 = v21;
      uint64_t v6 = v30;
      uint64_t v5 = v31;
      unsigned __int8 v20 = v22;
      uint64_t v19 = v32;
      uint64_t v11 = v33;
      uint64_t v10 = v36;
      uint64_t v18 = v37;
      uint64_t v8 = v34;
      unsigned __int8 v12 = v35;
      LOBYTE(v17) = 1;
    }
    else
    {
      LOBYTE(v17) = 0;
    }
  }
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v16;
  *(unsigned char *)(a1 + 112) = v17;
  *(void *)(a1 + 120) = v18;
  *(void *)(a1 + 128) = v19;
  *(unsigned char *)(a1 + 136) = v20;
  uint64_t v24 = v10;
  uint64_t v25 = v11;
  unsigned __int8 v26 = v12;
  uint64_t v27 = v19;
  unsigned __int8 v28 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFFC8784(v24, v25, v26);
  return sub_1BFFC8784(v37, v27, v28);
}

BOOL _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v62 = *(void *)(a1 + 24);
  int v61 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v59 = *(void *)(a1 + 40);
  int v55 = *(unsigned __int8 *)(a1 + 72);
  int v5 = *(unsigned __int8 *)(a1 + 112);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v60 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v57 = *(void *)(a1 + 48);
  uint64_t v58 = *(void *)(a2 + 40);
  uint64_t v56 = *(void *)(a2 + 48);
  int v54 = *(unsigned __int8 *)(a2 + 72);
  int v10 = *(unsigned __int8 *)(a2 + 112);
  if (*(void *)a1)
  {
    if (!v7) {
      return 0;
    }
    uint64_t v50 = *(void *)(a2 + 64);
    uint64_t v51 = *(void *)(a2 + 56);
    uint64_t v52 = *(void *)(a1 + 56);
    uint64_t v53 = *(void *)(a1 + 64);
    uint64_t v42 = *(void *)(a2 + 80);
    uint64_t v43 = *(void *)(a2 + 88);
    uint64_t v44 = *(void *)(a2 + 96);
    uint64_t v45 = *(void *)(a2 + 104);
    uint64_t v46 = *(void *)(a1 + 80);
    uint64_t v47 = *(void *)(a1 + 88);
    uint64_t v48 = *(void *)(a1 + 96);
    uint64_t v49 = *(void *)(a1 + 104);
    int v40 = *(unsigned __int8 *)(a2 + 136);
    int v41 = *(unsigned __int8 *)(a1 + 136);
    uint64_t v36 = *(void *)(a2 + 128);
    uint64_t v37 = *(void *)(a2 + 120);
    uint64_t v38 = *(void *)(a1 + 120);
    uint64_t v39 = *(void *)(a1 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = sub_1C00DE998(v3, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v50 = *(void *)(a2 + 64);
    uint64_t v51 = *(void *)(a2 + 56);
    uint64_t v52 = *(void *)(a1 + 56);
    uint64_t v53 = *(void *)(a1 + 64);
    uint64_t v42 = *(void *)(a2 + 80);
    uint64_t v43 = *(void *)(a2 + 88);
    uint64_t v44 = *(void *)(a2 + 96);
    uint64_t v45 = *(void *)(a2 + 104);
    uint64_t v46 = *(void *)(a1 + 80);
    uint64_t v47 = *(void *)(a1 + 88);
    uint64_t v48 = *(void *)(a1 + 96);
    uint64_t v49 = *(void *)(a1 + 104);
    int v40 = *(unsigned __int8 *)(a2 + 136);
    int v41 = *(unsigned __int8 *)(a1 + 136);
    uint64_t v36 = *(void *)(a2 + 128);
    uint64_t v37 = *(void *)(a2 + 120);
    uint64_t v38 = *(void *)(a1 + 120);
    uint64_t v39 = *(void *)(a1 + 128);
    if (v7) {
      return 0;
    }
  }
  if (v2)
  {
    if (!v6) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = sub_1C00DE998(v2, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (v4)
  {
    if (!v8) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v13 = sub_1C00DE998(v4, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v62)
  {
    if (!v9) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C00DE998(v62, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v61 == 4)
  {
    if (v60 != 4) {
      return 0;
    }
  }
  else if (v60 == 4 || (sub_1C149507C(v61, v60) & 1) == 0)
  {
    return 0;
  }
  if (v59)
  {
    if (!v58) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = sub_1C00DE998(v59, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  else if (v58)
  {
    return 0;
  }
  if (!v57)
  {
    if (!v56) {
      goto LABEL_36;
    }
    return 0;
  }
  if (!v56) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v16 = sub_1C00DE998(v57, v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    return 0;
  }
LABEL_36:
  if (v55 == 255)
  {
    unsigned __int8 v17 = v54;
    if (v54 == 255) {
      goto LABEL_53;
    }
LABEL_44:
    uint64_t v19 = v50;
    uint64_t v18 = v51;
    sub_1BFFC8784(v51, v50, v17);
    uint64_t v21 = v52;
    uint64_t v20 = v53;
    uint64_t v22 = v52;
    uint64_t v23 = v53;
    unsigned __int8 v24 = v55;
LABEL_45:
    sub_1BFFC8784(v22, v23, v24);
    sub_1BFFC879C(v21, v20, v24);
    sub_1BFFC879C(v18, v19, v17);
    return 0;
  }
  unsigned __int8 v17 = v54;
  if (v54 == 255) {
    goto LABEL_44;
  }
  if ((v55 & 1) == 0)
  {
    if ((v54 & 1) == 0)
    {
      sub_1BFE94AD4(v52, v53, 0);
      sub_1BFE94AD4(v51, v50, 0);
      uint64_t v25 = 0;
      if (((((v52 & 1) == 0) ^ v51) & 1) == 0) {
        return v25;
      }
      goto LABEL_53;
    }
LABEL_50:
    char v26 = v54 & 1;
    uint64_t v28 = v50;
    uint64_t v27 = v51;
    sub_1BFE94AB4(v51, v50, v54 & 1);
    char v29 = v55 & 1;
    uint64_t v30 = v52;
    uint64_t v31 = v53;
LABEL_51:
    sub_1BFE94AD4(v30, v31, v29);
    sub_1BFE94AD4(v27, v28, v26);
    return 0;
  }
  if ((v54 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_50;
  }
  if (v52 == v51 && v53 == v50)
  {
    sub_1BFFC8784(v52, v53, v54);
    sub_1BFFC8784(v52, v53, v55);
    sub_1BFE94AD4(v52, v53, 1);
    sub_1BFE94AD4(v52, v53, 1);
  }
  else
  {
    char v32 = sub_1C1520A9C();
    sub_1BFFC8784(v51, v50, v54);
    sub_1BFFC8784(v52, v53, v55);
    sub_1BFE94AD4(v52, v53, 1);
    sub_1BFE94AD4(v51, v50, 1);
    uint64_t v25 = 0;
    if ((v32 & 1) == 0) {
      return v25;
    }
  }
LABEL_53:
  if (v5 == 255)
  {
    if (v10 == 255) {
      goto LABEL_58;
    }
LABEL_66:
    sub_1C006F0D4(v42, v43, v44, v45, v10);
    sub_1C006F0EC(v46, v47, v48, v49, v5);
    sub_1C006F0EC(v42, v43, v44, v45, v10);
    return 0;
  }
  uint64_t v65 = v46;
  uint64_t v66 = v47;
  uint64_t v67 = v48;
  uint64_t v68 = v49;
  char v69 = v5;
  if (v10 == 255)
  {
    sub_1C00F65A8(v46, v47, v48, v49, v5 & 1);
    sub_1C00F65A8(v46, v47, v48, v49, v5 & 1);
    sub_1C00F670C(v46, v47, v48, v49, v5 & 1);
    goto LABEL_66;
  }
  v63[0] = v42;
  v63[1] = v43;
  v63[2] = v44;
  v63[3] = v45;
  char v64 = v10 & 1;
  sub_1C006F0D4(v46, v47, v48, v49, v5);
  sub_1C00F65A8(v46, v47, v48, v49, v5 & 1);
  char v33 = _s8NewsFeed25FormatMediaTimingFunctionO2eeoiySbAC_ACtFZ_0((uint64_t)&v65, (uint64_t)v63);
  sub_1C00F670C(v65, v66, v67, v68, v69);
  sub_1C006F0EC(v46, v47, v48, v49, v5);
  if ((v33 & 1) == 0) {
    return 0;
  }
LABEL_58:
  if (v41 == 255)
  {
    if (v40 == 255) {
      return 1;
    }
    goto LABEL_70;
  }
  if (v40 == 255)
  {
LABEL_70:
    uint64_t v19 = v36;
    uint64_t v18 = v37;
    unsigned __int8 v17 = v40;
    sub_1BFFC8784(v37, v36, v40);
    uint64_t v21 = v38;
    uint64_t v20 = v39;
    uint64_t v22 = v38;
    uint64_t v23 = v39;
    unsigned __int8 v24 = v41;
    goto LABEL_45;
  }
  if ((v41 & 1) == 0)
  {
    if (v40)
    {
LABEL_75:
      char v26 = v40 & 1;
      uint64_t v28 = v36;
      uint64_t v27 = v37;
      sub_1BFE94AB4(v37, v36, v40 & 1);
      char v29 = v41 & 1;
      uint64_t v30 = v38;
      uint64_t v31 = v39;
      goto LABEL_51;
    }
    sub_1BFE94AD4(v38, v39, 0);
    sub_1BFE94AD4(v37, v36, 0);
    return ((((v38 & 1) == 0) ^ v37) & 1) != 0;
  }
  if ((v40 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_75;
  }
  if (v38 != v37 || v39 != v36)
  {
    char v35 = sub_1C1520A9C();
    sub_1BFFC8784(v37, v36, v40);
    sub_1BFFC8784(v38, v39, v41);
    uint64_t v25 = 1;
    sub_1BFE94AD4(v38, v39, 1);
    sub_1BFE94AD4(v37, v36, 1);
    if (v35) {
      return v25;
    }
    return 0;
  }
  sub_1BFFC8784(v38, v39, v40);
  sub_1BFFC8784(v38, v39, v41);
  uint64_t v25 = 1;
  sub_1BFE94AD4(v38, v39, 1);
  sub_1BFE94AD4(v38, v39, 1);
  return v25;
}

unint64_t sub_1C0A5BAE8(uint64_t a1)
{
  unint64_t result = sub_1C0A5BB10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A5BB10()
{
  unint64_t result = qword_1EA1A2D60;
  if (!qword_1EA1A2D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2D60);
  }
  return result;
}

unint64_t sub_1C0A5BB64(void *a1)
{
  a1[1] = sub_1BFCB1F94();
  a1[2] = sub_1C08F5B84();
  unint64_t result = sub_1C0A5BB9C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A5BB9C()
{
  unint64_t result = qword_1EA1A2D68[0];
  if (!qword_1EA1A2D68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A2D68);
  }
  return result;
}

uint64_t destroy for FormatMediaTiming(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 != 255) {
    uint64_t result = sub_1BFE94AD4(*(void *)(a1 + 56), *(void *)(a1 + 64), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 112);
  if (v4 != 255) {
    uint64_t result = sub_1C00F670C(*(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v4 & 1);
  }
  int v5 = *(unsigned __int8 *)(a1 + 136);
  if (v5 != 255)
  {
    uint64_t v6 = *(void *)(a1 + 120);
    uint64_t v7 = *(void *)(a1 + 128);
    return sub_1BFE94AD4(v6, v7, v5 & 1);
  }
  return result;
}

uint64_t initializeWithCopy for FormatMediaTiming(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  int v7 = *(unsigned __int8 *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 64);
    sub_1BFE94AB4(v8, v9, v7 & 1);
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v9;
    *(unsigned char *)(a1 + 72) = v7 & 1;
  }
  int v10 = *(unsigned __int8 *)(a2 + 112);
  if (v10 == 255)
  {
    long long v11 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    char v12 = v10 & 1;
    uint64_t v13 = *(void *)(a2 + 80);
    uint64_t v14 = *(void *)(a2 + 88);
    uint64_t v15 = *(void *)(a2 + 96);
    uint64_t v16 = *(void *)(a2 + 104);
    sub_1C00F65A8(v13, v14, v15, v16, v10 & 1);
    *(void *)(a1 + 80) = v13;
    *(void *)(a1 + 88) = v14;
    *(void *)(a1 + 96) = v15;
    *(void *)(a1 + 104) = v16;
    *(unsigned char *)(a1 + 112) = v12;
  }
  int v17 = *(unsigned __int8 *)(a2 + 136);
  if (v17 == 255)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  }
  else
  {
    char v18 = v17 & 1;
    uint64_t v20 = *(void *)(a2 + 120);
    uint64_t v19 = *(void *)(a2 + 128);
    sub_1BFE94AB4(v20, v19, v17 & 1);
    *(void *)(a1 + 120) = v20;
    *(void *)(a1 + 128) = v19;
    *(unsigned char *)(a1 + 136) = v18;
  }
  return a1;
}

uint64_t assignWithCopy for FormatMediaTiming(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 56);
  uint64_t v5 = (long long *)(a2 + 56);
  int v6 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *uint64_t v4 = v8;
    }
    else
    {
      char v15 = v6 & 1;
      uint64_t v16 = *(void *)(a2 + 56);
      uint64_t v17 = *(void *)(a2 + 64);
      sub_1BFE94AB4(v16, v17, v6 & 1);
      *(void *)(a1 + 56) = v16;
      *(void *)(a1 + 64) = v17;
      *(unsigned char *)(a1 + 72) = v15;
    }
  }
  else if (v6 == 255)
  {
    sub_1C0457C38(a1 + 56);
    char v7 = *(unsigned char *)(a2 + 72);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 72) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    sub_1BFE94AB4(v10, v11, v6 & 1);
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v13 = *(void *)(a1 + 64);
    char v14 = *(unsigned char *)(a1 + 72);
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(unsigned char *)(a1 + 72) = v9;
    sub_1BFE94AD4(v12, v13, v14);
  }
  char v18 = (long long *)(a1 + 80);
  uint64_t v19 = (long long *)(a2 + 80);
  int v20 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v20 == 255)
    {
      long long v23 = *v19;
      long long v24 = *(_OWORD *)(a2 + 96);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *char v18 = v23;
      *(_OWORD *)(a1 + 96) = v24;
    }
    else
    {
      char v35 = v20 & 1;
      uint64_t v36 = *(void *)(a2 + 80);
      uint64_t v37 = *(void *)(a2 + 88);
      uint64_t v38 = *(void *)(a2 + 96);
      uint64_t v39 = *(void *)(a2 + 104);
      sub_1C00F65A8(v36, v37, v38, v39, v20 & 1);
      *(void *)(a1 + 80) = v36;
      *(void *)(a1 + 88) = v37;
      *(void *)(a1 + 96) = v38;
      *(void *)(a1 + 104) = v39;
      *(unsigned char *)(a1 + 112) = v35;
    }
  }
  else if (v20 == 255)
  {
    sub_1C0A5C10C(a1 + 80);
    char v21 = *(unsigned char *)(a2 + 112);
    long long v22 = *(_OWORD *)(a2 + 96);
    *char v18 = *v19;
    *(_OWORD *)(a1 + 96) = v22;
    *(unsigned char *)(a1 + 112) = v21;
  }
  else
  {
    char v25 = v20 & 1;
    uint64_t v26 = *(void *)(a2 + 80);
    uint64_t v27 = *(void *)(a2 + 88);
    uint64_t v28 = *(void *)(a2 + 96);
    uint64_t v29 = *(void *)(a2 + 104);
    sub_1C00F65A8(v26, v27, v28, v29, v20 & 1);
    uint64_t v30 = *(void *)(a1 + 80);
    uint64_t v31 = *(void *)(a1 + 88);
    uint64_t v32 = *(void *)(a1 + 96);
    uint64_t v33 = *(void *)(a1 + 104);
    char v34 = *(unsigned char *)(a1 + 112);
    *(void *)(a1 + 80) = v26;
    *(void *)(a1 + 88) = v27;
    *(void *)(a1 + 96) = v28;
    *(void *)(a1 + 104) = v29;
    *(unsigned char *)(a1 + 112) = v25;
    sub_1C00F670C(v30, v31, v32, v33, v34);
  }
  int v40 = (long long *)(a1 + 120);
  int v41 = (long long *)(a2 + 120);
  int v42 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 255)
  {
    if (v42 == 255)
    {
      long long v44 = *v41;
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      long long *v40 = v44;
    }
    else
    {
      char v51 = v42 & 1;
      uint64_t v53 = *(void *)(a2 + 120);
      uint64_t v52 = *(void *)(a2 + 128);
      sub_1BFE94AB4(v53, v52, v42 & 1);
      *(void *)(a1 + 120) = v53;
      *(void *)(a1 + 128) = v52;
      *(unsigned char *)(a1 + 136) = v51;
    }
  }
  else if (v42 == 255)
  {
    sub_1C0457C38(a1 + 120);
    char v43 = *(unsigned char *)(a2 + 136);
    long long *v40 = *v41;
    *(unsigned char *)(a1 + 136) = v43;
  }
  else
  {
    char v45 = v42 & 1;
    uint64_t v47 = *(void *)(a2 + 120);
    uint64_t v46 = *(void *)(a2 + 128);
    sub_1BFE94AB4(v47, v46, v42 & 1);
    uint64_t v48 = *(void *)(a1 + 120);
    uint64_t v49 = *(void *)(a1 + 128);
    char v50 = *(unsigned char *)(a1 + 136);
    *(void *)(a1 + 120) = v47;
    *(void *)(a1 + 128) = v46;
    *(unsigned char *)(a1 + 136) = v45;
    sub_1BFE94AD4(v48, v49, v50);
  }
  return a1;
}

uint64_t sub_1C0A5C10C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy137_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for FormatMediaTiming(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  long long v4 = (_OWORD *)(a2 + 56);
  int v5 = *(unsigned __int8 *)(a1 + 72);
  if (v5 == 255) {
    goto LABEL_4;
  }
  int v6 = *(unsigned __int8 *)(a2 + 72);
  if (v6 == 255)
  {
    sub_1C0457C38(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v4;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *v4;
  *(unsigned char *)(a1 + 72) = v6 & 1;
  sub_1BFE94AD4(v7, v8, v5 & 1);
LABEL_6:
  int v9 = *(unsigned __int8 *)(a1 + 112);
  if (v9 == 255)
  {
LABEL_9:
    long long v11 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    goto LABEL_11;
  }
  int v10 = *(unsigned __int8 *)(a2 + 112);
  if (v10 == 255)
  {
    sub_1C0A5C10C(a1 + 80);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 104);
  long long v16 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v16;
  *(unsigned char *)(a1 + 112) = v10 & 1;
  sub_1C00F670C(v12, v13, v14, v15, v9 & 1);
LABEL_11:
  uint64_t v17 = (_OWORD *)(a2 + 120);
  int v18 = *(unsigned __int8 *)(a1 + 136);
  if (v18 != 255)
  {
    int v19 = *(unsigned __int8 *)(a2 + 136);
    if (v19 != 255)
    {
      uint64_t v20 = *(void *)(a1 + 120);
      uint64_t v21 = *(void *)(a1 + 128);
      *(_OWORD *)(a1 + 120) = *v17;
      *(unsigned char *)(a1 + 136) = v19 & 1;
      sub_1BFE94AD4(v20, v21, v18 & 1);
      return a1;
    }
    sub_1C0457C38(a1 + 120);
  }
  *(_OWORD *)(a1 + 120) = *v17;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

ValueMetadata *type metadata accessor for FormatMediaTiming()
{
  return &type metadata for FormatMediaTiming;
}

uint64_t sub_1C0A5C348(uint64_t a1, uint64_t a2)
{
  sub_1C00F652C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1C0A5C3AC(uint64_t a1)
{
  sub_1C0A5C348(a1, (uint64_t)v58);
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v1);
  sub_1C0181BEC(0);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C152C610;
  uint64_t v32 = v5;
  int v6 = (void *)(v5 + v4);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v59);
  uint64_t v7 = 0;
  if (sub_1C00F6584(v59) != 1)
  {
    uint64_t v7 = v59[0];
    swift_bridgeObjectRetain();
  }
  sub_1C042F6B0(0x6E6F697461727544, 0xE800000000000000, v7, v6);
  uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
  int v9 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v6, 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v55);
  uint64_t v10 = 0;
  if (sub_1C00F6584(v55) != 1)
  {
    uint64_t v10 = v55[1];
    swift_bridgeObjectRetain();
  }
  sub_1C042F6B0(0x6465657053, 0xE500000000000000, v10, (void *)((char *)v6 + v3));
  v9((void *)((char *)v6 + v3), 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v54);
  if (sub_1C00F6584(v54) == 1)
  {
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = v54[2];
    swift_bridgeObjectRetain();
  }
  sub_1C042F6B0(0x6954206E69676542, 0xEA0000000000656DLL, v11, (void *)((char *)v6 + 2 * v3));
  v9((void *)((char *)v6 + 2 * v3), 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v53);
  if (sub_1C00F6584(v53) == 1)
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = v53[3];
    swift_bridgeObjectRetain();
  }
  sub_1C042F6B0(0x66664F20656D6954, 0xEB00000000746573, v12, (void *)((char *)v6 + 3 * v3));
  v9((void *)((char *)v6 + 3 * v3), 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v51);
  if (sub_1C00F6584(v51) == 1) {
    unsigned __int8 v13 = 4;
  }
  else {
    unsigned __int8 v13 = v52;
  }
  sub_1C04374F8(0x646F4D206C6C6946, 0xE900000000000065, v13, (void *)((char *)v6 + 4 * v3));
  v9((void *)((char *)v6 + 4 * v3), 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v50);
  if (sub_1C00F6584(v50) == 1)
  {
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = v50[5];
    swift_bridgeObjectRetain();
  }
  sub_1C042F6B0(0x4320746165706552, 0xEC000000746E756FLL, v14, (void *)((char *)v6 + 5 * v3));
  v9((void *)((char *)v6 + 5 * v3), 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v49);
  if (sub_1C00F6584(v49) == 1)
  {
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = v49[6];
    swift_bridgeObjectRetain();
  }
  sub_1C042F6B0(0x4420746165706552, 0xEF6E6F6974617275, v15, (void *)((char *)v6 + 6 * v3));
  v9((void *)((char *)v6 + 6 * v3), 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v45);
  if (sub_1C00F6584(v45) == 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    unsigned __int8 v18 = -1;
  }
  else
  {
    uint64_t v16 = v46;
    uint64_t v17 = v47;
    unsigned __int8 v18 = v48;
    sub_1BFFC8784(v46, v47, v48);
  }
  sub_1C0437874(0x657665726F747541, 0xEC00000073657372, v16, v17, v18, (void *)((char *)&v6[v3] - v3));
  v9((void *)((char *)&v6[v3] - v3), 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v39);
  if (sub_1C00F6584(v39) == 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    unsigned __int8 v23 = -1;
  }
  else
  {
    uint64_t v19 = v40;
    uint64_t v20 = v41;
    uint64_t v21 = v42;
    uint64_t v22 = v43;
    unsigned __int8 v23 = v44;
    sub_1C006F0D4(v40, v41, v42, v43, v44);
  }
  v34[0] = v19;
  v34[1] = v20;
  v34[2] = v21;
  v34[3] = v22;
  unsigned __int8 v35 = v23;
  long long v24 = sub_1C04557CC((uint64_t)v34);
  sub_1C006F0EC(v19, v20, v21, v22, v23);
  sub_1C0434A74(0x4620676E696D6954, 0xEF6E6F6974636E75, (uint64_t)v24, &v6[v3]);
  v9(&v6[v3], 0, 1, v8);
  sub_1C0A5C348((uint64_t)v58, (uint64_t)v34);
  if (sub_1C00F6584(v34) == 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    unsigned __int8 v27 = -1;
  }
  else
  {
    uint64_t v25 = v36;
    uint64_t v26 = v37;
    unsigned __int8 v27 = v38;
    sub_1BFFC8784(v36, v37, v38);
  }
  sub_1C0437874(0xD000000000000014, 0x80000001C1619560, v25, v26, v27, (void *)((char *)v6 + 9 * v3));
  v9((void *)((char *)v6 + 9 * v3), 0, 1, v8);
  sub_1C09BCFA4(0x695420616964654DLL, 0xEC000000676E696DLL, 0, 0, v32, v56);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v33 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v33 + 64) = &off_1F1BDEC90;
  uint64_t v28 = swift_allocObject();
  *(void *)(v33 + 32) = v28;
  long long v29 = v56[1];
  *(_OWORD *)(v28 + 16) = v56[0];
  *(_OWORD *)(v28 + 32) = v29;
  *(void *)(v28 + 48) = v57;
  uint64_t v30 = sub_1C131B79C(v33);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v30;
}

uint64_t sub_1C0A5CB3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FeedItemFilterResultJournal.init(title:initialCount:entries:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t FeedItemFilterResultJournal.title.getter()
{
  uint64_t v0 = sub_1C0A5CE14();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FeedItemFilterResultJournal.initialCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FeedItemFilterResultJournal.remainingCount.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = type metadata accessor for FeedItemFilterResultEntry();
  uint64_t v4 = MEMORY[0x1C18C6830](v1, v3);
  BOOL v5 = __OFSUB__(v2, v4);
  uint64_t result = v2 - v4;
  if (v5) {
    __break(1u);
  }
  return result;
}

void FeedItemFilterResultJournal.removedCount.getter()
{
  type metadata accessor for FeedItemFilterResultEntry();
  JUMPOUT(0x1C18C6830);
}

uint64_t sub_1C0A5CC60()
{
  uint64_t v0 = sub_1C0A5CE14();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C0A5CCA4(uint64_t a1)
{
  v9[5] = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(a1 + 24);
  v9[2] = *(void *)(a1 + 16);
  _OWORD v9[3] = v2;
  type metadata accessor for FeedItemFilterResultEntry();
  uint64_t v3 = sub_1C151ED5C();
  uint64_t v4 = type metadata accessor for DebugJournalGroupItem();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0A5CE84, (uint64_t)v9, v3, v4, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C0A5CD78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FeedItemFilterResultEntry();
  uint64_t v3 = sub_1C0D429A4(v2);
  uint64_t v5 = 757935405;
  if (v4) {
    uint64_t v5 = v3;
  }
  unint64_t v6 = 0xE400000000000000;
  if (v4) {
    unint64_t v6 = v4;
  }
  *a1 = v5;
  a1[1] = v6;
  unint64_t v7 = sub_1C0D42B54(v2);
  uint64_t v8 = MEMORY[0x1E4FBB208];
  a1[5] = MEMORY[0x1E4FBB1A0];
  a1[6] = v8;
  a1[2] = v7;
  a1[3] = v9;
  type metadata accessor for DebugJournalGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0A5CE14()
{
  return *(void *)v0;
}

uint64_t dispatch thunk of FeedItemFilterResultJournalType.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemFilterResultJournalType.initialCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedItemFilterResultJournalType.remainingCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedItemFilterResultJournalType.removedCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for FeedItemFilterResultJournal()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0A5CE84@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0A5CD78(a1);
}

id SharingPuzzleURLActivityItemSource.__allocating_init(puzzle:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1C0A5D630(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v6;
}

id SharingPuzzleURLActivityItemSource.init(puzzle:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v2 = sub_1C0A5D630(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v2;
}

id SharingPuzzleURLActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingPuzzleURLActivityItemSource.init()()
{
}

id SharingPuzzleURLActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingPuzzleURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0025B10(v1 + OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_puzzleURL, (uint64_t)v5);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t result = (_OWORD *)sub_1C002F608((uint64_t)v5);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    uint64_t v11 = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v5, v6);
    return sub_1BFF993A8(v10, (_OWORD *)a1);
  }
  return result;
}

uint64_t SharingPuzzleURLActivityItemSource.activityViewController(_:itemForActivityType:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;
    if (v8 == sub_1C151E62C() && v10 == v11)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
    char v13 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_10:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  sub_1C0025B10(v2 + OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_puzzleURL, (uint64_t)v7);
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    uint64_t result = sub_1C002F608((uint64_t)v7);
    goto LABEL_10;
  }
  *(void *)(a2 + 24) = v15;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v7, v15);
}

LPLinkMetadata_optional __swiftcall SharingPuzzleURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_linkPresentationSource))
  {
    sub_1C1518CEC();
    uint64_t v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1C0A5D630(void *a1, uint64_t a2)
{
  Swift::Bool v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3;
  id v11 = objc_msgSend(a1, sel_identifier);
  if (!v11)
  {
    sub_1C151E62C();
    id v11 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v12 = objc_msgSend(self, sel_nss_NewsURLForPuzzleID_, v11);

  if (v12)
  {
    sub_1C1515F1C();

    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 0, 1, v13);
  }
  else
  {
    uint64_t v14 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  sub_1C002F694((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_puzzleURL]);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_linkPresentationSource] = a2;
  swift_retain();

  v16.receiver = v10;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_1C0A5D7F4()
{
  return type metadata accessor for SharingPuzzleURLActivityItemSource();
}

uint64_t type metadata accessor for SharingPuzzleURLActivityItemSource()
{
  uint64_t result = qword_1EA1A2E10;
  if (!qword_1EA1A2E10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0A5D848()
{
  sub_1BFF00BEC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SharingPuzzleURLActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPuzzleURLActivityItemSource);
}

uint64_t dispatch thunk of SharingPuzzleURLActivityItemSource.__allocating_init(puzzle:linkPresentationSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for FormatBindingResource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A5D9D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingResource()
{
  return &type metadata for FormatBindingResource;
}

uint64_t sub_1C0A5DA10()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A5DA84()
{
  sub_1C1520DCC();
  FormatTagBinding.Asset.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A5DAFC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A5DB70()
{
  unint64_t v0 = FormatTagBinding.Asset.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FormatTagBinding.Asset.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

NewsFeed::FeedScoredTag __swiftcall FeedScoredTag.init(tagID:score:)(Swift::String tagID, Swift::Double score)
{
  *(Swift::String *)uint64_t v2 = tagID;
  *(Swift::Double *)(v2 + 16) = score;
  result.tagID = tagID;
  result.score = score;
  return result;
}

double FeedScoredTag.score.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t FeedScoredTag.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static FeedScoredTag.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_1C1520A9C();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

BOOL sub_1C0A5DCB4(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_1C1520A9C();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

void *sub_1C0A5DD18(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatLayeredMedia(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for FormatLayeredMedia(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_1C0A5DDEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C004BCB8(a1, (uint64_t)v13);
  uint64_t v4 = v14;
  if (v14)
  {
    uint64_t v5 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    sub_1BFD10564((uint64_t)v13);
    uint64_t v7 = 0;
  }
  sub_1C004BCB8(a1, (uint64_t)v13);
  uint64_t v8 = v14;
  if (v14)
  {
    uint64_t v9 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    uint64_t v8 = v11;
    sub_1BFD10564(a1);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    sub_1BFD10564(a1);
    uint64_t result = sub_1BFD10564((uint64_t)v13);
    uint64_t v10 = 0;
  }
  *a2 = v4;
  a2[1] = v7;
  a2[2] = v10;
  a2[3] = v8;
  return result;
}

uint64_t sub_1C0A5DF0C()
{
  if (*v0) {
    return 0x656C746974;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C0A5DF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0A5E684(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A5DF64(uint64_t a1)
{
  unint64_t v2 = sub_1C0A5E168();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A5DFA0(uint64_t a1)
{
  unint64_t v2 = sub_1C0A5E168();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DebugInspectionGroup.encode(to:)(void *a1)
{
  sub_1C0A5E3D4(0, &qword_1EA1A2E20, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  long long v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A5E168();
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C152074C();
  if (!v9)
  {
    char v12 = 1;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0A5E168()
{
  unint64_t result = qword_1EA1A2E28;
  if (!qword_1EA1A2E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E28);
  }
  return result;
}

uint64_t DebugInspectionGroup.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0A5E3D4(0, &qword_1EA1A2E30, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A5E168();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_1C152060C();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152060C();
  uint64_t v15 = v14;
  objc_super v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0A5E3D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A5E168();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0A5E438@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DebugInspectionGroup.init(from:)(a1, a2);
}

uint64_t sub_1C0A5E450(void *a1)
{
  return DebugInspectionGroup.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for DebugInspectionGroup()
{
  return &type metadata for DebugInspectionGroup;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A5E544);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionGroup.CodingKeys()
{
  return &type metadata for DebugInspectionGroup.CodingKeys;
}

unint64_t sub_1C0A5E580()
{
  unint64_t result = qword_1EA1A2E38;
  if (!qword_1EA1A2E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E38);
  }
  return result;
}

unint64_t sub_1C0A5E5D8()
{
  unint64_t result = qword_1EA1A2E40;
  if (!qword_1EA1A2E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E40);
  }
  return result;
}

unint64_t sub_1C0A5E630()
{
  unint64_t result = qword_1EA1A2E48;
  if (!qword_1EA1A2E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E48);
  }
  return result;
}

uint64_t sub_1C0A5E684(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t FeedItemType.debugKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

BOOL static FeedItem.SavedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static FeedItem.AccessLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FeedItem.kind.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v2, (uint64_t)v9, type metadata accessor for FeedItem);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v13 = *((void *)v9 + 9);
      unint64_t v14 = *((void *)v9 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v13, v14);
      long long v15 = xmmword_1C152C800;
      goto LABEL_21;
    case 2:
      long long v16 = xmmword_1C1533700;
      goto LABEL_18;
    case 3:
      long long v16 = xmmword_1C152FC80;
      goto LABEL_18;
    case 4:
      long long v16 = xmmword_1C158A220;
      goto LABEL_18;
    case 5:
      long long v17 = *((_OWORD *)v9 + 7);
      long long v37 = *((_OWORD *)v9 + 6);
      v38[0] = v17;
      *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)(v9 + 121);
      long long v18 = *((_OWORD *)v9 + 3);
      long long v33 = *((_OWORD *)v9 + 2);
      long long v34 = v18;
      long long v19 = *((_OWORD *)v9 + 5);
      long long v35 = *((_OWORD *)v9 + 4);
      long long v36 = v19;
      long long v20 = *((_OWORD *)v9 + 1);
      long long v31 = *(_OWORD *)v9;
      long long v32 = v20;
      uint64_t result = sub_1C01880A4((uint64_t)&v31);
      long long v15 = xmmword_1C158A210;
      goto LABEL_21;
    case 6:
      long long v16 = xmmword_1C158A200;
      goto LABEL_18;
    case 7:
      long long v16 = xmmword_1C1530560;
      goto LABEL_18;
    case 8:
      sub_1BFEEFA80((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      char v21 = &v6[*(int *)(v4 + 20)];
      uint64_t v23 = *((void *)v21 + 2);
      uint64_t v22 = *((void *)v21 + 3);
      swift_bridgeObjectRetain();
      uint64_t result = sub_1BFEEB3A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      *a1 = v23;
      a1[1] = v22;
      return result;
    case 9:
      long long v16 = xmmword_1C15390A0;
      goto LABEL_18;
    case 10:
      long long v16 = xmmword_1C158A1F0;
      goto LABEL_18;
    case 11:
      uint64_t result = swift_release();
      long long v15 = xmmword_1C158A1E0;
      goto LABEL_21;
    case 12:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v15 = xmmword_1C157BA40;
      goto LABEL_21;
    case 13:
      long long v16 = xmmword_1C158A1D0;
      goto LABEL_18;
    case 14:
      sub_1BFEEFC20(*((void *)v9 + 3), *((void *)v9 + 4));
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v15 = xmmword_1C1538940;
      goto LABEL_21;
    case 15:
      long long v16 = xmmword_1C1538950;
LABEL_18:
      *(_OWORD *)a1 = v16;
      return sub_1BFEEB3A0((uint64_t)v9, type metadata accessor for FeedItem);
    case 16:
      long long v24 = *((_OWORD *)v9 + 13);
      v38[5] = *((_OWORD *)v9 + 12);
      v38[6] = v24;
      v38[7] = *((_OWORD *)v9 + 14);
      uint64_t v39 = *((void *)v9 + 30);
      long long v25 = *((_OWORD *)v9 + 9);
      v38[1] = *((_OWORD *)v9 + 8);
      v38[2] = v25;
      long long v26 = *((_OWORD *)v9 + 11);
      v38[3] = *((_OWORD *)v9 + 10);
      v38[4] = v26;
      long long v27 = *((_OWORD *)v9 + 5);
      long long v35 = *((_OWORD *)v9 + 4);
      long long v36 = v27;
      long long v28 = *((_OWORD *)v9 + 7);
      long long v37 = *((_OWORD *)v9 + 6);
      v38[0] = v28;
      long long v29 = *((_OWORD *)v9 + 1);
      long long v31 = *(_OWORD *)v9;
      long long v32 = v29;
      long long v30 = *((_OWORD *)v9 + 3);
      long long v33 = *((_OWORD *)v9 + 2);
      long long v34 = v30;
      uint64_t result = sub_1C01F0AC8((uint64_t)&v31);
      long long v15 = xmmword_1C158A1C0;
      goto LABEL_21;
    case 17:
      long long v15 = xmmword_1C1582140;
LABEL_21:
      *(_OWORD *)a1 = v15;
      break;
    default:
      uint64_t v12 = *((void *)v9 + 5);
      unint64_t v11 = *((void *)v9 + 6);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v12, v11);
      *a1 = 0;
      a1[1] = 0;
      break;
  }
  return result;
}

uint64_t FeedItem.debugIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (uint64_t *)((char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  long long v15 = (id *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v16 - 8);
  long long v18 = (uint64_t *)((char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v0, (uint64_t)v21, type metadata accessor for FeedItem);
  uint64_t v22 = 1701736302;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v22 = *(void *)v21;
      uint64_t v23 = *((void *)v21 + 9);
      unint64_t v24 = *((void *)v21 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v23, v24);
      break;
    case 2u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v22 = *v18;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      break;
    case 3u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v15, type metadata accessor for FeedHeadline);
      id v25 = objc_msgSend(v15[5], sel_identifier);
      uint64_t v22 = sub_1C151E62C();

      sub_1BFEEB3A0((uint64_t)v15, type metadata accessor for FeedHeadline);
      break;
    case 4u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v22 = FeedWebEmbed.debugIdentifier.getter();
      sub_1BFEEB3A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      break;
    case 5u:
      long long v26 = *((_OWORD *)v21 + 7);
      long long v64 = *((_OWORD *)v21 + 6);
      v65[0] = v26;
      *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)(v21 + 121);
      long long v27 = *((_OWORD *)v21 + 1);
      long long v58 = *(_OWORD *)v21;
      long long v59 = v27;
      long long v28 = *((_OWORD *)v21 + 3);
      long long v60 = *((_OWORD *)v21 + 2);
      long long v61 = v28;
      long long v29 = *((_OWORD *)v21 + 5);
      long long v62 = *((_OWORD *)v21 + 4);
      long long v63 = v29;
      long long v30 = (void *)v58;
      sub_1C0187FB0((uint64_t)&v58);
      id v31 = objc_msgSend(v30, sel_identifier);
      uint64_t v22 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v58);
      sub_1C01880A4((uint64_t)&v58);
      break;
    case 6u:
      sub_1C063FFF4((uint64_t)v21, (uint64_t)&v58);
      uint64_t v22 = FeedCatalogItem.debugIdentifier.getter();
      sub_1C024A288((uint64_t)&v58);
      break;
    case 7u:
      long long v32 = *((_OWORD *)v21 + 7);
      long long v64 = *((_OWORD *)v21 + 6);
      v65[0] = v32;
      v65[1] = *((_OWORD *)v21 + 8);
      LOBYTE(v66) = v21[144];
      long long v33 = *((_OWORD *)v21 + 3);
      long long v60 = *((_OWORD *)v21 + 2);
      long long v61 = v33;
      long long v34 = *((_OWORD *)v21 + 5);
      long long v62 = *((_OWORD *)v21 + 4);
      long long v63 = v34;
      long long v35 = *((_OWORD *)v21 + 1);
      long long v58 = *(_OWORD *)v21;
      id v36 = objc_retainAutoreleasedReturnValue(objc_msgSend((id)v35, sel_identifier, (void)v58, *((void *)&v58 + 1), v35, (void)v60, *((void *)&v60 + 1), (void)v61, *((void *)&v61 + 1), (void)v62, *((void *)&v62 + 1), (void)v63, *((void *)&v63 + 1), (void)v64, *((void *)&v64 + 1), *(void *)&v65[0], *((void *)&v65[0] + 1), *(void *)&v65[1],
                *((void *)&v65[1] + 1),
                (void)v66));
      uint64_t v22 = sub_1C151E62C();

      sub_1BFEA4290((uint64_t)&v58);
      break;
    case 8u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v22 = *v9;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      break;
    case 9u:
      long long v37 = *((_OWORD *)v21 + 7);
      long long v64 = *((_OWORD *)v21 + 6);
      v65[0] = v37;
      v65[1] = *((_OWORD *)v21 + 8);
      *(void *)&long long v66 = *((void *)v21 + 18);
      long long v38 = *((_OWORD *)v21 + 3);
      long long v60 = *((_OWORD *)v21 + 2);
      long long v61 = v38;
      long long v39 = *((_OWORD *)v21 + 5);
      long long v62 = *((_OWORD *)v21 + 4);
      long long v63 = v39;
      long long v40 = *((_OWORD *)v21 + 1);
      long long v58 = *(_OWORD *)v21;
      long long v59 = v40;
      uint64_t v22 = v58;
      swift_bridgeObjectRetain();
      sub_1C0249FA4((uint64_t)&v58);
      break;
    case 0xAu:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      uint64_t v22 = *v6;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      break;
    case 0xBu:
      uint64_t v22 = _s5TeaUI11PluginModelC8NewsFeedE15debugIdentifierSSvg_0();
      swift_release();
      break;
    case 0xCu:
      swift_bridgeObjectRetain();
      id v41 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v22 = sub_1C151E62C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();

      break;
    case 0xDu:
      long long v42 = *((_OWORD *)v21 + 11);
      long long v67 = *((_OWORD *)v21 + 10);
      long long v68 = v42;
      long long v69 = *((_OWORD *)v21 + 12);
      long long v43 = *((_OWORD *)v21 + 7);
      long long v64 = *((_OWORD *)v21 + 6);
      v65[0] = v43;
      long long v44 = *((_OWORD *)v21 + 9);
      v65[1] = *((_OWORD *)v21 + 8);
      long long v66 = v44;
      long long v45 = *((_OWORD *)v21 + 3);
      long long v60 = *((_OWORD *)v21 + 2);
      long long v61 = v45;
      long long v46 = *((_OWORD *)v21 + 5);
      long long v62 = *((_OWORD *)v21 + 4);
      long long v63 = v46;
      long long v47 = *((_OWORD *)v21 + 1);
      long long v58 = *(_OWORD *)v21;
      long long v59 = v47;
      uint64_t v22 = *((void *)&v60 + 1);
      swift_bridgeObjectRetain();
      sub_1C01F0A74((uint64_t)&v58);
      break;
    case 0xEu:
      uint64_t v48 = *((void *)v21 + 3);
      unint64_t v49 = *((void *)v21 + 4);
      uint64_t v22 = *((void *)v21 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEFC20(v48, v49);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0xFu:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v22 = *((void *)v3 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      break;
    case 0x10u:
      long long v50 = *((_OWORD *)v21 + 13);
      long long v69 = *((_OWORD *)v21 + 12);
      long long v70 = v50;
      long long v71 = *((_OWORD *)v21 + 14);
      uint64_t v72 = *((void *)v21 + 30);
      long long v51 = *((_OWORD *)v21 + 9);
      v65[1] = *((_OWORD *)v21 + 8);
      long long v66 = v51;
      long long v52 = *((_OWORD *)v21 + 11);
      long long v67 = *((_OWORD *)v21 + 10);
      long long v68 = v52;
      long long v53 = *((_OWORD *)v21 + 5);
      long long v62 = *((_OWORD *)v21 + 4);
      long long v63 = v53;
      long long v54 = *((_OWORD *)v21 + 7);
      long long v64 = *((_OWORD *)v21 + 6);
      v65[0] = v54;
      long long v55 = *((_OWORD *)v21 + 1);
      long long v58 = *(_OWORD *)v21;
      long long v59 = v55;
      long long v56 = *((_OWORD *)v21 + 3);
      long long v60 = *((_OWORD *)v21 + 2);
      long long v61 = v56;
      uint64_t v22 = v58;
      swift_bridgeObjectRetain();
      sub_1C01F0AC8((uint64_t)&v58);
      break;
    case 0x11u:
      return v22;
    default:
      uint64_t v22 = *(void *)v21;
      sub_1BFEEFC20(*((void *)v21 + 5), *((void *)v21 + 6));
      break;
  }
  return v22;
}

uint64_t FeedItem.debugTitle.getter()
{
  uint64_t v1 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (id *)((char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v0, (uint64_t)v12, type metadata accessor for FeedItem);
  uint64_t v13 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = *((void *)v12 + 9);
      unint64_t v19 = *((void *)v12 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v18;
      unint64_t v17 = v19;
      goto LABEL_5;
    case 2u:
      sub_1BFEEFA80((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v13 = *v9;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      return v13;
    case 3u:
      sub_1BFEEFA80((uint64_t)v12, (uint64_t)v6, type metadata accessor for FeedHeadline);
      id v20 = objc_msgSend(v6[5], sel_title);
      if (v20)
      {
        char v21 = v20;
        uint64_t v13 = sub_1C151E62C();
      }
      else
      {
        uint64_t v13 = 0;
      }
      sub_1BFEEB3A0((uint64_t)v6, type metadata accessor for FeedHeadline);
      return v13;
    case 4u:
      sub_1BFEEFA80((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v13 = FeedWebEmbed.debugTitle.getter();
      sub_1BFEEB3A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v13;
    case 5u:
      long long v22 = *((_OWORD *)v12 + 7);
      long long v64 = *((_OWORD *)v12 + 6);
      v65[0] = v22;
      *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)(v12 + 121);
      long long v23 = *((_OWORD *)v12 + 1);
      long long v58 = *(_OWORD *)v12;
      long long v59 = v23;
      long long v24 = *((_OWORD *)v12 + 3);
      long long v60 = *((_OWORD *)v12 + 2);
      long long v61 = v24;
      long long v25 = *((_OWORD *)v12 + 5);
      long long v62 = *((_OWORD *)v12 + 4);
      long long v63 = v25;
      long long v26 = (void *)v58;
      sub_1C0187FB0((uint64_t)&v58);
      id v27 = objc_msgSend(v26, sel_coverDate);
      uint64_t v13 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v58);
      sub_1C01880A4((uint64_t)&v58);
      return v13;
    case 6u:
      sub_1C063FFF4((uint64_t)v12, (uint64_t)&v58);
      uint64_t v13 = FeedCatalogItem.debugTitle.getter();
      sub_1C024A288((uint64_t)&v58);
      return v13;
    case 7u:
      long long v28 = *((_OWORD *)v12 + 7);
      long long v64 = *((_OWORD *)v12 + 6);
      v65[0] = v28;
      v65[1] = *((_OWORD *)v12 + 8);
      LOBYTE(v66) = v12[144];
      long long v29 = *((_OWORD *)v12 + 3);
      long long v60 = *((_OWORD *)v12 + 2);
      long long v61 = v29;
      long long v30 = *((_OWORD *)v12 + 5);
      long long v62 = *((_OWORD *)v12 + 4);
      long long v63 = v30;
      long long v31 = *((_OWORD *)v12 + 1);
      long long v58 = *(_OWORD *)v12;
      id v32 = objc_retainAutoreleasedReturnValue(objc_msgSend((id)v31, sel_name, (void)v58, *((void *)&v58 + 1), v31, (void)v60, *((void *)&v60 + 1), (void)v61, *((void *)&v61 + 1), (void)v62, *((void *)&v62 + 1), (void)v63, *((void *)&v63 + 1), (void)v64, *((void *)&v64 + 1), *(void *)&v65[0], *((void *)&v65[0] + 1), *(void *)&v65[1],
                *((void *)&v65[1] + 1),
                (void)v66));
      uint64_t v13 = sub_1C151E62C();

      sub_1BFEA4290((uint64_t)&v58);
      return v13;
    case 8u:
    case 0xAu:
    case 0xFu:
      sub_1BFEEB3A0((uint64_t)v12, type metadata accessor for FeedItem);
      return 0;
    case 9u:
      long long v33 = *((_OWORD *)v12 + 7);
      long long v64 = *((_OWORD *)v12 + 6);
      v65[0] = v33;
      v65[1] = *((_OWORD *)v12 + 8);
      *(void *)&long long v66 = *((void *)v12 + 18);
      long long v34 = *((_OWORD *)v12 + 3);
      long long v60 = *((_OWORD *)v12 + 2);
      long long v61 = v34;
      long long v35 = *((_OWORD *)v12 + 5);
      long long v62 = *((_OWORD *)v12 + 4);
      long long v63 = v35;
      long long v36 = *((_OWORD *)v12 + 1);
      long long v58 = *(_OWORD *)v12;
      long long v59 = v36;
      uint64_t v13 = v36;
      swift_bridgeObjectRetain();
      sub_1C0249FA4((uint64_t)&v58);
      return v13;
    case 0xBu:
      swift_release();
      return 0;
    case 0xCu:
      swift_bridgeObjectRetain();
      id v37 = objc_msgSend((id)swift_unknownObjectRetain(), sel_name);
      uint64_t v13 = sub_1C151E62C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();

      return v13;
    case 0xDu:
      long long v38 = *((_OWORD *)v12 + 11);
      long long v67 = *((_OWORD *)v12 + 10);
      long long v68 = v38;
      long long v69 = *((_OWORD *)v12 + 12);
      long long v39 = *((_OWORD *)v12 + 7);
      long long v64 = *((_OWORD *)v12 + 6);
      v65[0] = v39;
      long long v40 = *((_OWORD *)v12 + 9);
      v65[1] = *((_OWORD *)v12 + 8);
      long long v66 = v40;
      long long v41 = *((_OWORD *)v12 + 3);
      long long v60 = *((_OWORD *)v12 + 2);
      long long v61 = v41;
      long long v42 = *((_OWORD *)v12 + 5);
      long long v62 = *((_OWORD *)v12 + 4);
      long long v63 = v42;
      long long v43 = *((_OWORD *)v12 + 1);
      long long v58 = *(_OWORD *)v12;
      id v44 = objc_retainAutoreleasedReturnValue(objc_msgSend(*((id *)&v41 + 1), sel_title, (void)v58, *((void *)&v58 + 1), v43, (void)v60, *((void *)&v60 + 1), v41, (void)v62, *((void *)&v62 + 1), (void)v63, *((void *)&v63 + 1), (void)v64, *((void *)&v64 + 1), *(void *)&v65[0], *((void *)&v65[0] + 1), *(void *)&v65[1], *((void *)&v65[1] + 1),
                (void)v66,
                *((void *)&v66 + 1),
                (void)v67,
                *((void *)&v67 + 1),
                (void)v68,
                *((void *)&v68 + 1),
                (void)v69,
                *((void *)&v69 + 1)));
      if (v44)
      {
        long long v45 = v44;
        uint64_t v13 = sub_1C151E62C();
      }
      else
      {
        uint64_t v13 = 0;
      }
      sub_1C01F0A74((uint64_t)&v58);
      return v13;
    case 0xEu:
      uint64_t v46 = *((void *)v12 + 3);
      unint64_t v47 = *((void *)v12 + 4);
      sub_1BFF7FF04(v46, v47);
      swift_bridgeObjectRetain();
      id v48 = objc_msgSend((id)swift_unknownObjectRetain(), sel_name);
      if (v48)
      {
        unint64_t v49 = v48;
        uint64_t v13 = sub_1C151E62C();

        sub_1BFEEFC20(v46, v47);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v46, v47);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BFEEFC20(v46, v47);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v46, v47);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      return v13;
    case 0x10u:
      long long v50 = *((_OWORD *)v12 + 13);
      long long v69 = *((_OWORD *)v12 + 12);
      long long v70 = v50;
      long long v71 = *((_OWORD *)v12 + 14);
      uint64_t v72 = *((void *)v12 + 30);
      long long v51 = *((_OWORD *)v12 + 9);
      v65[1] = *((_OWORD *)v12 + 8);
      long long v66 = v51;
      long long v52 = *((_OWORD *)v12 + 11);
      long long v67 = *((_OWORD *)v12 + 10);
      long long v68 = v52;
      long long v53 = *((_OWORD *)v12 + 5);
      long long v62 = *((_OWORD *)v12 + 4);
      long long v63 = v53;
      long long v54 = *((_OWORD *)v12 + 7);
      long long v64 = *((_OWORD *)v12 + 6);
      v65[0] = v54;
      long long v55 = *((_OWORD *)v12 + 1);
      long long v58 = *(_OWORD *)v12;
      long long v59 = v55;
      long long v56 = *((_OWORD *)v12 + 3);
      long long v60 = *((_OWORD *)v12 + 2);
      long long v61 = v56;
      uint64_t v73 = 0;
      unint64_t v74 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v73 = 0x206C6C6177796150;
      unint64_t v74 = 0xE900000000000028;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C01F0AC8((uint64_t)&v58);
      return v73;
    case 0x11u:
      return v13;
    default:
      uint64_t v14 = *((void *)v12 + 5);
      unint64_t v15 = *((void *)v12 + 6);
      swift_bridgeObjectRelease();
      uint64_t v16 = v14;
      unint64_t v17 = v15;
LABEL_5:
      sub_1BFEEFC20(v16, v17);
      return 0;
  }
}

uint64_t FeedItem.traits.getter@<X0>(uint64_t *a1@<X8>)
{
  long long v66 = a1;
  uint64_t v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (uint64_t *)((char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v65, (uint64_t)v18, type metadata accessor for FeedItem);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v25 = *((void *)v18 + 2);
      uint64_t v26 = *((void *)v18 + 9);
      unint64_t v27 = *((void *)v18 + 10);
      uint64_t v28 = qword_1F1B649B8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v26, v27);
      uint64_t v24 = v28 | v25;
      goto LABEL_42;
    case 2:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      *long long v66 = qword_1F1B649E0 | *(void *)&v15[*(int *)(v13 + 24)];
      return sub_1BFEEB3A0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    case 3:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v12, type metadata accessor for FeedHeadline);
      *long long v66 = qword_1F1B64A08 | *((void *)v12 + 4);
      return sub_1BFEEB3A0((uint64_t)v12, type metadata accessor for FeedHeadline);
    case 4:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      *long long v66 = qword_1F1B64A30 | *v9;
      return sub_1BFEEB3A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    case 5:
      long long v29 = *((_OWORD *)v18 + 5);
      long long v79 = *((_OWORD *)v18 + 4);
      long long v80 = v29;
      long long v30 = *((_OWORD *)v18 + 7);
      long long v81 = *((_OWORD *)v18 + 6);
      v82[0] = v30;
      *(_OWORD *)((char *)v82 + 9) = *(_OWORD *)(v18 + 121);
      long long v31 = *((_OWORD *)v18 + 1);
      long long v75 = *(_OWORD *)v18;
      long long v76 = v31;
      long long v32 = *((_OWORD *)v18 + 3);
      long long v77 = *((_OWORD *)v18 + 2);
      long long v78 = v32;
      if (v79 == 1)
      {
        sub_1C0187FB0((uint64_t)&v75);
        FCIssue.issueCoverModel.getter((uint64_t)&v67);
        if (v74)
        {
          if (v74 == 1)
          {
            sub_1C00FA1F0(v67, v68, v69, v70, v71, v72, v73, 1);
            uint64_t v33 = qword_1F1B63DD0;
            uint64_t v34 = unk_1F1B63DD8;
            sub_1C01880A4((uint64_t)&v75);
            if ((v34 & ~v33) != 0) {
              uint64_t v35 = v34;
            }
            else {
              uint64_t v35 = 0;
            }
            uint64_t v36 = v35 | v33;
          }
          else
          {
            sub_1C01880A4((uint64_t)&v75);
            uint64_t v36 = 0;
          }
        }
        else
        {
          sub_1C00FA1F0(v67, v68, v69, v70, v71, v72, v73, 0);
          uint64_t v36 = qword_1F1B63DA8;
          sub_1C01880A4((uint64_t)&v75);
        }
      }
      else
      {
        sub_1C0187FB0((uint64_t)&v75);
        FCIssue.issueCoverModel.getter((uint64_t)&v67);
        if (v74)
        {
          if (v74 == 1)
          {
            sub_1C00FA1F0(v67, v68, v69, v70, v71, v72, v73, 1);
            uint64_t v61 = unk_1F1B63DD8;
            if ((unk_1F1B63DD8 & ~qword_1F1B63DD0) == 0) {
              uint64_t v61 = 0;
            }
            uint64_t v62 = v61 | qword_1F1B63DD0;
          }
          else
          {
            uint64_t v62 = 0;
          }
        }
        else
        {
          sub_1C00FA1F0(v67, v68, v69, v70, v71, v72, v73, 0);
          uint64_t v62 = qword_1F1B63DA8;
        }
        uint64_t v63 = qword_1F1B64A58;
        sub_1C01880A4((uint64_t)&v75);
        uint64_t v36 = v63 | v62;
      }
      uint64_t v64 = qword_1F1B64A80;
      uint64_t result = sub_1C01880A4((uint64_t)&v75);
      uint64_t v24 = v64 | v36;
      goto LABEL_42;
    case 6:
      uint64_t result = sub_1BFEEB3A0((uint64_t)v18, type metadata accessor for FeedItem);
      uint64_t v24 = qword_1F1B64AA8;
      goto LABEL_42;
    case 7:
      long long v37 = *((_OWORD *)v18 + 7);
      long long v81 = *((_OWORD *)v18 + 6);
      v82[0] = v37;
      v82[1] = *((_OWORD *)v18 + 8);
      LOBYTE(v83) = v18[144];
      long long v38 = *((_OWORD *)v18 + 3);
      long long v77 = *((_OWORD *)v18 + 2);
      long long v78 = v38;
      long long v39 = *((_OWORD *)v18 + 5);
      long long v79 = *((_OWORD *)v18 + 4);
      long long v80 = v39;
      long long v40 = *((_OWORD *)v18 + 1);
      long long v75 = *(_OWORD *)v18;
      long long v76 = v40;
      swift_getObjectType();
      FCTagProviding.traits.getter(v66);
      return sub_1BFEA4290((uint64_t)&v75);
    case 8:
      uint64_t result = sub_1BFEEB3A0((uint64_t)v18, type metadata accessor for FeedItem);
      goto LABEL_17;
    case 9:
      uint64_t result = sub_1BFEEB3A0((uint64_t)v18, type metadata accessor for FeedItem);
      uint64_t v24 = 0x40000;
      goto LABEL_42;
    case 10:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      uint64_t v41 = *(void *)&v6[*(int *)(v4 + 24)];
      long long v42 = type metadata accessor for FeedEngagementBanner;
      uint64_t v43 = (uint64_t)v6;
      goto LABEL_28;
    case 11:
      uint64_t v44 = qword_1F1B64AD0;
      uint64_t v45 = unk_1F1B64AD8;
      uint64_t result = swift_release();
      if ((v45 & ~v44) != 0) {
        uint64_t v46 = v45;
      }
      else {
        uint64_t v46 = 0;
      }
      uint64_t v24 = v46 | v44;
      goto LABEL_42;
    case 12:
      uint64_t v41 = qword_1F1B64B00;
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_29;
    case 13:
      long long v47 = *((_OWORD *)v18 + 11);
      long long v84 = *((_OWORD *)v18 + 10);
      long long v85 = v47;
      long long v86 = *((_OWORD *)v18 + 12);
      long long v48 = *((_OWORD *)v18 + 7);
      long long v81 = *((_OWORD *)v18 + 6);
      v82[0] = v48;
      long long v49 = *((_OWORD *)v18 + 9);
      v82[1] = *((_OWORD *)v18 + 8);
      long long v83 = v49;
      long long v50 = *((_OWORD *)v18 + 3);
      long long v77 = *((_OWORD *)v18 + 2);
      long long v78 = v50;
      long long v51 = *((_OWORD *)v18 + 5);
      long long v79 = *((_OWORD *)v18 + 4);
      long long v80 = v51;
      long long v52 = *((_OWORD *)v18 + 1);
      long long v75 = *(_OWORD *)v18;
      long long v76 = v52;
      uint64_t v41 = v75;
      uint64_t result = sub_1C01F0A74((uint64_t)&v75);
      goto LABEL_29;
    case 14:
      uint64_t v53 = *(void *)v18;
      sub_1BFEEFC20(*((void *)v18 + 3), *((void *)v18 + 4));
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *long long v66 = v53;
      return result;
    case 15:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v41 = *v3;
      long long v42 = type metadata accessor for FeedPuzzleStatistic;
      uint64_t v43 = (uint64_t)v3;
LABEL_28:
      uint64_t result = sub_1BFEEB3A0(v43, (uint64_t (*)(void))v42);
LABEL_29:
      *long long v66 = v41;
      return result;
    case 16:
      long long v54 = *((_OWORD *)v18 + 13);
      long long v86 = *((_OWORD *)v18 + 12);
      long long v87 = v54;
      long long v88 = *((_OWORD *)v18 + 14);
      uint64_t v89 = *((void *)v18 + 30);
      long long v55 = *((_OWORD *)v18 + 9);
      v82[1] = *((_OWORD *)v18 + 8);
      long long v83 = v55;
      long long v56 = *((_OWORD *)v18 + 11);
      long long v84 = *((_OWORD *)v18 + 10);
      long long v85 = v56;
      long long v57 = *((_OWORD *)v18 + 5);
      long long v79 = *((_OWORD *)v18 + 4);
      long long v80 = v57;
      long long v58 = *((_OWORD *)v18 + 7);
      long long v81 = *((_OWORD *)v18 + 6);
      v82[0] = v58;
      long long v59 = *((_OWORD *)v18 + 1);
      long long v75 = *(_OWORD *)v18;
      long long v76 = v59;
      long long v60 = *((_OWORD *)v18 + 3);
      long long v77 = *((_OWORD *)v18 + 2);
      long long v78 = v60;
      uint64_t result = sub_1C01F0AC8((uint64_t)&v75);
      uint64_t v24 = v87;
      goto LABEL_42;
    case 17:
LABEL_17:
      *long long v66 = 0;
      return result;
    default:
      uint64_t v20 = *((void *)v18 + 2);
      uint64_t v22 = *((void *)v18 + 5);
      unint64_t v21 = *((void *)v18 + 6);
      uint64_t v23 = qword_1F1B64990;
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v22, v21);
      uint64_t v24 = v23 | v20;
LABEL_42:
      *long long v66 = v24;
      return result;
  }
}

void sub_1C0A60270(void *a1@<X8>)
{
  *a1 = 2;
}

void FeedItemType.visibility.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t FeedItemType.additionalFormatFeedItems.getter()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t FeedItem.feedIssue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v4);
  char v6 = (_OWORD *)((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEEB0CC(v2, (uint64_t)v6, type metadata accessor for FeedItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (((1 << EnumCaseMultiPayload) & 0x1FFDF) != 0)
  {
    sub_1BFEEB3A0((uint64_t)v6, type metadata accessor for FeedItem);
  }
  else if (EnumCaseMultiPayload == 5)
  {
    long long v9 = v6[7];
    v13[6] = v6[6];
    v14[0] = v9;
    *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)v6 + 121);
    long long v10 = v6[3];
    v13[2] = v6[2];
    void v13[3] = v10;
    long long v11 = v6[5];
    v13[4] = v6[4];
    v13[5] = v11;
    long long v12 = v6[1];
    v13[0] = *v6;
    v13[1] = v12;
    nullsub_1(v13);
    return sub_1C0A60978((uint64_t)v13, a1, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
  }
  sub_1C01B3C58(v13);
  return sub_1C0A60978((uint64_t)v13, a1, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
}

void sub_1C0A604D0(void *a1@<X8>)
{
}

unint64_t FeedItem.Kind.description.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  unint64_t v3 = 7364935;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v3 = 0x696C66664F706147;
      break;
    case 2uLL:
      unint64_t v3 = 0x644172656E6E6142;
      break;
    case 3uLL:
      unint64_t v3 = 0x656E696C64616548;
      break;
    case 4uLL:
      unint64_t v3 = 0x6465626D45626557;
      break;
    case 5uLL:
      unint64_t v3 = 0x6575737349;
      break;
    case 6uLL:
      unint64_t v3 = 0x49676F6C61746143;
      break;
    case 7uLL:
      unint64_t v3 = 6775124;
      break;
    case 8uLL:
      unint64_t v3 = 0x79726F6765746143;
      break;
    case 9uLL:
      unint64_t v3 = 0xD000000000000010;
      break;
    case 0xAuLL:
      unint64_t v3 = 0x6E6967756C50;
      break;
    case 0xBuLL:
      unint64_t v3 = 0x76457374726F7053;
      break;
    case 0xCuLL:
      unint64_t v3 = 0x656C7A7A7550;
      break;
    case 0xDuLL:
      unint64_t v3 = 0x7954656C7A7A7550;
      break;
    case 0xEuLL:
      unint64_t v3 = 0x7453656C7A7A7550;
      break;
    case 0xFuLL:
      unint64_t v3 = 0x6C6C6177796150;
      break;
    case 0x10uLL:
      unint64_t v3 = 1701736270;
      break;
    default:
      unint64_t v3 = v1;
      break;
  }
  sub_1BFF7FF04(v1, v2);
  return v3;
}

uint64_t FeedItem.Kind.hash(into:)()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
    case 0xFLL:
    case 0x10:
      uint64_t result = sub_1C1520DCC();
      break;
    default:
      sub_1C1520DCC();
      uint64_t result = sub_1C151E77C();
      break;
  }
  return result;
}

uint64_t FeedItem.Kind.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A608E0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A60930()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A60978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t FeedItem.additionalFormatFeedItems.getter()
{
  uint64_t v93 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v0, (uint64_t)v12, type metadata accessor for FeedItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v19 = *((void *)v12 + 9);
      unint64_t v20 = *((void *)v12 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v19;
      unint64_t v18 = v20;
      goto LABEL_5;
    case 2:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      sub_1BFEEB3A0((uint64_t)v12, type metadata accessor for FeedItem);
      return v14;
    case 3:
      sub_1BFEEFA80((uint64_t)v12, (uint64_t)v9, type metadata accessor for FeedHeadline);
      uint64_t v14 = (uint64_t)FeedHeadline.additionalFormatFeedItems.getter();
      sub_1BFEEB3A0((uint64_t)v9, type metadata accessor for FeedHeadline);
      return v14;
    case 4:
      sub_1BFEEFA80((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v14 = (uint64_t)FeedWebEmbed.additionalFormatFeedItems.getter();
      sub_1BFEEB3A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v14;
    case 5:
      long long v21 = *((_OWORD *)v12 + 7);
      long long v84 = *((_OWORD *)v12 + 6);
      v85[0] = v21;
      *(_OWORD *)((char *)v85 + 9) = *(_OWORD *)(v12 + 121);
      long long v22 = *((_OWORD *)v12 + 1);
      long long v78 = *(_OWORD *)v12;
      long long v79 = v22;
      long long v23 = *((_OWORD *)v12 + 3);
      long long v80 = *((_OWORD *)v12 + 2);
      long long v81 = v23;
      long long v24 = *((_OWORD *)v12 + 5);
      long long v82 = *((_OWORD *)v12 + 4);
      long long v83 = v24;
      uint64_t v25 = (void *)v78;
      sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
      sub_1C0187FB0((uint64_t)&v78);
      id v26 = objc_msgSend(v25, sel_sourceChannel);
      *(void *)(v14 + 56) = &type metadata for FeedTag;
      *(void *)(v14 + 64) = sub_1BFEA44FC();
      uint64_t v27 = swift_allocObject();
      *(void *)(v14 + 32) = v27;
      id v28 = objc_msgSend(v26, sel_identifier);
      uint64_t v29 = sub_1C151E62C();
      uint64_t v31 = v30;

      *(_OWORD *)(v27 + 96) = xmmword_1C152C800;
      *(_OWORD *)(v27 + 112) = 0u;
      *(_OWORD *)(v27 + 128) = 0u;
      *(_OWORD *)(v27 + 144) = 0u;
      *(unsigned char *)(v27 + 160) = 0;
      *(void *)(v27 + 16) = v29;
      *(void *)(v27 + 24) = v31;
      *(void *)(v27 + 32) = v26;
      *(unsigned char *)(v27 + 40) = 0;
      *(void *)(v27 + 64) = 0;
      *(void *)(v27 + 72) = 0xE000000000000000;
      *(void *)(v27 + 48) = 0;
      *(unsigned char *)(v27 + 56) = 0;
      uint64_t v32 = MEMORY[0x1E4FBC870];
      *(void *)(v27 + 80) = 0;
      *(void *)(v27 + 88) = v32;
      sub_1C01880A4((uint64_t)&v78);
      sub_1C01880A4((uint64_t)&v78);
      return v14;
    case 11:
      swift_release();
      return v14;
    case 12:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    case 13:
      long long v33 = *((_OWORD *)v12 + 11);
      long long v87 = *((_OWORD *)v12 + 10);
      long long v88 = v33;
      long long v89 = *((_OWORD *)v12 + 12);
      long long v34 = *((_OWORD *)v12 + 7);
      long long v84 = *((_OWORD *)v12 + 6);
      v85[0] = v34;
      long long v35 = *((_OWORD *)v12 + 9);
      v85[1] = *((_OWORD *)v12 + 8);
      long long v86 = v35;
      long long v36 = *((_OWORD *)v12 + 3);
      long long v80 = *((_OWORD *)v12 + 2);
      long long v81 = v36;
      long long v37 = *((_OWORD *)v12 + 5);
      long long v82 = *((_OWORD *)v12 + 4);
      long long v83 = v37;
      long long v38 = *((_OWORD *)v12 + 1);
      long long v78 = *(_OWORD *)v12;
      long long v79 = v38;
      id v39 = objc_msgSend(*((id *)&v36 + 1), sel_puzzleType);
      id v40 = objc_msgSend(v39, sel_identifier);
      uint64_t v41 = sub_1C151E62C();
      uint64_t v43 = v42;

      sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
      uint64_t v44 = swift_allocObject();
      long long v76 = xmmword_1C1529AE0;
      *(_OWORD *)(v44 + 16) = xmmword_1C1529AE0;
      *(void *)(v44 + 56) = &type metadata for FeedPuzzleType;
      *(void *)(v44 + 64) = sub_1C06423C4();
      uint64_t v45 = swift_allocObject();
      *(void *)(v44 + 32) = v45;
      *(void *)(v45 + 16) = 0;
      *(void *)(v45 + 24) = 0;
      *(unsigned char *)(v45 + 32) = 1;
      *(_OWORD *)(v45 + 40) = xmmword_1C1538940;
      *(void *)(v45 + 56) = v41;
      *(void *)(v45 + 64) = v43;
      *(void *)(v45 + 72) = v39;
      uint64_t v77 = v44;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v76;
      *(void *)(inited + 56) = &type metadata for FeedTag;
      *(void *)(inited + 64) = sub_1BFEA44FC();
      uint64_t v47 = swift_allocObject();
      *(void *)(inited + 32) = v47;
      sub_1BFF7FF04(0, 0xDuLL);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BFF7FF04(0, 0xDuLL);
      swift_bridgeObjectRetain();
      id v48 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
      uint64_t v49 = sub_1C151E62C();
      uint64_t v51 = v50;

      *(_OWORD *)(v47 + 96) = xmmword_1C152C800;
      *(_OWORD *)(v47 + 112) = 0u;
      *(_OWORD *)(v47 + 128) = 0u;
      *(_OWORD *)(v47 + 144) = 0u;
      *(unsigned char *)(v47 + 160) = 0;
      *(void *)(v47 + 16) = v49;
      *(void *)(v47 + 24) = v51;
      *(void *)(v47 + 32) = v39;
      *(unsigned char *)(v47 + 40) = 0;
      *(void *)(v47 + 64) = 0;
      *(void *)(v47 + 72) = 0xE000000000000000;
      *(void *)(v47 + 48) = 0;
      *(unsigned char *)(v47 + 56) = 0;
      uint64_t v52 = MEMORY[0x1E4FBC870];
      *(void *)(v47 + 80) = 0;
      *(void *)(v47 + 88) = v52;
      sub_1BFEEFC20(0, 0xDuLL);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEACADC(inited);
      sub_1BFEEFC20(0, 0xDuLL);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v77;
      sub_1C01F0A74((uint64_t)&v78);
      return v14;
    case 14:
      uint64_t v53 = *((void *)v12 + 3);
      unint64_t v54 = *((void *)v12 + 4);
      uint64_t v55 = *((void *)v12 + 7);
      sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
      *(void *)(v14 + 56) = &type metadata for FeedTag;
      *(void *)(v14 + 64) = sub_1BFEA44FC();
      uint64_t v56 = swift_allocObject();
      *(void *)(v14 + 32) = v56;
      sub_1BFF7FF04(v53, v54);
      swift_bridgeObjectRetain();
      id v57 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
      uint64_t v58 = sub_1C151E62C();
      uint64_t v60 = v59;

      *(_OWORD *)(v56 + 96) = xmmword_1C152C800;
      *(_OWORD *)(v56 + 112) = 0u;
      *(_OWORD *)(v56 + 128) = 0u;
      *(_OWORD *)(v56 + 144) = 0u;
      *(unsigned char *)(v56 + 160) = 0;
      *(void *)(v56 + 16) = v58;
      *(void *)(v56 + 24) = v60;
      *(void *)(v56 + 32) = v55;
      *(unsigned char *)(v56 + 40) = 0;
      *(void *)(v56 + 64) = 0;
      *(void *)(v56 + 72) = 0xE000000000000000;
      *(void *)(v56 + 48) = 0;
      *(unsigned char *)(v56 + 56) = 0;
      uint64_t v61 = MEMORY[0x1E4FBC870];
      *(void *)(v56 + 80) = 0;
      *(void *)(v56 + 88) = v61;
      sub_1BFEEFC20(v53, v54);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v53, v54);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    case 15:
      sub_1BFEEFA80((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
      uint64_t v62 = *(void *)&v3[*(int *)(v1 + 32)];
      *(void *)(v14 + 56) = &type metadata for FeedPuzzleType;
      *(void *)(v14 + 64) = sub_1C06423C4();
      uint64_t v63 = swift_allocObject();
      *(void *)(v14 + 32) = v63;
      id v64 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v65 = sub_1C151E62C();
      uint64_t v67 = v66;

      *(void *)(v63 + 16) = 0;
      *(void *)(v63 + 24) = 0;
      *(unsigned char *)(v63 + 32) = 1;
      *(_OWORD *)(v63 + 40) = xmmword_1C1538940;
      *(void *)(v63 + 56) = v65;
      *(void *)(v63 + 64) = v67;
      *(void *)(v63 + 72) = v62;
      sub_1BFEEB3A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      return v14;
    case 16:
      long long v68 = *((_OWORD *)v12 + 13);
      long long v89 = *((_OWORD *)v12 + 12);
      long long v90 = v68;
      long long v91 = *((_OWORD *)v12 + 14);
      uint64_t v92 = *((void *)v12 + 30);
      long long v69 = *((_OWORD *)v12 + 9);
      v85[1] = *((_OWORD *)v12 + 8);
      long long v86 = v69;
      long long v70 = *((_OWORD *)v12 + 11);
      long long v87 = *((_OWORD *)v12 + 10);
      long long v88 = v70;
      long long v71 = *((_OWORD *)v12 + 5);
      long long v82 = *((_OWORD *)v12 + 4);
      long long v83 = v71;
      long long v72 = *((_OWORD *)v12 + 7);
      long long v84 = *((_OWORD *)v12 + 6);
      v85[0] = v72;
      long long v73 = *((_OWORD *)v12 + 1);
      long long v78 = *(_OWORD *)v12;
      long long v79 = v73;
      long long v74 = *((_OWORD *)v12 + 3);
      long long v80 = *((_OWORD *)v12 + 2);
      long long v81 = v74;
      sub_1C01F0AC8((uint64_t)&v78);
      return v14;
    case 17:
      return v14;
    default:
      uint64_t v15 = *((void *)v12 + 5);
      unint64_t v16 = *((void *)v12 + 6);
      swift_bridgeObjectRelease();
      uint64_t v17 = v15;
      unint64_t v18 = v16;
LABEL_5:
      sub_1BFEEFC20(v17, v18);
      return MEMORY[0x1E4FBC860];
  }
}

uint64_t FeedItem.isGap.getter()
{
  uint64_t v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v0, (uint64_t)v3, type metadata accessor for FeedItem);
  uint64_t v4 = 1;
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      uint64_t v4 = 0;
      goto LABEL_3;
    case 17:
      return result;
    default:
LABEL_3:
      sub_1BFEEB3A0((uint64_t)v3, type metadata accessor for FeedItem);
      uint64_t result = v4;
      break;
  }
  return result;
}

uint64_t FeedItem.debugSourceName.getter()
{
  sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (id *)((char *)v44 - v2);
  uint64_t v4 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (id *)((char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v0, (uint64_t)v13, type metadata accessor for FeedItem);
  uint64_t v14 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = *((void *)v13 + 9);
      unint64_t v20 = *((void *)v13 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v19;
      unint64_t v18 = v20;
      goto LABEL_5;
    case 2u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xDu:
    case 0xFu:
      sub_1BFEEB3A0((uint64_t)v13, type metadata accessor for FeedItem);
      return 0;
    case 3u:
      sub_1BFEEFA80((uint64_t)v13, (uint64_t)v10, type metadata accessor for FeedHeadline);
      id v21 = objc_msgSend(v10[5], sel_sourceChannel);
      uint64_t v14 = (uint64_t)v21;
      if (v21)
      {
        id v22 = objc_msgSend(v21, sel_name);
        swift_unknownObjectRelease();
        uint64_t v14 = sub_1C151E62C();
      }
      sub_1BFEEB3A0((uint64_t)v10, type metadata accessor for FeedHeadline);
      return v14;
    case 4u:
      sub_1BFEEFA80((uint64_t)v13, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1BFEDD238((uint64_t)&v6[*(int *)(v4 + 48)], (uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
      {
        sub_1BFEDD9AC((uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
        uint64_t v14 = 0;
      }
      else
      {
        id v40 = objc_msgSend(v3[5], sel_sourceChannel);
        uint64_t v14 = (uint64_t)v40;
        if (v40)
        {
          id v41 = objc_msgSend(v40, sel_name);
          swift_unknownObjectRelease();
          uint64_t v14 = sub_1C151E62C();
        }
        sub_1BFEEB3A0((uint64_t)v3, type metadata accessor for FeedHeadline);
      }
      sub_1BFEEB3A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v14;
    case 5u:
      long long v23 = *((_OWORD *)v13 + 7);
      long long v64 = *((_OWORD *)v13 + 6);
      v65[0] = v23;
      *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)(v13 + 121);
      long long v24 = *((_OWORD *)v13 + 1);
      long long v58 = *(_OWORD *)v13;
      long long v59 = v24;
      long long v25 = *((_OWORD *)v13 + 3);
      long long v60 = *((_OWORD *)v13 + 2);
      long long v61 = v25;
      long long v26 = *((_OWORD *)v13 + 5);
      long long v62 = *((_OWORD *)v13 + 4);
      long long v63 = v26;
      uint64_t v27 = (void *)v58;
      sub_1C0187FB0((uint64_t)&v58);
      id v28 = objc_msgSend(objc_msgSend(v27, sel_sourceChannel), sel_name);
      swift_unknownObjectRelease();
      uint64_t v14 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v58);
      sub_1C01880A4((uint64_t)&v58);
      return v14;
    case 6u:
      sub_1C063FFF4((uint64_t)v13, (uint64_t)&v58);
      sub_1C024A070((uint64_t)&v58, (uint64_t)&v48);
      if (!v57)
      {
        v46[6] = v54;
        v47[0] = v55[0];
        *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)((char *)v55 + 9);
        v46[0] = v48;
        v46[1] = v49;
        v46[2] = v50;
        v46[3] = v51;
        v46[4] = v52;
        v46[5] = v53;
        uint64_t v42 = (void *)v48;
        sub_1C0187FB0((uint64_t)v46);
        id v43 = objc_msgSend(objc_msgSend(v42, sel_sourceChannel), sel_name);
        swift_unknownObjectRelease();
        uint64_t v14 = sub_1C151E62C();

        sub_1C01880A4((uint64_t)v46);
        uint64_t v31 = v46;
        goto LABEL_24;
      }
      if (v57 == 1)
      {
        v44[6] = v54;
        v45[0] = v55[0];
        *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)((char *)v55 + 9);
        void v44[2] = v50;
        v44[3] = v51;
        v44[4] = v52;
        v44[5] = v53;
        v44[0] = v48;
        v44[1] = v49;
        sub_1C0A60978((uint64_t)&v56, (uint64_t)v46, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
        sub_1C01B3B54((uint64_t)v46);
        uint64_t v29 = *(void **)&v44[0];
        sub_1C0187FB0((uint64_t)v44);
        id v30 = objc_msgSend(objc_msgSend(v29, sel_sourceChannel), sel_name);
        swift_unknownObjectRelease();
        uint64_t v14 = sub_1C151E62C();

        sub_1C01880A4((uint64_t)v44);
        uint64_t v31 = v44;
LABEL_24:
        sub_1C01880A4((uint64_t)v31);
        goto LABEL_26;
      }
      sub_1C024A288((uint64_t)&v48);
      uint64_t v14 = 0;
LABEL_26:
      sub_1C024A288((uint64_t)&v58);
      return v14;
    case 0xBu:
      swift_release();
      return 0;
    case 0xCu:
      goto LABEL_16;
    case 0xEu:
      sub_1BFEEFC20(*((void *)v13 + 3), *((void *)v13 + 4));
LABEL_16:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    case 0x10u:
      long long v33 = *((_OWORD *)v13 + 13);
      v65[5] = *((_OWORD *)v13 + 12);
      v65[6] = v33;
      v65[7] = *((_OWORD *)v13 + 14);
      uint64_t v66 = *((void *)v13 + 30);
      long long v34 = *((_OWORD *)v13 + 9);
      v65[1] = *((_OWORD *)v13 + 8);
      _OWORD v65[2] = v34;
      long long v35 = *((_OWORD *)v13 + 11);
      v65[3] = *((_OWORD *)v13 + 10);
      v65[4] = v35;
      long long v36 = *((_OWORD *)v13 + 5);
      long long v62 = *((_OWORD *)v13 + 4);
      long long v63 = v36;
      long long v37 = *((_OWORD *)v13 + 7);
      long long v64 = *((_OWORD *)v13 + 6);
      v65[0] = v37;
      long long v38 = *((_OWORD *)v13 + 1);
      long long v58 = *(_OWORD *)v13;
      long long v59 = v38;
      long long v39 = *((_OWORD *)v13 + 3);
      long long v60 = *((_OWORD *)v13 + 2);
      long long v61 = v39;
      uint64_t v14 = v62;
      swift_bridgeObjectRetain();
      sub_1C01F0AC8((uint64_t)&v58);
      return v14;
    case 0x11u:
      return v14;
    default:
      uint64_t v15 = *((void *)v13 + 5);
      unint64_t v16 = *((void *)v13 + 6);
      swift_bridgeObjectRelease();
      uint64_t v17 = v15;
      unint64_t v18 = v16;
LABEL_5:
      sub_1BFEEFC20(v17, v18);
      return 0;
  }
}

id FeedItem.debugAssetHandle.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (id *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v1, (uint64_t)v7, type metadata accessor for FeedItem);
  id v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = *((void *)v7 + 9);
      unint64_t v9 = *((void *)v7 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v12;
      goto LABEL_5;
    case 2u:
    case 4u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xDu:
    case 0xFu:
      sub_1BFEEB3A0((uint64_t)v7, type metadata accessor for FeedItem);
      return 0;
    case 3u:
      sub_1BFEEFA80((uint64_t)v7, (uint64_t)v4, type metadata accessor for FeedHeadline);
      id v13 = objc_msgSend(v4[5], sel_thumbnail);
      id v8 = objc_msgSend(v13, sel_thumbnailAssetHandle);

      sub_1BFEEB3A0((uint64_t)v4, type metadata accessor for FeedHeadline);
      return v8;
    case 5u:
      long long v14 = *((_OWORD *)v7 + 7);
      long long v38 = *((_OWORD *)v7 + 6);
      v39[0] = v14;
      *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)(v7 + 121);
      long long v15 = *((_OWORD *)v7 + 1);
      long long v32 = *(_OWORD *)v7;
      long long v33 = v15;
      long long v16 = *((_OWORD *)v7 + 3);
      long long v34 = *((_OWORD *)v7 + 2);
      long long v35 = v16;
      long long v17 = *((_OWORD *)v7 + 5);
      long long v36 = *((_OWORD *)v7 + 4);
      id v8 = objc_msgSend((id)v32, sel_coverImageAssetHandle, (void)v32, *((void *)&v32 + 1), (void)v33, *((void *)&v33 + 1), (void)v34, *((void *)&v34 + 1), v16, (void)v36, *((void *)&v36 + 1), v17, (void)v38, *((void *)&v38 + 1), *(void *)&v39[0], *((void *)&v39[0] + 1), *(void *)&v39[1], *((void *)&v39[1] + 1));
      sub_1C01880A4((uint64_t)&v32);
      return v8;
    case 6u:
      sub_1C063FFF4((uint64_t)v7, (uint64_t)&v32);
      id v8 = FeedCatalogItem.debugAssetHandle.getter();
      sub_1C024A288((uint64_t)&v32);
      return v8;
    case 7u:
      long long v18 = *((_OWORD *)v7 + 7);
      long long v38 = *((_OWORD *)v7 + 6);
      v39[0] = v18;
      v39[1] = *((_OWORD *)v7 + 8);
      LOBYTE(v40) = v7[144];
      long long v19 = *((_OWORD *)v7 + 3);
      long long v34 = *((_OWORD *)v7 + 2);
      long long v35 = v19;
      long long v20 = *((_OWORD *)v7 + 5);
      long long v36 = *((_OWORD *)v7 + 4);
      long long v37 = v20;
      long long v21 = *((_OWORD *)v7 + 1);
      long long v32 = *(_OWORD *)v7;
      long long v33 = v21;
      id v8 = FeedTag.debugAssetHandle.getter();
      sub_1BFEA4290((uint64_t)&v32);
      return v8;
    case 0xBu:
      swift_release();
      return 0;
    case 0xCu:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    case 0xEu:
      uint64_t v22 = *((void *)v7 + 3);
      unint64_t v23 = *((void *)v7 + 4);
      id v8 = objc_msgSend(*((id *)v7 + 7), sel_coverImageAssetHandle);
      sub_1BFEEFC20(v22, v23);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    case 0x10u:
      long long v24 = *((_OWORD *)v7 + 13);
      long long v43 = *((_OWORD *)v7 + 12);
      long long v44 = v24;
      long long v45 = *((_OWORD *)v7 + 14);
      uint64_t v46 = *((void *)v7 + 30);
      long long v25 = *((_OWORD *)v7 + 9);
      v39[1] = *((_OWORD *)v7 + 8);
      long long v40 = v25;
      long long v26 = *((_OWORD *)v7 + 11);
      long long v41 = *((_OWORD *)v7 + 10);
      long long v42 = v26;
      long long v27 = *((_OWORD *)v7 + 5);
      long long v36 = *((_OWORD *)v7 + 4);
      long long v37 = v27;
      long long v28 = *((_OWORD *)v7 + 7);
      long long v38 = *((_OWORD *)v7 + 6);
      v39[0] = v28;
      long long v29 = *((_OWORD *)v7 + 1);
      long long v32 = *(_OWORD *)v7;
      long long v33 = v29;
      long long v30 = *((_OWORD *)v7 + 3);
      long long v34 = *((_OWORD *)v7 + 2);
      long long v35 = v30;
      sub_1C01F0AC8((uint64_t)&v32);
      return 0;
    case 0x11u:
      return v8;
    default:
      uint64_t v10 = *((void *)v7 + 5);
      unint64_t v9 = *((void *)v7 + 6);
      swift_bridgeObjectRelease();
      uint64_t v11 = v10;
LABEL_5:
      sub_1BFEEFC20(v11, v9);
      return 0;
  }
}

id FeedItem.debugScoreProfile.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (id *)((char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v1, (uint64_t)v7, type metadata accessor for FeedItem);
  id v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = *((void *)v7 + 9);
      unint64_t v9 = *((void *)v7 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v12;
      goto LABEL_5;
    case 2u:
    case 4u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xDu:
    case 0xFu:
      sub_1BFEEB3A0((uint64_t)v7, type metadata accessor for FeedItem);
      return 0;
    case 3u:
      sub_1BFEEFA80((uint64_t)v7, (uint64_t)v4, type metadata accessor for FeedHeadline);
      id v8 = objc_msgSend(v4[5], sel_scoreProfile);
      sub_1BFEEB3A0((uint64_t)v4, type metadata accessor for FeedHeadline);
      return v8;
    case 5u:
      long long v13 = *((_OWORD *)v7 + 7);
      long long v53 = *((_OWORD *)v7 + 6);
      v54[0] = v13;
      *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)(v7 + 121);
      long long v14 = *((_OWORD *)v7 + 3);
      long long v49 = *((_OWORD *)v7 + 2);
      long long v50 = v14;
      long long v15 = *((_OWORD *)v7 + 5);
      long long v51 = *((_OWORD *)v7 + 4);
      long long v52 = v15;
      long long v16 = *((_OWORD *)v7 + 1);
      long long v47 = *(_OWORD *)v7;
      long long v48 = v16;
      id v8 = (id)*((void *)&v50 + 1);
      id v17 = *((id *)&v50 + 1);
      sub_1C01880A4((uint64_t)&v47);
      return v8;
    case 6u:
      sub_1C063FFF4((uint64_t)v7, (uint64_t)&v47);
      sub_1C024A070((uint64_t)&v47, (uint64_t)&v37);
      if (!v46)
      {
        v35[6] = v43;
        v36[0] = v44[0];
        *(_OWORD *)((char *)v36 + 9) = *(_OWORD *)((char *)v44 + 9);
        v35[2] = v39;
        v35[3] = v40;
        v35[4] = v41;
        v35[5] = v42;
        v35[0] = v37;
        v35[1] = v38;
        id v8 = (id)*((void *)&v40 + 1);
        id v28 = *((id *)&v40 + 1);
        long long v19 = v35;
        goto LABEL_18;
      }
      if (v46 == 1)
      {
        long long v33 = v43;
        v34[0] = v44[0];
        *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
        v29[2] = v39;
        long long v30 = v40;
        long long v31 = v41;
        long long v32 = v42;
        v29[0] = v37;
        v29[1] = v38;
        sub_1C0A60978((uint64_t)&v45, (uint64_t)v35, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
        sub_1C01B3B54((uint64_t)v35);
        id v8 = (id)*((void *)&v30 + 1);
        id v18 = *((id *)&v30 + 1);
        long long v19 = v29;
LABEL_18:
        sub_1C01880A4((uint64_t)v19);
        goto LABEL_20;
      }
      sub_1C024A288((uint64_t)&v37);
      id v8 = 0;
LABEL_20:
      sub_1C024A288((uint64_t)&v47);
      return v8;
    case 0xBu:
      swift_release();
      return 0;
    case 0xCu:
      goto LABEL_13;
    case 0xEu:
      sub_1BFEEFC20(*((void *)v7 + 3), *((void *)v7 + 4));
LABEL_13:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    case 0x10u:
      long long v20 = *((_OWORD *)v7 + 13);
      v54[5] = *((_OWORD *)v7 + 12);
      v54[6] = v20;
      v54[7] = *((_OWORD *)v7 + 14);
      uint64_t v55 = *((void *)v7 + 30);
      long long v21 = *((_OWORD *)v7 + 9);
      v54[1] = *((_OWORD *)v7 + 8);
      v54[2] = v21;
      long long v22 = *((_OWORD *)v7 + 11);
      v54[3] = *((_OWORD *)v7 + 10);
      v54[4] = v22;
      long long v23 = *((_OWORD *)v7 + 5);
      long long v51 = *((_OWORD *)v7 + 4);
      long long v52 = v23;
      long long v24 = *((_OWORD *)v7 + 7);
      long long v53 = *((_OWORD *)v7 + 6);
      v54[0] = v24;
      long long v25 = *((_OWORD *)v7 + 1);
      long long v47 = *(_OWORD *)v7;
      long long v48 = v25;
      long long v26 = *((_OWORD *)v7 + 3);
      long long v49 = *((_OWORD *)v7 + 2);
      long long v50 = v26;
      sub_1C01F0AC8((uint64_t)&v47);
      return 0;
    case 0x11u:
      return v8;
    default:
      uint64_t v10 = *((void *)v7 + 5);
      unint64_t v9 = *((void *)v7 + 6);
      swift_bridgeObjectRelease();
      uint64_t v11 = v10;
LABEL_5:
      sub_1BFEEFC20(v11, v9);
      return 0;
  }
}

uint64_t FeedItem.feedWebEmbed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v2, (uint64_t)v6, type metadata accessor for FeedItem);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 5 >= 0xC && EnumCaseMultiPayload >= 4)
  {
    if (EnumCaseMultiPayload == 4)
    {
      sub_1BFEEFA80((uint64_t)v6, a1, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v11 = type metadata accessor for FeedWebEmbed();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
    }
  }
  else
  {
    sub_1BFEEB3A0((uint64_t)v6, type metadata accessor for FeedItem);
  }
  uint64_t v9 = type metadata accessor for FeedWebEmbed();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
}

uint64_t FeedItem.feedPuzzleStatistic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v2, (uint64_t)v6, type metadata accessor for FeedItem);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 0xF) {
    goto LABEL_2;
  }
  if (EnumCaseMultiPayload == 15)
  {
    sub_1BFEEFA80((uint64_t)v6, a1, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    uint64_t v10 = type metadata accessor for FeedPuzzleStatistic();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  if (EnumCaseMultiPayload == 16) {
LABEL_2:
  }
    sub_1BFEEB3A0((uint64_t)v6, type metadata accessor for FeedItem);
  uint64_t v8 = type metadata accessor for FeedPuzzleStatistic();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
}

uint64_t sub_1C0A62840()
{
  uint64_t v0 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v35 = (uint64_t)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v34 = (uint64_t)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEEF8E8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEF8E8(0, &qword_1EB890D98, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, v4);
  MEMORY[0x1F4188790](v11 - 8);
  long long v13 = (char *)&v33 - v12;
  uint64_t v14 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v33 - v18;
  MEMORY[0x1F4188790](v20);
  long long v22 = (char *)&v33 - v21;
  MEMORY[0x1F4188790](v23);
  long long v25 = (char *)&v33 - v24;
  FeedItem.feedPuzzleStatistic.getter((uint64_t)v13);
  uint64_t v26 = type metadata accessor for FeedPuzzleStatistic();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v13, 1, v26) == 1)
  {
    sub_1BFEDD9AC((uint64_t)v13, &qword_1EB890D98, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
    return 0;
  }
  else
  {
    sub_1BFEEB0CC((uint64_t)&v13[*(int *)(v26 + 32)], (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1BFEEB3A0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    sub_1BFEEB0CC((uint64_t)&v10[*(int *)(v8 + 20)], (uint64_t)v22, type metadata accessor for PuzzleStatisticCategory);
    sub_1BFEEB3A0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1BFEEFA80((uint64_t)v22, (uint64_t)v25, type metadata accessor for PuzzleStatisticCategory);
    sub_1BFEEB0CC((uint64_t)v25, (uint64_t)v19, type metadata accessor for PuzzleStatisticCategory);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1C0A60978((uint64_t)v19, (uint64_t)v7, (uint64_t)&qword_1EB884BF0, (uint64_t)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEEF8E8);
      sub_1C0A6337C(&qword_1EA1A2E88, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v37 = sub_1C151FD9C();
      uint64_t v27 = sub_1C152088C();
      sub_1BFEDD9AC((uint64_t)v7, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v28 = (uint64_t)v25;
    }
    else
    {
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_1BFEEB0CC((uint64_t)v25, (uint64_t)v16, type metadata accessor for PuzzleStatisticCategory);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) >= 2)
      {
        if (EnumCaseMultiPayload)
        {
          uint64_t v30 = v35;
          sub_1BFEEFA80((uint64_t)v16, v35, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          PuzzleStatisticValue.primaryValue.getter();
          long long v31 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        }
        else
        {
          uint64_t v30 = v34;
          sub_1BFEEFA80((uint64_t)v16, v34, type metadata accessor for PuzzleStatisticValue);
          PuzzleStatisticValue.primaryValue.getter();
          long long v31 = type metadata accessor for PuzzleStatisticValue;
        }
        sub_1BFEEB3A0(v30, v31);
      }
      else
      {
        sub_1BFEEB3A0((uint64_t)v16, type metadata accessor for PuzzleStatisticCategory);
      }
      sub_1C151EF4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v27 = v37;
      sub_1BFEEB3A0((uint64_t)v25, type metadata accessor for PuzzleStatisticCategory);
      uint64_t v28 = (uint64_t)v19;
    }
    sub_1BFEEB3A0(v28, type metadata accessor for PuzzleStatisticCategory);
  }
  return v27;
}

unint64_t static FeedItem.LikeState.state(from:)@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 3)
  {
    uint64_t result = sub_1C152040C();
    __break(1u);
  }
  else
  {
    *a2 = 0x10002u >> (8 * result);
  }
  return result;
}

uint64_t FeedItem.SavedState.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedItem.AccessLevel.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C0A62F64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 232);
  unint64_t v3 = *(void *)(v1 + 240);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t sub_1C0A62F70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = *(void *)(v1 + 80);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t sub_1C0A62F80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

double sub_1C0A62F8C@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C158A200;
  return result;
}

uint64_t sub_1C0A62F9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  unint64_t v3 = *(void *)(v1 + 128);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

double sub_1C0A62FAC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C158A1E0;
  return result;
}

uint64_t sub_1C0A62FBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_1BFF7FF04(v4, v5);
}

uint64_t sub_1C0A62FD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  unint64_t v3 = *(void *)(v1 + 48);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t _s8NewsFeed0B4ItemO4KindO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_42;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_42;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16) {
        goto LABEL_42;
      }
      char v6 = 1;
      unint64_t v3 = 16;
      break;
    default:
      if (v5 < 0x11)
      {
LABEL_42:
        char v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        char v6 = 1;
      }
      else
      {
        char v6 = sub_1C1520A9C();
      }
      sub_1BFF7FF04(v4, v5);
      sub_1BFF7FF04(v2, v3);
      break;
  }
  sub_1BFEEFC20(v2, v3);
  sub_1BFEEFC20(v4, v5);
  return v6 & 1;
}

uint64_t sub_1C0A63244()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A63294()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

unint64_t sub_1C0A63304(unint64_t result)
{
  if (result != 2) {
    return sub_1C0A63314(result);
  }
  return result;
}

unint64_t sub_1C0A63314(unint64_t result)
{
  if (result >= 2) {
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1C0A63328()
{
  unint64_t result = qword_1EB870450;
  if (!qword_1EB870450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870450);
  }
  return result;
}

uint64_t sub_1C0A6337C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0A633C8()
{
  unint64_t result = qword_1EA1A2E50;
  if (!qword_1EA1A2E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E50);
  }
  return result;
}

unint64_t sub_1C0A63420()
{
  unint64_t result = qword_1EA1A2E58;
  if (!qword_1EA1A2E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E58);
  }
  return result;
}

unint64_t sub_1C0A63478()
{
  unint64_t result = qword_1EA1A2E60;
  if (!qword_1EA1A2E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E60);
  }
  return result;
}

unint64_t sub_1C0A634D0()
{
  unint64_t result = qword_1EA1A2E68;
  if (!qword_1EA1A2E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E68);
  }
  return result;
}

unint64_t sub_1C0A63528()
{
  unint64_t result = qword_1EA1A2E70;
  if (!qword_1EA1A2E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E70);
  }
  return result;
}

unint64_t sub_1C0A63580()
{
  unint64_t result = qword_1EA1A2E78;
  if (!qword_1EA1A2E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E78);
  }
  return result;
}

unint64_t sub_1C0A635D8()
{
  unint64_t result = qword_1EA1A2E80;
  if (!qword_1EA1A2E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2E80);
  }
  return result;
}

uint64_t dispatch thunk of FeedItemType.traits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedItemType.layoutDirection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemType.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedItemType.visibility.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedItemType.additionalFormatFeedItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void *initializeBufferWithCopyOfBuffer for FeedItem(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v9 = a2 + 5;
        unint64_t v10 = a2[6];
        swift_bridgeObjectRetain();
        if (v10 >= 0x11)
        {
          a1[5] = *v9;
          a1[6] = v10;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 5) = *(_OWORD *)v9;
        }
        goto LABEL_100;
      case 1u:
        uint64_t v50 = a2[1];
        *a1 = *a2;
        a1[1] = v50;
        uint64_t v51 = a2[3];
        a1[2] = a2[2];
        a1[3] = v51;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v52 = a2[6];
        a1[5] = a2[5];
        a1[6] = v52;
        uint64_t v53 = a2[8];
        a1[7] = a2[7];
        a1[8] = v53;
        long long v54 = a2 + 9;
        unint64_t v55 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >= 0x11)
        {
          a1[9] = *v54;
          a1[10] = v55;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 9) = *(_OWORD *)v54;
        }
        goto LABEL_100;
      case 2u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v15 = v14[5];
        long long v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_1C151DBAC();
        long long v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        *(void *)((char *)a1 + v14[6]) = *(void *)((char *)a2 + v14[6]);
        uint64_t v20 = v14[7];
        uint64_t v21 = (char *)a1 + v20;
        long long v22 = (char *)a2 + v20;
        *(void *)uint64_t v21 = *(void *)v22;
        v21[8] = v22[8];
        uint64_t v23 = v14[8];
        uint64_t v24 = (char *)a1 + v23;
        long long v25 = (char *)a2 + v23;
        unint64_t v26 = *((void *)v25 + 1);
        if (v26 >= 0x11) {
          goto LABEL_40;
        }
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        goto LABEL_100;
      case 3u:
        uint64_t v56 = a2[1];
        *a1 = *a2;
        a1[1] = v56;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v57 = a2[5];
        a1[4] = a2[4];
        a1[5] = v57;
        a1[6] = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        v384 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v58 = v384[10];
        long long v59 = (char *)a1 + v58;
        long long v60 = (char *)a2 + v58;
        *long long v59 = *((unsigned char *)a2 + v58);
        v59[1] = *((unsigned char *)a2 + v58 + 1);
        long long v61 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v62 = v61[6];
        __dst = &v59[v62];
        long long v63 = &v60[v62];
        long long v64 = (int *)type metadata accessor for SharedItem();
        uint64_t v380 = *((void *)v64 - 1);
        uint64_t v65 = *(unsigned int (**)(char *, uint64_t, int *))(v380 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v65(v63, 1, v64))
        {
          uint64_t v66 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v63, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          uint64_t v185 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(__dst, v63, v185);
          __dst[v64[5]] = v63[v64[5]];
          uint64_t v186 = v64[6];
          uint64_t v187 = *(void **)&v63[v186];
          *(void *)&__dst[v186] = v187;
          uint64_t v188 = v64[7];
          v389 = &v63[v188];
          v393 = &__dst[v188];
          uint64_t v189 = sub_1C1515FDC();
          v379 = *(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16);
          id v190 = v187;
          v379(v393, v389, v189);
          (*(void (**)(char *, void, uint64_t, int *))(v380 + 56))(__dst, 0, 1, v64);
        }
        v59[v61[7]] = v60[v61[7]];
        v59[v61[8]] = v60[v61[8]];
        v59[v61[9]] = v60[v61[9]];
        v59[v61[10]] = v60[v61[10]];
        uint64_t v191 = v384[11];
        v192 = (char *)a1 + v191;
        uint64_t v193 = (char *)a2 + v191;
        uint64_t v194 = sub_1C151D2DC();
        uint64_t v195 = *(void *)(v194 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v193, v194);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
        }
        uint64_t v203 = v384[12];
        id v204 = (void *)((char *)a1 + v203);
        v205 = (void *)((char *)a2 + v203);
        unint64_t v206 = v205[1];
        if (v206 >= 0x11)
        {
          *id v204 = *v205;
          v204[1] = v206;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)id v204 = *(_OWORD *)v205;
        }
        uint64_t v207 = v384[13];
        unint64_t v208 = *(void *)((char *)a2 + v207);
        if (v208 >= 2)
        {
          if (v208 == 2)
          {
            *(void *)((char *)a1 + v207) = 2;
          }
          else
          {
            *(void *)((char *)a1 + v207) = v208;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)a1 + v207) = v208;
        }
        uint64_t v247 = v384[14];
        v248 = *(void **)((char *)a2 + v247);
        *(void *)((char *)a1 + v247) = v248;
        id v249 = v248;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        uint64_t v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v28 = a2 + 3;
        unint64_t v29 = a2[4];
        if (v29 >= 0x11)
        {
          a1[3] = *v28;
          a1[4] = v29;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)v28;
        }
        uint64_t v117 = a2[6];
        a1[5] = a2[5];
        a1[6] = v117;
        BOOL v118 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v119 = v118[8];
        uint64_t v120 = (char *)a1 + v119;
        v391 = (char *)a2 + v119;
        uint64_t v121 = sub_1C1515FDC();
        uint64_t v122 = *(void *)(v121 - 8);
        uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
        swift_bridgeObjectRetain();
        v123(v120, v391, v121);
        uint64_t v124 = v118[9];
        uint64_t v125 = (char *)a1 + v124;
        uint64_t v126 = (char *)a2 + v124;
        v388 = (void *)v121;
        __dsta = (void (*)(char *, char *, void *))v123;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))((char *)a2 + v124, 1, v121))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          v123(v125, v126, v121);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v125, 0, 1, v121);
        }
        *(void *)((char *)a1 + v118[10]) = *(void *)((char *)a2 + v118[10]);
        *(void *)((char *)a1 + v118[11]) = *(void *)((char *)a2 + v118[11]);
        v392 = v118;
        uint64_t v159 = v118[12];
        uint64_t v160 = (void *)((char *)a1 + v159);
        uint64_t v161 = (void *)((char *)a2 + v159);
        uint64_t v162 = type metadata accessor for FeedHeadline(0);
        uint64_t v163 = *(void *)(v162 - 8);
        uint64_t v164 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v163 + 48);
        swift_retain();
        swift_retain();
        if (v164(v161, 1, v162))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
          memcpy(v160, v161, *(void *)(*(void *)(v165 - 8) + 64));
          v166 = v392;
        }
        else
        {
          uint64_t v377 = v163;
          uint64_t v172 = v161[1];
          *uint64_t v160 = *v161;
          v160[1] = v172;
          v160[2] = v161[2];
          *((unsigned char *)v160 + 24) = *((unsigned char *)v161 + 24);
          uint64_t v173 = v161[5];
          uint64_t v174 = v161;
          v160[4] = v161[4];
          v160[5] = v173;
          v160[6] = v161[6];
          *((unsigned char *)v160 + 56) = *((unsigned char *)v161 + 56);
          v378 = (int *)v162;
          v381 = v160;
          uint64_t v175 = *(int *)(v162 + 40);
          uint64_t v176 = (char *)v160 + v175;
          v177 = (char *)v161 + v175;
          *uint64_t v176 = *((unsigned char *)v161 + v175);
          v176[1] = *((unsigned char *)v161 + v175 + 1);
          v376 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v178 = v376[6];
          v179 = &v176[v178];
          v180 = &v177[v178];
          v181 = (int *)type metadata accessor for SharedItem();
          uint64_t v375 = *((void *)v181 - 1);
          uint64_t v182 = *(unsigned int (**)(char *, uint64_t, int *))(v375 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v182(v180, 1, v181))
          {
            uint64_t v183 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v179, v180, *(void *)(*(void *)(v183 - 8) + 64));
          }
          else
          {
            uint64_t v273 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v179, v180, v273);
            v179[v181[5]] = v180[v181[5]];
            uint64_t v274 = v181[6];
            v275 = *(void **)&v180[v274];
            *(void *)&v179[v274] = v275;
            uint64_t v276 = v181[7];
            v277 = &v179[v276];
            v278 = &v180[v276];
            id v279 = v275;
            __dsta(v277, v278, v388);
            (*(void (**)(char *, void, uint64_t, int *))(v375 + 56))(v179, 0, 1, v181);
          }
          v176[v376[7]] = v177[v376[7]];
          v176[v376[8]] = v177[v376[8]];
          v176[v376[9]] = v177[v376[9]];
          v176[v376[10]] = v177[v376[10]];
          uint64_t v280 = v378[11];
          v281 = (char *)v381 + v280;
          v282 = (char *)v174 + v280;
          uint64_t v283 = sub_1C151D2DC();
          uint64_t v284 = *(void *)(v283 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
          {
            sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v281, v282, *(void *)(*(void *)(v285 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v281, v282, v283);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
          }
          v166 = v392;
          uint64_t v286 = v378[12];
          v287 = (void *)((char *)v381 + v286);
          v288 = (void *)((char *)v174 + v286);
          unint64_t v289 = v288[1];
          if (v289 >= 0x11)
          {
            void *v287 = *v288;
            v287[1] = v289;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v287 = *(_OWORD *)v288;
          }
          uint64_t v290 = v378[13];
          unint64_t v291 = *(void *)((char *)v174 + v290);
          if (v291 >= 2)
          {
            if (v291 == 2)
            {
              *(void *)((char *)v381 + v290) = 2;
            }
            else
            {
              *(void *)((char *)v381 + v290) = v291;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v381 + v290) = v291;
          }
          uint64_t v314 = v378[14];
          v315 = *(void **)((char *)v174 + v314);
          *(void *)((char *)v381 + v314) = v315;
          v316 = *(void (**)(void *, void, uint64_t, int *))(v377 + 56);
          id v317 = v315;
          v316(v381, 0, 1, v378);
        }
        uint64_t v318 = v166[13];
        v319 = (void *)((char *)a1 + v318);
        v320 = (void *)((char *)a2 + v318);
        uint64_t v321 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v322 = *(void *)(v321 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v322 + 48))(v320, 1, v321))
        {
          sub_1BFEEF8E8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v319, v320, *(void *)(*(void *)(v323 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v325 = *v320;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v326 = v320[1];
            void *v319 = v325;
            v319[1] = v326;
            uint64_t v327 = type metadata accessor for GenericDataVisualization();
            uint64_t v328 = *(int *)(v327 + 20);
            v329 = (char *)v319 + v328;
            v330 = (char *)v320 + v328;
            v166 = v392;
            swift_bridgeObjectRetain();
            __dsta(v329, v330, v388);
            *(void *)((char *)v319 + *(int *)(v327 + 24)) = *(uint64_t *)((char *)v320 + *(int *)(v327 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            void *v319 = v325;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v322 + 56))(v319, 0, 1, v321);
        }
        *((unsigned char *)a1 + v166[14]) = *((unsigned char *)a2 + v166[14]);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        uint64_t v67 = (void *)*a2;
        uint64_t v68 = a2[1];
        *a1 = *a2;
        a1[1] = v68;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        long long v69 = (void *)a2[7];
        a1[6] = a2[6];
        a1[7] = v69;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v70 = a2[10];
        id v71 = v67;
        swift_bridgeObjectRetain();
        id v72 = v69;
        if (v70 == 1)
        {
          long long v73 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 11) = v73;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = v70;
          uint64_t v129 = a2[12];
          a1[11] = a2[11];
          a1[12] = v129;
          long long v131 = (void *)a2[13];
          uint64_t v130 = a2[14];
          a1[13] = v131;
          a1[14] = v130;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v132 = v131;
        }
        uint64_t v133 = a2 + 15;
        unint64_t v134 = a2[16];
        if (v134 >= 0x11)
        {
          a1[15] = *v133;
          a1[16] = v134;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v133;
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        int v74 = *((unsigned __int8 *)a2 + 281);
        if (v74 == 2)
        {
          uint64_t v215 = a2[1];
          *a1 = *a2;
          a1[1] = v215;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v216 = a2[7];
          a1[6] = a2[6];
          a1[7] = v216;
          uint64_t v217 = a2[9];
          a1[8] = a2[8];
          a1[9] = v217;
          uint64_t v218 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v218 != 1)
          {
            a1[10] = a2[10];
            a1[11] = v218;
            uint64_t v257 = a2[15];
            swift_bridgeObjectRetain();
            if (v257)
            {
              uint64_t v258 = a2[16];
              a1[15] = v257;
              a1[16] = v258;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v257 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v257);
              a1[17] = a2[17];
            }
            else
            {
              long long v350 = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 7) = v350;
              *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            }
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            goto LABEL_172;
          }
          v219 = a1 + 10;
          v220 = a2 + 10;
          long long v221 = *((_OWORD *)a2 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 8) = v221;
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        }
        else
        {
          if (v74 != 1)
          {
            v222 = (void *)*a2;
            uint64_t v223 = a2[1];
            *a1 = *a2;
            a1[1] = v223;
            a1[2] = a2[2];
            *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
            a1[4] = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            v224 = (void *)a2[7];
            a1[6] = a2[6];
            a1[7] = v224;
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v225 = a2[10];
            id v226 = v222;
            swift_bridgeObjectRetain();
            id v227 = v224;
            if (v225 == 1)
            {
              long long v228 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 11) = v228;
              *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              a1[9] = a2[9];
              a1[10] = v225;
              uint64_t v259 = a2[12];
              a1[11] = a2[11];
              a1[12] = v259;
              v261 = (void *)a2[13];
              uint64_t v260 = a2[14];
              a1[13] = v261;
              a1[14] = v260;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v262 = v261;
            }
            v263 = a2 + 15;
            unint64_t v264 = a2[16];
            if (v264 >= 0x11)
            {
              a1[15] = *v263;
              a1[16] = v264;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(_OWORD *)v263;
            }
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_172;
          }
          long long v75 = (void *)*a2;
          uint64_t v76 = a2[1];
          *a1 = *a2;
          a1[1] = v76;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v77 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v77;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v78 = a2[10];
          id v79 = v75;
          swift_bridgeObjectRetain();
          id v80 = v77;
          if (v78 == 1)
          {
            long long v81 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v81;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v78;
            uint64_t v251 = a2[12];
            a1[11] = a2[11];
            a1[12] = v251;
            v253 = (void *)a2[13];
            uint64_t v252 = a2[14];
            a1[13] = v253;
            a1[14] = v252;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v254 = v253;
          }
          v255 = a2 + 15;
          unint64_t v256 = a2[16];
          if (v256 >= 0x11)
          {
            a1[15] = *v255;
            a1[16] = v256;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v255;
          }
          v220 = a2 + 18;
          v265 = (void *)a2[18];
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          if (v265)
          {
            uint64_t v266 = a2[19];
            uint64_t v267 = a2[20];
            a1[18] = v265;
            a1[19] = v266;
            a1[20] = v267;
            *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
            a1[22] = a2[22];
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            v268 = (void *)a2[25];
            a1[24] = a2[24];
            a1[25] = v268;
            *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
            uint64_t v269 = a2[28];
            id v270 = v265;
            swift_bridgeObjectRetain();
            id v271 = v268;
            if (v269 == 1)
            {
              long long v272 = *(_OWORD *)(a2 + 29);
              *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
              *(_OWORD *)(a1 + 29) = v272;
              *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
            }
            else
            {
              a1[27] = a2[27];
              a1[28] = v269;
              uint64_t v296 = a2[30];
              a1[29] = a2[29];
              a1[30] = v296;
              v298 = (void *)a2[31];
              uint64_t v297 = a2[32];
              a1[31] = v298;
              a1[32] = v297;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v299 = v298;
            }
            v300 = a2 + 33;
            unint64_t v301 = a2[34];
            if (v301 >= 0x11)
            {
              a1[33] = *v300;
              a1[34] = v301;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 33) = *(_OWORD *)v300;
            }
            *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_172:
            *((unsigned char *)a1 + 281) = v74;
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          v219 = a1 + 18;
          long long v292 = *((_OWORD *)a2 + 16);
          *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
          *((_OWORD *)a1 + 16) = v292;
          *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
          long long v293 = *((_OWORD *)a2 + 12);
          *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
          *((_OWORD *)a1 + 12) = v293;
          long long v294 = *((_OWORD *)a2 + 14);
          *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
          *((_OWORD *)a1 + 14) = v294;
        }
        long long v295 = v220[1];
        _OWORD *v219 = *v220;
        v219[1] = v295;
        goto LABEL_172;
      case 7u:
        uint64_t v82 = a2[1];
        *a1 = *a2;
        a1[1] = v82;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v83 = a2[7];
        a1[6] = a2[6];
        a1[7] = v83;
        uint64_t v84 = a2[9];
        a1[8] = a2[8];
        a1[9] = v84;
        uint64_t v85 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v85 == 1)
        {
          long long v86 = *((_OWORD *)a2 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 8) = v86;
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          long long v87 = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 6) = v87;
        }
        else
        {
          a1[10] = a2[10];
          a1[11] = v85;
          uint64_t v135 = a2[15];
          swift_bridgeObjectRetain();
          if (v135)
          {
            uint64_t v136 = a2[16];
            a1[15] = v135;
            a1[16] = v136;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v135 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v135);
            a1[17] = a2[17];
          }
          else
          {
            long long v250 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v250;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        }
        goto LABEL_100;
      case 8u:
        uint64_t v88 = a2[1];
        *a1 = *a2;
        a1[1] = v88;
        uint64_t v89 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        long long v90 = (void *)((char *)a1 + v89);
        long long v91 = (char *)a2 + v89;
        uint64_t v92 = *(void *)((char *)a2 + v89 + 8);
        void *v90 = *(void *)((char *)a2 + v89);
        v90[1] = v92;
        uint64_t v93 = *(void *)((char *)a2 + v89 + 24);
        v90[2] = *(void *)((char *)a2 + v89 + 16);
        v90[3] = v93;
        uint64_t v94 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v95 = *(int *)(v94 + 24);
        v387 = (char *)v90 + v95;
        uint64_t v390 = v94;
        double v96 = &v91[v95];
        uint64_t v97 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v385 = *(void *)(v97 - 8);
        uint64_t v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v385 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v98(v96, 1, v97))
        {
          sub_1BFEEF8E8(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
          memcpy(v387, v96, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          uint64_t v197 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v387, v96, v197);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v385 + 56))(v387, 0, 1, v97);
        }
        *(void *)((char *)v90 + *(int *)(v390 + 28)) = *(void *)&v91[*(int *)(v390 + 28)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        uint64_t v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        uint64_t v31 = a2[3];
        a1[2] = a2[2];
        a1[3] = v31;
        uint64_t v32 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32)
        {
          uint64_t v33 = a2[8];
          a1[7] = v32;
          a1[8] = v33;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v32);
        }
        else
        {
          long long v154 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v154;
          a1[8] = a2[8];
        }
        v155 = a1 + 9;
        uint64_t v156 = a2 + 9;
        uint64_t v157 = a2[12];
        if (v157)
        {
          uint64_t v158 = a2[13];
          a1[12] = v157;
          a1[13] = v158;
          (**(void (***)(_OWORD *, _OWORD *))(v157 - 8))(v155, v156);
        }
        else
        {
          long long v167 = *(_OWORD *)(a2 + 11);
          _OWORD *v155 = *v156;
          *(_OWORD *)(a1 + 11) = v167;
          a1[13] = a2[13];
        }
        unint64_t v168 = a1 + 14;
        v169 = a2 + 14;
        uint64_t v170 = a2[17];
        if (v170)
        {
          uint64_t v171 = a2[18];
          a1[17] = v170;
          a1[18] = v171;
          (**(void (***)(_OWORD *, _OWORD *))(v170 - 8))(v168, v169);
        }
        else
        {
          long long v184 = *((_OWORD *)a2 + 8);
          *unint64_t v168 = *v169;
          *((_OWORD *)a1 + 8) = v184;
          a1[18] = a2[18];
        }
        goto LABEL_100;
      case 0xAu:
        uint64_t v100 = a2[1];
        *a1 = *a2;
        a1[1] = v100;
        unint64_t v101 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v102 = v101[5];
        unint64_t v103 = (char *)a1 + v102;
        v104 = (char *)a2 + v102;
        uint64_t v105 = sub_1C151959C();
        uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
        swift_bridgeObjectRetain();
        v106(v103, v104, v105);
        *(void *)((char *)a1 + v101[6]) = *(void *)((char *)a2 + v101[6]);
        uint64_t v107 = v101[7];
        uint64_t v108 = (char *)a1 + v107;
        uint64_t v109 = (char *)a2 + v107;
        *(void *)uint64_t v108 = *(void *)v109;
        v108[8] = v109[8];
        uint64_t v110 = v101[8];
        uint64_t v24 = (char *)a1 + v110;
        long long v25 = (char *)a2 + v110;
        unint64_t v26 = *((void *)v25 + 1);
        if (v26 >= 0x11)
        {
LABEL_40:
          *(void *)uint64_t v24 = *(void *)v25;
          *((void *)v24 + 1) = v26;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        }
        goto LABEL_100;
      case 0xBu:
        *a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xCu:
        uint64_t v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        uint64_t v35 = a2[3];
        a1[2] = a2[2];
        a1[3] = v35;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xDu:
        uint64_t v111 = a2[1];
        *a1 = *a2;
        a1[1] = v111;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v112 = a2 + 3;
        unint64_t v113 = a2[4];
        if (v113 >= 0x11)
        {
          a1[3] = *v112;
          a1[4] = v113;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)v112;
        }
        uint64_t v137 = a2[6];
        a1[5] = a2[5];
        a1[6] = v137;
        v138 = (void *)a2[8];
        a1[7] = a2[7];
        a1[8] = v138;
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        a1[10] = a2[10];
        uint64_t v139 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v140 = v138;
        swift_bridgeObjectRetain();
        if (v139)
        {
          uint64_t v141 = a2[15];
          a1[14] = v139;
          a1[15] = v141;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v139 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v139);
        }
        else
        {
          long long v198 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 13) = v198;
          a1[15] = a2[15];
        }
        v199 = a1 + 16;
        v200 = a2 + 16;
        uint64_t v201 = a2[19];
        if (v201)
        {
          uint64_t v202 = a2[20];
          a1[19] = v201;
          a1[20] = v202;
          (**(void (***)(_OWORD *, _OWORD *))(v201 - 8))(v199, v200);
        }
        else
        {
          long long v209 = *((_OWORD *)a2 + 9);
          _OWORD *v199 = *v200;
          *((_OWORD *)a1 + 9) = v209;
          a1[20] = a2[20];
        }
        v210 = a1 + 21;
        v211 = a2 + 21;
        uint64_t v212 = a2[24];
        if (v212)
        {
          uint64_t v213 = a2[25];
          a1[24] = v212;
          a1[25] = v213;
          (**(void (***)(_OWORD *, _OWORD *))(v212 - 8))(v210, v211);
        }
        else
        {
          long long v214 = *(_OWORD *)(a2 + 23);
          _OWORD *v210 = *v211;
          *(_OWORD *)(a1 + 23) = v214;
          a1[25] = a2[25];
        }
        goto LABEL_100;
      case 0xEu:
        uint64_t v36 = a2[1];
        *a1 = *a2;
        a1[1] = v36;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v37 = a2 + 3;
        unint64_t v38 = a2[4];
        if (v38 >= 0x11)
        {
          a1[3] = *v37;
          a1[4] = v38;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)v37;
        }
        uint64_t v128 = a2[6];
        a1[5] = a2[5];
        a1[6] = v128;
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xFu:
        uint64_t v114 = a2[1];
        *a1 = *a2;
        a1[1] = v114;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v115 = a2 + 3;
        unint64_t v116 = a2[4];
        if (v116 >= 0x11)
        {
          a1[3] = *v115;
          a1[4] = v116;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)v115;
        }
        break;
      case 0x10u:
        uint64_t v39 = a2[1];
        *a1 = *a2;
        a1[1] = v39;
        uint64_t v40 = a2[3];
        a1[2] = a2[2];
        a1[3] = v40;
        uint64_t v41 = a2[5];
        a1[4] = a2[4];
        a1[5] = v41;
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
        uint64_t v42 = a2[10];
        a1[9] = a2[9];
        a1[10] = v42;
        uint64_t v43 = a2[12];
        a1[11] = a2[11];
        a1[12] = v43;
        a1[13] = a2[13];
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        uint64_t v44 = a2[16];
        a1[15] = a2[15];
        a1[16] = v44;
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        uint64_t v45 = a2[19];
        a1[18] = a2[18];
        a1[19] = v45;
        uint64_t v46 = a2[21];
        a1[20] = a2[20];
        a1[21] = v46;
        *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
        a1[22] = a2[22];
        uint64_t v47 = a2[25];
        a1[24] = a2[24];
        a1[25] = v47;
        *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
        uint64_t v48 = a2[27];
        a1[26] = a2[26];
        a1[27] = v48;
        v386 = a2 + 29;
        unint64_t v49 = a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49 >= 0x11)
        {
          a1[29] = *v386;
          a1[30] = v49;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 29) = *(_OWORD *)v386;
        }
LABEL_100:
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
    uint64_t v142 = a2[6];
    a1[5] = a2[5];
    a1[6] = v142;
    uint64_t v143 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v144 = (char *)a1 + v143;
    uint64_t v145 = (char *)a2 + v143;
    *(void *)((char *)a1 + v143) = *(void *)((char *)a2 + v143);
    uint64_t v146 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    v147 = &v144[v146];
    uint64_t v148 = &v145[v146];
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v233 = type metadata accessor for PuzzleStatisticValue(0);
        int v234 = swift_getEnumCaseMultiPayload();
        if (v234 == 5)
        {
          uint64_t v235 = type metadata accessor for PuzzleStreak();
          uint64_t v236 = *(void *)(v235 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v148, 1, v235))
          {
LABEL_110:
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v147, v148, *(void *)(*(void *)(v237 - 8) + 64));
            goto LABEL_179;
          }
        }
        else
        {
          if (v234 != 4)
          {
            memcpy(v147, v148, *(void *)(*(void *)(v233 - 8) + 64));
            goto LABEL_180;
          }
          uint64_t v235 = type metadata accessor for PuzzleStreak();
          uint64_t v236 = *(void *)(v235 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v148, 1, v235)) {
            goto LABEL_110;
          }
        }
        uint64_t v358 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16))(v147, v148, v358);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v236 + 56))(v147, 0, 1, v235);
LABEL_179:
        swift_storeEnumTagMultiPayload();
LABEL_180:
        uint64_t v359 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v360 = *(int *)(v359 + 20);
        v361 = &v147[v360];
        v362 = &v148[v360];
        int v363 = swift_getEnumCaseMultiPayload();
        if (v363 == 5)
        {
          uint64_t v364 = type metadata accessor for PuzzleStreak();
          uint64_t v365 = *(void *)(v364 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v365 + 48))(v362, 1, v364))
          {
LABEL_185:
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v361, v362, *(void *)(*(void *)(v366 - 8) + 64));
LABEL_188:
            swift_storeEnumTagMultiPayload();
            goto LABEL_189;
          }
        }
        else
        {
          if (v363 != 4)
          {
            memcpy(v361, v362, *(void *)(*(void *)(v233 - 8) + 64));
LABEL_189:
            uint64_t v368 = *(int *)(v359 + 24);
            v369 = &v147[v368];
            v148 += v368;
            int v370 = swift_getEnumCaseMultiPayload();
            if (v370 == 5)
            {
              uint64_t v371 = type metadata accessor for PuzzleStreak();
              uint64_t v372 = *(void *)(v371 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v372 + 48))(v148, 1, v371))
              {
LABEL_194:
                sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v369, v148, *(void *)(*(void *)(v373 - 8) + 64));
                goto LABEL_198;
              }
              goto LABEL_197;
            }
            if (v370 == 4)
            {
              uint64_t v371 = type metadata accessor for PuzzleStreak();
              uint64_t v372 = *(void *)(v371 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v372 + 48))(v148, 1, v371)) {
                goto LABEL_194;
              }
LABEL_197:
              uint64_t v374 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 16))(v369, v148, v374);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v372 + 56))(v369, 0, 1, v371);
              goto LABEL_198;
            }
            size_t v232 = *(void *)(*(void *)(v233 - 8) + 64);
            v349 = v369;
LABEL_196:
            memcpy(v349, v148, v232);
LABEL_199:
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          uint64_t v364 = type metadata accessor for PuzzleStreak();
          uint64_t v365 = *(void *)(v364 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v365 + 48))(v362, 1, v364)) {
            goto LABEL_185;
          }
        }
        uint64_t v367 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 16))(v361, v362, v367);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v365 + 56))(v361, 0, 1, v364);
        goto LABEL_188;
      case 2u:
        v229 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v230 = *((void *)v229 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v230 + 48))(v148, 1, v229))
        {
          sub_1BFEEF8E8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v232 = *(void *)(*(void *)(v231 - 8) + 64);
          goto LABEL_167;
        }
        uint64_t v302 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(v147, v148, v302);
        v303 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v304 = v303[5];
        v305 = &v147[v304];
        v306 = &v148[v304];
        uint64_t v307 = *((void *)v306 + 1);
        *(void *)v305 = *(void *)v306;
        *((void *)v305 + 1) = v307;
        uint64_t v308 = v303[6];
        v309 = &v147[v308];
        v310 = &v148[v308];
        uint64_t v311 = *((void *)v310 + 1);
        *(void *)v309 = *(void *)v310;
        *((void *)v309 + 1) = v311;
        v312 = (uint64_t *)(v310 + 16);
        unint64_t v313 = *((void *)v310 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v313 >> 60 == 15)
        {
          *((_OWORD *)v309 + 1) = *(_OWORD *)v312;
        }
        else
        {
          uint64_t v351 = *v312;
          sub_1BFE95820(*v312, v313);
          *((void *)v309 + 2) = v351;
          *((void *)v309 + 3) = v313;
        }
        *(void *)&v147[v303[7]] = *(void *)&v148[v303[7]];
        *(void *)&v147[v303[8]] = *(void *)&v148[v303[8]];
        *(void *)&v147[v229[5]] = *(void *)&v148[v229[5]];
        *(void *)&v147[v229[6]] = *(void *)&v148[v229[6]];
        uint64_t v352 = v229[7];
        v353 = &v147[v352];
        v354 = &v148[v352];
        uint64_t v355 = *((void *)v354 + 1);
        *(void *)v353 = *(void *)v354;
        *((void *)v353 + 1) = v355;
        v356 = *(void (**)(char *, void, uint64_t, int *))(v230 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v356(v147, 0, 1, v229);
        goto LABEL_199;
      case 3u:
        uint64_t v238 = *((void *)v148 + 1);
        *(void *)v147 = *(void *)v148;
        *((void *)v147 + 1) = v238;
        v147[16] = v148[16];
        v239 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v240 = v239[6];
        v241 = &v147[v240];
        v242 = &v148[v240];
        uint64_t v243 = type metadata accessor for PuzzleStreak();
        uint64_t v244 = *(void *)(v243 - 8);
        v245 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v244 + 48);
        if (v245(v242, 1, v243))
        {
          sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v241, v242, *(void *)(*(void *)(v246 - 8) + 64));
        }
        else
        {
          uint64_t v331 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16))(v241, v242, v331);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v241, 0, 1, v243);
        }
        uint64_t v332 = v239[7];
        v333 = &v147[v332];
        v334 = &v148[v332];
        if (v245(&v148[v332], 1, v243))
        {
          sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v333, v334, *(void *)(*(void *)(v335 - 8) + 64));
        }
        else
        {
          uint64_t v336 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 16))(v333, v334, v336);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v333, 0, 1, v243);
        }
        uint64_t v337 = v239[8];
        v338 = &v147[v337];
        v339 = &v148[v337];
        long long v340 = *((_OWORD *)v339 + 1);
        *(_OWORD *)v338 = *(_OWORD *)v339;
        *((_OWORD *)v338 + 1) = v340;
        *(_OWORD *)(v338 + 25) = *(_OWORD *)(v339 + 25);
        uint64_t v341 = v239[9];
        v342 = &v147[v341];
        v343 = &v148[v341];
        *(_OWORD *)(v342 + 25) = *(_OWORD *)(v343 + 25);
        long long v344 = *((_OWORD *)v343 + 1);
        *(_OWORD *)v342 = *(_OWORD *)v343;
        *((_OWORD *)v342 + 1) = v344;
        uint64_t v345 = v239[10];
        v346 = &v147[v345];
        v347 = &v148[v345];
        long long v348 = *((_OWORD *)v347 + 1);
        *(_OWORD *)v346 = *(_OWORD *)v347;
        *((_OWORD *)v346 + 1) = v348;
        *(_OWORD *)(v346 + 25) = *(_OWORD *)(v347 + 25);
        goto LABEL_199;
      default:
        uint64_t v149 = type metadata accessor for PuzzleStatisticValue(0);
        int v150 = swift_getEnumCaseMultiPayload();
        if (v150 == 5)
        {
          uint64_t v151 = type metadata accessor for PuzzleStreak();
          uint64_t v152 = *(void *)(v151 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v148, 1, v151)) {
            goto LABEL_64;
          }
        }
        else
        {
          if (v150 != 4)
          {
            size_t v232 = *(void *)(*(void *)(v149 - 8) + 64);
LABEL_167:
            v349 = v147;
            goto LABEL_196;
          }
          uint64_t v151 = type metadata accessor for PuzzleStreak();
          uint64_t v152 = *(void *)(v151 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v148, 1, v151))
          {
LABEL_64:
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v147, v148, *(void *)(*(void *)(v153 - 8) + 64));
            goto LABEL_198;
          }
        }
        uint64_t v357 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 16))(v147, v148, v357);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v152 + 56))(v147, 0, 1, v151);
LABEL_198:
        swift_storeEnumTagMultiPayload();
        goto LABEL_199;
    }
  }
  uint64_t v11 = *a2;
  *a1 = *a2;
  a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void *assignWithCopy for FeedItem(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFEEB3A0((uint64_t)a1, type metadata accessor for FeedItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v6 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v6;
        unint64_t v7 = a2[6];
        swift_bridgeObjectRetain();
        if (v7 >= 0x11)
        {
          a1[5] = a2[5];
          a1[6] = a2[6];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        }
        goto LABEL_194;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v27 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v27;
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        unint64_t v28 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28 >= 0x11)
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        }
        goto LABEL_194;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v8 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v9 = v8[5];
        unint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1C151DBAC();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
        uint64_t v14 = v8[7];
        uint64_t v15 = (char *)a1 + v14;
        long long v16 = (char *)a2 + v14;
        char v17 = v16[8];
        *(void *)uint64_t v15 = *(void *)v16;
        v15[8] = v17;
        uint64_t v18 = v8[8];
        long long v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        if (*((void *)v20 + 1) >= 0x11uLL) {
          goto LABEL_38;
        }
        *(_OWORD *)long long v19 = *(_OWORD *)v20;
        goto LABEL_194;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v29 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v29;
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v337 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v30 = v337[10];
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        *uint64_t v31 = *((unsigned char *)a2 + v30);
        v31[1] = *((unsigned char *)a2 + v30 + 1);
        uint64_t v33 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v34 = *(int *)(v33 + 24);
        __dst = &v31[v34];
        v334 = (int *)v33;
        uint64_t v35 = &v32[v34];
        uint64_t v36 = (int *)type metadata accessor for SharedItem();
        uint64_t v330 = *((void *)v36 - 1);
        uint64_t v37 = *(unsigned int (**)(char *, uint64_t, int *))(v330 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v37(v35, 1, v36))
        {
          uint64_t v38 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v142 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(__dst, v35, v142);
          __dst[v36[5]] = v35[v36[5]];
          uint64_t v143 = v36[6];
          uint64_t v144 = *(void **)&v35[v143];
          *(void *)&__dst[v143] = v144;
          uint64_t v145 = v36[7];
          v342 = &__dst[v145];
          v329 = &v35[v145];
          uint64_t v146 = sub_1C1515FDC();
          v147 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
          id v148 = v144;
          v147(v342, v329, v146);
          (*(void (**)(char *, void, uint64_t, int *))(v330 + 56))(__dst, 0, 1, v36);
        }
        v31[v334[7]] = v32[v334[7]];
        v31[v334[8]] = v32[v334[8]];
        v31[v334[9]] = v32[v334[9]];
        v31[v334[10]] = v32[v334[10]];
        uint64_t v149 = v337[11];
        int v150 = (char *)a1 + v149;
        uint64_t v151 = (char *)a2 + v149;
        uint64_t v152 = sub_1C151D2DC();
        uint64_t v153 = *(void *)(v152 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v151, 1, v152))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v150, v151, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v150, v151, v152);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v150, 0, 1, v152);
        }
        uint64_t v161 = v337[12];
        uint64_t v162 = (void *)((char *)a1 + v161);
        uint64_t v163 = (void *)((char *)a2 + v161);
        if (v163[1] >= 0x11uLL)
        {
          *uint64_t v162 = *v163;
          v162[1] = v163[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
        }
        uint64_t v164 = v337[13];
        unint64_t v165 = *(void *)((char *)a2 + v164);
        if (v165 >= 2)
        {
          if (v165 == 2)
          {
            *(void *)((char *)a1 + v164) = 2;
          }
          else
          {
            *(void *)((char *)a1 + v164) = v165;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)a1 + v164) = v165;
        }
        uint64_t v204 = v337[14];
        v205 = *(void **)((char *)a2 + v204);
        *(void *)((char *)a1 + v204) = v205;
        id v206 = v205;
        goto LABEL_194;
      case 4u:
        *a1 = *a2;
        uint64_t v21 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v21;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v83 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v84 = v83[8];
        uint64_t v85 = (char *)a1 + v84;
        long long v86 = (char *)a2 + v84;
        uint64_t v87 = sub_1C1515FDC();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
        swift_bridgeObjectRetain();
        v89(v85, v86, v87);
        uint64_t v90 = v83[9];
        long long v91 = (char *)a1 + v90;
        uint64_t v92 = (char *)a2 + v90;
        v339 = (void *)v87;
        __dsta = (void (*)(char *, char *, void *))v89;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))((char *)a2 + v90, 1, v87))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          v89(v91, v92, v87);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v91, 0, 1, v87);
        }
        *(void *)((char *)a1 + v83[10]) = *(void *)((char *)a2 + v83[10]);
        *(void *)((char *)a1 + v83[11]) = *(void *)((char *)a2 + v83[11]);
        uint64_t v117 = v83[12];
        BOOL v118 = (void *)((char *)a1 + v117);
        uint64_t v341 = v83;
        uint64_t v119 = (void *)((char *)a2 + v117);
        uint64_t v120 = type metadata accessor for FeedHeadline(0);
        uint64_t v121 = *(void *)(v120 - 8);
        uint64_t v122 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v121 + 48);
        swift_retain();
        swift_retain();
        if (v122(v119, 1, v120))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
          memcpy(v118, v119, *(void *)(*(void *)(v123 - 8) + 64));
          uint64_t v124 = v341;
        }
        else
        {
          *BOOL v118 = *v119;
          v118[1] = v119[1];
          uint64_t v130 = v119[2];
          *((unsigned char *)v118 + 24) = *((unsigned char *)v119 + 24);
          v118[2] = v130;
          v118[4] = v119[4];
          v118[5] = v119[5];
          v118[6] = v119[6];
          *((unsigned char *)v118 + 56) = *((unsigned char *)v119 + 56);
          uint64_t v331 = (int *)v120;
          uint64_t v131 = *(int *)(v120 + 40);
          uint64_t v327 = v118;
          id v132 = (char *)v118 + v131;
          uint64_t v133 = (char *)v119 + v131;
          *id v132 = *((unsigned char *)v119 + v131);
          v132[1] = *((unsigned char *)v119 + v131 + 1);
          uint64_t v326 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v134 = v326[6];
          uint64_t v328 = &v132[v134];
          uint64_t v135 = &v133[v134];
          uint64_t v136 = (int *)type metadata accessor for SharedItem();
          uint64_t v325 = *((void *)v136 - 1);
          uint64_t v137 = *(unsigned int (**)(char *, uint64_t, int *))(v325 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          v138 = v119;
          if (v137(v135, 1, v136))
          {
            uint64_t v139 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v328, v135, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            uint64_t v224 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v328, v135, v224);
            v328[v136[5]] = v135[v136[5]];
            uint64_t v225 = v136[6];
            id v226 = *(void **)&v135[v225];
            *(void *)&v328[v225] = v226;
            uint64_t v227 = v136[7];
            long long v228 = &v328[v227];
            v229 = &v135[v227];
            id v230 = v226;
            __dsta(v228, v229, v339);
            (*(void (**)(char *, void, uint64_t, int *))(v325 + 56))(v328, 0, 1, v136);
          }
          v132[v326[7]] = v133[v326[7]];
          v132[v326[8]] = v133[v326[8]];
          v132[v326[9]] = v133[v326[9]];
          v132[v326[10]] = v133[v326[10]];
          uint64_t v231 = v331[11];
          size_t v232 = (char *)v327 + v231;
          uint64_t v233 = (char *)v119 + v231;
          uint64_t v234 = sub_1C151D2DC();
          uint64_t v235 = *(void *)(v234 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v235 + 48))(v233, 1, v234))
          {
            sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v232, v233, *(void *)(*(void *)(v236 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v232, v233, v234);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56))(v232, 0, 1, v234);
          }
          uint64_t v237 = v331[12];
          uint64_t v238 = (void *)((char *)v327 + v237);
          v239 = (void *)((char *)v138 + v237);
          uint64_t v124 = v341;
          if (v239[1] >= 0x11uLL)
          {
            *uint64_t v238 = *v239;
            v238[1] = v239[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v238 = *(_OWORD *)v239;
          }
          uint64_t v240 = v331[13];
          unint64_t v241 = *(void *)((char *)v138 + v240);
          if (v241 >= 2)
          {
            if (v241 == 2)
            {
              *(void *)((char *)v327 + v240) = 2;
            }
            else
            {
              *(void *)((char *)v327 + v240) = v241;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v327 + v240) = v241;
          }
          uint64_t v260 = v331[14];
          v261 = *(void **)((char *)v138 + v260);
          *(void *)((char *)v327 + v260) = v261;
          id v262 = *(void (**)(void *, void, uint64_t, int *))(v121 + 56);
          id v263 = v261;
          v262(v327, 0, 1, v331);
        }
        uint64_t v264 = v124[13];
        v265 = (void *)((char *)a1 + v264);
        uint64_t v266 = (void *)((char *)a2 + v264);
        uint64_t v267 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v268 = *(void *)(v267 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v268 + 48))(v266, 1, v267))
        {
          sub_1BFEEF8E8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v265, v266, *(void *)(*(void *)(v269 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          void *v265 = *v266;
          if (EnumCaseMultiPayload == 1)
          {
            v265[1] = v266[1];
            uint64_t v271 = type metadata accessor for GenericDataVisualization();
            uint64_t v272 = *(int *)(v271 + 20);
            uint64_t v273 = (char *)v265 + v272;
            uint64_t v274 = (char *)v266 + v272;
            swift_bridgeObjectRetain();
            v275 = v274;
            uint64_t v124 = v341;
            __dsta(v273, v275, v339);
            *(void *)((char *)v265 + *(int *)(v271 + 24)) = *(void *)((char *)v266 + *(int *)(v271 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v268 + 56))(v265, 0, 1, v267);
        }
        *((unsigned char *)a1 + v124[14]) = *((unsigned char *)a2 + v124[14]);
        goto LABEL_194;
      case 5u:
        uint64_t v39 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
        uint64_t v40 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v40;
        a1[6] = a2[6];
        uint64_t v41 = (void *)a2[7];
        a1[7] = v41;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v42 = a2[10];
        id v43 = v39;
        swift_bridgeObjectRetain();
        id v44 = v41;
        if (v42 == 1)
        {
          long long v45 = *(_OWORD *)(a2 + 9);
          long long v46 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 13) = v46;
          *(_OWORD *)(a1 + 9) = v45;
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          a1[11] = a2[11];
          a1[12] = a2[12];
          uint64_t v94 = (void *)a2[13];
          a1[13] = v94;
          a1[14] = a2[14];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v95 = v94;
        }
        if (a2[16] >= 0x11uLL)
        {
          a1[15] = a2[15];
          a1[16] = a2[16];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_194;
      case 6u:
        int v47 = *((unsigned __int8 *)a2 + 281);
        if (v47 == 2)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v173 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v173;
          a1[6] = a2[6];
          a1[7] = a2[7];
          a1[8] = a2[8];
          a1[9] = a2[9];
          uint64_t v174 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v174 == 1)
          {
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            long long v175 = *((_OWORD *)a2 + 6);
            long long v176 = *((_OWORD *)a2 + 7);
            long long v177 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v176;
            *((_OWORD *)a1 + 8) = v177;
            *((_OWORD *)a1 + 6) = v175;
          }
          else
          {
            a1[10] = a2[10];
            a1[11] = a2[11];
            uint64_t v212 = a2[15];
            swift_bridgeObjectRetain();
            if (v212)
            {
              a1[15] = v212;
              a1[16] = a2[16];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v212 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v212);
              char v213 = *((unsigned char *)a2 + 144);
              a1[17] = a2[17];
              *((unsigned char *)a1 + 144) = v213;
            }
            else
            {
              long long v298 = *((_OWORD *)a2 + 6);
              long long v299 = *((_OWORD *)a2 + 7);
              long long v300 = *((_OWORD *)a2 + 8);
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              *((_OWORD *)a1 + 7) = v299;
              *((_OWORD *)a1 + 8) = v300;
              *((_OWORD *)a1 + 6) = v298;
            }
          }
        }
        else if (v47 == 1)
        {
          uint64_t v48 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v49 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v49;
          a1[6] = a2[6];
          uint64_t v50 = (void *)a2[7];
          a1[7] = v50;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v51 = a2[10];
          id v52 = v48;
          swift_bridgeObjectRetain();
          id v53 = v50;
          if (v51 == 1)
          {
            long long v54 = *(_OWORD *)(a2 + 9);
            long long v55 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v55;
            *(_OWORD *)(a1 + 9) = v54;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            v210 = (void *)a2[13];
            a1[13] = v210;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v211 = v210;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          uint64_t v216 = (void *)a2[18];
          if (v216)
          {
            a1[18] = v216;
            a1[19] = a2[19];
            a1[20] = a2[20];
            *((unsigned char *)a1 + 168) = *((unsigned char *)a2 + 168);
            *((unsigned char *)a1 + 169) = *((unsigned char *)a2 + 169);
            uint64_t v217 = a2[22];
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            a1[22] = v217;
            a1[24] = a2[24];
            uint64_t v218 = (void *)a2[25];
            a1[25] = v218;
            *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
            uint64_t v219 = a2[28];
            id v220 = v216;
            swift_bridgeObjectRetain();
            id v221 = v218;
            if (v219 == 1)
            {
              long long v222 = *(_OWORD *)(a2 + 27);
              long long v223 = *(_OWORD *)(a2 + 31);
              *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
              *(_OWORD *)(a1 + 31) = v223;
              *(_OWORD *)(a1 + 27) = v222;
            }
            else
            {
              a1[27] = a2[27];
              a1[28] = a2[28];
              a1[29] = a2[29];
              a1[30] = a2[30];
              v248 = (void *)a2[31];
              a1[31] = v248;
              a1[32] = a2[32];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v249 = v248;
            }
            if (a2[34] >= 0x11uLL)
            {
              a1[33] = a2[33];
              a1[34] = a2[34];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
            }
            *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
          }
          else
          {
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            long long v242 = *((_OWORD *)a2 + 10);
            long long v243 = *((_OWORD *)a2 + 11);
            long long v244 = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 13) = v244;
            *((_OWORD *)a1 + 10) = v242;
            *((_OWORD *)a1 + 11) = v243;
            long long v245 = *((_OWORD *)a2 + 14);
            long long v246 = *((_OWORD *)a2 + 15);
            long long v247 = *((_OWORD *)a2 + 16);
            *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            *((_OWORD *)a1 + 15) = v246;
            *((_OWORD *)a1 + 16) = v247;
            *((_OWORD *)a1 + 14) = v245;
          }
        }
        else
        {
          uint64_t v178 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v179 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v179;
          a1[6] = a2[6];
          v180 = (void *)a2[7];
          a1[7] = v180;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v181 = a2[10];
          id v182 = v178;
          swift_bridgeObjectRetain();
          id v183 = v180;
          if (v181 == 1)
          {
            long long v184 = *(_OWORD *)(a2 + 9);
            long long v185 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v185;
            *(_OWORD *)(a1 + 9) = v184;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            long long v214 = (void *)a2[13];
            a1[13] = v214;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v215 = v214;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        }
        *((unsigned char *)a1 + 281) = v47;
        goto LABEL_194;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v56 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v56;
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        uint64_t v57 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v57 == 1)
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          long long v58 = *((_OWORD *)a2 + 6);
          long long v59 = *((_OWORD *)a2 + 7);
          long long v60 = *((_OWORD *)a2 + 8);
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          *((_OWORD *)a1 + 7) = v59;
          *((_OWORD *)a1 + 8) = v60;
          *((_OWORD *)a1 + 6) = v58;
        }
        else
        {
          a1[10] = a2[10];
          a1[11] = a2[11];
          uint64_t v96 = a2[15];
          swift_bridgeObjectRetain();
          if (v96)
          {
            a1[15] = v96;
            a1[16] = a2[16];
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v96 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v96);
            char v97 = *((unsigned char *)a2 + 144);
            a1[17] = a2[17];
            *((unsigned char *)a1 + 144) = v97;
          }
          else
          {
            long long v207 = *((_OWORD *)a2 + 6);
            long long v208 = *((_OWORD *)a2 + 7);
            long long v209 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v208;
            *((_OWORD *)a1 + 8) = v209;
            *((_OWORD *)a1 + 6) = v207;
          }
        }
        goto LABEL_194;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v61 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v62 = (void *)((char *)a1 + v61);
        long long v63 = (char *)a2 + v61;
        *uint64_t v62 = *(void *)((char *)a2 + v61);
        v62[1] = *(void *)((char *)a2 + v61 + 8);
        v62[2] = *(void *)((char *)a2 + v61 + 16);
        v62[3] = *(void *)((char *)a2 + v61 + 24);
        uint64_t v64 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v65 = *(int *)(v64 + 24);
        v338 = (char *)v62 + v65;
        uint64_t v340 = v64;
        uint64_t v66 = &v63[v65];
        uint64_t v67 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v335 = *(void *)(v67 - 8);
        uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v335 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v68(v66, 1, v67))
        {
          sub_1BFEEF8E8(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
          memcpy(v338, v66, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          uint64_t v155 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v338, v66, v155);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v335 + 56))(v338, 0, 1, v67);
        }
        *(void *)((char *)v62 + *(int *)(v340 + 28)) = *(void *)&v63[*(int *)(v340 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_194;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v22 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22)
        {
          a1[7] = v22;
          a1[8] = a2[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v22);
        }
        else
        {
          long long v112 = *((_OWORD *)a2 + 2);
          long long v113 = *((_OWORD *)a2 + 3);
          a1[8] = a2[8];
          *((_OWORD *)a1 + 2) = v112;
          *((_OWORD *)a1 + 3) = v113;
        }
        uint64_t v114 = a1 + 9;
        uint64_t v115 = (long long *)(a2 + 9);
        uint64_t v116 = a2[12];
        if (v116)
        {
          a1[12] = v116;
          a1[13] = a2[13];
          (**(void (***)(_OWORD *, long long *))(v116 - 8))(v114, v115);
        }
        else
        {
          long long v125 = *v115;
          long long v126 = *(_OWORD *)(a2 + 11);
          a1[13] = a2[13];
          *uint64_t v114 = v125;
          *(_OWORD *)(a1 + 11) = v126;
        }
        uint64_t v127 = a1 + 14;
        uint64_t v128 = (long long *)(a2 + 14);
        uint64_t v129 = a2[17];
        if (v129)
        {
          a1[17] = v129;
          a1[18] = a2[18];
          (**(void (***)(_OWORD *, long long *))(v129 - 8))(v127, v128);
        }
        else
        {
          long long v140 = *v128;
          long long v141 = *((_OWORD *)a2 + 8);
          a1[18] = a2[18];
          *uint64_t v127 = v140;
          *((_OWORD *)a1 + 8) = v141;
        }
        goto LABEL_194;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v70 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v71 = v70[5];
        id v72 = (char *)a1 + v71;
        long long v73 = (char *)a2 + v71;
        uint64_t v74 = sub_1C151959C();
        long long v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(v72, v73, v74);
        *(void *)((char *)a1 + v70[6]) = *(void *)((char *)a2 + v70[6]);
        uint64_t v76 = v70[7];
        uint64_t v77 = (char *)a1 + v76;
        uint64_t v78 = (char *)a2 + v76;
        char v79 = v78[8];
        *(void *)uint64_t v77 = *(void *)v78;
        v77[8] = v79;
        uint64_t v80 = v70[8];
        long long v19 = (char *)a1 + v80;
        uint64_t v20 = (char *)a2 + v80;
        if (*((void *)v20 + 1) >= 0x11uLL)
        {
LABEL_38:
          *(void *)long long v19 = *(void *)v20;
          *((void *)v19 + 1) = *((void *)v20 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)long long v19 = *(_OWORD *)v20;
        }
        goto LABEL_194;
      case 0xBu:
        *a1 = *a2;
        swift_retain();
        goto LABEL_194;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v23 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v23;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_194;
      case 0xDu:
        *a1 = *a2;
        uint64_t v81 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v81;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        uint64_t v98 = (void *)a2[8];
        a1[8] = v98;
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        a1[10] = a2[10];
        uint64_t v99 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v100 = v98;
        swift_bridgeObjectRetain();
        if (v99)
        {
          a1[14] = v99;
          a1[15] = a2[15];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v99 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v99);
        }
        else
        {
          long long v156 = *(_OWORD *)(a2 + 11);
          long long v157 = *(_OWORD *)(a2 + 13);
          a1[15] = a2[15];
          *(_OWORD *)(a1 + 11) = v156;
          *(_OWORD *)(a1 + 13) = v157;
        }
        uint64_t v158 = a1 + 16;
        uint64_t v159 = (long long *)(a2 + 16);
        uint64_t v160 = a2[19];
        if (v160)
        {
          a1[19] = v160;
          a1[20] = a2[20];
          (**(void (***)(_OWORD *, long long *))(v160 - 8))(v158, v159);
        }
        else
        {
          long long v166 = *v159;
          long long v167 = *((_OWORD *)a2 + 9);
          a1[20] = a2[20];
          *uint64_t v158 = v166;
          *((_OWORD *)a1 + 9) = v167;
        }
        unint64_t v168 = a1 + 21;
        v169 = (long long *)(a2 + 21);
        uint64_t v170 = a2[24];
        if (v170)
        {
          a1[24] = v170;
          a1[25] = a2[25];
          (**(void (***)(_OWORD *, long long *))(v170 - 8))(v168, v169);
        }
        else
        {
          long long v171 = *v169;
          long long v172 = *(_OWORD *)(a2 + 23);
          a1[25] = a2[25];
          *unint64_t v168 = v171;
          *(_OWORD *)(a1 + 23) = v172;
        }
        goto LABEL_194;
      case 0xEu:
        *a1 = *a2;
        uint64_t v24 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v24;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_194;
      case 0xFu:
        *a1 = *a2;
        uint64_t v82 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v82;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        break;
      case 0x10u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[15] = a2[15];
        a1[16] = a2[16];
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        uint64_t v25 = a2[22];
        *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
        a1[22] = v25;
        a1[24] = a2[24];
        a1[25] = a2[25];
        a1[26] = a2[26];
        uint64_t v26 = a2[27];
        *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
        a1[27] = v26;
        uint64_t v336 = (void *)a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)v336 >= 0x11)
        {
          a1[29] = a2[29];
          a1[30] = a2[30];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
        }
        goto LABEL_194;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    a1[5] = a2[5];
    a1[6] = a2[6];
    uint64_t v101 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v102 = (char *)a1 + v101;
    unint64_t v103 = (char *)a2 + v101;
    *(void *)((char *)a1 + v101) = *(void *)((char *)a2 + v101);
    uint64_t v104 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v105 = &v102[v104];
    uint64_t v106 = &v103[v104];
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v190 = type metadata accessor for PuzzleStatisticValue(0);
        int v191 = swift_getEnumCaseMultiPayload();
        if (v191 == 5)
        {
          uint64_t v192 = type metadata accessor for PuzzleStreak();
          uint64_t v193 = *(void *)(v192 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v106, 1, v192))
          {
LABEL_106:
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v105, v106, *(void *)(*(void *)(v194 - 8) + 64));
            goto LABEL_173;
          }
        }
        else
        {
          if (v191 != 4)
          {
            memcpy(v105, v106, *(void *)(*(void *)(v190 - 8) + 64));
            goto LABEL_174;
          }
          uint64_t v192 = type metadata accessor for PuzzleStreak();
          uint64_t v193 = *(void *)(v192 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v106, 1, v192)) {
            goto LABEL_106;
          }
        }
        uint64_t v307 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v307 - 8) + 16))(v105, v106, v307);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v105, 0, 1, v192);
LABEL_173:
        swift_storeEnumTagMultiPayload();
LABEL_174:
        uint64_t v308 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v309 = *(int *)(v308 + 20);
        v310 = &v105[v309];
        uint64_t v311 = &v106[v309];
        int v312 = swift_getEnumCaseMultiPayload();
        if (v312 == 5)
        {
          uint64_t v313 = type metadata accessor for PuzzleStreak();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313))
          {
LABEL_179:
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v310, v311, *(void *)(*(void *)(v315 - 8) + 64));
            goto LABEL_182;
          }
        }
        else
        {
          if (v312 != 4)
          {
            memcpy(v310, v311, *(void *)(*(void *)(v190 - 8) + 64));
            goto LABEL_183;
          }
          uint64_t v313 = type metadata accessor for PuzzleStreak();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313)) {
            goto LABEL_179;
          }
        }
        uint64_t v316 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 16))(v310, v311, v316);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v310, 0, 1, v313);
LABEL_182:
        swift_storeEnumTagMultiPayload();
LABEL_183:
        uint64_t v317 = *(int *)(v308 + 24);
        uint64_t v318 = &v105[v317];
        v106 += v317;
        int v319 = swift_getEnumCaseMultiPayload();
        if (v319 == 5)
        {
          uint64_t v320 = type metadata accessor for PuzzleStreak();
          uint64_t v321 = *(void *)(v320 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v321 + 48))(v106, 1, v320))
          {
LABEL_188:
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v318, v106, *(void *)(*(void *)(v322 - 8) + 64));
            goto LABEL_192;
          }
        }
        else
        {
          if (v319 != 4)
          {
            size_t v189 = *(void *)(*(void *)(v190 - 8) + 64);
            uint64_t v297 = v318;
            goto LABEL_190;
          }
          uint64_t v320 = type metadata accessor for PuzzleStreak();
          uint64_t v321 = *(void *)(v320 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v321 + 48))(v106, 1, v320)) {
            goto LABEL_188;
          }
        }
        uint64_t v323 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 16))(v318, v106, v323);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v321 + 56))(v318, 0, 1, v320);
        goto LABEL_192;
      case 2u:
        uint64_t v186 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v187 = *((void *)v186 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v187 + 48))(v106, 1, v186))
        {
          sub_1BFEEF8E8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v189 = *(void *)(*(void *)(v188 - 8) + 64);
          goto LABEL_161;
        }
        uint64_t v250 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16))(v105, v106, v250);
        uint64_t v251 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v252 = v251[5];
        v253 = &v105[v252];
        id v254 = &v106[v252];
        *(void *)v253 = *(void *)v254;
        *((void *)v253 + 1) = *((void *)v254 + 1);
        uint64_t v255 = v251[6];
        unint64_t v256 = &v105[v255];
        uint64_t v257 = &v106[v255];
        *(void *)unint64_t v256 = *(void *)v257;
        *((void *)v256 + 1) = *((void *)v257 + 1);
        uint64_t v258 = (uint64_t *)(v257 + 16);
        unint64_t v259 = *((void *)v257 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v259 >> 60 == 15)
        {
          *((_OWORD *)v256 + 1) = *(_OWORD *)v258;
        }
        else
        {
          uint64_t v301 = *v258;
          sub_1BFE95820(*v258, v259);
          *((void *)v256 + 2) = v301;
          *((void *)v256 + 3) = v259;
        }
        *(void *)&v105[v251[7]] = *(void *)&v106[v251[7]];
        *(void *)&v105[v251[8]] = *(void *)&v106[v251[8]];
        *(void *)&v105[v186[5]] = *(void *)&v106[v186[5]];
        *(void *)&v105[v186[6]] = *(void *)&v106[v186[6]];
        uint64_t v302 = v186[7];
        v303 = &v105[v302];
        uint64_t v304 = &v106[v302];
        *(void *)v303 = *(void *)v304;
        *((void *)v303 + 1) = *((void *)v304 + 1);
        v305 = *(void (**)(char *, void, uint64_t, int *))(v187 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v305(v105, 0, 1, v186);
        goto LABEL_193;
      case 3u:
        *(void *)uint64_t v105 = *(void *)v106;
        uint64_t v195 = *((void *)v106 + 1);
        v105[16] = v106[16];
        *((void *)v105 + 1) = v195;
        uint64_t v196 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v197 = v196[6];
        long long v198 = &v105[v197];
        v199 = &v106[v197];
        uint64_t v200 = type metadata accessor for PuzzleStreak();
        uint64_t v201 = *(void *)(v200 - 8);
        uint64_t v202 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v201 + 48);
        if (v202(v199, 1, v200))
        {
          sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v198, v199, *(void *)(*(void *)(v203 - 8) + 64));
        }
        else
        {
          uint64_t v276 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 16))(v198, v199, v276);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v201 + 56))(v198, 0, 1, v200);
        }
        uint64_t v277 = v196[7];
        v278 = &v105[v277];
        id v279 = &v106[v277];
        if (v202(&v106[v277], 1, v200))
        {
          sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          uint64_t v281 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16))(v278, v279, v281);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v201 + 56))(v278, 0, 1, v200);
        }
        uint64_t v282 = v196[8];
        uint64_t v283 = &v105[v282];
        uint64_t v284 = &v106[v282];
        long long v285 = *(_OWORD *)v284;
        long long v286 = *((_OWORD *)v284 + 1);
        *(_OWORD *)(v283 + 25) = *(_OWORD *)(v284 + 25);
        *(_OWORD *)uint64_t v283 = v285;
        *((_OWORD *)v283 + 1) = v286;
        uint64_t v287 = v196[9];
        v288 = &v105[v287];
        unint64_t v289 = &v106[v287];
        long long v290 = *(_OWORD *)v289;
        long long v291 = *((_OWORD *)v289 + 1);
        *(_OWORD *)(v288 + 25) = *(_OWORD *)(v289 + 25);
        *(_OWORD *)v288 = v290;
        *((_OWORD *)v288 + 1) = v291;
        uint64_t v292 = v196[10];
        long long v293 = &v105[v292];
        long long v294 = &v106[v292];
        long long v295 = *(_OWORD *)v294;
        long long v296 = *((_OWORD *)v294 + 1);
        *(_OWORD *)(v293 + 25) = *(_OWORD *)(v294 + 25);
        *(_OWORD *)long long v293 = v295;
        *((_OWORD *)v293 + 1) = v296;
        goto LABEL_193;
      default:
        uint64_t v107 = type metadata accessor for PuzzleStatisticValue(0);
        int v108 = swift_getEnumCaseMultiPayload();
        if (v108 == 5)
        {
          uint64_t v109 = type metadata accessor for PuzzleStreak();
          uint64_t v110 = *(void *)(v109 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v106, 1, v109)) {
            goto LABEL_61;
          }
        }
        else
        {
          if (v108 != 4)
          {
            size_t v189 = *(void *)(*(void *)(v107 - 8) + 64);
LABEL_161:
            uint64_t v297 = v105;
LABEL_190:
            memcpy(v297, v106, v189);
            goto LABEL_193;
          }
          uint64_t v109 = type metadata accessor for PuzzleStreak();
          uint64_t v110 = *(void *)(v109 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v106, 1, v109))
          {
LABEL_61:
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v105, v106, *(void *)(*(void *)(v111 - 8) + 64));
            goto LABEL_192;
          }
        }
        uint64_t v306 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 16))(v105, v106, v306);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v105, 0, 1, v109);
LABEL_192:
        swift_storeEnumTagMultiPayload();
LABEL_193:
        swift_storeEnumTagMultiPayload();
LABEL_194:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

char *initializeWithTake for FeedItem(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v6 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v7 = v6[5];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_1C151DBAC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      uint64_t v11 = v6[7];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      v12[8] = v13[8];
      *(void *)uint64_t v12 = *(void *)v13;
      *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
      goto LABEL_89;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      a1[56] = a2[56];
      uint64_t v14 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v15 = v14[10];
      long long v16 = &a1[v15];
      char v17 = &a2[v15];
      *long long v16 = a2[v15];
      v16[1] = a2[v15 + 1];
      uint64_t v18 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      uint64_t v22 = (int *)type metadata accessor for SharedItem();
      uint64_t v23 = *((void *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        uint64_t v68 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v20, v21, v68);
        v20[v22[5]] = v21[v22[5]];
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v69 = v22[7];
        uint64_t v179 = &v20[v69];
        uint64_t v70 = &v21[v69];
        uint64_t v71 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v179, v70, v71);
        (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      v16[v18[7]] = v17[v18[7]];
      v16[v18[8]] = v17[v18[8]];
      v16[v18[9]] = v17[v18[9]];
      v16[v18[10]] = v17[v18[10]];
      uint64_t v72 = v14[11];
      long long v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      uint64_t v75 = sub_1C151D2DC();
      uint64_t v76 = *(void *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
        memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(_OWORD *)&a1[v14[12]] = *(_OWORD *)&a2[v14[12]];
      uint64_t v85 = v14[13];
      uint64_t v86 = *(void *)&a2[v85];
      if (v86 == 2) {
        uint64_t v86 = 2;
      }
      *(void *)&a1[v85] = v86;
      *(void *)&a1[v14[14]] = *(void *)&a2[v14[14]];
      goto LABEL_89;
    case 4u:
      uint64_t v25 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v25;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v26 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v27 = v26[8];
      unint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = sub_1C1515FDC();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v32(v28, v29, v30);
      uint64_t v33 = v26[9];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      uint64_t v178 = v30;
      long long v177 = v32;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&a2[v33], 1, v30))
      {
        sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
      }
      *(void *)&a1[v26[10]] = *(void *)&a2[v26[10]];
      *(void *)&a1[v26[11]] = *(void *)&a2[v26[11]];
      uint64_t v78 = v26[12];
      char v79 = &a1[v78];
      uint64_t v80 = &a2[v78];
      uint64_t v81 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v82 = *((void *)v81 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v82 + 48))(v80, 1, v81))
      {
        sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
        memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        uint64_t v174 = v82;
        long long v175 = v26;
        *(_OWORD *)char v79 = *(_OWORD *)v80;
        *((void *)v79 + 2) = *((void *)v80 + 2);
        v79[24] = v80[24];
        *((void *)v79 + 4) = *((void *)v80 + 4);
        *(_OWORD *)(v79 + 40) = *(_OWORD *)(v80 + 40);
        v79[56] = v80[56];
        uint64_t v87 = v81[10];
        uint64_t v88 = &v79[v87];
        uint64_t v89 = &v80[v87];
        *uint64_t v88 = v80[v87];
        v88[1] = v80[v87 + 1];
        uint64_t v90 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v91 = v90[6];
        __dst = &v88[v91];
        uint64_t v92 = &v89[v91];
        uint64_t v93 = (int *)type metadata accessor for SharedItem();
        uint64_t v173 = *((void *)v93 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v173 + 48))(v92, 1, v93))
        {
          uint64_t v94 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          uint64_t v113 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(__dst, v92, v113);
          __dst[v93[5]] = v92[v93[5]];
          *(void *)&__dst[v93[6]] = *(void *)&v92[v93[6]];
          v177(&__dst[v93[7]], &v92[v93[7]], v178);
          (*(void (**)(char *, void, uint64_t, int *))(v173 + 56))(__dst, 0, 1, v93);
        }
        v88[v90[7]] = v89[v90[7]];
        v88[v90[8]] = v89[v90[8]];
        v88[v90[9]] = v89[v90[9]];
        v88[v90[10]] = v89[v90[10]];
        uint64_t v114 = v81[11];
        uint64_t v115 = &v79[v114];
        uint64_t v116 = &v80[v114];
        uint64_t v117 = sub_1C151D2DC();
        uint64_t v118 = *(void *)(v117 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
        }
        uint64_t v26 = v175;
        *(_OWORD *)&v79[v81[12]] = *(_OWORD *)&v80[v81[12]];
        uint64_t v120 = v81[13];
        uint64_t v121 = *(void *)&v80[v120];
        if (v121 == 2) {
          uint64_t v121 = 2;
        }
        *(void *)&v79[v120] = v121;
        *(void *)&v79[v81[14]] = *(void *)&v80[v81[14]];
        (*(void (**)(char *, void, uint64_t, int *))(v174 + 56))(v79, 0, 1, v81);
      }
      uint64_t v122 = v26[13];
      uint64_t v123 = &a1[v122];
      uint64_t v124 = &a2[v122];
      uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v126 = *(void *)(v125 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
      {
        sub_1BFEEF8E8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
          uint64_t v128 = type metadata accessor for GenericDataVisualization();
          v177(&v123[*(int *)(v128 + 20)], &v124[*(int *)(v128 + 20)], v178);
          *(void *)&v123[*(int *)(v128 + 24)] = *(void *)&v124[*(int *)(v128 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v123, v124, *(void *)(v126 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
      }
      a1[v26[14]] = a2[v26[14]];
      goto LABEL_89;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      long long v40 = *(_OWORD *)&a2[v37 + 16];
      *(_OWORD *)uint64_t v38 = *(_OWORD *)&a2[v37];
      *((_OWORD *)v38 + 1) = v40;
      uint64_t v41 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v42 = *(int *)(v41 + 24);
      id v43 = &v38[v42];
      id v44 = &v39[v42];
      uint64_t v45 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        sub_1BFEEF8E8(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        uint64_t v84 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v43, v44, v84);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(void *)&v38[*(int *)(v41 + 28)] = *(void *)&v39[*(int *)(v41 + 28)];
      goto LABEL_89;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v48 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v49 = v48[5];
      uint64_t v50 = &a1[v49];
      uint64_t v51 = &a2[v49];
      uint64_t v52 = sub_1C151959C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      *(void *)&a1[v48[6]] = *(void *)&a2[v48[6]];
      uint64_t v53 = v48[7];
      long long v54 = &a1[v53];
      long long v55 = &a2[v53];
      _OWORD v54[8] = v55[8];
      *(void *)long long v54 = *(void *)v55;
      *(_OWORD *)&a1[v48[8]] = *(_OWORD *)&a2[v48[8]];
      goto LABEL_89;
    case 0xFu:
      uint64_t v56 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v56;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      long long v58 = &a1[v57];
      long long v59 = &a2[v57];
      *(void *)&a1[v57] = *(void *)&a2[v57];
      uint64_t v60 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v61 = &v58[v60];
      uint64_t v62 = &v59[v60];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v99 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v101 = type metadata accessor for PuzzleStreak();
            uint64_t v102 = *(void *)(v101 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101))
            {
LABEL_35:
              sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v61, v62, *(void *)(*(void *)(v103 - 8) + 64));
              goto LABEL_69;
            }
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              memcpy(v61, v62, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_70;
            }
            uint64_t v101 = type metadata accessor for PuzzleStreak();
            uint64_t v102 = *(void *)(v101 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101)) {
              goto LABEL_35;
            }
          }
          uint64_t v154 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v61, v62, v154);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v61, 0, 1, v101);
LABEL_69:
          swift_storeEnumTagMultiPayload();
LABEL_70:
          uint64_t v155 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v156 = *(int *)(v155 + 20);
          long long v157 = &v61[v156];
          uint64_t v158 = &v62[v156];
          int v159 = swift_getEnumCaseMultiPayload();
          if (v159 == 5)
          {
            uint64_t v160 = type metadata accessor for PuzzleStreak();
            uint64_t v161 = *(void *)(v160 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v158, 1, v160))
            {
LABEL_75:
              sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v157, v158, *(void *)(*(void *)(v162 - 8) + 64));
              goto LABEL_78;
            }
          }
          else
          {
            if (v159 != 4)
            {
              memcpy(v157, v158, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_79;
            }
            uint64_t v160 = type metadata accessor for PuzzleStreak();
            uint64_t v161 = *(void *)(v160 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v158, 1, v160)) {
              goto LABEL_75;
            }
          }
          uint64_t v163 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v157, v158, v163);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(v157, 0, 1, v160);
LABEL_78:
          swift_storeEnumTagMultiPayload();
LABEL_79:
          uint64_t v164 = *(int *)(v155 + 24);
          unint64_t v165 = &v61[v164];
          long long v166 = &v62[v164];
          int v167 = swift_getEnumCaseMultiPayload();
          if (v167 == 5)
          {
            uint64_t v168 = type metadata accessor for PuzzleStreak();
            uint64_t v169 = *(void *)(v168 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v166, 1, v168))
            {
LABEL_84:
              sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v165, v166, *(void *)(*(void *)(v170 - 8) + 64));
              goto LABEL_87;
            }
          }
          else
          {
            if (v167 != 4)
            {
              memcpy(v165, v166, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_88;
            }
            uint64_t v168 = type metadata accessor for PuzzleStreak();
            uint64_t v169 = *(void *)(v168 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v166, 1, v168)) {
              goto LABEL_84;
            }
          }
          uint64_t v171 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v165, v166, v171);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v165, 0, 1, v168);
          goto LABEL_87;
        case 2u:
          id v95 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v96 = *((void *)v95 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v96 + 48))(v62, 1, v95))
          {
            sub_1BFEEF8E8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            size_t v98 = *(void *)(*(void *)(v97 - 8) + 64);
            goto LABEL_61;
          }
          uint64_t v129 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v61, v62, v129);
          uint64_t v130 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)&v61[v130[5]] = *(_OWORD *)&v62[v130[5]];
          uint64_t v131 = v130[6];
          id v132 = &v61[v131];
          uint64_t v133 = &v62[v131];
          long long v134 = *((_OWORD *)v133 + 1);
          *(_OWORD *)id v132 = *(_OWORD *)v133;
          *((_OWORD *)v132 + 1) = v134;
          *(void *)&v61[v130[7]] = *(void *)&v62[v130[7]];
          *(void *)&v61[v130[8]] = *(void *)&v62[v130[8]];
          *(void *)&v61[v95[5]] = *(void *)&v62[v95[5]];
          *(void *)&v61[v95[6]] = *(void *)&v62[v95[6]];
          *(_OWORD *)&v61[v95[7]] = *(_OWORD *)&v62[v95[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v96 + 56))(v61, 0, 1, v95);
          goto LABEL_88;
        case 3u:
          uint64_t v104 = *((void *)v62 + 1);
          *(void *)uint64_t v61 = *(void *)v62;
          *((void *)v61 + 1) = v104;
          v61[16] = v62[16];
          uint64_t v105 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v106 = v105[6];
          uint64_t v107 = &v61[v106];
          int v108 = &v62[v106];
          uint64_t v109 = type metadata accessor for PuzzleStreak();
          uint64_t v110 = *(void *)(v109 - 8);
          uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
          if (v111(v108, 1, v109))
          {
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
          }
          else
          {
            uint64_t v135 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v107, v108, v135);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
          }
          uint64_t v136 = v105[7];
          uint64_t v137 = &v61[v136];
          v138 = &v62[v136];
          if (v111(&v62[v136], 1, v109))
          {
            sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            uint64_t v140 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v137, v138, v140);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v137, 0, 1, v109);
          }
          uint64_t v141 = v105[8];
          uint64_t v142 = &v61[v141];
          uint64_t v143 = &v62[v141];
          long long v144 = *((_OWORD *)v143 + 1);
          *(_OWORD *)uint64_t v142 = *(_OWORD *)v143;
          *((_OWORD *)v142 + 1) = v144;
          *(_OWORD *)(v142 + 25) = *(_OWORD *)(v143 + 25);
          uint64_t v145 = v105[9];
          uint64_t v146 = &v61[v145];
          v147 = &v62[v145];
          *(_OWORD *)(v146 + 25) = *(_OWORD *)(v147 + 25);
          long long v148 = *((_OWORD *)v147 + 1);
          *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
          *((_OWORD *)v146 + 1) = v148;
          uint64_t v149 = v105[10];
          int v150 = &v61[v149];
          uint64_t v151 = &v62[v149];
          long long v152 = *((_OWORD *)v151 + 1);
          *(_OWORD *)int v150 = *(_OWORD *)v151;
          *((_OWORD *)v150 + 1) = v152;
          *(_OWORD *)(v150 + 25) = *(_OWORD *)(v151 + 25);
          goto LABEL_88;
        default:
          uint64_t v63 = type metadata accessor for PuzzleStatisticValue(0);
          int v64 = swift_getEnumCaseMultiPayload();
          if (v64 == 5)
          {
            uint64_t v65 = type metadata accessor for PuzzleStreak();
            uint64_t v66 = *(void *)(v65 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65)) {
              goto LABEL_15;
            }
          }
          else
          {
            if (v64 != 4)
            {
              size_t v98 = *(void *)(*(void *)(v63 - 8) + 64);
LABEL_61:
              memcpy(v61, v62, v98);
              goto LABEL_88;
            }
            uint64_t v65 = type metadata accessor for PuzzleStreak();
            uint64_t v66 = *(void *)(v65 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65))
            {
LABEL_15:
              sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
              goto LABEL_87;
            }
          }
          uint64_t v153 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v61, v62, v153);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v65);
LABEL_87:
          swift_storeEnumTagMultiPayload();
LABEL_88:
          swift_storeEnumTagMultiPayload();
LABEL_89:
          swift_storeEnumTagMultiPayload();
          return a1;
      }
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

char *assignWithTake for FeedItem(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFEEB3A0((uint64_t)a1, type metadata accessor for FeedItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v6 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v7 = v6[5];
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        uint64_t v10 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
        uint64_t v11 = v6[7];
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        v12[8] = v13[8];
        *(void *)uint64_t v12 = *(void *)v13;
        *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
        goto LABEL_90;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        uint64_t v14 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v15 = v14[10];
        long long v16 = &a1[v15];
        char v17 = &a2[v15];
        *long long v16 = a2[v15];
        v16[1] = a2[v15 + 1];
        uint64_t v18 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = &v17[v19];
        uint64_t v22 = (int *)type metadata accessor for SharedItem();
        uint64_t v23 = *((void *)v22 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v68 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v20, v21, v68);
          v20[v22[5]] = v21[v22[5]];
          *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
          uint64_t v69 = v22[7];
          v180 = &v20[v69];
          uint64_t v70 = &v21[v69];
          uint64_t v71 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v180, v70, v71);
          (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
        }
        v16[v18[7]] = v17[v18[7]];
        v16[v18[8]] = v17[v18[8]];
        v16[v18[9]] = v17[v18[9]];
        v16[v18[10]] = v17[v18[10]];
        uint64_t v72 = v14[11];
        long long v73 = &a1[v72];
        uint64_t v74 = &a2[v72];
        uint64_t v75 = sub_1C151D2DC();
        uint64_t v76 = *(void *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        *(_OWORD *)&a1[v14[12]] = *(_OWORD *)&a2[v14[12]];
        uint64_t v85 = v14[13];
        uint64_t v86 = *(void *)&a2[v85];
        if (v86 == 2) {
          uint64_t v86 = 2;
        }
        *(void *)&a1[v85] = v86;
        *(void *)&a1[v14[14]] = *(void *)&a2[v14[14]];
        goto LABEL_90;
      case 4u:
        uint64_t v25 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v25;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v26 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v27 = v26[8];
        unint64_t v28 = &a1[v27];
        uint64_t v29 = &a2[v27];
        uint64_t v30 = sub_1C1515FDC();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v32(v28, v29, v30);
        uint64_t v33 = v26[9];
        uint64_t v34 = &a1[v33];
        uint64_t v35 = &a2[v33];
        uint64_t v179 = v30;
        long long v177 = v32;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&a2[v33], 1, v30))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          v32(v34, v35, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
        }
        *(void *)&a1[v26[10]] = *(void *)&a2[v26[10]];
        *(void *)&a1[v26[11]] = *(void *)&a2[v26[11]];
        uint64_t v78 = v26[12];
        char v79 = &a1[v78];
        uint64_t v80 = &a2[v78];
        uint64_t v81 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v82 = *((void *)v81 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v82 + 48))(v80, 1, v81))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
          memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          uint64_t v174 = v82;
          long long v175 = v26;
          *(_OWORD *)char v79 = *(_OWORD *)v80;
          *((void *)v79 + 2) = *((void *)v80 + 2);
          v79[24] = v80[24];
          *((void *)v79 + 4) = *((void *)v80 + 4);
          *(_OWORD *)(v79 + 40) = *(_OWORD *)(v80 + 40);
          v79[56] = v80[56];
          uint64_t v87 = v81[10];
          uint64_t v88 = &v79[v87];
          uint64_t v89 = &v80[v87];
          *uint64_t v88 = v80[v87];
          v88[1] = v80[v87 + 1];
          uint64_t v90 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v91 = v90[6];
          __dst = &v88[v91];
          uint64_t v92 = &v89[v91];
          uint64_t v93 = (int *)type metadata accessor for SharedItem();
          uint64_t v173 = *((void *)v93 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v173 + 48))(v92, 1, v93))
          {
            uint64_t v94 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v92, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            uint64_t v113 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(__dst, v92, v113);
            __dst[v93[5]] = v92[v93[5]];
            *(void *)&__dst[v93[6]] = *(void *)&v92[v93[6]];
            v177(&__dst[v93[7]], &v92[v93[7]], v179);
            (*(void (**)(char *, void, uint64_t, int *))(v173 + 56))(__dst, 0, 1, v93);
          }
          v88[v90[7]] = v89[v90[7]];
          v88[v90[8]] = v89[v90[8]];
          v88[v90[9]] = v89[v90[9]];
          v88[v90[10]] = v89[v90[10]];
          uint64_t v114 = v81[11];
          uint64_t v115 = &v79[v114];
          uint64_t v116 = &v80[v114];
          uint64_t v117 = sub_1C151D2DC();
          uint64_t v118 = *(void *)(v117 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
          {
            sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
          }
          uint64_t v26 = v175;
          *(_OWORD *)&v79[v81[12]] = *(_OWORD *)&v80[v81[12]];
          uint64_t v120 = v81[13];
          uint64_t v121 = *(void *)&v80[v120];
          if (v121 == 2) {
            uint64_t v121 = 2;
          }
          *(void *)&v79[v120] = v121;
          *(void *)&v79[v81[14]] = *(void *)&v80[v81[14]];
          (*(void (**)(char *, void, uint64_t, int *))(v174 + 56))(v79, 0, 1, v81);
        }
        uint64_t v122 = v26[13];
        uint64_t v123 = &a1[v122];
        uint64_t v124 = &a2[v122];
        uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v126 = *(void *)(v125 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
        {
          sub_1BFEEF8E8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
            uint64_t v128 = type metadata accessor for GenericDataVisualization();
            v177(&v123[*(int *)(v128 + 20)], &v124[*(int *)(v128 + 20)], v179);
            *(void *)&v123[*(int *)(v128 + 24)] = *(void *)&v124[*(int *)(v128 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v123, v124, *(void *)(v126 + 64));
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
        }
        a1[v26[14]] = a2[v26[14]];
        goto LABEL_90;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        long long v40 = *(_OWORD *)&a2[v37 + 16];
        *(_OWORD *)uint64_t v38 = *(_OWORD *)&a2[v37];
        *((_OWORD *)v38 + 1) = v40;
        uint64_t v41 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v42 = *(int *)(v41 + 24);
        id v43 = &v38[v42];
        id v44 = &v39[v42];
        uint64_t v45 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v46 = *(void *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
        {
          sub_1BFEEF8E8(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
          memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v84 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v43, v44, v84);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        *(void *)&v38[*(int *)(v41 + 28)] = *(void *)&v39[*(int *)(v41 + 28)];
        goto LABEL_90;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v48 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v49 = v48[5];
        uint64_t v50 = &a1[v49];
        uint64_t v51 = &a2[v49];
        uint64_t v52 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        *(void *)&a1[v48[6]] = *(void *)&a2[v48[6]];
        uint64_t v53 = v48[7];
        long long v54 = &a1[v53];
        long long v55 = &a2[v53];
        _OWORD v54[8] = v55[8];
        *(void *)long long v54 = *(void *)v55;
        *(_OWORD *)&a1[v48[8]] = *(_OWORD *)&a2[v48[8]];
        goto LABEL_90;
      case 0xFu:
        uint64_t v56 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v56;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        long long v58 = &a1[v57];
        long long v59 = &a2[v57];
        *(void *)&a1[v57] = *(void *)v59;
        uint64_t v60 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v61 = &v58[v60];
        uint64_t v62 = &v59[v60];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v99 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v101 = type metadata accessor for PuzzleStreak();
              uint64_t v102 = *(void *)(v101 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101))
              {
LABEL_36:
                sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v61, v62, *(void *)(*(void *)(v103 - 8) + 64));
                goto LABEL_70;
              }
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                memcpy(v61, v62, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_71;
              }
              uint64_t v101 = type metadata accessor for PuzzleStreak();
              uint64_t v102 = *(void *)(v101 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101)) {
                goto LABEL_36;
              }
            }
            uint64_t v154 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v61, v62, v154);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v61, 0, 1, v101);
LABEL_70:
            swift_storeEnumTagMultiPayload();
LABEL_71:
            uint64_t v155 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v156 = *(int *)(v155 + 20);
            long long v157 = &v61[v156];
            uint64_t v158 = &v62[v156];
            int v159 = swift_getEnumCaseMultiPayload();
            if (v159 == 5)
            {
              uint64_t v160 = type metadata accessor for PuzzleStreak();
              uint64_t v161 = *(void *)(v160 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v158, 1, v160))
              {
LABEL_76:
                sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v157, v158, *(void *)(*(void *)(v162 - 8) + 64));
                goto LABEL_79;
              }
            }
            else
            {
              if (v159 != 4)
              {
                memcpy(v157, v158, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_80;
              }
              uint64_t v160 = type metadata accessor for PuzzleStreak();
              uint64_t v161 = *(void *)(v160 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v158, 1, v160)) {
                goto LABEL_76;
              }
            }
            uint64_t v163 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v157, v158, v163);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(v157, 0, 1, v160);
LABEL_79:
            swift_storeEnumTagMultiPayload();
LABEL_80:
            uint64_t v164 = *(int *)(v155 + 24);
            unint64_t v165 = &v61[v164];
            long long v166 = &v62[v164];
            int v167 = swift_getEnumCaseMultiPayload();
            if (v167 == 5)
            {
              uint64_t v168 = type metadata accessor for PuzzleStreak();
              uint64_t v169 = *(void *)(v168 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v166, 1, v168))
              {
LABEL_85:
                sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v165, v166, *(void *)(*(void *)(v170 - 8) + 64));
                goto LABEL_88;
              }
            }
            else
            {
              if (v167 != 4)
              {
                memcpy(v165, v166, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_89;
              }
              uint64_t v168 = type metadata accessor for PuzzleStreak();
              uint64_t v169 = *(void *)(v168 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v166, 1, v168)) {
                goto LABEL_85;
              }
            }
            uint64_t v171 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v165, v166, v171);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v165, 0, 1, v168);
            goto LABEL_88;
          case 2u:
            id v95 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v96 = *((void *)v95 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v96 + 48))(v62, 1, v95))
            {
              sub_1BFEEF8E8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
              size_t v98 = *(void *)(*(void *)(v97 - 8) + 64);
              goto LABEL_62;
            }
            uint64_t v129 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v61, v62, v129);
            uint64_t v130 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v61[v130[5]] = *(_OWORD *)&v62[v130[5]];
            uint64_t v131 = v130[6];
            id v132 = &v61[v131];
            uint64_t v133 = &v62[v131];
            long long v134 = *((_OWORD *)v133 + 1);
            *(_OWORD *)id v132 = *(_OWORD *)v133;
            *((_OWORD *)v132 + 1) = v134;
            *(void *)&v61[v130[7]] = *(void *)&v62[v130[7]];
            *(void *)&v61[v130[8]] = *(void *)&v62[v130[8]];
            *(void *)&v61[v95[5]] = *(void *)&v62[v95[5]];
            *(void *)&v61[v95[6]] = *(void *)&v62[v95[6]];
            *(_OWORD *)&v61[v95[7]] = *(_OWORD *)&v62[v95[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v96 + 56))(v61, 0, 1, v95);
            goto LABEL_89;
          case 3u:
            uint64_t v104 = *((void *)v62 + 1);
            *(void *)uint64_t v61 = *(void *)v62;
            *((void *)v61 + 1) = v104;
            v61[16] = v62[16];
            uint64_t v105 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v106 = v105[6];
            uint64_t v178 = v61;
            uint64_t v107 = &v61[v106];
            int v108 = &v62[v106];
            uint64_t v109 = type metadata accessor for PuzzleStreak();
            uint64_t v110 = *(void *)(v109 - 8);
            uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
            if (v111(v108, 1, v109))
            {
              sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              uint64_t v135 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v107, v108, v135);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
            }
            uint64_t v136 = v105[7];
            uint64_t v137 = (char *)v178 + v136;
            v138 = &v62[v136];
            if (v111(&v62[v136], 1, v109))
            {
              sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
            }
            else
            {
              uint64_t v140 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v137, v138, v140);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v137, 0, 1, v109);
            }
            uint64_t v141 = v105[8];
            uint64_t v142 = (_OWORD *)((char *)v178 + v141);
            uint64_t v143 = &v62[v141];
            long long v144 = *((_OWORD *)v143 + 1);
            _OWORD *v142 = *(_OWORD *)v143;
            v142[1] = v144;
            *(_OWORD *)((char *)v142 + 25) = *(_OWORD *)(v143 + 25);
            uint64_t v145 = v105[9];
            uint64_t v146 = (_OWORD *)((char *)v178 + v145);
            v147 = &v62[v145];
            *(_OWORD *)((char *)v146 + 25) = *(_OWORD *)(v147 + 25);
            long long v148 = *((_OWORD *)v147 + 1);
            *uint64_t v146 = *(_OWORD *)v147;
            v146[1] = v148;
            uint64_t v149 = v105[10];
            int v150 = (_OWORD *)((char *)v178 + v149);
            uint64_t v151 = &v62[v149];
            long long v152 = *((_OWORD *)v151 + 1);
            *int v150 = *(_OWORD *)v151;
            v150[1] = v152;
            *(_OWORD *)((char *)v150 + 25) = *(_OWORD *)(v151 + 25);
            goto LABEL_89;
          default:
            uint64_t v63 = type metadata accessor for PuzzleStatisticValue(0);
            int v64 = swift_getEnumCaseMultiPayload();
            if (v64 == 5)
            {
              uint64_t v65 = type metadata accessor for PuzzleStreak();
              uint64_t v66 = *(void *)(v65 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65)) {
                goto LABEL_16;
              }
            }
            else
            {
              if (v64 != 4)
              {
                size_t v98 = *(void *)(*(void *)(v63 - 8) + 64);
LABEL_62:
                memcpy(v61, v62, v98);
                goto LABEL_89;
              }
              uint64_t v65 = type metadata accessor for PuzzleStreak();
              uint64_t v66 = *(void *)(v65 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65))
              {
LABEL_16:
                sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
                goto LABEL_88;
              }
            }
            uint64_t v153 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v61, v62, v153);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v65);
LABEL_88:
            swift_storeEnumTagMultiPayload();
LABEL_89:
            swift_storeEnumTagMultiPayload();
LABEL_90:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItem.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFEE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483631);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 16;
  if (v4 >= 0x12) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedItem.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEF)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483631;
    if (a3 >= 0x7FFFFFEF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFEF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.Kind()
{
  return &type metadata for FeedItem.Kind;
}

unsigned char *storeEnumTagSinglePayload for FeedItem.PremiumBadge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A6CF20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.LikeState()
{
  return &type metadata for FeedItem.LikeState;
}

ValueMetadata *type metadata accessor for FeedItem.SavedState()
{
  return &type metadata for FeedItem.SavedState;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedItem.SharedState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = (int *)type metadata accessor for SharedItem();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1C151631C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      *((unsigned char *)a1 + v7[5]) = *((unsigned char *)a2 + v7[5]);
      uint64_t v11 = v7[6];
      uint64_t v12 = *(void **)((char *)a2 + v11);
      *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
      uint64_t v13 = v7[7];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1C1515FDC();
      char v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      id v18 = v12;
      v17(v14, v15, v16);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

unsigned char *assignWithCopy for FeedItem.SharedState(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SharedItem();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 24))(a1, a2, v21);
      a1[v6[5]] = a2[v6[5]];
      uint64_t v22 = v6[6];
      uint64_t v23 = *(void **)&a2[v22];
      uint64_t v24 = *(void **)&a1[v22];
      *(void *)&a1[v22] = v23;
      id v25 = v23;

      uint64_t v26 = v6[7];
      uint64_t v27 = &a1[v26];
      unint64_t v28 = &a2[v26];
      uint64_t v29 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
      return a1;
    }
    sub_1BFEEB3A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  a1[v6[5]] = a2[v6[5]];
  uint64_t v12 = v6[6];
  uint64_t v13 = *(void **)&a2[v12];
  *(void *)&a1[v12] = v13;
  uint64_t v14 = v6[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_1C1515FDC();
  id v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  id v19 = v13;
  v18(v15, v16, v17);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for FeedItem.SharedState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SharedItem();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    a1[v6[5]] = a2[v6[5]];
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v9 = v6[7];
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

unsigned char *assignWithTake for FeedItem.SharedState(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SharedItem();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 40))(a1, a2, v17);
      a1[v6[5]] = a2[v6[5]];
      uint64_t v18 = v6[6];
      id v19 = *(void **)&a1[v18];
      *(void *)&a1[v18] = *(void *)&a2[v18];

      uint64_t v20 = v6[7];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
      return a1;
    }
    sub_1BFEEB3A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  a1[v6[5]] = a2[v6[5]];
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  uint64_t v12 = v6[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1C0A6D7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedItem.SharedState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0A6D868);
}

uint64_t sub_1C0A6D868(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for SharedItem();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C0A6D8E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedItem();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C0A6D950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

ValueMetadata *type metadata accessor for FeedItem.OffensiveState()
{
  return &type metadata for FeedItem.OffensiveState;
}

unsigned char *_s8NewsFeed8FeedItemO9LikeStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A6DA9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.AccessLevel()
{
  return &type metadata for FeedItem.AccessLevel;
}

ValueMetadata *type metadata accessor for FeedItem.DeletedState()
{
  return &type metadata for FeedItem.DeletedState;
}

unsigned char *_s8NewsFeed8FeedItemO10SavedStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A6DBB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.BlockedState()
{
  return &type metadata for FeedItem.BlockedState;
}

uint64_t sub_1C0A6DC14(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v67 = v7;
  uint64_t v69 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1C151D73C();
  uint64_t v56 = *(void *)(v73 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v73);
  uint64_t v66 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)v52 - v10;
  uint64_t v11 = sub_1C151D4AC();
  uint64_t v61 = *(void (**)(void, void, void))(v4 + 96);
  uint64_t v12 = *(void *)(v4 + 120);
  uint64_t v60 = *(void (**)(void, void, void))(v4 + 128);
  uint64_t v13 = *(void *)(v4 + 136);
  long long v77 = *(_OWORD *)(v4 + 80);
  uint64_t v78 = v61;
  long long v72 = *(_OWORD *)(v4 + 104);
  long long v79 = v72;
  uint64_t v80 = v12;
  uint64_t v81 = v60;
  uint64_t v82 = v13;
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
  swift_getWitnessTable();
  uint64_t v58 = sub_1C1520E6C();
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (void *)((char *)v52 - v14);
  sub_1BFEE16C8(0, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v59 = (uint64_t)v52 - v17;
  uint64_t v74 = v11;
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  int v64 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v70 = (char *)v52 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = sub_1C151B1CC();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  id v25 = (char *)v52 - v24;
  *(void *)&long long v77 = v61;
  *((void *)&v77 + 1) = v72;
  uint64_t v78 = v60;
  *(void *)&long long v79 = v13;
  sub_1C151A79C();
  sub_1C151A7AC();
  sub_1C151B1BC();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  sub_1BFC845BC(0, &qword_1EB872828);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v75, (uint64_t)&v77);
    long long v26 = v79;
    __swift_project_boxed_opaque_existential_1(&v77, v79);
    uint64_t v27 = (*(uint64_t (**)(void, void))(*((void *)&v26 + 1) + 16))(v26, *((void *)&v26 + 1));
    uint64_t v28 = sub_1C0622A50((uint64_t (*)(void))sub_1C0A6F144, (uint64_t)v2, v27);
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(v62, 1, v57);
      uint64_t v30 = v59;
      sub_1C0A6E6E4(v58, (uint64_t)v75, v59);
      uint64_t v32 = v71;
      uint64_t v33 = v74;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v30, 0, 1, v74);
      uint64_t v61 = *(void (**)(void, void, void))(v32 + 32);
      v61(v70, v30, v33);
      v52[2] = *(void *)((char *)v3 + *(void *)(*v3 + 176));
      uint64_t v34 = v56 + 16;
      uint64_t v60 = *(void (**)(void, void, void))(v56 + 16);
      uint64_t v35 = *(unsigned __int8 *)(v56 + 80);
      v52[1] = v28;
      uint64_t v36 = v28 + ((v35 + 32) & ~v35);
      uint64_t v58 = *(void *)(v56 + 72);
      uint64_t v62 = v32 + 32;
      uint64_t v57 = (void *)(v32 + 16);
      uint64_t v59 = v35;
      uint64_t v56 = (v35 + 16) & ~v35;
      v55 += v56;
      long long v54 = (void (**)(uint64_t, char *, uint64_t))(v34 + 16);
      uint64_t v53 = (void (**)(uint64_t, uint64_t))(v34 - 8);
      uint64_t v37 = (uint64_t)v69;
      uint64_t v38 = v73;
      uint64_t v39 = (uint64_t)v68;
      long long v40 = v66;
      do
      {
        *(void *)&long long v72 = v29;
        uint64_t v41 = (void (*)(char *, uint64_t, uint64_t))v60;
        v60(v39, v36, v38);
        v41(v40, v39, v38);
        uint64_t v42 = v71;
        id v43 = v64;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v64, v70, v33);
        sub_1BFEEB134(v63, v37, type metadata accessor for FeedHeadline);
        unint64_t v44 = (v55 + *(unsigned __int8 *)(v42 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        uint64_t v45 = v34;
        uint64_t v46 = v6;
        unint64_t v47 = (v65 + *(unsigned __int8 *)(v6 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        uint64_t v48 = swift_allocObject();
        (*v54)(v48 + v56, v40, v73);
        unint64_t v49 = v48 + v44;
        uint64_t v50 = v72;
        uint64_t v37 = (uint64_t)v69;
        v61(v49, v43, v74);
        uint64_t v51 = v48 + v47;
        uint64_t v6 = v46;
        uint64_t v34 = v45;
        uint64_t v39 = (uint64_t)v68;
        uint64_t v38 = v73;
        sub_1BFEE3350(v37, v51, type metadata accessor for FeedHeadline);
        FeedPrerollAdRequester.scheduleRequest(for:createContext:)(v39, (uint64_t)sub_1C0A6F4F8, v48);
        uint64_t v33 = v74;
        swift_release();
        (*v53)(v39, v38);
        v36 += v58;
        uint64_t v29 = v50 - 1;
      }
      while (v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v33);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
  }
  else
  {
    uint64_t v76 = 0;
    memset(v75, 0, sizeof(v75));
    return sub_1BFE4D118((uint64_t)v75, &qword_1EB886070, &qword_1EB872828);
  }
}

BOOL sub_1C0A6E610()
{
  sub_1C151D72C();
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_bridgeObjectRelease();
  swift_release();
  return (v1 & 1) == 0;
}

uint64_t sub_1C0A6E6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_1C0A6E7B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v26 = a2;
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v37 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151D4AC();
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  id v25 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151D73C();
  uint64_t v23 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[4];
  uint64_t v32 = a1[3];
  uint64_t v33 = v15;
  uint64_t v34 = __swift_project_boxed_opaque_existential_1(a1, v32);
  uint64_t v31 = sub_1C151D0FC();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v26, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v8);
  sub_1BFEEB134(v28, v37, type metadata accessor for FeedHeadline);
  sub_1BFC66384((uint64_t)a1, (uint64_t)v36);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v17 = (v13 + *(unsigned __int8 *)(v9 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v29 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v19 = (v30 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v20 + v16, v14, v23);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v17, v25, v24);
  sub_1BFEE3350(v37, v20 + v18, type metadata accessor for FeedHeadline);
  sub_1BFC773DC(v36, v20 + v19);
  sub_1C151D80C();
  sub_1C151D62C();
  sub_1C008E3A0(&qword_1EB896BE0, MEMORY[0x1E4F7AE40]);
  sub_1C151D7CC();
  swift_release();
  return swift_release();
}

uint64_t sub_1C0A6EB84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v28 = a5;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v6 = sub_1C151D4FC();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v33 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151D51C();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151D35C();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151D30C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C151D12C();
  uint64_t v31 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151D70C();
  sub_1C151D70C();
  sub_1C151D11C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C008E3A0(&qword_1EA1A2E90, MEMORY[0x1E4F7A808]);
  uint64_t v32 = v17;
  sub_1C151D7EC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C151D4AC();
  sub_1C008E3A0(&qword_1EB871718, MEMORY[0x1E4F7AC08]);
  sub_1C151D7EC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v20 = v30;
  swift_unknownObjectRetain();
  sub_1C151D2FC();
  sub_1C008E3A0(&qword_1EA1A2E98, MEMORY[0x1E4F7A890]);
  sub_1C151D7EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (objc_msgSend(*(id *)(v20 + 40), sel_sourceChannel))
  {
    __swift_project_boxed_opaque_existential_1(v28, v28[3]);
    swift_unknownObjectRetain();
    sub_1C151D34C();
    sub_1C008E3A0(&qword_1EA1A2EA0, MEMORY[0x1E4F7A8E8]);
    uint64_t v21 = v27;
    sub_1C151D7EC();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v21);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v33, *MEMORY[0x1E4F7AC28], v36);
  uint64_t v22 = v34;
  sub_1C151D50C();
  sub_1C008E3A0(&qword_1EB871730, MEMORY[0x1E4F7AC60]);
  uint64_t v23 = v38;
  sub_1C151D7EC();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v19, v32);
}

BOOL sub_1C0A6F144()
{
  return sub_1C0A6E610();
}

uint64_t sub_1C0A6F164()
{
  uint64_t v1 = sub_1C151D73C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_1C151D4AC();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v10 = *(unsigned __int8 *)(*((void *)v9 - 1) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  uint64_t v11 = v0 + ((v7 + v8 + v10) & ~v10);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v12 = v9[10];
  uint64_t v13 = v11 + v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v14 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);

    uint64_t v16 = v13 + *(int *)(v14 + 28);
    uint64_t v17 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = v11 + v9[11];
  uint64_t v19 = sub_1C151D2DC();
  uint64_t v20 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  if (*(void *)(v11 + v9[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v11 + v9[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_1C0A6F4F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1C151D73C() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1C151D4AC() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(type metadata accessor for FeedHeadline(0) - 8);
  return sub_1C0A6E7B4(a1, v2 + v6, v2 + v9, v2 + ((v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2);
}

uint64_t sub_1C0A6F634()
{
  uint64_t v1 = sub_1C151D73C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_1C151D4AC();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v10 = *(unsigned __int8 *)(*((void *)v9 - 1) + 80);
  unint64_t v11 = (v7 + v8 + v10) & ~v10;
  uint64_t v23 = *(void *)(*((void *)v9 - 1) + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  uint64_t v12 = v0 + v11;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v13 = v9[10];
  unint64_t v14 = v0 + v11 + v13 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v15 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_1C151631C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);

    unint64_t v17 = v14 + *(int *)(v15 + 28);
    uint64_t v18 = sub_1C1515FDC();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  uint64_t v19 = v12 + v9[11];
  uint64_t v20 = sub_1C151D2DC();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  if (*(void *)(v12 + v9[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v12 + v9[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }

  __swift_destroy_boxed_opaque_existential_1(v0 + ((v23 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_1C0A6F9DC(void *a1)
{
  uint64_t v3 = *(void *)(sub_1C151D73C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1C151D4AC() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(type metadata accessor for FeedHeadline(0) - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (void *)(v1 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C0A6EB84(a1, v1 + v4, v1 + v7, v1 + v10, v11);
}

uint64_t sub_1C0A6FB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C151B0DC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCF2D74(v3, (uint64_t)v45);
  sub_1BFCF2D74((uint64_t)v45, (uint64_t)v46);
  if (sub_1C00F5F20((uint64_t)v46) == 1)
  {
    uint64_t v10 = sub_1C00F5F2C((uint64_t)v46);
    char v11 = *(unsigned char *)(v10 + 8);
    *(void *)&long long v36 = *(void *)v10;
    sub_1BFCF2D74((uint64_t)v45, (uint64_t)v44);
    sub_1C00F5F2C((uint64_t)v44);
    uint64_t v12 = swift_retain();
    Class v13 = FormatColor.color.getter(v12);
    id v14 = [(objc_class *)v13 resolvedColorWithTraitCollection:a1];

    sub_1C0A70EFC((uint64_t)v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF92710);
    LOBYTE(v36) = v11;
    int v15 = sub_1C0100A34();
    *(void *)a2 = v14;
    *(_DWORD *)(a2 + 8) = v15;
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4FAD050];
  }
  else
  {
    uint64_t v17 = sub_1C00F5F2C((uint64_t)v46);
    sub_1C00F6034(v17, (uint64_t)v44);
    int v18 = sub_1C00F6090((uint64_t)v44);
    uint64_t v19 = sub_1C00F609C((uint64_t)v44);
    if (v18 == 1)
    {
      long long v20 = *(_OWORD *)(v19 + 80);
      long long v40 = *(_OWORD *)(v19 + 64);
      long long v41 = v20;
      long long v21 = *(_OWORD *)(v19 + 112);
      long long v42 = *(_OWORD *)(v19 + 96);
      long long v43 = v21;
      long long v22 = *(_OWORD *)(v19 + 16);
      long long v36 = *(_OWORD *)v19;
      long long v37 = v22;
      long long v23 = *(_OWORD *)(v19 + 48);
      long long v38 = *(_OWORD *)(v19 + 32);
      long long v39 = v23;
      sub_1C0CC330C(a2);
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAD7D0];
    }
    else
    {
      long long v35 = *(_OWORD *)(v19 + 16);
      uint64_t v25 = *(void *)(v19 + 32);
      uint64_t v26 = *(void *)(v19 + 40);
      sub_1C0A70EFC((uint64_t)v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      uint64_t v27 = swift_bridgeObjectRetain();
      sub_1C024C2BC(v27);
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v9 = v35;
      *((void *)v9 + 2) = v25;
      *((void *)v9 + 3) = v26;
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAC408], v6);
      swift_bridgeObjectRetain();
      sub_1C151B09C();
      sub_1C0A70EFC((uint64_t)v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF92710);
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAD7C8];
    }
    uint64_t v28 = *v24;
    uint64_t v29 = sub_1C151CA6C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(a2, v28, v29);
    sub_1C0A70E8C();
    uint64_t v31 = *(int *)(v30 + 48);
    LOBYTE(v36) = *(unsigned char *)(v17 + 128);
    *(_DWORD *)(a2 + v31) = sub_1C0100A34();
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4FAD058];
  }
  uint64_t v32 = *v16;
  uint64_t v33 = sub_1C151BF2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(a2, v32, v33);
}

uint64_t sub_1C0A6FEB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentBlend.GradientData.init(from:)(a1, a2);
}

uint64_t sub_1C0A6FED0(void *a1)
{
  return FormatImageAdjustmentBlend.GradientData.encode(to:)(a1);
}

uint64_t _s8NewsFeed26FormatImageAdjustmentBlendO12GradientDataV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C00F6034(a1, (uint64_t)v14);
  char v4 = *(unsigned char *)(a1 + 128);
  sub_1C00F6034(a2, (uint64_t)v15);
  char v5 = *(unsigned char *)(a2 + 128);
  sub_1C00F6034((uint64_t)v14, (uint64_t)v13);
  sub_1C00F6034((uint64_t)v15, (uint64_t)v12);
  if (_s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v12))
  {
    v13[0] = v4;
    v12[0] = v5;
    uint64_t v6 = FormatBlendMode.rawValue.getter();
    uint64_t v8 = v7;
    if (v6 == FormatBlendMode.rawValue.getter() && v8 == v9) {
      char v10 = 1;
    }
    else {
      char v10 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t _s8NewsFeed26FormatImageAdjustmentBlendO9ColorDataV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  char v4 = *(unsigned char *)(a2 + 8);
  unint64_t v11 = *(void *)a2;
  uint64_t v12 = v2;
  if (static FormatColor.== infix(_:_:)(&v12, &v11))
  {
    LOBYTE(v12) = v3;
    LOBYTE(v11) = v4;
    uint64_t v5 = FormatBlendMode.rawValue.getter();
    uint64_t v7 = v6;
    if (v5 == FormatBlendMode.rawValue.getter() && v7 == v8) {
      char v9 = 1;
    }
    else {
      char v9 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t _s8NewsFeed26FormatImageAdjustmentBlendO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1BFCF2D74(a1, (uint64_t)v29);
  sub_1BFCF2D74(a2, (uint64_t)v30);
  sub_1BFCF2D74((uint64_t)v29, (uint64_t)v31);
  sub_1BFCF2D74((uint64_t)v30, (uint64_t)&v32);
  sub_1BFCF2D74((uint64_t)v29, (uint64_t)v33);
  if (sub_1C00F5F20((uint64_t)v33) == 1)
  {
    uint64_t v3 = sub_1C00F5F2C((uint64_t)v33);
    uint64_t v4 = *(void *)v3;
    char v5 = *(unsigned char *)(v3 + 8);
    sub_1BFCF2D74((uint64_t)v30, (uint64_t)v28);
    int v6 = sub_1C00F5F20((uint64_t)v28);
    uint64_t v7 = sub_1C00F5F2C((uint64_t)v28);
    if (v6 == 1)
    {
      uint64_t v8 = *(void *)v7;
      char v9 = *(unsigned char *)(v7 + 8);
      *(void *)&v26[0] = v4;
      BYTE8(v26[0]) = v5;
      *(void *)&v24[0] = v8;
      BYTE8(v24[0]) = v9;
      sub_1C0A70EFC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      sub_1C0A70EFC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      sub_1C0A70EFC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      sub_1C0A70EFC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      char v10 = _s8NewsFeed26FormatImageAdjustmentBlendO9ColorDataV2eeoiySbAE_AEtFZ_0((uint64_t)v26, (uint64_t)v24);
LABEL_7:
      char v14 = v10;
      sub_1C00F5F3C((uint64_t)v31);
      sub_1C0A70EFC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF92710);
      sub_1C0A70EFC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF92710);
      return v14 & 1;
    }
  }
  else
  {
    uint64_t v11 = sub_1C00F5F2C((uint64_t)v33);
    sub_1BFCF2D74((uint64_t)v30, (uint64_t)v28);
    int v12 = sub_1C00F5F20((uint64_t)v28);
    uint64_t v13 = sub_1C00F5F2C((uint64_t)v28);
    if (v12 != 1)
    {
      long long v15 = *(_OWORD *)(v11 + 112);
      v26[6] = *(_OWORD *)(v11 + 96);
      v26[7] = v15;
      char v27 = *(unsigned char *)(v11 + 128);
      long long v16 = *(_OWORD *)(v11 + 48);
      v26[2] = *(_OWORD *)(v11 + 32);
      v26[3] = v16;
      long long v17 = *(_OWORD *)(v11 + 80);
      v26[4] = *(_OWORD *)(v11 + 64);
      v26[5] = v17;
      long long v18 = *(_OWORD *)(v11 + 16);
      v26[0] = *(_OWORD *)v11;
      v26[1] = v18;
      long long v19 = *(_OWORD *)(v13 + 112);
      uint64_t v24[6] = *(_OWORD *)(v13 + 96);
      v24[7] = v19;
      char v25 = *(unsigned char *)(v13 + 128);
      long long v20 = *(_OWORD *)(v13 + 48);
      v24[2] = *(_OWORD *)(v13 + 32);
      v24[3] = v20;
      long long v21 = *(_OWORD *)(v13 + 80);
      v24[4] = *(_OWORD *)(v13 + 64);
      v24[5] = v21;
      long long v22 = *(_OWORD *)(v13 + 16);
      v24[0] = *(_OWORD *)v13;
      v24[1] = v22;
      sub_1C0A70EFC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      sub_1C0A70EFC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      sub_1C0A70EFC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      sub_1C0A70EFC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
      char v10 = _s8NewsFeed26FormatImageAdjustmentBlendO12GradientDataV2eeoiySbAE_AEtFZ_0((uint64_t)v26, (uint64_t)v24);
      goto LABEL_7;
    }
  }
  sub_1C0A70EFC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
  sub_1C0A70EFC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF926DC);
  sub_1C00F5F3C((uint64_t)v31);
  char v14 = 0;
  return v14 & 1;
}

unint64_t sub_1C0A7031C(uint64_t a1)
{
  unint64_t result = sub_1C0A70344();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A70344()
{
  unint64_t result = qword_1EA1A2EA8;
  if (!qword_1EA1A2EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2EA8);
  }
  return result;
}

uint64_t sub_1C0A70398(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A705F8(a1, a2, a3, (uint64_t (*)(void))sub_1C088E80C, (uint64_t (*)(void))sub_1C08F92B8, (uint64_t (*)(void))sub_1C0A703D8);
}

unint64_t sub_1C0A703D8()
{
  unint64_t result = qword_1EA1A2EB0;
  if (!qword_1EA1A2EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2EB0);
  }
  return result;
}

unint64_t sub_1C0A7042C(uint64_t a1)
{
  unint64_t result = sub_1C0A70454();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A70454()
{
  unint64_t result = qword_1EA1A2EB8;
  if (!qword_1EA1A2EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2EB8);
  }
  return result;
}

uint64_t sub_1C0A704A8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A705F8(a1, a2, a3, (uint64_t (*)(void))sub_1BFCEA928, (uint64_t (*)(void))sub_1BFCC0078, (uint64_t (*)(void))sub_1C0A704E8);
}

unint64_t sub_1C0A704E8()
{
  unint64_t result = qword_1EA1A2EC0;
  if (!qword_1EA1A2EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2EC0);
  }
  return result;
}

unint64_t sub_1C0A7053C(uint64_t a1)
{
  unint64_t result = sub_1C0A70564();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A70564()
{
  unint64_t result = qword_1EA1A2EC8;
  if (!qword_1EA1A2EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2EC8);
  }
  return result;
}

uint64_t sub_1C0A705B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0A705F8(a1, a2, a3, (uint64_t (*)(void))sub_1BFD1F888, (uint64_t (*)(void))sub_1BFCF2DD0, (uint64_t (*)(void))sub_1C0A7064C);
}

uint64_t sub_1C0A705F8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A7064C()
{
  unint64_t result = qword_1EA1A2ED0;
  if (!qword_1EA1A2ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2ED0);
  }
  return result;
}

uint64_t destroy for FormatImageAdjustmentBlend(uint64_t a1)
{
  return sub_1BFF92710(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
}

uint64_t initializeWithCopy for FormatImageAdjustmentBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  char v20 = *(unsigned char *)(a2 + 128);
  sub_1BFF926DC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(unsigned char *)(a1 + 128) = v20;
  return a1;
}

uint64_t assignWithCopy for FormatImageAdjustmentBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v27 = *(void *)(a2 + 72);
  uint64_t v28 = *(void *)(a2 + 80);
  uint64_t v29 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v31 = *(void *)(a2 + 104);
  uint64_t v32 = *(void *)(a2 + 112);
  uint64_t v33 = *(void *)(a2 + 120);
  char v34 = *(unsigned char *)(a2 + 128);
  sub_1BFF926DC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 120);
  char v25 = *(unsigned char *)(a1 + 128);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v27;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v29;
  *(void *)(a1 + 96) = v30;
  *(void *)(a1 + 104) = v31;
  *(void *)(a1 + 112) = v32;
  *(void *)(a1 + 120) = v33;
  *(unsigned char *)(a1 + 128) = v34;
  sub_1BFF92710(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24, v25);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustmentBlend(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 128);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 120);
  char v17 = *(unsigned char *)(a1 + 128);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(unsigned char *)(a1 + 128) = v3;
  sub_1BFF92710(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  return a1;
}

uint64_t sub_1C0A709D0(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 128) & 0xF | (a2 << 7);
  *(void *)(result + 104) &= 0x8000000000000001;
  *(unsigned char *)(result + 128) = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentBlend()
{
  return &type metadata for FormatImageAdjustmentBlend;
}

uint64_t destroy for FormatDirectionalGradient(uint64_t *a1)
{
  return sub_1C00F5DC0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
}

uint64_t initializeWithCopy for FormatImageAdjustmentBlend.GradientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v18 = *(void *)(a2 + 104);
  uint64_t v19 = *(void *)(a2 + 112);
  uint64_t v20 = *(void *)(a2 + 120);
  sub_1C00F5C0C(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v19;
  *(void *)(a1 + 120) = v20;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t assignWithCopy for FormatImageAdjustmentBlend.GradientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  uint64_t v28 = *(void *)(a2 + 96);
  uint64_t v29 = *(void *)(a2 + 104);
  uint64_t v30 = *(void *)(a2 + 112);
  uint64_t v31 = *(void *)(a2 + 120);
  sub_1C00F5C0C(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28, v29);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v24;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(void *)(a1 + 96) = v28;
  *(void *)(a1 + 104) = v29;
  *(void *)(a1 + 112) = v30;
  *(void *)(a1 + 120) = v31;
  sub_1C00F5DC0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1));
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustmentBlend.GradientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  long long v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  long long v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
  sub_1C00F5DC0(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1));
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

double storeEnumTagSinglePayload for FormatImageAdjustmentBlend.GradientData(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 120) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 128) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 2 * -a2;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentBlend.GradientData()
{
  return &type metadata for FormatImageAdjustmentBlend.GradientData;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatImageAdjustmentBlend.ColorData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatImageAdjustmentBlend.ColorData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustmentBlend.ColorData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentBlend.ColorData()
{
  return &type metadata for FormatImageAdjustmentBlend.ColorData;
}

void sub_1C0A70E8C()
{
  if (!qword_1EA1A2ED8)
  {
    sub_1C151CA6C();
    type metadata accessor for CGBlendMode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A2ED8);
    }
  }
}

uint64_t sub_1C0A70EFC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

id sub_1C0A70F6C()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem;
  char v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem];
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    uint64_t v5 = v0;
    uint64_t v6 = (void *)sub_1C151E5EC();
    if (ObjectType)
    {
      uint64_t v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      uint64_t v8 = *(void *)(ObjectType - 8);
      __n128 v9 = MEMORY[0x1F4188790](v7);
      uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      uint64_t v12 = sub_1C1520A7C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      uint64_t v12 = 0;
    }
    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 2, v12, sel_doCreatePackage, v18[0]);

    swift_unknownObjectRelease();
    long long v15 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v14;
    id v3 = v14;

    char v2 = 0;
  }
  id v16 = v2;
  return v3;
}

void sub_1C0A71154()
{
  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  char v2 = v1;
  id v3 = self;
  id v4 = objc_msgSend(v3, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v0, sel_navigationItem);
  id v6 = objc_msgSend(v3, sel_systemBackgroundColor);
  sub_1C149EA4C(v5, (uint64_t)v6);

  id v7 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v8 = (void *)sub_1C151E5EC();
  objc_msgSend(v7, sel_setTitle_, v8);

  id v9 = objc_msgSend(v0, sel_navigationItem);
  sub_1C0A74E20(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C15320E0;
  uint64_t v11 = (void *)sub_1C151E5EC();
  id v12 = objc_msgSend(self, sel_systemImageNamed_, v11);

  if (!v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v14 = v0;
  id v15 = objc_msgSend(v13, sel_initWithImage_style_target_action_, v12, 0, v14, sel_doDismissView);

  *(void *)(v10 + 32) = v15;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  id v16 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setRightBarButtonItems_, v16);

  id v17 = sub_1C0A70F6C();
  id v18 = objc_msgSend(v3, sel_systemBlueColor);
  objc_msgSend(v17, sel_setTintColor_, v18);

  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C15320F0;
  *(void *)(v19 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(void *)(v19 + 40) = sub_1C0A70F6C();
  sub_1C151EBEC();
  long long v20 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setToolbarItems_, v20);

  long long v21 = *(void **)&v14[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_tableView];
  objc_msgSend(v21, sel_setDataSource_, v14);
  objc_msgSend(v21, sel_setDelegate_, v14);
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v21, sel_setTableFooterView_, v22);

  type metadata accessor for DebugFormatCreatePackageTableViewCell();
  sub_1C151F26C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
  sub_1C151F26C();
  type metadata accessor for DebugFormatMarkdownHeaderFooterView();
  sub_1C151F25C();
  id v23 = objc_msgSend(v14, sel_view);
  if (v23)
  {
    uint64_t v24 = v23;
    objc_msgSend(v23, sel_addSubview_, v21);

    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v14, sel_doEndEditing);
    objc_msgSend(v25, sel_setCancelsTouchesInView_, 0);
    objc_msgSend(v21, sel_addGestureRecognizer_, v25);
    id v26 = sub_1C0A70F6C();
    objc_msgSend(v26, sel_setEnabled_, 0);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1C0A717B0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v19 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    swift_bridgeObjectRetain();
    unint64_t v3 = 0;
    uint64_t v4 = v2 - 1;
    uint64_t v5 = v1 + 72;
    LOBYTE(v6) = 1;
    uint64_t v17 = v4;
    uint64_t v18 = v1;
    while (1)
    {
      if (v6)
      {
        uint64_t v7 = *(void *)(v5 - 32);
        uint64_t v20 = *(void *)(v5 - 40);
        int v21 = *(unsigned __int8 *)(v5 + 8);
        swift_beginAccess();
        uint64_t v8 = *v19;
        uint64_t v9 = *(void *)(*v19 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v10 = sub_1BFEF2D8C(v20, v7);
          if (v11)
          {
            id v12 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v10);
            uint64_t v13 = *v12;
            unint64_t v14 = v12[1];
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v15 = HIBYTE(v14) & 0xF;
            if ((v14 & 0x2000000000000000) == 0) {
              uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
            }
            if (!v15)
            {
              uint64_t v6 = 0;
LABEL_19:
              swift_bridgeObjectRelease();
              goto LABEL_20;
            }
            uint64_t v6 = 1;
            uint64_t v4 = v17;
            uint64_t v1 = v18;
            if (v17 == v3) {
              goto LABEL_19;
            }
            goto LABEL_5;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v4 = v17;
        uint64_t v1 = v18;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = v21 ^ 1u;
      }
      else
      {
        uint64_t v6 = 0;
      }
      if (v4 == v3) {
        goto LABEL_19;
      }
LABEL_5:
      ++v3;
      v5 += 96;
      if (v3 >= *(void *)(v1 + 16))
      {
        __break(1u);
        return;
      }
    }
  }
  uint64_t v6 = 1;
LABEL_20:
  id v16 = sub_1C0A70F6C();
  objc_msgSend(v16, sel_setEnabled_, v6);
}

void sub_1C0A71A90()
{
  uint64_t v1 = v0;
  v77[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1C151526C();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v66 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 24);
  uint64_t v70 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 16);
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = &qword_1EA1A2000;
  if (v8)
  {
    v63[1] = v4;
    uint64_t v64 = v6;
    uint64_t v65 = v1;
    uint64_t v74 = (id *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63[0] = v7;
    unint64_t v10 = (void *)(v7 + 72);
    while (1)
    {
      uint64_t v76 = v8;
      uint64_t v12 = *(v10 - 5);
      uint64_t v11 = *(v10 - 4);
      uint64_t v13 = v10[3];
      uint64_t v73 = v10[2];
      uint64_t v14 = v10[4];
      uint64_t v15 = v10[6];
      id v16 = v74;
      swift_beginAccess();
      uint64_t v17 = *v16;
      uint64_t v18 = *((void *)*v16 + 2);
      uint64_t v75 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_1BFEF2D8C(v12, v11);
        uint64_t v20 = v13;
        if (v21)
        {
          uint64_t v71 = v12;
          uint64_t v72 = v14;
          id v22 = (uint64_t *)(v17[7] + 16 * v19);
          uint64_t v24 = *v22;
          unint64_t v23 = v22[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v13)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0) {
              uint64_t v25 = v24 & 0xFFFFFFFFFFFFLL;
            }
            if (v25)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_6;
            }
            id v26 = v74;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v77[0] = *v26;
            uint64_t v28 = v77[0];
            *id v26 = (id)0x8000000000000000;
            unint64_t v30 = sub_1BFEF2D8C(v71, v11);
            uint64_t v31 = v28[2];
            BOOL v32 = (v29 & 1) == 0;
            uint64_t v33 = v31 + v32;
            if (__OFADD__(v31, v32))
            {
              __break(1u);
LABEL_36:
              __break(1u);
            }
            char v34 = v29;
            if (v28[3] >= v33)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                long long v37 = v77[0];
                if ((v29 & 1) == 0) {
                  goto LABEL_25;
                }
              }
              else
              {
                sub_1C106AFB0();
                long long v37 = v77[0];
                if ((v34 & 1) == 0) {
                  goto LABEL_25;
                }
              }
            }
            else
            {
              sub_1C105548C(v33, isUniquelyReferenced_nonNull_native);
              unint64_t v35 = sub_1BFEF2D8C(v71, v11);
              if ((v34 & 1) != (v36 & 1))
              {
                sub_1C1520CFC();
                __break(1u);
                return;
              }
              unint64_t v30 = v35;
              long long v37 = v77[0];
              if ((v34 & 1) == 0)
              {
LABEL_25:
                v37[(v30 >> 6) + 8] |= 1 << v30;
                long long v39 = (void *)(v37[6] + 16 * v30);
                *long long v39 = v71;
                v39[1] = v11;
                long long v40 = (void *)(v37[7] + 16 * v30);
                void *v40 = v73;
                v40[1] = v20;
                uint64_t v41 = v37[2];
                BOOL v42 = __OFADD__(v41, 1);
                uint64_t v43 = v41 + 1;
                if (v42) {
                  goto LABEL_36;
                }
                v37[2] = v43;
                swift_bridgeObjectRetain();
LABEL_27:
                *uint64_t v74 = v37;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_endAccess();
LABEL_28:
                swift_bridgeObjectRelease();
                goto LABEL_5;
              }
            }
            long long v38 = (void *)(v37[7] + 16 * v30);
            swift_bridgeObjectRelease();
            *long long v38 = v73;
            v38[1] = v20;
            goto LABEL_27;
          }
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      v10 += 12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v76 - 1;
      if (v76 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v64;
        uint64_t v1 = v65;
        uint64_t v9 = &qword_1EA1A2000;
        goto LABEL_31;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_31:
  unint64_t v44 = (void **)(v1 + v9[481]);
  swift_beginAccess();
  uint64_t v45 = *v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  v77[0] = v45;
  uint64_t v47 = v70;
  sub_1C1065BB8(v70, v6, 0x6574616C706D6574, 0xE800000000000000, v46);
  swift_bridgeObjectRelease();
  uint64_t v48 = self;
  unint64_t v49 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  v77[0] = 0;
  id v50 = objc_msgSend(v48, sel_dataWithJSONObject_options_error_, v49, 0, v77);

  id v51 = v77[0];
  if (v50)
  {
    uint64_t v52 = sub_1C151606C();
    unint64_t v54 = v53;

    sub_1C1515EDC();
    uint64_t v55 = v66;
    sub_1C151522C();
    sub_1C15151DC();
    sub_1C151525C();
    uint64_t v76 = v52;
    sub_1BFE95820(v52, v54);
    sub_1C151524C();
    id v56 = sub_1C0A70F6C();
    objc_msgSend(v56, sel_setEnabled_, 0);

    MEMORY[0x1F4188790](v57);
    v63[-2] = v1;
    v63[-1] = v55;
    sub_1C151932C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    uint64_t v58 = (void *)sub_1C151F56C();
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v47;
    *(void *)(v59 + 24) = v6;
    sub_1C151901C();
    swift_release();

    swift_release();
    uint64_t v60 = (void *)sub_1C151F56C();
    sub_1C151904C();
    sub_1BFE95664(v76, v54);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v69);
  }
  else
  {
    uint64_t v61 = v51;
    swift_bridgeObjectRelease();
    uint64_t v62 = (void *)sub_1C1515D3C();

    swift_willThrow();
  }
}

uint64_t sub_1C0A722B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151526C();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_debugFormatService);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_1C0A74E20(0, &qword_1EA1A2F50, (uint64_t)&type metadata for DebugFormatCreatePackageResponse, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v10 = sub_1C151911C();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return v10;
}

uint64_t sub_1C0A72414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a3;
  uint64_t v58 = sub_1C151E16C();
  uint64_t v64 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1C151E1DC();
  uint64_t v63 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v55 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1C151631C();
  uint64_t v60 = *(void *)(v65 - 8);
  uint64_t v11 = *(void *)(v60 + 64);
  MEMORY[0x1F4188790](v65);
  unint64_t v54 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v59 = (char *)v41 - v13;
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v16 = a1[2];
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000011;
  *((void *)&aBlock + 1) = 0x80000001C1619820;
  swift_bridgeObjectRetain();
  uint64_t v44 = v15;
  sub_1C151E80C();
  uint64_t v45 = v14;
  swift_bridgeObjectRelease();
  sub_1C02306F8((void *)2, 0, 0, aBlock, *((uint64_t *)&aBlock + 1));
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    void v41[2] = a4;
    uint64_t v42 = a2;
    uint64_t v43 = v5;
    uint64_t v18 = v60;
    uint64_t v53 = v60 + 16;
    uint64_t v52 = v11 + 7;
    uint64_t v51 = v60 + 32;
    id v50 = &v68;
    unint64_t v49 = (void (**)(char *, uint64_t))(v64 + 8);
    uint64_t v48 = (void (**)(char *, uint64_t))(v63 + 8);
    uint64_t v47 = v60 + 8;
    swift_bridgeObjectRetain();
    v41[1] = v16;
    uint64_t v19 = v16 + 40;
    uint64_t v20 = v65;
    char v21 = v59;
    do
    {
      uint64_t v64 = v17;
      uint64_t v22 = qword_1EA2B4EF0;
      *(void *)&long long aBlock = 0x656C69662077654ELL;
      *((void *)&aBlock + 1) = 0xEA0000000000203ALL;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v23 = *((void *)&aBlock + 1);
      uint64_t v61 = aBlock;
      sub_1C151630C();
      uint64_t v63 = *(void *)(v22 + 40);
      uint64_t v24 = v54;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v54, v21, v20);
      unint64_t v25 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      unint64_t v26 = (v52 + v25) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v29 = swift_allocObject();
      unint64_t v30 = v29 + v25;
      uint64_t v18 = v60;
      (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v30, v24, v65);
      uint64_t v31 = (void *)(v29 + v26);
      *uint64_t v31 = v61;
      v31[1] = v23;
      uint64_t v62 = v23;
      *(void *)(v29 + v27) = 2;
      char v21 = v59;
      *(void *)(v29 + v28) = v22;
      *((void *)&v69 + 1) = sub_1C02313C8;
      uint64_t v70 = (void (*)())v29;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v68 = sub_1BFC9FC68;
      *(void *)&long long v69 = &block_descriptor_39;
      BOOL v32 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v33 = v55;
      sub_1C151E19C();
      uint64_t v66 = MEMORY[0x1E4FBC860];
      sub_1C0A74684((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
      sub_1C0A746CC(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1BFD32AD8();
      unint64_t v35 = v57;
      uint64_t v34 = v58;
      sub_1C151FFBC();
      MEMORY[0x1C18C70C0](0, v33, v35, v32);
      _Block_release(v32);
      (*v49)(v35, v34);
      char v36 = v33;
      uint64_t v20 = v65;
      (*v48)(v36, v56);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v20);
      swift_bridgeObjectRelease();
      swift_release();
      v19 += 16;
      uint64_t v17 = v64 - 1;
    }
    while (v64 != 1);
    swift_bridgeObjectRelease();
    a2 = v42;
  }
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  strcpy((char *)&aBlock, "Created new ");
  BYTE13(aBlock) = 0;
  HIWORD(aBlock) = -5120;
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  long long v37 = aBlock;
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  LOBYTE(aBlock) = 0;
  *((void *)&aBlock + 1) = 0x73736563637553;
  uint64_t v68 = (uint64_t (*)(uint64_t))0xE700000000000000;
  long long v69 = v37;
  uint64_t v70 = sub_1C0A74730;
  uint64_t v71 = v38;
  long long v39 = (void *)(*(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editor)
                 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  if (*v39)
  {
    swift_retain();
    sub_1C0D6A240(&aBlock);
    swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C0A72BDC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_1C0A72C40(void *a1, uint64_t a2)
{
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8(a1, 0, 0, 0xD000000000000018, 0x80000001C1619800);
  *(void *)&long long v6 = 0;
  sub_1C017F734();
  sub_1C152036C();
  *((void *)&v6 + 1) = 0x64656C696146;
  unint64_t v7 = 0xE600000000000000;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v4 = (void *)(*(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editor)
                + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  if (*v4)
  {
    swift_retain();
    sub_1C0D6A240(&v6);
    swift_release();
  }
  id v5 = sub_1C0A70F6C();
  objc_msgSend(v5, sel_setEnabled_, 1, a1);
  swift_bridgeObjectRelease();
}

uint64_t sub_1C0A72F24()
{
  return type metadata accessor for DebugFormatCreatePackageViewController();
}

uint64_t type metadata accessor for DebugFormatCreatePackageViewController()
{
  uint64_t result = qword_1EA1A2F38;
  if (!qword_1EA1A2F38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0A72F78()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C0A730A4()
{
  uint64_t v1 = sub_1C151677C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A746CC(0, (unint64_t *)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v82 - v6;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_sections);
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (result >= *(void *)(v8 + 16))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v85 = v2;
  uint64_t v10 = v8 + 104 * result;
  long long v12 = *(_OWORD *)(v10 + 48);
  long long v11 = *(_OWORD *)(v10 + 64);
  long long v91 = *(_OWORD *)(v10 + 32);
  uint64_t v13 = *(void *)(v10 + 128);
  long long v15 = *(_OWORD *)(v10 + 96);
  long long v14 = *(_OWORD *)(v10 + 112);
  long long v94 = *(_OWORD *)(v10 + 80);
  long long v95 = v15;
  long long v92 = v12;
  long long v93 = v11;
  long long v96 = v14;
  uint64_t v97 = v13;
  uint64_t v87 = *((void *)&v91 + 1);
  uint64_t v16 = v91;
  uint64_t v17 = v15;
  uint64_t v84 = *((void *)&v94 + 1);
  sub_1C0A74298((uint64_t)&v91);
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (result < *(void *)(v13 + 16))
  {
    uint64_t v86 = v16;
    uint64_t v18 = v13 + 24 * result;
    uint64_t v20 = *(void *)(v18 + 32);
    unint64_t v19 = *(void *)(v18 + 40);
    LOBYTE(v18) = *(unsigned char *)(v18 + 48);
    uint64_t v88 = v0;
    if (v18)
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
      swift_bridgeObjectRetain_n();
      char v21 = (void *)sub_1C151F24C();
      id v22 = objc_msgSend(v21, sel_textLabel);
      if (v22)
      {
        uint64_t v23 = v22;
        objc_msgSend(v22, sel_setNumberOfLines_, 0);
      }
      id v24 = objc_msgSend(v21, sel_textLabel);
      if (v24)
      {
        unint64_t v25 = v24;
        id v26 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v25, sel_setFont_, v26);
      }
      id v27 = objc_msgSend(v21, sel_textLabel);
      uint64_t v28 = v88;
      if (v27)
      {
        uint64_t v29 = v27;
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1BFE7E4D4(v20, v19);
        unint64_t v32 = v31;
        sub_1C02F6038();
        if (v32)
        {
          uint64_t v89 = v30;
          unint64_t v90 = v32;
          sub_1BFF27ECC();
          uint64_t v85 = sub_1C151FE5C();
          unint64_t v34 = v33;
          swift_bridgeObjectRelease();
          sub_1C09C8BD8();
          unint64_t v35 = sub_1C029748C(1uLL, v20, v19);
          uint64_t v37 = v36;
          uint64_t v39 = v38;
          uint64_t v41 = v40;
          sub_1C02F6038();
          MEMORY[0x1C18C6220](v35, v37, v39, v41);
          uint64_t v28 = v88;
          swift_bridgeObjectRelease();
          uint64_t v89 = v85;
          unint64_t v90 = v34;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v66 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_setText_, v66);
      }
      objc_msgSend(v21, sel_setSelectionStyle_, 0);
      uint64_t v67 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
      swift_beginAccess();
      uint64_t v68 = *v67;
      if (*(void *)(v68 + 16))
      {
        uint64_t v69 = v87;
        swift_bridgeObjectRetain();
        unint64_t v70 = sub_1BFEF2D8C(v86, v69);
        if (v71)
        {
          uint64_t v72 = (uint64_t *)(*(void *)(v68 + 56) + 16 * v70);
          uint64_t v73 = *v72;
          uint64_t v17 = v72[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1C0A74320((uint64_t)&v91);
          if (v20 != v73) {
            goto LABEL_33;
          }
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_bridgeObjectRetain();
      sub_1C0A74320((uint64_t)&v91);
      if (!v17)
      {
        char v74 = 0;
        goto LABEL_36;
      }
      if (v20 != v84) {
        goto LABEL_33;
      }
LABEL_31:
      if (v19 == v17)
      {
        char v74 = 1;
LABEL_34:
        swift_bridgeObjectRelease();
LABEL_36:
        sub_1C02F6038();
        id v75 = objc_msgSend(v21, sel_imageView);
        if (v75)
        {
          uint64_t v76 = v75;
          long long v77 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          id v78 = objc_msgSend(self, sel_systemImageNamed_, v77);

          objc_msgSend(v76, sel_setImage_, v78);
        }
        long long v79 = self;
        uint64_t v42 = v21;
        uint64_t v80 = &selRef_systemBlueColor;
        if ((v74 & 1) == 0) {
          uint64_t v80 = &selRef_secondarySystemFillColor;
        }
        id v81 = [v79 *v80];
        objc_msgSend(v42, sel_setTintColor_, v81);

        goto LABEL_41;
      }
LABEL_33:
      char v74 = sub_1C1520A9C();
      goto LABEL_34;
    }
    uint64_t v84 = v20;
    uint64_t v83 = v1;
    type metadata accessor for DebugFormatCreatePackageTableViewCell();
    swift_bridgeObjectRetain_n();
    uint64_t v42 = (char *)sub_1C151F24C();
    objc_msgSend(v42, sel_setSelectionStyle_, 0);
    uint64_t v43 = OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField;
    uint64_t v44 = *(void **)&v42[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField];
    uint64_t v45 = v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey;
    swift_beginAccess();
    uint64_t v46 = *(void *)(*(void *)v45 + 16);
    id v47 = v44;
    if (v46)
    {
      uint64_t v48 = v87;
      swift_bridgeObjectRetain();
      sub_1BFEF2D8C(v86, v48);
      if (v49)
      {
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v50 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
LABEL_18:
        objc_msgSend(v47, sel_setText_, v50);

        uint64_t v51 = v43;
        uint64_t v52 = *(void **)&v42[v43];
        objc_msgSend(v52, sel_setEnabled_, 1);
        char v53 = v84;
        objc_msgSend(v52, sel_setAutocapitalizationType_, v84);
        LOBYTE(v89) = v53;
        unint64_t v90 = v19;
        sub_1C11EF81C((uint64_t)v7);
        sub_1C02F6038();
        uint64_t v54 = (uint64_t)&v42[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet];
        swift_beginAccess();
        sub_1C037676C((uint64_t)v7, v54);
        swift_endAccess();
        uint64_t v55 = swift_allocObject();
        uint64_t v56 = v88;
        swift_unknownObjectWeakInit();
        uint64_t v57 = swift_allocObject();
        long long v58 = v94;
        *(_OWORD *)(v57 + 56) = v93;
        long long v59 = v91;
        *(_OWORD *)(v57 + 40) = v92;
        *(_OWORD *)(v57 + 24) = v59;
        long long v60 = v95;
        *(_OWORD *)(v57 + 104) = v96;
        *(_OWORD *)(v57 + 88) = v60;
        *(void *)(v57 + 16) = v55;
        *(void *)(v57 + 120) = v97;
        *(_OWORD *)(v57 + 72) = v58;
        uint64_t v61 = (uint64_t (**)(uint64_t, uint64_t))&v42[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
        uint64_t v62 = *(void *)&v42[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
        void *v61 = sub_1C0A7444C;
        v61[1] = (uint64_t (*)(uint64_t, uint64_t))v57;
        sub_1BFC3E5C0(v62);
        uint64_t v63 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder;
        if (*(unsigned char *)(v56
                      + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder) == 1)
        {
          MEMORY[0x1C18BE280](0, 0);
          char v64 = sub_1C151671C();
          (*(void (**)(char *, uint64_t))(v85 + 8))(v4, v83);
          if (v64)
          {
            id v65 = *(id *)&v42[v51];
            objc_msgSend(v65, sel_becomeFirstResponder);
            sub_1C02F6038();

            *(unsigned char *)(v56 + v63) = 0;
            return (unint64_t)v42;
          }
        }
LABEL_41:
        sub_1C02F6038();
        return (unint64_t)v42;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    id v50 = 0;
    goto LABEL_18;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1C0A739F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7 = a3 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v7);
  if (result)
  {
    unint64_t v9 = (void *)result;
    long long v10 = a4[3];
    v17[2] = a4[2];
    v17[3] = v10;
    long long v11 = a4[5];
    v17[4] = a4[4];
    v17[5] = v11;
    long long v12 = a4[1];
    v17[0] = *a4;
    v17[1] = v12;
    uint64_t v13 = (uint64_t *)(result + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    long long v14 = v17[0];
    swift_beginAccess();
    sub_1C0A74458((uint64_t)v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v13;
    *uint64_t v13 = 0x8000000000000000;
    sub_1C1065BB8(a1, a2, v14, *((uint64_t *)&v14 + 1), isUniquelyReferenced_nonNull_native);
    *uint64_t v13 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1C0A717B0();

    return sub_1C0A744CC((uint64_t)v17);
  }
  return result;
}

void sub_1C0A73D98(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v31 = a1;
  uint64_t v5 = sub_1C151665C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_sections);
  uint64_t v32 = a2;
  unint64_t v10 = sub_1C151676C();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v10 >= *(void *)(v9 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v29 = v6;
  uint64_t v30 = v5;
  long long v11 = (void *)(v9 + 104 * v10);
  uint64_t v12 = v11[5];
  uint64_t v28 = v11[4];
  uint64_t v13 = v11[7];
  uint64_t v15 = v11[15];
  uint64_t v14 = v11[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1C151675C();
  if ((v16 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v16 >= *(void *)(v14 + 16))
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v17 = v14 + 24 * v16;
  if (*(unsigned char *)(v17 + 48))
  {
    id v27 = v8;
    uint64_t v19 = *(void *)(v17 + 32);
    uint64_t v18 = *(void *)(v17 + 40);
    v26[2] = v3;
    uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    swift_beginAccess();
    sub_1C09C8BD8();
    v26[0] = v15;
    v26[1] = v13;
    v26[3] = v19;
    sub_1C09C8BD8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v20;
    *uint64_t v20 = 0x8000000000000000;
    sub_1C1065BB8(v19, v18, v28, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v20 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1C0A717B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v22 = sub_1C151676C();
    sub_1C0A74684(&qword_1EA1A2F48, MEMORY[0x1E4F27D00]);
    uint64_t v23 = v27;
    uint64_t v24 = v30;
    sub_1C151FFAC();
    uint64_t v33 = v22;
    sub_1C151FF7C();
    unint64_t v25 = (void *)sub_1C151662C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v24);
    objc_msgSend(v31, sel_reloadSections_withRowAnimation_, v25, 5);
    sub_1C02F6038();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0A74298(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0A74320(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0A743A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0A743DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A7444C(uint64_t a1, uint64_t a2)
{
  return sub_1C0A739F0(a1, a2, *(void *)(v2 + 16), (_OWORD *)(v2 + 24));
}

uint64_t sub_1C0A74458(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0A744CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0A74540()
{
  return sub_1C0A722B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0A7455C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A74594(uint64_t *a1, uint64_t a2)
{
  return sub_1C0A72414(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C0A745B0()
{
  uint64_t v1 = sub_1C151631C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(char **)(v0 + v4);
  if ((unint64_t)(v5 - 1) >= 4) {

  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A74684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0A746CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0A74730()
{
  sub_1C0A72BDC(v0);
}

void sub_1C0A74738(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  sub_1C140B120(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24));
}

id sub_1C0A74740(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v4 = v3;
  v50.super_class = (Class)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)&v4[v8] = v9;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)&v4[v10] = v11;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey] = MEMORY[0x1E4FBC868];
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_tableView;
  id v13 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v14 = v4;
  *(void *)&v4[v12] = objc_msgSend(v13, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v14[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder] = 1;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem] = 0;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editor] = a1;
  uint64_t v15 = &v14[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editorURL];
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v51 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);
  v50.receiver = v14;
  sub_1C06492B0(a3, &v14[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate]);
  sub_1C06492B0(a3, v71);
  uint64_t v18 = v72;
  int64_t v19 = *(void *)(v72 + 16);
  if (v19)
  {
    uint64_t v48 = v17;
    uint64_t v49 = v16;
    uint64_t v70 = MEMORY[0x1E4FBC860];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C05F79F0(0, v19, 0);
    uint64_t v67 = 0;
    uint64_t v61 = v70;
    uint64_t v20 = v18 + 32;
    int64_t v52 = v19;
    uint64_t v54 = v18 + 32;
    do
    {
      char v21 = (uint64_t *)(v20 + 96 * v67);
      uint64_t v22 = v21[4];
      uint64_t v23 = v21[10];
      uint64_t v24 = v21[11];
      uint64_t v65 = v21[1];
      uint64_t v66 = v21[9];
      uint64_t v58 = v21[2];
      uint64_t v59 = *v21;
      uint64_t v63 = v21[5];
      uint64_t v64 = v21[3];
      char v55 = *((unsigned char *)v21 + 48);
      uint64_t v60 = v21[7];
      uint64_t v62 = v21[8];
      uint64_t v56 = v23;
      uint64_t v57 = v24;
      if (v24)
      {
        int64_t v25 = v19;
        unsigned __int8 v26 = v23;
        sub_1C0A74E20(0, &qword_1EA19C920, (uint64_t)&type metadata for DebugFormatCreatePackageItem, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        uint64_t v28 = v26;
        int64_t v19 = v25;
        uint64_t v20 = v54;
        *(void *)(v27 + 32) = v28;
        *(void *)(v27 + 40) = v24;
        *(unsigned char *)(v27 + 48) = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v29 = v22;
        uint64_t v30 = v63;
        char v31 = v55;
        uint64_t v32 = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v33 = v62;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v21[9]) {
          uint64_t v34 = v21[9];
        }
        else {
          uint64_t v34 = MEMORY[0x1E4FBC860];
        }
        int64_t v35 = *(void *)(v34 + 16);
        if (v35)
        {
          uint64_t v53 = v21[4];
          uint64_t v69 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_1C05F7A10(0, v35, 0);
          uint64_t v27 = v69;
          uint64_t v36 = (uint64_t *)(v34 + 40);
          do
          {
            uint64_t v38 = *(v36 - 1);
            uint64_t v37 = *v36;
            uint64_t v69 = v27;
            unint64_t v40 = *(void *)(v27 + 16);
            unint64_t v39 = *(void *)(v27 + 24);
            swift_bridgeObjectRetain();
            if (v40 >= v39 >> 1)
            {
              sub_1C05F7A10(v39 > 1, v40 + 1, 1);
              uint64_t v27 = v69;
            }
            v36 += 2;
            *(void *)(v27 + 16) = v40 + 1;
            uint64_t v41 = v27 + 24 * v40;
            *(void *)(v41 + 32) = v38;
            *(void *)(v41 + 40) = v37;
            *(unsigned char *)(v41 + 48) = 1;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = v62;
          swift_bridgeObjectRelease();
          uint64_t v30 = v63;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v19 = v52;
          uint64_t v29 = v53;
          uint64_t v20 = v54;
        }
        else
        {
          uint64_t v33 = v21[8];
          uint64_t v42 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v30 = v63;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v27 = v42;
          uint64_t v29 = v22;
        }
        char v31 = v55;
        uint64_t v32 = v60;
      }
      uint64_t v70 = v61;
      unint64_t v44 = *(void *)(v61 + 16);
      unint64_t v43 = *(void *)(v61 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_1C05F79F0(v43 > 1, v44 + 1, 1);
        uint64_t v32 = v60;
        uint64_t v61 = v70;
      }
      *(void *)(v61 + 16) = v44 + 1;
      uint64_t v45 = v61 + 104 * v44;
      *(void *)(v45 + 32) = v59;
      *(void *)(v45 + 40) = v65;
      *(void *)(v45 + 48) = v58;
      *(void *)(v45 + 56) = v64;
      *(void *)(v45 + 64) = v29;
      *(void *)(v45 + 72) = v30;
      *(unsigned char *)(v45 + 80) = v31;
      *(void *)(v45 + 88) = v32;
      *(void *)(v45 + 96) = v33;
      *(void *)(v45 + 104) = v66;
      *(void *)(v45 + 112) = v56;
      *(void *)(v45 + 120) = v57;
      *(void *)(v45 + 128) = v27;
      ++v67;
    }
    while (v67 != v19);
    swift_bridgeObjectRelease();
    uint64_t v17 = v48;
    uint64_t v16 = v49;
  }
  else
  {
    swift_retain();
    uint64_t v61 = MEMORY[0x1E4FBC860];
  }
  *(void *)((char *)v50.receiver + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_sections) = v61;

  objc_super v68 = v50;
  id v46 = objc_msgSendSuper2(&v68, sel_initWithNibName_bundle_, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v51, v16);
  return v46;
}

void sub_1C0A74D0C()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)&v0[v3] = v4;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey] = MEMORY[0x1E4FBC868];
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_tableView;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem] = 0;

  sub_1C152040C();
  __break(1u);
}

void sub_1C0A74E20(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

char *sub_1C0A74E6C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_init);

  v24.receiver = v12;
  v24.super_class = ObjectType;
  id v13 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer;
  uint64_t v15 = *(void **)&v13[OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer];
  uint64_t v16 = v13;
  objc_msgSend(v15, sel_setLineWidth_, 20.0);
  id v17 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  id v18 = v15;
  id v19 = objc_msgSend(v17, sel_initWithRed_green_blue_alpha_, 0.101960784, 0.0980392157, 0.101960784, 1.0);
  id v20 = objc_msgSend(v19, sel_CGColor);

  objc_msgSend(v18, sel_setStrokeColor_, v20);
  id v21 = objc_msgSend(v16, sel_layer);
  id v22 = *(id *)&v13[v14];
  objc_msgSend(v21, sel_addSublayer_, v22);

  return v16;
}

void sub_1C0A750DC()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer];
  objc_msgSend(v1, sel_lineWidth);
  double v3 = v2 * -0.5;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, UIEdgeInsetsInsetRect(v4, v5, v6, v7, v3, v3));
  CGMutablePathRef Mutable = CGPathCreateMutable();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMinY(v16);
  uint64_t v10 = 0x3FF0000000000000;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0x3FF0000000000000;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  sub_1C151F3DC();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxY(v17);
  sub_1C151F3FC();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxX(v18);
  objc_msgSend(v1, sel_bounds);
  CGRectGetMinY(v19);
  sub_1C151F3DC();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxX(v20);
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxY(v21);
  sub_1C151F3FC();
  objc_msgSend(v1, sel_setPath_, Mutable);
}

uint64_t type metadata accessor for DebugFormatBezelView()
{
  return self;
}

void *sub_1C0A752DC(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  return sub_1C0A7531C(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions);
}

void *sub_1C0A752FC(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  return sub_1C0A7531C(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
}

void *sub_1C0A7531C(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  uint64_t v44 = a6;
  unint64_t v43 = a2;
  uint64_t v9 = sub_1C15164AC();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v40 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A78DBC(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  CGRect v18 = (char *)&v39 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v46 = a3;
  id v47 = (char *)&v39 - v20;
  uint64_t v21 = a4;
  uint64_t v22 = a4;
  char v23 = a5;
  sub_1C04A5728(a3, v22, a5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_1C151539C();
  if (round(v24) == 0.0) {
    sub_1C15153AC();
  }
  int64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v18, v12);
  unsigned __int8 v26 = v47;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v47, v15, v12);
  uint64_t v27 = v21;
  uint64_t v28 = v46;
  v48[0] = v46;
  v48[1] = v27;
  char v49 = v23 & 1;
  sub_1C0223FA8(v46, v27, v23);
  sub_1C1517EFC();
  uint64_t v29 = v48;
  uint64_t v30 = v45;
  char v31 = FormatBoolean.value(contextLayoutOptions:)(v50);
  uint64_t v45 = v30;
  if (v30)
  {
    sub_1C0224254(v28, v27, v23);
    swift_release();
    v25(v26, v12);
  }
  else
  {
    char v32 = v31;
    unint64_t v43 = v25;
    uint64_t v44 = v13 + 8;
    sub_1C0224254(v28, v27, v23);
    swift_release();
    if (v32) {
      uint64_t v33 = 1;
    }
    else {
      uint64_t v33 = 5;
    }
    id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E30]), sel_init);
    int64_t v35 = v40;
    sub_1C15163EC();
    uint64_t v36 = (void *)sub_1C15163DC();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
    objc_msgSend(v34, sel_setLocale_, v36);

    objc_msgSend(v34, sel_setUnitOptions_, v33);
    if (qword_1EB865F48 != -1) {
      swift_once();
    }
    objc_msgSend(v34, sel_setNumberFormatter_, qword_1EB865F38);
    sub_1C01F2F9C();
    uint64_t v37 = v47;
    uint64_t v29 = (void *)sub_1C151F6CC();

    v43(v37, v12);
  }
  return v29;
}

void *sub_1C0A7573C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v42 = a2;
  uint64_t v8 = sub_1C15164AC();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A78DBC(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x1F4188790](v18);
  id v47 = (char *)&v38 - v19;
  uint64_t v44 = a4;
  uint64_t v20 = a4;
  char v21 = a5;
  sub_1C04A5728(a3, v20, a5);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_1C151539C();
  if (round(v22) == 0.0) {
    sub_1C15153AC();
  }
  char v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v17, v11);
  double v24 = v47;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v47, v14, v11);
  v45[0] = a3;
  v45[1] = v44;
  char v25 = v21;
  uint64_t v26 = v44;
  char v46 = v25 & 1;
  sub_1C0223FA8(a3, v44, v25);
  uint64_t v27 = sub_1BFFC514C();
  uint64_t v28 = v45;
  uint64_t v29 = v43;
  char v30 = FormatBoolean.value(contextLayoutOptions:)(v27);
  uint64_t v43 = v29;
  if (v29)
  {
    sub_1C0224254(a3, v26, v25);
    swift_release();
    v23(v24, v11);
  }
  else
  {
    char v31 = v30;
    sub_1C0224254(a3, v26, v25);
    swift_release();
    if (v31) {
      uint64_t v32 = 1;
    }
    else {
      uint64_t v32 = 5;
    }
    id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E30]), sel_init);
    id v34 = v39;
    sub_1C15163EC();
    int64_t v35 = (void *)sub_1C15163DC();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v41);
    objc_msgSend(v33, sel_setLocale_, v35);

    objc_msgSend(v33, sel_setUnitOptions_, v32);
    if (qword_1EB865F48 != -1) {
      swift_once();
    }
    objc_msgSend(v33, sel_setNumberFormatter_, qword_1EB865F38);
    sub_1C01F2F9C();
    uint64_t v36 = v47;
    uint64_t v28 = (void *)sub_1C151F6CC();

    v23(v36, v11);
  }
  return v28;
}

void *sub_1C0A75B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = sub_1C15164AC();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v38 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A78DBC(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v37 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v43 = (char *)&v37 - v20;
  sub_1C04A5728(a3, a4, a5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_1C151539C();
  if (round(v21) == 0.0) {
    sub_1C15153AC();
  }
  uint64_t v42 = *(void (**)(char *, uint64_t))(v13 + 8);
  v42(v18, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v43, v15, v12);
  v44[0] = a3;
  v44[1] = a4;
  char v45 = a5 & 1;
  uint64_t v22 = *(void *)(a2 + 48);
  type metadata accessor for FormatVariableCollection();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = MEMORY[0x1E4FBC868];
  type metadata accessor for FormatOptionCollection();
  swift_allocObject();
  sub_1C0223FA8(a3, a4, a5);
  uint64_t v24 = sub_1BFEF13D8(MEMORY[0x1E4FBC860], v23);
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t inited = swift_initStackObject();
  *(unsigned char *)(inited + 16) = 0;
  *(void *)(inited + 24) = v22;
  *(void *)(inited + 32) = 0x3FF0000000000000;
  *(void *)(inited + 40) = v24;
  uint64_t v26 = MEMORY[0x1E4FBC870];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = v26;
  uint64_t v27 = v44;
  uint64_t v28 = v41;
  char v29 = FormatBoolean.value(contextLayoutOptions:)(inited);
  if (v28)
  {
    sub_1C0224254(a3, a4, a5);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    v42(v43, v12);
  }
  else
  {
    char v30 = v29;
    sub_1C0224254(a3, a4, a5);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    if (v30) {
      uint64_t v31 = 1;
    }
    else {
      uint64_t v31 = 5;
    }
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E30]), sel_init);
    id v33 = v38;
    sub_1C15163EC();
    id v34 = (void *)sub_1C15163DC();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v40);
    objc_msgSend(v32, sel_setLocale_, v34);

    objc_msgSend(v32, sel_setUnitOptions_, v31);
    if (qword_1EB865F48 != -1) {
      swift_once();
    }
    objc_msgSend(v32, sel_setNumberFormatter_, qword_1EB865F38);
    sub_1C01F2F9C();
    int64_t v35 = v43;
    uint64_t v27 = (void *)sub_1C151F6CC();

    v42(v35, v12);
  }
  return v27;
}

unint64_t sub_1C0A75FD4(char a1)
{
  unint64_t result = 0x74617265706D6574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x706D655468676968;
      break;
    case 2:
      unint64_t result = 0x65706D6554776F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
    case 5:
      unint64_t result = 0x6F697469646E6F63;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A760E8(unsigned __int8 *a1, char *a2)
{
  return sub_1C1486A7C(*a1, *a2);
}

uint64_t sub_1C0A760F4()
{
  return sub_1C044EAB8();
}

uint64_t sub_1C0A76100()
{
  return sub_1C0449AA8();
}

uint64_t sub_1C0A76108()
{
  return sub_1C044EAB8();
}

uint64_t sub_1C0A76110@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0A78D70();
  *a1 = result;
  return result;
}

unint64_t sub_1C0A76140@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0A75FD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0A7616C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A761CC()
{
  return sub_1C151EAEC();
}

void sub_1C0A7621C(void *a1@<X8>)
{
  *a1 = &unk_1F1B68518;
}

uint64_t sub_1C0A7622C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWeatherBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1C0A76244(void *a1)
{
  return FormatWeatherBinding.Text.encode(to:)(a1);
}

uint64_t sub_1C0A76260@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v260 = a3;
  id v262 = a4;
  uint64_t v263 = a2;
  uint64_t v264 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1F4188790](v264);
  uint64_t v250 = (uint64_t)&v249 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v249 - v7;
  MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v254 = (uint64_t)&v249 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v258 = (uint64_t)&v249 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v249 - v18;
  MEMORY[0x1F4188790](v20);
  MEMORY[0x1F4188790](v21);
  MEMORY[0x1F4188790]((char *)&v249 - v22);
  MEMORY[0x1F4188790](v23);
  uint64_t v255 = (uint64_t)&v249 - v24;
  MEMORY[0x1F4188790](v25);
  unint64_t v259 = (char *)&v249 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v256 = (uint64_t)&v249 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v249 - v30;
  MEMORY[0x1F4188790](v32);
  id v34 = (char *)&v249 - v33;
  MEMORY[0x1F4188790](v35);
  MEMORY[0x1F4188790](v36);
  MEMORY[0x1F4188790](v37);
  uint64_t v252 = (char *)&v249 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v257 = (uint64_t)&v249 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)&v249 - v42;
  MEMORY[0x1F4188790](v44);
  char v46 = (char *)&v249 - v45;
  MEMORY[0x1F4188790](v47);
  MEMORY[0x1F4188790](v48);
  MEMORY[0x1F4188790](v49);
  v253 = (char *)&v249 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v251 = (char *)&v249 - v52;
  MEMORY[0x1F4188790](v53);
  char v55 = (char *)&v249 - v54;
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (char *)&v249 - v57;
  MEMORY[0x1F4188790](v59);
  uint64_t v72 = (char *)&v249 - v71;
  switch(*a1)
  {
    case 1:
      uint64_t v256 = v67;
      uint64_t v258 = v63;
      unint64_t v259 = v34;
      sub_1C0A78DBC(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v87 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v88 = *(void *)(v87 + 72);
      unint64_t v89 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
      uint64_t v90 = swift_allocObject();
      *(_OWORD *)(v90 + 16) = xmmword_1C152FC70;
      uint64_t v250 = v90;
      long long v91 = (void *)(v90 + v89);
      uint64_t v92 = v263;
      sub_1C0373C80(v263, (uint64_t)v46);
      uint64_t v93 = *(int *)(v264 + 36);
      uint64_t v94 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v95 = (uint64_t)&v46[v93 + *(int *)(v94 + 20)];
      uint64_t v96 = v260;
      sub_1C01677F4(v260);
      uint64_t v97 = v261;
      size_t v98 = sub_1C0A75B3C(v95, v96, 1, 0, 0);
      if (v97)
      {

        uint64_t v100 = 0;
        uint64_t v101 = 0;
      }
      else
      {
        uint64_t v100 = (uint64_t)v98;
        uint64_t v101 = v99;
      }
      sub_1C0433600(0xD000000000000019, 0x80000001C1619B90, v100, v101, v91);
      sub_1C0167828(v96);
      sub_1C0373CE4((uint64_t)v46);
      sub_1C0373C80(v92, (uint64_t)v43);
      uint64_t v154 = (uint64_t)&v43[*(int *)(v264 + 36) + (uint64_t)*(int *)(v94 + 20)];
      sub_1C01677F4(v96);
      uint64_t v155 = sub_1C0A75B3C(v154, v96, 1, 0, 64);
      sub_1C0433600(0xD000000000000024, 0x80000001C1619BB0, (uint64_t)v155, v165, (void *)((char *)v91 + v88));
      sub_1C0167828(v96);
      sub_1C0373CE4((uint64_t)v43);
      uint64_t v166 = v257;
      sub_1C0373C80(v92, v257);
      uint64_t v167 = v166 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v94 + 20);
      sub_1C01677F4(v96);
      uint64_t v181 = sub_1C0A75B3C(v167, v96, 0, 0, 64);
      uint64_t v182 = (uint64_t)v252;
      sub_1C0433600(0xD000000000000024, 0x80000001C1619BE0, (uint64_t)v181, v183, (void *)((char *)v91 + 2 * v88));
      sub_1C0167828(v96);
      sub_1C0373CE4(v257);
      sub_1C0373C80(v92, v182);
      uint64_t v184 = v182 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v94 + 20);
      sub_1C01677F4(v96);
      uint64_t v196 = sub_1C0A75B3C(v184, v96, 1, 0, 128);
      sub_1C0433600(0xD000000000000027, 0x80000001C1619C10, (uint64_t)v196, v197, (void *)((char *)v91 + 3 * v88));
      sub_1C0167828(v96);
      sub_1C0373CE4(v182);
      uint64_t v198 = v256;
      sub_1C0373C80(v92, v256);
      uint64_t v199 = v198 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v94 + 20);
      sub_1C01677F4(v96);
      id v211 = sub_1C0A75B3C(v199, v96, 0, 0, 128);
      sub_1C0433600(0xD000000000000027, 0x80000001C1619C40, (uint64_t)v211, v212, (void *)((char *)v91 + 4 * v88));
      sub_1C0167828(v96);
      sub_1C0373CE4(v256);
      uint64_t v213 = v258;
      sub_1C0373C80(v92, v258);
      uint64_t v214 = v213 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v94 + 20);
      sub_1C01677F4(v96);
      uint64_t v227 = sub_1C0A75B3C(v214, v96, 1, 0, 192);
      sub_1C0433600(0xD000000000000023, 0x80000001C1619C70, (uint64_t)v227, v228, (void *)((char *)v91 + 5 * v88));
      sub_1C0167828(v96);
      sub_1C0373CE4(v258);
      uint64_t v229 = (uint64_t)v259;
      sub_1C0373C80(v92, (uint64_t)v259);
      uint64_t v230 = v229 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v94 + 20);
      sub_1C01677F4(v96);
      unint64_t v241 = sub_1C0A75B3C(v230, v96, 0, 0, 192);
      uint64_t v133 = v250;
      sub_1C0433600(0xD000000000000023, 0x80000001C1619CA0, (uint64_t)v241, v242, (void *)((char *)v91 + 6 * v88));
      uint64_t v243 = v96;
      goto LABEL_25;
    case 2:
      uint64_t v254 = v64;
      uint64_t v257 = v60;
      uint64_t v258 = v69;
      sub_1C0A78DBC(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v102 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v103 = *(void *)(v102 + 72);
      unint64_t v104 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = xmmword_1C152FC70;
      uint64_t v250 = v105;
      uint64_t v106 = (void *)(v105 + v104);
      uint64_t v107 = v263;
      sub_1C0373C80(v263, (uint64_t)v31);
      uint64_t v108 = *(int *)(v264 + 36);
      uint64_t v109 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v110 = (uint64_t)&v31[v108 + *(int *)(v109 + 24)];
      uint64_t v111 = v260;
      sub_1C01677F4(v260);
      uint64_t v112 = v261;
      uint64_t v113 = sub_1C0A75B3C(v110, v111, 1, 0, 0);
      if (v112)
      {

        uint64_t v115 = 0;
        uint64_t v116 = 0;
      }
      else
      {
        uint64_t v115 = (uint64_t)v113;
        uint64_t v116 = v114;
      }
      sub_1C0433600(0xD000000000000018, 0x80000001C1619A50, v115, v116, v106);
      uint64_t v156 = v260;
      sub_1C0167828(v260);
      sub_1C0373CE4((uint64_t)v31);
      uint64_t v157 = v256;
      sub_1C0373C80(v107, v256);
      uint64_t v158 = v157 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v109 + 24);
      sub_1C01677F4(v156);
      uint64_t v168 = sub_1C0A75B3C(v158, v156, 1, 0, 64);
      uint64_t v169 = v255;
      sub_1C0433600(0xD000000000000023, 0x80000001C1619A70, (uint64_t)v168, v170, (void *)((char *)v106 + v103));
      sub_1C0167828(v156);
      sub_1C0373CE4(v256);
      uint64_t v171 = (uint64_t)v259;
      sub_1C0373C80(v107, (uint64_t)v259);
      uint64_t v172 = v171 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v109 + 24);
      sub_1C01677F4(v156);
      long long v185 = sub_1C0A75B3C(v172, v156, 0, 0, 64);
      sub_1C0433600(0xD000000000000023, 0x80000001C1619AA0, (uint64_t)v185, v186, (void *)((char *)v106 + 2 * v103));
      sub_1C0167828(v156);
      sub_1C0373CE4((uint64_t)v259);
      sub_1C0373C80(v107, v169);
      uint64_t v187 = v169 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v109 + 24);
      sub_1C01677F4(v156);
      uint64_t v200 = sub_1C0A75B3C(v187, v156, 1, 0, 128);
      sub_1C0433600(0xD000000000000026, 0x80000001C1619AD0, (uint64_t)v200, v201, (void *)((char *)v106 + 3 * v103));
      sub_1C0167828(v156);
      sub_1C0373CE4(v169);
      uint64_t v202 = v254;
      sub_1C0373C80(v107, v254);
      uint64_t v203 = v202 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v109 + 24);
      sub_1C01677F4(v156);
      id v215 = sub_1C0A75B3C(v203, v156, 0, 0, 128);
      sub_1C0433600(0xD000000000000026, 0x80000001C1619B00, (uint64_t)v215, v216, (void *)((char *)v106 + 4 * v103));
      sub_1C0167828(v156);
      sub_1C0373CE4(v254);
      uint64_t v217 = v257;
      sub_1C0373C80(v107, v257);
      uint64_t v218 = v217 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v109 + 24);
      sub_1C01677F4(v156);
      uint64_t v231 = sub_1C0A75B3C(v218, v156, 1, 0, 192);
      sub_1C0433600(0xD000000000000022, 0x80000001C1619B30, (uint64_t)v231, v232, (void *)((char *)v106 + 5 * v103));
      sub_1C0167828(v156);
      sub_1C0373CE4(v257);
      uint64_t v233 = v258;
      sub_1C0373C80(v107, v258);
      uint64_t v234 = v233 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v109 + 24);
      sub_1C01677F4(v156);
      long long v244 = sub_1C0A75B3C(v234, v156, 0, 0, 192);
      uint64_t v145 = v262;
      uint64_t v133 = v250;
      sub_1C0433600(0xD000000000000022, 0x80000001C1619B60, (uint64_t)v244, v245, (void *)((char *)v106 + 6 * v103));
      sub_1C0167828(v156);
      uint64_t v144 = v258;
      break;
    case 3:
      uint64_t v255 = v65;
      uint64_t v256 = v62;
      uint64_t v257 = v70;
      unint64_t v259 = (char *)v68;
      sub_1C0A78DBC(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v117 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v118 = *(void *)(v117 + 72);
      unint64_t v119 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
      uint64_t v120 = swift_allocObject();
      *(_OWORD *)(v120 + 16) = xmmword_1C152FC70;
      uint64_t v121 = (void *)(v120 + v119);
      sub_1C0373C80(v263, (uint64_t)v19);
      uint64_t v122 = *(int *)(v264 + 36);
      uint64_t v123 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v124 = (uint64_t)&v19[v122 + *(int *)(v123 + 28)];
      uint64_t v125 = v260;
      sub_1C01677F4(v260);
      uint64_t v126 = v261;
      uint64_t v127 = sub_1C0A75B3C(v124, v125, 1, 0, 0);
      uint64_t v250 = v120;
      if (v126)
      {

        uint64_t v129 = 0;
        uint64_t v130 = 0;
      }
      else
      {
        uint64_t v129 = (uint64_t)v127;
        uint64_t v130 = v128;
      }
      sub_1C0433600(0xD00000000000001FLL, 0x80000001C1619910, v129, v130, v121);
      sub_1C0167828(v125);
      sub_1C0373CE4((uint64_t)v19);
      uint64_t v159 = v263;
      uint64_t v160 = v258;
      sub_1C0373C80(v263, v258);
      uint64_t v161 = v160 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v123 + 28);
      sub_1C01677F4(v125);
      uint64_t v173 = sub_1C0A75B3C(v161, v125, 1, 0, 64);
      uint64_t v174 = v254;
      sub_1C0433600(0xD00000000000002ALL, 0x80000001C1619930, (uint64_t)v173, v175, (void *)((char *)v121 + v118));
      sub_1C0167828(v125);
      sub_1C0373CE4(v258);
      sub_1C0373C80(v159, v174);
      uint64_t v176 = v174 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v123 + 28);
      sub_1C01677F4(v125);
      uint64_t v188 = sub_1C0A75B3C(v176, v125, 0, 0, 64);
      sub_1C0433600(0xD00000000000002ALL, 0x80000001C1619960, (uint64_t)v188, v189, (void *)((char *)v121 + 2 * v118));
      sub_1C0167828(v125);
      sub_1C0373CE4(v174);
      uint64_t v190 = v255;
      sub_1C0373C80(v159, v255);
      uint64_t v191 = v190 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v123 + 28);
      sub_1C01677F4(v125);
      uint64_t v204 = sub_1C0A75B3C(v191, v125, 1, 0, 128);
      sub_1C0433600(0xD00000000000002DLL, 0x80000001C1619990, (uint64_t)v204, v205, (void *)((char *)v121 + 3 * v118));
      sub_1C0167828(v125);
      sub_1C0373CE4(v255);
      uint64_t v206 = v256;
      sub_1C0373C80(v159, v256);
      uint64_t v207 = v206 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v123 + 28);
      sub_1C01677F4(v125);
      uint64_t v219 = sub_1C0A75B3C(v207, v125, 0, 0, 128);
      sub_1C0433600(0xD00000000000002DLL, 0x80000001C16199C0, (uint64_t)v219, v220, (void *)((char *)v121 + 4 * v118));
      sub_1C0167828(v125);
      sub_1C0373CE4(v256);
      uint64_t v221 = v257;
      sub_1C0373C80(v159, v257);
      uint64_t v222 = v221 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v123 + 28);
      sub_1C01677F4(v125);
      uint64_t v235 = sub_1C0A75B3C(v222, v125, 1, 0, 192);
      sub_1C0433600(0xD000000000000029, 0x80000001C16199F0, (uint64_t)v235, v236, (void *)((char *)v121 + 5 * v118));
      sub_1C0167828(v125);
      sub_1C0373CE4(v257);
      uint64_t v237 = (uint64_t)v259;
      sub_1C0373C80(v159, (uint64_t)v259);
      uint64_t v238 = v237 + *(int *)(v264 + 36) + (uint64_t)*(int *)(v123 + 28);
      sub_1C01677F4(v125);
      long long v246 = sub_1C0A75B3C(v238, v125, 0, 0, 192);
      uint64_t v133 = v250;
      sub_1C0433600(0xD000000000000029, 0x80000001C1619A20, (uint64_t)v246, v247, (void *)((char *)v121 + 6 * v118));
      uint64_t v243 = v125;
LABEL_25:
      sub_1C0167828(v243);
      uint64_t v144 = (uint64_t)v259;
      goto LABEL_26;
    case 4:
      sub_1C0A78DBC(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v131 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v132 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      uint64_t v133 = swift_allocObject();
      *(_OWORD *)(v133 + 16) = xmmword_1C1529AE0;
      long long v134 = (void *)(v133 + v132);
      sub_1C0373C80(v263, (uint64_t)v8);
      uint64_t v136 = *((void *)v8 + 2);
      uint64_t v135 = *((void *)v8 + 3);
      swift_bridgeObjectRetain();
      uint64_t v137 = v134;
      uint64_t v138 = 0xE90000000000006ELL;
      uint64_t v139 = v136;
      uint64_t v140 = v135;
      goto LABEL_12;
    case 5:
      sub_1C0A78DBC(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v141 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v142 = (*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
      uint64_t v133 = swift_allocObject();
      *(_OWORD *)(v133 + 16) = xmmword_1C1529AE0;
      sub_1C0373C80(v263, (uint64_t)v8);
      char v265 = v8[32];
      uint64_t v139 = FormatWeatherConditionCode.rawValue.getter();
      uint64_t v140 = v143;
      uint64_t v137 = (void *)(v133 + v142);
      uint64_t v138 = 0xEE0065646F43206ELL;
LABEL_12:
      sub_1C0433600(0x6F697469646E6F43, v138, v139, v140, v137);
      uint64_t v144 = (uint64_t)v8;
      uint64_t v145 = v262;
      break;
    case 6:
      sub_1C0A78DBC(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v146 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v147 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
      uint64_t v133 = swift_allocObject();
      *(_OWORD *)(v133 + 16) = xmmword_1C1529AE0;
      long long v148 = (void *)(v133 + v147);
      uint64_t v149 = v250;
      sub_1C0373C80(v263, v250);
      int v150 = (uint64_t *)(v149 + *(int *)(v264 + 40));
      if (v150[1])
      {
        uint64_t v151 = *v150;
        uint64_t v152 = v150[1];
      }
      else
      {
        uint64_t v151 = 0;
        uint64_t v152 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1C0433600(0xD000000000000014, 0x80000001C16198F0, v151, v152, v148);
      uint64_t v144 = v149;
LABEL_26:
      uint64_t v145 = v262;
      break;
    default:
      uint64_t v73 = v66;
      unint64_t v259 = (char *)v61;
      sub_1C0A78DBC(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v74 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v75 = *(void *)(v74 + 72);
      unint64_t v76 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      uint64_t v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_1C152FC70;
      uint64_t v250 = v77;
      id v78 = (void *)(v77 + v76);
      uint64_t v79 = v263;
      sub_1C0373C80(v263, (uint64_t)v72);
      uint64_t v80 = (uint64_t)&v72[*(int *)(v264 + 36)];
      uint64_t v81 = v260;
      sub_1C01677F4(v260);
      uint64_t v82 = v261;
      uint64_t v83 = sub_1C0A75B3C(v80, v81, 1, 0, 0);
      if (v82)
      {

        uint64_t v85 = 0;
        uint64_t v86 = 0;
      }
      else
      {
        uint64_t v85 = (uint64_t)v83;
        uint64_t v86 = v84;
      }
      sub_1C0433600(0xD000000000000014, 0x80000001C1619CD0, v85, v86, v78);
      sub_1C0167828(v81);
      sub_1C0373CE4((uint64_t)v72);
      sub_1C0373C80(v79, (uint64_t)v58);
      uint64_t v153 = (uint64_t)&v58[*(int *)(v264 + 36)];
      sub_1C01677F4(v81);
      uint64_t v162 = sub_1C0A75B3C(v153, v81, 1, 0, 64);
      sub_1C0433600(0xD00000000000001FLL, 0x80000001C1619CF0, (uint64_t)v162, v163, (void *)((char *)v78 + v75));
      sub_1C0167828(v81);
      sub_1C0373CE4((uint64_t)v58);
      sub_1C0373C80(v79, (uint64_t)v55);
      uint64_t v164 = (uint64_t)&v55[*(int *)(v264 + 36)];
      sub_1C01677F4(v81);
      long long v177 = sub_1C0A75B3C(v164, v81, 0, 0, 64);
      uint64_t v178 = (uint64_t)v251;
      sub_1C0433600(0xD00000000000001FLL, 0x80000001C1619D10, (uint64_t)v177, v179, (void *)((char *)v78 + 2 * v75));
      sub_1C0167828(v81);
      sub_1C0373CE4((uint64_t)v55);
      sub_1C0373C80(v79, v178);
      uint64_t v180 = v178 + *(int *)(v264 + 36);
      sub_1C01677F4(v81);
      uint64_t v192 = sub_1C0A75B3C(v180, v81, 1, 0, 128);
      uint64_t v193 = (uint64_t)v253;
      sub_1C0433600(0xD000000000000022, 0x80000001C1619D30, (uint64_t)v192, v194, (void *)((char *)v78 + 3 * v75));
      sub_1C0167828(v81);
      sub_1C0373CE4(v178);
      sub_1C0373C80(v79, v193);
      uint64_t v195 = v193 + *(int *)(v264 + 36);
      sub_1C01677F4(v81);
      long long v208 = sub_1C0A75B3C(v195, v81, 0, 0, 128);
      sub_1C0433600(0xD000000000000022, 0x80000001C1619D60, (uint64_t)v208, v209, (void *)((char *)v78 + 4 * v75));
      sub_1C0167828(v81);
      sub_1C0373CE4(v193);
      sub_1C0373C80(v79, v73);
      uint64_t v210 = v73 + *(int *)(v264 + 36);
      sub_1C01677F4(v81);
      long long v223 = sub_1C0A75B3C(v210, v81, 1, 0, 192);
      sub_1C0433600(0xD00000000000001ELL, 0x80000001C1619D90, (uint64_t)v223, v224, (void *)((char *)v78 + 5 * v75));
      sub_1C0167828(v81);
      sub_1C0373CE4(v73);
      uint64_t v225 = (uint64_t)v259;
      sub_1C0373C80(v79, (uint64_t)v259);
      uint64_t v226 = v225 + *(int *)(v264 + 36);
      sub_1C01677F4(v81);
      v239 = sub_1C0A75B3C(v226, v81, 0, 0, 192);
      uint64_t v133 = v250;
      sub_1C0433600(0xD00000000000001ELL, 0x80000001C1619DB0, (uint64_t)v239, v240, (void *)((char *)v78 + 6 * v75));
      sub_1C0167828(v81);
      uint64_t v145 = v262;
      uint64_t v144 = (uint64_t)v259;
      break;
  }
  uint64_t result = sub_1C0373CE4(v144);
  *uint64_t v145 = v133;
  return result;
}

uint64_t _s8NewsFeed20FormatWeatherBindingV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 17);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unsigned int v8 = *(unsigned __int8 *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 17);
  switch(v5)
  {
    case 1u:
      if (v9 != 1) {
        goto LABEL_66;
      }
      if (v4 <= 0xFD)
      {
        uint64_t v39 = *(void *)a1;
        uint64_t v40 = v2;
        char v41 = v4;
        if (v8 > 0xFD)
        {
          sub_1C02240D4(v3, v2, v4, 1u);
          sub_1C02240D4(v7, v6, v8, 1u);
          sub_1C02240D4(v3, v2, v4, 1u);
          sub_1C02240D4(v7, v6, v8, 1u);
          sub_1C02240D4(v3, v2, v4, 1u);
          sub_1C022422C(v3, v2, v4, 1u);
          uint64_t v24 = v7;
          uint64_t v25 = v6;
          char v26 = v8;
          unsigned __int8 v27 = 1;
          goto LABEL_69;
        }
        uint64_t v36 = v7;
        uint64_t v37 = v6;
        char v38 = v8;
        uint64_t v14 = 1;
        sub_1C02240D4(v3, v2, v4, 1u);
        sub_1C02240D4(v7, v6, v8, 1u);
        sub_1C02240D4(v3, v2, v4, 1u);
        sub_1C02240D4(v7, v6, v8, 1u);
        sub_1C02240D4(v3, v2, v4, 1u);
        BOOL v32 = _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0((uint64_t)&v39, (uint64_t)&v36);
        sub_1C022422C(v3, v2, v4, 1u);
        sub_1C022422C(v7, v6, v8, 1u);
        sub_1C022422C(v7, v6, v8, 1u);
        sub_1C0224254(v39, v40, v41);
        sub_1C022422C(v3, v2, v4, 1u);
        if (!v32) {
          return 0;
        }
      }
      else
      {
        sub_1C02240E8(*(void *)a2, *(void *)(a2 + 8), v8);
        uint64_t v14 = 1;
        sub_1C02240D4(v7, v6, v8, 1u);
        sub_1C02240D4(v3, v2, v4, 1u);
        sub_1C022422C(v3, v2, v4, 1u);
        sub_1C022422C(v7, v6, v8, 1u);
        if (v8 <= 0xFD) {
          goto LABEL_70;
        }
      }
      return v14;
    case 2u:
      if (v9 != 2) {
        goto LABEL_66;
      }
      if (v4 > 0xFD)
      {
        sub_1C02240E8(*(void *)a2, *(void *)(a2 + 8), v8);
        sub_1C02240D4(v7, v6, v8, 2u);
        sub_1C02240D4(v3, v2, v4, 2u);
        sub_1C022422C(v3, v2, v4, 2u);
        uint64_t v10 = v7;
        uint64_t v11 = v6;
        char v12 = v8;
        unsigned __int8 v13 = 2;
        goto LABEL_15;
      }
      uint64_t v39 = *(void *)a1;
      uint64_t v40 = v2;
      char v41 = v4;
      if (v8 > 0xFD)
      {
        sub_1C02240D4(v3, v2, v4, 2u);
        sub_1C02240D4(v7, v6, v8, 2u);
        sub_1C02240D4(v3, v2, v4, 2u);
        sub_1C02240D4(v7, v6, v8, 2u);
        sub_1C02240D4(v3, v2, v4, 2u);
        sub_1C022422C(v3, v2, v4, 2u);
        uint64_t v24 = v7;
        uint64_t v25 = v6;
        char v26 = v8;
        unsigned __int8 v27 = 2;
        goto LABEL_69;
      }
      uint64_t v36 = v7;
      uint64_t v37 = v6;
      char v38 = v8;
      sub_1C02240D4(v3, v2, v4, 2u);
      sub_1C02240D4(v7, v6, v8, 2u);
      sub_1C02240D4(v3, v2, v4, 2u);
      sub_1C02240D4(v7, v6, v8, 2u);
      sub_1C02240D4(v3, v2, v4, 2u);
      BOOL v33 = _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0((uint64_t)&v39, (uint64_t)&v36);
      sub_1C022422C(v3, v2, v4, 2u);
      sub_1C022422C(v7, v6, v8, 2u);
      sub_1C022422C(v7, v6, v8, 2u);
      sub_1C0224254(v39, v40, v41);
      sub_1C022422C(v3, v2, v4, 2u);
      return v33;
    case 3u:
      if (v9 != 3) {
        goto LABEL_66;
      }
      if (v4 > 0xFD)
      {
        sub_1C02240E8(*(void *)a2, *(void *)(a2 + 8), v8);
        sub_1C02240D4(v7, v6, v8, 3u);
        sub_1C02240D4(v3, v2, v4, 3u);
        sub_1C022422C(v3, v2, v4, 3u);
        uint64_t v10 = v7;
        uint64_t v11 = v6;
        char v12 = v8;
        unsigned __int8 v13 = 3;
        goto LABEL_15;
      }
      uint64_t v39 = *(void *)a1;
      uint64_t v40 = v2;
      char v41 = v4;
      if (v8 > 0xFD)
      {
        sub_1C02240D4(v3, v2, v4, 3u);
        sub_1C02240D4(v7, v6, v8, 3u);
        sub_1C02240D4(v3, v2, v4, 3u);
        sub_1C02240D4(v7, v6, v8, 3u);
        sub_1C02240D4(v3, v2, v4, 3u);
        sub_1C022422C(v3, v2, v4, 3u);
        uint64_t v24 = v7;
        uint64_t v25 = v6;
        char v26 = v8;
        unsigned __int8 v27 = 3;
        goto LABEL_69;
      }
      uint64_t v36 = v7;
      uint64_t v37 = v6;
      char v38 = v8;
      sub_1C02240D4(v3, v2, v4, 3u);
      sub_1C02240D4(v7, v6, v8, 3u);
      sub_1C02240D4(v3, v2, v4, 3u);
      sub_1C02240D4(v7, v6, v8, 3u);
      sub_1C02240D4(v3, v2, v4, 3u);
      BOOL v34 = _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0((uint64_t)&v39, (uint64_t)&v36);
      sub_1C022422C(v3, v2, v4, 3u);
      sub_1C022422C(v7, v6, v8, 3u);
      sub_1C022422C(v7, v6, v8, 3u);
      sub_1C0224254(v39, v40, v41);
      sub_1C022422C(v3, v2, v4, 3u);
      return v34;
    case 4u:
      if (v2 | v3) {
        BOOL v15 = 0;
      }
      else {
        BOOL v15 = v4 == 0;
      }
      if (v15)
      {
        if (v9 != 4 || (v6 | v7) != 0 || v8 != 0) {
          goto LABEL_66;
        }
        sub_1C022422C(0, 0, 0, 4u);
        uint64_t v21 = 0;
LABEL_49:
        sub_1C022422C(v21, 0, 0, 4u);
        return 1;
      }
      if (v3 == 1 && v2 == 0 && v4 == 0)
      {
        if (v9 == 4 && v7 == 1 && v6 == 0 && v8 == 0)
        {
          uint64_t v14 = 1;
          sub_1C022422C(1, 0, 0, 4u);
          sub_1C022422C(1, 0, 0, 4u);
          return v14;
        }
        goto LABEL_66;
      }
      if (v9 == 4 && v7 == 2 && v6 == 0 && v8 == 0)
      {
        sub_1C022422C(2, 0, 0, 4u);
        uint64_t v21 = 2;
        goto LABEL_49;
      }
LABEL_66:
      sub_1C02240D4(*(void *)a2, *(void *)(a2 + 8), v8, v9);
      sub_1C02240D4(v3, v2, v4, v5);
      sub_1C022422C(v3, v2, v4, v5);
      sub_1C022422C(v7, v6, v8, v9);
      return 0;
    default:
      if (*(unsigned char *)(a2 + 17)) {
        goto LABEL_66;
      }
      if (v4 <= 0xFD)
      {
        uint64_t v39 = *(void *)a1;
        uint64_t v40 = v2;
        char v41 = v4;
        if (v8 <= 0xFD)
        {
          uint64_t v36 = v7;
          uint64_t v37 = v6;
          char v38 = v8;
          sub_1C02240D4(v3, v2, v4, 0);
          sub_1C02240D4(v7, v6, v8, 0);
          sub_1C02240D4(v3, v2, v4, 0);
          sub_1C02240D4(v7, v6, v8, 0);
          sub_1C02240D4(v3, v2, v4, 0);
          BOOL v35 = _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0((uint64_t)&v39, (uint64_t)&v36);
          sub_1C022422C(v3, v2, v4, 0);
          sub_1C022422C(v7, v6, v8, 0);
          sub_1C022422C(v7, v6, v8, 0);
          sub_1C0224254(v39, v40, v41);
          sub_1C022422C(v3, v2, v4, 0);
          return v35;
        }
        sub_1C02240D4(v3, v2, v4, 0);
        sub_1C02240D4(v7, v6, v8, 0);
        sub_1C02240D4(v3, v2, v4, 0);
        sub_1C02240D4(v7, v6, v8, 0);
        sub_1C02240D4(v3, v2, v4, 0);
        sub_1C022422C(v3, v2, v4, 0);
        uint64_t v24 = v7;
        uint64_t v25 = v6;
        char v26 = v8;
        unsigned __int8 v27 = 0;
LABEL_69:
        sub_1C022422C(v24, v25, v26, v27);
        sub_1C0224254(v3, v2, v4);
      }
      else
      {
        sub_1C02240E8(*(void *)a2, *(void *)(a2 + 8), v8);
        sub_1C02240D4(v7, v6, v8, 0);
        sub_1C02240D4(v3, v2, v4, 0);
        sub_1C022422C(v3, v2, v4, 0);
        uint64_t v10 = v7;
        uint64_t v11 = v6;
        char v12 = v8;
        unsigned __int8 v13 = 0;
LABEL_15:
        sub_1C022422C(v10, v11, v12, v13);
        if (v8 > 0xFD) {
          return 1;
        }
      }
LABEL_70:
      sub_1C0224240(v3, v2, v4);
      sub_1C0224240(v7, v6, v8);
      return 0;
  }
}

unint64_t sub_1C0A7888C(uint64_t a1)
{
  unint64_t result = sub_1C0A788B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A788B4()
{
  unint64_t result = qword_1EA1A2F60;
  if (!qword_1EA1A2F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2F60);
  }
  return result;
}

unint64_t sub_1C0A78908(void *a1)
{
  a1[1] = sub_1C086743C();
  a1[2] = sub_1C090593C();
  unint64_t result = sub_1C0A78940();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A78940()
{
  unint64_t result = qword_1EA1A2F68;
  if (!qword_1EA1A2F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2F68);
  }
  return result;
}

uint64_t _s4TextOwxx_0(uint64_t a1)
{
  return sub_1C022422C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(unsigned char *)(a1 + 17));
}

uint64_t _s4TextOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 17);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C02240D4(*(void *)a2, v4, v6, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  return a1;
}

uint64_t _s4TextOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 17);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C02240D4(*(void *)a2, v4, v6, v5);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 17);
  *(unsigned char *)(a1 + 17) = v5;
  sub_1C022422C(v7, v8, v9, v10);
  return a1;
}

uint64_t _s4TextOwta_0(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 17);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_1C022422C(v4, v5, v7, v6);
  return a1;
}

uint64_t sub_1C0A78AC8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 17) <= 3u) {
    return *(unsigned __int8 *)(a1 + 17);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C0A78AE0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(unsigned char *)(result + 16) = 0;
  }
  *(unsigned char *)(result + 17) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Text()
{
  return &type metadata for FormatWeatherBinding.Text;
}

unsigned char *_s4TextO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A78BD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4TextO10CodingTypeOMa_0()
{
  return &_s4TextO10CodingTypeON_0;
}

unint64_t sub_1C0A78C14()
{
  unint64_t result = qword_1EA1A2F70;
  if (!qword_1EA1A2F70)
  {
    sub_1C0A78C6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2F70);
  }
  return result;
}

void sub_1C0A78C6C()
{
  if (!qword_1EA1A2F78)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2F78);
    }
  }
}

unint64_t sub_1C0A78CC8()
{
  unint64_t result = qword_1EA1A2F80;
  if (!qword_1EA1A2F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2F80);
  }
  return result;
}

unint64_t sub_1C0A78D1C()
{
  unint64_t result = qword_1EB866C30;
  if (!qword_1EB866C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866C30);
  }
  return result;
}

uint64_t sub_1C0A78D70()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

void sub_1C0A78DBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for DebugPersonalizationItem(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 56);
  if (v2 >= 2) {
    unsigned int v2 = *(_DWORD *)result + 2;
  }
  if (v2 != 1)
  {
    if (v2) {
      return result;
    }
    unint64_t result = swift_bridgeObjectRelease();
    if (!*(void *)(v1 + 40)) {
      return result;
    }
    v1 += 16;
  }
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for DebugPersonalizationItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    long long v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
    *(unsigned char *)(a1 + 56) = 1;
  }
  else if (v4)
  {
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    unsigned int v6 = (_OWORD *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v7;
      *(void *)(a1 + 48) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16, v7);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *v6;
      *(_OWORD *)(a1 + 32) = v11;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for DebugPersonalizationItem(uint64_t a1, long long *a2)
{
  uint64_t v2 = a1;
  if ((long long *)a1 == a2) {
    return v2;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 != 1)
  {
    if (v4) {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    if (!*(void *)(v2 + 40)) {
      goto LABEL_9;
    }
    a1 = v2 + 16;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_9:
  unsigned int v5 = *((unsigned __int8 *)a2 + 56);
  if (v5 >= 2) {
    unsigned int v5 = *(_DWORD *)a2 + 2;
  }
  if (v5 == 1)
  {
    uint64_t v7 = *((void *)a2 + 3);
    *(void *)(v2 + 24) = v7;
    *(void *)(v2 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v7 - 8))(v2, a2);
    *(unsigned char *)(v2 + 56) = 1;
  }
  else if (v5)
  {
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[2];
    *(_OWORD *)(v2 + 41) = *(long long *)((char *)a2 + 41);
    *(_OWORD *)(v2 + 16) = v9;
    *(_OWORD *)(v2 + 32) = v10;
    *(_OWORD *)uint64_t v2 = v8;
  }
  else
  {
    *(void *)uint64_t v2 = *(void *)a2;
    *(void *)(v2 + 8) = *((void *)a2 + 1);
    uint64_t v6 = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    if (v6)
    {
      *(void *)(v2 + 40) = v6;
      *(void *)(v2 + 48) = *((void *)a2 + 6);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(v2 + 16, (uint64_t)(a2 + 1), v6);
    }
    else
    {
      long long v11 = a2[1];
      long long v12 = a2[2];
      *(void *)(v2 + 48) = *((void *)a2 + 6);
      *(_OWORD *)(v2 + 16) = v11;
      *(_OWORD *)(v2 + 32) = v12;
    }
    *(unsigned char *)(v2 + 56) = 0;
  }
  return v2;
}

uint64_t assignWithTake for DebugPersonalizationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 != 1)
  {
    if (v4) {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    if (!*(void *)(v2 + 40)) {
      goto LABEL_9;
    }
    a1 = v2 + 16;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_9:
  unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
  if (v5 >= 2) {
    unsigned int v5 = *(_DWORD *)a2 + 2;
  }
  if (v5 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v7;
    *(void *)(v2 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(v2 + 56) = 1;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v6;
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
    if (v5)
    {
      *(_OWORD *)(v2 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      *(void *)(v2 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(v2 + 56) = 0;
    }
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for DebugFormatUploadConfirmItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadConfirmItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationItem()
{
  return &type metadata for DebugPersonalizationItem;
}

unsigned char *storeEnumTagSinglePayload for DebugPersonalizationItem.LoadingItemType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0A79358);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationItem.LoadingItemType()
{
  return &type metadata for DebugPersonalizationItem.LoadingItemType;
}

unint64_t sub_1C0A79394()
{
  unint64_t result = qword_1EA1A2F88;
  if (!qword_1EA1A2F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1A2F88);
  }
  return result;
}

uint64_t sub_1C0A793E8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        long long v6 = (void *)MEMORY[0x1C18C7CB0](v5, a1);
      }
      else
      {
        long long v6 = *(void **)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      id v7 = objc_msgSend(v6, sel_identifier);
      uint64_t v8 = sub_1C151E62C();
      uint64_t v10 = v9;
      swift_unknownObjectRelease();

      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_1BFF661B8(v11 > 1, v12 + 1, 1);
      }
      ++v5;
      *(void *)(v14 + 16) = v12 + 1;
      uint64_t v13 = v14 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t FeedDatabaseType.hotSwap(group:context:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a3;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a5;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  BOOL v35 = (char *)&v26 - v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v26 - v11;
  uint64_t v27 = a4;
  uint64_t v28 = (char *)&v26 - v11;
  uint64_t v13 = a4;
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C151917C();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v30, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v31, v8);
  uint64_t v18 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v32, AssociatedTypeWitness);
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v20 = (v15 + v19 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v21 = (v10 + *(unsigned __int8 *)(v18 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v22 = (v6 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v33;
  *(void *)(v23 + 16) = v27;
  *(void *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *))(v14 + 32))(v23 + v19, v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v20, v28, v8);
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v23 + v21, v35, AssociatedTypeWitness);
  *(void *)(v23 + v22) = v34;
  swift_retain();
  return sub_1C1518FDC();
}

uint64_t sub_1C0A799B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 88)
                                                                                     + **(int **)(a7 + 88));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_1BFC542F4;
  return v16(a1, a3, a4, a5, a6, a7);
}

uint64_t sub_1C0A79AE4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v11 = *(void *)(v0 + 16);
  unint64_t v12 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v2 = v12 + *(void *)(v1 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = (v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v12, v11);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A79E08(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  unint64_t v5 = v4 + *(void *)(*(void *)(v3 - 8) + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1 + v4;
  uint64_t v12 = v1 + v7;
  uint64_t v13 = v1 + v10;
  uint64_t v14 = *(void *)(v1 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v17 + 16) = v15;
  *uint64_t v15 = v17;
  v15[1] = sub_1C005E7F4;
  return sub_1C0A799B4(a1, v11, v12, v13, v14, v3, v2);
}

void *FeedDatabase.__allocating_init(log:feedCursorFactory:feedGroupProcessor:lazyDatabase:referenceService:saveJournalEntries:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v7 = v6;
  swift_allocObject();
  uint64_t v14 = sub_1C0A8C6E4(a1, a2, a3, a4, a5, a6);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v7 + 88) - 8) + 8))(a3);

  swift_unknownObjectRelease();
  return v14;
}

void *FeedDatabase.init(log:feedCursorFactory:feedGroupProcessor:lazyDatabase:referenceService:saveJournalEntries:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9 = *v6;
  unint64_t v10 = sub_1C0A8C6E4(a1, a2, a3, a4, a5, a6);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 88) - 8) + 8))(a3);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1C0A7A2B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = CACurrentMediaTime();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedDatabaseStore();
  id v5 = a1;
  sub_1C1518CEC();
  uint64_t v6 = sub_1C1001BA4(v5, v11);
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  CFTimeInterval v8 = CACurrentMediaTime();
  uint64_t v9 = MEMORY[0x1E4FBB460];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v7 + 64) = v9;
  *(CFTimeInterval *)(v7 + 32) = (v8 - v4) * 1000.0;
  sub_1C151F38C();
  sub_1C15197BC();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void FeedDatabase.readRootCursor(context:state:)(uint64_t a1, uint64_t a2)
{
  double v5 = CACurrentMediaTime();
  uint64_t v6 = sub_1BFEB00CC();
  if (!v2)
  {
    uint64_t v7 = (uint64_t *)v6;
    sub_1C151F38C();
    sub_1C15197BC();
    unint64_t v22 = sub_1C0A7ADD8(a1, a2, v7, 0);
    sub_1C1519B9C();
    uint64_t v8 = sub_1C1519B4C();
    swift_release();
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = v8 + 48;
      do
      {
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C151997C();
        sub_1C1519BFC();
        swift_release();
        if (!*((void *)&v24 + 1))
        {
          __break(1u);
LABEL_19:
          __break(1u);
          __break(1u);
          __break(1u);
          JUMPOUT(0x1C0A7ADBCLL);
        }
        sub_1C151997C();
        sub_1C1519BFC();
        swift_release();
        if (BYTE8(v24)) {
          goto LABEL_19;
        }
        sub_1C151997C();
        sub_1C1519BFC();
        swift_release();
        uint64_t v23 = v9;
        sub_1C151997C();
        sub_1C1519BFC();
        swift_release();
        sub_1C151997C();
        sub_1C1519BFC();
        swift_release();
        long long v28 = v29;
        uint64_t v25 = v24;
        long long v26 = v24;
        long long v27 = v24;
        sub_1C1518DDC();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v10 += 64;
        --v9;
      }
      while (v23 != 1);
    }
    swift_bridgeObjectRelease();
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C152C7F0;
    uint64_t v12 = sub_1BFE16970(v22);
    uint64_t v14 = v13;
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v16 = sub_1BFE9C558();
    *(void *)(v11 + 64) = v16;
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    FeedCursorContainer.kind.getter(v22, &v24);
    unint64_t v17 = 0xE600000000000000;
    uint64_t v18 = 0x657669746341;
    switch((char)v24)
    {
      case 1:
        unint64_t v17 = 0xE400000000000000;
        uint64_t v18 = 1852138835;
        break;
      case 2:
        uint64_t v18 = 0x6E657A6F7246;
        break;
      case 3:
        unint64_t v17 = 0xEB00000000646565;
        uint64_t v18 = 0x4620666F20646E45;
        break;
      case 4:
        uint64_t v18 = 0x646568636143;
        break;
      case 5:
        unint64_t v17 = 0xE800000000000000;
        uint64_t v19 = 0x6C6F6F706552;
        goto LABEL_16;
      case 6:
        unint64_t v17 = 0xE800000000000000;
        uint64_t v19 = 0x646E61707845;
LABEL_16:
        uint64_t v18 = v19 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
        break;
      default:
        break;
    }
    *(void *)(v11 + 96) = v15;
    *(void *)(v11 + 104) = v16;
    *(void *)(v11 + 72) = v18;
    *(void *)(v11 + 80) = v17;
    swift_bridgeObjectRetain();
    CFTimeInterval v20 = CACurrentMediaTime();
    uint64_t v21 = MEMORY[0x1E4FBB460];
    *(void *)(v11 + 136) = MEMORY[0x1E4FBB3D0];
    *(void *)(v11 + 144) = v21;
    *(CFTimeInterval *)(v11 + 112) = (v20 - v5) * 1000.0;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C0A7ADD8(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  LODWORD(v112) = a4;
  uint64_t v110 = a1;
  uint64_t v94 = *v4;
  uint64_t v6 = v94;
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 80);
  uint64_t v95 = a2;
  uint64_t v9 = *(void *)(v7 + 88);
  uint64_t v10 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v98 = sub_1C151FD8C();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v96 = &v77[-v11];
  uint64_t v100 = v10;
  uint64_t v103 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v93 = &v77[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v99 = &v77[-v15];
  unint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v105 = &v77[-v18];
  uint64_t v109 = v4;
  uint64_t v92 = *(void *)(v6 + 96);
  swift_getAssociatedTypeWitness();
  uint64_t v102 = v9;
  uint64_t v101 = v8;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v111 = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v107 = &v77[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v21);
  uint64_t v108 = &v77[-v22];
  sub_1BFD98850(0, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8], v16);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = &v77[-v24];
  uint64_t v26 = sub_1C151995C();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  long long v29 = &v77[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = a3;
  sub_1C1519B9C();
  v114[3] = sub_1C1519C6C();
  v114[4] = MEMORY[0x1E4FAA6F0];
  __swift_allocate_boxed_opaque_existential_0(v114);
  sub_1C1519C7C();
  sub_1C1519AEC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
  *uint64_t v25 = 0x4464657461657263;
  v25[1] = 0xEB00000000657461;
  uint64_t v30 = *MEMORY[0x1E4FAA6D8];
  uint64_t v31 = sub_1C1519C5C();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v32 + 104))(v25, v30, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v25, 0, 1, v31);
  uint64_t v33 = v137;
  sub_1C1519B5C();
  if (v33)
  {
    swift_release();
    sub_1BFD987E0((uint64_t)v25, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v27 + 8))(v29, v26);
  }
  uint64_t v82 = AssociatedTypeWitness;
  uint64_t v35 = v111;
  char v36 = v112;
  swift_release();
  sub_1BFD987E0((uint64_t)v25, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v29, v26);
  if (!(void)v115)
  {
    sub_1C0A8CD28();
    swift_allocError();
    *(void *)uint64_t v47 = 0;
    *(void *)(v47 + 8) = 0;
    *(unsigned char *)(v47 + 16) = 7;
    return swift_willThrow();
  }
  uint64_t v37 = v119;
  uint64_t v39 = v120;
  uint64_t v38 = v121;
  uint64_t v87 = v115;
  long long v126 = v115;
  uint64_t v137 = *((void *)&v115 + 1);
  uint64_t v88 = v116;
  uint64_t v127 = v116;
  uint64_t v128 = v117;
  uint64_t v89 = v117;
  uint64_t v90 = v118;
  uint64_t v129 = v118;
  uint64_t v130 = v119;
  uint64_t v131 = v120;
  uint64_t v132 = v121;
  uint64_t v86 = v122;
  uint64_t v133 = v122;
  uint64_t v134 = v123;
  uint64_t v85 = v123;
  uint64_t v84 = v124;
  uint64_t v135 = v124;
  uint64_t v136 = v125;
  uint64_t v91 = v125;
  sub_1C151997C();
  sub_1C1519BFC();
  unint64_t result = swift_release();
  uint64_t v40 = *((void *)&v115 + 1);
  if (!*((void *)&v115 + 1))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v83 = v37;
  uint64_t v41 = v115;
  FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v40 - 1));
  uint64_t v42 = v109;
  uint64_t v43 = v113;
  if (LOBYTE(v114[0]) <= 5u && ((1 << SLOBYTE(v114[0])) & 0x31) != 0)
  {
    int v78 = LOBYTE(v114[0]);
    uint64_t v80 = v39;
    uint64_t v44 = v108;
    uint64_t v79 = *(void (**)(void))(v113 + 16);
    v79();
    uint64_t v81 = v38;
    if (v36)
    {
      (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v44, v35);
      uint64_t v45 = (uint64_t)v107;
      char v46 = v42;
LABEL_12:
      ((void (*)(uint64_t, uint64_t, uint64_t))v79)(v45, v110, v35);
      uint64_t v54 = v106;
      sub_1C1519B9C();
      uint64_t v59 = sub_1C1519B4C();
      swift_release();
      uint64_t v60 = v99;
      sub_1BFCAF144(v45, v59, v101, v102, (uint64_t)v99);
      uint64_t v61 = v103;
      uint64_t v62 = (uint64_t)v96;
      uint64_t v63 = v100;
      uint64_t v113 = *(void *)(v103 + 16);
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v113)(v96, v60, v100);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v63);
      sub_1BFCE898C(v62);
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v62, v98);
      uint64_t v64 = v54;
      uint64_t v65 = v60;
      sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_1C1529AE0;
      uint64_t v67 = *(void *)(*(void *)&v60[*(int *)(v63 + 36)] + 16);
      uint64_t v68 = MEMORY[0x1E4FBB5C8];
      *(void *)(v66 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v66 + 64) = v68;
      *(void *)(v66 + 32) = v67;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      uint64_t v70 = sub_1BFC7CE20(v64, (uint64_t)&v126);
      uint64_t v71 = *(void *)(v94 + 104);
      long long v115 = *(_OWORD *)(v94 + 80);
      uint64_t v116 = v92;
      uint64_t v117 = v71;
      uint64_t v112 = type metadata accessor for FeedDatabaseContext();
      type metadata accessor for FeedCursorTracker();
      uint64_t v72 = (uint64_t)v93;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v113)(v93, v65, v63);
      uint64_t v73 = v95;
      swift_retain();
      swift_retain();
      uint64_t v74 = FeedCursorTracker.__allocating_init(snapshot:)(v72);
      uint64_t v75 = sub_1C1084DA8(v73, v70, v74, *(void *)((char *)v46 + *(void *)(*v46 + 176)), (uint64_t)v46 + *(void *)(*v46 + 160));
      LOBYTE(v115) = v78;
      swift_retain();
      unint64_t v76 = sub_1BFC94D58(v106, &v126, (unsigned __int8 *)&v115, v75);
      sub_1BFC6B780(v87);
      swift_release();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v103 + 8))(v65, v63);
      return FeedCursorContainer.init(deferredCursor:)((uint64_t)v76);
    }
    sub_1C151997C();
    uint64_t v48 = (uint64_t)v105;
    sub_1C1519BFC();
    swift_release();
    uint64_t v49 = sub_1C151631C();
    uint64_t v50 = *(void *)(v49 - 8);
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49);
    if (result != 1)
    {
      uint64_t v51 = swift_getAssociatedConformanceWitness();
      uint64_t v52 = v108;
      char v53 = FeedServiceContextType.shouldReadRootCursorFromDatabase(createdDate:)(v48, v35, v51);
      (*(void (**)(unsigned char *, uint64_t))(v113 + 8))(v52, v35);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
      char v46 = v109;
      uint64_t v45 = (uint64_t)v107;
      if (v53) {
        goto LABEL_12;
      }
      sub_1C0A8CD28();
      swift_allocError();
      *(_OWORD *)uint64_t v69 = xmmword_1C1557FF0;
      *(unsigned char *)(v69 + 16) = 7;
      swift_willThrow();
      uint64_t v58 = v87;
      return sub_1BFC6B780(v58);
    }
    goto LABEL_18;
  }
  sub_1C151997C();
  sub_1C1519BFC();
  unint64_t result = swift_release();
  uint64_t v55 = *((void *)&v115 + 1);
  if (*((void *)&v115 + 1))
  {
    uint64_t v56 = v115;
    sub_1C0A8CD28();
    swift_allocError();
    *(void *)uint64_t v57 = v56;
    *(void *)(v57 + 8) = v55;
    *(unsigned char *)(v57 + 16) = 2;
    swift_willThrow();
    uint64_t v58 = v87;
    return sub_1BFC6B780(v58);
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1C0A7BE44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  os_unfair_lock_lock((os_unfair_lock_t)(*(uint64_t *)((char *)v2 + *(void *)(*v2 + 200)) + 16));
  uint64_t v7 = *(void *)(*v2 + 208);
  if (*((unsigned char *)v2 + v7) == 1)
  {
    *((unsigned char *)v2 + v7) = 0;
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EB86C1E0 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    if (v16 == 1)
    {
      uint64_t v8 = FeedCursorContainer.rootCursorContainer.getter(a2);
      uint64_t v9 = sub_1BFE16970(v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRetain();
      swift_release();
      sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
      *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v12 + 64) = sub_1BFE9C558();
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v11;
      swift_bridgeObjectRetain();
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      uint64_t v13 = swift_allocObject();
      swift_weakInit();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = *(void *)(v6 + 80);
      *(void *)(v14 + 24) = *(void *)(v6 + 88);
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(v6 + 96);
      *(void *)(v14 + 48) = *(void *)(v6 + 112);
      *(_OWORD *)(v14 + 56) = *(_OWORD *)(v6 + 120);
      *(void *)(v14 + 72) = *(void *)(v6 + 136);
      *(void *)(v14 + 80) = v13;
      *(void *)(v14 + 88) = v9;
      *(void *)(v14 + 96) = v11;
      *(void *)(v14 + 104) = a1;
      swift_retain();
      swift_retain();
      sub_1BFEB0134((uint64_t)sub_1C0A8DC9C, v14);
      swift_release();
      swift_release();
    }
    else
    {
      sub_1C151F38C();
      sub_1C15197BC();
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(*(uint64_t *)((char *)v3 + *(void *)(*v3 + 200)) + 16));
  }
  else
  {
    uint64_t v15 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v2 + *(void *)(*v2 + 200)) + 16);
    os_unfair_lock_unlock(v15);
  }
}

void *sub_1C0A7C1E4(uint64_t a1, unint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v50 = a7;
  uint64_t v48 = a5;
  uint64_t v69 = a3;
  swift_getAssociatedTypeWitness();
  uint64_t v51 = a8;
  uint64_t v49 = a6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v59 = (char *)&v46 - v17;
  uint64_t v18 = swift_checkMetadataState();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x1F4188790](v18);
  uint64_t v61 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v73 = (char *)&v46 - v22;
  swift_beginAccess();
  unint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v24 = result;
    uint64_t v25 = FeedServiceFetchResult.groups.getter(a2);
    if (MEMORY[0x1C18C6870](v25, v18))
    {
      uint64_t v47 = v20;
      uint64_t v26 = 0;
      uint64_t v64 = (void (**)(uint64_t, char *, uint64_t))(v19 + 32);
      uint64_t v65 = (void (**)(char *, void **, uint64_t))(v19 + 16);
      uint64_t v54 = AssociatedConformanceWitness + 64;
      char v53 = (void (**)(char *, uint64_t))(v16 + 8);
      uint64_t v63 = (void (**)(char *, uint64_t))(v19 + 8);
      long long v52 = xmmword_1C152C7F0;
      uint64_t v58 = a4;
      uint64_t v57 = v19;
      uint64_t v27 = (uint64_t)v61;
      uint64_t v55 = v18;
      uint64_t v56 = v24;
      uint64_t v71 = v25;
      while (1)
      {
        char v28 = sub_1C151ECDC();
        sub_1C151EC7C();
        if (v28)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v73, v25+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v26, v18);
          uint64_t v29 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            goto LABEL_22;
          }
        }
        else
        {
          unint64_t result = (void *)sub_1C152016C();
          if (v47 != 8)
          {
            __break(1u);
            return result;
          }
          uint64_t v74 = result;
          (*v65)(v73, &v74, v18);
          swift_unknownObjectRelease();
          uint64_t v29 = v26 + 1;
          if (__OFADD__(v26, 1))
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        uint64_t v72 = v29;
        (*v64)(v27, v73, v18);
        uint64_t v30 = v11;
        sub_1C0A7C8E8(v69, v27, (unint64_t)a4);
        if (!v11) {
          break;
        }
        uint64_t v11 = 0;
        id v77 = v30;
        id v31 = v30;
        uint64_t v70 = sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        char v32 = swift_dynamicCast();
        uint64_t v25 = v71;
        if ((v32 & 1) == 0)
        {
          uint64_t v68 = 0;
          goto LABEL_15;
        }
        if (v76 != 7 || v74 != (void *)3 || v75)
        {
          uint64_t v68 = 0;
          sub_1C093C7E0(v74, v75, v76);
LABEL_15:

          uint64_t v67 = v24[2];
          int v66 = sub_1C151F36C();
          sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
          uint64_t v33 = swift_allocObject();
          *(_OWORD *)(v33 + 16) = v52;
          uint64_t v74 = 0;
          id v75 = (id)0xE000000000000000;
          uint64_t v34 = v61;
          uint64_t v35 = v59;
          uint64_t v18 = v55;
          (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v55, AssociatedConformanceWitness);
          uint64_t v36 = AssociatedTypeWitness;
          sub_1C1520A2C();
          (*v53)(v35, v36);
          uint64_t v37 = v74;
          id v38 = v75;
          *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v39 = sub_1BFE9C558();
          *(void *)(v33 + 64) = v39;
          *(void *)(v33 + 32) = v37;
          *(void *)(v33 + 40) = v38;
          uint64_t v24 = v56;
          uint64_t v40 = sub_1C151811C();
          uint64_t v41 = MEMORY[0x1E4FBB1A0];
          *(void *)(v33 + 96) = MEMORY[0x1E4FBB1A0];
          *(void *)(v33 + 104) = v39;
          *(void *)(v33 + 72) = v40;
          *(void *)(v33 + 80) = v42;
          uint64_t v74 = 0;
          id v75 = (id)0xE000000000000000;
          id v77 = v30;
          sub_1C152036C();
          uint64_t v43 = v74;
          id v44 = v75;
          *(void *)(v33 + 136) = v41;
          *(void *)(v33 + 144) = v39;
          *(void *)(v33 + 112) = v43;
          *(void *)(v33 + 120) = v44;
          sub_1C15197BC();
          uint64_t v27 = (uint64_t)v34;
          swift_bridgeObjectRelease();

          (*v63)(v34, v18);
          uint64_t v11 = v68;
          a4 = v58;
          uint64_t v19 = v57;
LABEL_16:
          uint64_t v25 = v71;
          goto LABEL_17;
        }
        (*v63)((char *)v27, v18);

LABEL_17:
        uint64_t v45 = MEMORY[0x1C18C6870](v25, v18);
        ++v26;
        if (v72 == v45) {
          goto LABEL_23;
        }
      }
      (*v63)((char *)v27, v18);
      uint64_t v11 = 0;
      goto LABEL_16;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    sub_1C0A8D6D0(v69, a4, v48, v49, v50, v51, a9, a10);
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_1C0A7C8E8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v118 = a2;
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = (void *)*v3;
  sub_1C0A8DA10();
  uint64_t v107 = v8;
  uint64_t v104 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v108 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = a1;
  uint64_t v10 = type metadata accessor for FeedCursorGroup();
  uint64_t v11 = sub_1C151FD8C();
  uint64_t v112 = *(void *)(v11 - 8);
  uint64_t v113 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v93 - v12;
  uint64_t v117 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v111 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v114 = (char *)&v93 - v17;
  unint64_t v115 = a3;
  *(void *)&long long v132 = *(void *)(a3 + qword_1EB93C680);
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151E53C();
  v139[16] = v139[17];
  uint64_t v119 = v6[10];
  long long v106 = *(_OWORD *)(v7 + 11);
  long long v120 = v106;
  long long v105 = *(_OWORD *)(v7 + 13);
  long long v121 = v105;
  uint64_t v122 = v6[15];
  uint64_t v18 = v6[16];
  uint64_t v123 = v18;
  uint64_t v109 = v3;
  uint64_t v19 = v6[17];
  uint64_t v124 = v19;
  uint64_t v125 = v118;
  uint64_t v20 = v117;
  sub_1C15204AC();
  swift_getWitnessTable();
  uint64_t v21 = v116;
  sub_1C151E9BC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v10) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v13, v113);
  }
  uint64_t v23 = v114;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v114, v13, v10);
  uint64_t v24 = (uint64_t)v111;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v111, v23, v10);
  unint64_t v25 = v115;
  uint64_t v26 = (uint64_t *)swift_retain();
  sub_1C02FE904(v26, v24, v19, (uint64_t *)v140);
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v10);
  }
  uint64_t v27 = v19;
  unint64_t v28 = v25;
  uint64_t v116 = v27;
  sub_1C1519B8C();
  long long v134 = v140[2];
  long long v135 = v140[3];
  long long v136 = v140[4];
  long long v137 = v140[5];
  long long v132 = v140[0];
  long long v133 = v140[1];
  sub_1C1519B3C();
  swift_release();
  if (*((unsigned char *)v109 + *(void *)(*v109 + 184)) != 1) {
    goto LABEL_30;
  }
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EA1944D0 != -1) {
    swift_once();
  }
  sub_1C151703C();
  swift_release();
  if (v132 != 1)
  {
LABEL_30:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v10);
    return sub_1BFDA5D5C((uint64_t)v140);
  }
  uint64_t v113 = v18;
  uint64_t v29 = (void *)(v25 + *(void *)(*(void *)v25 + 240));
  uint64_t v30 = v29[1];
  uint64_t v31 = FeedCursorGroup.identifier.getter();
  if (!*(void *)(v30 + 16) || (unint64_t v33 = sub_1BFEF2D8C(v31, v32), (v34 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v114, v10);
    return sub_1BFDA5D5C((uint64_t)v140);
  }
  uint64_t v35 = (uint64_t *)(*(void *)(v30 + 56) + 24 * v33);
  unint64_t v36 = v35[1];
  uint64_t v112 = *v35;
  swift_bridgeObjectRetain();
  uint64_t v111 = (char *)v36;
  sub_1BFE60260(v36);
  swift_bridgeObjectRelease();
  double v37 = CACurrentMediaTime();
  uint64_t v101 = v109[2];
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v100 = v38;
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C1527210;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v109 = v29;
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v42 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 8) + 24);
  uint64_t v99 = v41;
  uint64_t v43 = sub_1C151811C();
  uint64_t v45 = v44;
  uint64_t v46 = MEMORY[0x1E4FBB1A0];
  *(void *)(v39 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v47 = sub_1BFE9C558();
  *(void *)(v39 + 32) = v43;
  *(void *)(v39 + 40) = v45;
  uint64_t v49 = *(void *)(v28 + 16);
  uint64_t v48 = *(void *)(v28 + 24);
  *(void *)(v39 + 96) = v46;
  *(void *)(v39 + 104) = v47;
  uint64_t v96 = v48;
  unint64_t v97 = v47;
  *(void *)(v39 + 64) = v47;
  *(void *)(v39 + 72) = v49;
  uint64_t v95 = v49;
  *(void *)(v39 + 80) = v48;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v50 = v109[2];
  uint64_t v51 = FeedCursorGroup.identifier.getter();
  uint64_t v53 = *(void *)(v50 + 16);
  uint64_t v98 = v42;
  if (!v53 || (unint64_t v54 = sub_1BFEF2D8C(v51, v52), (v55 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  uint64_t v94 = v10;
  uint64_t v56 = *(void *)(*(void *)(v50 + 56) + 8 * v54);
  swift_bridgeObjectRelease();
  uint64_t v57 = *v109;
  sub_1BFC6CA08(0, &qword_1EB86B020);
  uint64_t v59 = v58;
  uint64_t v60 = sub_1BFD989C8((unint64_t *)&unk_1EB86B028, &qword_1EB86B020);
  *(void *)&long long v105 = v57;
  *(void *)&long long v132 = v57;
  uint64_t v61 = v108;
  uint64_t v102 = v60;
  uint64_t v103 = v59;
  sub_1C151F0AC();
  uint64_t v62 = v56 - 1;
  if (!__OFSUB__(v56, 1))
  {
    uint64_t v109 = (void *)(v104 + 8);
    *(void *)&long long v106 = v139;
    uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      v131[0] = v62;
      uint64_t v64 = v107;
      sub_1C151842C();
      ((void (*)(char *, uint64_t))*v109)(v61, v64);
      unint64_t v65 = v132;
      if (!(void)v132)
      {
LABEL_41:
        uint64_t result = (uint64_t)v63;
        uint64_t v86 = v63[2];
        if (!v86) {
          goto LABEL_54;
        }
        uint64_t v87 = v63 + 4;
        uint64_t v108 = (char *)(v63 + 4);
        while (1)
        {
          if (v86 > *(void *)(result + 16))
          {
            __break(1u);
            return result;
          }
          --v86;
          uint64_t v88 = &v87[3 * v86];
          uint64_t v89 = *v88;
          uint64_t v90 = *(void *)(*v88 + 16);
          if (v90) {
            break;
          }
LABEL_43:
          if (!v86) {
            goto LABEL_54;
          }
        }
        uint64_t v109 = (void *)v86;
        unint64_t v28 = v88[1];
        swift_bridgeObjectRetain();
        sub_1BFE60260(v28);
        swift_bridgeObjectRetain();
        uint64_t v91 = v89 + 32;
        while (1)
        {
          *(void *)&long long v126 = v28;
          if (!*(void *)(v89 + 16)) {
            goto LABEL_51;
          }
          sub_1BFE60390(v89 + 32, (uint64_t)&v132);
          sub_1BFE60390(v91, (uint64_t)v131);
          uint64_t v92 = v115;
          swift_retain();
          sub_1BFE60260(v28);
          sub_1C038AC7C((unint64_t *)&v126, (uint64_t *)&v132, (uint64_t)v131, v92, v116, (uint64_t *)v141);
          sub_1C1519B8C();
          long long v136 = v141[4];
          long long v137 = v141[5];
          uint64_t v138 = v142;
          long long v132 = v141[0];
          long long v133 = v141[1];
          long long v134 = v141[2];
          long long v135 = v141[3];
          sub_1C1519B3C();
          swift_release();
          sub_1C0A8DAF4((uint64_t)v141);
          v91 += 248;
          if (!--v90)
          {
            swift_bridgeObjectRelease_n();
            sub_1BFD7F858(v28);
            unint64_t v28 = v115;
            uint64_t result = (uint64_t)v63;
            uint64_t v87 = v108;
            uint64_t v86 = (uint64_t)v109;
            goto LABEL_43;
          }
        }
      }
      if (!*(void *)(v132 + 16)) {
        goto LABEL_52;
      }
      unint64_t v66 = *((void *)&v132 + 1);
      uint64_t v67 = v133;
      sub_1BFE60390(v132 + 32, (uint64_t)&v132);
      sub_1BFD7EBD0(v106, (uint64_t)v131);
      sub_1BFE60270((uint64_t)&v132);
      sub_1BFD7EBD0((uint64_t)v131, (uint64_t)&v126);
      if (v129 >= 3u)
      {
        if (v129 - 4 < 3)
        {
          sub_1BFD7EAE0((uint64_t)&v126);
          long long v126 = 0u;
          long long v127 = 0u;
          uint64_t v128 = 0;
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
      }
      sub_1BFC773DC(&v126, (uint64_t)v130);
      sub_1BFC773DC(v130, (uint64_t)&v126);
LABEL_22:
      sub_1BFD7EAE0((uint64_t)v131);
      uint64_t v68 = *((void *)&v127 + 1);
      sub_1C0A8DBCC((uint64_t)&v126);
      if (v68)
      {
        sub_1BFD7F640(v65, v66);
        goto LABEL_41;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v63 = sub_1BFE608A0(0, v63[2] + 1, 1, v63);
      }
      uint64_t v69 = v63;
      unint64_t v71 = v63[2];
      unint64_t v70 = v63[3];
      if (v71 >= v70 >> 1) {
        uint64_t v69 = sub_1BFE608A0((void *)(v70 > 1), v71 + 1, 1, v63);
      }
      v69[2] = v71 + 1;
      uint64_t v63 = v69;
      uint64_t v72 = &v69[3 * v71];
      v72[4] = v65;
      v72[5] = v66;
      v72[6] = v67;
      *(void *)&long long v132 = v105;
      uint64_t v61 = v108;
      sub_1C151F0AC();
      BOOL v73 = __OFSUB__(v62--, 1);
      unint64_t v28 = v115;
    }
    while (!v73);
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_54:
    swift_bridgeObjectRelease();
    uint64_t v10 = v94;
    uint64_t v46 = MEMORY[0x1E4FBB1A0];
LABEL_34:
    unint64_t v74 = (unint64_t)v111;
    uint64_t v75 = *(void *)(v112 + 16);
    if (!v75) {
      break;
    }
    uint64_t v76 = v112 + 32;
    uint64_t v77 = swift_bridgeObjectRetain();
    uint64_t v78 = v76;
    while (1)
    {
      *(void *)&long long v126 = v74;
      if (!*(void *)(v77 + 16)) {
        break;
      }
      sub_1BFE60390(v76, (uint64_t)&v132);
      sub_1BFE60390(v78, (uint64_t)v131);
      swift_retain();
      sub_1BFE60260(v74);
      sub_1C038AC7C((unint64_t *)&v126, (uint64_t *)&v132, (uint64_t)v131, v28, v116, (uint64_t *)v143);
      sub_1C1519B8C();
      long long v136 = v143[4];
      long long v137 = v143[5];
      uint64_t v138 = v144;
      long long v132 = v143[0];
      long long v133 = v143[1];
      long long v134 = v143[2];
      long long v135 = v143[3];
      sub_1C1519B3C();
      swift_release();
      sub_1C0A8DAF4((uint64_t)v143);
      v78 += 248;
      --v75;
      unint64_t v74 = (unint64_t)v111;
      uint64_t v77 = v112;
      if (!v75)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = MEMORY[0x1E4FBB1A0];
        goto LABEL_39;
      }
    }
  }
LABEL_39:
  swift_bridgeObjectRelease();
  sub_1BFD7F858(v74);
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_1C152C7F0;
  uint64_t v80 = sub_1C151811C();
  unint64_t v81 = v97;
  *(void *)(v79 + 56) = v46;
  *(void *)(v79 + 64) = v81;
  *(void *)(v79 + 32) = v80;
  *(void *)(v79 + 40) = v82;
  *(void *)(v79 + 96) = v46;
  *(void *)(v79 + 104) = v81;
  uint64_t v83 = v96;
  *(void *)(v79 + 72) = v95;
  *(void *)(v79 + 80) = v83;
  swift_bridgeObjectRetain();
  CFTimeInterval v84 = CACurrentMediaTime();
  uint64_t v85 = MEMORY[0x1E4FBB460];
  *(void *)(v79 + 136) = MEMORY[0x1E4FBB3D0];
  *(void *)(v79 + 144) = v85;
  *(CFTimeInterval *)(v79 + 112) = (v84 - v37) * 1000.0;
  sub_1C151F38C();
  sub_1C15197BC();
  sub_1BFDA5D5C((uint64_t)v140);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v114, v10);
}

uint64_t FeedDatabase.dropAndSave(result:flush:)(uint64_t a1, char a2)
{
  uint64_t v6 = *v2;
  uint64_t result = sub_1BFEB00CC();
  if (!v3)
  {
    uint64_t v8 = result;
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = *(void *)(v6 + 80);
    *(void *)(v10 + 24) = *(void *)(v6 + 88);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v6 + 96);
    *(void *)(v10 + 48) = *(void *)(v6 + 112);
    *(_OWORD *)(v10 + 56) = *(_OWORD *)(v6 + 120);
    *(void *)(v10 + 72) = *(void *)(v6 + 136);
    *(void *)(v10 + 80) = v9;
    *(void *)(v10 + 88) = v8;
    *(void *)(v10 + 96) = a1;
    swift_retain();
    swift_retain();
    if (a2)
    {
      sub_1C1001BFC();
      sub_1C151F38C();
      sub_1C15197BC();
    }
    else
    {
      sub_1BFEB0134((uint64_t)sub_1C0A8CE80, v10);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

id *sub_1C0A7D8FC(uint64_t a1, uint64_t *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v93 = a8;
  uint64_t v91 = a6;
  uint64_t v89 = a4;
  unint64_t v117 = a3;
  uint64_t v15 = (uint64_t)a2;
  uint64_t v16 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v92 = a7;
  uint64_t v90 = a5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v101 = AssociatedTypeWitness;
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(char **)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v99 = (char *)&v82 - v18;
  uint64_t v19 = *(void *)(v16 + 80);
  uint64_t v20 = *(void *)(v16 + 88);
  uint64_t v102 = type metadata accessor for FeedCursorGroup();
  uint64_t v108 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v116 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v118 = (char *)&v82 - v23;
  uint64_t v24 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v115 = sub_1C151FD8C();
  uint64_t v25 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v27 = (char *)&v82 - v26;
  swift_beginAccess();
  uint64_t result = (id *)swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v29 = result;
  id v30 = result[2];
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1BFCE8860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v27, 1, 1, v24);
  sub_1BFCE898C((uint64_t)v27);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v115);
  uint64_t v31 = sub_1BFD009F8(v117);
  swift_retain();
  uint64_t v32 = FeedCursorContainer.rootCursorContainer.getter(v31);
  swift_release();
  if (v32 < 0)
  {
    id v80 = v29[2];
    sub_1C151F38C();
    sub_1C15197BC();
    swift_release();

    return (id *)swift_release();
  }
  uint64_t v88 = a11;
  uint64_t v87 = a10;
  uint64_t v86 = a9;
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v114 = v33;
  long long v106 = (void (**)(char *, char *, uint64_t))(v108 + 32);
  uint64_t v107 = (void (**)(char *, id **, uint64_t))(v108 + 16);
  uint64_t v96 = AssociatedConformanceWitness + 64;
  uint64_t v95 = (void (**)(char *, uint64_t))(v113 + 8);
  long long v105 = (void (**)(char *, uint64_t))(v108 + 8);
  long long v98 = xmmword_1C1529AE0;
  long long v94 = xmmword_1C152C7F0;
  uint64_t v97 = v15;
  uint64_t v34 = v102;
  uint64_t v104 = v29;
  uint64_t v85 = v19;
  uint64_t v84 = v20;
  while (1)
  {
    uint64_t v115 = v32;
    swift_retain();
    id v35 = v29[2];
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = v98;
    uint64_t v37 = qword_1EB93C680;
    uint64_t v38 = *(void *)(v115 + qword_1EB93C680);
    id v39 = v35;
    uint64_t v40 = MEMORY[0x1C18C6830](v38, v34);
    *(void *)(v36 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v36 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v36 + 32) = v40;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v115 + v37);
    unint64_t v42 = v115;
    uint64_t v43 = swift_bridgeObjectRetain();
    if (MEMORY[0x1C18C6870](v43, v34)) {
      break;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    id v72 = v29[2];
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v98;
    uint64_t v74 = *(void *)(v115 + 16);
    uint64_t v75 = *(void *)(v115 + 24);
    *(void *)(v73 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v73 + 64) = sub_1BFE9C558();
    *(void *)(v73 + 32) = v74;
    *(void *)(v73 + 40) = v75;
    uint64_t v76 = (unsigned char *)v115;
    id v77 = v72;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C0A8D6D0(v15, v76, v89, v90, v91, v92, v93, v86);
    if (v12)
    {
      swift_release();
      swift_release();
      uint64_t v79 = (uint64_t)v76;
      return (id *)sub_1BFE14324(v79);
    }
    uint64_t v78 = FeedCursorContainer.nextCursorContainer.getter((uint64_t)v76);
    sub_1BFE14324((uint64_t)v76);
    if ((~v78 & 0xF000000000000007) == 0)
    {
      id v81 = v29[2];
      sub_1C151F38C();
      sub_1C15197BC();
      swift_release();

      return (id *)swift_release();
    }
    swift_release();
    uint64_t v32 = v78;
    if (v78 < 0)
    {
      swift_release();
      uint64_t v79 = v78;
      return (id *)sub_1BFE14324(v79);
    }
  }
  uint64_t v44 = 0;
  uint64_t v45 = v116;
  uint64_t v109 = v41;
  while (1)
  {
    char v51 = sub_1C151ECDC();
    sub_1C151EC7C();
    if ((v51 & 1) == 0) {
      break;
    }
    uint64_t result = (id *)(*(uint64_t (**)(char *, unint64_t, uint64_t))(v108 + 16))(v118, v41+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v44, v34);
    unint64_t v52 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      goto LABEL_33;
    }
LABEL_10:
    unint64_t v117 = v52;
    (*v106)(v45, v118, v34);
    uint64_t v53 = v12;
    sub_1C0A7C8E8(v15, (uint64_t)&v45[*(int *)(v34 + 36)], v42);
    if (v12)
    {
      uint64_t v12 = 0;
      id v122 = v53;
      id v54 = v53;
      uint64_t v55 = sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      if (swift_dynamicCast())
      {
        if (v121 == 7 && v119 == (id *)3 && !v120)
        {

          uint64_t v56 = swift_allocObject();
          *(_OWORD *)(v56 + 16) = v98;
          uint64_t v57 = FeedCursorGroup.identifier.getter();
          uint64_t v59 = v58;
          *(void *)(v56 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v56 + 64) = sub_1BFE9C558();
          *(void *)(v56 + 32) = v57;
          *(void *)(v56 + 40) = v59;
          sub_1C151F38C();
          sub_1C15197BC();
          uint64_t v45 = v116;
          swift_bridgeObjectRelease();
          (*v105)(v45, v34);

          goto LABEL_7;
        }
        uint64_t v110 = v55;
        uint64_t v111 = 0;
        sub_1C093C7E0(v119, v120, v121);
      }
      else
      {
        uint64_t v110 = v55;
        uint64_t v111 = 0;
      }

      uint64_t v113 = (char *)v29[2];
      int v112 = sub_1C151F36C();
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v94;
      uint64_t v119 = 0;
      id v120 = (id)0xE000000000000000;
      uint64_t v61 = *(void (**)(void))(AssociatedConformanceWitness + 64);
      swift_checkMetadataState();
      uint64_t v62 = v99;
      v61();
      uint64_t v63 = v100;
      sub_1C1520A2C();
      (*v95)(v62, v63);
      uint64_t v64 = v119;
      id v65 = v120;
      *(void *)(v60 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v66 = sub_1BFE9C558();
      *(void *)(v60 + 64) = v66;
      *(void *)(v60 + 32) = v64;
      *(void *)(v60 + 40) = v65;
      uint64_t v29 = v104;
      uint64_t v67 = sub_1C151811C();
      uint64_t v68 = MEMORY[0x1E4FBB1A0];
      *(void *)(v60 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v60 + 104) = v66;
      *(void *)(v60 + 72) = v67;
      *(void *)(v60 + 80) = v69;
      uint64_t v119 = 0;
      id v120 = (id)0xE000000000000000;
      id v122 = v53;
      sub_1C152036C();
      unint64_t v70 = v119;
      id v71 = v120;
      *(void *)(v60 + 136) = v68;
      *(void *)(v60 + 144) = v66;
      *(void *)(v60 + 112) = v70;
      *(void *)(v60 + 120) = v71;
      sub_1C15197BC();
      swift_bridgeObjectRelease();

      uint64_t v45 = v116;
      uint64_t v34 = v102;
      (*v105)(v116, v102);
      uint64_t v12 = v111;
      uint64_t v15 = v97;
      goto LABEL_7;
    }
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v98;
    uint64_t v47 = FeedCursorGroup.identifier.getter();
    uint64_t v49 = v48;
    *(void *)(v46 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v46 + 64) = sub_1BFE9C558();
    *(void *)(v46 + 32) = v47;
    *(void *)(v46 + 40) = v49;
    uint64_t v29 = v104;
    sub_1C151F38C();
    uint64_t v45 = v116;
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    (*v105)(v45, v34);
    uint64_t v12 = 0;
LABEL_7:
    uint64_t v41 = v109;
    uint64_t v50 = MEMORY[0x1C18C6870](v109, v34);
    ++v44;
    unint64_t v42 = v115;
    if (v117 == v50) {
      goto LABEL_23;
    }
  }
  uint64_t result = (id *)sub_1C152016C();
  if (v83 != 8) {
    goto LABEL_34;
  }
  uint64_t v119 = result;
  (*v107)(v118, &v119, v34);
  uint64_t result = (id *)swift_unknownObjectRelease();
  unint64_t v52 = v44 + 1;
  if (!__OFADD__(v44, 1)) {
    goto LABEL_10;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C0A7E57C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    for (uint64_t i = swift_bridgeObjectRetain() + 40; ; i += 48)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C1519B8C();
      sub_1C1519B3C();
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (!--v1) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedDatabase.hotSwap(group:context:state:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v5[35] = a4;
  v5[36] = v4;
  v5[33] = a2;
  v5[34] = a3;
  v5[32] = a1;
  v5[37] = *v4;
  v5[38] = *a4;
  return MEMORY[0x1F4188298](sub_1C0A7E75C, 0, 0);
}

uint64_t sub_1C0A7E75C()
{
  uint64_t v1 = v0[37];
  v0[39] = *(void *)(v1 + 104);
  v0[40] = *(void *)(v1 + 88);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[41] = AssociatedConformanceWitness;
  uint64_t v3 = *(uint64_t (**)(void))(AssociatedConformanceWitness + 72);
  v0[42] = swift_checkMetadataState();
  uint64_t v4 = v3();
  v0[43] = v4;
  v0[44] = v5;
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    v0[45] = *(void *)(v0[36] + 16);
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    v0[46] = v8;
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v10 = sub_1BFE9C558();
    v0[47] = v10;
    *(void *)(v9 + 64) = v10;
    *(void *)(v9 + 32) = v6;
    *(void *)(v9 + 40) = v7;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t *)sub_1BFEB00CC();
    v0[48] = v11;
    unint64_t v13 = sub_1C0A7ADD8(v0[34], v0[35], v11, 1);
    v0[49] = v13;
    uint64_t v16 = v0[38];
    v0[50] = *(void *)(v16 + 80);
    v0[51] = *(void *)(v16 + 88);
    v0[52] = FeedCursorContainer.cursor()(v13);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[53] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1C0A7EB64;
    return MEMORY[0x1F415EBC8](v0 + 31);
  }
  else
  {
    sub_1C151F36C();
    sub_1C15197BC();
    sub_1C0A8CD28();
    swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_1C1558010;
    *(unsigned char *)(v12 + 16) = 7;
    swift_willThrow();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_1C0A7EB64()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0A7F11C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C0A7EC80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A7EC80()
{
  *(void *)(v0 + 240) = *(void *)(*(void *)(v0 + 248) + qword_1EB93C740);
  uint64_t v40 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v5 = *(void **)(v0 + 296);
  uint64_t v6 = (void *)swift_task_alloc();
  _OWORD v6[2] = v5[10];
  v6[3] = v3;
  void v6[4] = v5[12];
  void v6[5] = v4;
  v6[6] = v5[14];
  v6[7] = v5[15];
  uint64_t v7 = v5[16];
  v6[8] = v7;
  uint64_t v8 = v5[17];
  v6[9] = v8;
  v6[10] = v2;
  v6[11] = v1;
  type metadata accessor for FeedDatabaseGroup();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151E9BC();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(_OWORD **)(v0 + 232);
  if (!v9)
  {
    uint64_t v20 = *(void *)(v0 + 344);
    uint64_t v19 = *(void *)(v0 + 352);
    sub_1C0A8CD28();
    uint64_t v18 = swift_allocError();
    *(void *)uint64_t v21 = v20;
    *(void *)(v21 + 8) = v19;
    *(unsigned char *)(v21 + 16) = 6;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
    goto LABEL_5;
  }
  unint64_t v10 = (_OWORD *)(v0 + 16);
  uint64_t v11 = *(void *)(v0 + 328);
  uint64_t v12 = *(void *)(v0 + 336);
  uint64_t v13 = *(void *)(v0 + 264);
  long long v14 = v9[2];
  *(_OWORD *)(v0 + 16) = v9[1];
  *(_OWORD *)(v0 + 32) = v14;
  long long v15 = v9[6];
  long long v17 = v9[3];
  long long v16 = v9[4];
  *(_OWORD *)(v0 + 80) = v9[5];
  *(_OWORD *)(v0 + 96) = v15;
  *(_OWORD *)(v0 + 48) = v17;
  *(_OWORD *)(v0 + 64) = v16;
  sub_1BFC717EC(v0 + 16);
  sub_1C03014DC(v13, v12, v11, v7, v8);
  uint64_t v18 = v40;
  if (v40)
  {
    sub_1BFDA5D5C(v0 + 16);
    swift_release();
    swift_release();
LABEL_5:
    swift_release();
    uint64_t v22 = *(void *)(v0 + 376);
    uint64_t v24 = *(void *)(v0 + 344);
    uint64_t v23 = *(void *)(v0 + 352);
    sub_1C151F36C();
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1527210;
    uint64_t v26 = MEMORY[0x1E4FBB1A0];
    *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v25 + 64) = v22;
    *(void *)(v0 + 208) = 0;
    *(void *)(v25 + 32) = v24;
    *(void *)(v25 + 40) = v23;
    *(void *)(v0 + 216) = 0xE000000000000000;
    *(void *)(v0 + 224) = v18;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v28 = *(void *)(v0 + 216);
    *(void *)(v25 + 96) = v26;
    *(void *)(v25 + 104) = v22;
    *(void *)(v25 + 72) = v27;
    *(void *)(v25 + 80) = v28;
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_release();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_6;
  }
  sub_1C1519B8C();
  long long v31 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 160) = v31;
  long long v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 192) = v32;
  long long v33 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 112) = *v10;
  *(_OWORD *)(v0 + 128) = v33;
  sub_1C1519B3C();
  uint64_t v34 = *(void *)(v0 + 376);
  uint64_t v36 = *(void *)(v0 + 344);
  uint64_t v35 = *(void *)(v0 + 352);
  uint64_t v38 = *(void *)(v0 + 336);
  uint64_t v39 = *(void *)(v0 + 256);
  uint64_t v41 = *(void *)(v0 + 264);
  swift_release();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
  *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v37 + 64) = v34;
  *(void *)(v37 + 32) = v36;
  *(void *)(v37 + 40) = v35;
  sub_1C151F38C();
  sub_1C15197BC();
  sub_1BFDA5D5C((uint64_t)v10);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v39, v41);
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v29();
}

uint64_t sub_1C0A7F11C()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[47];
  uint64_t v4 = v0[43];
  uint64_t v3 = v0[44];
  sub_1C151F36C();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1527210;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = v2;
  v0[26] = 0;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v3;
  v0[27] = 0xE000000000000000;
  v0[28] = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v7 = v0[26];
  uint64_t v8 = v0[27];
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = v2;
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = v8;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_release();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C0A7F294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  if (!v8)
  {
    sub_1BFEF2F40(v7, 0);
    goto LABEL_7;
  }
  if (v8 == 1)
  {
LABEL_7:
    char v5 = 0;
    return v5 & 1;
  }
  if (v7 == a2 && v8 == a3)
  {
    sub_1BFEF2F40(a2, v8);
    char v5 = 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    sub_1BFEF2F40(v7, v8);
  }
  return v5 & 1;
}

uint64_t FeedDatabase.save(cacheKey:feedGroupLayout:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for FeedLayoutCacheKey();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = sub_1BFEB00CC();
  sub_1C0A8CF60(a1, (uint64_t)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC66384(a2, (uint64_t)v13);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = *(void *)(v5 + 80);
  *(void *)(v11 + 24) = *(void *)(v5 + 88);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v5 + 96);
  *(void *)(v11 + 48) = *(void *)(v5 + 112);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(v5 + 120);
  *(void *)(v11 + 72) = *(void *)(v5 + 136);
  *(void *)(v11 + 80) = v9;
  sub_1C0A8D168((uint64_t)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_1BFC773DC(v13, v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_retain();
  sub_1BFEB0134((uint64_t)sub_1C0A8D1CC, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_1C0A7F54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1519B8C();
  sub_1C0A8CF60(a2, (uint64_t)v7);
  sub_1BFC66384(a3, (uint64_t)v9);
  sub_1C0F94250(v7, v9, (uint64_t *)v10);
  v9[0] = v10[0];
  v9[1] = v10[1];
  v9[2] = v10[2];
  _OWORD v9[3] = v10[3];
  sub_1C1519B3C();
  sub_1C0A8D988((uint64_t)v10);
  return swift_release();
}

void sub_1C0A7F63C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_1BFD98850(0, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v89 - v8;
  uint64_t v10 = sub_1C151995C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v95 = (char *)v89 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v96 = (char *)v89 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v97 = (char *)v89 - v19;
  MEMORY[0x1F4188790](v20);
  long long v98 = (char *)v89 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v99 = (char *)v89 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)v89 - v25;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v28 = Strong;
    uint64_t v93 = v13;
    uint64_t v102 = v10;
    double v29 = CACurrentMediaTime();
    uint64_t v103 = v28;
    id v30 = *(void **)(v28 + 16);
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v101 = v31;
    uint64_t v32 = swift_allocObject();
    long long v94 = xmmword_1C1529AE0;
    *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
    uint64_t v33 = MEMORY[0x1E4FBB1A0];
    *(void *)(v32 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v100 = sub_1BFE9C558();
    *(void *)(v32 + 64) = v100;
    *(void *)(v32 + 32) = a2;
    *(void *)(v32 + 40) = a3;
    id v34 = v30;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v35 = *(void *)(a4 + 16);
    sub_1C1519B9C();
    uint64_t v119 = v33;
    uint64_t v120 = MEMORY[0x1E4FAA778];
    uint64_t v117 = a2;
    unint64_t v118 = a3;
    swift_bridgeObjectRetain();
    sub_1C1519B0C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
    uint64_t v36 = sub_1C1519C5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v9, 1, 1, v36);
    uint64_t v37 = v104;
    uint64_t v38 = sub_1C1519B6C();
    uint64_t v39 = v37;
    uint64_t v40 = &off_1C1527000;
    if (v37)
    {
      swift_release();
      sub_1BFD987E0((uint64_t)v9, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v102);
      uint64_t v41 = v37;
LABEL_19:
      id v80 = *(void **)(v103 + 16);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = *((_OWORD *)v40 + 33);
      uint64_t v117 = 0;
      unint64_t v118 = 0xE000000000000000;
      uint64_t v116 = (uint64_t)v41;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      id v82 = v80;
      sub_1C152036C();
      uint64_t v83 = v117;
      unint64_t v84 = v118;
      unint64_t v85 = v100;
      *(void *)(v81 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v81 + 64) = v85;
      *(void *)(v81 + 32) = v83;
      *(void *)(v81 + 40) = v84;
      CFTimeInterval v86 = CACurrentMediaTime();
      uint64_t v87 = MEMORY[0x1E4FBB460];
      *(void *)(v81 + 96) = MEMORY[0x1E4FBB3D0];
      *(void *)(v81 + 104) = v87;
      *(CFTimeInterval *)(v81 + 72) = (v86 - v29) * 1000.0;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v42 = v38;
    uint64_t v92 = v35;
    v89[1] = a4;
    swift_release();
    sub_1BFD987E0((uint64_t)v9, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v91 = v11 + 8;
    uint64_t v90 = v43;
    v43(v26, v102);
    int64_t v44 = *(void *)(v42 + 16);
    if (!v44)
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = MEMORY[0x1E4FBC860];
      uint64_t v59 = v103;
LABEL_13:
      uint64_t v60 = *(void **)(v59 + 16);
      uint64_t v61 = swift_allocObject();
      uint64_t v62 = v40;
      *(_OWORD *)(v61 + 16) = *((_OWORD *)v40 + 33);
      uint64_t v63 = *(void *)(v45 + 16);
      uint64_t v64 = MEMORY[0x1E4FBB5C8];
      *(void *)(v61 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v61 + 64) = v64;
      *(void *)(v61 + 32) = v63;
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      *(void *)(v61 + 96) = v65;
      *(void *)(v61 + 104) = sub_1BFD989C8((unint64_t *)&qword_1EB863368, (unint64_t *)&qword_1EB879F20);
      *(void *)(v61 + 72) = v45;
      id v66 = v60;
      swift_bridgeObjectRetain();
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      if (*(void *)(v45 + 16))
      {
        sub_1C1519BBC();
        sub_1C0062DB4(v45);
        uint64_t v67 = v99;
        sub_1C1519AFC();
        swift_bridgeObjectRelease();
        sub_1C1519C4C();
        uint64_t v41 = v39;
        if (v39)
        {
          v90(v67, v102);
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v40 = v62;
          goto LABEL_19;
        }
        uint64_t v73 = v45;
        uint64_t v74 = v90;
        v90(v67, v102);
        swift_release();
        sub_1C1519BBC();
        sub_1C0062DB4(v45);
        uint64_t v75 = v98;
        sub_1C1519AFC();
        swift_bridgeObjectRelease();
        sub_1C1519C4C();
        v74(v75, v102);
        swift_release();
        sub_1C1519BBC();
        sub_1C0062DB4(v45);
        uint64_t v76 = v74;
        id v77 = v97;
        sub_1C1519AFC();
        swift_bridgeObjectRelease();
        sub_1C1519C4C();
        v76(v77, v102);
        swift_release();
        sub_1C1519BBC();
        sub_1C0062DB4(v73);
        uint64_t v78 = v96;
        sub_1C1519AFC();
        swift_bridgeObjectRelease();
        sub_1C1519C4C();
        v76(v78, v102);
        swift_release();
        sub_1C1519BBC();
        sub_1C0062DB4(v73);
        uint64_t v79 = v95;
        sub_1C1519AFC();
        swift_bridgeObjectRelease();
        sub_1C1519C4C();
        v76(v79, v102);
        swift_release();
        sub_1C1519BBC();
        sub_1C0062DB4(v73);
        swift_bridgeObjectRelease();
        uint64_t v88 = v93;
        sub_1C1519AFC();
        swift_bridgeObjectRelease();
        sub_1C1519C4C();
        v76(v88, v102);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v68 = *(void **)(v103 + 16);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = v94;
      id v70 = v68;
      CFTimeInterval v71 = CACurrentMediaTime();
      uint64_t v72 = MEMORY[0x1E4FBB460];
      *(void *)(v69 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v69 + 64) = v72;
      *(CFTimeInterval *)(v69 + 32) = (v71 - v29) * 1000.0;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v104 = 0;
    uint64_t v116 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v44, 0);
    uint64_t v45 = v116;
    v89[0] = v42;
    uint64_t v46 = (uint64_t *)(v42 + 64);
    while (1)
    {
      int64_t v111 = v44;
      uint64_t v112 = v45;
      uint64_t v47 = *(v46 - 4);
      uint64_t v48 = *(v46 - 3);
      uint64_t v49 = *(v46 - 2);
      uint64_t v50 = *(v46 - 1);
      uint64_t v51 = *v46;
      uint64_t v53 = v46[2];
      uint64_t v52 = v46[3];
      uint64_t v113 = v46[1];
      uint64_t v114 = v52;
      uint64_t v115 = v46[5];
      swift_retain();
      uint64_t v110 = v48;
      swift_retain();
      uint64_t v109 = v49;
      swift_retain();
      uint64_t v108 = v50;
      swift_retain();
      uint64_t v107 = v51;
      swift_retain();
      swift_retain();
      uint64_t v106 = v53;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v105 = v47;
      sub_1C151997C();
      sub_1C1519BFC();
      swift_release();
      unint64_t v54 = v118;
      if (!v118) {
        break;
      }
      uint64_t v55 = v117;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v45 = v112;
      uint64_t v116 = v112;
      unint64_t v57 = *(void *)(v112 + 16);
      unint64_t v56 = *(void *)(v112 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_1BFF661B8(v56 > 1, v57 + 1, 1);
        uint64_t v45 = v116;
      }
      *(void *)(v45 + 16) = v57 + 1;
      uint64_t v58 = v45 + 16 * v57;
      *(void *)(v58 + 32) = v55;
      *(void *)(v58 + 40) = v54;
      v46 += 12;
      int64_t v44 = v111 - 1;
      if (v111 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v59 = v103;
        uint64_t v39 = v104;
        uint64_t v40 = &off_1C1527000;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C0A80394()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursorGroup();
  uint64_t v0 = FeedCursorGroup.identifier.getter();
  uint64_t v2 = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  if (v0 == sub_1C151811C() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C0A804F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  sub_1BFD98850(0, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8], MEMORY[0x1E4FBB718]);
  v5[44] = swift_task_alloc();
  uint64_t v6 = sub_1C151995C();
  v5[45] = v6;
  v5[46] = *(void *)(v6 - 8);
  v5[47] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A80618, 0, 0);
}

uint64_t sub_1C0A80618()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 312);
  *(void *)(v0 + 296) = MEMORY[0x1E4FBC870];
  *(void *)(v0 + 384) = *(void *)(v1 + 16);
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  *(void *)(v0 + 392) = v5;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v8 = sub_1BFE9C558();
  *(void *)(v0 + 400) = v8;
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v2;
  swift_bridgeObjectRetain_n();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v11 = *(void *)(v0 + 312);
  uint64_t v10 = *(void *)(v0 + 320);
  *(void *)(v0 + 416) = v11;
  *(void *)(v0 + 424) = v10;
  *(void *)(v0 + 408) = v9;
  uint64_t v12 = *(void *)(v0 + 352);
  sub_1C1519B9C();
  *(void *)(v0 + 208) = v11;
  uint64_t v13 = MEMORY[0x1E4FAA778];
  *(void *)(v0 + 232) = v7;
  *(void *)(v0 + 240) = v13;
  *(void *)(v0 + 216) = v10;
  swift_bridgeObjectRetain();
  sub_1C1519AEC();
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  uint64_t v14 = sub_1C1519C5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  sub_1C1519B5C();
  uint64_t v15 = *(void *)(v0 + 376);
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 368);
  uint64_t v18 = *(void *)(v0 + 352);
  swift_release();
  sub_1BFD987E0(v18, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v21 = *(void *)(v0 + 112);
  uint64_t v22 = *(void *)(v0 + 120);
  *(void *)(v0 + 432) = v21;
  *(void *)(v0 + 440) = v22;
  uint64_t v23 = *(void *)(v0 + 128);
  uint64_t v24 = *(void *)(v0 + 136);
  *(void *)(v0 + 448) = v23;
  *(void *)(v0 + 456) = v24;
  uint64_t v25 = *(void *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 152);
  *(void *)(v0 + 464) = v25;
  *(void *)(v0 + 472) = v26;
  uint64_t v27 = *(void *)(v0 + 160);
  uint64_t v28 = *(void *)(v0 + 168);
  *(void *)(v0 + 480) = v27;
  *(void *)(v0 + 488) = v28;
  uint64_t v29 = *(void *)(v0 + 176);
  uint64_t v30 = *(void *)(v0 + 184);
  *(void *)(v0 + 496) = v29;
  *(void *)(v0 + 504) = v30;
  uint64_t v31 = *(void *)(v0 + 192);
  uint64_t v32 = *(void *)(v0 + 200);
  *(void *)(v0 + 512) = v31;
  *(void *)(v0 + 520) = v32;
  if (v21)
  {
    *(void *)(v0 + 16) = v21;
    *(void *)(v0 + 24) = v22;
    *(void *)(v0 + 32) = v23;
    *(void *)(v0 + 40) = v24;
    *(void *)(v0 + 48) = v25;
    *(void *)(v0 + 56) = v26;
    *(void *)(v0 + 64) = v27;
    *(void *)(v0 + 72) = v28;
    *(void *)(v0 + 80) = v29;
    *(void *)(v0 + 88) = v30;
    *(void *)(v0 + 96) = v31;
    *(void *)(v0 + 104) = v32;
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C((uint64_t *)(v0 + 248), v11, v10);
    swift_bridgeObjectRelease();
    uint64_t v33 = swift_task_alloc();
    *(void *)(v0 + 528) = v33;
    *(void *)uint64_t v33 = v0;
    *(void *)(v33 + 8) = sub_1C0A80A40;
    uint64_t v34 = *(void *)(v0 + 328);
    *(_OWORD *)(v33 + 96) = *(_OWORD *)(v0 + 336);
    *(void *)(v33 + 80) = v34;
    *(void *)(v33 + 88) = v0 + 16;
    return MEMORY[0x1F4188298](sub_1C0A81304, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0A8CD28();
    swift_allocError();
    *(void *)uint64_t v35 = 0;
    *(void *)(v35 + 8) = 0;
    *(unsigned char *)(v35 + 16) = 7;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_1C0A80A40(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 536) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A80C20;
  }
  else
  {
    *(void *)(v4 + 544) = a1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1C0A80B78;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A80B78()
{
  sub_1BFC6B780(v0[54]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[68];
  return v1(v2);
}

uint64_t sub_1C0A80C20()
{
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1527210;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = v4;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  *(void *)(v0 + 264) = 0;
  *(void *)(v0 + 272) = 0xE000000000000000;
  *(void *)(v0 + 304) = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  swift_bridgeObjectRetain();
  sub_1C152036C();
  uint64_t v7 = *(void *)(v0 + 264);
  uint64_t v8 = *(void *)(v0 + 272);
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = v4;
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = v8;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  unint64_t v9 = *(void *)(v0 + 288);
  if (v9 < 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void **)(v0 + 536);
    uint64_t v22 = *(void *)(v0 + 432);
    sub_1C151F38C();
    sub_1C15197BC();
    sub_1C0A8CD28();
    swift_allocError();
    *(void *)uint64_t v23 = 0;
    *(void *)(v23 + 8) = 0;
    *(unsigned char *)(v23 + 16) = 7;
    swift_willThrow();

    uint64_t v20 = v22;
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v0 + 280);
  uint64_t v11 = *(void **)(v0 + 536);
  uint64_t v13 = *(void *)(v0 + 416);
  uint64_t v12 = *(void *)(v0 + 424);
  uint64_t v14 = *(void *)(v0 + 400);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
  *(void *)(v15 + 56) = v6;
  *(void *)(v15 + 64) = v14;
  *(void *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v12;
  *(void *)(v15 + 96) = v6;
  *(void *)(v15 + 104) = v14;
  *(void *)(v15 + 72) = v10;
  *(void *)(v15 + 80) = v9;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v0 + 296);
  sub_1BFEF9C98(v10, v9);
  swift_bridgeObjectRetain();
  char v17 = sub_1BFF896B4(v10, v9, v16);
  swift_bridgeObjectRelease();
  sub_1BFEF2F40(v10, v9);
  uint64_t v18 = *(void *)(v0 + 432);
  if (v17)
  {
    swift_bridgeObjectRelease();
    sub_1C0A8CD28();
    swift_allocError();
    *(void *)uint64_t v19 = v10;
    *(void *)(v19 + 8) = v9;
    *(unsigned char *)(v19 + 16) = 5;
    swift_willThrow();
    uint64_t v20 = v18;
LABEL_5:
    sub_1BFC6B780(v20);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  sub_1BFC6B780(v18);
  *(void *)(v0 + 416) = v10;
  *(void *)(v0 + 424) = v9;
  uint64_t v26 = *(void *)(v0 + 352);
  sub_1C1519B9C();
  uint64_t v27 = MEMORY[0x1E4FAA778];
  *(void *)(v0 + 232) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 240) = v27;
  *(void *)(v0 + 208) = v10;
  *(void *)(v0 + 216) = v9;
  swift_bridgeObjectRetain();
  sub_1C1519AEC();
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  uint64_t v28 = sub_1C1519C5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v26, 1, 1, v28);
  sub_1C1519B5C();
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v32 = *(void *)(v0 + 352);
  uint64_t v31 = *(void *)(v0 + 360);
  swift_release();
  sub_1BFD987E0(v32, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  uint64_t v33 = *(void *)(v0 + 112);
  uint64_t v34 = *(void *)(v0 + 120);
  *(void *)(v0 + 432) = v33;
  *(void *)(v0 + 440) = v34;
  uint64_t v35 = *(void *)(v0 + 128);
  uint64_t v36 = *(void *)(v0 + 136);
  *(void *)(v0 + 448) = v35;
  *(void *)(v0 + 456) = v36;
  uint64_t v37 = *(void *)(v0 + 144);
  uint64_t v38 = *(void *)(v0 + 152);
  *(void *)(v0 + 464) = v37;
  *(void *)(v0 + 472) = v38;
  uint64_t v39 = *(void *)(v0 + 160);
  uint64_t v40 = *(void *)(v0 + 168);
  *(void *)(v0 + 480) = v39;
  *(void *)(v0 + 488) = v40;
  uint64_t v41 = *(void *)(v0 + 176);
  uint64_t v42 = *(void *)(v0 + 184);
  *(void *)(v0 + 496) = v41;
  *(void *)(v0 + 504) = v42;
  uint64_t v43 = *(void *)(v0 + 192);
  uint64_t v44 = *(void *)(v0 + 200);
  *(void *)(v0 + 512) = v43;
  *(void *)(v0 + 520) = v44;
  if (!v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0A8CD28();
    swift_allocError();
    *(void *)uint64_t v47 = 0;
    *(void *)(v47 + 8) = 0;
    *(unsigned char *)(v47 + 16) = 7;
    swift_willThrow();
    goto LABEL_6;
  }
  *(void *)(v0 + 16) = v33;
  *(void *)(v0 + 24) = v34;
  *(void *)(v0 + 32) = v35;
  *(void *)(v0 + 40) = v36;
  *(void *)(v0 + 48) = v37;
  *(void *)(v0 + 56) = v38;
  *(void *)(v0 + 64) = v39;
  *(void *)(v0 + 72) = v40;
  *(void *)(v0 + 80) = v41;
  *(void *)(v0 + 88) = v42;
  *(void *)(v0 + 96) = v43;
  *(void *)(v0 + 104) = v44;
  swift_bridgeObjectRetain();
  sub_1BFEFFC1C((uint64_t *)(v0 + 248), v10, v9);
  swift_bridgeObjectRelease();
  uint64_t v45 = swift_task_alloc();
  *(void *)(v0 + 528) = v45;
  *(void *)uint64_t v45 = v0;
  *(void *)(v45 + 8) = sub_1C0A80A40;
  uint64_t v46 = *(void *)(v0 + 328);
  *(_OWORD *)(v45 + 96) = *(_OWORD *)(v0 + 336);
  *(void *)(v45 + 80) = v46;
  *(void *)(v45 + 88) = v0 + 16;
  return MEMORY[0x1F4188298](sub_1C0A81304, 0, 0);
}

uint64_t sub_1C0A812E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  return MEMORY[0x1F4188298](sub_1C0A81304, 0, 0);
}

uint64_t sub_1C0A81304()
{
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C152C7F0;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t v2 = swift_release();
  uint64_t v5 = *(void *)(v0 + 24);
  if (!v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v8 = sub_1BFE9C558();
  *(void *)(v1 + 64) = v8;
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v5;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t v2 = swift_release();
  uint64_t v9 = *(void *)(v0 + 40);
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v11 = *(void **)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 32);
  *(void *)(v1 + 96) = v7;
  *(void *)(v1 + 104) = v8;
  *(void *)(v1 + 72) = v13;
  *(void *)(v1 + 80) = v9;
  uint64_t v14 = sub_1BFC8BD54();
  *(void *)(v1 + 136) = v7;
  *(void *)(v1 + 144) = v8;
  *(void *)(v1 + 112) = v14;
  *(void *)(v1 + 120) = v15;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  double v16 = CACurrentMediaTime();
  uint64_t v17 = sub_1BFC856D8(v11, v12, v10);
  *(void *)(v0 + 112) = v17;
  uint64_t v18 = v17;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152C7F0;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t v2 = swift_release();
  uint64_t v20 = *(void *)(v0 + 56);
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v21 = *(void *)(v0 + 48);
  *(void *)(v19 + 56) = v7;
  *(void *)(v19 + 64) = v8;
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v20;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t v2 = swift_release();
  uint64_t v22 = *(void *)(v0 + 72);
  if (!v22)
  {
LABEL_11:
    __break(1u);
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  uint64_t v23 = *(void *)(v0 + 64);
  *(void *)(v19 + 96) = v7;
  *(void *)(v19 + 104) = v8;
  *(void *)(v19 + 72) = v23;
  *(void *)(v19 + 80) = v22;
  CFTimeInterval v24 = CACurrentMediaTime();
  uint64_t v25 = MEMORY[0x1E4FBB460];
  *(void *)(v19 + 136) = MEMORY[0x1E4FBB3D0];
  *(void *)(v19 + 144) = v25;
  *(CFTimeInterval *)(v19 + 112) = (v24 - v16) * 1000.0;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  *(CFTimeInterval *)(v0 + 120) = CACurrentMediaTime();
  uint64_t v26 = swift_task_alloc();
  *(void *)(v0 + 128) = v26;
  *(void *)uint64_t v26 = v0;
  *(void *)(v26 + 8) = sub_1C0A81694;
  uint64_t v27 = *(void *)(v0 + 80);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v0 + 96);
  *(void *)(v26 + 80) = v27;
  *(void *)(v26 + 88) = v18;
  uint64_t v2 = (uint64_t)sub_1C0A81A6C;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1C0A81694(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A81834;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_1C0A817BC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A817BC()
{
  sub_1C0A818C8(*(double *)(v0 + 120));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 144);
  return v1(v2);
}

uint64_t sub_1C0A81834()
{
  sub_1C0A818C8(*(double *)(v0 + 120));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0A818C8(double a1)
{
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C152C7F0;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v11)
  {
    uint64_t v4 = MEMORY[0x1E4FBB1A0];
    *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v5 = sub_1BFE9C558();
    *(void *)(v2 + 64) = v5;
    *(void *)(v2 + 32) = v10;
    *(void *)(v2 + 40) = v11;
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    if (v9)
    {
      *(void *)(v2 + 96) = v4;
      *(void *)(v2 + 104) = v5;
      *(void *)(v2 + 72) = v8;
      *(void *)(v2 + 80) = v9;
      CFTimeInterval v6 = CACurrentMediaTime();
      uint64_t v7 = MEMORY[0x1E4FBB460];
      *(void *)(v2 + 136) = MEMORY[0x1E4FBB3D0];
      *(void *)(v2 + 144) = v7;
      *(CFTimeInterval *)(v2 + 112) = (v6 - a1) * 1000.0;
      sub_1C151F38C();
      sub_1C15197BC();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0A81A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  return MEMORY[0x1F4188298](sub_1C0A81A6C, 0, 0);
}

uint64_t sub_1C0A81A6C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 88);
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v1;
  v4[3] = v3;
  void v4[4] = v2;
  uint64_t v5 = sub_1BFC91B0C(v2, (uint64_t (*)(uint64_t))sub_1C0A8DD10, (uint64_t)v4);
  *(void *)(v0 + 112) = v5;
  uint64_t v33 = (void *)v5;
  swift_task_dealloc();
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C152C7F0;
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v9 = *(void *)(v0 + 24);
  if (!v9)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1BFE9C558();
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v13 = *(void *)(v0 + 40);
  if (!v13)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v14 = *(void *)(v0 + 32);
  *(void *)(v8 + 96) = v11;
  *(void *)(v8 + 104) = v12;
  *(void *)(v8 + 72) = v14;
  *(void *)(v8 + 80) = v13;
  uint64_t v15 = sub_1BFC8BD54();
  *(void *)(v8 + 136) = v11;
  *(void *)(v8 + 144) = v12;
  *(void *)(v8 + 112) = v15;
  *(void *)(v8 + 120) = v16;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v17 = *(void *)(v0 + 56);
  if (!v17)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    JUMPOUT(0x1C0A81F70);
  }
  uint64_t v18 = *(void *)(v0 + 48);
  FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v17 - 1));
  switch(v34)
  {
    case 1:
      uint64_t v23 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v23;
      *uint64_t v23 = v0;
      v23[1] = sub_1C0A81F90;
      CFTimeInterval v24 = *(uint64_t **)(v0 + 88);
      return sub_1C0A82F70(v24, (uint64_t)v33);
    case 2:
    case 4:
      uint64_t v19 = (uint64_t)sub_1C0A84620(*(_OWORD **)(v0 + 88), v33);
      goto LABEL_16;
    case 3:
      sub_1C0A8CD28();
      swift_allocError();
      *(_OWORD *)uint64_t v25 = xmmword_1C1557FB0;
      *(unsigned char *)(v25 + 16) = 1;
      swift_willThrow();
      swift_release();
      goto LABEL_2;
    case 5:
      uint64_t v19 = sub_1C0A8256C(*(void **)(v0 + 80), *(void *)(v0 + 88), v33);
LABEL_16:
      uint64_t v26 = v19;
      swift_release();
      uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v27(v26);
    case 6:
      *(unsigned char *)(v0 + 192) = 6;
      uint64_t v20 = (unsigned char *)(v0 + 192);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v21;
      *uint64_t v21 = v0;
      uint64_t v22 = sub_1C0A822B0;
      goto LABEL_21;
    case 7:
      sub_1C151997C();
      sub_1C1519BFC();
      swift_release();
      uint64_t v30 = *(void *)(v0 + 72);
      if (!v30) {
        goto LABEL_29;
      }
      uint64_t v31 = *(void *)(v0 + 64);
      sub_1C0A8CD28();
      swift_allocError();
      *(void *)uint64_t v32 = v31;
      *(void *)(v32 + 8) = v30;
      *(unsigned char *)(v32 + 16) = 0;
      swift_willThrow();
      swift_release();
LABEL_2:
      CFTimeInterval v6 = *(uint64_t (**)(void))(v0 + 8);
      uint64_t result = v6();
      break;
    default:
      *(unsigned char *)(v0 + 193) = 0;
      uint64_t v20 = (unsigned char *)(v0 + 193);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v21;
      *uint64_t v21 = v0;
      uint64_t v22 = sub_1C0A82120;
LABEL_21:
      v21[1] = v22;
      uint64_t v28 = *(uint64_t **)(v0 + 80);
      uint64_t v29 = *(void *)(v0 + 88);
      uint64_t result = sub_1C0A83B00(v20, v28, v29, (uint64_t)v33);
      break;
  }
  return result;
}

uint64_t sub_1C0A81F90(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A82440;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_1C0A820B8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A820B8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0A82120(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A824A4;
  }
  else
  {
    *(void *)(v4 + 160) = a1;
    uint64_t v5 = sub_1C0A82248;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A82248()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0A822B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A82508;
  }
  else
  {
    *(void *)(v4 + 184) = a1;
    uint64_t v5 = sub_1C0A823D8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A823D8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0A82440()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0A824A4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0A82508()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0A8256C(void *a1, unint64_t a2, void *a3)
{
  id v82 = a3;
  uint64_t v4 = v3;
  unint64_t v84 = (void *)*v3;
  uint64_t v7 = *a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v81 = (char *)&v62 - v10;
  CFTimeInterval v71 = a1;
  uint64_t v11 = *(void *)(v7 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v80 = sub_1C151FD8C();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v78 = (char *)&v62 - v12;
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v8);
  MEMORY[0x1F4188790](v13 - 8);
  id v77 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v75 = (char *)&v62 - v16;
  uint64_t v76 = sub_1C151FD8C();
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v73 = (char *)&v62 - v17;
  uint64_t v70 = sub_1C151635C();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v68 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  uint64_t Cursor = *(void *)(a2 + 104);
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v21 = *((void *)&v87 + 1);
  if (*((void *)&v87 + 1))
  {
    uint64_t v22 = v87;
    *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v19 + 64) = sub_1BFE9C558();
    *(void *)(v19 + 32) = v22;
    *(void *)(v19 + 40) = v21;
    uint64_t v23 = *(void *)(a2 + 112);
    uint64_t v24 = type metadata accessor for FeedDatabaseGroup();
    uint64_t v25 = MEMORY[0x1C18C6830](v23, v24);
    uint64_t v26 = MEMORY[0x1E4FBB5C8];
    *(void *)(v19 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v19 + 104) = v26;
    *(void *)(v19 + 72) = v25;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    type metadata accessor for FeedCursor();
    LOBYTE(v87) = 4;
    uint64_t v27 = v4[3];
    uint64_t v67 = v11;
    uint64_t v29 = v84[16];
    uint64_t v28 = (char *)v84[17];
    swift_retain();
    uint64_t v30 = v82;
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v31 = v83;
    uint64_t v32 = (char *)sub_1C1513548((unsigned __int8 *)&v87, a2, v30, v27, v29, v28);
    uint64_t v33 = v31;
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    uint64_t v83 = v31;
    if (v31) {
      return (uint64_t)v33;
    }
    uint64_t v64 = v29;
    uint64_t v65 = v32;
    uint64_t v34 = *(void *)(a2 + 96);
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    if (v85 != 2)
    {
      if (v85)
      {
        uint64_t v36 = *(void *)(a2 + 48);
        sub_1C151997C();
        sub_1C1519BFC();
        swift_release();
        uint64_t v37 = *((void *)&v87 + 1);
        sub_1BFEF2F40(v87, *((uint64_t *)&v87 + 1));
        uint64_t v35 = v28;
        if (v37 != 1)
        {
          uint64_t v60 = *(void *)(a2 + 88);
          long long v61 = *(_OWORD *)(a2 + 32);
          v89[0] = *(_OWORD *)(a2 + 16);
          v89[1] = v61;
          uint64_t v90 = v36;
          long long v91 = *(_OWORD *)(a2 + 56);
          long long v92 = *(_OWORD *)(a2 + 72);
          uint64_t v93 = v60;
          uint64_t v94 = v34;
          uint64_t v95 = Cursor;
          uint64_t v33 = sub_1C0A84780(v65, (uint64_t)v89, (uint64_t)v30);
          swift_release();
          return (uint64_t)v33;
        }
      }
      else
      {
        uint64_t v35 = v28;
      }
      uint64_t v38 = v67;
      uint64_t Cursor = type metadata accessor for FeedNextCursor();
      uint64_t v39 = v68;
      sub_1C151634C();
      uint64_t v63 = sub_1C151633C();
      uint64_t v41 = v40;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v70);
      LOBYTE(v87) = 5;
      uint64_t v42 = v30;
      uint64_t v43 = v30[4];
      uint64_t v44 = swift_allocObject();
      swift_weakInit();
      uint64_t v45 = (void *)swift_allocObject();
      uint64_t v46 = v84;
      void v45[2] = v84[14];
      uint64_t v47 = v64;
      v45[3] = v46[15];
      v45[4] = v47;
      v45[5] = v35;
      v45[6] = v44;
      uint64_t v48 = v71;
      uint64_t v45[7] = v42;
      v45[8] = v48;
      uint64_t v49 = v65;
      v45[9] = a2;
      v45[10] = v49;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v50 = sub_1C125653C(v63, v41, (char *)&v87, v43, (uint64_t)&unk_1EA1A3018, (uint64_t)v45);
      swift_release();
      swift_release();
      uint64_t v51 = (uint64_t)v73;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v73, 1, 1, v38);
      unsigned __int8 v96 = 7;
      uint64_t v52 = sub_1C151631C();
      uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
      uint64_t v54 = (uint64_t)v75;
      v53(v75, 1, 1, v52);
      uint64_t v55 = (uint64_t)v77;
      v53(v77, 1, 1, v52);
      uint64_t v56 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v78, 1, 1);
      uint64_t v57 = type metadata accessor for FeedContext();
      uint64_t v58 = (uint64_t)v81;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v81, 1, 1, v57);
      uint64_t v88 = 0;
      long long v87 = 0u;
      uint64_t v85 = 0;
      __int16 v86 = 256;
      uint64_t v33 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v51, 0, &v96, v54, v55, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
              0,
              0,
              v56,
              v58,
              (uint64_t *)&v87,
              (uint64_t)&v85,
              0,
              0,
              v50);
      swift_release();
      swift_release();
      sub_1BFD987E0(v58, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v56, v80);
      uint64_t v59 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1BFD987E0(v55, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1BFD987E0(v54, (unint64_t *)&qword_1EB871180, v59);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v51, v76);
      return (uint64_t)v33;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0A82F70(uint64_t *a1, uint64_t a2)
{
  v3[33] = a2;
  v3[34] = v2;
  v3[32] = a1;
  v3[35] = *v2;
  uint64_t v4 = *a1;
  v3[36] = *(void *)(*a1 + 88);
  uint64_t v5 = *(void *)(v4 + 80);
  v3[37] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[38] = AssociatedTypeWitness;
  v3[39] = *(void *)(AssociatedTypeWitness - 8);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = *(void *)(v5 - 8);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A83114, 0, 0);
}

uint64_t sub_1C0A83114()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 256);
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1527210;
  uint64_t v3 = *(void *)(v1 + 104);
  *(void *)(v0 + 360) = v3;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v5 = *(void *)(v0 + 216);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 208);
    *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v2 + 64) = sub_1BFE9C558();
    *(void *)(v2 + 32) = v7;
    *(void *)(v2 + 40) = v5;
    uint64_t v8 = *(void *)(v6 + 112);
    uint64_t v9 = type metadata accessor for FeedDatabaseGroup();
    uint64_t v10 = MEMORY[0x1C18C6830](v8, v9);
    uint64_t v11 = MEMORY[0x1E4FBB5C8];
    *(void *)(v2 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v2 + 104) = v11;
    *(void *)(v2 + 72) = v10;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 240) = v8;
    sub_1C151ED5C();
    swift_getWitnessTable();
    if (sub_1C151F15C())
    {
      sub_1BFC9C064(*(void *)(v0 + 352));
      uint64_t v12 = *(void *)(v0 + 344);
      uint64_t v13 = *(void *)(v0 + 328);
      uint64_t v15 = *(void *)(v0 + 312);
      uint64_t v14 = *(void *)(v0 + 320);
      uint64_t v17 = *(void *)(v0 + 296);
      uint64_t v16 = *(void *)(v0 + 304);
      uint64_t v19 = *(void *)(v0 + 280);
      uint64_t v18 = *(void *)(v0 + 288);
      uint64_t v47 = v19;
      uint64_t v45 = *(void *)(v0 + 336);
      uint64_t v46 = *(void *)(v0 + 264);
      uint64_t v50 = *(void *)(v0 + 256);
      (*(void (**)(uint64_t, uint64_t))(v18 + 64))(v17, v18);
      uint64_t v49 = *(void *)(v19 + 96);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      FeedContentConfigType.seenContentMarker()(v16, AssociatedConformanceWitness, v13);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v21(v14, v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 160))(v13, v17, v18);
      v21(v13, v16);
      uint64_t v22 = swift_allocBox();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v23, v12, v17);
      *(void *)(v0 + 248) = v22 | 0x1000000000000000;
      uint64_t v24 = *(void *)(v46 + 24);
      uint64_t v25 = swift_allocObject();
      *(void *)(v0 + 368) = v25;
      *(void *)(v25 + 16) = *(void *)(v47 + 112);
      *(_OWORD *)(v25 + 24) = *(_OWORD *)(v47 + 120);
      *(void *)(v25 + 40) = *(void *)(v47 + 136);
      *(void *)(v25 + 48) = v50;
      *(void *)(v25 + 56) = v46;
      uint64_t v26 = *(void *)(v47 + 80);
      uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))(*(void *)(v49 + 40) + **(int **)(v49 + 40));
      swift_retain();
      swift_retain();
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v27;
      void *v27 = v0;
      v27[1] = sub_1C0A83710;
      return v48(v0 + 224, v0 + 248, v24, sub_1C0A8E220, v25, v26, v49);
    }
    else
    {
      uint64_t v28 = *(void *)(v0 + 272);
      uint64_t v29 = *(void *)(v0 + 280);
      unint64_t v31 = *(void *)(v0 + 256);
      uint64_t v30 = *(void **)(v0 + 264);
      type metadata accessor for FeedCursor();
      v51[0] = 1;
      uint64_t v32 = *(void *)(v28 + 24);
      uint64_t v33 = *(void *)(v29 + 128);
      uint64_t v34 = *(char **)(v29 + 136);
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v35 = (char *)sub_1C1513548(v51, v31, v30, v32, v33, v34);
      uint64_t v36 = *(void *)(v0 + 264);
      uint64_t v37 = *(void *)(v0 + 256);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      long long v38 = *(_OWORD *)(v37 + 24);
      long long v39 = *(_OWORD *)(v37 + 40);
      long long v40 = *(_OWORD *)(v37 + 56);
      long long v41 = *(_OWORD *)(v37 + 72);
      long long v42 = *(_OWORD *)(v37 + 88);
      *(void *)(v0 + 16) = *(void *)(v1 + 16);
      *(_OWORD *)(v0 + 24) = v38;
      *(_OWORD *)(v0 + 40) = v39;
      *(_OWORD *)(v0 + 56) = v40;
      *(_OWORD *)(v0 + 72) = v41;
      *(_OWORD *)(v0 + 88) = v42;
      *(void *)(v0 + 104) = v3;
      uint64_t v43 = sub_1C0A84780(v35, v0 + 16, v36);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v44 = *(uint64_t (**)(char *))(v0 + 8);
      return v44(v43);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0A83710()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C0A83A44;
  }
  else {
    uint64_t v2 = sub_1C0A83840;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A83840()
{
  uint64_t v1 = *(void *)(v0 + 384);
  sub_1C00897BC(*(void *)(v0 + 224));
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 344);
    uint64_t v2 = *(void *)(v0 + 352);
    uint64_t v4 = *(void *)(v0 + 336);
    uint64_t v5 = *(void *)(v0 + 296);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v6(v3, v5);
    v6(v2, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v24 = *(void *)(v0 + 352);
    uint64_t v10 = *(void *)(v0 + 336);
    uint64_t v11 = *(void *)(v0 + 344);
    uint64_t v12 = *(void *)(v0 + 296);
    uint64_t v13 = *(void *)(v0 + 264);
    uint64_t v14 = *(void *)(v0 + 256);
    uint64_t v15 = *(void *)(v14 + 96);
    long long v16 = *(_OWORD *)(v14 + 32);
    long long v17 = *(_OWORD *)(v14 + 48);
    long long v18 = *(_OWORD *)(v14 + 64);
    long long v19 = *(_OWORD *)(v14 + 80);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v14 + 16);
    *(_OWORD *)(v0 + 128) = v16;
    *(_OWORD *)(v0 + 144) = v17;
    *(_OWORD *)(v0 + 160) = v18;
    *(_OWORD *)(v0 + 176) = v19;
    *(void *)(v0 + 192) = v15;
    *(void *)(v0 + 200) = v9;
    uint64_t v20 = (char *)swift_retain();
    uint64_t v21 = sub_1C0A84780(v20, v0 + 112, v13);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v22(v11, v12);
    v22(v24, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(char *))(v0 + 8);
    return v23(v21);
  }
}

uint64_t sub_1C0A83A44()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = v0[37];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[42] + 8);
  v3(v0[43], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C0A83B00(unsigned char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 176) = a4;
  *(void *)(v5 + 184) = v4;
  *(void *)(v5 + 160) = a2;
  *(void *)(v5 + 168) = a3;
  *(void *)(v5 + 192) = *v4;
  uint64_t v7 = *a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  *(void *)(v5 + 200) = swift_task_alloc();
  *(void *)(v5 + 208) = *(void *)(v7 + 88);
  *(void *)(v5 + 216) = *(void *)(v7 + 80);
  *(void *)(v5 + 224) = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C151FD8C();
  *(void *)(v5 + 232) = v9;
  *(void *)(v5 + 240) = *(void *)(v9 - 8);
  *(void *)(v5 + 248) = swift_task_alloc();
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v8);
  *(void *)(v5 + 256) = swift_task_alloc();
  *(void *)(v5 + 264) = swift_task_alloc();
  uint64_t v10 = sub_1C151FD8C();
  *(void *)(v5 + 272) = v10;
  *(void *)(v5 + 280) = *(void *)(v10 - 8);
  *(void *)(v5 + 288) = swift_task_alloc();
  uint64_t v11 = sub_1C151635C();
  *(void *)(v5 + 296) = v11;
  *(void *)(v5 + 304) = *(void *)(v11 - 8);
  *(void *)(v5 + 312) = swift_task_alloc();
  *(unsigned char *)(v5 + 321) = *a1;
  return MEMORY[0x1F4188298](sub_1C0A83DD4, 0, 0);
}

uint64_t sub_1C0A83DD4()
{
  uint64_t v75 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1527210;
  uint64_t v65 = v1;
  uint64_t v63 = *(void *)(v1 + 104);
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v4 = *(void *)(v0 + 120);
  if (!v4)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  unint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = *(void **)(v0 + 176);
  uint64_t v9 = *(void *)(v0 + 112);
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v67 = sub_1BFE9C558();
  *(void *)(v2 + 64) = v67;
  *(void *)(v2 + 32) = v9;
  *(void *)(v2 + 40) = v4;
  uint64_t v10 = *(void *)(v7 + 112);
  uint64_t v11 = type metadata accessor for FeedDatabaseGroup();
  uint64_t v12 = MEMORY[0x1C18C6830](v10, v11);
  uint64_t v13 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v2 + 104) = v13;
  *(void *)(v2 + 72) = v12;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FeedCursor();
  LOBYTE(v71) = 4;
  uint64_t v14 = *(void *)(v6 + 24);
  uint64_t v15 = *(void *)(v5 + 128);
  long long v16 = *(char **)(v5 + 136);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  long long v17 = (char *)sub_1C1513548((unsigned __int8 *)&v71, v7, v8, v14, v15, v16);
  uint64_t v18 = *(void *)(v0 + 168);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v19 = *(void *)(v18 + 96);
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  int v20 = *(unsigned __int8 *)(v0 + 320);
  if (v20 == 2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v20)
  {
    uint64_t v21 = *(void *)(*(void *)(v0 + 168) + 48);
    sub_1C151997C();
    sub_1C1519BFC();
    swift_release();
    uint64_t v22 = *(void *)(v0 + 136);
    sub_1BFEF2F40(*(void *)(v0 + 128), v22);
    if (v22 != 1)
    {
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
      sub_1C151997C();
      sub_1C1519BFC();
      uint64_t result = swift_release();
      uint64_t v41 = *(void *)(v0 + 152);
      if (v41)
      {
        uint64_t v42 = *(void *)(v0 + 176);
        uint64_t v43 = *(void *)(v0 + 168);
        uint64_t v44 = *(void *)(v0 + 144);
        *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v40 + 64) = v67;
        *(void *)(v40 + 32) = v44;
        *(void *)(v40 + 40) = v41;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void *)(v43 + 40);
        uint64_t v46 = *(void *)(v43 + 88);
        long long v47 = *(_OWORD *)(v43 + 24);
        long long v48 = *(_OWORD *)(v43 + 56);
        long long v49 = *(_OWORD *)(v43 + 72);
        *(void *)(v0 + 16) = *(void *)(v65 + 16);
        *(_OWORD *)(v0 + 24) = v47;
        *(void *)(v0 + 40) = v45;
        *(void *)(v0 + 48) = v21;
        *(_OWORD *)(v0 + 56) = v48;
        *(_OWORD *)(v0 + 72) = v49;
        *(void *)(v0 + 88) = v46;
        *(void *)(v0 + 96) = v19;
        *(void *)(v0 + 104) = v63;
        long long v38 = sub_1C0A84780(v17, v0 + 16, v42);
        swift_release();
        goto LABEL_8;
      }
LABEL_13:
      __break(1u);
      return result;
    }
  }
  char v51 = *(unsigned char *)(v0 + 321);
  uint64_t v24 = *(void *)(v0 + 304);
  uint64_t v23 = *(void *)(v0 + 312);
  uint64_t v25 = *(void *)(v0 + 296);
  uint64_t v56 = *(void *)(v0 + 288);
  uint64_t v68 = *(void *)(v0 + 280);
  uint64_t v69 = *(void *)(v0 + 272);
  uint64_t v57 = *(void *)(v0 + 264);
  uint64_t v58 = *(void *)(v0 + 256);
  uint64_t v64 = *(void *)(v0 + 240);
  uint64_t v66 = *(void *)(v0 + 232);
  uint64_t v59 = *(void *)(v0 + 224);
  uint64_t v60 = *(void *)(v0 + 248);
  uint64_t v55 = *(void *)(v0 + 216);
  long long v61 = v17;
  uint64_t v62 = *(void *)(v0 + 200);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = *(void *)(v0 + 168);
  uint64_t v28 = *(void *)(v0 + 176);
  uint64_t v52 = *(void *)(v0 + 160);
  type metadata accessor for FeedNextCursor();
  sub_1C151634C();
  uint64_t v29 = sub_1C151633C();
  uint64_t v53 = v30;
  uint64_t v54 = v29;
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  LOBYTE(v71) = v51;
  uint64_t v31 = *(void *)(v28 + 32);
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = *(void *)(v26 + 112);
  *(void *)(v33 + 24) = *(void *)(v26 + 120);
  *(void *)(v33 + 32) = v15;
  *(void *)(v33 + 40) = v16;
  *(void *)(v33 + 48) = v32;
  *(void *)(v33 + 56) = v27;
  *(void *)(v33 + 64) = v52;
  *(void *)(v33 + 72) = v61;
  *(void *)(v33 + 80) = v28;
  *(unsigned char *)(v33 + 88) = v51;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v34 = sub_1C125653C(v54, v53, (char *)&v71, v31, (uint64_t)&unk_1EA1A3028, v33);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v56, 1, 1);
  unsigned __int8 v70 = 7;
  uint64_t v35 = sub_1C151631C();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  v36(v57, 1, 1, v35);
  v36(v58, 1, 1, v35);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v60, 1, 1);
  uint64_t v37 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v62, 1, 1, v37);
  uint64_t v72 = 0;
  uint64_t v73 = 0;
  long long v71 = 0u;
  __int16 v74 = 256;
  long long v38 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v56, 0, &v70, v57, v58, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          v60,
          v62,
          (uint64_t *)&v71,
          (uint64_t)&v73,
          0,
          0,
          v34);
  swift_release();
  swift_release();
  sub_1BFD987E0(v62, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v60, v66);
  long long v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD987E0(v58, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1BFD987E0(v57, (unint64_t *)&qword_1EB871180, v39);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v56, v69);
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(char *))(v0 + 8);
  return v50(v38);
}

char *sub_1C0A84620(_OWORD *a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *(void *)v2;
  type metadata accessor for FeedCursor();
  unsigned __int8 v17 = 4;
  uint64_t v8 = *((void *)v4 + 3);
  uint64_t v9 = *(void *)(v7 + 128);
  uint64_t v10 = *(char **)(v7 + 136);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v11 = (char *)sub_1C1513548(&v17, (unint64_t)a1, a2, v8, v9, v10);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (!v3)
  {
    long long v12 = a1[4];
    v16[2] = a1[3];
    v16[3] = v12;
    long long v13 = a1[6];
    v16[4] = a1[5];
    v16[5] = v13;
    long long v14 = a1[2];
    v16[0] = a1[1];
    v16[1] = v14;
    uint64_t v4 = sub_1C0A84780(v11, (uint64_t)v16, (uint64_t)a2);
    swift_release();
  }
  return v4;
}

char *sub_1C0A84780(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a1;
  uint64_t v55 = *v3;
  uint64_t v56 = a3;
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v11 = *(void *)(v6 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C151FD8C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v49 - v14;
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v7);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v60 = (char *)&v49 - v20;
  uint64_t v61 = sub_1C151FD8C();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v58 = (char *)&v49 - v21;
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v22 = *((void *)&v64 + 1);
  if (*((void *)&v64 + 1) >= 2uLL)
  {
    uint64_t v52 = v15;
    uint64_t v26 = v64;
    uint64_t v49 = v4[2];
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v27 = swift_allocObject();
    uint64_t v50 = v18;
    uint64_t v28 = (void *)v27;
    *(_OWORD *)(v27 + 16) = xmmword_1C1527210;
    uint64_t v53 = v13;
    uint64_t v54 = v12;
    char v51 = v10;
    uint64_t v30 = *((void *)v5 + 2);
    uint64_t v29 = *((void *)v5 + 3);
    uint64_t v31 = MEMORY[0x1E4FBB1A0];
    *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v32 = sub_1BFE9C558();
    v28[4] = v30;
    v28[5] = v29;
    v28[12] = v31;
    v28[13] = v32;
    v28[8] = v32;
    v28[9] = v26;
    v28[10] = v22;
    swift_bridgeObjectRetain();
    sub_1BFEF9C98(v26, v22);
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    type metadata accessor for FeedNextCursor();
    LOBYTE(v64) = 7;
    uint64_t v33 = v56;
    uint64_t v34 = *(void *)(v56 + 32);
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = v55;
    *(void *)(v36 + 16) = *(void *)(v55 + 112);
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 120);
    *(void *)(v36 + 40) = *(void *)(v37 + 136);
    *(void *)(v36 + 48) = v35;
    *(void *)(v36 + 56) = v26;
    *(void *)(v36 + 64) = v22;
    *(void *)(v36 + 72) = v33;
    sub_1BFEF9C98(v26, v22);
    swift_retain();
    swift_retain();
    uint64_t v38 = sub_1C125653C(v26, v22, (char *)&v64, v34, (uint64_t)&unk_1EA1A2FE0, v36);
    swift_release();
    swift_release();
    uint64_t v39 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v58, 1, 1, v11);
    v66[0] = 7;
    uint64_t v40 = sub_1C151631C();
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
    uint64_t v42 = (uint64_t)v60;
    v41(v60, 1, 1, v40);
    uint64_t v43 = (uint64_t)v50;
    v41(v50, 1, 1, v40);
    uint64_t v44 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v52, 1, 1);
    uint64_t v45 = type metadata accessor for FeedContext();
    uint64_t v46 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v51, 1, 1, v45);
    uint64_t v65 = 0;
    long long v64 = 0u;
    uint64_t v62 = 0;
    __int16 v63 = 256;
    uint64_t v5 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v39, 0, v66, v42, v43, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
           0,
           0,
           v44,
           v46,
           (uint64_t *)&v64,
           (uint64_t)&v62,
           0,
           0,
           v38);
    swift_release();
    sub_1BFD987E0(v46, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v44, v54);
    long long v47 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1BFD987E0(v43, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    sub_1BFD987E0(v42, (unint64_t *)&qword_1EB871180, v47);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v39, v61);
  }
  else
  {
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
    uint64_t v25 = *((void *)v5 + 2);
    uint64_t v24 = *((void *)v5 + 3);
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 64) = sub_1BFE9C558();
    *(void *)(v23 + 32) = v25;
    *(void *)(v23 + 40) = v24;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    swift_retain();
  }
  return v5;
}

uint64_t sub_1C0A84F30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 280) = v14;
  *(_OWORD *)(v8 + 264) = v13;
  *(void *)(v8 + 248) = a7;
  *(void *)(v8 + 256) = a8;
  *(void *)(v8 + 232) = a5;
  *(void *)(v8 + 240) = a6;
  *(void *)(v8 + 216) = a3;
  *(void *)(v8 + 224) = a4;
  *(void *)(v8 + 200) = a1;
  *(void *)(v8 + 208) = a2;
  *(void *)(v8 + 288) = *a4;
  uint64_t v9 = *a5;
  *(void *)(v8 + 296) = *a5;
  uint64_t v10 = *(void *)(v9 + 80);
  *(void *)(v8 + 304) = v10;
  *(void *)(v8 + 312) = *(void *)(v10 - 8);
  *(void *)(v8 + 320) = swift_task_alloc();
  *(void *)(v8 + 328) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A85084, 0, 0);
}

uint64_t sub_1C0A85084()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 336) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = sub_1C0A8B08C();
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v51 = MEMORY[0x1E4FBC860];
    uint64_t v6 = *(void *)(v3 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
      while (1)
      {
        swift_retain();
        sub_1C151997C();
        sub_1C1519BFC();
        uint64_t result = swift_release();
        if (!*(void *)(v0 + 176)) {
          break;
        }
        ++v7;
        sub_1C1519D3C();
        swift_release();
        uint64_t v9 = *(void *)(v0 + 168);
        swift_release();
        if (v9) {
          uint64_t v10 = v9;
        }
        else {
          uint64_t v10 = v5;
        }
        sub_1BFEF95B8(v10);
        if (v6 == v7)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v11 = v51;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_13:
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v50 = sub_1BFEF4060(v11);
    swift_bridgeObjectRelease();
    long long v13 = *(void **)(v2 + 16);
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C152C7F0;
    *(void *)(v0 + 344) = *(void *)(v12 + 104);
    id v15 = v13;
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    uint64_t v16 = *(void *)(v0 + 144);
    if (!v16) {
      goto LABEL_22;
    }
    uint64_t v17 = *(void *)(v0 + 328);
    uint64_t v18 = *(void *)(v0 + 296);
    uint64_t v19 = *(void *)(v0 + 240);
    uint64_t v20 = *(void *)(v0 + 136);
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1BFE9C558();
    *(void *)(v14 + 32) = v20;
    *(void *)(v14 + 40) = v16;
    uint64_t v21 = *(void *)(v19 + 112);
    uint64_t v22 = *(void *)(v18 + 88);
    *(void *)(v0 + 352) = v22;
    uint64_t v23 = type metadata accessor for FeedDatabaseGroup();
    uint64_t v24 = MEMORY[0x1C18C6830](v21, v23);
    uint64_t v25 = MEMORY[0x1E4FBB550];
    uint64_t v26 = MEMORY[0x1E4FBB5C8];
    *(void *)(v14 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v14 + 104) = v26;
    *(void *)(v14 + 72) = v24;
    uint64_t v27 = *(void *)(v50 + 16);
    *(void *)(v14 + 136) = v25;
    *(void *)(v14 + 144) = v26;
    *(void *)(v14 + 112) = v27;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1BFC9C064(v17);
    uint64_t v40 = *(void *)(v0 + 320);
    uint64_t v29 = *(void *)(v0 + 304);
    uint64_t v48 = *(void *)(v0 + 288);
    uint64_t v47 = *(void *)(v0 + 240);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v42 = *(void *)(v0 + 224);
    uint64_t v45 = *(void *)(v0 + 200);
    uint64_t v46 = *(void *)(v0 + 208);
    long long v43 = *(_OWORD *)(v0 + 272);
    long long v44 = *(_OWORD *)(v0 + 256);
    (*(void (**)(uint64_t, uint64_t))(v22 + 112))(v29, v22);
    unint64_t v30 = static FeedCursorGroup.tags(from:excluding:)();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_1C0A793E8(v30);
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_1BFEF4060(v31);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 152))(1, v50, v32, v29, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v34, v40, v29);
    *(void *)(v0 + 192) = v33 | 0x1000000000000000;
    uint64_t v35 = *(void *)(v42 + 24);
    uint64_t v36 = swift_allocObject();
    *(void *)(v0 + 360) = v36;
    *(_OWORD *)(v36 + 16) = v44;
    *(_OWORD *)(v36 + 32) = v43;
    *(void *)(v36 + 48) = v45;
    *(void *)(v36 + 56) = v46;
    *(void *)(v36 + 64) = v47;
    *(void *)(v36 + 72) = v42;
    uint64_t v37 = *(void *)(v48 + 96);
    uint64_t v38 = *(void *)(v48 + 80);
    uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 40) + **(int **)(v37 + 40));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v39;
    *uint64_t v39 = v0;
    v39[1] = sub_1C0A85680;
    return v49(v0 + 152, v0 + 192, v35, sub_1C0A8E1AC, v36, v38, v37);
  }
  else
  {
    sub_1C0A8CD28();
    swift_allocError();
    *(_OWORD *)uint64_t v4 = xmmword_1C1557FD0;
    *(unsigned char *)(v4 + 16) = 7;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_1C0A85680()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C0A859A4;
  }
  else {
    uint64_t v2 = sub_1C0A857B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A857B0()
{
  uint64_t v1 = *(void *)(v0 + 376);
  sub_1C00897BC(*(void *)(v0 + 152));
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 328);
    uint64_t v4 = *(void *)(v0 + 312);
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 304);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v6(v3, v5);
    v6(v2, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 344);
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v24 = *(void *)(v0 + 320);
    uint64_t v12 = *(void *)(v0 + 304);
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v13 = *(void *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v13 + 96);
    long long v16 = *(_OWORD *)(v13 + 32);
    long long v17 = *(_OWORD *)(v13 + 48);
    long long v18 = *(_OWORD *)(v13 + 64);
    long long v19 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v13 + 16);
    *(_OWORD *)(v0 + 32) = v16;
    *(_OWORD *)(v0 + 48) = v17;
    *(_OWORD *)(v0 + 64) = v18;
    *(_OWORD *)(v0 + 80) = v19;
    *(void *)(v0 + 96) = v15;
    *(void *)(v0 + 104) = v9;
    uint64_t v20 = (char *)swift_retain();
    uint64_t v21 = sub_1C0A84780(v20, v0 + 16, v14);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v22(v24, v12);
    v22(v10, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(char *))(v0 + 8);
    return v23(v21);
  }
}

uint64_t sub_1C0A859A4()
{
  uint64_t v1 = v0[41];
  uint64_t v3 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v4 = v0[38];
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v5(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

char *sub_1C0A85A5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a5;
  v32[1] = a4;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v5 = *a1;
  uint64_t v38 = type metadata accessor for FeedContext;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v32 - v8;
  uint64_t v10 = *(void *)(v5 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C151FD8C();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v32 - v13;
  uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v6);
  MEMORY[0x1F4188790](v15 - 8);
  long long v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v32 - v19;
  uint64_t v33 = sub_1C151FD8C();
  uint64_t v21 = *(void *)(v33 - 8);
  __n128 v22 = MEMORY[0x1F4188790](v33);
  uint64_t v24 = (char *)v32 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v10 - 8) + 56))((char *)v32 - v23, 1, 1, v10, v22);
  unsigned __int8 v45 = 5;
  uint64_t v25 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v20, 1, 1, v25);
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v26 = v34;
  uint64_t v27 = *(void *)(v34 + 40);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v14, 1, 1, AssociatedTypeWitness);
  uint64_t v28 = type metadata accessor for FeedContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v9, 1, 1, v28);
  uint64_t v44 = 0;
  long long v43 = 0u;
  uint64_t v41 = 0;
  __int16 v42 = 256;
  uint64_t v29 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(v39, v40, (uint64_t)v24, 0, &v45, (uint64_t)v20, (uint64_t)v17, 0, 0, 0, 0, 0, 0, 0, 1, v27, 0, 0, 1,
          0,
          0,
          (uint64_t)v14,
          (uint64_t)v9,
          (uint64_t *)&v43,
          (uint64_t)&v41,
          *(void *)(v26 + 16),
          0,
          0);
  sub_1BFD987E0((uint64_t)v9, &qword_1EB886BB0, (uint64_t (*)(uint64_t))v38);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
  unint64_t v30 = v35;
  sub_1BFD987E0((uint64_t)v17, (unint64_t *)&qword_1EB871180, v35);
  sub_1BFD987E0((uint64_t)v20, (unint64_t *)&qword_1EB871180, v30);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v33);
  return v29;
}

char *sub_1C0A85F04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  v28[1] = a2;
  uint64_t v3 = *a1;
  uint64_t v34 = type metadata accessor for FeedContext;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v8 = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C151FD8C();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v28 - v11;
  unint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v4);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v28 - v17;
  uint64_t v29 = sub_1C151FD8C();
  uint64_t v19 = *(void *)(v29 - 8);
  __n128 v20 = MEMORY[0x1F4188790](v29);
  __n128 v22 = (char *)v28 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v8 - 8) + 56))((char *)v28 - v21, 1, 1, v8, v20);
  unsigned __int8 v39 = 1;
  uint64_t v23 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 1, 1, v23);
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  uint64_t v24 = type metadata accessor for FeedContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
  uint64_t v38 = 0;
  long long v37 = 0u;
  uint64_t v35 = 0;
  __int16 v36 = 256;
  uint64_t v25 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v22, 0, &v39, (uint64_t)v18, (uint64_t)v15, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)v12,
          (uint64_t)v7,
          (uint64_t *)&v37,
          (uint64_t)&v35,
          *(void *)(v33 + 16),
          0,
          0);
  sub_1BFD987E0((uint64_t)v7, &qword_1EB886BB0, (uint64_t (*)(uint64_t))v34);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  uint64_t v26 = v30;
  sub_1BFD987E0((uint64_t)v15, (unint64_t *)&qword_1EB871180, v30);
  sub_1BFD987E0((uint64_t)v18, (unint64_t *)&qword_1EB871180, v26);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v29);
  return v25;
}

uint64_t sub_1C0A863A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7, char a8)
{
  *(void *)(v8 + 176) = v14;
  *(void *)(v8 + 184) = v15;
  *(_OWORD *)(v8 + 160) = v13;
  *(unsigned char *)(v8 + 280) = a8;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 128) = a4;
  *(void *)(v8 + 136) = a5;
  *(void *)(v8 + 112) = a2;
  *(void *)(v8 + 120) = a3;
  *(void *)(v8 + 104) = a1;
  uint64_t v9 = *a4;
  *(void *)(v8 + 192) = *a4;
  *(void *)(v8 + 200) = *a7;
  uint64_t v10 = *(void *)(v9 + 80);
  *(void *)(v8 + 208) = v10;
  *(void *)(v8 + 216) = *(void *)(v10 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  *(void *)(v8 + 232) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A864F8, 0, 0);
}

uint64_t sub_1C0A864F8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 240) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    sub_1BFC9C064(*(void *)(v0 + 232));
    sub_1C008C54C();
    sub_1C1519BCC();
    uint64_t v6 = sub_1C1519D7C();
    swift_release();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v47 = MEMORY[0x1E4FBC860];
    uint64_t v8 = *(void *)(v6 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = 0;
      while (1)
      {
        swift_retain();
        sub_1C151997C();
        sub_1C1519BFC();
        uint64_t result = swift_release();
        if (!*(void *)(v0 + 88)) {
          break;
        }
        ++v9;
        sub_1C1519D3C();
        swift_release();
        uint64_t v10 = *(void *)(v0 + 80);
        swift_release();
        if (v10) {
          uint64_t v11 = v10;
        }
        else {
          uint64_t v11 = v7;
        }
        sub_1BFEF95B8(v11);
        if (v8 == v9)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v12 = v47;
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_15:
    uint64_t v13 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = sub_1BFEF4060(v12);
    swift_bridgeObjectRelease();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1C151E31C();
    uint64_t v16 = *(void *)(v14 + 88);
    *(void *)(v0 + 248) = v16;
    unint64_t v17 = static FeedCursorGroup.tags(from:excluding:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1C0A793E8(v17);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1BFEF4060(v18);
    swift_bridgeObjectRelease();
    uint64_t v43 = v15;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 152))(0, v15, v19, v13, v16);
    swift_bridgeObjectRelease();
    __n128 v20 = *(void **)(v2 + 16);
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
    id v22 = v20;
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    uint64_t v23 = *(void *)(v0 + 64);
    if (!v23) {
      goto LABEL_20;
    }
    uint64_t v24 = *(void *)(v0 + 216);
    uint64_t v37 = *(void *)(v0 + 224);
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v26 = *(void *)(v0 + 208);
    char v46 = *(unsigned char *)(v0 + 280);
    uint64_t v27 = *(void *)(v0 + 152);
    uint64_t v45 = *(void *)(v0 + 128);
    uint64_t v40 = *(void *)(v0 + 104);
    uint64_t v42 = *(void *)(v0 + 112);
    uint64_t v28 = *(void *)(v0 + 56);
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 64) = sub_1BFE9C558();
    *(void *)(v21 + 32) = v28;
    *(void *)(v21 + 40) = v23;
    uint64_t v29 = *(void *)(v43 + 16);
    long long v38 = *(_OWORD *)(v0 + 176);
    long long v39 = *(_OWORD *)(v0 + 160);
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBB5C8];
    *(void *)(v21 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v21 + 104) = v30;
    *(void *)(v21 + 72) = v29;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();

    uint64_t v31 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v32, v37, v26);
    *(void *)(v0 + 96) = v31 | 0x1000000000000000;
    uint64_t v44 = *(void *)(v27 + 24);
    uint64_t v33 = swift_allocObject();
    *(void *)(v0 + 256) = v33;
    *(_OWORD *)(v33 + 16) = v39;
    *(_OWORD *)(v33 + 32) = v38;
    *(void *)(v33 + 48) = v40;
    *(void *)(v33 + 56) = v42;
    *(unsigned char *)(v33 + 64) = v46;
    *(void *)(v33 + 72) = v45;
    *(void *)(v33 + 80) = v27;
    uint64_t v34 = *(void *)(v25 + 96);
    uint64_t v35 = *(void *)(v25 + 80);
    uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))(*(void *)(v34 + 40) + **(int **)(v34 + 40));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    __int16 v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v36;
    void *v36 = v0;
    v36[1] = sub_1C0A86B98;
    return v41(v0 + 40, v0 + 96, v44, sub_1C0A8E3E4, v33, v35, v34);
  }
  else
  {
    sub_1C0A8CD28();
    swift_allocError();
    *(_OWORD *)uint64_t v3 = xmmword_1C1557FD0;
    *(unsigned char *)(v3 + 16) = 7;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1C0A86B98()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C0A86E6C;
  }
  else {
    uint64_t v2 = sub_1C0A86CC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A86CC8()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[27];
  uint64_t v3 = sub_1C00897BC(v0[5]);
  uint64_t v4 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[28];
  uint64_t v7 = v0[26];
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v8 = *v4;
    (*v4)(v6, v7);
    v8(v5, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    uint64_t v11 = v3;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v12 = *v4;
    (*v4)(v6, v7);
    v12(v5, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(v11);
  }
}

uint64_t sub_1C0A86E6C()
{
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v4 = v0[26];
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v5(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

char *sub_1C0A86F24(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v35 = a5;
  int v34 = a4;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v6 = *a1;
  uint64_t v41 = type metadata accessor for FeedContext;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v33[-v9];
  uint64_t v11 = *(void *)(v6 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1C151FD8C();
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v33[-v14];
  long long v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v7);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = &v33[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = &v33[-v20];
  uint64_t v36 = sub_1C151FD8C();
  uint64_t v22 = *(void *)(v36 - 8);
  __n128 v23 = MEMORY[0x1F4188790](v36);
  uint64_t v25 = &v33[-v24];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v11 - 8) + 56))(&v33[-v24], 1, 1, v11, v23);
  unsigned __int8 v48 = v34;
  uint64_t v26 = sub_1C151631C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 1, 1, v26);
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v27 = v37;
  uint64_t v28 = *(void *)(v37 + 40);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v15, 1, 1, AssociatedTypeWitness);
  uint64_t v29 = type metadata accessor for FeedContext();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
  uint64_t v47 = 0;
  long long v46 = 0u;
  uint64_t v44 = 0;
  __int16 v45 = 256;
  uint64_t v30 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(v42, v43, (uint64_t)v25, 0, &v48, (uint64_t)v21, (uint64_t)v18, 0, 0, 0, 0, 0, 0, 0, 1, v28, 0, 0, 1,
          0,
          0,
          (uint64_t)v15,
          (uint64_t)v10,
          (uint64_t *)&v46,
          (uint64_t)&v44,
          *(void *)(v27 + 16),
          0,
          0);
  sub_1BFD987E0((uint64_t)v10, &qword_1EB886BB0, (uint64_t (*)(uint64_t))v41);
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v15, v40);
  uint64_t v31 = v38;
  sub_1BFD987E0((uint64_t)v18, (unint64_t *)&qword_1EB871180, v38);
  sub_1BFD987E0((uint64_t)v21, (unint64_t *)&qword_1EB871180, v31);
  (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v25, v36);
  return v30;
}

uint64_t sub_1C0A873D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  void v6[5] = a3;
  v6[6] = a4;
  return MEMORY[0x1F4188298](sub_1C0A873F8, 0, 0);
}

uint64_t sub_1C0A873F8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = sub_1BFEB00CC();
    v0[10] = v2;
    uint64_t v6 = v2;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[11] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1C0A87570;
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[8];
    uint64_t v10 = v0[6];
    return sub_1C0A804F4(v10, v8, v6, v9);
  }
  else
  {
    sub_1C0A8CD28();
    swift_allocError();
    *(_OWORD *)uint64_t v3 = xmmword_1C1557FD0;
    *(unsigned char *)(v3 + 16) = 7;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1C0A87570(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A87708;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 104) = a1;
    uint64_t v5 = sub_1C0A876A0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A876A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 104);
  return v1(v2);
}

uint64_t sub_1C0A87708()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0A87774(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a3;
  v6[19] = a6;
  v6[16] = a1;
  v6[17] = a2;
  uint64_t v7 = *a3;
  v6[20] = *(void *)(*a3 + 104);
  v6[21] = *(void *)(v7 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[22] = AssociatedTypeWitness;
  v6[23] = *(void *)(AssociatedTypeWitness - 8);
  v6[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A8787C, 0, 0);
}

uint64_t sub_1C0A8787C()
{
  sub_1C151866C();
  swift_allocObject();
  v0[25] = sub_1C1517DBC();
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t v1 = swift_release();
  if (!v0[13])
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1C1519A3C();
  swift_release();
  sub_1C1519A4C();
  swift_release();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  sub_1C1519BFC();
  uint64_t v1 = swift_release();
  unint64_t v2 = v0[9];
  v0[26] = v0[8];
  v0[27] = v2;
  if (v2 >> 60 == 15)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x1F415EBC8](v1);
  }
  sub_1C1518ACC();
  sub_1BFD98ABC(&qword_1EB85AB40, MEMORY[0x1E4FAAD90]);
  sub_1C1517D9C();
  v0[28] = v0[12];
  v0[29] = sub_1C15186AC();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C0A87B0C;
  uint64_t v1 = (uint64_t)(v0 + 15);
  return MEMORY[0x1F415EBC8](v1);
}

uint64_t sub_1C0A87B0C()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_1C0A880C4;
  }
  else
  {
    swift_release();
    unint64_t v2 = sub_1C0A87C28;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A87C28()
{
  v0[32] = v0[15];
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t v1 = swift_release();
  if (!v0[14])
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = v0[31];
  sub_1C1519A3C();
  swift_release();
  sub_1C1519A4C();
  if (!v2)
  {
    swift_release();
    sub_1C151997C();
    swift_release();
    swift_release();
    swift_release();
    sub_1C1519BFC();
    uint64_t v1 = swift_release();
    unint64_t v5 = v0[11];
    v0[33] = v0[10];
    v0[34] = v5;
    if (v5 >> 60 != 15)
    {
      sub_1C151864C();
      v0[35] = (*(uint64_t (**)(void, void))(v0[20] + 24))(v0[24], v0[21]);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[36] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_1C0A87EBC;
      uint64_t v1 = v0[16];
      return MEMORY[0x1F415EBC8](v1);
    }
LABEL_13:
    __break(1u);
    return MEMORY[0x1F415EBC8](v1);
  }
  unint64_t v3 = v0[27];
  uint64_t v4 = v0[26];
  swift_release();
  swift_release();
  sub_1BFE95878(v4, v3);
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C0A87EBC()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C0A8815C;
  }
  else {
    uint64_t v2 = sub_1C0A87FF0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A87FF0()
{
  unint64_t v1 = v0[27];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[22];
  sub_1BFE95878(v0[33], v0[34]);
  swift_release();
  swift_release();
  sub_1BFE95878(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C0A880C4()
{
  uint64_t v2 = v0[26];
  unint64_t v1 = v0[27];
  swift_release();
  sub_1BFE95878(v2, v1);
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C0A8815C()
{
  unint64_t v1 = v0[27];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[22];
  sub_1BFE95878(v0[33], v0[34]);
  swift_release();
  swift_release();
  sub_1BFE95878(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C0A88230(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[37] = v11;
  v6[38] = v12;
  v6[35] = a5;
  v6[36] = a6;
  v6[33] = a3;
  v6[34] = a4;
  v6[31] = a1;
  v6[32] = a2;
  uint64_t v7 = *a1;
  v6[39] = *a1;
  uint64_t v8 = *(void *)(v7 + 80);
  v6[40] = v8;
  v6[41] = *(void *)(v8 - 8);
  v6[42] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A8833C, 0, 0);
}

uint64_t sub_1C0A8833C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 344) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    sub_1BFC9C064(*(void *)(v0 + 336));
    unint64_t v6 = *(void *)(v0 + 336);
    uint64_t v8 = *(void *)(v0 + 296);
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v9 = *(void *)(v0 + 248);
    type metadata accessor for FeedCursor();
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_1BFC9839C(v10, v6, v8, v7);
    *(void *)(v0 + 352) = v11;
    swift_release();
    uint64_t v12 = *(void **)(v2 + 16);
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C152C7F0;
    uint64_t v14 = *(unsigned __int8 *)(v9 + qword_1EB93C320);
    unint64_t v15 = 0xE600000000000000;
    uint64_t v16 = 0x657669746341;
    uint64_t v17 = (void *)v13;
    uint64_t v51 = (uint64_t *)v11;
    switch(v14)
    {
      case 1:
        unint64_t v15 = 0xE400000000000000;
        uint64_t v16 = 1852138835;
        break;
      case 2:
        uint64_t v16 = 0x6E657A6F7246;
        break;
      case 3:
        unint64_t v15 = 0xEB00000000646565;
        uint64_t v16 = 0x4620666F20646E45;
        break;
      case 4:
        uint64_t v16 = 0x646568636143;
        break;
      case 5:
        unint64_t v15 = 0xE800000000000000;
        uint64_t v18 = 0x6C6F6F706552;
        goto LABEL_13;
      case 6:
        unint64_t v15 = 0xE800000000000000;
        uint64_t v18 = 0x646E61707845;
LABEL_13:
        uint64_t v16 = v18 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
        break;
      default:
        break;
    }
    uint64_t v19 = *(void *)(v0 + 264);
    uint64_t v20 = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v21 = sub_1BFE9C558();
    v17[8] = v21;
    v17[4] = v16;
    v17[5] = v15;
    uint64_t v22 = *(void *)(v19 + 16);
    id v23 = v12;
    sub_1C151997C();
    sub_1C1519BFC();
    swift_release();
    uint64_t v24 = *(void *)(v0 + 240);
    if (!v24)
    {
      __break(1u);
      JUMPOUT(0x1C0A888A4);
    }
    uint64_t v25 = *(void *)(v0 + 232);
    v17[12] = v20;
    v17[13] = v21;
    v17[9] = v25;
    v17[10] = v24;
    uint64_t v26 = sub_1BFC8BD54();
    v17[17] = v20;
    v17[18] = v21;
    v17[14] = v26;
    v17[15] = v27;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();

    uint64_t v28 = v51;
    switch((int)v14)
    {
      case 0:
        uint64_t v30 = *(void *)(v0 + 264);
        uint64_t v31 = *(void *)(v30 + 104);
        long long v32 = *(_OWORD *)(v30 + 24);
        long long v33 = *(_OWORD *)(v30 + 40);
        long long v34 = *(_OWORD *)(v30 + 56);
        long long v35 = *(_OWORD *)(v30 + 72);
        long long v36 = *(_OWORD *)(v30 + 88);
        *(void *)(v0 + 112) = v22;
        *(_OWORD *)(v0 + 120) = v32;
        *(_OWORD *)(v0 + 136) = v33;
        *(_OWORD *)(v0 + 152) = v34;
        *(_OWORD *)(v0 + 168) = v35;
        *(_OWORD *)(v0 + 184) = v36;
        *(void *)(v0 + 200) = v31;
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 360) = v37;
        void *v37 = v0;
        v37[1] = sub_1C0A888DC;
        uint64_t v39 = *(void *)(v0 + 272);
        uint64_t v38 = *(void *)(v0 + 280);
        return sub_1C0A88D94(v51, v38, v0 + 112, v39);
      case 1:
      case 2:
      case 3:
      case 6:
        goto LABEL_16;
      case 4:
        uint64_t v40 = sub_1C0A84780((char *)v51, *(void *)(v0 + 288), *(void *)(v0 + 272));
        swift_release();
        uint64_t v28 = v40;
LABEL_16:
        swift_release();
        (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
        swift_task_dealloc();
        uint64_t v29 = *(uint64_t (**)(void *))(v0 + 8);
        uint64_t result = v29(v28);
        break;
      case 5:
        uint64_t v41 = *(void *)(v0 + 264);
        uint64_t v42 = *(void *)(v41 + 104);
        long long v43 = *(_OWORD *)(v41 + 24);
        long long v44 = *(_OWORD *)(v41 + 40);
        long long v45 = *(_OWORD *)(v41 + 56);
        long long v46 = *(_OWORD *)(v41 + 72);
        long long v47 = *(_OWORD *)(v41 + 88);
        *(void *)(v0 + 16) = v22;
        *(_OWORD *)(v0 + 24) = v43;
        *(_OWORD *)(v0 + 40) = v44;
        *(_OWORD *)(v0 + 56) = v45;
        *(_OWORD *)(v0 + 72) = v46;
        *(_OWORD *)(v0 + 88) = v47;
        *(void *)(v0 + 104) = v42;
        unsigned __int8 v48 = (void *)swift_task_alloc();
        *(void *)(v0 + 384) = v48;
        *unsigned __int8 v48 = v0;
        v48[1] = sub_1C0A88A9C;
        uint64_t v50 = *(void *)(v0 + 272);
        uint64_t v49 = *(void *)(v0 + 280);
        uint64_t result = sub_1C0A8A04C(v51, v49, v0 + 16, v50);
        break;
      default:
        JUMPOUT(0);
    }
  }
  else
  {
    sub_1C0A8CD28();
    swift_allocError();
    *(_OWORD *)uint64_t v3 = xmmword_1C1557FD0;
    *(unsigned char *)(v3 + 16) = 7;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_1C0A888DC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 368) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A88C5C;
  }
  else
  {
    *(void *)(v4 + 376) = a1;
    uint64_t v5 = sub_1C0A88A04;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A88A04()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0[47];
  (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1C0A88A9C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0A88CF8;
  }
  else
  {
    *(void *)(v4 + 400) = a1;
    uint64_t v5 = sub_1C0A88BC4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0A88BC4()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0[50];
  (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1C0A88C5C()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[40];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C0A88CF8()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[40];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C0A88D94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  uint64_t v6 = *v4;
  v5[17] = *v4;
  uint64_t v7 = *a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  v5[18] = swift_task_alloc();
  v5[19] = *(void *)(v7 + 88);
  uint64_t v9 = *(void *)(v7 + 80);
  v5[20] = v9;
  v5[21] = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C151FD8C();
  v5[22] = v10;
  v5[23] = *(void *)(v10 - 8);
  v5[24] = swift_task_alloc();
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  uint64_t v11 = sub_1C151FD8C();
  v5[27] = v11;
  v5[28] = *(void *)(v11 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = *(void *)(v9 - 8);
  v5[31] = swift_task_alloc();
  v5[32] = *(void *)(v6 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5[33] = swift_getAssociatedTypeWitness();
  v5[34] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[35] = AssociatedTypeWitness;
  v5[36] = *(void *)(AssociatedTypeWitness - 8);
  v5[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A89184, 0, 0);
}

uint64_t sub_1C0A89184()
{
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 280);
  (*(void (**)(void))(*(void *)(v0 + 152) + 48))(*(void *)(v0 + 160));
  swift_getAssociatedConformanceWitness();
  Swift::Bool v4 = FeedServiceContextType.canWriteToDatabase()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (!v4)
  {
    sub_1C151F38C();
    sub_1C15197BC();
    swift_retain();
    uint64_t v9 = *(char **)(v0 + 96);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(char *))(v0 + 8);
    return v10(v9);
  }
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  int v6 = *(unsigned __int8 *)(v0 + 328);
  if (v6 == 2)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  if (v6)
  {
    sub_1C151997C();
    sub_1C1519BFC();
    swift_release();
    uint64_t v7 = *(void *)(v0 + 56);
    sub_1BFEF2F40(*(void *)(v0 + 48), v7);
    if (v7 != 1)
    {
      uint64_t v9 = sub_1C0A84780(*(char **)(v0 + 96), *(void *)(v0 + 112), *(void *)(v0 + 120));
      goto LABEL_7;
    }
  }
  sub_1C008C54C();
  sub_1C1519BCC();
  uint64_t v8 = sub_1C1519D7C();
  swift_release();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v8 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (1)
    {
      swift_retain();
      sub_1C151997C();
      sub_1C1519BFC();
      uint64_t result = swift_release();
      if (!*(void *)(v0 + 80)) {
        break;
      }
      ++v13;
      sub_1C1519D3C();
      swift_release();
      uint64_t v14 = *(void *)(v0 + 72);
      swift_release();
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = v11;
      }
      sub_1BFEF95B8(v15);
      if (v12 == v13)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v48;
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_20:
  uint64_t v18 = *(void *)(v0 + 152);
  uint64_t v17 = *(void *)(v0 + 160);
  uint64_t v19 = sub_1BFEF4060(v16);
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C151E31C();
  unint64_t v20 = static FeedCursorGroup.tags(from:excluding:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1C0A793E8(v20);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1BFEF4060(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 152))(0, v19, v22, v17, v18);
  swift_bridgeObjectRelease();
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v24 = *(void *)(v0 + 24);
  if (!v24) {
    goto LABEL_26;
  }
  uint64_t v47 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 240);
  uint64_t v45 = *(void *)(v0 + 248);
  uint64_t v26 = *(void *)(v0 + 160);
  uint64_t v27 = *(void *)(v0 + 136);
  uint64_t v29 = *(_OWORD **)(v0 + 112);
  uint64_t v28 = *(void *)(v0 + 120);
  uint64_t v30 = *(void *)(v0 + 16);
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v23 + 64) = sub_1BFE9C558();
  *(void *)(v23 + 32) = v30;
  *(void *)(v23 + 40) = v24;
  uint64_t v31 = *(void *)(v19 + 16);
  swift_bridgeObjectRelease();
  uint64_t v32 = MEMORY[0x1E4FBB5C8];
  *(void *)(v23 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v23 + 104) = v32;
  *(void *)(v23 + 72) = v31;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v34, v45, v26);
  *(void *)(v0 + 88) = v33 | 0x1000000000000000;
  uint64_t v35 = *(void *)(v28 + 24);
  uint64_t v36 = swift_allocObject();
  *(void *)(v0 + 304) = v36;
  *(void *)(v36 + 16) = *(void *)(v27 + 112);
  *(_OWORD *)(v36 + 24) = *(_OWORD *)(v27 + 120);
  *(void *)(v36 + 40) = *(void *)(v27 + 136);
  long long v38 = v29[4];
  long long v37 = v29[5];
  long long v39 = v29[3];
  *(_OWORD *)(v36 + 80) = v29[2];
  *(_OWORD *)(v36 + 96) = v39;
  *(_OWORD *)(v36 + 112) = v38;
  *(_OWORD *)(v36 + 128) = v37;
  long long v40 = v29[1];
  *(_OWORD *)(v36 + 48) = *v29;
  *(_OWORD *)(v36 + 64) = v40;
  *(void *)(v36 + 144) = v28;
  uint64_t v41 = *(int **)(v47 + 40);
  sub_1BFC717EC((uint64_t)v29);
  uint64_t v42 = *(void *)(v27 + 80);
  long long v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))((char *)v41 + *v41);
  swift_retain();
  long long v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v43;
  *long long v43 = v0;
  v43[1] = sub_1C0A8997C;
  uint64_t v44 = *(void *)(v0 + 256);
  return v46(v0 + 32, v0 + 88, v35, sub_1C0A8DECC, v36, v42, v44);
}

uint64_t sub_1C0A8997C()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C0A89F74;
  }
  else {
    uint64_t v2 = sub_1C0A89AAC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A89AAC()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v29 = v0[40];
  uint64_t v5 = v0[4];
  uint64_t v26 = v0[18];
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[30] + 56))(v0[29], 1, 1, v0[20]);
  unsigned __int8 v31 = 7;
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  v7(v2, 1, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v8 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v26, 1, 1, v8);
  memset(v32, 0, sizeof(v32));
  uint64_t v33 = 0;
  __int16 v34 = 256;
  sub_1C00897BC(v5);
  uint64_t v9 = v29;
  uint64_t v10 = v0[30];
  uint64_t v27 = v0[31];
  uint64_t v11 = v0[28];
  uint64_t v30 = v0[29];
  uint64_t v24 = v0[27];
  uint64_t v12 = v0[25];
  uint64_t v28 = v0[26];
  uint64_t v14 = v0[23];
  uint64_t v13 = v0[24];
  uint64_t v23 = v0[22];
  uint64_t v25 = v0[20];
  uint64_t v15 = v0[18];
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFD987E0(v15, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v23);
    uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1BFD987E0(v12, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    sub_1BFD987E0(v28, (unint64_t *)&qword_1EB871180, v16);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v30, v24);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v27, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  else
  {
    uint64_t v19 = swift_retain();
    unint64_t v20 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v30, 0, &v31, v28, v12, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
            0,
            0,
            v13,
            v15,
            v32,
            (uint64_t)&v33,
            0,
            0,
            v19);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFD987E0(v15, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v23);
    uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1BFD987E0(v12, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    sub_1BFD987E0(v28, (unint64_t *)&qword_1EB871180, v21);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v30, v24);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v27, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(char *))v0[1];
    return v22(v20);
  }
}

uint64_t sub_1C0A89F74()
{
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C0A8A04C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v5[17] = *v4;
  uint64_t v6 = *a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  v5[18] = swift_task_alloc();
  v5[19] = *(void *)(v6 + 88);
  uint64_t v8 = *(void *)(v6 + 80);
  v5[20] = v8;
  v5[21] = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C151FD8C();
  v5[22] = v9;
  v5[23] = *(void *)(v9 - 8);
  v5[24] = swift_task_alloc();
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v7);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  uint64_t v10 = sub_1C151FD8C();
  v5[27] = v10;
  v5[28] = *(void *)(v10 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = *(void *)(v8 - 8);
  v5[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0A8A30C, 0, 0);
}

uint64_t sub_1C0A8A30C()
{
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  int v2 = *(unsigned __int8 *)(v0 + 280);
  if (v2 == 2)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  if ((v2 & 1) != 0
    && (sub_1C151997C(),
        sub_1C1519BFC(),
        swift_release(),
        uint64_t v3 = *(void *)(v0 + 24),
        sub_1BFEF2F40(*(void *)(v0 + 16), v3),
        v3 != 1))
  {
    uint64_t v16 = sub_1C0A84780(*(char **)(v0 + 96), *(void *)(v0 + 112), *(void *)(v0 + 120));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(char *))(v0 + 8);
    return v17(v16);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 136);
    uint64_t v6 = v4[14];
    uint64_t v5 = v4[15];
    uint64_t v7 = v4[16];
    uint64_t v8 = v4[17];
    uint64_t v9 = sub_1C0A8B08C();
    uint64_t v48 = v8;
    uint64_t v49 = v7;
    uint64_t v51 = v5;
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v52 = MEMORY[0x1E4FBC860];
    uint64_t v11 = *(void *)(v9 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      while (1)
      {
        swift_retain();
        sub_1C151997C();
        sub_1C1519BFC();
        uint64_t result = swift_release();
        if (!*(void *)(v0 + 80)) {
          break;
        }
        ++v12;
        sub_1C1519D3C();
        swift_release();
        uint64_t v13 = *(void *)(v0 + 64);
        swift_release();
        if (v13) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = v10;
        }
        sub_1BFEF95B8(v14);
        if (v11 == v12)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v15 = v52;
          goto LABEL_16;
        }
      }
      __break(1u);
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
LABEL_16:
    uint64_t v47 = v6;
    uint64_t v18 = sub_1BFEF4060(v15);
    swift_bridgeObjectRelease();
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    uint64_t v20 = *(void *)(v0 + 56);
    if (!v20) {
      goto LABEL_22;
    }
    uint64_t v43 = *(void *)(v0 + 248);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v42 = *(void *)(v0 + 152);
    uint64_t v22 = *(void *)(v0 + 136);
    uint64_t v45 = *(void *)(v0 + 240);
    uint64_t v23 = *(_OWORD **)(v0 + 112);
    uint64_t v46 = *(void *)(v0 + 120);
    uint64_t v24 = *(void *)(v0 + 48);
    *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v19 + 64) = sub_1BFE9C558();
    *(void *)(v19 + 32) = v24;
    *(void *)(v19 + 40) = v20;
    uint64_t v25 = *(void *)(v18 + 16);
    uint64_t v26 = MEMORY[0x1E4FBB5C8];
    *(void *)(v19 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v19 + 104) = v26;
    *(void *)(v19 + 72) = v25;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v44 = v22;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1C151E31C();
    unint64_t v27 = static FeedCursorGroup.tags(from:excluding:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1C0A793E8(v27);
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1BFEF4060(v28);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 152))(1, v18, v29, v21, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v31, v43, v21);
    *(void *)(v0 + 88) = v30 | 0x1000000000000000;
    uint64_t v32 = *(void *)(v46 + 24);
    uint64_t v33 = swift_allocObject();
    *(void *)(v0 + 256) = v33;
    *(void *)(v33 + 16) = v47;
    *(void *)(v33 + 24) = v51;
    *(void *)(v33 + 32) = v49;
    *(void *)(v33 + 40) = v48;
    long long v35 = v23[4];
    long long v34 = v23[5];
    long long v36 = v23[3];
    *(_OWORD *)(v33 + 80) = v23[2];
    *(_OWORD *)(v33 + 96) = v36;
    *(_OWORD *)(v33 + 112) = v35;
    *(_OWORD *)(v33 + 128) = v34;
    long long v37 = v23[1];
    *(_OWORD *)(v33 + 48) = *v23;
    *(_OWORD *)(v33 + 64) = v37;
    *(void *)(v33 + 144) = v46;
    uint64_t v38 = *(void *)(v44 + 96);
    long long v39 = *(int **)(v38 + 40);
    sub_1BFC717EC((uint64_t)v23);
    uint64_t v40 = *(void *)(v44 + 80);
    uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))((char *)v39 + *v39);
    swift_retain();
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_1C0A8AA28;
    return v50(v0 + 32, v0 + 88, v32, sub_1C0A8DED8, v33, v40, v38);
  }
}

uint64_t sub_1C0A8AA28()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    int v2 = sub_1C0A8AFC8;
  }
  else {
    int v2 = sub_1C0A8AB58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0A8AB58()
{
  long long v34 = v0;
  uint64_t v1 = v0[34];
  sub_1C00897BC(v0[4]);
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  if (v1)
  {
    uint64_t v4 = v0[20];
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v0[29];
    uint64_t v27 = v0[28];
    uint64_t v28 = v0[27];
    uint64_t v8 = v0[25];
    uint64_t v20 = v0[26];
    uint64_t v22 = v0[24];
    uint64_t v24 = v0[23];
    uint64_t v25 = v0[22];
    uint64_t v21 = v0[21];
    uint64_t v9 = v0[20];
    uint64_t v23 = v0[18];
    uint64_t v10 = v0[15];
    uint64_t v26 = v0[31];
    uint64_t v11 = v0[14];
    uint64_t v12 = (char *)swift_retain();
    uint64_t v13 = sub_1C0A84780(v12, v11, v10);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v9);
    unsigned __int8 v29 = 7;
    uint64_t v14 = sub_1C151631C();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    v15(v20, 1, 1, v14);
    v15(v8, 1, 1, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v22, 1, 1);
    uint64_t v16 = type metadata accessor for FeedContext();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v23, 1, 1, v16);
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    long long v30 = 0u;
    __int16 v33 = 256;
    swift_retain();
    uint64_t v17 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v7, 0, &v29, v20, v8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
            0,
            0,
            v22,
            v23,
            (uint64_t *)&v30,
            (uint64_t)&v32,
            0,
            0,
            (uint64_t)v13);
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFD987E0(v23, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v25);
    uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1BFD987E0(v8, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    sub_1BFD987E0(v20, (unint64_t *)&qword_1EB871180, v18);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v7, v28);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v26, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(char *))v0[1];
    return v19(v17);
  }
}

uint64_t sub_1C0A8AFC8()
{
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C0A8B08C()
{
  sub_1BFD98850(0, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v18 - v2;
  uint64_t v19 = sub_1C151995C();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - v9;
  FeedCursorTracker.snapshot()((uint64_t)&v18 - v9);
  uint64_t v11 = *(void *)&v10[*(int *)(v7 + 36)];
  uint64_t v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v12(v10, v7);
  uint64_t v13 = sub_1BFE71F8C(v11);
  swift_bridgeObjectRelease();
  if (v13[2])
  {
    sub_1C008C54C();
    sub_1C1519BCC();
    uint64_t v14 = sub_1C0062DB4((uint64_t)v13);
    swift_release();
    sub_1C1519AFC();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1C1519C5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
    uint64_t v16 = sub_1C1519D8C();
    if (!v0) {
      uint64_t v14 = v16;
    }
    swift_release();
    sub_1BFD987E0((uint64_t)v3, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v14;
}

char *sub_1C0A8B40C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v36 = a8;
  uint64_t v37 = a2;
  uint64_t v9 = *a1;
  uint64_t v42 = type metadata accessor for FeedContext;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v35[-v12];
  uint64_t v14 = *(void *)(v9 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1C151FD8C();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = &v35[-v17];
  long long v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v10);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = &v35[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = &v35[-v23];
  uint64_t v38 = sub_1C151FD8C();
  uint64_t v25 = *(void *)(v38 - 8);
  __n128 v26 = MEMORY[0x1F4188790](v38);
  uint64_t v28 = &v35[-v27];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v14 - 8) + 56))(&v35[-v27], 1, 1, v14, v26);
  unsigned __int8 v47 = v36;
  uint64_t v29 = sub_1C151631C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v24, 1, 1, v29);
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v30 = *(void *)(a3 + 40);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v18, 1, 1, AssociatedTypeWitness);
  uint64_t v31 = type metadata accessor for FeedContext();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
  uint64_t v46 = 0;
  long long v45 = 0u;
  uint64_t v43 = 0;
  __int16 v44 = 256;
  uint64_t v32 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v28, 0, &v47, (uint64_t)v24, (uint64_t)v21, 0, 0, 0, 0, 0, 0, 0, 1, v30, 0, 0, 1,
          0,
          0,
          (uint64_t)v18,
          (uint64_t)v13,
          (uint64_t *)&v45,
          (uint64_t)&v43,
          *(void *)(a3 + 16),
          0,
          0);
  sub_1BFD987E0((uint64_t)v13, &qword_1EB886BB0, (uint64_t (*)(uint64_t))v42);
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  __int16 v33 = v39;
  sub_1BFD987E0((uint64_t)v21, (unint64_t *)&qword_1EB871180, v39);
  sub_1BFD987E0((uint64_t)v24, (unint64_t *)&qword_1EB871180, v33);
  (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v28, v38);
  return v32;
}

void sub_1C0A8B8B4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C0A8B8D8(uint64_t a1, char a2)
{
  return FeedDatabase.dropAndSave(result:flush:)(a1, a2);
}

uint64_t sub_1C0A8B8FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v10 = *v4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1C005E7F4;
  v11[35] = a4;
  v11[36] = v10;
  v11[33] = a2;
  v11[34] = a3;
  v11[32] = a1;
  v11[37] = *v10;
  v11[38] = *a4;
  return MEMORY[0x1F4188298](sub_1C0A7E75C, 0, 0);
}

uint64_t sub_1C0A8BA20(uint64_t a1, uint64_t a2)
{
  return FeedDatabase.save(cacheKey:feedGroupLayout:)(a1, a2);
}

uint64_t sub_1C0A8BA44(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_1C0A8C618(v5, v7) & 1;
}

uint64_t sub_1C0A8BAA0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A8BB6C()
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A8BC34()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A8BCFC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C05F078C(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1C0A8BEA4(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_1C05F091C(*(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1C0A8C018(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v33[5] = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v6 = a1 + 56;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    v32[0] = ~v7;
    if (-v7 < 64) {
      uint64_t v8 = ~(-1 << -(char)v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v5;
    int64_t v10 = (unint64_t)(63 - v7) >> 6;
    uint64_t v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          unint64_t v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v13 = v12 | (v4 << 6);
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v14 >= v10) {
            goto LABEL_33;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v14);
          int64_t v16 = v4 + 1;
          if (!v15)
          {
            int64_t v16 = v4 + 2;
            if (v4 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v4 + 3;
              if (v4 + 3 >= v10) {
                goto LABEL_33;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v4 + 4;
                if (v4 + 4 >= v10) {
                  goto LABEL_33;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v16);
                if (!v15)
                {
                  int64_t v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_33:
                    swift_bridgeObjectRetain();
                    sub_1BFEFB808();
                    return v2;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      int64_t v16 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        break;
                      }
                      if (v16 >= v10) {
                        goto LABEL_33;
                      }
                      unint64_t v15 = *(void *)(v6 + 8 * v16);
                      ++v17;
                      if (v15) {
                        goto LABEL_23;
                      }
                    }
LABEL_36:
                    __break(1u);
                  }
                  int64_t v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v9 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
          int64_t v4 = v16;
        }
        uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
        uint64_t v19 = sub_1C1520DAC();
        uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v21 = v19 & ~v20;
      }
      while (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      uint64_t v22 = *(void *)(v2 + 48);
      if (*(void *)(v22 + 8 * v21) == v18) {
        break;
      }
      while (1)
      {
        unint64_t v21 = (v21 + 1) & ~v20;
        if (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        if (*(void *)(v22 + 8 * v21) == v18) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32[0];
    v33[3] = v4;
    unsigned char v33[4] = v9;
    unint64_t v23 = (unint64_t)(63 - v20) >> 6;
    size_t v24 = 8 * v23;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      uint64_t v27 = (char *)v32 - v26;
      memcpy((char *)v32 - v26, (const void *)(v2 + 56), v24);
      uint64_t v28 = sub_1C0A8C3BC((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_1BFEFB808();
      return v28;
    }
    else
    {
      uint64_t v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      uint64_t v30 = sub_1C0A8C3BC((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_1BFEFB808();
      MEMORY[0x1C18C9B00](v29, -1, -1);
      return v30;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1C0A8C3BC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v8 = (unint64_t *)result;
  uint64_t v9 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v10 = v9 - 1;
  uint64_t v11 = a3 + 56;
  while (1)
  {
    int64_t v16 = a5[3];
    unint64_t v17 = a5[4];
    if (!v17) {
      break;
    }
    uint64_t v18 = (v17 - 1) & v17;
    unint64_t v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_16:
    uint64_t v26 = *(void *)(*(void *)(*a5 + 48) + 8 * v19);
    a5[3] = v16;
    a5[4] = v18;
    uint64_t result = sub_1C1520DAC();
    uint64_t v27 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v28 = result & ~v27;
    uint64_t v12 = v28 >> 6;
    uint64_t v13 = 1 << v28;
    if (((1 << v28) & *(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      uint64_t v29 = *(void *)(a3 + 48);
      if (*(void *)(v29 + 8 * v28) == v26)
      {
LABEL_3:
        uint64_t v14 = v12;
        unint64_t v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1)) {
            goto LABEL_35;
          }
          if (!v10) {
            return MEMORY[0x1E4FBC870];
          }
        }
      }
      else
      {
        for (unint64_t i = v28 + 1; ; unint64_t i = v31 + 1)
        {
          unint64_t v31 = i & ~v27;
          if (((*(void *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
            break;
          }
          if (*(void *)(v29 + 8 * v31) == v26)
          {
            uint64_t v12 = v31 >> 6;
            uint64_t v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    int64_t v21 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v22 = a5[3];
    if (v20 >= v21) {
      goto LABEL_33;
    }
    uint64_t v23 = a5[1];
    unint64_t v24 = *(void *)(v23 + 8 * v20);
    if (v24) {
      goto LABEL_15;
    }
    int64_t v25 = v16 + 2;
    int64_t v22 = v16 + 1;
    if (v16 + 2 >= v21) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v23 + 8 * v25);
    if (!v24)
    {
      int64_t v22 = v16 + 2;
      if (v16 + 3 >= v21) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v23 + 8 * (v16 + 3));
      if (v24)
      {
        int64_t v20 = v16 + 3;
        goto LABEL_15;
      }
      int64_t v25 = v16 + 4;
      int64_t v22 = v16 + 3;
      if (v16 + 4 >= v21) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v23 + 8 * v25);
      if (!v24)
      {
        int64_t v20 = v16 + 5;
        int64_t v22 = v16 + 4;
        if (v16 + 5 >= v21) {
          goto LABEL_33;
        }
        unint64_t v24 = *(void *)(v23 + 8 * v20);
        if (!v24)
        {
          int64_t v22 = v21 - 1;
          int64_t v32 = v16 + 6;
          while (v21 != v32)
          {
            unint64_t v24 = *(void *)(v23 + 8 * v32++);
            if (v24)
            {
              int64_t v20 = v32 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v22;
          a5[4] = 0;
          swift_retain();
          return sub_1C139A8CC(v8, a2, v10, a3);
        }
        goto LABEL_15;
      }
    }
    int64_t v20 = v25;
LABEL_15:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v20 << 6);
    int64_t v16 = v20;
    goto LABEL_16;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1C0A8C618(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C1520A9C(), result = 0, (v5 & 1) != 0))
  {
    if (a1[2] == a2[2])
    {
      BOOL v7 = a1[3] == a2[3] && a1[4] == a2[4];
      if (v7 || (char v8 = sub_1C1520A9C(), result = 0, (v8 & 1) != 0))
      {
        if (a1[5] == a2[5] && a1[6] == a2[6])
        {
          return 1;
        }
        else
        {
          return sub_1C1520A9C();
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_1C0A8C6E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v7 = v6;
  LODWORD(v42) = a6;
  uint64_t v40 = a3;
  uint64_t v41 = a5;
  uint64_t v54 = a4;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  char v8 = (void *)*v6;
  uint64_t v53 = sub_1C151804C();
  uint64_t v50 = *(void *)(v53 - 8);
  uint64_t v51 = v50;
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v8[12];
  uint64_t v11 = v8[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = v11;
  uint64_t v48 = v10;
  v37[2] = AssociatedTypeWitness;
  v37[1] = swift_getAssociatedConformanceWitness();
  uint64_t v13 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v14 = sub_1C151FD8C();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v37 - v17;
  uint64_t v19 = v8[24];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v13 - 8) + 56))((char *)v37 - v17, 1, 1, v13, v16);
  uint64_t v20 = v8[11];
  uint64_t v46 = v8[13];
  uint64_t v45 = v8[14];
  uint64_t v44 = v8[15];
  uint64_t v43 = v8[16];
  uint64_t v49 = v8[17];
  uint64_t v21 = sub_1BFD98BF0((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  *(void *)((char *)v7 + v19) = v21;
  uint64_t v22 = *(void *)(*v7 + 200);
  sub_1BFD98B04();
  uint64_t v23 = swift_allocObject();
  *(_DWORD *)(v23 + 16) = 0;
  *(void *)((char *)v7 + v22) = v23;
  *((unsigned char *)v7 + *(void *)(*v7 + 208)) = 1;
  uint64_t v24 = *(void *)(*v7 + 216);
  sub_1C0A8E630();
  swift_allocObject();
  *(void *)((char *)v7 + v24) = sub_1C1518D9C();
  uint64_t v26 = v38;
  uint64_t v25 = v39;
  v7[2] = v38;
  _OWORD v7[3] = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))((char *)v7 + *(void *)(*v7 + 160), v40, v20);
  *(void *)((char *)v7 + *(void *)(*v7 + 176)) = v41;
  *((unsigned char *)v7 + *(void *)(*v7 + 184)) = v42;
  type metadata accessor for FeedDatabaseStore();
  sub_1C1518F5C();
  uint64_t v42 = sub_1C1518D2C();
  uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1BFD98850(0, &qword_1EB882708, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C1529AE0;
  id v29 = v26;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151803C();
  uint64_t v55 = v28;
  sub_1BFD98ABC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFD98850(0, (unint64_t *)&qword_1EB879C30, v27, MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  sub_1C151FFBC();
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = v47;
  v30[3] = v20;
  uint64_t v31 = v46;
  v30[4] = v48;
  v30[5] = v31;
  uint64_t v32 = v44;
  v30[6] = v45;
  v30[7] = v32;
  uint64_t v33 = v49;
  v30[8] = v43;
  v30[9] = v33;
  uint64_t v34 = v54;
  v30[10] = v29;
  v30[11] = v34;
  id v35 = v29;
  swift_retain();
  *(void *)((char *)v7 + *(void *)(*v7 + 168)) = sub_1C1518D0C();
  return v7;
}

uint64_t sub_1C0A8CCC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8CCFC()
{
  return sub_1BFCE8860();
}

unint64_t sub_1C0A8CD28()
{
  unint64_t result = qword_1EB85B070[0];
  if (!qword_1EB85B070[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB85B070);
  }
  return result;
}

uint64_t sub_1C0A8CD7C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0A8CDB4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8CE08()
{
  return sub_1C0A8DCC8((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A7C1E4);
}

uint64_t sub_1C0A8CE34()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id *sub_1C0A8CE80()
{
  return sub_1C0A7D8FC(*(void *)(v0 + 80), *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_1C0A8CEC0()
{
  return objectdestroy_16Tm_1(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0A8CED8()
{
  return sub_1BFCE8694((uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_1C0A7E57C);
}

uint64_t sub_1C0A8CF04(uint64_t a1)
{
  return sub_1C0A7F294(a1, *(void *)(v1 + 80), *(void *)(v1 + 88)) & 1;
}

uint64_t sub_1C0A8CF48()
{
  return objectdestroy_16Tm_1(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0A8CF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedLayoutCacheKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A8CFC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedLayoutCacheKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0A8D020()
{
  uint64_t v1 = (int *)(type metadata accessor for FeedLayoutCacheKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v5 = v4 + v1[21];
  uint64_t v6 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  return swift_deallocObject();
}

uint64_t sub_1C0A8D168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedLayoutCacheKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A8D1CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for FeedLayoutCacheKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1C0A7F54C(*(void *)(v0 + 80), v0 + v2, v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1C0A8D2B8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 112);
}

uint64_t sub_1C0A8D2C0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_1C0A8D2C8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 128);
}

uint64_t sub_1C0A8D2D0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 136);
}

uint64_t dispatch thunk of FeedDatabaseType.readRootCursor(context:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FeedDatabaseType.save(snapshot:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FeedDatabaseType.save(result:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FeedDatabaseType.dropAndSave(result:flush:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of FeedDatabaseType.hotSwap(group:context:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 88)
                                                                                     + **(int **)(a6 + 88));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1BFC542F4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of FeedDatabaseType.erase()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t method lookup function for FeedDatabase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedDatabase);
}

uint64_t dispatch thunk of FeedDatabase.__allocating_init(log:feedCursorFactory:feedGroupProcessor:lazyDatabase:referenceService:saveJournalEntries:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t destroy for FeedDatabaseLayoutKey()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedDatabaseLayoutKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedDatabaseLayoutKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedDatabaseLayoutKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedDatabaseLayoutKey()
{
  return &type metadata for FeedDatabaseLayoutKey;
}

unint64_t sub_1C0A8D67C()
{
  unint64_t result = qword_1EB86FAF0;
  if (!qword_1EB86FAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FAF0);
  }
  return result;
}

uint64_t sub_1C0A8D6D0(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = &a2[*(void *)(*(void *)a2 + 272)];
  swift_retain();
  swift_beginAccess();
  if (*v11)
  {
    uint64_t v12 = FeedNextCursor.syncCursor.getter();
    if (v12)
    {
      do
      {
        uint64_t v13 = (unsigned char *)v12;
        swift_release();
        uint64_t v14 = &v13[*(void *)(*(void *)v13 + 272)];
        swift_beginAccess();
        if (!*v14) {
          break;
        }
        uint64_t v12 = FeedNextCursor.syncCursor.getter();
      }
      while (v12);
    }
    else
    {
      uint64_t v13 = a2;
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  while (2)
  {
    swift_retain();
    switch(v13[32])
    {
      case 3:
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      default:
        char v15 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          uint64_t v16 = (void *)swift_retain();
          sub_1C0C33420(v16, a8, (uint64_t *)&v19);
          if (!v8)
          {
            sub_1C1519B8C();
            sub_1C1519B3C();
            swift_release();
            uint64_t v17 = sub_1C12510A4();
            sub_1BFDA5D5C((uint64_t)&v19);
            swift_release();
            uint64_t result = swift_release();
            if (!v17) {
              return result;
            }
            uint64_t v13 = (unsigned char *)v17;
            continue;
          }
        }
        swift_release();
        return swift_release();
    }
  }
}

uint64_t sub_1C0A8D988(uint64_t a1)
{
  return a1;
}

void sub_1C0A8DA10()
{
  if (!qword_1EB863D38)
  {
    sub_1BFC6CA08(255, &qword_1EB86B020);
    sub_1BFD989C8((unint64_t *)&unk_1EB86B028, &qword_1EB86B020);
    unint64_t v0 = sub_1C151841C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863D38);
    }
  }
}

uint64_t sub_1C0A8DAB8()
{
  return sub_1C0A80394() & 1;
}

uint64_t sub_1C0A8DAF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0A8DBCC(uint64_t a1)
{
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB886C68, (unint64_t *)&qword_1EB886C60, (uint64_t)&protocol descriptor for FeedGroupType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0A8DC54()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8DC9C()
{
  return sub_1C0A8DCC8((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A7F63C);
}

uint64_t sub_1C0A8DCC8(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[10], v1[11], v1[12], v1[13], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1C0A8DD10()
{
  return sub_1C0A8E010();
}

uint64_t sub_1C0A8DD28()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8DDD8(uint64_t *a1)
{
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C024B738;
  return sub_1C0A88230(a1, v4, v5, v6, v7, (uint64_t)(v1 + 10));
}

char *sub_1C0A8DECC(uint64_t *a1)
{
  return sub_1C0A8DEE0(a1, 0);
}

char *sub_1C0A8DED8(uint64_t *a1)
{
  return sub_1C0A8DEE0(a1, 5);
}

char *sub_1C0A8DEE0(uint64_t *a1, int a2)
{
  return sub_1C0A8B40C(a1, (uint64_t)(v2 + 6), v2[18], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1C0A8DF0C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8DF54()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1C014AF5C;
  *(_OWORD *)(v4 + 56) = v5;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v3;
  return MEMORY[0x1F4188298](sub_1C0A873F8, 0, 0);
}

uint64_t sub_1C0A8E010()
{
  uint64_t v1 = *(uint64_t **)(v0 + 24);
  uint64_t v2 = *(_OWORD **)(v0 + 32);
  long long v3 = v2[4];
  v7[2] = v2[3];
  _OWORD v7[3] = v3;
  long long v4 = v2[6];
  void v7[4] = v2[5];
  void v7[5] = v4;
  long long v5 = v2[2];
  v7[0] = v2[1];
  v7[1] = v5;
  return sub_1BFC7CE20(v1, (uint64_t)v7);
}

uint64_t sub_1C0A8E060()
{
  return objectdestroy_69Tm_0();
}

uint64_t sub_1C0A8E068(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[6];
  uint64_t v8 = (void *)v2[7];
  uint64_t v9 = (uint64_t *)v2[8];
  uint64_t v11 = v2[9];
  uint64_t v10 = v2[10];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_1C024B738;
  return sub_1C0A84F30(a1, a2, v7, v8, v9, v11, v10, v6);
}

uint64_t sub_1C0A8E164()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

char *sub_1C0A8E1AC(uint64_t *a1)
{
  return sub_1C0A85A5C(a1, v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1C0A8E1E0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

char *sub_1C0A8E220(uint64_t *a1)
{
  return sub_1C0A85F04(a1, *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1C0A8E230()
{
  return objectdestroy_69Tm_0();
}

uint64_t objectdestroy_69Tm_0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8E29C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = *(uint64_t **)(v2 + 56);
  uint64_t v7 = *(void *)(v2 + 64);
  uint64_t v8 = *(void *)(v2 + 72);
  uint64_t v9 = *(void **)(v2 + 80);
  char v10 = *(unsigned char *)(v2 + 88);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1C024B738;
  return sub_1C0A863A4(a1, a2, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C0A8E39C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

char *sub_1C0A8E3E4(uint64_t *a1)
{
  return sub_1C0A86F24(a1, *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t objectdestroy_95Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_44Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8E558(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 6);
  uint64_t v8 = (uint64_t *)v1[18];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C005E7F4;
  return sub_1C0A87774(a1, v7, v8, v4, v5, v6);
}

void sub_1C0A8E630()
{
  if (!qword_1EB86F9C8)
  {
    sub_1C0A8E694();
    unint64_t v0 = sub_1C1518DAC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86F9C8);
    }
  }
}

unint64_t sub_1C0A8E694()
{
  unint64_t result = qword_1EB86FAE8;
  if (!qword_1EB86FAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FAE8);
  }
  return result;
}

uint64_t sub_1C0A8E6E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A8E728@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A7A2B8(*(void **)(v1 + 80), a1);
}

id FormatGroupNodeMaskBasicLayer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t FormatGroupNodeMaskBasicLayer.canRemoveOnAnimationCompletion.getter()
{
  return 1;
}

id FormatGroupNodeMaskBasicLayer.init()()
{
  return sub_1C0A8E8D0(&OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskBasicLayer_canRemoveOnAnimationCompletion, 1);
}

id FormatGroupNodeMaskBasicLayer.init(layer:)(void *a1)
{
  return sub_1C0A8EA20(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskBasicLayer_canRemoveOnAnimationCompletion, 1);
}

id FormatGroupNodeMaskBasicLayer.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatGroupNodeMaskBasicLayer.init(coder:)(void *a1)
{
  return sub_1C0A8EB98(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskBasicLayer_canRemoveOnAnimationCompletion, 1);
}

uint64_t FormatGroupNodeMaskShapeLayer.canRemoveOnAnimationCompletion.getter()
{
  return 0;
}

id FormatGroupNodeMaskShapeLayer.init()()
{
  return sub_1C0A8E8D0(&OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskShapeLayer_canRemoveOnAnimationCompletion, 0);
}

id FormatGroupNodeMaskShapeLayer.init(layer:)(void *a1)
{
  return sub_1C0A8EA20(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskShapeLayer_canRemoveOnAnimationCompletion, 0);
}

id FormatGroupNodeMaskShapeLayer.init(coder:)(void *a1)
{
  return sub_1C0A8EB98(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskShapeLayer_canRemoveOnAnimationCompletion, 0);
}

uint64_t FormatGroupNodeMaskGradientLayer.canRemoveOnAnimationCompletion.getter()
{
  return 0;
}

id FormatGroupNodeMaskGradientLayer.init()()
{
  return sub_1C0A8E8D0(&OBJC_IVAR____TtC8NewsFeed32FormatGroupNodeMaskGradientLayer_canRemoveOnAnimationCompletion, 0);
}

id sub_1C0A8E8D0(void *a1, char a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v2[*a1] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1C0A8E938(unsigned char *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a1[*a3] = a4;
  v9.receiver = a1;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id _s8NewsFeed29FormatGroupNodeMaskBasicLayerC5layerACyp_tcfC_0(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v4 = objc_msgSend(v3, sel_initWithLayer_, sub_1C1520A7C());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

id FormatGroupNodeMaskGradientLayer.init(layer:)(void *a1)
{
  return sub_1C0A8EA20(a1, &OBJC_IVAR____TtC8NewsFeed32FormatGroupNodeMaskGradientLayer_canRemoveOnAnimationCompletion, 0);
}

id sub_1C0A8EA20(void *a1, void *a2, char a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v3[*a2] = a3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = sub_1C1520A7C();
  v11.receiver = v3;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_initWithLayer_, v8);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

id sub_1C0A8EAD0(unsigned char *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1C151FF3C();
  swift_unknownObjectRelease();
  a1[*a4] = a5;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  uint64_t v9 = sub_1C1520A7C();
  v12.receiver = a1;
  v12.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v12, sel_initWithLayer_, v9);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v10;
}

id FormatGroupNodeMaskGradientLayer.init(coder:)(void *a1)
{
  return sub_1C0A8EB98(a1, &OBJC_IVAR____TtC8NewsFeed32FormatGroupNodeMaskGradientLayer_canRemoveOnAnimationCompletion, 0);
}

id sub_1C0A8EB98(void *a1, void *a2, char a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v3[*a2] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_1C0A8EC14(unsigned char *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a1[*a4] = a5;
  v11.receiver = a1;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_initWithCoder_, a3);
}

uint64_t dispatch thunk of FormatGroupNodeMaskLayerType.canRemoveOnAnimationCompletion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for FormatGroupNodeMaskBasicLayer()
{
  return self;
}

uint64_t type metadata accessor for FormatGroupNodeMaskShapeLayer()
{
  return self;
}

uint64_t type metadata accessor for FormatGroupNodeMaskGradientLayer()
{
  return self;
}

uint64_t sub_1C0A8ED08(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_1C151E62C();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t FCMescalSignature.signature(for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return MEMORY[0x1F4188298](sub_1C0A8EDC0, 0, 0);
}

uint64_t sub_1C0A8EDC0()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  sub_1BFF97D54();
  *id v4 = v0;
  v4[1] = sub_1C0A8EEC8;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0x727574616E676973, 0xEF293A726F662865, sub_1C0A8F1B4, v3, v5);
}

uint64_t sub_1C0A8EEC8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0A8F484;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0A8F480;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1C0A8EFE4(uint64_t a1)
{
  sub_1C024B2E4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = self;
  uint64_t v7 = (void *)sub_1C151605C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_1C0A8F3F4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0A8ED08;
  aBlock[3] = &block_descriptor_40;
  objc_super v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_signatureFromData_completion_, v7, v10);
  _Block_release(v10);
}

void sub_1C0A8F1B4(uint64_t a1)
{
}

uint64_t sub_1C0A8F1BC(int a1, int a2, id a3)
{
  if (a3)
  {
    id v3 = a3;
    sub_1C024B2E4();
    return sub_1C151EDCC();
  }
  else
  {
    sub_1C024B2E4();
    swift_bridgeObjectRetain();
    return sub_1C151EDDC();
  }
}

uint64_t sub_1C0A8F23C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return MEMORY[0x1F4188298](sub_1C0A8F25C, 0, 0);
}

uint64_t sub_1C0A8F25C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  sub_1BFF97D54();
  *uint64_t v4 = v0;
  v4[1] = sub_1C02433BC;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0x727574616E676973, 0xEF293A726F662865, sub_1C0A8F47C, v3, v5);
}

uint64_t sub_1C0A8F364()
{
  sub_1C024B2E4();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C0A8F3F4(int a1, int a2, void *a3)
{
  sub_1C024B2E4();
  return sub_1C0A8F1BC(a1, a2, a3);
}

uint64_t FormatCommandState.description.getter()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 16))
  {
    if (*((unsigned char *)v0 + 16) == 1)
    {
      if (v1) {
        return 1702195828;
      }
      else {
        return 0x65736C6166;
      }
    }
    else
    {
      sub_1BFF01BC4();
      return sub_1C151FF2C();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_1C0A8F530()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 16))
  {
    if (*((unsigned char *)v0 + 16) == 1)
    {
      if (v1) {
        return 1702195828;
      }
      else {
        return 0x65736C6166;
      }
    }
    else
    {
      sub_1BFF01BC4();
      return sub_1C151FF2C();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t _s8NewsFeed18FormatCommandStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        sub_1BFF5B7CC(*(void *)a1, v3, 1);
        sub_1BFF5B7CC(v5, v6, 1);
        char v8 = ((v2 & 1) == 0) ^ v5;
        return v8 & 1;
      }
    }
    else if (v7 == 2)
    {
      sub_1BFF5B7CC(*(void *)a1, v3, 2);
      sub_1BFF5B7CC(v5, v6, 2);
      char v8 = v2 == v5;
      return v8 & 1;
    }
LABEL_9:
    sub_1BFF5B7E0(v5, v6, v7);
    sub_1BFF5B7CC(v2, v3, v4);
    sub_1BFF5B7CC(v5, v6, v7);
    char v8 = 0;
    return v8 & 1;
  }
  if (*(unsigned char *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (v2 == v5 && v3 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  sub_1BFF5B7E0(v5, v6, 0);
  sub_1BFF5B7E0(v2, v3, 0);
  sub_1BFF5B7CC(v2, v3, 0);
  sub_1BFF5B7CC(v5, v6, 0);
  return v8 & 1;
}

unint64_t sub_1C0A8F740(uint64_t a1)
{
  unint64_t result = sub_1C0A8F768();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A8F768()
{
  unint64_t result = qword_1EA1A3068;
  if (!qword_1EA1A3068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3068);
  }
  return result;
}

unint64_t sub_1C0A8F7BC(void *a1)
{
  a1[1] = sub_1BFD7DE2C();
  a1[2] = sub_1BFD8F0D8();
  unint64_t result = sub_1C0A8F7F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A8F7F4()
{
  unint64_t result = qword_1EA1A3070;
  if (!qword_1EA1A3070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3070);
  }
  return result;
}

uint64_t destroy for FormatCommandState(uint64_t a1)
{
  return sub_1BFF5B7CC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed18FormatCommandStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1BFF5B7E0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatCommandState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1BFF5B7E0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1BFF5B7CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatCommandState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1BFF5B7CC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatCommandState()
{
  return &type metadata for FormatCommandState;
}

uint64_t sub_1C0A8F958@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v40 = a2;
  sub_1BFDFB688();
  uint64_t v5 = v4;
  uint64_t v41 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A90924(0, &qword_1EB86B800, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v42 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  objc_super v11 = (char *)&v33 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A9087C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  objc_super v12 = v7;
  uint64_t v13 = v41;
  uint64_t v39 = a1;
  LOBYTE(v43) = 0;
  uint64_t v14 = v11;
  uint64_t v16 = sub_1C152069C();
  uint64_t v18 = v17;
  LOBYTE(v43) = 1;
  uint64_t v19 = sub_1C152060C();
  uint64_t v38 = v20;
  uint64_t v21 = v19;
  uint64_t v37 = v18;
  LOBYTE(v43) = 2;
  char v22 = sub_1C152071C();
  uint64_t v36 = 0;
  if (v22)
  {
    char v44 = 2;
    sub_1C08EB810();
    uint64_t v23 = v12;
    uint64_t v24 = v5;
    sub_1C15206EC();
    uint64_t v25 = v14;
    uint64_t v33 = v21;
    uint64_t v34 = v16;
    uint64_t v35 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v24);
  }
  else
  {
    uint64_t v25 = v14;
    uint64_t v33 = v21;
    uint64_t v34 = v16;
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  uint64_t v26 = v37;
  uint64_t v27 = v42;
  sub_1C0A90988(0, (unint64_t *)&qword_1EB86B2E8, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBB320]);
  char v44 = 3;
  sub_1C0A90A3C((unint64_t *)&unk_1EB86B2F0, (void (*)(void))sub_1C01CBB4C);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v9);
  uint64_t v28 = v43;
  id v29 = v40;
  uint64_t v30 = v33;
  uint64_t v31 = v35;
  uint64_t *v40 = v34;
  v29[1] = v26;
  uint64_t v32 = v38;
  v29[2] = v30;
  _OWORD v29[3] = v32;
  void v29[4] = v31;
  v29[5] = v28;
  *((unsigned char *)v29 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A8FF60(void *a1)
{
  sub_1C0A90924(0, &qword_1EA1A3078, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = v1[2];
  uint64_t v19 = v1[3];
  uint64_t v20 = v8;
  uint64_t v9 = v1[4];
  uint64_t v17 = v1[5];
  uint64_t v18 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A9087C();
  sub_1C1520F0C();
  LOBYTE(v22) = 0;
  uint64_t v10 = v21;
  sub_1C15207CC();
  if (!v10)
  {
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    uint64_t v22 = v20;
    uint64_t v23 = v19;
    char v24 = 1;
    uint64_t v13 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
    sub_1C0A90988(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1C0A909D4((unint64_t *)&qword_1EB85C2F0, (unint64_t *)&qword_1EB879C00, v13);
    sub_1C152080C();
    uint64_t v22 = v12;
    char v24 = 2;
    uint64_t v14 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C0A90988(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C0A909D4((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v14);
    sub_1C152080C();
    uint64_t v22 = v11;
    char v24 = 3;
    sub_1C0A90988(0, (unint64_t *)&qword_1EB86B2E8, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C0A90A3C(&qword_1EA197EC0, (void (*)(void))sub_1C01CBC70);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0A9029C(unsigned __int8 *a1, char *a2)
{
  return sub_1C1477EAC(*a1, *a2);
}

uint64_t sub_1C0A902A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A903C0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A904C0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A905D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0A90EB4();
  *a1 = result;
  return result;
}

void sub_1C0A90604(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEE0064496C616369;
  uint64_t v3 = 0x6E6F6E6143636D75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000644967;
      uint64_t v3 = 0x615465756761656CLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x736449676174;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      strcpy((char *)a1, "urlDataSources");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 4:
      *(void *)a1 = 0x72756F5361746164;
      *(void *)(a1 + 8) = 0xEA00000000006563;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0A906E0()
{
  uint64_t result = 0x6E6F6E6143636D75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x615465756761656CLL;
      break;
    case 2:
      uint64_t result = 0x736449676174;
      break;
    case 3:
      uint64_t result = 0x53617461446C7275;
      break;
    case 4:
      uint64_t result = 0x72756F5361746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A907AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0A90EB4();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A907D4(uint64_t a1)
{
  unint64_t v2 = sub_1C0A9087C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A90810(uint64_t a1)
{
  unint64_t v2 = sub_1C0A9087C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0A9084C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0A8F958(a1, a2);
}

uint64_t sub_1C0A90864(void *a1)
{
  return sub_1C0A8FF60(a1);
}

unint64_t sub_1C0A9087C()
{
  unint64_t result = qword_1EB86ABE0;
  if (!qword_1EB86ABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABE0);
  }
  return result;
}

unint64_t sub_1C0A908D0()
{
  unint64_t result = qword_1EB864A38;
  if (!qword_1EB864A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864A38);
  }
  return result;
}

void sub_1C0A90924(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A9087C();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C0A90988(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0A909D4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0A90988(255, a2, MEMORY[0x1E4FBB1A0], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0A90A3C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0A90988(255, (unint64_t *)&qword_1EB86B2E8, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseStandingItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A90B98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseStandingItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys;
}

uint64_t destroy for SportsDataVisualizationResponseStandingItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsDataVisualizationResponseStandingItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationResponseStandingItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationResponseStandingItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseStandingItem()
{
  return &type metadata for SportsDataVisualizationResponseStandingItem;
}

unint64_t sub_1C0A90DB0()
{
  unint64_t result = qword_1EA1A3080;
  if (!qword_1EA1A3080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3080);
  }
  return result;
}

unint64_t sub_1C0A90E08()
{
  unint64_t result = qword_1EB86ABF0;
  if (!qword_1EB86ABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABF0);
  }
  return result;
}

unint64_t sub_1C0A90E60()
{
  unint64_t result = qword_1EB86ABE8;
  if (!qword_1EB86ABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABE8);
  }
  return result;
}

uint64_t sub_1C0A90EB4()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

int64x2_t sub_1C0A90F00@<Q0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(int64x2_t *)(v2 + 16) = vdupq_n_s64(0x404E000000000000uLL);
  *(void *)(v2 + 32) = 0x4050C00000000000;
  *(void *)(v2 + 40) = 0x3FE3333333333333;
  *(unsigned char *)(v2 + 48) = 0;
  uint64_t v3 = v2 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  int64x2_t result = vdupq_n_s64(0x4068600000000000uLL);
  *(int64x2_t *)(v4 + 16) = result;
  *(void *)(v4 + 32) = 0x4067800000000000;
  *(void *)(v4 + 40) = 0x3FE3333333333333;
  *(unsigned char *)(v4 + 48) = 0;
  *a1 = v3;
  a1[1] = v4 | 0x6000000000000000;
  return result;
}

uint64_t sub_1C0A90FA0()
{
  return swift_deallocObject();
}

uint64_t BundleSessionStrategy.rawValue.getter()
{
  uint64_t v1 = 0x6465786966;
  if (*v0 != 1) {
    uint64_t v1 = 1869440356;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6769666E6F63;
  }
}

NewsFeed::BundleSessionStrategy_optional __swiftcall BundleSessionStrategy.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0A91058(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1486980(*a1, *a2);
}

unint64_t sub_1C0A91068()
{
  unint64_t result = qword_1EA1A3088;
  if (!qword_1EA1A3088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3088);
  }
  return result;
}

uint64_t sub_1C0A910BC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A91150()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A911D0()
{
  return sub_1C1520E0C();
}

NewsFeed::BundleSessionStrategy_optional sub_1C0A91260(Swift::String *a1)
{
  return BundleSessionStrategy.init(rawValue:)(*a1);
}

void sub_1C0A9126C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6465786966;
  if (v2 != 1)
  {
    uint64_t v5 = 1869440356;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6769666E6F63;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0A912BC(uint64_t a1)
{
  unint64_t v2 = sub_1C0A914C4();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0A91310(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0A914C4();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C0A9136C(uint64_t a1)
{
  unint64_t v2 = sub_1C0A914C4();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

unsigned char *storeEnumTagSinglePayload for BundleSessionStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A9148CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleSessionStrategy()
{
  return &type metadata for BundleSessionStrategy;
}

unint64_t sub_1C0A914C4()
{
  unint64_t result = qword_1EA1A3090;
  if (!qword_1EA1A3090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3090);
  }
  return result;
}

uint64_t FormatPuzzleStatisticBinding.Image.image(from:context:imageContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v6 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v3)
  {
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    long long v13 = *(_OWORD *)(a2 + 64);
    long long v31 = *(_OWORD *)(a2 + 80);
    long long v32 = v13;
    long long v30 = *(_OWORD *)(a2 + 96);
    uint64_t v14 = *(void *)(a2 + 112);
    uint64_t v29 = *(void *)(a2 + 120);
    char v15 = *(unsigned char *)(a2 + 128);
    sub_1C0A92754(a1, (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v17 = swift_allocObject();
    sub_1BFEEFAE8((uint64_t)v9, v17 + v16, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    char v35 = 1;
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(unsigned char *)(v10 + 48) = 1;
    *(void *)(v10 + 56) = v11;
    *(void *)(v10 + 64) = v12;
    *(_OWORD *)(v10 + 72) = v32;
    *(_OWORD *)(v10 + 88) = v31;
    *(_OWORD *)(v10 + 104) = v30;
    uint64_t v18 = v29;
    *(void *)(v10 + 120) = v14;
    *(void *)(v10 + 128) = v18;
    *(unsigned char *)(v10 + 136) = v15;
    uint64_t v19 = sub_1C0A923A8;
  }
  else
  {
    uint64_t v10 = swift_allocObject();
    uint64_t v20 = *(void *)(a2 + 48);
    uint64_t v21 = *(void *)(a2 + 56);
    long long v22 = *(_OWORD *)(a2 + 64);
    long long v31 = *(_OWORD *)(a2 + 80);
    long long v32 = v22;
    long long v30 = *(_OWORD *)(a2 + 96);
    uint64_t v23 = *(void *)(a2 + 112);
    uint64_t v29 = *(void *)(a2 + 120);
    char v24 = *(unsigned char *)(a2 + 128);
    sub_1C0A92754(a1, (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    unint64_t v25 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v17 = swift_allocObject();
    sub_1BFEEFAE8((uint64_t)v9, v17 + v25, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    char v34 = 1;
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(unsigned char *)(v10 + 48) = 1;
    *(void *)(v10 + 56) = v20;
    *(void *)(v10 + 64) = v21;
    *(_OWORD *)(v10 + 72) = v32;
    *(_OWORD *)(v10 + 88) = v31;
    *(_OWORD *)(v10 + 104) = v30;
    uint64_t v26 = v29;
    *(void *)(v10 + 120) = v23;
    *(void *)(v10 + 128) = v26;
    *(unsigned char *)(v10 + 136) = v24;
    uint64_t v19 = sub_1C0A923D4;
  }
  *(void *)(v10 + 144) = v19;
  *(void *)(v10 + 152) = v17;
  uint64_t result = swift_bridgeObjectRetain();
  *uint64_t v33 = v10 | 0x2000000000000000;
  return result;
}

uint64_t sub_1C0A917D4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A91814@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v37 = sub_1C151635C();
  uint64_t v4 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0067110(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v19 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v20 = type metadata accessor for PuzzleStatistic();
  sub_1C0A92754(v19 + *(int *)(v20 + 20), (uint64_t)v12, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C0A92818((uint64_t)v12, type metadata accessor for PuzzleStatisticCategory);
LABEL_7:
    uint64_t v25 = v37;
    sub_1C151634C();
    sub_1C151633C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
    uint64_t v26 = sub_1C151ABFC();
    swift_allocObject();
    uint64_t result = sub_1C151ABEC();
    uint64_t v28 = MEMORY[0x1E4FAC1D0];
    a2[3] = v26;
    a2[4] = v28;
    *a2 = result;
    return result;
  }
  sub_1C09E5944((uint64_t)v12, (uint64_t)v18);
  sub_1C09E4018((uint64_t)v18, (uint64_t)v15);
  uint64_t v21 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
    sub_1C0A927BC((uint64_t)v15, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
LABEL_6:
    sub_1C0A927BC((uint64_t)v18, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    goto LABEL_7;
  }
  sub_1C0A92754((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  sub_1C0A92818((uint64_t)v15, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  long long v22 = &v9[*(int *)(v7 + 24)];
  uint64_t v24 = *((void *)v22 + 2);
  unint64_t v23 = *((void *)v22 + 3);
  sub_1C00C2AC0(v24, v23);
  sub_1C0A92818((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  if (v23 >> 60 == 15) {
    goto LABEL_6;
  }
  id v29 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  sub_1BFE95820(v24, v23);
  long long v30 = (void *)sub_1C151605C();
  id v31 = objc_msgSend(v29, sel_initWithData_, v30);
  sub_1BFE95878(v24, v23);

  if (!v31)
  {
    sub_1C0A927BC((uint64_t)v18, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    sub_1BFE95878(v24, v23);
    goto LABEL_7;
  }
  id v32 = v31;
  sub_1C151634C();
  sub_1C151633C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v37);
  uint64_t v33 = sub_1C151ABFC();
  swift_allocObject();
  uint64_t v34 = sub_1C151ABEC();
  uint64_t v35 = MEMORY[0x1E4FAC1D0];
  a2[3] = v33;
  a2[4] = v35;

  sub_1BFE95878(v24, v23);
  *a2 = v34;
  return sub_1C0A927BC((uint64_t)v18, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
}

uint64_t sub_1C0A91D28@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_1C151635C();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0067110(0, &qword_1EA1A8710, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0067110(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v22 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v23 = type metadata accessor for PuzzleStatistic();
  sub_1C0A92754(v22 + *(int *)(v23 + 20), (uint64_t)v15, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C0A92818((uint64_t)v15, type metadata accessor for PuzzleStatisticCategory);
LABEL_8:
    uint64_t v29 = v47;
    uint64_t v28 = v48;
    uint64_t v30 = v46;
LABEL_9:
    sub_1C151634C();
    sub_1C151633C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    uint64_t v31 = sub_1C151ABFC();
    swift_allocObject();
    uint64_t result = sub_1C151ABEC();
    uint64_t v33 = MEMORY[0x1E4FAC1D0];
    v28[3] = v31;
    v28[4] = v33;
    *uint64_t v28 = result;
    return result;
  }
  sub_1C09E5944((uint64_t)v15, (uint64_t)v21);
  sub_1C09E4018((uint64_t)v21, (uint64_t)v18);
  uint64_t v24 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v18, 1, v24) == 1)
  {
    sub_1C0A927BC((uint64_t)v18, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_6:
    sub_1C0A927BC((uint64_t)v21, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    uint64_t v25 = &qword_1EA1A8710;
    uint64_t v26 = (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry;
    uint64_t v27 = (uint64_t)v8;
LABEL_7:
    sub_1C0A927BC(v27, v25, v26);
    goto LABEL_8;
  }
  sub_1C116B1AC((uint64_t)v8);
  sub_1C0A92818((uint64_t)v18, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    goto LABEL_6;
  }
  uint64_t v34 = (uint64_t)v12;
  sub_1BFEEFAE8((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  uint64_t v35 = &v12[*(int *)(v9 + 24)];
  unint64_t v36 = *((void *)v35 + 3);
  if (v36 >> 60 == 15)
  {
    sub_1C0A92818((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t v25 = &qword_1EB884BF0;
    uint64_t v26 = (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult;
    uint64_t v27 = (uint64_t)v21;
    goto LABEL_7;
  }
  uint64_t v37 = *((void *)v35 + 2);
  id v38 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  sub_1BFE95820(v37, v36);
  uint64_t v39 = (void *)sub_1C151605C();
  id v40 = objc_msgSend(v38, sel_initWithData_, v39);

  uint64_t v28 = v48;
  uint64_t v30 = v46;
  if (!v40)
  {
    sub_1BFE95878(v37, v36);
    sub_1C0A92818(v34, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    sub_1C0A927BC((uint64_t)v21, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    uint64_t v29 = v47;
    goto LABEL_9;
  }
  id v41 = v40;
  sub_1C151634C();
  sub_1C151633C();
  uint64_t v45 = v34;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v47);
  uint64_t v42 = sub_1C151ABFC();
  swift_allocObject();
  uint64_t v43 = sub_1C151ABEC();
  uint64_t v44 = MEMORY[0x1E4FAC1D0];
  v28[3] = v42;
  v28[4] = v44;

  sub_1BFE95878(v37, v36);
  *uint64_t v28 = v43;
  sub_1C0A92818(v45, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  return sub_1C0A927BC((uint64_t)v21, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
}

uint64_t sub_1C0A923A8(uint64_t a1, uint64_t a2)
{
  return sub_1C0A923EC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0A91D28);
}

uint64_t sub_1C0A923D4(uint64_t a1, uint64_t a2)
{
  return sub_1C0A923EC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0A91814);
}

uint64_t sub_1C0A923EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for FeedPuzzleStatistic() - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a3(a1, a2, v7);
}

BOOL static FormatPuzzleStatisticBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatPuzzleStatisticBinding.Image.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleStatisticBinding.Image.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0A92518()
{
  unint64_t result = qword_1EA1A3098;
  if (!qword_1EA1A3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3098);
  }
  return result;
}

unint64_t sub_1C0A9256C(uint64_t a1)
{
  unint64_t result = sub_1C0A92594();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A92594()
{
  unint64_t result = qword_1EA1A30A0;
  if (!qword_1EA1A30A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30A0);
  }
  return result;
}

unint64_t sub_1C0A925E8(void *a1)
{
  a1[1] = sub_1C088F8B8();
  a1[2] = sub_1C08F8C60();
  unint64_t result = sub_1C0A92518();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0A92620@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPuzzleStatisticBinding.Image.init(from:)(a1, a2);
}

uint64_t sub_1C0A92638(void *a1)
{
  return FormatPuzzleStatisticBinding.Image.encode(to:)(a1);
}

unsigned char *_s5ImageOwst_6(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A9271CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Image()
{
  return &type metadata for FormatPuzzleStatisticBinding.Image;
}

uint64_t sub_1C0A92754(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A927BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0067110(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0A92818(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTestScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A92944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestScope()
{
  return &type metadata for DebugFormatTestScope;
}

unint64_t sub_1C0A92980()
{
  unint64_t result = qword_1EA1A30A8;
  if (!qword_1EA1A30A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30A8);
  }
  return result;
}

uint64_t sub_1C0A929D4@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X8>)
{
  sub_1BFFE6334();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (void *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0A931A4();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (_OWORD *)((char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (void *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v15 = *v14;
    uint64_t v16 = *(void *)(*v14 + 16);
    if (v16)
    {
      uint64_t v36 = v7;
      uint64_t v37 = v13;
      uint64_t v38 = a3;
      uint64_t v17 = v15 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v34[1] = v15;
      uint64_t v35 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFFE6274(v17, (uint64_t)v10);
        uint64_t v19 = *v10;
        uint64_t v20 = v10[1];
        swift_retain();
        sub_1C151709C();
        swift_release();
        if (v19 == v49 && v20 == v50) {
          break;
        }
        char v22 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_15;
        }
        sub_1C0A932A0((uint64_t)v10, (uint64_t (*)(void))sub_1BFFE6334);
        v17 += v18;
        if (!--v16)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = 1;
          uint64_t v13 = v37;
          a3 = v38;
          uint64_t v8 = v35;
          uint64_t v7 = v36;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v7 = v36;
      swift_bridgeObjectRelease();
      uint64_t v13 = v37;
      sub_1C0A93318((uint64_t)v10, (uint64_t)v37, (uint64_t (*)(void))sub_1BFFE6334);
      uint64_t v23 = 0;
      a3 = v38;
      uint64_t v8 = v35;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = 1;
    }
LABEL_16:
    (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, v23, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
    {
      sub_1C0A932A0((uint64_t)v13, (uint64_t (*)(void))sub_1C0A931A4);
      goto LABEL_18;
    }
    long long v29 = v13[7];
    long long v45 = v13[6];
    long long v46 = v29;
    long long v47 = v13[8];
    long long v30 = v13[3];
    long long v41 = v13[2];
    long long v42 = v30;
    long long v31 = v13[5];
    long long v43 = v13[4];
    long long v44 = v31;
    long long v32 = v13[1];
    long long v39 = *v13;
    long long v40 = v32;
    sub_1C0187D08((uint64_t)&v39);
    sub_1C0A932A0((uint64_t)v13, (uint64_t (*)(void))sub_1BFFE6334);
    v48[6] = v45;
    v48[7] = v46;
    v48[8] = v47;
    void v48[2] = v41;
    v48[3] = v42;
    v48[4] = v43;
    v48[5] = v44;
    v48[0] = v39;
    v48[1] = v40;
    sub_1C0A93300((uint64_t)v48);
LABEL_20:
    sub_1C09C54B4((uint64_t)v48, (uint64_t)&v49);
    nullsub_1();
    return sub_1C0A93318((uint64_t)&v49, a3, (uint64_t (*)(void))sub_1C0A9322C);
  }
  swift_beginAccess();
  uint64_t v24 = *v14;
  uint64_t v25 = v14[1];
  uint64_t v26 = v14[2];
  type metadata accessor for GroupLayoutContext();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C151754C();
  uint64_t v49 = v24;
  uint64_t v50 = v25;
  uint64_t v51 = v26;
  uint64_t v28 = FormatGroupCollection.subscript.getter(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28)
  {
    *(void *)&v48[0] = v28;
    sub_1C0A93284((uint64_t)v48);
    goto LABEL_20;
  }
LABEL_18:
  sub_1C0A931FC((uint64_t)&v49);
  return sub_1C0A93318((uint64_t)&v49, a3, (uint64_t (*)(void))sub_1C0A9322C);
}

uint64_t sub_1C0A92E04(char *a1, char *a2)
{
  return sub_1C1488AA4(*a1, *a2);
}

uint64_t sub_1C0A92E10()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A92E90()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A92EFC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A92F78@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0A92FD8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x70756F7267;
  if (*v1) {
    uint64_t v2 = 0x6567616B636170;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0A93014(uint64_t a1)
{
  unint64_t v2 = sub_1C0A93150();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0A93068(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0A93150();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C0A930C4(uint64_t a1)
{
  unint64_t v2 = sub_1C0A93150();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C0A93118()
{
  if (*v0) {
    return 0x6567616B636150;
  }
  else {
    return 0x70756F7247;
  }
}

unint64_t sub_1C0A93150()
{
  unint64_t result = qword_1EA1A30B0;
  if (!qword_1EA1A30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30B0);
  }
  return result;
}

void sub_1C0A931A4()
{
  if (!qword_1EB874208)
  {
    sub_1BFFE6334();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB874208);
    }
  }
}

double sub_1C0A931FC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 48) = 0x3FFFFFFFCLL;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  return result;
}

void sub_1C0A9322C()
{
  if (!qword_1EA1A1D88)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A1D88);
    }
  }
}

uint64_t sub_1C0A93284(uint64_t result)
{
  unint64_t v1 = *(unsigned __int8 *)(result + 128) | 0x8000000000000000;
  *(void *)(result + 48) &= 3uLL;
  *(void *)(result + 128) = v1;
  return result;
}

uint64_t sub_1C0A932A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0A93300(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 *)(result + 128);
  *(void *)(result + 48) &= 3uLL;
  *(void *)(result + 128) = v1;
  return result;
}

uint64_t sub_1C0A93318(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A93380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if ((a17 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEB9640(a9, a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for DebugFormatTestScope.Resolved(uint64_t a1)
{
  return sub_1C09C5588(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128));
}

uint64_t *initializeWithCopy for DebugFormatTestScope.Resolved(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  uint64_t v21 = a2[17];
  sub_1C0A93380(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  return a1;
}

uint64_t assignWithCopy for DebugFormatTestScope.Resolved(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v26 = a2[9];
  uint64_t v27 = a2[10];
  uint64_t v28 = a2[11];
  uint64_t v29 = a2[12];
  uint64_t v30 = a2[13];
  uint64_t v31 = a2[14];
  uint64_t v32 = a2[15];
  uint64_t v33 = a2[16];
  uint64_t v34 = a2[17];
  sub_1C0A93380(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 128);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v27;
  *(void *)(a1 + 88) = v28;
  *(void *)(a1 + 96) = v29;
  *(void *)(a1 + 104) = v30;
  *(void *)(a1 + 112) = v31;
  *(void *)(a1 + 120) = v32;
  *(void *)(a1 + 128) = v33;
  *(void *)(a1 + 136) = v34;
  sub_1C09C5588(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((unint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24);
  return a1;
}

uint64_t assignWithTake for DebugFormatTestScope.Resolved(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v11 = *(_OWORD *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 128);
  long long v16 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v18;
  long long v19 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v19;
  *(_OWORD *)(a1 + 128) = a2[8];
  sub_1C09C5588(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((unint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatTestScope.Resolved(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 48) >> 2;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for DebugFormatTestScope.Resolved(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 136) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = 4 * -a2;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(void *)(a1 + 136) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C0A93870(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(result + 128) | (unint64_t)(a2 << 63);
  *(void *)(result + 48) &= 3uLL;
  *(void *)(result + 128) = v2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestScope.Resolved()
{
  return &type metadata for DebugFormatTestScope.Resolved;
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return sub_1C1515D1C();
}

NewsFeed::PuzzleStyleAttributes::Value_optional __swiftcall PuzzleStyleAttributes.Value.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t PuzzleStyleAttributes.Value.rawValue.getter()
{
  uint64_t result = 0x6E696C7265646E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7263737265707573;
      break;
    case 2:
      uint64_t result = 0x7069726373627573;
      break;
    case 3:
      uint64_t result = 0x72656C6C616D73;
      break;
    case 4:
      uint64_t result = 0x726567676962;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A939F0(unsigned __int8 *a1, char *a2)
{
  return sub_1C1484C88(*a1, *a2);
}

uint64_t sub_1C0A939FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A93AFC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A93BE4()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleStyleAttributes::Value_optional sub_1C0A93CE0(Swift::String *a1)
{
  return PuzzleStyleAttributes.Value.init(rawValue:)(*a1);
}

void sub_1C0A93CEC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6E696C7265646E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000747069;
      uint64_t v3 = 0x7263737265707573;
      goto LABEL_3;
    case 2:
      *a1 = 0x7069726373627573;
      a1[1] = 0xE900000000000074;
      break;
    case 3:
      *a1 = 0x72656C6C616D73;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x726567676962;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C0A93DB0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A93E10()
{
  return sub_1C151EAEC();
}

uint64_t static PuzzleStyleAttributes.name.getter()
{
  swift_beginAccess();
  uint64_t v0 = *(void *)aPuzzlestyle_0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static PuzzleStyleAttributes.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aPuzzlestyle_0 = a1;
  *(void *)&aPuzzlestyle_0[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PuzzleStyleAttributes.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C0A93F68()
{
  return sub_1C1515D9C();
}

uint64_t sub_1C0A93FC8()
{
  return sub_1C1515DAC();
}

uint64_t sub_1C0A94028()
{
  return sub_1C1515DBC();
}

uint64_t sub_1C0A9408C()
{
  swift_beginAccess();
  uint64_t v0 = *(void *)aPuzzlestyle_0;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1C0A940F4()
{
  sub_1C0A5A500();
  JUMPOUT(0x1C18BD2C0);
}

void sub_1C0A94140()
{
  sub_1C0A5A500();
  JUMPOUT(0x1C18BD2D0);
}

unint64_t sub_1C0A94194()
{
  unint64_t result = qword_1EA1A30C8;
  if (!qword_1EA1A30C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30C8);
  }
  return result;
}

unint64_t sub_1C0A941F0()
{
  unint64_t result = qword_1EA1A30D0;
  if (!qword_1EA1A30D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30D0);
  }
  return result;
}

unint64_t sub_1C0A94248()
{
  unint64_t result = qword_1EA1A30D8;
  if (!qword_1EA1A30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30D8);
  }
  return result;
}

unint64_t sub_1C0A942A0()
{
  unint64_t result = qword_1EA1A30E0;
  if (!qword_1EA1A30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStyleAttributes()
{
  return &type metadata for PuzzleStyleAttributes;
}

unsigned char *storeEnumTagSinglePayload for PuzzleStyleAttributes.Value(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A943D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStyleAttributes.Value()
{
  return &type metadata for PuzzleStyleAttributes.Value;
}

ValueMetadata *type metadata accessor for AttributeScopes.PuzzleAttributes()
{
  return &type metadata for AttributeScopes.PuzzleAttributes;
}

unint64_t sub_1C0A94418()
{
  unint64_t result = qword_1EA1A30E8;
  if (!qword_1EA1A30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30E8);
  }
  return result;
}

unint64_t sub_1C0A9446C()
{
  unint64_t result = qword_1EA1A30F0;
  if (!qword_1EA1A30F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30F0);
  }
  return result;
}

unint64_t sub_1C0A944C0()
{
  unint64_t result = qword_1EA1A30F8;
  if (!qword_1EA1A30F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A30F8);
  }
  return result;
}

unint64_t sub_1C0A94514()
{
  unint64_t result = qword_1EA1A3100;
  if (!qword_1EA1A3100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3100);
  }
  return result;
}

double static FormatCodingPuzzleOverridesStrategy.defaultValue.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

BOOL static FormatCodingPuzzleOverridesStrategy.shouldEncode(wrappedValue:)(_OWORD *a1)
{
  long long v1 = a1[7];
  _OWORD v7[6] = a1[6];
  v7[7] = v1;
  v7[8] = a1[8];
  long long v2 = a1[3];
  v7[2] = a1[2];
  _OWORD v7[3] = v2;
  long long v3 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  memset(v6, 0, sizeof(v6));
  return (_s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(v7, v6) & 1) == 0;
}

double sub_1C0A945FC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

BOOL sub_1C0A94618(_OWORD *a1)
{
  long long v1 = a1[7];
  _OWORD v7[6] = a1[6];
  v7[7] = v1;
  v7[8] = a1[8];
  long long v2 = a1[3];
  v7[2] = a1[2];
  _OWORD v7[3] = v2;
  long long v3 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  memset(v6, 0, sizeof(v6));
  return (_s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(v7, v6) & 1) == 0;
}

unint64_t sub_1C0A94690(uint64_t a1)
{
  unint64_t result = sub_1C0A946B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A946B8()
{
  unint64_t result = qword_1EA1A3108;
  if (!qword_1EA1A3108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3108);
  }
  return result;
}

unint64_t sub_1C0A94710()
{
  unint64_t result = qword_1EB865808;
  if (!qword_1EB865808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865808);
  }
  return result;
}

unint64_t sub_1C0A94768()
{
  unint64_t result = qword_1EB865800;
  if (!qword_1EB865800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865800);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingPuzzleOverridesStrategy()
{
  return &type metadata for FormatCodingPuzzleOverridesStrategy;
}

uint64_t sub_1C0A947D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  sub_1C0AB0F8C(a1, a9);
  uint64_t v38 = (int *)type metadata accessor for FormatRemoteVideo();
  sub_1C0AB0F8C(a2, a9 + v38[5]);
  sub_1C0AB0F8C(a3, a9 + v38[6]);
  sub_1BFF8834C(a4, a9 + v38[7], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a5, a9 + v38[8], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a6, a9 + v38[9], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a7, a9 + v38[10], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a8, a9 + v38[11], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a10, a9 + v38[12], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a11, a9 + v38[13], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a12, a9 + v38[14], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a13, a9 + v38[15], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a14, a9 + v38[16], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a15, a9 + v38[17], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a16, a9 + v38[18], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a17, a9 + v38[19], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a18, a9 + v38[20], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a19, a9 + v38[21], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a20, a9 + v38[22], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a21, a9 + v38[23], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a22, a9 + v38[24], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a23, a9 + v38[25], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a24, a9 + v38[26], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a25, a9 + v38[27], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a26, a9 + v38[28], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a27, a9 + v38[29], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a28, a9 + v38[30], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a29, a9 + v38[31], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF8834C(a30, a9 + v38[32], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  return sub_1BFF8834C(a31, a9 + v38[33], (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x1VideoURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFFAF188(v1, a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x2VideoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatRemoteVideo();
  return sub_1BFFAF188(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x3VideoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatRemoteVideo();
  return sub_1BFFAF188(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x1VideoURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 28);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 32);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 36);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1VideoURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 40);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 44);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 48);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1VideoURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 52);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 56);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 60);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1VideoURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 64);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 68);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 72);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 76);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 80);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 84);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 88);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 92);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 96);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 100);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 104);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 108);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 112);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 116);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 120);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 124);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 128);
  return sub_1C0A9F138(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 132);
  return sub_1C0A9F138(v3, a1);
}

uint64_t sub_1C0A953A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v539 = a2;
  uint64_t v540 = a1;
  uint64_t v536 = a3;
  uint64_t v543 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1F4188790](v543);
  uint64_t v460 = (uint64_t)&v455 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v472 = (uint64_t)&v455 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v471 = (uint64_t)&v455 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v490 = (uint64_t)&v455 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v488 = (uint64_t)&v455 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v508 = (uint64_t)&v455 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v470 = (uint64_t)&v455 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v489 = (uint64_t)&v455 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v487 = (uint64_t)&v455 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v507 = (uint64_t)&v455 - v23;
  MEMORY[0x1F4188790](v24);
  v511 = (char *)&v455 - v25;
  MEMORY[0x1F4188790](v26);
  v527 = (char *)&v455 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v486 = (uint64_t)&v455 - v29;
  MEMORY[0x1F4188790](v30);
  v515 = (char *)&v455 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v506 = (uint64_t)&v455 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v521 = (uint64_t)&v455 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v520 = (uint64_t)&v455 - v37;
  MEMORY[0x1F4188790](v38);
  v532 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v455 - v39);
  sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v462 = (uint64_t)&v455 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v456 = (uint64_t)&v455 - v43;
  MEMORY[0x1F4188790](v44);
  v464 = (uint64_t *)((char *)&v455 - v45);
  MEMORY[0x1F4188790](v46);
  uint64_t v480 = (uint64_t)&v455 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v459 = (uint64_t)&v455 - v49;
  MEMORY[0x1F4188790](v50);
  v478 = (uint64_t *)((char *)&v455 - v51);
  MEMORY[0x1F4188790](v52);
  uint64_t v502 = (uint64_t)&v455 - v53;
  MEMORY[0x1F4188790](v54);
  uint64_t v469 = (uint64_t)&v455 - v55;
  MEMORY[0x1F4188790](v56);
  v495 = (uint64_t *)((char *)&v455 - v57);
  MEMORY[0x1F4188790](v58);
  uint64_t v518 = (uint64_t)&v455 - v59;
  MEMORY[0x1F4188790](v60);
  uint64_t v473 = (uint64_t)&v455 - v61;
  MEMORY[0x1F4188790](v62);
  uint64_t v458 = (uint64_t)&v455 - v63;
  MEMORY[0x1F4188790](v64);
  v477 = (uint64_t *)((char *)&v455 - v65);
  MEMORY[0x1F4188790](v66);
  uint64_t v501 = (uint64_t)&v455 - v67;
  MEMORY[0x1F4188790](v68);
  uint64_t v468 = (uint64_t)&v455 - v69;
  MEMORY[0x1F4188790](v70);
  v494 = (uint64_t *)((char *)&v455 - v71);
  MEMORY[0x1F4188790](v72);
  uint64_t v517 = (uint64_t)&v455 - v73;
  MEMORY[0x1F4188790](v74);
  uint64_t v485 = (uint64_t)&v455 - v75;
  MEMORY[0x1F4188790](v76);
  uint64_t v510 = (uint64_t)&v455 - v77;
  MEMORY[0x1F4188790](v78);
  uint64_t v526 = (uint64_t)&v455 - v79;
  MEMORY[0x1F4188790](v80);
  uint64_t v492 = (uint64_t)&v455 - v81;
  MEMORY[0x1F4188790](v82);
  uint64_t v467 = (uint64_t)&v455 - v83;
  MEMORY[0x1F4188790](v84);
  v493 = (uint64_t *)((char *)&v455 - v85);
  MEMORY[0x1F4188790](v86);
  uint64_t v516 = (uint64_t)&v455 - v87;
  MEMORY[0x1F4188790](v88);
  uint64_t v484 = (uint64_t)&v455 - v89;
  MEMORY[0x1F4188790](v90);
  v509 = (uint64_t *)((char *)&v455 - v91);
  MEMORY[0x1F4188790](v92);
  v525 = (uint64_t *)((char *)&v455 - v93);
  MEMORY[0x1F4188790](v94);
  uint64_t v505 = (uint64_t)&v455 - v95;
  MEMORY[0x1F4188790](v96);
  uint64_t v524 = (uint64_t)&v455 - v97;
  MEMORY[0x1F4188790](v98);
  v533 = (uint64_t *)((char *)&v455 - v99);
  uint64_t v100 = sub_1C1517ADC();
  v538 = *(void (***)(char *, uint64_t, uint64_t))(v100 - 8);
  MEMORY[0x1F4188790](v100);
  v528 = (char *)&v455 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v102);
  v535 = (char *)&v455 - v103;
  MEMORY[0x1F4188790](v104);
  uint64_t v106 = (char *)&v455 - v105;
  sub_1BFE85638(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v107 - 8);
  uint64_t v461 = (uint64_t)&v455 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v109);
  uint64_t v463 = (uint64_t)&v455 - v110;
  MEMORY[0x1F4188790](v111);
  v457 = (char *)&v455 - v112;
  MEMORY[0x1F4188790](v113);
  uint64_t v479 = (uint64_t)&v455 - v114;
  MEMORY[0x1F4188790](v115);
  uint64_t v476 = (uint64_t)&v455 - v116;
  MEMORY[0x1F4188790](v117);
  v466 = (char *)&v455 - v118;
  MEMORY[0x1F4188790](v119);
  uint64_t v500 = (uint64_t)&v455 - v120;
  MEMORY[0x1F4188790](v121);
  uint64_t v498 = (uint64_t)&v455 - v122;
  MEMORY[0x1F4188790](v123);
  uint64_t v483 = (uint64_t)&v455 - v124;
  MEMORY[0x1F4188790](v125);
  uint64_t v514 = (uint64_t)&v455 - v126;
  MEMORY[0x1F4188790](v127);
  uint64_t v474 = (uint64_t)&v455 - v128;
  MEMORY[0x1F4188790](v129);
  uint64_t v475 = (uint64_t)&v455 - v130;
  MEMORY[0x1F4188790](v131);
  v465 = (char *)&v455 - v132;
  MEMORY[0x1F4188790](v133);
  uint64_t v499 = (uint64_t)&v455 - v134;
  MEMORY[0x1F4188790](v135);
  uint64_t v497 = (uint64_t)&v455 - v136;
  MEMORY[0x1F4188790](v137);
  v482 = (char *)&v455 - v138;
  MEMORY[0x1F4188790](v139);
  uint64_t v513 = (uint64_t)&v455 - v140;
  MEMORY[0x1F4188790](v141);
  uint64_t v522 = (uint64_t)&v455 - v142;
  MEMORY[0x1F4188790](v143);
  uint64_t v504 = (uint64_t)&v455 - v144;
  MEMORY[0x1F4188790](v145);
  v531 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v455 - v146);
  MEMORY[0x1F4188790](v147);
  uint64_t v491 = (uint64_t)&v455 - v148;
  MEMORY[0x1F4188790](v149);
  uint64_t v496 = (uint64_t)&v455 - v150;
  MEMORY[0x1F4188790](v151);
  uint64_t v481 = (uint64_t)&v455 - v152;
  MEMORY[0x1F4188790](v153);
  uint64_t v512 = (uint64_t)&v455 - v154;
  MEMORY[0x1F4188790](v155);
  v523 = (uint64_t *)((char *)&v455 - v156);
  MEMORY[0x1F4188790](v157);
  uint64_t v503 = (uint64_t)&v455 - v158;
  MEMORY[0x1F4188790](v159);
  v530 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v455 - v160);
  MEMORY[0x1F4188790](v161);
  v529 = (uint64_t *)((char *)&v455 - v162);
  MEMORY[0x1F4188790](v163);
  uint64_t v519 = (uint64_t)&v455 - v164;
  MEMORY[0x1F4188790](v165);
  uint64_t v167 = (char *)&v455 - v166;
  MEMORY[0x1F4188790](v168);
  uint64_t v534 = (uint64_t)&v455 - v169;
  uint64_t v170 = sub_1C1515FDC();
  uint64_t v541 = *(void *)(v170 - 8);
  uint64_t v542 = v170;
  MEMORY[0x1F4188790](v170);
  uint64_t v172 = (char *)&v455 - ((v171 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v173);
  MEMORY[0x1F4188790](v174);
  MEMORY[0x1F4188790](v175);
  MEMORY[0x1F4188790](v176);
  uint64_t v178 = (char *)&v455 - v177;
  MEMORY[0x1F4188790](v179);
  uint64_t v181 = (char *)&v455 - v180;
  MEMORY[0x1F4188790](v182);
  MEMORY[0x1F4188790]((char *)&v455 - v183);
  long long v185 = (char *)&v455 - v184;
  MEMORY[0x1F4188790](v186);
  uint64_t v188 = (char *)&v455 - v187;
  MEMORY[0x1F4188790](v189);
  MEMORY[0x1F4188790](v190);
  uint64_t v192 = (char *)&v455 - v191;
  MEMORY[0x1F4188790](v193);
  uint64_t v195 = (char *)&v455 - v194;
  MEMORY[0x1F4188790](v196);
  v537 = (char *)&v455 - v202;
  if (a4 >= 3.0)
  {
    uint64_t v209 = v198;
    uint64_t v210 = v538;
    v538[2](v106, v539, v100);
    int v211 = ((uint64_t (*)(char *, uint64_t))v210[11])(v106, v100);
    if (v211 == *MEMORY[0x1E4FAB900])
    {
      uint64_t v212 = (void (*)(void, void, void, void))v533;
      sub_1C0A9F138(v544 + *(int *)(v543 + 36), (uint64_t)v533);
      uint64_t v213 = type metadata accessor for FormatURL();
      uint64_t v214 = *(void *)(v213 - 8);
      v535 = *(char **)(v214 + 48);
      v531 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v214 + 48);
      int v215 = ((uint64_t (*)(void (*)(void, void, void, void), uint64_t, uint64_t))v535)(v212, 1, v213);
      uint64_t v216 = (void *)v541;
      if (v215 == 1)
      {
        sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v217 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v216[7];
        uint64_t v218 = v167;
        uint64_t v219 = 1;
      }
      else
      {
        v253 = v545;
        sub_1C003B0FC(v540, (uint64_t)v167);
        if (v253) {
          return sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        v545 = 0;
        sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v217 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v216[7];
        uint64_t v218 = v167;
        uint64_t v219 = 0;
      }
      uint64_t v254 = v542;
      v217(v218, v219, 1, v542);
      uint64_t v255 = v532;
      sub_1BFFAF188(v544, (uint64_t)v532, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      v530 = (uint64_t (*)(char *, uint64_t, uint64_t))v216[6];
      int v256 = v530(v167, 1, v254);
      v533 = v217;
      if (v256 == 1)
      {
        uint64_t v257 = v543;
        uint64_t v258 = v545;
        sub_1C003B0FC(v540, (uint64_t)v195);
        v545 = v258;
        if (v258)
        {
          sub_1BFFAEED8((uint64_t)v255, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v260 = (unsigned int (*)(void, void, void))v167;
          return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
        }
        sub_1BFFAEED8((uint64_t)v255, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFF511D4((uint64_t)v167, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        uint64_t v254 = v542;
        uint64_t v280 = *(void (***)(char *, uint64_t, uint64_t))(v541 + 32);
        uint64_t v281 = (v541 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      }
      else
      {
        sub_1BFFAEED8((uint64_t)v255, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        uint64_t v280 = (void (**)(char *, uint64_t, uint64_t))v216[4];
        uint64_t v281 = (unint64_t)(v216 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        ((void (*)(char *, char *, uint64_t))v280)(v195, v167, v254);
        uint64_t v257 = v543;
      }
      uint64_t v308 = v254;
      v538 = v280;
      uint64_t v539 = v281;
      ((void (*)(char *, char *, uint64_t))v280)(v537, v195, v254);
      uint64_t v309 = v544;
      uint64_t v270 = v524;
      sub_1C0A9F138(v544 + *(int *)(v257 + 96), v524);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v535)(v270, 1, v213) == 1)
      {
        sub_1BFF511D4(v270, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v310 = 1;
        uint64_t v311 = v308;
        uint64_t v312 = (uint64_t)v529;
        goto LABEL_76;
      }
      uint64_t v312 = (uint64_t)v529;
      uint64_t v313 = v545;
      sub_1C003B0FC(v540, (uint64_t)v529);
      v545 = v313;
      if (!v313)
      {
        sub_1BFFAEED8(v270, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v310 = 0;
        uint64_t v311 = v542;
LABEL_76:
        uint64_t v341 = v541 + 56;
        v342 = (void (*)(uint64_t, void, uint64_t, uint64_t))v533;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v533)(v312, v310, 1, v311);
        uint64_t v343 = v520;
        sub_1BFFAF188(v309, v520, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        if (v530((char *)v312, 1, v311) == 1)
        {
          uint64_t v544 = v341;
          uint64_t v344 = v505;
          sub_1C0A9F138(v343 + *(int *)(v257 + 84), v505);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v535)(v344, 1, v213) == 1)
          {
            sub_1BFFAEED8(v343, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            sub_1BFF511D4(v344, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
            uint64_t v345 = 1;
            uint64_t v346 = v519;
          }
          else
          {
            uint64_t v346 = v519;
            v356 = v545;
            sub_1C003B0FC(v540, v519);
            if (v356)
            {
              sub_1BFFAEED8(v343, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
              (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
              sub_1BFFAEED8(v344, (uint64_t (*)(void))type metadata accessor for FormatURL);
              unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
              uint64_t v260 = (unsigned int (*)(void, void, void))v529;
              return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
            }
            v545 = 0;
            sub_1BFFAEED8(v343, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            sub_1BFFAEED8(v344, (uint64_t (*)(void))type metadata accessor for FormatURL);
            uint64_t v345 = 0;
            uint64_t v311 = v542;
            uint64_t v312 = (uint64_t)v529;
          }
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v533)(v346, v345, 1, v311);
          sub_1BFF511D4(v312, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          uint64_t v339 = v534;
          uint64_t v335 = v538;
        }
        else
        {
          sub_1BFFAEED8(v343, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          uint64_t v346 = v519;
          uint64_t v347 = v312;
          uint64_t v335 = v538;
          ((void (*)(uint64_t, uint64_t, uint64_t))v538)(v519, v347, v311);
          v342(v346, 0, 1, v311);
          uint64_t v339 = v534;
        }
        v410 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        uint64_t v411 = v346;
LABEL_232:
        sub_1BFF8834C(v411, v339, (unint64_t *)&qword_1EB8948A0, v410);
        goto LABEL_233;
      }
      (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
LABEL_62:
      uint64_t v282 = v270;
      return sub_1BFFAEED8(v282, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v234 = v541;
    if (v211 == *MEMORY[0x1E4FAB908])
    {
      uint64_t v235 = v544;
      uint64_t v212 = (void (*)(void, void, void, void))v525;
      sub_1C0A9F138(v544 + *(int *)(v543 + 60), (uint64_t)v525);
      uint64_t v236 = type metadata accessor for FormatURL();
      uint64_t v237 = *(void *)(v236 - 8);
      v535 = *(char **)(v237 + 48);
      v533 = (void *)(v237 + 48);
      if (((unsigned int (*)(void (*)(void, void, void, void), uint64_t, uint64_t))v535)(v212, 1, v236) == 1)
      {
        sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v238 = v530;
        uint64_t v239 = v542;
        v532 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 56);
        ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))v532)(v530, 1, 1, v542);
        uint64_t v240 = v545;
      }
      else
      {
        uint64_t v238 = v530;
        uint64_t v283 = v545;
        sub_1C003B0FC(v540, (uint64_t)v530);
        uint64_t v240 = v283;
        if (v283) {
          return sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v239 = v542;
        v532 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 56);
        ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))v532)(v238, 0, 1, v542);
      }
      uint64_t v284 = v235;
      uint64_t v285 = v521;
      sub_1BFFAF188(v284, v521, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      long long v286 = *(unsigned int (**)(void, void, void))(v234 + 48);
      if (v286(v238, 1, v239) == 1)
      {
        uint64_t v287 = v543;
        sub_1C003B0FC(v540, (uint64_t)v192);
        if (v240)
        {
          sub_1BFFAEED8(v285, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v260 = (unsigned int (*)(void, void, void))v530;
          return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
        }
        v545 = v286;
        v305 = 0;
        sub_1BFFAEED8(v285, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFF511D4((uint64_t)v530, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        uint64_t v239 = v542;
        uint64_t v306 = *(void (***)(char *, uint64_t, uint64_t))(v541 + 32);
        uint64_t v307 = (v541 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      }
      else
      {
        v545 = v286;
        v305 = v240;
        sub_1BFFAEED8(v285, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        uint64_t v306 = *(void (***)(char *, uint64_t, uint64_t))(v234 + 32);
        uint64_t v307 = (v234 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        ((void (*)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v306)(v192, v238, v239);
        uint64_t v287 = v543;
      }
      uint64_t v357 = v192;
      uint64_t v358 = v239;
      v538 = v306;
      uint64_t v539 = v307;
      ((void (*)(char *, char *, uint64_t))v306)(v537, v357, v239);
      uint64_t v212 = (void (*)(void, void, void, void))v509;
      sub_1C0A9F138(v544 + *(int *)(v287 + 120), (uint64_t)v509);
      int v359 = ((uint64_t (*)(void (*)(void, void, void, void), uint64_t, uint64_t))v535)(v212, 1, v236);
      uint64_t v360 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v532;
      if (v359 == 1)
      {
        sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v361 = 1;
        uint64_t v311 = v358;
        v362 = v305;
LABEL_93:
        uint64_t v363 = (uint64_t)v523;
        v360(v523, v361, 1, v311);
        uint64_t v364 = v506;
        sub_1BFFAF188(v544, v506, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        if (v545(v363, 1, v311) == 1)
        {
          uint64_t v365 = v484;
          sub_1C0A9F138(v364 + *(int *)(v287 + 84), v484);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v535)(v365, 1, v236) == 1)
          {
            v545 = v362;
            sub_1BFFAEED8(v364, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            sub_1BFF511D4(v365, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
            uint64_t v366 = 1;
            uint64_t v367 = v503;
          }
          else
          {
            uint64_t v367 = v503;
            sub_1C003B0FC(v540, v503);
            if (v362)
            {
              sub_1BFFAEED8(v364, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
              (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
              sub_1BFFAEED8(v365, (uint64_t (*)(void))type metadata accessor for FormatURL);
              unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
              uint64_t v260 = (unsigned int (*)(void, void, void))v523;
              return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
            }
            v545 = 0;
            sub_1BFFAEED8(v364, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            sub_1BFFAEED8(v365, (uint64_t (*)(void))type metadata accessor for FormatURL);
            uint64_t v366 = 0;
            uint64_t v311 = v542;
          }
          v360((uint64_t *)v367, v366, 1, v311);
          v440 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v441 = (uint64_t)v523;
LABEL_227:
          sub_1BFF511D4(v441, (unint64_t *)&qword_1EB8948A0, v440);
          uint64_t v339 = v534;
          uint64_t v335 = v538;
LABEL_231:
          v410 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v411 = v367;
          goto LABEL_232;
        }
        v545 = v362;
        sub_1BFFAEED8(v364, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        uint64_t v367 = v503;
        uint64_t v335 = v538;
        ((void (*)(uint64_t, uint64_t, uint64_t))v538)(v503, v363, v311);
        v360((uint64_t *)v367, 0, 1, v311);
LABEL_230:
        uint64_t v339 = v534;
        goto LABEL_231;
      }
      sub_1C003B0FC(v540, (uint64_t)v523);
      v362 = v305;
      if (!v305)
      {
        sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v361 = 0;
        uint64_t v311 = v542;
        goto LABEL_93;
      }
LABEL_144:
      (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
      return sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v269 = v544;
    if (v211 != *MEMORY[0x1E4FAB910])
    {
      v535 = v106;
      uint64_t v539 = v100;
      uint64_t v302 = v543;
      uint64_t v303 = v540;
      uint64_t v304 = v545;
      sub_1C003B0FC(v540, (uint64_t)v188);
      if (v304) {
        return ((uint64_t (*)(char *, uint64_t))v210[1])(v535, v539);
      }
      v545 = 0;
      uint64_t v335 = *(void (***)(char *, uint64_t, uint64_t))(v234 + 32);
      uint64_t v311 = v542;
      ((void (*)(char *, char *, uint64_t))v335)(v537, v188, v542);
      uint64_t v336 = v492;
      sub_1C0A9F138(v269 + *(int *)(v302 + 84), v492);
      uint64_t v337 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v337 - 8) + 48))(v336, 1, v337) == 1)
      {
        sub_1BFF511D4(v336, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v338 = 1;
        uint64_t v339 = v534;
        uint64_t v340 = v491;
      }
      else
      {
        uint64_t v340 = v491;
        uint64_t v390 = v545;
        sub_1C003B0FC(v303, v491);
        uint64_t v339 = v534;
        v545 = v390;
        if (v390)
        {
          (*(void (**)(char *, uint64_t))(v234 + 8))(v537, v542);
          sub_1BFFAEED8(v336, (uint64_t (*)(void))type metadata accessor for FormatURL);
          return ((uint64_t (*)(char *, uint64_t))v210[1])(v535, v539);
        }
        sub_1BFFAEED8(v336, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v338 = 0;
        uint64_t v311 = v542;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v234 + 56))(v340, v338, 1, v311);
      sub_1BFF8834C(v340, v339, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      ((void (*)(char *, uint64_t))v210[1])(v535, v539);
      goto LABEL_233;
    }
    uint64_t v270 = v516;
    sub_1C0A9F138(v544 + *(int *)(v543 + 72), v516);
    uint64_t v271 = type metadata accessor for FormatURL();
    uint64_t v272 = *(void *)(v271 - 8);
    uint64_t v273 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48);
    uint64_t v274 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v272 + 48);
    if (v273(v270, 1, v271) == 1)
    {
      sub_1BFF511D4(v270, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v275 = *(char **)(v234 + 56);
      uint64_t v276 = (void *)v234;
      uint64_t v277 = v512;
      uint64_t v278 = v542;
      v535 = v275;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v275)(v512, 1, 1, v542);
      uint64_t v279 = (uint64_t)v515;
    }
    else
    {
      uint64_t v276 = (void *)v234;
      uint64_t v277 = v512;
      uint64_t v322 = v545;
      sub_1C003B0FC(v540, v512);
      v545 = v322;
      uint64_t v279 = (uint64_t)v515;
      if (v322) {
        goto LABEL_62;
      }
      sub_1BFFAEED8(v270, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v278 = v542;
      v535 = (char *)v276[7];
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v535)(v277, 0, 1, v542);
    }
    sub_1BFFAF188(v269, v279, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    v533 = (void *)v276[6];
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v533)(v277, 1, v278) == 1)
    {
      v382 = v545;
      sub_1C003B0FC(v540, v209);
      v545 = v382;
      if (v382)
      {
        sub_1BFFAEED8(v279, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        uint64_t v260 = (unsigned int (*)(void, void, void))v277;
        return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
      }
      v532 = v274;
      sub_1BFFAEED8(v279, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      sub_1BFF511D4(v277, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v278 = v542;
      v383 = *(void (***)(char *, uint64_t, uint64_t))(v541 + 32);
      uint64_t v384 = (v541 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    }
    else
    {
      v532 = v274;
      sub_1BFFAEED8(v279, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      v383 = (void (**)(char *, uint64_t, uint64_t))v276[4];
      uint64_t v384 = (unint64_t)(v276 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      ((void (*)(uint64_t, uint64_t, uint64_t))v383)(v209, v277, v278);
    }
    uint64_t v406 = v278;
    v538 = v383;
    uint64_t v539 = v384;
    ((void (*)(char *, uint64_t, uint64_t))v383)(v537, v209, v278);
    uint64_t v212 = (void (*)(void, void, void, void))v493;
    sub_1C0A9F138(v544 + *(int *)(v543 + 132), (uint64_t)v493);
    v531 = v273;
    if (v273((uint64_t)v212, 1, v271) == 1)
    {
      sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v407 = 1;
      v408 = v545;
      uint64_t v311 = v406;
      uint64_t v250 = v496;
    }
    else
    {
      uint64_t v250 = v496;
      v409 = v545;
      sub_1C003B0FC(v540, v496);
      v408 = v409;
      if (v409) {
        goto LABEL_144;
      }
      sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v407 = 0;
      uint64_t v311 = v542;
    }
    v378 = v535;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v535)(v250, v407, 1, v311);
    uint64_t v427 = v486;
    sub_1BFFAF188(v544, v486, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v533)(v250, 1, v311) == 1)
    {
      uint64_t v428 = v467;
      sub_1C0A9F138(v427 + *(int *)(v543 + 84), v467);
      if (v531(v428, 1, v271) == 1)
      {
        v545 = v408;
        sub_1BFFAEED8(v427, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFF511D4(v428, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v429 = 1;
        uint64_t v367 = v481;
      }
      else
      {
        uint64_t v367 = v481;
        sub_1C003B0FC(v540, v481);
        if (v408)
        {
          sub_1BFFAEED8(v427, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
          v431 = type metadata accessor for FormatURL;
          uint64_t v432 = v428;
LABEL_209:
          sub_1BFFAEED8(v432, (uint64_t (*)(void))v431);
          unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v260 = (unsigned int (*)(void, void, void))v250;
          return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
        }
        v545 = 0;
        sub_1BFFAEED8(v427, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFFAEED8(v428, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v429 = 0;
        uint64_t v311 = v542;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v535)(v367, v429, 1, v311);
      goto LABEL_226;
    }
    v545 = v408;
    sub_1BFFAEED8(v427, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    v405 = &v513;
    goto LABEL_229;
  }
  uint64_t v203 = v538;
  uint64_t v204 = v100;
  if (a4 < 2.0)
  {
    uint64_t v205 = v544;
    uint64_t v206 = v545;
    uint64_t v207 = v542;
    if (a4 < 1.0) {
      return sub_1C0A953A0(v540, v539, 3.0);
    }
    v535 = v201;
    v532 = v199;
    v533 = v200;
    unint64_t v241 = v528;
    v538[2](v528, v539, v204);
    int v242 = ((uint64_t (*)(char *, uint64_t))v203[11])(v241, v204);
    if (v242 == *MEMORY[0x1E4FAB900])
    {
      uint64_t v243 = v518;
      sub_1C0A9F138(v205 + *(int *)(v543 + 28), v518);
      uint64_t v244 = type metadata accessor for FormatURL();
      uint64_t v245 = *(void *)(v244 - 8);
      long long v246 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v245 + 48);
      uint64_t v247 = (char *)(v245 + 48);
      if (v246(v243, 1, v244) == 1)
      {
        sub_1BFF511D4(v243, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v248 = v541;
        uint64_t v249 = *(void **)(v541 + 56);
        uint64_t v250 = v514;
        uint64_t v251 = v514;
        uint64_t v252 = 1;
LABEL_53:
        v533 = v249;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v249)(v251, v252, 1, v207);
        v532 = v246;
        uint64_t v314 = v205;
        uint64_t v315 = v508;
        sub_1BFFAF188(v314, v508, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        v531 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48);
        if (v531(v250, 1, v207) != 1)
        {
          v545 = v206;
          sub_1BFFAEED8(v315, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          uint64_t v317 = *(void (***)(char *, uint64_t, uint64_t))(v248 + 32);
          uint64_t v318 = (v248 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
          uint64_t v316 = v535;
          ((void (*)(char *, uint64_t, uint64_t))v317)(v535, v250, v207);
          goto LABEL_81;
        }
        uint64_t v316 = v535;
        sub_1C003B0FC(v540, (uint64_t)v535);
        if (!v206)
        {
          v545 = 0;
          sub_1BFFAEED8(v315, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          sub_1BFF511D4(v250, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          uint64_t v317 = *(void (***)(char *, uint64_t, uint64_t))(v248 + 32);
          uint64_t v318 = (v248 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
          uint64_t v207 = v542;
LABEL_81:
          uint64_t v348 = v207;
          v538 = v317;
          uint64_t v539 = v318;
          ((void (*)(char *, char *, uint64_t))v317)(v537, v316, v207);
          uint64_t v212 = (void (*)(void, void, void, void))v495;
          sub_1C0A9F138(v544 + *(int *)(v543 + 88), (uint64_t)v495);
          v349 = v532;
          if (v532((uint64_t)v212, 1, v244) == 1)
          {
            v535 = v247;
            sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
            uint64_t v350 = 1;
            uint64_t v311 = v348;
            uint64_t v351 = v545;
            uint64_t v250 = v498;
LABEL_113:
            v378 = (char *)v533;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v533)(v250, v350, 1, v311);
            uint64_t v379 = v488;
            sub_1BFFAF188(v544, v488, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            if (v531(v250, 1, v311) == 1)
            {
              uint64_t v380 = v469;
              sub_1C0A9F138(v379 + *(int *)(v543 + 76), v469);
              if (v349(v380, 1, v244) == 1)
              {
                v545 = v351;
                sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
                sub_1BFF511D4(v380, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
                uint64_t v367 = v483;
                ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v533)(v483, 1, 1, v311);
LABEL_226:
                v440 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
                uint64_t v441 = v250;
                goto LABEL_227;
              }
              uint64_t v367 = v483;
              sub_1C003B0FC(v540, v483);
              v354 = (char *)v533;
              if (!v351) {
                goto LABEL_175;
              }
              goto LABEL_208;
            }
            v545 = v351;
            sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            v405 = (uint64_t *)&v515;
            goto LABEL_229;
          }
          uint64_t v250 = v498;
          uint64_t v377 = v545;
          sub_1C003B0FC(v540, v498);
          uint64_t v351 = v377;
          if (!v377)
          {
            v535 = v247;
            sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
            uint64_t v350 = 0;
            uint64_t v311 = v542;
            goto LABEL_113;
          }
          goto LABEL_216;
        }
        goto LABEL_201;
      }
      uint64_t v250 = v514;
      sub_1C003B0FC(v540, v514);
      uint64_t v248 = v541;
      if (!v206)
      {
        sub_1BFFAEED8(v243, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v249 = *(void **)(v248 + 56);
        uint64_t v251 = v250;
        uint64_t v252 = 0;
        uint64_t v207 = v542;
        goto LABEL_53;
      }
      return sub_1BFFAEED8(v243, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    if (v242 == *MEMORY[0x1E4FAB908])
    {
      uint64_t v243 = v502;
      sub_1C0A9F138(v205 + *(int *)(v543 + 52), v502);
      uint64_t v288 = type metadata accessor for FormatURL();
      uint64_t v289 = *(void *)(v288 - 8);
      long long v290 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v289 + 48);
      long long v291 = (void *)(v289 + 48);
      if (v290(v243, 1, v288) == 1)
      {
        sub_1BFF511D4(v243, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v248 = v541;
        uint64_t v292 = *(char **)(v541 + 56);
        uint64_t v250 = v500;
        uint64_t v293 = v500;
        uint64_t v294 = 1;
      }
      else
      {
        uint64_t v250 = v500;
        sub_1C003B0FC(v540, v500);
        uint64_t v248 = v541;
        if (v206) {
          return sub_1BFFAEED8(v243, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        sub_1BFFAEED8(v243, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v292 = *(char **)(v248 + 56);
        uint64_t v293 = v250;
        uint64_t v294 = 0;
        uint64_t v207 = v542;
      }
      v535 = v292;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v292)(v293, v294, 1, v207);
      v532 = v290;
      uint64_t v372 = v205;
      uint64_t v315 = v490;
      sub_1BFFAF188(v372, v490, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      v531 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48);
      if (v531(v250, 1, v207) != 1)
      {
        v545 = v206;
        sub_1BFFAEED8(v315, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        uint64_t v374 = *(void (***)(char *, uint64_t, uint64_t))(v248 + 32);
        uint64_t v375 = (v248 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        uint64_t v373 = (void (*)(void, void, void, void))v533;
        ((void (*)(void *, uint64_t, uint64_t))v374)(v533, v250, v207);
        goto LABEL_133;
      }
      uint64_t v373 = (void (*)(void, void, void, void))v533;
      sub_1C003B0FC(v540, (uint64_t)v533);
      if (!v206)
      {
        v545 = 0;
        sub_1BFFAEED8(v315, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFF511D4(v250, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        uint64_t v374 = *(void (***)(char *, uint64_t, uint64_t))(v248 + 32);
        uint64_t v375 = (v248 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        uint64_t v207 = v542;
LABEL_133:
        uint64_t v402 = v207;
        v538 = v374;
        uint64_t v539 = v375;
        ((void (*)(char *, void (*)(void, void, void, void), uint64_t))v374)(v537, v373, v207);
        uint64_t v212 = (void (*)(void, void, void, void))v478;
        sub_1C0A9F138(v544 + *(int *)(v543 + 112), (uint64_t)v478);
        v403 = v532;
        if (v532((uint64_t)v212, 1, v288) == 1)
        {
          v533 = v291;
          sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
          uint64_t v404 = 1;
          uint64_t v311 = v402;
          uint64_t v351 = v545;
          uint64_t v250 = v476;
LABEL_152:
          v378 = v535;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v535)(v250, v404, 1, v311);
          uint64_t v379 = v471;
          sub_1BFFAF188(v544, v471, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          if (v531(v250, 1, v311) == 1)
          {
            uint64_t v380 = v459;
            sub_1C0A9F138(v379 + *(int *)(v543 + 76), v459);
            if (v403(v380, 1, v288) == 1)
            {
              v545 = v351;
              sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
              sub_1BFF511D4(v380, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
              uint64_t v413 = 1;
              v414 = &v498;
LABEL_224:
              uint64_t v367 = *(v414 - 32);
              v354 = v535;
              goto LABEL_225;
            }
            v447 = &v498;
            goto LABEL_235;
          }
          v545 = v351;
          sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          v405 = &v498;
          goto LABEL_229;
        }
        uint64_t v250 = v476;
        v412 = v545;
        sub_1C003B0FC(v540, v476);
        uint64_t v351 = v412;
        if (!v412)
        {
          v533 = v291;
          sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
          uint64_t v404 = 0;
          uint64_t v311 = v542;
          goto LABEL_152;
        }
LABEL_216:
        (*(void (**)(char *, uint64_t))(v248 + 8))(v537, v542);
        return sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
LABEL_201:
      v431 = type metadata accessor for FormatRemoteVideo;
      uint64_t v432 = v315;
      goto LABEL_209;
    }
    if (v242 != *MEMORY[0x1E4FAB910])
    {
      uint64_t v376 = v540;
      sub_1C003B0FC(v540, (uint64_t)v172);
      if (v206) {
        return ((uint64_t (*)(char *, uint64_t))v203[1])(v241, v204);
      }
      v545 = 0;
      uint64_t v311 = v542;
      uint64_t v335 = *(void (***)(char *, uint64_t, uint64_t))(v541 + 32);
      ((void (*)(char *, char *, uint64_t))v335)(v537, v172, v542);
      uint64_t v419 = v462;
      sub_1C0A9F138(v205 + *(int *)(v543 + 76), v462);
      uint64_t v420 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v420 - 8) + 48))(v419, 1, v420) == 1)
      {
        sub_1BFF511D4(v419, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v421 = 1;
        uint64_t v339 = v534;
        uint64_t v422 = v541;
        uint64_t v423 = v461;
      }
      else
      {
        uint64_t v423 = v461;
        v446 = v545;
        sub_1C003B0FC(v376, v461);
        uint64_t v339 = v534;
        v545 = v446;
        if (v446)
        {
          (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
          sub_1BFFAEED8(v419, (uint64_t (*)(void))type metadata accessor for FormatURL);
          return ((uint64_t (*)(char *, uint64_t))v203[1])(v528, v204);
        }
        sub_1BFFAEED8(v419, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v421 = 0;
        uint64_t v422 = v541;
        uint64_t v311 = v542;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v422 + 56))(v423, v421, 1, v311);
      sub_1BFF8834C(v423, v339, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      ((void (*)(char *, uint64_t))v203[1])(v528, v204);
      goto LABEL_233;
    }
    uint64_t v243 = v480;
    sub_1C0A9F138(v205 + *(int *)(v543 + 64), v480);
    uint64_t v323 = type metadata accessor for FormatURL();
    uint64_t v324 = *(void *)(v323 - 8);
    uint64_t v325 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v324 + 48);
    uint64_t v326 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v324 + 48);
    if (v325(v243, 1, v323) == 1)
    {
      sub_1BFF511D4(v243, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v248 = v541;
      uint64_t v327 = *(char **)(v541 + 56);
      uint64_t v250 = v479;
      uint64_t v328 = v479;
      uint64_t v329 = 1;
    }
    else
    {
      uint64_t v250 = v479;
      sub_1C003B0FC(v540, v479);
      uint64_t v248 = v541;
      if (v206) {
        return sub_1BFFAEED8(v243, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      sub_1BFFAEED8(v243, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v327 = *(char **)(v248 + 56);
      uint64_t v328 = v250;
      uint64_t v329 = 0;
      uint64_t v207 = v542;
    }
    v535 = v327;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v327)(v328, v329, 1, v207);
    v533 = v325;
    uint64_t v442 = v205;
    uint64_t v315 = v472;
    sub_1BFFAF188(v442, v472, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    v531 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48);
    if (v531(v250, 1, v207) == 1)
    {
      v443 = v532;
      sub_1C003B0FC(v540, (uint64_t)v532);
      if (v206) {
        goto LABEL_201;
      }
      v545 = 0;
      sub_1BFFAEED8(v315, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      sub_1BFF511D4(v250, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      v444 = *(void (***)(char *, uint64_t, uint64_t))(v248 + 32);
      uint64_t v445 = (v248 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v207 = v542;
    }
    else
    {
      v545 = v206;
      sub_1BFFAEED8(v315, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      v444 = *(void (***)(char *, uint64_t, uint64_t))(v248 + 32);
      uint64_t v445 = (v248 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v443 = v532;
      ((void (*)(unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v444)(v532, v250, v207);
    }
    uint64_t v449 = v207;
    v538 = v444;
    uint64_t v539 = v445;
    ((void (*)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t))v444)(v537, v443, v207);
    uint64_t v212 = (void (*)(void, void, void, void))v464;
    sub_1C0A9F138(v544 + *(int *)(v543 + 124), (uint64_t)v464);
    v450 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v533;
    if (((unsigned int (*)(void (*)(void, void, void, void), uint64_t, uint64_t))v533)(v212, 1, v323) == 1)
    {
      v532 = v326;
      sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v451 = 1;
      uint64_t v311 = v449;
      uint64_t v351 = v545;
      uint64_t v250 = v463;
    }
    else
    {
      uint64_t v250 = v463;
      v452 = v545;
      sub_1C003B0FC(v540, v463);
      uint64_t v351 = v452;
      if (v452) {
        goto LABEL_216;
      }
      v532 = v326;
      sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v451 = 0;
      uint64_t v311 = v542;
    }
    v378 = v535;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v535)(v250, v451, 1, v311);
    uint64_t v379 = v460;
    sub_1BFFAF188(v544, v460, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    if (v531(v250, 1, v311) == 1)
    {
      uint64_t v380 = v456;
      sub_1C0A9F138(v379 + *(int *)(v543 + 76), v456);
      if (v450(v380, 1, v323) == 1)
      {
        v545 = v351;
        sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFF511D4(v380, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v413 = 1;
        v414 = &v489;
        goto LABEL_224;
      }
      v447 = &v489;
LABEL_235:
      uint64_t v367 = *(v447 - 32);
      sub_1C003B0FC(v540, v367);
      v354 = v535;
      if (!v351) {
        goto LABEL_175;
      }
      goto LABEL_208;
    }
    v545 = v351;
    sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    v405 = &v489;
LABEL_229:
    uint64_t v367 = *(v405 - 32);
    uint64_t v335 = v538;
    ((void (*)(uint64_t, uint64_t, uint64_t))v538)(v367, v250, v311);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v378)(v367, 0, 1, v311);
    goto LABEL_230;
  }
  uint64_t v220 = v197;
  v533 = v181;
  uint64_t v221 = v535;
  v538[2](v535, v539, v100);
  int v222 = ((uint64_t (*)(char *, uint64_t))v203[11])(v221, v100);
  uint64_t v223 = v544;
  uint64_t v224 = v545;
  uint64_t v225 = v542;
  if (v222 != *MEMORY[0x1E4FAB900])
  {
    if (v222 == *MEMORY[0x1E4FAB908])
    {
      uint64_t v261 = v517;
      sub_1C0A9F138(v544 + *(int *)(v543 + 56), v517);
      uint64_t v262 = type metadata accessor for FormatURL();
      uint64_t v263 = *(void *)(v262 - 8);
      v535 = *(char **)(v263 + 48);
      v533 = (void *)(v263 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v535)(v261, 1, v262) == 1)
      {
        sub_1BFF511D4(v261, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v264 = v541;
        char v265 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v541 + 56);
        uint64_t v266 = v513;
        uint64_t v267 = v513;
        uint64_t v268 = 1;
LABEL_58:
        v532 = v265;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v265)(v267, v268, 1, v225);
        uint64_t v319 = v507;
        sub_1BFFAF188(v223, v507, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        v531 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48);
        if (v531(v266, 1, v225) != 1)
        {
          v545 = v224;
          sub_1BFFAEED8(v319, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          uint64_t v320 = *(void (***)(char *, uint64_t, uint64_t))(v264 + 32);
          uint64_t v321 = (v264 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
          ((void (*)(uint64_t, uint64_t, uint64_t))v320)(v220, v266, v225);
          goto LABEL_84;
        }
        sub_1C003B0FC(v540, v220);
        if (!v224)
        {
          v545 = 0;
          sub_1BFFAEED8(v319, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
          sub_1BFF511D4(v266, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          uint64_t v320 = *(void (***)(char *, uint64_t, uint64_t))(v264 + 32);
          uint64_t v321 = (v264 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
          uint64_t v225 = v542;
LABEL_84:
          uint64_t v352 = v225;
          v538 = v320;
          uint64_t v539 = v321;
          ((void (*)(char *, uint64_t, uint64_t))v320)(v537, v220, v225);
          uint64_t v212 = (void (*)(void, void, void, void))v494;
          sub_1C0A9F138(v544 + *(int *)(v543 + 116), (uint64_t)v494);
          int v353 = ((uint64_t (*)(void (*)(void, void, void, void), uint64_t, uint64_t))v535)(v212, 1, v262);
          v354 = (char *)v532;
          if (v353 == 1)
          {
            sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
            uint64_t v355 = 1;
            uint64_t v311 = v352;
            uint64_t v351 = v545;
            uint64_t v250 = v497;
LABEL_165:
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v354)(v250, v355, 1, v311);
            uint64_t v379 = v487;
            sub_1BFFAF188(v544, v487, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            if (v531(v250, 1, v311) == 1)
            {
              uint64_t v380 = v468;
              sub_1C0A9F138(v379 + *(int *)(v543 + 80), v468);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v535)(v380, 1, v262) == 1)
              {
                v545 = v351;
                sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
                sub_1BFF511D4(v380, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
                uint64_t v413 = 1;
                v425 = &v514;
LABEL_190:
                uint64_t v367 = *(v425 - 32);
                goto LABEL_225;
              }
              v430 = &v514;
              goto LABEL_207;
            }
            v545 = v351;
            sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
            v426 = &v514;
LABEL_192:
            uint64_t v367 = *(v426 - 32);
            uint64_t v335 = v538;
            ((void (*)(uint64_t, uint64_t, uint64_t))v538)(v367, v250, v311);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v354)(v367, 0, 1, v311);
            goto LABEL_230;
          }
          uint64_t v250 = v497;
          v381 = v545;
          sub_1C003B0FC(v540, v497);
          uint64_t v351 = v381;
          if (!v381)
          {
            sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
            uint64_t v355 = 0;
            uint64_t v311 = v542;
            goto LABEL_165;
          }
          (*(void (**)(char *, uint64_t))(v264 + 8))(v537, v542);
          return sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
LABEL_158:
        sub_1BFFAEED8(v319, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        uint64_t v260 = (unsigned int (*)(void, void, void))v266;
        return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
      }
      uint64_t v266 = v513;
      sub_1C003B0FC(v540, v513);
      uint64_t v264 = v541;
      if (!v224)
      {
        sub_1BFFAEED8(v261, (uint64_t (*)(void))type metadata accessor for FormatURL);
        char v265 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 56);
        uint64_t v267 = v266;
        uint64_t v268 = 0;
        uint64_t v225 = v542;
        goto LABEL_58;
      }
      return sub_1BFFAEED8(v261, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    if (v222 != *MEMORY[0x1E4FAB910])
    {
      uint64_t v330 = v543;
      uint64_t v331 = v540;
      sub_1C003B0FC(v540, (uint64_t)v178);
      if (v224) {
        return ((uint64_t (*)(char *, uint64_t))v203[1])(v535, v204);
      }
      v545 = 0;
      uint64_t v385 = v541;
      uint64_t v311 = v542;
      uint64_t v335 = *(void (***)(char *, uint64_t, uint64_t))(v541 + 32);
      uint64_t v539 = v541 + 32;
      ((void (*)(char *, char *, uint64_t))v335)(v537, v178, v542);
      uint64_t v386 = v223 + *(int *)(v330 + 80);
      uint64_t v387 = v473;
      sub_1C0A9F138(v386, v473);
      uint64_t v388 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v388 - 8) + 48))(v387, 1, v388) == 1)
      {
        sub_1BFF511D4(v387, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v389 = 1;
        uint64_t v339 = v534;
      }
      else
      {
        v424 = v545;
        sub_1C003B0FC(v331, v474);
        uint64_t v339 = v534;
        v545 = v424;
        if (v424)
        {
          (*(void (**)(char *, uint64_t))(v385 + 8))(v537, v542);
          sub_1BFFAEED8(v387, (uint64_t (*)(void))type metadata accessor for FormatURL);
          return ((uint64_t (*)(char *, uint64_t))v203[1])(v535, v204);
        }
        sub_1BFFAEED8(v387, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v389 = 0;
        uint64_t v311 = v542;
      }
      uint64_t v448 = v474;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v385 + 56))(v474, v389, 1, v311);
      sub_1BFF8834C(v448, v339, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      ((void (*)(char *, uint64_t))v203[1])(v535, v204);
      goto LABEL_233;
    }
    uint64_t v261 = v501;
    sub_1C0A9F138(v544 + *(int *)(v543 + 68), v501);
    uint64_t v295 = type metadata accessor for FormatURL();
    uint64_t v296 = *(void *)(v295 - 8);
    uint64_t v297 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v296 + 48);
    v535 = (char *)(v296 + 48);
    if (v297(v261, 1, v295) == 1)
    {
      v531 = v297;
      sub_1BFF511D4(v261, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v298 = v541;
      long long v299 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v541 + 56);
      uint64_t v266 = v499;
      uint64_t v300 = v499;
      uint64_t v301 = 1;
    }
    else
    {
      uint64_t v266 = v499;
      sub_1C003B0FC(v540, v499);
      if (v224) {
        return sub_1BFFAEED8(v261, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      v531 = v297;
      sub_1BFFAEED8(v261, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v298 = v541;
      uint64_t v225 = v542;
      long long v299 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v541 + 56);
      uint64_t v300 = v266;
      uint64_t v301 = 0;
    }
    v532 = v299;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v299)(v300, v301, 1, v225);
    uint64_t v319 = v489;
    sub_1BFFAF188(v223, v489, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    v415 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v298 + 48);
    if (v415(v266, 1, v225) == 1)
    {
      v416 = (void (*)(void, void, void, void))v533;
      sub_1C003B0FC(v540, (uint64_t)v533);
      if (v224) {
        goto LABEL_158;
      }
      v545 = 0;
      sub_1BFFAEED8(v319, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      sub_1BFF511D4(v266, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v225 = v542;
      v417 = *(void (***)(char *, uint64_t, uint64_t))(v541 + 32);
      uint64_t v418 = (v541 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    }
    else
    {
      v545 = v224;
      sub_1BFFAEED8(v319, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      v417 = *(void (***)(char *, uint64_t, uint64_t))(v298 + 32);
      uint64_t v418 = (v298 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v416 = (void (*)(void, void, void, void))v533;
      ((void (*)(void *, uint64_t, uint64_t))v417)(v533, v266, v225);
    }
    v533 = v415;
    v433 = v416;
    uint64_t v434 = v225;
    v538 = v417;
    uint64_t v539 = v418;
    ((void (*)(char *, void (*)(void, void, void, void), uint64_t))v417)(v537, v433, v225);
    uint64_t v212 = (void (*)(void, void, void, void))v477;
    sub_1C0A9F138(v544 + *(int *)(v543 + 128), (uint64_t)v477);
    v435 = v531;
    unsigned int v436 = v531((uint64_t)v212, 1, v295);
    v354 = (char *)v532;
    if (v436 == 1)
    {
      sub_1BFF511D4((uint64_t)v212, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v437 = 1;
      uint64_t v311 = v434;
      uint64_t v351 = v545;
      uint64_t v250 = v475;
    }
    else
    {
      uint64_t v250 = v475;
      v438 = v545;
      sub_1C003B0FC(v540, v475);
      uint64_t v351 = v438;
      uint64_t v248 = v541;
      if (v438) {
        goto LABEL_216;
      }
      sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v437 = 0;
      uint64_t v311 = v542;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v354)(v250, v437, 1, v311);
    uint64_t v379 = v470;
    sub_1BFFAF188(v544, v470, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v533)(v250, 1, v311) == 1)
    {
      v439 = v435;
      uint64_t v380 = v458;
      sub_1C0A9F138(v379 + *(int *)(v543 + 80), v458);
      if (v439(v380, 1, v295) == 1)
      {
        v545 = v351;
        sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFF511D4(v380, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v413 = 1;
        v425 = &v497;
        goto LABEL_190;
      }
      v430 = &v497;
LABEL_207:
      uint64_t v367 = *(v430 - 32);
      sub_1C003B0FC(v540, v367);
      if (!v351)
      {
LABEL_175:
        v545 = v351;
        sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        sub_1BFFAEED8(v380, (uint64_t (*)(void))type metadata accessor for FormatURL);
        uint64_t v413 = 0;
        uint64_t v311 = v542;
LABEL_225:
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v354)(v367, v413, 1, v311);
        goto LABEL_226;
      }
LABEL_208:
      sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
      v431 = type metadata accessor for FormatURL;
      uint64_t v432 = v380;
      goto LABEL_209;
    }
    v545 = v351;
    sub_1BFFAEED8(v379, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    v426 = &v497;
    goto LABEL_192;
  }
  uint64_t v226 = v526;
  sub_1C0A9F138(v544 + *(int *)(v543 + 32), v526);
  uint64_t v227 = type metadata accessor for FormatURL();
  uint64_t v228 = *(void *)(v227 - 8);
  uint64_t v229 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v228 + 48);
  v535 = (char *)(v228 + 48);
  int v230 = v229(v226, 1, v227);
  uint64_t v231 = (void *)v541;
  if (v230 == 1)
  {
    sub_1BFF511D4(v226, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v232 = v531;
    v533 = (void *)v231[7];
    ((void (*)(unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))v533)(v531, 1, 1, v225);
    uint64_t v233 = (uint64_t)v527;
    goto LABEL_69;
  }
  uint64_t v232 = v531;
  sub_1C003B0FC(v540, (uint64_t)v531);
  uint64_t v282 = v226;
  uint64_t v233 = (uint64_t)v527;
  if (v224) {
    return sub_1BFFAEED8(v282, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  sub_1BFFAEED8(v282, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t v225 = v542;
  v533 = (void *)v231[7];
  ((void (*)(unsigned int (*)(uint64_t, uint64_t, uint64_t), void, uint64_t, uint64_t))v533)(v232, 0, 1, v542);
LABEL_69:
  sub_1BFFAF188(v223, v233, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
  v532 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v231[6];
  if (v532((uint64_t)v232, 1, v225) == 1)
  {
    uint64_t v332 = v543;
    sub_1C003B0FC(v540, (uint64_t)v185);
    if (v224)
    {
      sub_1BFFAEED8(v233, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      uint64_t v260 = v531;
      return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
    }
    v545 = 0;
    sub_1BFFAEED8(v233, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    sub_1BFF511D4((uint64_t)v531, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v225 = v542;
    v333 = *(void (***)(char *, uint64_t, uint64_t))(v541 + 32);
    uint64_t v334 = (v541 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  else
  {
    v545 = v224;
    sub_1BFFAEED8(v233, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    v333 = (void (**)(char *, uint64_t, uint64_t))v231[4];
    uint64_t v334 = (unint64_t)(v231 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    ((void (*)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t))v333)(v185, v232, v225);
    uint64_t v332 = v543;
  }
  uint64_t v539 = v334;
  ((void (*)(char *, char *, uint64_t))v333)(v537, v185, v225);
  uint64_t v368 = v510;
  sub_1C0A9F138(v544 + *(int *)(v332 + 92), v510);
  if (v229(v368, 1, v227) == 1)
  {
    uint64_t v543 = (uint64_t)v229;
    v538 = v333;
    sub_1BFF511D4(v368, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v369 = 1;
    uint64_t v370 = (uint64_t)v511;
    goto LABEL_128;
  }
  uint64_t v371 = v545;
  sub_1C003B0FC(v540, v522);
  v545 = v371;
  uint64_t v370 = (uint64_t)v511;
  if (v371)
  {
    (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
    uint64_t v282 = v368;
    return sub_1BFFAEED8(v282, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v543 = (uint64_t)v229;
  v538 = v333;
  sub_1BFFAEED8(v368, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t v369 = 0;
  uint64_t v225 = v542;
LABEL_128:
  uint64_t v391 = v522;
  uint64_t v392 = v225;
  uint64_t v393 = v225;
  v394 = (void (*)(uint64_t, void, uint64_t, uint64_t))v533;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v533)(v522, v369, 1, v392);
  sub_1BFFAF188(v544, v370, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
  unsigned int v395 = v532(v391, 1, v393);
  v396 = v545;
  if (v395 == 1)
  {
    uint64_t v397 = v485;
    sub_1C0A9F138(v370 + *(int *)(v332 + 80), v485);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v543)(v397, 1, v227) == 1)
    {
      sub_1BFFAEED8(v370, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      sub_1BFF511D4(v397, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v398 = 1;
      uint64_t v399 = v522;
      uint64_t v400 = v504;
      v401 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v533;
    }
    else
    {
      uint64_t v400 = v504;
      sub_1C003B0FC(v540, v504);
      uint64_t v399 = v522;
      v401 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v533;
      if (v396)
      {
        sub_1BFFAEED8(v370, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
        (*(void (**)(char *, uint64_t))(v541 + 8))(v537, v542);
        sub_1BFFAEED8(v397, (uint64_t (*)(void))type metadata accessor for FormatURL);
        unint64_t v259 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        uint64_t v260 = (unsigned int (*)(void, void, void))v399;
        return sub_1BFF511D4((uint64_t)v260, (unint64_t *)&qword_1EB8948A0, v259);
      }
      sub_1BFFAEED8(v370, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      sub_1BFFAEED8(v397, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v398 = 0;
    }
    v545 = v396;
    v401(v400, v398, 1, v542);
    sub_1BFF511D4(v399, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  }
  else
  {
    sub_1BFFAEED8(v370, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
    uint64_t v400 = v504;
    ((void (*)(uint64_t, uint64_t, uint64_t))v538)(v504, v391, v393);
    v394(v400, 0, 1, v393);
  }
  uint64_t v339 = v534;
  sub_1BFF8834C(v400, v534, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  uint64_t v335 = v538;
  uint64_t v311 = v542;
LABEL_233:
  uint64_t v453 = v536;
  ((void (*)(uint64_t, char *, uint64_t))v335)(v536, v537, v311);
  uint64_t v454 = type metadata accessor for FormatVideoData.Assets(0);
  return sub_1BFF8834C(v339, v453 + *(int *)(v454 + 20), (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C0A99BE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRemoteVideo.init(from:)(a1, a2);
}

uint64_t sub_1C0A99C00(void *a1)
{
  return FormatRemoteVideo.encode(to:)(a1);
}

BOOL _s8NewsFeed17FormatRemoteVideoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v557 = type metadata accessor for FormatURL();
  uint64_t v560 = *(void *)(v557 - 8);
  MEMORY[0x1F4188790](v557);
  uint64_t v555 = (uint64_t)&v450 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AB0FF0();
  uint64_t v558 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v450 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v502 = (uint64_t)&v450 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v498 = (uint64_t)&v450 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v494 = (uint64_t)&v450 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v491 = (uint64_t)&v450 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v488 = (uint64_t)&v450 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v485 = (uint64_t)&v450 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v482 = (uint64_t)&v450 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v478 = (uint64_t)&v450 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v474 = (uint64_t)&v450 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v470 = (uint64_t)&v450 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v466 = (uint64_t)&v450 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v506 = (uint64_t)&v450 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v511 = (uint64_t)&v450 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v514 = (uint64_t)&v450 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v518 = (uint64_t)&v450 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v522 = (uint64_t)&v450 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v526 = (uint64_t)&v450 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v531 = (uint64_t)&v450 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v532 = (uint64_t)&v450 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v536 = (uint64_t)&v450 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v540 = (uint64_t)&v450 - v49;
  MEMORY[0x1F4188790](v50);
  uint64_t v544 = (uint64_t)&v450 - v51;
  MEMORY[0x1F4188790](v52);
  uint64_t v549 = (uint64_t)&v450 - v53;
  MEMORY[0x1F4188790](v54);
  uint64_t v553 = (uint64_t)&v450 - v55;
  MEMORY[0x1F4188790](v56);
  uint64_t v556 = (uint64_t)&v450 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v559 = (uint64_t)&v450 - v59;
  sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1F4188790](v60 - 8);
  uint64_t v501 = (uint64_t)&v450 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v62);
  uint64_t v499 = (uint64_t)&v450 - v63;
  MEMORY[0x1F4188790](v64);
  uint64_t v500 = (uint64_t)&v450 - v65;
  MEMORY[0x1F4188790](v66);
  uint64_t v497 = (uint64_t)&v450 - v67;
  MEMORY[0x1F4188790](v68);
  uint64_t v495 = (uint64_t)&v450 - v69;
  MEMORY[0x1F4188790](v70);
  uint64_t v496 = (uint64_t)&v450 - v71;
  MEMORY[0x1F4188790](v72);
  uint64_t v493 = (uint64_t)&v450 - v73;
  MEMORY[0x1F4188790](v74);
  uint64_t v490 = (uint64_t)&v450 - v75;
  MEMORY[0x1F4188790](v76);
  uint64_t v492 = (uint64_t)&v450 - v77;
  MEMORY[0x1F4188790](v78);
  uint64_t v489 = (uint64_t)&v450 - v79;
  MEMORY[0x1F4188790](v80);
  uint64_t v486 = (uint64_t)&v450 - v81;
  MEMORY[0x1F4188790](v82);
  uint64_t v487 = (uint64_t)&v450 - v83;
  MEMORY[0x1F4188790](v84);
  uint64_t v484 = (uint64_t)&v450 - v85;
  MEMORY[0x1F4188790](v86);
  uint64_t v88 = (char *)&v450 - v87;
  MEMORY[0x1F4188790](v89);
  uint64_t v483 = (uint64_t)&v450 - v90;
  MEMORY[0x1F4188790](v91);
  uint64_t v481 = (uint64_t)&v450 - v92;
  MEMORY[0x1F4188790](v93);
  uint64_t v479 = (uint64_t)&v450 - v94;
  MEMORY[0x1F4188790](v95);
  uint64_t v480 = (uint64_t)&v450 - v96;
  MEMORY[0x1F4188790](v97);
  uint64_t v477 = (uint64_t)&v450 - v98;
  MEMORY[0x1F4188790](v99);
  uint64_t v475 = (uint64_t)&v450 - v100;
  MEMORY[0x1F4188790](v101);
  uint64_t v476 = (uint64_t)&v450 - v102;
  MEMORY[0x1F4188790](v103);
  uint64_t v473 = (uint64_t)&v450 - v104;
  MEMORY[0x1F4188790](v105);
  uint64_t v471 = (uint64_t)&v450 - v106;
  MEMORY[0x1F4188790](v107);
  uint64_t v472 = (uint64_t)&v450 - v108;
  MEMORY[0x1F4188790](v109);
  uint64_t v469 = (uint64_t)&v450 - v110;
  MEMORY[0x1F4188790](v111);
  uint64_t v467 = (uint64_t)&v450 - v112;
  MEMORY[0x1F4188790](v113);
  uint64_t v468 = (uint64_t)&v450 - v114;
  MEMORY[0x1F4188790](v115);
  uint64_t v465 = (uint64_t)&v450 - v116;
  MEMORY[0x1F4188790](v117);
  uint64_t v463 = (uint64_t)&v450 - v118;
  MEMORY[0x1F4188790](v119);
  uint64_t v464 = (uint64_t)&v450 - v120;
  MEMORY[0x1F4188790](v121);
  uint64_t v462 = (uint64_t)&v450 - v122;
  MEMORY[0x1F4188790](v123);
  uint64_t v460 = (uint64_t)&v450 - v124;
  MEMORY[0x1F4188790](v125);
  uint64_t v461 = (uint64_t)&v450 - v126;
  MEMORY[0x1F4188790](v127);
  uint64_t v459 = (uint64_t)&v450 - v128;
  MEMORY[0x1F4188790](v129);
  uint64_t v457 = (uint64_t)&v450 - v130;
  MEMORY[0x1F4188790](v131);
  uint64_t v458 = (uint64_t)&v450 - v132;
  MEMORY[0x1F4188790](v133);
  uint64_t v503 = (uint64_t)&v450 - v134;
  MEMORY[0x1F4188790](v135);
  uint64_t v504 = (uint64_t)&v450 - v136;
  MEMORY[0x1F4188790](v137);
  uint64_t v505 = (uint64_t)&v450 - v138;
  MEMORY[0x1F4188790](v139);
  uint64_t v507 = (uint64_t)&v450 - v140;
  MEMORY[0x1F4188790](v141);
  uint64_t v508 = (uint64_t)&v450 - v142;
  MEMORY[0x1F4188790](v143);
  uint64_t v509 = (uint64_t)&v450 - v144;
  MEMORY[0x1F4188790](v145);
  uint64_t v510 = (uint64_t)&v450 - v146;
  MEMORY[0x1F4188790](v147);
  uint64_t v512 = (uint64_t)&v450 - v148;
  MEMORY[0x1F4188790](v149);
  uint64_t v513 = (uint64_t)&v450 - v150;
  MEMORY[0x1F4188790](v151);
  uint64_t v515 = (uint64_t)&v450 - v152;
  MEMORY[0x1F4188790](v153);
  uint64_t v516 = (uint64_t)&v450 - v154;
  MEMORY[0x1F4188790](v155);
  uint64_t v517 = (uint64_t)&v450 - v156;
  MEMORY[0x1F4188790](v157);
  uint64_t v519 = (uint64_t)&v450 - v158;
  MEMORY[0x1F4188790](v159);
  uint64_t v520 = (uint64_t)&v450 - v160;
  MEMORY[0x1F4188790](v161);
  uint64_t v521 = (uint64_t)&v450 - v162;
  MEMORY[0x1F4188790](v163);
  uint64_t v523 = (uint64_t)&v450 - v164;
  MEMORY[0x1F4188790](v165);
  uint64_t v524 = (uint64_t)&v450 - v166;
  MEMORY[0x1F4188790](v167);
  uint64_t v525 = (uint64_t)&v450 - v168;
  MEMORY[0x1F4188790](v169);
  uint64_t v527 = (uint64_t)&v450 - v170;
  MEMORY[0x1F4188790](v171);
  uint64_t v529 = (uint64_t)&v450 - v172;
  MEMORY[0x1F4188790](v173);
  uint64_t v530 = (uint64_t)&v450 - v174;
  MEMORY[0x1F4188790](v175);
  uint64_t v528 = (uint64_t)&v450 - v176;
  MEMORY[0x1F4188790](v177);
  uint64_t v533 = (uint64_t)&v450 - v178;
  MEMORY[0x1F4188790](v179);
  uint64_t v534 = (uint64_t)&v450 - v180;
  MEMORY[0x1F4188790](v181);
  uint64_t v535 = (uint64_t)&v450 - v182;
  MEMORY[0x1F4188790](v183);
  uint64_t v539 = (uint64_t)&v450 - v184;
  MEMORY[0x1F4188790](v185);
  uint64_t v537 = (uint64_t)&v450 - v186;
  MEMORY[0x1F4188790](v187);
  uint64_t v538 = (uint64_t)&v450 - v188;
  MEMORY[0x1F4188790](v189);
  uint64_t v541 = (uint64_t)&v450 - v190;
  MEMORY[0x1F4188790](v191);
  uint64_t v543 = (uint64_t)&v450 - v192;
  MEMORY[0x1F4188790](v193);
  uint64_t v542 = (uint64_t)&v450 - v194;
  MEMORY[0x1F4188790](v195);
  uint64_t v545 = (uint64_t)&v450 - v196;
  MEMORY[0x1F4188790](v197);
  uint64_t v547 = (uint64_t)&v450 - v198;
  MEMORY[0x1F4188790](v199);
  uint64_t v546 = (uint64_t)&v450 - v200;
  MEMORY[0x1F4188790](v201);
  uint64_t v548 = (uint64_t)&v450 - v202;
  MEMORY[0x1F4188790](v203);
  uint64_t v551 = (uint64_t)&v450 - v204;
  MEMORY[0x1F4188790](v205);
  uint64_t v550 = (uint64_t)&v450 - v206;
  MEMORY[0x1F4188790](v207);
  uint64_t v552 = (uint64_t)&v450 - v208;
  MEMORY[0x1F4188790](v209);
  uint64_t v554 = (uint64_t)&v450 - v210;
  MEMORY[0x1F4188790](v211);
  uint64_t v213 = (char *)&v450 - v212;
  MEMORY[0x1F4188790](v214);
  uint64_t v216 = (char *)&v450 - v215;
  MEMORY[0x1F4188790](v217);
  uint64_t v219 = (char *)&v450 - v218;
  MEMORY[0x1F4188790](v220);
  int v222 = (char *)&v450 - v221;
  MEMORY[0x1F4188790](v223);
  uint64_t v225 = (char *)&v450 - v224;
  MEMORY[0x1F4188790](v226);
  uint64_t v228 = (char *)&v450 - v227;
  if ((_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v456 = v88;
  uint64_t v229 = (int *)type metadata accessor for FormatRemoteVideo();
  if ((_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(a1 + v229[5], a2 + v229[5]) & 1) == 0
    || (_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(a1 + v229[6], a2 + v229[6]) & 1) == 0)
  {
    return 0;
  }
  uint64_t v451 = v7;
  uint64_t v230 = v229[7];
  uint64_t v454 = a1;
  sub_1C0A9F138(a1 + v230, (uint64_t)v228);
  uint64_t v453 = v229;
  uint64_t v231 = v229[7];
  uint64_t v452 = a2;
  sub_1C0A9F138(a2 + v231, (uint64_t)v225);
  uint64_t v232 = v559;
  uint64_t v233 = v560;
  uint64_t v234 = v559 + *(int *)(v558 + 48);
  sub_1C0A9F138((uint64_t)v228, v559);
  uint64_t v455 = v234;
  sub_1C0A9F138((uint64_t)v225, v234);
  uint64_t v237 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48);
  uint64_t v236 = v233 + 48;
  uint64_t v235 = v237;
  uint64_t v238 = v557;
  if (v237(v232, 1, v557) == 1)
  {
    sub_1BFF511D4((uint64_t)v225, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4((uint64_t)v228, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v235(v455, 1, v238) == 1)
    {
      uint64_t v239 = v235;
      sub_1BFF511D4(v559, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v240 = v559;
LABEL_31:
    sub_1BFFAEED8(v240, (uint64_t (*)(void))sub_1C0AB0FF0);
    return 0;
  }
  sub_1C0A9F138(v232, (uint64_t)v222);
  uint64_t v560 = v236;
  v450 = v235;
  if (v235(v455, 1, v238) == 1)
  {
    sub_1BFF511D4((uint64_t)v225, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4((uint64_t)v228, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8((uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_9;
  }
  uint64_t v241 = v555;
  sub_1C0AB0F8C(v455, v555);
  LODWORD(v455) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v222, v241);
  sub_1BFFAEED8(v241, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4((uint64_t)v225, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4((uint64_t)v228, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8((uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v232, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  uint64_t v238 = v557;
  uint64_t v236 = v560;
  uint64_t v239 = v450;
  if ((v455 & 1) == 0) {
    return 0;
  }
LABEL_11:
  int v242 = v453;
  sub_1C0A9F138(v454 + v453[8], (uint64_t)v219);
  uint64_t v243 = v452;
  sub_1C0A9F138(v452 + v242[8], (uint64_t)v216);
  uint64_t v244 = v556;
  uint64_t v245 = v556 + *(int *)(v558 + 48);
  sub_1C0A9F138((uint64_t)v219, v556);
  sub_1C0A9F138((uint64_t)v216, v245);
  if (v239(v244, 1, v238) == 1)
  {
    sub_1BFF511D4((uint64_t)v216, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4((uint64_t)v219, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v239(v245, 1, v238) == 1)
    {
      uint64_t v560 = v236;
      sub_1BFF511D4(v556, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  sub_1C0A9F138(v244, (uint64_t)v213);
  if (v239(v245, 1, v238) == 1)
  {
    sub_1BFF511D4((uint64_t)v216, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4((uint64_t)v219, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_16:
    uint64_t v240 = v556;
    goto LABEL_31;
  }
  uint64_t v560 = v236;
  uint64_t v246 = v555;
  sub_1C0AB0F8C(v245, v555);
  char v247 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v213, v246);
  sub_1BFFAEED8(v246, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4((uint64_t)v216, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4((uint64_t)v219, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t v238 = v557;
  uint64_t v243 = v452;
  sub_1BFF511D4(v244, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v247 & 1) == 0) {
    return 0;
  }
LABEL_18:
  uint64_t v248 = v453;
  uint64_t v249 = v554;
  sub_1C0A9F138(v454 + v453[9], v554);
  uint64_t v250 = v552;
  sub_1C0A9F138(v243 + v248[9], v552);
  uint64_t v251 = v553;
  uint64_t v252 = v553 + *(int *)(v558 + 48);
  sub_1C0A9F138(v249, v553);
  sub_1C0A9F138(v250, v252);
  if (v239(v251, 1, v238) == 1)
  {
    sub_1BFF511D4(v250, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v249, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v239(v252, 1, v238) != 1)
    {
LABEL_30:
      uint64_t v240 = v251;
      goto LABEL_31;
    }
    sub_1BFF511D4(v251, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v253 = v550;
    sub_1C0A9F138(v251, v550);
    if (v239(v252, 1, v238) == 1)
    {
      sub_1BFF511D4(v250, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      sub_1BFF511D4(v554, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v254 = v253;
LABEL_29:
      sub_1BFFAEED8(v254, (uint64_t (*)(void))type metadata accessor for FormatURL);
      goto LABEL_30;
    }
    uint64_t v255 = v252;
    uint64_t v256 = v555;
    sub_1C0AB0F8C(v255, v555);
    LODWORD(v559) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v253, v256);
    sub_1BFFAEED8(v256, (uint64_t (*)(void))type metadata accessor for FormatURL);
    sub_1BFF511D4(v250, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v554, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v253, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v243 = v452;
    sub_1BFF511D4(v251, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if ((v559 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v257 = v551;
  sub_1C0A9F138(v454 + v248[10], v551);
  uint64_t v258 = v548;
  sub_1C0A9F138(v243 + v248[10], v548);
  uint64_t v251 = v549;
  uint64_t v259 = v549 + *(int *)(v558 + 48);
  sub_1C0A9F138(v257, v549);
  sub_1C0A9F138(v258, v259);
  if (v239(v251, 1, v238) == 1)
  {
    sub_1BFF511D4(v258, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v257, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v239(v259, 1, v238) == 1)
    {
      sub_1BFF511D4(v251, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_35;
    }
    goto LABEL_30;
  }
  uint64_t v260 = v546;
  sub_1C0A9F138(v251, v546);
  if (v239(v259, 1, v238) == 1)
  {
    sub_1BFF511D4(v258, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v551, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v254 = v260;
    goto LABEL_29;
  }
  v450 = v239;
  uint64_t v262 = v258;
  uint64_t v263 = v555;
  sub_1C0AB0F8C(v259, v555);
  char v264 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v260, v263);
  sub_1BFFAEED8(v263, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t v265 = v262;
  uint64_t v239 = v450;
  sub_1BFF511D4(v265, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v551, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v260, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v251, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v264 & 1) == 0) {
    return 0;
  }
LABEL_35:
  uint64_t v266 = v453;
  uint64_t v267 = v547;
  sub_1C0A9F138(v454 + v453[11], v547);
  uint64_t v268 = v545;
  sub_1C0A9F138(v243 + v266[11], v545);
  uint64_t v269 = v544;
  uint64_t v270 = v544 + *(int *)(v558 + 48);
  sub_1C0A9F138(v267, v544);
  sub_1C0A9F138(v268, v270);
  if (v239(v269, 1, v238) == 1)
  {
    sub_1BFF511D4(v268, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v267, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v239(v270, 1, v238) != 1) {
      goto LABEL_48;
    }
    sub_1BFF511D4(v269, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v271 = v542;
    sub_1C0A9F138(v269, v542);
    if (v239(v270, 1, v238) == 1)
    {
      sub_1BFF511D4(v268, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v272 = v547;
LABEL_46:
      sub_1BFF511D4(v272, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      uint64_t v278 = v271;
LABEL_47:
      sub_1BFFAEED8(v278, (uint64_t (*)(void))type metadata accessor for FormatURL);
      goto LABEL_48;
    }
    uint64_t v273 = v555;
    sub_1C0AB0F8C(v270, v555);
    LODWORD(v559) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v271, v273);
    sub_1BFFAEED8(v273, (uint64_t (*)(void))type metadata accessor for FormatURL);
    sub_1BFF511D4(v545, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v547, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v271, (uint64_t (*)(void))type metadata accessor for FormatURL);
    sub_1BFF511D4(v269, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if ((v559 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v274 = v453;
  uint64_t v275 = v543;
  sub_1C0A9F138(v454 + v453[12], v543);
  uint64_t v276 = v541;
  sub_1C0A9F138(v243 + v274[12], v541);
  uint64_t v269 = v540;
  uint64_t v277 = v540 + *(int *)(v558 + 48);
  sub_1C0A9F138(v275, v540);
  sub_1C0A9F138(v276, v277);
  if (v239(v269, 1, v238) == 1)
  {
    sub_1BFF511D4(v276, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v275, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v239(v277, 1, v238) == 1)
    {
      sub_1BFF511D4(v269, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_50;
    }
LABEL_48:
    uint64_t v240 = v269;
    goto LABEL_31;
  }
  uint64_t v271 = v538;
  sub_1C0A9F138(v269, v538);
  if (v239(v277, 1, v238) == 1)
  {
    sub_1BFF511D4(v276, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v272 = v543;
    goto LABEL_46;
  }
  uint64_t v279 = v555;
  sub_1C0AB0F8C(v277, v555);
  LODWORD(v559) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v271, v279);
  sub_1BFFAEED8(v279, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v541, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v543, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v271, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v269, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v559 & 1) == 0) {
    return 0;
  }
LABEL_50:
  uint64_t v280 = v453;
  uint64_t v281 = v537;
  sub_1C0A9F138(v454 + v453[13], v537);
  uint64_t v282 = v539;
  sub_1C0A9F138(v243 + v280[13], v539);
  uint64_t v269 = v536;
  uint64_t v283 = v536 + *(int *)(v558 + 48);
  sub_1C0A9F138(v281, v536);
  sub_1C0A9F138(v282, v283);
  unsigned int v284 = v239(v269, 1, v238);
  uint64_t v285 = v535;
  if (v284 == 1)
  {
    sub_1BFF511D4(v282, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v281, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v239(v283, 1, v238) == 1)
    {
      sub_1BFF511D4(v269, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_56;
    }
    goto LABEL_48;
  }
  sub_1C0A9F138(v269, v535);
  if (v239(v283, 1, v238) == 1)
  {
    sub_1BFF511D4(v539, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v281, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v278 = v285;
    goto LABEL_47;
  }
  uint64_t v286 = v555;
  sub_1C0AB0F8C(v283, v555);
  char v287 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v285, v286);
  sub_1BFFAEED8(v286, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v539, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v537, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v285, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v269, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v287 & 1) == 0) {
    return 0;
  }
LABEL_56:
  uint64_t v288 = v453;
  uint64_t v289 = v534;
  sub_1C0A9F138(v454 + v453[14], v534);
  uint64_t v290 = v533;
  sub_1C0A9F138(v243 + v288[14], v533);
  uint64_t v291 = v532;
  uint64_t v292 = v532 + *(int *)(v558 + 48);
  sub_1C0A9F138(v289, v532);
  sub_1C0A9F138(v290, v292);
  if (v239(v291, 1, v238) == 1)
  {
    sub_1BFF511D4(v533, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v534, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v293 = v239;
    if (v239(v292, 1, v238) == 1)
    {
      sub_1BFF511D4(v291, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  uint64_t v294 = v528;
  sub_1C0A9F138(v291, v528);
  uint64_t v293 = v239;
  if (v239(v292, 1, v238) == 1)
  {
    sub_1BFF511D4(v533, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v534, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v294, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_61:
    uint64_t v240 = v291;
    goto LABEL_31;
  }
  uint64_t v295 = v555;
  sub_1C0AB0F8C(v292, v555);
  char v296 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v294, v295);
  sub_1BFFAEED8(v295, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v533, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v534, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v294, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v291, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v296 & 1) == 0) {
    return 0;
  }
LABEL_63:
  uint64_t v297 = v453;
  uint64_t v298 = v530;
  sub_1C0A9F138(v454 + v453[15], v530);
  uint64_t v299 = v529;
  sub_1C0A9F138(v452 + v297[15], v529);
  uint64_t v300 = v531;
  uint64_t v301 = v531 + *(int *)(v558 + 48);
  sub_1C0A9F138(v298, v531);
  sub_1C0A9F138(v299, v301);
  if (v293(v300, 1, v557) == 1)
  {
    sub_1BFF511D4(v529, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v530, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v301, 1, v557) == 1)
    {
      sub_1BFF511D4(v531, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_70;
    }
LABEL_68:
    uint64_t v302 = &v561;
LABEL_195:
    uint64_t v240 = *(v302 - 32);
    goto LABEL_31;
  }
  sub_1C0A9F138(v531, v527);
  if (v293(v301, 1, v557) == 1)
  {
    sub_1BFF511D4(v529, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v530, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v527, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_68;
  }
  uint64_t v303 = v555;
  sub_1C0AB0F8C(v301, v555);
  uint64_t v304 = v527;
  char v305 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v527, v303);
  sub_1BFFAEED8(v303, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v529, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v530, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v304, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v531, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v305 & 1) == 0) {
    return 0;
  }
LABEL_70:
  uint64_t v306 = v453;
  uint64_t v307 = v525;
  sub_1C0A9F138(v454 + v453[16], v525);
  uint64_t v308 = v524;
  sub_1C0A9F138(v452 + v306[16], v524);
  uint64_t v309 = v526;
  uint64_t v310 = v526 + *(int *)(v558 + 48);
  sub_1C0A9F138(v307, v526);
  sub_1C0A9F138(v308, v310);
  if (v293(v309, 1, v557) == 1)
  {
    sub_1BFF511D4(v524, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v525, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v310, 1, v557) == 1)
    {
      sub_1BFF511D4(v526, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_77;
    }
    goto LABEL_75;
  }
  sub_1C0A9F138(v526, v523);
  if (v293(v310, 1, v557) == 1)
  {
    sub_1BFF511D4(v524, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v525, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v523, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_75:
    uint64_t v302 = &v558;
    goto LABEL_195;
  }
  uint64_t v311 = v555;
  sub_1C0AB0F8C(v310, v555);
  uint64_t v312 = v523;
  char v313 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v523, v311);
  sub_1BFFAEED8(v311, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v524, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v525, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v312, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v526, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v313 & 1) == 0) {
    return 0;
  }
LABEL_77:
  uint64_t v314 = v453;
  uint64_t v315 = v521;
  sub_1C0A9F138(v454 + v453[17], v521);
  uint64_t v316 = v520;
  sub_1C0A9F138(v452 + v314[17], v520);
  uint64_t v317 = v522;
  uint64_t v318 = v522 + *(int *)(v558 + 48);
  sub_1C0A9F138(v315, v522);
  sub_1C0A9F138(v316, v318);
  if (v293(v317, 1, v557) == 1)
  {
    sub_1BFF511D4(v520, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v521, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v318, 1, v557) == 1)
    {
      sub_1BFF511D4(v522, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_84;
    }
    goto LABEL_82;
  }
  sub_1C0A9F138(v522, v519);
  if (v293(v318, 1, v557) == 1)
  {
    sub_1BFF511D4(v520, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v521, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v519, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_82:
    uint64_t v302 = &v554;
    goto LABEL_195;
  }
  uint64_t v319 = v555;
  sub_1C0AB0F8C(v318, v555);
  uint64_t v320 = v519;
  char v321 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v519, v319);
  sub_1BFFAEED8(v319, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v520, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v521, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v320, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v522, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v321 & 1) == 0) {
    return 0;
  }
LABEL_84:
  uint64_t v322 = v453;
  uint64_t v323 = v517;
  sub_1C0A9F138(v454 + v453[18], v517);
  uint64_t v324 = v516;
  sub_1C0A9F138(v452 + v322[18], v516);
  uint64_t v325 = v518;
  uint64_t v326 = v518 + *(int *)(v558 + 48);
  sub_1C0A9F138(v323, v518);
  sub_1C0A9F138(v324, v326);
  if (v293(v325, 1, v557) == 1)
  {
    sub_1BFF511D4(v516, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v517, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v326, 1, v557) == 1)
    {
      sub_1BFF511D4(v518, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_91;
    }
    goto LABEL_89;
  }
  sub_1C0A9F138(v518, v515);
  if (v293(v326, 1, v557) == 1)
  {
    sub_1BFF511D4(v516, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v517, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v515, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_89:
    uint64_t v302 = &v550;
    goto LABEL_195;
  }
  uint64_t v327 = v555;
  sub_1C0AB0F8C(v326, v555);
  uint64_t v328 = v515;
  char v329 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v515, v327);
  sub_1BFFAEED8(v327, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v516, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v517, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v328, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v518, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v329 & 1) == 0) {
    return 0;
  }
LABEL_91:
  uint64_t v330 = v453;
  uint64_t v331 = v513;
  sub_1C0A9F138(v454 + v453[19], v513);
  uint64_t v332 = v512;
  sub_1C0A9F138(v452 + v330[19], v512);
  uint64_t v333 = v514;
  uint64_t v334 = v514 + *(int *)(v558 + 48);
  sub_1C0A9F138(v331, v514);
  sub_1C0A9F138(v332, v334);
  if (v293(v333, 1, v557) == 1)
  {
    sub_1BFF511D4(v512, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v513, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v334, 1, v557) == 1)
    {
      sub_1BFF511D4(v514, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_98;
    }
    goto LABEL_96;
  }
  sub_1C0A9F138(v514, v510);
  if (v293(v334, 1, v557) == 1)
  {
    sub_1BFF511D4(v512, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v513, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v510, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_96:
    uint64_t v302 = &v546;
    goto LABEL_195;
  }
  uint64_t v335 = v555;
  sub_1C0AB0F8C(v334, v555);
  uint64_t v336 = v510;
  char v337 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v510, v335);
  sub_1BFFAEED8(v335, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v512, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v513, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v336, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v514, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v337 & 1) == 0) {
    return 0;
  }
LABEL_98:
  uint64_t v338 = v453;
  uint64_t v339 = v509;
  sub_1C0A9F138(v454 + v453[20], v509);
  uint64_t v340 = v508;
  sub_1C0A9F138(v452 + v338[20], v508);
  uint64_t v341 = v511;
  uint64_t v342 = v511 + *(int *)(v558 + 48);
  sub_1C0A9F138(v339, v511);
  sub_1C0A9F138(v340, v342);
  if (v293(v341, 1, v557) == 1)
  {
    sub_1BFF511D4(v508, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v509, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v342, 1, v557) == 1)
    {
      sub_1BFF511D4(v511, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_105;
    }
    goto LABEL_103;
  }
  sub_1C0A9F138(v511, v507);
  if (v293(v342, 1, v557) == 1)
  {
    sub_1BFF511D4(v508, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v509, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v507, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_103:
    uint64_t v302 = &v543;
    goto LABEL_195;
  }
  uint64_t v343 = v555;
  sub_1C0AB0F8C(v342, v555);
  uint64_t v344 = v507;
  char v345 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v507, v343);
  sub_1BFFAEED8(v343, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v508, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v509, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v344, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v511, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v345 & 1) == 0) {
    return 0;
  }
LABEL_105:
  uint64_t v346 = v453;
  uint64_t v347 = v505;
  sub_1C0A9F138(v454 + v453[21], v505);
  uint64_t v348 = v504;
  sub_1C0A9F138(v452 + v346[21], v504);
  uint64_t v349 = v506;
  uint64_t v350 = v506 + *(int *)(v558 + 48);
  sub_1C0A9F138(v347, v506);
  sub_1C0A9F138(v348, v350);
  if (v293(v349, 1, v557) == 1)
  {
    sub_1BFF511D4(v504, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v505, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v350, 1, v557) == 1)
    {
      sub_1BFF511D4(v506, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_112;
    }
    goto LABEL_110;
  }
  sub_1C0A9F138(v506, v503);
  if (v293(v350, 1, v557) == 1)
  {
    sub_1BFF511D4(v504, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v505, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v503, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_110:
    uint64_t v302 = &v538;
    goto LABEL_195;
  }
  uint64_t v351 = v555;
  sub_1C0AB0F8C(v350, v555);
  uint64_t v352 = v503;
  char v353 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v503, v351);
  sub_1BFFAEED8(v351, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v504, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v505, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v352, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v506, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v353 & 1) == 0) {
    return 0;
  }
LABEL_112:
  v354 = v453;
  uint64_t v355 = v458;
  sub_1C0A9F138(v454 + v453[22], v458);
  uint64_t v356 = v457;
  sub_1C0A9F138(v452 + v354[22], v457);
  uint64_t v357 = v466;
  uint64_t v358 = v466 + *(int *)(v558 + 48);
  sub_1C0A9F138(v355, v466);
  sub_1C0A9F138(v356, v358);
  if (v293(v357, 1, v557) == 1)
  {
    sub_1BFF511D4(v457, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v458, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v358, 1, v557) == 1)
    {
      sub_1BFF511D4(v466, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_119;
    }
    goto LABEL_117;
  }
  sub_1C0A9F138(v466, v459);
  if (v293(v358, 1, v557) == 1)
  {
    sub_1BFF511D4(v457, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v458, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v459, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_117:
    uint64_t v302 = &v498;
    goto LABEL_195;
  }
  uint64_t v359 = v555;
  sub_1C0AB0F8C(v358, v555);
  uint64_t v360 = v459;
  char v361 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v459, v359);
  sub_1BFFAEED8(v359, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v457, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v458, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v360, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v466, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v361 & 1) == 0) {
    return 0;
  }
LABEL_119:
  v362 = v453;
  uint64_t v363 = v461;
  sub_1C0A9F138(v454 + v453[23], v461);
  uint64_t v364 = v460;
  sub_1C0A9F138(v452 + v362[23], v460);
  uint64_t v365 = v470;
  uint64_t v366 = v470 + *(int *)(v558 + 48);
  sub_1C0A9F138(v363, v470);
  sub_1C0A9F138(v364, v366);
  if (v293(v365, 1, v557) == 1)
  {
    sub_1BFF511D4(v460, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v461, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v366, 1, v557) == 1)
    {
      sub_1BFF511D4(v470, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_126;
    }
    goto LABEL_124;
  }
  sub_1C0A9F138(v470, v462);
  if (v293(v366, 1, v557) == 1)
  {
    sub_1BFF511D4(v460, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v461, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v462, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_124:
    uint64_t v302 = &v502;
    goto LABEL_195;
  }
  uint64_t v367 = v555;
  sub_1C0AB0F8C(v366, v555);
  uint64_t v368 = v462;
  char v369 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v462, v367);
  sub_1BFFAEED8(v367, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v460, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v461, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v368, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v470, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v369 & 1) == 0) {
    return 0;
  }
LABEL_126:
  uint64_t v370 = v453;
  uint64_t v371 = v464;
  sub_1C0A9F138(v454 + v453[24], v464);
  uint64_t v372 = v463;
  sub_1C0A9F138(v452 + v370[24], v463);
  uint64_t v373 = v474;
  uint64_t v374 = v474 + *(int *)(v558 + 48);
  sub_1C0A9F138(v371, v474);
  sub_1C0A9F138(v372, v374);
  if (v293(v373, 1, v557) == 1)
  {
    sub_1BFF511D4(v463, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v464, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v374, 1, v557) == 1)
    {
      sub_1BFF511D4(v474, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_133;
    }
    goto LABEL_131;
  }
  sub_1C0A9F138(v474, v465);
  if (v293(v374, 1, v557) == 1)
  {
    sub_1BFF511D4(v463, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v464, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v465, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_131:
    uint64_t v302 = &v506;
    goto LABEL_195;
  }
  uint64_t v375 = v555;
  sub_1C0AB0F8C(v374, v555);
  uint64_t v376 = v465;
  char v377 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v465, v375);
  sub_1BFFAEED8(v375, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v463, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v464, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v376, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v474, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v377 & 1) == 0) {
    return 0;
  }
LABEL_133:
  v378 = v453;
  uint64_t v379 = v468;
  sub_1C0A9F138(v454 + v453[25], v468);
  uint64_t v380 = v467;
  sub_1C0A9F138(v452 + v378[25], v467);
  uint64_t v381 = v478;
  uint64_t v382 = v478 + *(int *)(v558 + 48);
  sub_1C0A9F138(v379, v478);
  sub_1C0A9F138(v380, v382);
  if (v293(v381, 1, v557) == 1)
  {
    sub_1BFF511D4(v467, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v468, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v382, 1, v557) == 1)
    {
      sub_1BFF511D4(v478, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_140;
    }
    goto LABEL_138;
  }
  sub_1C0A9F138(v478, v469);
  if (v293(v382, 1, v557) == 1)
  {
    sub_1BFF511D4(v467, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v468, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v469, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_138:
    uint64_t v302 = &v510;
    goto LABEL_195;
  }
  uint64_t v383 = v555;
  sub_1C0AB0F8C(v382, v555);
  uint64_t v384 = v469;
  char v385 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v469, v383);
  sub_1BFFAEED8(v383, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v467, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v468, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v384, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v478, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v385 & 1) == 0) {
    return 0;
  }
LABEL_140:
  uint64_t v386 = v453;
  uint64_t v387 = v472;
  sub_1C0A9F138(v454 + v453[26], v472);
  uint64_t v388 = v471;
  sub_1C0A9F138(v452 + v386[26], v471);
  uint64_t v389 = v482;
  uint64_t v390 = v482 + *(int *)(v558 + 48);
  sub_1C0A9F138(v387, v482);
  sub_1C0A9F138(v388, v390);
  if (v293(v389, 1, v557) == 1)
  {
    sub_1BFF511D4(v471, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v472, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v390, 1, v557) == 1)
    {
      sub_1BFF511D4(v482, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_147;
    }
    goto LABEL_145;
  }
  sub_1C0A9F138(v482, v473);
  if (v293(v390, 1, v557) == 1)
  {
    sub_1BFF511D4(v471, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v472, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v473, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_145:
    uint64_t v302 = &v514;
    goto LABEL_195;
  }
  uint64_t v391 = v555;
  sub_1C0AB0F8C(v390, v555);
  uint64_t v392 = v473;
  char v393 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v473, v391);
  sub_1BFFAEED8(v391, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v471, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v472, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v392, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v482, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v393 & 1) == 0) {
    return 0;
  }
LABEL_147:
  v394 = v453;
  uint64_t v395 = v476;
  sub_1C0A9F138(v454 + v453[27], v476);
  uint64_t v396 = v475;
  sub_1C0A9F138(v452 + v394[27], v475);
  uint64_t v397 = v485;
  uint64_t v398 = v485 + *(int *)(v558 + 48);
  sub_1C0A9F138(v395, v485);
  sub_1C0A9F138(v396, v398);
  if (v293(v397, 1, v557) == 1)
  {
    sub_1BFF511D4(v475, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v476, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v398, 1, v557) == 1)
    {
      sub_1BFF511D4(v485, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_154;
    }
    goto LABEL_152;
  }
  sub_1C0A9F138(v485, v477);
  if (v293(v398, 1, v557) == 1)
  {
    sub_1BFF511D4(v475, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v476, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v477, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_152:
    uint64_t v302 = &v517;
    goto LABEL_195;
  }
  uint64_t v399 = v555;
  sub_1C0AB0F8C(v398, v555);
  uint64_t v400 = v477;
  char v401 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v477, v399);
  sub_1BFFAEED8(v399, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v475, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v476, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v400, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v485, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v401 & 1) == 0) {
    return 0;
  }
LABEL_154:
  uint64_t v402 = v453;
  uint64_t v403 = v480;
  sub_1C0A9F138(v454 + v453[28], v480);
  uint64_t v404 = v479;
  sub_1C0A9F138(v452 + v402[28], v479);
  uint64_t v405 = v488;
  uint64_t v406 = v488 + *(int *)(v558 + 48);
  sub_1C0A9F138(v403, v488);
  sub_1C0A9F138(v404, v406);
  if (v293(v405, 1, v557) == 1)
  {
    sub_1BFF511D4(v479, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v480, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v406, 1, v557) == 1)
    {
      sub_1BFF511D4(v488, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_161;
    }
    goto LABEL_159;
  }
  sub_1C0A9F138(v488, v481);
  if (v293(v406, 1, v557) == 1)
  {
    sub_1BFF511D4(v479, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v480, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v481, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_159:
    uint64_t v302 = &v520;
    goto LABEL_195;
  }
  uint64_t v407 = v555;
  sub_1C0AB0F8C(v406, v555);
  uint64_t v408 = v481;
  char v409 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v481, v407);
  sub_1BFFAEED8(v407, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v479, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v480, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v408, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v488, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v409 & 1) == 0) {
    return 0;
  }
LABEL_161:
  v410 = v453;
  uint64_t v411 = v483;
  sub_1C0A9F138(v454 + v453[29], v483);
  uint64_t v412 = (uint64_t)v456;
  sub_1C0A9F138(v452 + v410[29], (uint64_t)v456);
  uint64_t v413 = v491;
  uint64_t v414 = v491 + *(int *)(v558 + 48);
  sub_1C0A9F138(v411, v491);
  sub_1C0A9F138(v412, v414);
  if (v293(v413, 1, v557) == 1)
  {
    sub_1BFF511D4((uint64_t)v456, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v483, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v414, 1, v557) == 1)
    {
      sub_1BFF511D4(v491, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_168;
    }
    goto LABEL_166;
  }
  sub_1C0A9F138(v491, v484);
  if (v293(v414, 1, v557) == 1)
  {
    sub_1BFF511D4((uint64_t)v456, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v483, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v484, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_166:
    uint64_t v302 = &v523;
    goto LABEL_195;
  }
  uint64_t v415 = v555;
  sub_1C0AB0F8C(v414, v555);
  uint64_t v416 = v484;
  char v417 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v484, v415);
  sub_1BFFAEED8(v415, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4((uint64_t)v456, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v483, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v416, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v491, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v417 & 1) == 0) {
    return 0;
  }
LABEL_168:
  uint64_t v418 = v453;
  uint64_t v419 = v487;
  sub_1C0A9F138(v454 + v453[30], v487);
  uint64_t v420 = v486;
  sub_1C0A9F138(v452 + v418[30], v486);
  uint64_t v421 = v494;
  uint64_t v422 = v494 + *(int *)(v558 + 48);
  sub_1C0A9F138(v419, v494);
  sub_1C0A9F138(v420, v422);
  if (v293(v421, 1, v557) == 1)
  {
    sub_1BFF511D4(v486, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v487, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v422, 1, v557) == 1)
    {
      sub_1BFF511D4(v494, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_175;
    }
    goto LABEL_173;
  }
  sub_1C0A9F138(v494, v489);
  if (v293(v422, 1, v557) == 1)
  {
    sub_1BFF511D4(v486, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v487, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v489, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_173:
    uint64_t v302 = &v526;
    goto LABEL_195;
  }
  uint64_t v423 = v555;
  sub_1C0AB0F8C(v422, v555);
  uint64_t v424 = v489;
  char v425 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v489, v423);
  sub_1BFFAEED8(v423, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v486, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v487, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v424, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v494, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v425 & 1) == 0) {
    return 0;
  }
LABEL_175:
  v426 = v453;
  uint64_t v427 = v492;
  sub_1C0A9F138(v454 + v453[31], v492);
  uint64_t v428 = v490;
  sub_1C0A9F138(v452 + v426[31], v490);
  uint64_t v429 = v498;
  uint64_t v430 = v498 + *(int *)(v558 + 48);
  sub_1C0A9F138(v427, v498);
  sub_1C0A9F138(v428, v430);
  if (v293(v429, 1, v557) == 1)
  {
    sub_1BFF511D4(v490, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v492, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v430, 1, v557) == 1)
    {
      sub_1BFF511D4(v498, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_182;
    }
    goto LABEL_180;
  }
  sub_1C0A9F138(v498, v493);
  if (v293(v430, 1, v557) == 1)
  {
    sub_1BFF511D4(v490, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v492, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v493, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_180:
    uint64_t v302 = &v530;
    goto LABEL_195;
  }
  uint64_t v431 = v555;
  sub_1C0AB0F8C(v430, v555);
  uint64_t v432 = v493;
  char v433 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v493, v431);
  sub_1BFFAEED8(v431, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v490, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v492, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v432, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v498, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v433 & 1) == 0) {
    return 0;
  }
LABEL_182:
  uint64_t v434 = v453;
  uint64_t v435 = v496;
  sub_1C0A9F138(v454 + v453[32], v496);
  uint64_t v436 = v495;
  sub_1C0A9F138(v452 + v434[32], v495);
  uint64_t v437 = v502;
  uint64_t v438 = v502 + *(int *)(v558 + 48);
  sub_1C0A9F138(v435, v502);
  sub_1C0A9F138(v436, v438);
  if (v293(v437, 1, v557) != 1)
  {
    sub_1C0A9F138(v502, v497);
    if (v293(v438, 1, v557) != 1)
    {
      uint64_t v439 = v555;
      sub_1C0AB0F8C(v438, v555);
      uint64_t v440 = v497;
      char v441 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v497, v439);
      sub_1BFFAEED8(v439, (uint64_t (*)(void))type metadata accessor for FormatURL);
      sub_1BFF511D4(v495, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      sub_1BFF511D4(v496, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      sub_1BFFAEED8(v440, (uint64_t (*)(void))type metadata accessor for FormatURL);
      sub_1BFF511D4(v502, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      if ((v441 & 1) == 0) {
        return 0;
      }
      goto LABEL_189;
    }
    sub_1BFF511D4(v495, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v496, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v497, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_187;
  }
  sub_1BFF511D4(v495, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v496, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v293(v438, 1, v557) != 1)
  {
LABEL_187:
    uint64_t v302 = &v534;
    goto LABEL_195;
  }
  sub_1BFF511D4(v502, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
LABEL_189:
  uint64_t v442 = v453;
  uint64_t v443 = v500;
  sub_1C0A9F138(v454 + v453[33], v500);
  uint64_t v444 = v499;
  sub_1C0A9F138(v452 + v442[33], v499);
  uint64_t v445 = (uint64_t)v451;
  uint64_t v446 = (uint64_t)&v451[*(int *)(v558 + 48)];
  sub_1C0A9F138(v443, (uint64_t)v451);
  sub_1C0A9F138(v444, v446);
  if (v293(v445, 1, v557) == 1)
  {
    sub_1BFF511D4(v499, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v500, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v446, 1, v557) == 1)
    {
      sub_1BFF511D4((uint64_t)v451, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      return 1;
    }
    goto LABEL_194;
  }
  sub_1C0A9F138((uint64_t)v451, v501);
  if (v293(v446, 1, v557) == 1)
  {
    sub_1BFF511D4(v499, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFF511D4(v500, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BFFAEED8(v501, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_194:
    uint64_t v302 = &v483;
    goto LABEL_195;
  }
  uint64_t v447 = v555;
  sub_1C0AB0F8C(v446, v555);
  uint64_t v448 = v501;
  char v449 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v501, v447);
  sub_1BFFAEED8(v447, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4(v499, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFF511D4(v500, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BFFAEED8(v448, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF511D4((uint64_t)v451, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  return (v449 & 1) != 0;
}

uint64_t type metadata accessor for FormatRemoteVideo()
{
  uint64_t result = qword_1EB87BF78;
  if (!qword_1EB87BF78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0A9F138(uint64_t a1, uint64_t a2)
{
  sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A9F1B8(uint64_t a1)
{
  uint64_t result = sub_1C0A9F288(&qword_1EA1A3110);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0A9F1FC(void *a1)
{
  a1[1] = sub_1C0A9F288(&qword_1EB8600F0);
  a1[2] = sub_1C0A9F288(&qword_1EA1A0EB0);
  uint64_t result = sub_1C0A9F288(&qword_1EA1A3118);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0A9F288(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatRemoteVideo();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatRemoteVideo(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = *(void *)a2;
      uint64_t v12 = *(void *)(a2 + 8);
      uint64_t v13 = *(void *)(a2 + 16);
      char v14 = *(unsigned char *)(a2 + 24);
      sub_1BFE86E48(*(void *)a2, v12, v13, v14);
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(unsigned char *)(a1 + 24) = v14;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v9 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v9;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v15 = sub_1C1515FDC();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(a1 + *(int *)(v16 + 20)) = *(void *)(a2 + *(int *)(v16 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[5];
    uint64_t v18 = a1 + v17;
    uint64_t v19 = a2 + v17;
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 2)
    {
      uint64_t v22 = *(void *)v19;
      uint64_t v23 = *(void *)(v19 + 8);
      uint64_t v24 = *(void *)(v19 + 16);
      char v25 = *(unsigned char *)(v19 + 24);
      sub_1BFE86E48(v22, v23, v24, v25);
      *(void *)uint64_t v18 = v22;
      *(void *)(v18 + 8) = v23;
      *(void *)(v18 + 16) = v24;
      *(unsigned char *)(v18 + 24) = v25;
    }
    else
    {
      if (v20 == 1)
      {
        uint64_t v21 = *(void *)(v19 + 8);
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = v21;
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v26 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v18, v19, v26);
        uint64_t v27 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v18 + *(int *)(v27 + 20)) = *(void *)(v19 + *(int *)(v27 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = a3[6];
    uint64_t v29 = a1 + v28;
    uint64_t v30 = a2 + v28;
    int v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 2)
    {
      uint64_t v33 = *(void *)v30;
      uint64_t v34 = *(void *)(v30 + 8);
      uint64_t v35 = *(void *)(v30 + 16);
      char v36 = *(unsigned char *)(v30 + 24);
      sub_1BFE86E48(v33, v34, v35, v36);
      *(void *)uint64_t v29 = v33;
      *(void *)(v29 + 8) = v34;
      *(void *)(v29 + 16) = v35;
      *(unsigned char *)(v29 + 24) = v36;
    }
    else
    {
      if (v31 == 1)
      {
        uint64_t v32 = *(void *)(v30 + 8);
        *(void *)uint64_t v29 = *(void *)v30;
        *(void *)(v29 + 8) = v32;
        *(void *)(v29 + 16) = *(void *)(v30 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v37 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v29, v30, v37);
        uint64_t v38 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v29 + *(int *)(v38 + 20)) = *(void *)(v30 + *(int *)(v38 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = a3[7];
    uint64_t v40 = (uint64_t *)(a1 + v39);
    uint64_t v41 = (uint64_t *)(a2 + v39);
    uint64_t v366 = *(void *)(v7 - 8);
    uint64_t v42 = *(unsigned int (**)(void, void, void))(v366 + 48);
    uint64_t v365 = v42;
    if (v42(a2 + v39, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      int v44 = swift_getEnumCaseMultiPayload();
      if (v44 == 2)
      {
        uint64_t v46 = *v41;
        uint64_t v47 = v41[1];
        uint64_t v48 = v41[2];
        char v49 = *((unsigned char *)v41 + 24);
        sub_1BFE86E48(v46, v47, v48, v49);
        uint64_t *v40 = v46;
        v40[1] = v47;
        uint64_t v42 = v365;
        v40[2] = v48;
        *((unsigned char *)v40 + 24) = v49;
      }
      else
      {
        if (v44 == 1)
        {
          uint64_t v45 = v41[1];
          uint64_t *v40 = *v41;
          v40[1] = v45;
          v40[2] = v41[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v50 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v41, v50);
          uint64_t v51 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v40 + *(int *)(v51 + 20)) = *(uint64_t *)((char *)v41 + *(int *)(v51 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v40, 0, 1, v7);
    }
    uint64_t v52 = a3[8];
    uint64_t v53 = (uint64_t *)(a1 + v52);
    uint64_t v54 = (uint64_t *)(a2 + v52);
    if (v42(a2 + v52, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      int v56 = swift_getEnumCaseMultiPayload();
      if (v56 == 2)
      {
        uint64_t v58 = *v54;
        uint64_t v59 = v54[1];
        uint64_t v60 = v54[2];
        char v61 = *((unsigned char *)v54 + 24);
        sub_1BFE86E48(v58, v59, v60, v61);
        *uint64_t v53 = v58;
        v53[1] = v59;
        uint64_t v42 = v365;
        v53[2] = v60;
        *((unsigned char *)v53 + 24) = v61;
      }
      else
      {
        if (v56 == 1)
        {
          uint64_t v57 = v54[1];
          *uint64_t v53 = *v54;
          v53[1] = v57;
          v53[2] = v54[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v62 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v62 - 8) + 16))(v53, v54, v62);
          uint64_t v63 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v53 + *(int *)(v63 + 20)) = *(uint64_t *)((char *)v54 + *(int *)(v63 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v53, 0, 1, v7);
    }
    uint64_t v64 = a3[9];
    uint64_t v65 = (uint64_t *)(a1 + v64);
    uint64_t v66 = (uint64_t *)(a2 + v64);
    if (v42(a2 + v64, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      int v68 = swift_getEnumCaseMultiPayload();
      if (v68 == 2)
      {
        uint64_t v70 = *v66;
        uint64_t v71 = v66[1];
        uint64_t v72 = v66[2];
        char v73 = *((unsigned char *)v66 + 24);
        sub_1BFE86E48(v70, v71, v72, v73);
        *uint64_t v65 = v70;
        v65[1] = v71;
        uint64_t v42 = v365;
        _OWORD v65[2] = v72;
        *((unsigned char *)v65 + 24) = v73;
      }
      else
      {
        if (v68 == 1)
        {
          uint64_t v69 = v66[1];
          *uint64_t v65 = *v66;
          v65[1] = v69;
          _OWORD v65[2] = v66[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v74 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v74 - 8) + 16))(v65, v66, v74);
          uint64_t v75 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v65 + *(int *)(v75 + 20)) = *(uint64_t *)((char *)v66 + *(int *)(v75 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v65, 0, 1, v7);
    }
    uint64_t v76 = a3[10];
    uint64_t v77 = (uint64_t *)(a1 + v76);
    uint64_t v78 = (uint64_t *)(a2 + v76);
    if (v42(a2 + v76, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      int v80 = swift_getEnumCaseMultiPayload();
      if (v80 == 2)
      {
        uint64_t v82 = *v78;
        uint64_t v83 = v78[1];
        uint64_t v84 = v78[2];
        char v85 = *((unsigned char *)v78 + 24);
        sub_1BFE86E48(v82, v83, v84, v85);
        *uint64_t v77 = v82;
        v77[1] = v83;
        uint64_t v42 = v365;
        v77[2] = v84;
        *((unsigned char *)v77 + 24) = v85;
      }
      else
      {
        if (v80 == 1)
        {
          uint64_t v81 = v78[1];
          *uint64_t v77 = *v78;
          v77[1] = v81;
          v77[2] = v78[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v86 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v86 - 8) + 16))(v77, v78, v86);
          uint64_t v87 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v77 + *(int *)(v87 + 20)) = *(uint64_t *)((char *)v78 + *(int *)(v87 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v77, 0, 1, v7);
    }
    uint64_t v88 = a3[11];
    uint64_t v89 = (uint64_t *)(a1 + v88);
    uint64_t v90 = (uint64_t *)(a2 + v88);
    if (v42(a2 + v88, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      int v92 = swift_getEnumCaseMultiPayload();
      if (v92 == 2)
      {
        uint64_t v94 = *v90;
        uint64_t v95 = v90[1];
        uint64_t v96 = v90[2];
        char v97 = *((unsigned char *)v90 + 24);
        sub_1BFE86E48(v94, v95, v96, v97);
        uint64_t *v89 = v94;
        v89[1] = v95;
        uint64_t v42 = v365;
        _OWORD v89[2] = v96;
        *((unsigned char *)v89 + 24) = v97;
      }
      else
      {
        if (v92 == 1)
        {
          uint64_t v93 = v90[1];
          uint64_t *v89 = *v90;
          v89[1] = v93;
          _OWORD v89[2] = v90[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v98 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v98 - 8) + 16))(v89, v90, v98);
          uint64_t v99 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v89 + *(int *)(v99 + 20)) = *(uint64_t *)((char *)v90 + *(int *)(v99 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v89, 0, 1, v7);
    }
    uint64_t v100 = a3[12];
    uint64_t v101 = (uint64_t *)(a1 + v100);
    uint64_t v102 = (uint64_t *)(a2 + v100);
    if (v42(a2 + v100, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
    }
    else
    {
      int v104 = swift_getEnumCaseMultiPayload();
      if (v104 == 2)
      {
        uint64_t v106 = *v102;
        uint64_t v107 = v102[1];
        uint64_t v108 = v102[2];
        char v109 = *((unsigned char *)v102 + 24);
        sub_1BFE86E48(v106, v107, v108, v109);
        *uint64_t v101 = v106;
        v101[1] = v107;
        uint64_t v42 = v365;
        v101[2] = v108;
        *((unsigned char *)v101 + 24) = v109;
      }
      else
      {
        if (v104 == 1)
        {
          uint64_t v105 = v102[1];
          *uint64_t v101 = *v102;
          v101[1] = v105;
          v101[2] = v102[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v110 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v110 - 8) + 16))(v101, v102, v110);
          uint64_t v111 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v101 + *(int *)(v111 + 20)) = *(uint64_t *)((char *)v102 + *(int *)(v111 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v101, 0, 1, v7);
    }
    uint64_t v112 = a3[13];
    uint64_t v113 = (uint64_t *)(a1 + v112);
    uint64_t v114 = (uint64_t *)(a2 + v112);
    if (v42(a2 + v112, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
    }
    else
    {
      int v116 = swift_getEnumCaseMultiPayload();
      if (v116 == 2)
      {
        uint64_t v118 = *v114;
        uint64_t v119 = v114[1];
        uint64_t v120 = v114[2];
        char v121 = *((unsigned char *)v114 + 24);
        sub_1BFE86E48(v118, v119, v120, v121);
        *uint64_t v113 = v118;
        v113[1] = v119;
        uint64_t v42 = v365;
        v113[2] = v120;
        *((unsigned char *)v113 + 24) = v121;
      }
      else
      {
        if (v116 == 1)
        {
          uint64_t v117 = v114[1];
          *uint64_t v113 = *v114;
          v113[1] = v117;
          v113[2] = v114[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v122 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v122 - 8) + 16))(v113, v114, v122);
          uint64_t v123 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v113 + *(int *)(v123 + 20)) = *(uint64_t *)((char *)v114 + *(int *)(v123 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v113, 0, 1, v7);
    }
    uint64_t v124 = a3[14];
    uint64_t v125 = (uint64_t *)(a1 + v124);
    uint64_t v126 = (uint64_t *)(a2 + v124);
    if (v42(a2 + v124, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
    }
    else
    {
      int v128 = swift_getEnumCaseMultiPayload();
      if (v128 == 2)
      {
        uint64_t v130 = *v126;
        uint64_t v131 = v126[1];
        uint64_t v132 = v126[2];
        char v133 = *((unsigned char *)v126 + 24);
        sub_1BFE86E48(v130, v131, v132, v133);
        *uint64_t v125 = v130;
        v125[1] = v131;
        uint64_t v42 = v365;
        v125[2] = v132;
        *((unsigned char *)v125 + 24) = v133;
      }
      else
      {
        if (v128 == 1)
        {
          uint64_t v129 = v126[1];
          *uint64_t v125 = *v126;
          v125[1] = v129;
          v125[2] = v126[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v134 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v134 - 8) + 16))(v125, v126, v134);
          uint64_t v135 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v125 + *(int *)(v135 + 20)) = *(uint64_t *)((char *)v126 + *(int *)(v135 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v125, 0, 1, v7);
    }
    uint64_t v136 = a3[15];
    uint64_t v137 = (uint64_t *)(a1 + v136);
    uint64_t v138 = (uint64_t *)(a2 + v136);
    if (v42(a2 + v136, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
    }
    else
    {
      int v140 = swift_getEnumCaseMultiPayload();
      if (v140 == 2)
      {
        uint64_t v142 = *v138;
        uint64_t v143 = v138[1];
        uint64_t v144 = v138[2];
        char v145 = *((unsigned char *)v138 + 24);
        sub_1BFE86E48(v142, v143, v144, v145);
        *uint64_t v137 = v142;
        v137[1] = v143;
        uint64_t v42 = v365;
        v137[2] = v144;
        *((unsigned char *)v137 + 24) = v145;
      }
      else
      {
        if (v140 == 1)
        {
          uint64_t v141 = v138[1];
          *uint64_t v137 = *v138;
          v137[1] = v141;
          v137[2] = v138[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v146 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v146 - 8) + 16))(v137, v138, v146);
          uint64_t v147 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v137 + *(int *)(v147 + 20)) = *(uint64_t *)((char *)v138 + *(int *)(v147 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v137, 0, 1, v7);
    }
    uint64_t v148 = a3[16];
    uint64_t v149 = (uint64_t *)(a1 + v148);
    uint64_t v150 = (uint64_t *)(a2 + v148);
    if (v42(a2 + v148, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
    }
    else
    {
      int v152 = swift_getEnumCaseMultiPayload();
      if (v152 == 2)
      {
        uint64_t v154 = *v150;
        uint64_t v155 = v150[1];
        uint64_t v156 = v150[2];
        char v157 = *((unsigned char *)v150 + 24);
        sub_1BFE86E48(v154, v155, v156, v157);
        uint64_t *v149 = v154;
        v149[1] = v155;
        uint64_t v42 = v365;
        v149[2] = v156;
        *((unsigned char *)v149 + 24) = v157;
      }
      else
      {
        if (v152 == 1)
        {
          uint64_t v153 = v150[1];
          uint64_t *v149 = *v150;
          v149[1] = v153;
          v149[2] = v150[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v158 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v158 - 8) + 16))(v149, v150, v158);
          uint64_t v159 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v149 + *(int *)(v159 + 20)) = *(uint64_t *)((char *)v150 + *(int *)(v159 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v149, 0, 1, v7);
    }
    uint64_t v160 = a3[17];
    uint64_t v161 = (uint64_t *)(a1 + v160);
    uint64_t v162 = (uint64_t *)(a2 + v160);
    if (v42(a2 + v160, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
    }
    else
    {
      int v164 = swift_getEnumCaseMultiPayload();
      if (v164 == 2)
      {
        uint64_t v166 = *v162;
        uint64_t v167 = v162[1];
        uint64_t v168 = v162[2];
        char v169 = *((unsigned char *)v162 + 24);
        sub_1BFE86E48(v166, v167, v168, v169);
        *uint64_t v161 = v166;
        v161[1] = v167;
        uint64_t v42 = v365;
        v161[2] = v168;
        *((unsigned char *)v161 + 24) = v169;
      }
      else
      {
        if (v164 == 1)
        {
          uint64_t v165 = v162[1];
          *uint64_t v161 = *v162;
          v161[1] = v165;
          v161[2] = v162[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v170 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v170 - 8) + 16))(v161, v162, v170);
          uint64_t v171 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v161 + *(int *)(v171 + 20)) = *(uint64_t *)((char *)v162 + *(int *)(v171 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v161, 0, 1, v7);
    }
    uint64_t v172 = a3[18];
    uint64_t v173 = (uint64_t *)(a1 + v172);
    uint64_t v174 = (uint64_t *)(a2 + v172);
    if (v42(a2 + v172, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
    }
    else
    {
      int v176 = swift_getEnumCaseMultiPayload();
      if (v176 == 2)
      {
        uint64_t v178 = *v174;
        uint64_t v179 = v174[1];
        uint64_t v180 = v174[2];
        char v181 = *((unsigned char *)v174 + 24);
        sub_1BFE86E48(v178, v179, v180, v181);
        *uint64_t v173 = v178;
        v173[1] = v179;
        uint64_t v42 = v365;
        v173[2] = v180;
        *((unsigned char *)v173 + 24) = v181;
      }
      else
      {
        if (v176 == 1)
        {
          uint64_t v177 = v174[1];
          *uint64_t v173 = *v174;
          v173[1] = v177;
          v173[2] = v174[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v182 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v182 - 8) + 16))(v173, v174, v182);
          uint64_t v183 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v173 + *(int *)(v183 + 20)) = *(uint64_t *)((char *)v174 + *(int *)(v183 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v173, 0, 1, v7);
    }
    uint64_t v184 = a3[19];
    uint64_t v185 = (uint64_t *)(a1 + v184);
    uint64_t v186 = (uint64_t *)(a2 + v184);
    if (v42(a2 + v184, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
    }
    else
    {
      int v188 = swift_getEnumCaseMultiPayload();
      if (v188 == 2)
      {
        uint64_t v190 = *v186;
        uint64_t v191 = v186[1];
        uint64_t v192 = v186[2];
        char v193 = *((unsigned char *)v186 + 24);
        sub_1BFE86E48(v190, v191, v192, v193);
        *uint64_t v185 = v190;
        v185[1] = v191;
        uint64_t v42 = v365;
        v185[2] = v192;
        *((unsigned char *)v185 + 24) = v193;
      }
      else
      {
        if (v188 == 1)
        {
          uint64_t v189 = v186[1];
          *uint64_t v185 = *v186;
          v185[1] = v189;
          v185[2] = v186[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v194 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v194 - 8) + 16))(v185, v186, v194);
          uint64_t v195 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v185 + *(int *)(v195 + 20)) = *(uint64_t *)((char *)v186 + *(int *)(v195 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v185, 0, 1, v7);
    }
    uint64_t v196 = a3[20];
    uint64_t v197 = (uint64_t *)(a1 + v196);
    uint64_t v198 = (uint64_t *)(a2 + v196);
    if (v42(a2 + v196, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
    }
    else
    {
      int v200 = swift_getEnumCaseMultiPayload();
      if (v200 == 2)
      {
        uint64_t v202 = *v198;
        uint64_t v203 = v198[1];
        uint64_t v204 = v198[2];
        char v205 = *((unsigned char *)v198 + 24);
        sub_1BFE86E48(v202, v203, v204, v205);
        *uint64_t v197 = v202;
        v197[1] = v203;
        uint64_t v42 = v365;
        v197[2] = v204;
        *((unsigned char *)v197 + 24) = v205;
      }
      else
      {
        if (v200 == 1)
        {
          uint64_t v201 = v198[1];
          *uint64_t v197 = *v198;
          v197[1] = v201;
          v197[2] = v198[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v206 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v206 - 8) + 16))(v197, v198, v206);
          uint64_t v207 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v197 + *(int *)(v207 + 20)) = *(uint64_t *)((char *)v198 + *(int *)(v207 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v197, 0, 1, v7);
    }
    uint64_t v208 = a3[21];
    uint64_t v209 = (uint64_t *)(a1 + v208);
    uint64_t v210 = (uint64_t *)(a2 + v208);
    if (v42(a2 + v208, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v209, v210, *(void *)(*(void *)(v211 - 8) + 64));
    }
    else
    {
      int v212 = swift_getEnumCaseMultiPayload();
      if (v212 == 2)
      {
        uint64_t v214 = *v210;
        uint64_t v215 = v210[1];
        uint64_t v216 = v210[2];
        char v217 = *((unsigned char *)v210 + 24);
        sub_1BFE86E48(v214, v215, v216, v217);
        *uint64_t v209 = v214;
        v209[1] = v215;
        uint64_t v42 = v365;
        v209[2] = v216;
        *((unsigned char *)v209 + 24) = v217;
      }
      else
      {
        if (v212 == 1)
        {
          uint64_t v213 = v210[1];
          *uint64_t v209 = *v210;
          v209[1] = v213;
          v209[2] = v210[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v218 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v218 - 8) + 16))(v209, v210, v218);
          uint64_t v219 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v209 + *(int *)(v219 + 20)) = *(uint64_t *)((char *)v210 + *(int *)(v219 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v209, 0, 1, v7);
    }
    uint64_t v220 = a3[22];
    uint64_t v221 = (uint64_t *)(a1 + v220);
    int v222 = (uint64_t *)(a2 + v220);
    if (v42(a2 + v220, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v221, v222, *(void *)(*(void *)(v223 - 8) + 64));
    }
    else
    {
      int v224 = swift_getEnumCaseMultiPayload();
      if (v224 == 2)
      {
        uint64_t v226 = *v222;
        uint64_t v227 = v222[1];
        uint64_t v228 = v222[2];
        char v229 = *((unsigned char *)v222 + 24);
        sub_1BFE86E48(v226, v227, v228, v229);
        *uint64_t v221 = v226;
        v221[1] = v227;
        uint64_t v42 = v365;
        v221[2] = v228;
        *((unsigned char *)v221 + 24) = v229;
      }
      else
      {
        if (v224 == 1)
        {
          uint64_t v225 = v222[1];
          *uint64_t v221 = *v222;
          v221[1] = v225;
          v221[2] = v222[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v230 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v230 - 8) + 16))(v221, v222, v230);
          uint64_t v231 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v221 + *(int *)(v231 + 20)) = *(uint64_t *)((char *)v222 + *(int *)(v231 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v221, 0, 1, v7);
    }
    uint64_t v232 = a3[23];
    uint64_t v233 = (uint64_t *)(a1 + v232);
    uint64_t v234 = (uint64_t *)(a2 + v232);
    if (v42(a2 + v232, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v233, v234, *(void *)(*(void *)(v235 - 8) + 64));
    }
    else
    {
      int v236 = swift_getEnumCaseMultiPayload();
      if (v236 == 2)
      {
        uint64_t v238 = *v234;
        uint64_t v239 = v234[1];
        uint64_t v240 = v234[2];
        char v241 = *((unsigned char *)v234 + 24);
        sub_1BFE86E48(v238, v239, v240, v241);
        *uint64_t v233 = v238;
        v233[1] = v239;
        uint64_t v42 = v365;
        v233[2] = v240;
        *((unsigned char *)v233 + 24) = v241;
      }
      else
      {
        if (v236 == 1)
        {
          uint64_t v237 = v234[1];
          *uint64_t v233 = *v234;
          v233[1] = v237;
          v233[2] = v234[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v242 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v242 - 8) + 16))(v233, v234, v242);
          uint64_t v243 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v233 + *(int *)(v243 + 20)) = *(uint64_t *)((char *)v234 + *(int *)(v243 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v233, 0, 1, v7);
    }
    uint64_t v244 = a3[24];
    uint64_t v245 = (uint64_t *)(a1 + v244);
    uint64_t v246 = (uint64_t *)(a2 + v244);
    if (v42(a2 + v244, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v245, v246, *(void *)(*(void *)(v247 - 8) + 64));
    }
    else
    {
      int v248 = swift_getEnumCaseMultiPayload();
      if (v248 == 2)
      {
        uint64_t v250 = *v246;
        uint64_t v251 = v246[1];
        uint64_t v252 = v246[2];
        char v253 = *((unsigned char *)v246 + 24);
        sub_1BFE86E48(v250, v251, v252, v253);
        *uint64_t v245 = v250;
        v245[1] = v251;
        uint64_t v42 = v365;
        v245[2] = v252;
        *((unsigned char *)v245 + 24) = v253;
      }
      else
      {
        if (v248 == 1)
        {
          uint64_t v249 = v246[1];
          *uint64_t v245 = *v246;
          v245[1] = v249;
          v245[2] = v246[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v254 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v254 - 8) + 16))(v245, v246, v254);
          uint64_t v255 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v245 + *(int *)(v255 + 20)) = *(uint64_t *)((char *)v246 + *(int *)(v255 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v245, 0, 1, v7);
    }
    uint64_t v256 = a3[25];
    uint64_t v257 = (uint64_t *)(a1 + v256);
    uint64_t v258 = (uint64_t *)(a2 + v256);
    if (v42(a2 + v256, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v257, v258, *(void *)(*(void *)(v259 - 8) + 64));
    }
    else
    {
      int v260 = swift_getEnumCaseMultiPayload();
      if (v260 == 2)
      {
        uint64_t v262 = *v258;
        uint64_t v263 = v258[1];
        uint64_t v264 = v258[2];
        char v265 = *((unsigned char *)v258 + 24);
        sub_1BFE86E48(v262, v263, v264, v265);
        *uint64_t v257 = v262;
        v257[1] = v263;
        uint64_t v42 = v365;
        v257[2] = v264;
        *((unsigned char *)v257 + 24) = v265;
      }
      else
      {
        if (v260 == 1)
        {
          uint64_t v261 = v258[1];
          *uint64_t v257 = *v258;
          v257[1] = v261;
          v257[2] = v258[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v266 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v266 - 8) + 16))(v257, v258, v266);
          uint64_t v267 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v257 + *(int *)(v267 + 20)) = *(uint64_t *)((char *)v258 + *(int *)(v267 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v257, 0, 1, v7);
    }
    uint64_t v268 = a3[26];
    uint64_t v269 = (uint64_t *)(a1 + v268);
    uint64_t v270 = (uint64_t *)(a2 + v268);
    if (v42(a2 + v268, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v269, v270, *(void *)(*(void *)(v271 - 8) + 64));
    }
    else
    {
      int v272 = swift_getEnumCaseMultiPayload();
      if (v272 == 2)
      {
        uint64_t v274 = *v270;
        uint64_t v275 = v270[1];
        uint64_t v276 = v270[2];
        char v277 = *((unsigned char *)v270 + 24);
        sub_1BFE86E48(v274, v275, v276, v277);
        *uint64_t v269 = v274;
        v269[1] = v275;
        uint64_t v42 = v365;
        v269[2] = v276;
        *((unsigned char *)v269 + 24) = v277;
      }
      else
      {
        if (v272 == 1)
        {
          uint64_t v273 = v270[1];
          *uint64_t v269 = *v270;
          v269[1] = v273;
          v269[2] = v270[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v278 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v278 - 8) + 16))(v269, v270, v278);
          uint64_t v279 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v269 + *(int *)(v279 + 20)) = *(uint64_t *)((char *)v270 + *(int *)(v279 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v269, 0, 1, v7);
    }
    uint64_t v280 = a3[27];
    uint64_t v281 = (uint64_t *)(a1 + v280);
    uint64_t v282 = (uint64_t *)(a2 + v280);
    if (v42(a2 + v280, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v281, v282, *(void *)(*(void *)(v283 - 8) + 64));
    }
    else
    {
      int v284 = swift_getEnumCaseMultiPayload();
      if (v284 == 2)
      {
        uint64_t v286 = *v282;
        uint64_t v287 = v282[1];
        uint64_t v288 = v282[2];
        char v289 = *((unsigned char *)v282 + 24);
        sub_1BFE86E48(v286, v287, v288, v289);
        uint64_t *v281 = v286;
        v281[1] = v287;
        uint64_t v42 = v365;
        v281[2] = v288;
        *((unsigned char *)v281 + 24) = v289;
      }
      else
      {
        if (v284 == 1)
        {
          uint64_t v285 = v282[1];
          uint64_t *v281 = *v282;
          v281[1] = v285;
          v281[2] = v282[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v290 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v290 - 8) + 16))(v281, v282, v290);
          uint64_t v291 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v281 + *(int *)(v291 + 20)) = *(uint64_t *)((char *)v282 + *(int *)(v291 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v281, 0, 1, v7);
    }
    uint64_t v292 = a3[28];
    uint64_t v293 = (uint64_t *)(a1 + v292);
    uint64_t v294 = (uint64_t *)(a2 + v292);
    if (v42(a2 + v292, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v293, v294, *(void *)(*(void *)(v295 - 8) + 64));
    }
    else
    {
      int v296 = swift_getEnumCaseMultiPayload();
      if (v296 == 2)
      {
        uint64_t v298 = *v294;
        uint64_t v299 = v294[1];
        uint64_t v300 = v294[2];
        char v301 = *((unsigned char *)v294 + 24);
        sub_1BFE86E48(v298, v299, v300, v301);
        *uint64_t v293 = v298;
        v293[1] = v299;
        uint64_t v42 = v365;
        v293[2] = v300;
        *((unsigned char *)v293 + 24) = v301;
      }
      else
      {
        if (v296 == 1)
        {
          uint64_t v297 = v294[1];
          *uint64_t v293 = *v294;
          v293[1] = v297;
          v293[2] = v294[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v302 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v302 - 8) + 16))(v293, v294, v302);
          uint64_t v303 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v293 + *(int *)(v303 + 20)) = *(uint64_t *)((char *)v294 + *(int *)(v303 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v293, 0, 1, v7);
    }
    uint64_t v304 = a3[29];
    char v305 = (uint64_t *)(a1 + v304);
    uint64_t v306 = (uint64_t *)(a2 + v304);
    if (v42(a2 + v304, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v305, v306, *(void *)(*(void *)(v307 - 8) + 64));
    }
    else
    {
      int v308 = swift_getEnumCaseMultiPayload();
      if (v308 == 2)
      {
        uint64_t v310 = *v306;
        uint64_t v311 = v306[1];
        uint64_t v312 = v306[2];
        char v313 = *((unsigned char *)v306 + 24);
        sub_1BFE86E48(v310, v311, v312, v313);
        uint64_t *v305 = v310;
        v305[1] = v311;
        uint64_t v42 = v365;
        v305[2] = v312;
        *((unsigned char *)v305 + 24) = v313;
      }
      else
      {
        if (v308 == 1)
        {
          uint64_t v309 = v306[1];
          uint64_t *v305 = *v306;
          v305[1] = v309;
          v305[2] = v306[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v314 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v314 - 8) + 16))(v305, v306, v314);
          uint64_t v315 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v305 + *(int *)(v315 + 20)) = *(uint64_t *)((char *)v306 + *(int *)(v315 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v305, 0, 1, v7);
    }
    uint64_t v316 = a3[30];
    uint64_t v317 = (uint64_t *)(a1 + v316);
    uint64_t v318 = (uint64_t *)(a2 + v316);
    if (v42(a2 + v316, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v317, v318, *(void *)(*(void *)(v319 - 8) + 64));
    }
    else
    {
      int v320 = swift_getEnumCaseMultiPayload();
      if (v320 == 2)
      {
        uint64_t v322 = *v318;
        uint64_t v323 = v318[1];
        uint64_t v324 = v318[2];
        char v325 = *((unsigned char *)v318 + 24);
        sub_1BFE86E48(v322, v323, v324, v325);
        *uint64_t v317 = v322;
        v317[1] = v323;
        uint64_t v42 = v365;
        v317[2] = v324;
        *((unsigned char *)v317 + 24) = v325;
      }
      else
      {
        if (v320 == 1)
        {
          uint64_t v321 = v318[1];
          *uint64_t v317 = *v318;
          v317[1] = v321;
          v317[2] = v318[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v326 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v326 - 8) + 16))(v317, v318, v326);
          uint64_t v327 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v317 + *(int *)(v327 + 20)) = *(uint64_t *)((char *)v318 + *(int *)(v327 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v317, 0, 1, v7);
    }
    uint64_t v328 = a3[31];
    char v329 = (uint64_t *)(a1 + v328);
    uint64_t v330 = (uint64_t *)(a2 + v328);
    if (v42(a2 + v328, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v329, v330, *(void *)(*(void *)(v331 - 8) + 64));
    }
    else
    {
      int v332 = swift_getEnumCaseMultiPayload();
      if (v332 == 2)
      {
        uint64_t v334 = *v330;
        uint64_t v335 = v330[1];
        uint64_t v336 = v330[2];
        char v337 = *((unsigned char *)v330 + 24);
        sub_1BFE86E48(v334, v335, v336, v337);
        uint64_t *v329 = v334;
        v329[1] = v335;
        uint64_t v42 = v365;
        v329[2] = v336;
        *((unsigned char *)v329 + 24) = v337;
      }
      else
      {
        if (v332 == 1)
        {
          uint64_t v333 = v330[1];
          uint64_t *v329 = *v330;
          v329[1] = v333;
          v329[2] = v330[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v338 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v338 - 8) + 16))(v329, v330, v338);
          uint64_t v339 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v329 + *(int *)(v339 + 20)) = *(uint64_t *)((char *)v330 + *(int *)(v339 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v329, 0, 1, v7);
    }
    uint64_t v340 = a3[32];
    uint64_t v341 = (uint64_t *)(a1 + v340);
    uint64_t v342 = (uint64_t *)(a2 + v340);
    if (v42(a2 + v340, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v341, v342, *(void *)(*(void *)(v343 - 8) + 64));
    }
    else
    {
      int v344 = swift_getEnumCaseMultiPayload();
      if (v344 == 2)
      {
        uint64_t v346 = *v342;
        uint64_t v347 = v342[1];
        uint64_t v348 = v342[2];
        char v349 = *((unsigned char *)v342 + 24);
        sub_1BFE86E48(v346, v347, v348, v349);
        *uint64_t v341 = v346;
        v341[1] = v347;
        uint64_t v42 = v365;
        v341[2] = v348;
        *((unsigned char *)v341 + 24) = v349;
      }
      else
      {
        if (v344 == 1)
        {
          uint64_t v345 = v342[1];
          *uint64_t v341 = *v342;
          v341[1] = v345;
          v341[2] = v342[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v350 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v350 - 8) + 16))(v341, v342, v350);
          uint64_t v351 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v341 + *(int *)(v351 + 20)) = *(uint64_t *)((char *)v342 + *(int *)(v351 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v341, 0, 1, v7);
    }
    uint64_t v352 = a3[33];
    char v353 = (uint64_t *)(a1 + v352);
    v354 = (uint64_t *)(a2 + v352);
    if (v42(v354, 1, v7))
    {
      sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v353, v354, *(void *)(*(void *)(v355 - 8) + 64));
    }
    else
    {
      int v356 = swift_getEnumCaseMultiPayload();
      if (v356 == 2)
      {
        uint64_t v358 = *v354;
        uint64_t v359 = v354[1];
        uint64_t v360 = v354[2];
        char v361 = *((unsigned char *)v354 + 24);
        sub_1BFE86E48(v358, v359, v360, v361);
        uint64_t *v353 = v358;
        v353[1] = v359;
        v353[2] = v360;
        *((unsigned char *)v353 + 24) = v361;
      }
      else
      {
        if (v356 == 1)
        {
          uint64_t v357 = v354[1];
          uint64_t *v353 = *v354;
          v353[1] = v357;
          v353[2] = v354[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v362 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v362 - 8) + 16))(v353, v354, v362);
          uint64_t v363 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v353 + *(int *)(v363 + 20)) = *(uint64_t *)((char *)v354 + *(int *)(v363 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v366 + 56))(v353, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatRemoteVideo(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1BFD7418C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_8;
      }
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_8:
  uint64_t v7 = a1 + a2[5];
  int v8 = swift_getEnumCaseMultiPayload();
  if (v8 == 2)
  {
    sub_1BFD7418C(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(unsigned char *)(v7 + 24));
  }
  else
  {
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v8) {
        goto LABEL_15;
      }
      uint64_t v9 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  uint64_t v10 = a1 + a2[6];
  int v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2)
  {
    sub_1BFD7418C(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(unsigned char *)(v10 + 24));
  }
  else
  {
    if (v11 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v11) {
        goto LABEL_22;
      }
      uint64_t v12 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v13 = a1 + a2[7];
  char v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v14(v13, 1, v4))
  {
    int v42 = swift_getEnumCaseMultiPayload();
    switch(v42)
    {
      case 2:
        sub_1BFD7418C(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(unsigned char *)(v13 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v43 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v13, v43);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v15 = a1 + a2[8];
  if (!v14(v15, 1, v4))
  {
    int v44 = swift_getEnumCaseMultiPayload();
    switch(v44)
    {
      case 2:
        sub_1BFD7418C(*(void *)v15, *(void *)(v15 + 8), *(void *)(v15 + 16), *(unsigned char *)(v15 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v45 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v15, v45);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v16 = a1 + a2[9];
  if (!v14(v16, 1, v4))
  {
    int v46 = swift_getEnumCaseMultiPayload();
    switch(v46)
    {
      case 2:
        sub_1BFD7418C(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(unsigned char *)(v16 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v47 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v16, v47);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v17 = a1 + a2[10];
  if (!v14(v17, 1, v4))
  {
    int v48 = swift_getEnumCaseMultiPayload();
    switch(v48)
    {
      case 2:
        sub_1BFD7418C(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(unsigned char *)(v17 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v49 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v17, v49);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v18 = a1 + a2[11];
  if (!v14(v18, 1, v4))
  {
    int v50 = swift_getEnumCaseMultiPayload();
    switch(v50)
    {
      case 2:
        sub_1BFD7418C(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(unsigned char *)(v18 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v51 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v18, v51);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v19 = a1 + a2[12];
  if (!v14(v19, 1, v4))
  {
    int v52 = swift_getEnumCaseMultiPayload();
    switch(v52)
    {
      case 2:
        sub_1BFD7418C(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), *(unsigned char *)(v19 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v53 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v19, v53);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v20 = a1 + a2[13];
  if (!v14(v20, 1, v4))
  {
    int v54 = swift_getEnumCaseMultiPayload();
    switch(v54)
    {
      case 2:
        sub_1BFD7418C(*(void *)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), *(unsigned char *)(v20 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v55 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v20, v55);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v21 = a1 + a2[14];
  if (!v14(v21, 1, v4))
  {
    int v56 = swift_getEnumCaseMultiPayload();
    switch(v56)
    {
      case 2:
        sub_1BFD7418C(*(void *)v21, *(void *)(v21 + 8), *(void *)(v21 + 16), *(unsigned char *)(v21 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v57 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v21, v57);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v22 = a1 + a2[15];
  if (!v14(v22, 1, v4))
  {
    int v58 = swift_getEnumCaseMultiPayload();
    switch(v58)
    {
      case 2:
        sub_1BFD7418C(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(unsigned char *)(v22 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v59 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v22, v59);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v23 = a1 + a2[16];
  if (!v14(v23, 1, v4))
  {
    int v60 = swift_getEnumCaseMultiPayload();
    switch(v60)
    {
      case 2:
        sub_1BFD7418C(*(void *)v23, *(void *)(v23 + 8), *(void *)(v23 + 16), *(unsigned char *)(v23 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v61 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v23, v61);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v24 = a1 + a2[17];
  if (!v14(v24, 1, v4))
  {
    int v62 = swift_getEnumCaseMultiPayload();
    switch(v62)
    {
      case 2:
        sub_1BFD7418C(*(void *)v24, *(void *)(v24 + 8), *(void *)(v24 + 16), *(unsigned char *)(v24 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v63 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v24, v63);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v25 = a1 + a2[18];
  if (!v14(v25, 1, v4))
  {
    int v64 = swift_getEnumCaseMultiPayload();
    switch(v64)
    {
      case 2:
        sub_1BFD7418C(*(void *)v25, *(void *)(v25 + 8), *(void *)(v25 + 16), *(unsigned char *)(v25 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v65 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v25, v65);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v26 = a1 + a2[19];
  if (!v14(v26, 1, v4))
  {
    int v66 = swift_getEnumCaseMultiPayload();
    switch(v66)
    {
      case 2:
        sub_1BFD7418C(*(void *)v26, *(void *)(v26 + 8), *(void *)(v26 + 16), *(unsigned char *)(v26 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v67 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v26, v67);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v27 = a1 + a2[20];
  if (!v14(v27, 1, v4))
  {
    int v68 = swift_getEnumCaseMultiPayload();
    switch(v68)
    {
      case 2:
        sub_1BFD7418C(*(void *)v27, *(void *)(v27 + 8), *(void *)(v27 + 16), *(unsigned char *)(v27 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v69 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v27, v69);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v28 = a1 + a2[21];
  if (!v14(v28, 1, v4))
  {
    int v70 = swift_getEnumCaseMultiPayload();
    switch(v70)
    {
      case 2:
        sub_1BFD7418C(*(void *)v28, *(void *)(v28 + 8), *(void *)(v28 + 16), *(unsigned char *)(v28 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v71 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v28, v71);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v29 = a1 + a2[22];
  if (!v14(v29, 1, v4))
  {
    int v72 = swift_getEnumCaseMultiPayload();
    switch(v72)
    {
      case 2:
        sub_1BFD7418C(*(void *)v29, *(void *)(v29 + 8), *(void *)(v29 + 16), *(unsigned char *)(v29 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v73 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v29, v73);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v30 = a1 + a2[23];
  if (!v14(v30, 1, v4))
  {
    int v74 = swift_getEnumCaseMultiPayload();
    switch(v74)
    {
      case 2:
        sub_1BFD7418C(*(void *)v30, *(void *)(v30 + 8), *(void *)(v30 + 16), *(unsigned char *)(v30 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v75 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v75 - 8) + 8))(v30, v75);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v31 = a1 + a2[24];
  if (!v14(v31, 1, v4))
  {
    int v76 = swift_getEnumCaseMultiPayload();
    switch(v76)
    {
      case 2:
        sub_1BFD7418C(*(void *)v31, *(void *)(v31 + 8), *(void *)(v31 + 16), *(unsigned char *)(v31 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v77 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v31, v77);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v32 = a1 + a2[25];
  if (!v14(v32, 1, v4))
  {
    int v78 = swift_getEnumCaseMultiPayload();
    switch(v78)
    {
      case 2:
        sub_1BFD7418C(*(void *)v32, *(void *)(v32 + 8), *(void *)(v32 + 16), *(unsigned char *)(v32 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v79 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v32, v79);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v33 = a1 + a2[26];
  if (!v14(v33, 1, v4))
  {
    int v80 = swift_getEnumCaseMultiPayload();
    switch(v80)
    {
      case 2:
        sub_1BFD7418C(*(void *)v33, *(void *)(v33 + 8), *(void *)(v33 + 16), *(unsigned char *)(v33 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v81 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v33, v81);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v34 = a1 + a2[27];
  if (!v14(v34, 1, v4))
  {
    int v82 = swift_getEnumCaseMultiPayload();
    switch(v82)
    {
      case 2:
        sub_1BFD7418C(*(void *)v34, *(void *)(v34 + 8), *(void *)(v34 + 16), *(unsigned char *)(v34 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v83 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v34, v83);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v35 = a1 + a2[28];
  if (!v14(v35, 1, v4))
  {
    int v84 = swift_getEnumCaseMultiPayload();
    switch(v84)
    {
      case 2:
        sub_1BFD7418C(*(void *)v35, *(void *)(v35 + 8), *(void *)(v35 + 16), *(unsigned char *)(v35 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v85 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8))(v35, v85);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v36 = a1 + a2[29];
  if (!v14(v36, 1, v4))
  {
    int v86 = swift_getEnumCaseMultiPayload();
    switch(v86)
    {
      case 2:
        sub_1BFD7418C(*(void *)v36, *(void *)(v36 + 8), *(void *)(v36 + 16), *(unsigned char *)(v36 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v87 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8))(v36, v87);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v37 = a1 + a2[30];
  if (!v14(v37, 1, v4))
  {
    int v88 = swift_getEnumCaseMultiPayload();
    switch(v88)
    {
      case 2:
        sub_1BFD7418C(*(void *)v37, *(void *)(v37 + 8), *(void *)(v37 + 16), *(unsigned char *)(v37 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v89 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v89 - 8) + 8))(v37, v89);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v38 = a1 + a2[31];
  if (!v14(v38, 1, v4))
  {
    int v90 = swift_getEnumCaseMultiPayload();
    switch(v90)
    {
      case 2:
        sub_1BFD7418C(*(void *)v38, *(void *)(v38 + 8), *(void *)(v38 + 16), *(unsigned char *)(v38 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v91 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v91 - 8) + 8))(v38, v91);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v39 = a1 + a2[32];
  if (!v14(v39, 1, v4))
  {
    int v92 = swift_getEnumCaseMultiPayload();
    switch(v92)
    {
      case 2:
        sub_1BFD7418C(*(void *)v39, *(void *)(v39 + 8), *(void *)(v39 + 16), *(unsigned char *)(v39 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v93 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v39, v93);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v40 = a1 + a2[33];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v40, 1, v4);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v95 = *(void *)v40;
      uint64_t v96 = *(void *)(v40 + 8);
      uint64_t v97 = *(void *)(v40 + 16);
      char v98 = *(unsigned char *)(v40 + 24);
      return sub_1BFD7418C(v95, v96, v97, v98);
    }
    else
    {
      if (result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (result) {
          return result;
        }
        uint64_t v94 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v94 - 8) + 8))(v40, v94);
        type metadata accessor for FormatAbsoluteURL();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatRemoteVideo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(void *)a2;
    uint64_t v10 = *(void *)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 16);
    char v12 = *(unsigned char *)(a2 + 24);
    sub_1BFE86E48(*(void *)a2, v10, v11, v12);
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v11;
    *(unsigned char *)(a1 + 24) = v12;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(a1 + *(int *)(v14 + 20)) = *(void *)(a2 + *(int *)(v14 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[5];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  int v18 = swift_getEnumCaseMultiPayload();
  if (v18 == 2)
  {
    uint64_t v20 = *(void *)v17;
    uint64_t v21 = *(void *)(v17 + 8);
    uint64_t v22 = *(void *)(v17 + 16);
    char v23 = *(unsigned char *)(v17 + 24);
    sub_1BFE86E48(v20, v21, v22, v23);
    *(void *)uint64_t v16 = v20;
    *(void *)(v16 + 8) = v21;
    *(void *)(v16 + 16) = v22;
    *(unsigned char *)(v16 + 24) = v23;
  }
  else
  {
    if (v18 == 1)
    {
      uint64_t v19 = *(void *)(v17 + 8);
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = v19;
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v24 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v16, v17, v24);
      uint64_t v25 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(v16 + *(int *)(v25 + 20)) = *(void *)(v17 + *(int *)(v25 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[6];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  int v29 = swift_getEnumCaseMultiPayload();
  if (v29 == 2)
  {
    uint64_t v31 = *(void *)v28;
    uint64_t v32 = *(void *)(v28 + 8);
    uint64_t v33 = *(void *)(v28 + 16);
    char v34 = *(unsigned char *)(v28 + 24);
    sub_1BFE86E48(v31, v32, v33, v34);
    *(void *)uint64_t v27 = v31;
    *(void *)(v27 + 8) = v32;
    *(void *)(v27 + 16) = v33;
    *(unsigned char *)(v27 + 24) = v34;
  }
  else
  {
    if (v29 == 1)
    {
      uint64_t v30 = *(void *)(v28 + 8);
      *(void *)uint64_t v27 = *(void *)v28;
      *(void *)(v27 + 8) = v30;
      *(void *)(v27 + 16) = *(void *)(v28 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v35 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v27, v28, v35);
      uint64_t v36 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(v27 + *(int *)(v36 + 20)) = *(void *)(v28 + *(int *)(v36 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[7];
  uint64_t v38 = (uint64_t *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = *(unsigned int (**)(void, void, void))(v40 + 48);
  uint64_t v364 = v41;
  uint64_t v365 = v40;
  if (v41(a2 + v37, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      uint64_t v45 = *v39;
      uint64_t v46 = v39[1];
      uint64_t v47 = v39[2];
      char v48 = *((unsigned char *)v39 + 24);
      sub_1BFE86E48(v45, v46, v47, v48);
      *uint64_t v38 = v45;
      v38[1] = v46;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v38[2] = v47;
      *((unsigned char *)v38 + 24) = v48;
    }
    else
    {
      if (v43 == 1)
      {
        uint64_t v44 = v39[1];
        *uint64_t v38 = *v39;
        v38[1] = v44;
        v38[2] = v39[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v49 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v49 - 8) + 16))(v38, v39, v49);
        uint64_t v50 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v38 + *(int *)(v50 + 20)) = *(uint64_t *)((char *)v39 + *(int *)(v50 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v6);
  }
  uint64_t v51 = a3[8];
  int v52 = (uint64_t *)(a1 + v51);
  uint64_t v53 = (uint64_t *)(a2 + v51);
  if (v41(a2 + v51, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    int v55 = swift_getEnumCaseMultiPayload();
    if (v55 == 2)
    {
      uint64_t v57 = *v53;
      uint64_t v58 = v53[1];
      uint64_t v59 = v53[2];
      char v60 = *((unsigned char *)v53 + 24);
      sub_1BFE86E48(v57, v58, v59, v60);
      *int v52 = v57;
      v52[1] = v58;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v52[2] = v59;
      *((unsigned char *)v52 + 24) = v60;
    }
    else
    {
      if (v55 == 1)
      {
        uint64_t v56 = v53[1];
        *int v52 = *v53;
        v52[1] = v56;
        v52[2] = v53[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v61 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v61 - 8) + 16))(v52, v53, v61);
        uint64_t v62 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v52 + *(int *)(v62 + 20)) = *(uint64_t *)((char *)v53 + *(int *)(v62 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v6);
  }
  uint64_t v63 = a3[9];
  int v64 = (uint64_t *)(a1 + v63);
  uint64_t v65 = (uint64_t *)(a2 + v63);
  if (v41(a2 + v63, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    int v67 = swift_getEnumCaseMultiPayload();
    if (v67 == 2)
    {
      uint64_t v69 = *v65;
      uint64_t v70 = v65[1];
      uint64_t v71 = v65[2];
      char v72 = *((unsigned char *)v65 + 24);
      sub_1BFE86E48(v69, v70, v71, v72);
      uint64_t *v64 = v69;
      v64[1] = v70;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v64[2] = v71;
      *((unsigned char *)v64 + 24) = v72;
    }
    else
    {
      if (v67 == 1)
      {
        uint64_t v68 = v65[1];
        uint64_t *v64 = *v65;
        v64[1] = v68;
        v64[2] = v65[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v73 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v73 - 8) + 16))(v64, v65, v73);
        uint64_t v74 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v64 + *(int *)(v74 + 20)) = *(uint64_t *)((char *)v65 + *(int *)(v74 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v64, 0, 1, v6);
  }
  uint64_t v75 = a3[10];
  int v76 = (uint64_t *)(a1 + v75);
  uint64_t v77 = (uint64_t *)(a2 + v75);
  if (v41(a2 + v75, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    int v79 = swift_getEnumCaseMultiPayload();
    if (v79 == 2)
    {
      uint64_t v81 = *v77;
      uint64_t v82 = v77[1];
      uint64_t v83 = v77[2];
      char v84 = *((unsigned char *)v77 + 24);
      sub_1BFE86E48(v81, v82, v83, v84);
      *int v76 = v81;
      v76[1] = v82;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v76[2] = v83;
      *((unsigned char *)v76 + 24) = v84;
    }
    else
    {
      if (v79 == 1)
      {
        uint64_t v80 = v77[1];
        *int v76 = *v77;
        v76[1] = v80;
        v76[2] = v77[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v85 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v85 - 8) + 16))(v76, v77, v85);
        uint64_t v86 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v76 + *(int *)(v86 + 20)) = *(uint64_t *)((char *)v77 + *(int *)(v86 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v76, 0, 1, v6);
  }
  uint64_t v87 = a3[11];
  int v88 = (uint64_t *)(a1 + v87);
  uint64_t v89 = (uint64_t *)(a2 + v87);
  if (v41(a2 + v87, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    int v91 = swift_getEnumCaseMultiPayload();
    if (v91 == 2)
    {
      uint64_t v93 = *v89;
      uint64_t v94 = v89[1];
      uint64_t v95 = v89[2];
      char v96 = *((unsigned char *)v89 + 24);
      sub_1BFE86E48(v93, v94, v95, v96);
      *int v88 = v93;
      v88[1] = v94;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v88[2] = v95;
      *((unsigned char *)v88 + 24) = v96;
    }
    else
    {
      if (v91 == 1)
      {
        uint64_t v92 = v89[1];
        *int v88 = *v89;
        v88[1] = v92;
        v88[2] = v89[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v97 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v97 - 8) + 16))(v88, v89, v97);
        uint64_t v98 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v88 + *(int *)(v98 + 20)) = *(uint64_t *)((char *)v89 + *(int *)(v98 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v88, 0, 1, v6);
  }
  uint64_t v99 = a3[12];
  uint64_t v100 = (uint64_t *)(a1 + v99);
  uint64_t v101 = (uint64_t *)(a2 + v99);
  if (v41(a2 + v99, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    int v103 = swift_getEnumCaseMultiPayload();
    if (v103 == 2)
    {
      uint64_t v105 = *v101;
      uint64_t v106 = v101[1];
      uint64_t v107 = v101[2];
      char v108 = *((unsigned char *)v101 + 24);
      sub_1BFE86E48(v105, v106, v107, v108);
      *uint64_t v100 = v105;
      v100[1] = v106;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v100[2] = v107;
      *((unsigned char *)v100 + 24) = v108;
    }
    else
    {
      if (v103 == 1)
      {
        uint64_t v104 = v101[1];
        *uint64_t v100 = *v101;
        v100[1] = v104;
        v100[2] = v101[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v109 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v109 - 8) + 16))(v100, v101, v109);
        uint64_t v110 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v100 + *(int *)(v110 + 20)) = *(uint64_t *)((char *)v101 + *(int *)(v110 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v100, 0, 1, v6);
  }
  uint64_t v111 = a3[13];
  uint64_t v112 = (uint64_t *)(a1 + v111);
  uint64_t v113 = (uint64_t *)(a2 + v111);
  if (v41(a2 + v111, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
  }
  else
  {
    int v115 = swift_getEnumCaseMultiPayload();
    if (v115 == 2)
    {
      uint64_t v117 = *v113;
      uint64_t v118 = v113[1];
      uint64_t v119 = v113[2];
      char v120 = *((unsigned char *)v113 + 24);
      sub_1BFE86E48(v117, v118, v119, v120);
      *uint64_t v112 = v117;
      v112[1] = v118;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v112[2] = v119;
      *((unsigned char *)v112 + 24) = v120;
    }
    else
    {
      if (v115 == 1)
      {
        uint64_t v116 = v113[1];
        *uint64_t v112 = *v113;
        v112[1] = v116;
        v112[2] = v113[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v121 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v121 - 8) + 16))(v112, v113, v121);
        uint64_t v122 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v112 + *(int *)(v122 + 20)) = *(uint64_t *)((char *)v113 + *(int *)(v122 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v112, 0, 1, v6);
  }
  uint64_t v123 = a3[14];
  uint64_t v124 = (uint64_t *)(a1 + v123);
  uint64_t v125 = (uint64_t *)(a2 + v123);
  if (v41(a2 + v123, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
  }
  else
  {
    int v127 = swift_getEnumCaseMultiPayload();
    if (v127 == 2)
    {
      uint64_t v129 = *v125;
      uint64_t v130 = v125[1];
      uint64_t v131 = v125[2];
      char v132 = *((unsigned char *)v125 + 24);
      sub_1BFE86E48(v129, v130, v131, v132);
      *uint64_t v124 = v129;
      v124[1] = v130;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v124[2] = v131;
      *((unsigned char *)v124 + 24) = v132;
    }
    else
    {
      if (v127 == 1)
      {
        uint64_t v128 = v125[1];
        *uint64_t v124 = *v125;
        v124[1] = v128;
        v124[2] = v125[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v133 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v133 - 8) + 16))(v124, v125, v133);
        uint64_t v134 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v124 + *(int *)(v134 + 20)) = *(uint64_t *)((char *)v125 + *(int *)(v134 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v124, 0, 1, v6);
  }
  uint64_t v135 = a3[15];
  uint64_t v136 = (uint64_t *)(a1 + v135);
  uint64_t v137 = (uint64_t *)(a2 + v135);
  if (v41(a2 + v135, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
  }
  else
  {
    int v139 = swift_getEnumCaseMultiPayload();
    if (v139 == 2)
    {
      uint64_t v141 = *v137;
      uint64_t v142 = v137[1];
      uint64_t v143 = v137[2];
      char v144 = *((unsigned char *)v137 + 24);
      sub_1BFE86E48(v141, v142, v143, v144);
      *uint64_t v136 = v141;
      v136[1] = v142;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v136[2] = v143;
      *((unsigned char *)v136 + 24) = v144;
    }
    else
    {
      if (v139 == 1)
      {
        uint64_t v140 = v137[1];
        *uint64_t v136 = *v137;
        v136[1] = v140;
        v136[2] = v137[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v145 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v145 - 8) + 16))(v136, v137, v145);
        uint64_t v146 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v136 + *(int *)(v146 + 20)) = *(uint64_t *)((char *)v137 + *(int *)(v146 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v136, 0, 1, v6);
  }
  uint64_t v147 = a3[16];
  uint64_t v148 = (uint64_t *)(a1 + v147);
  uint64_t v149 = (uint64_t *)(a2 + v147);
  if (v41(a2 + v147, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v148, v149, *(void *)(*(void *)(v150 - 8) + 64));
  }
  else
  {
    int v151 = swift_getEnumCaseMultiPayload();
    if (v151 == 2)
    {
      uint64_t v153 = *v149;
      uint64_t v154 = v149[1];
      uint64_t v155 = v149[2];
      char v156 = *((unsigned char *)v149 + 24);
      sub_1BFE86E48(v153, v154, v155, v156);
      *uint64_t v148 = v153;
      v148[1] = v154;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v148[2] = v155;
      *((unsigned char *)v148 + 24) = v156;
    }
    else
    {
      if (v151 == 1)
      {
        uint64_t v152 = v149[1];
        *uint64_t v148 = *v149;
        v148[1] = v152;
        v148[2] = v149[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v157 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v157 - 8) + 16))(v148, v149, v157);
        uint64_t v158 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v148 + *(int *)(v158 + 20)) = *(uint64_t *)((char *)v149 + *(int *)(v158 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v148, 0, 1, v6);
  }
  uint64_t v159 = a3[17];
  uint64_t v160 = (uint64_t *)(a1 + v159);
  uint64_t v161 = (uint64_t *)(a2 + v159);
  if (v41(a2 + v159, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
  }
  else
  {
    int v163 = swift_getEnumCaseMultiPayload();
    if (v163 == 2)
    {
      uint64_t v165 = *v161;
      uint64_t v166 = v161[1];
      uint64_t v167 = v161[2];
      char v168 = *((unsigned char *)v161 + 24);
      sub_1BFE86E48(v165, v166, v167, v168);
      *uint64_t v160 = v165;
      v160[1] = v166;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v160[2] = v167;
      *((unsigned char *)v160 + 24) = v168;
    }
    else
    {
      if (v163 == 1)
      {
        uint64_t v164 = v161[1];
        *uint64_t v160 = *v161;
        v160[1] = v164;
        v160[2] = v161[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v169 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v169 - 8) + 16))(v160, v161, v169);
        uint64_t v170 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v160 + *(int *)(v170 + 20)) = *(uint64_t *)((char *)v161 + *(int *)(v170 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v160, 0, 1, v6);
  }
  uint64_t v171 = a3[18];
  uint64_t v172 = (uint64_t *)(a1 + v171);
  uint64_t v173 = (uint64_t *)(a2 + v171);
  if (v41(a2 + v171, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
  }
  else
  {
    int v175 = swift_getEnumCaseMultiPayload();
    if (v175 == 2)
    {
      uint64_t v177 = *v173;
      uint64_t v178 = v173[1];
      uint64_t v179 = v173[2];
      char v180 = *((unsigned char *)v173 + 24);
      sub_1BFE86E48(v177, v178, v179, v180);
      *uint64_t v172 = v177;
      v172[1] = v178;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v172[2] = v179;
      *((unsigned char *)v172 + 24) = v180;
    }
    else
    {
      if (v175 == 1)
      {
        uint64_t v176 = v173[1];
        *uint64_t v172 = *v173;
        v172[1] = v176;
        v172[2] = v173[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v181 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v181 - 8) + 16))(v172, v173, v181);
        uint64_t v182 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v172 + *(int *)(v182 + 20)) = *(uint64_t *)((char *)v173 + *(int *)(v182 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v172, 0, 1, v6);
  }
  uint64_t v183 = a3[19];
  uint64_t v184 = (uint64_t *)(a1 + v183);
  uint64_t v185 = (uint64_t *)(a2 + v183);
  if (v41(a2 + v183, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
  }
  else
  {
    int v187 = swift_getEnumCaseMultiPayload();
    if (v187 == 2)
    {
      uint64_t v189 = *v185;
      uint64_t v190 = v185[1];
      uint64_t v191 = v185[2];
      char v192 = *((unsigned char *)v185 + 24);
      sub_1BFE86E48(v189, v190, v191, v192);
      uint64_t *v184 = v189;
      v184[1] = v190;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v184[2] = v191;
      *((unsigned char *)v184 + 24) = v192;
    }
    else
    {
      if (v187 == 1)
      {
        uint64_t v188 = v185[1];
        uint64_t *v184 = *v185;
        v184[1] = v188;
        v184[2] = v185[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v193 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v193 - 8) + 16))(v184, v185, v193);
        uint64_t v194 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v184 + *(int *)(v194 + 20)) = *(uint64_t *)((char *)v185 + *(int *)(v194 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v184, 0, 1, v6);
  }
  uint64_t v195 = a3[20];
  uint64_t v196 = (uint64_t *)(a1 + v195);
  uint64_t v197 = (uint64_t *)(a2 + v195);
  if (v41(a2 + v195, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v196, v197, *(void *)(*(void *)(v198 - 8) + 64));
  }
  else
  {
    int v199 = swift_getEnumCaseMultiPayload();
    if (v199 == 2)
    {
      uint64_t v201 = *v197;
      uint64_t v202 = v197[1];
      uint64_t v203 = v197[2];
      char v204 = *((unsigned char *)v197 + 24);
      sub_1BFE86E48(v201, v202, v203, v204);
      *uint64_t v196 = v201;
      v196[1] = v202;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v196[2] = v203;
      *((unsigned char *)v196 + 24) = v204;
    }
    else
    {
      if (v199 == 1)
      {
        uint64_t v200 = v197[1];
        *uint64_t v196 = *v197;
        v196[1] = v200;
        v196[2] = v197[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v205 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v205 - 8) + 16))(v196, v197, v205);
        uint64_t v206 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v196 + *(int *)(v206 + 20)) = *(uint64_t *)((char *)v197 + *(int *)(v206 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v196, 0, 1, v6);
  }
  uint64_t v207 = a3[21];
  uint64_t v208 = (uint64_t *)(a1 + v207);
  uint64_t v209 = (uint64_t *)(a2 + v207);
  if (v41(a2 + v207, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
  }
  else
  {
    int v211 = swift_getEnumCaseMultiPayload();
    if (v211 == 2)
    {
      uint64_t v213 = *v209;
      uint64_t v214 = v209[1];
      uint64_t v215 = v209[2];
      char v216 = *((unsigned char *)v209 + 24);
      sub_1BFE86E48(v213, v214, v215, v216);
      *uint64_t v208 = v213;
      v208[1] = v214;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v208[2] = v215;
      *((unsigned char *)v208 + 24) = v216;
    }
    else
    {
      if (v211 == 1)
      {
        uint64_t v212 = v209[1];
        *uint64_t v208 = *v209;
        v208[1] = v212;
        v208[2] = v209[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v217 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v217 - 8) + 16))(v208, v209, v217);
        uint64_t v218 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v208 + *(int *)(v218 + 20)) = *(uint64_t *)((char *)v209 + *(int *)(v218 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v208, 0, 1, v6);
  }
  uint64_t v219 = a3[22];
  uint64_t v220 = (uint64_t *)(a1 + v219);
  uint64_t v221 = (uint64_t *)(a2 + v219);
  if (v41(a2 + v219, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
  }
  else
  {
    int v223 = swift_getEnumCaseMultiPayload();
    if (v223 == 2)
    {
      uint64_t v225 = *v221;
      uint64_t v226 = v221[1];
      uint64_t v227 = v221[2];
      char v228 = *((unsigned char *)v221 + 24);
      sub_1BFE86E48(v225, v226, v227, v228);
      uint64_t *v220 = v225;
      v220[1] = v226;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v220[2] = v227;
      *((unsigned char *)v220 + 24) = v228;
    }
    else
    {
      if (v223 == 1)
      {
        uint64_t v224 = v221[1];
        uint64_t *v220 = *v221;
        v220[1] = v224;
        v220[2] = v221[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v229 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v229 - 8) + 16))(v220, v221, v229);
        uint64_t v230 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v220 + *(int *)(v230 + 20)) = *(uint64_t *)((char *)v221 + *(int *)(v230 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v220, 0, 1, v6);
  }
  uint64_t v231 = a3[23];
  uint64_t v232 = (uint64_t *)(a1 + v231);
  uint64_t v233 = (uint64_t *)(a2 + v231);
  if (v41(a2 + v231, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v232, v233, *(void *)(*(void *)(v234 - 8) + 64));
  }
  else
  {
    int v235 = swift_getEnumCaseMultiPayload();
    if (v235 == 2)
    {
      uint64_t v237 = *v233;
      uint64_t v238 = v233[1];
      uint64_t v239 = v233[2];
      char v240 = *((unsigned char *)v233 + 24);
      sub_1BFE86E48(v237, v238, v239, v240);
      *uint64_t v232 = v237;
      v232[1] = v238;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v232[2] = v239;
      *((unsigned char *)v232 + 24) = v240;
    }
    else
    {
      if (v235 == 1)
      {
        uint64_t v236 = v233[1];
        *uint64_t v232 = *v233;
        v232[1] = v236;
        v232[2] = v233[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v241 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v241 - 8) + 16))(v232, v233, v241);
        uint64_t v242 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v232 + *(int *)(v242 + 20)) = *(uint64_t *)((char *)v233 + *(int *)(v242 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v232, 0, 1, v6);
  }
  uint64_t v243 = a3[24];
  uint64_t v244 = (uint64_t *)(a1 + v243);
  uint64_t v245 = (uint64_t *)(a2 + v243);
  if (v41(a2 + v243, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v244, v245, *(void *)(*(void *)(v246 - 8) + 64));
  }
  else
  {
    int v247 = swift_getEnumCaseMultiPayload();
    if (v247 == 2)
    {
      uint64_t v249 = *v245;
      uint64_t v250 = v245[1];
      uint64_t v251 = v245[2];
      char v252 = *((unsigned char *)v245 + 24);
      sub_1BFE86E48(v249, v250, v251, v252);
      *uint64_t v244 = v249;
      v244[1] = v250;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v244[2] = v251;
      *((unsigned char *)v244 + 24) = v252;
    }
    else
    {
      if (v247 == 1)
      {
        uint64_t v248 = v245[1];
        *uint64_t v244 = *v245;
        v244[1] = v248;
        v244[2] = v245[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v253 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v253 - 8) + 16))(v244, v245, v253);
        uint64_t v254 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v244 + *(int *)(v254 + 20)) = *(uint64_t *)((char *)v245 + *(int *)(v254 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v244, 0, 1, v6);
  }
  uint64_t v255 = a3[25];
  uint64_t v256 = (uint64_t *)(a1 + v255);
  uint64_t v257 = (uint64_t *)(a2 + v255);
  if (v41(a2 + v255, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v256, v257, *(void *)(*(void *)(v258 - 8) + 64));
  }
  else
  {
    int v259 = swift_getEnumCaseMultiPayload();
    if (v259 == 2)
    {
      uint64_t v261 = *v257;
      uint64_t v262 = v257[1];
      uint64_t v263 = v257[2];
      char v264 = *((unsigned char *)v257 + 24);
      sub_1BFE86E48(v261, v262, v263, v264);
      *uint64_t v256 = v261;
      v256[1] = v262;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v256[2] = v263;
      *((unsigned char *)v256 + 24) = v264;
    }
    else
    {
      if (v259 == 1)
      {
        uint64_t v260 = v257[1];
        *uint64_t v256 = *v257;
        v256[1] = v260;
        v256[2] = v257[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v265 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v265 - 8) + 16))(v256, v257, v265);
        uint64_t v266 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v256 + *(int *)(v266 + 20)) = *(uint64_t *)((char *)v257 + *(int *)(v266 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v256, 0, 1, v6);
  }
  uint64_t v267 = a3[26];
  uint64_t v268 = (uint64_t *)(a1 + v267);
  uint64_t v269 = (uint64_t *)(a2 + v267);
  if (v41(a2 + v267, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
  }
  else
  {
    int v271 = swift_getEnumCaseMultiPayload();
    if (v271 == 2)
    {
      uint64_t v273 = *v269;
      uint64_t v274 = v269[1];
      uint64_t v275 = v269[2];
      char v276 = *((unsigned char *)v269 + 24);
      sub_1BFE86E48(v273, v274, v275, v276);
      uint64_t *v268 = v273;
      v268[1] = v274;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v268[2] = v275;
      *((unsigned char *)v268 + 24) = v276;
    }
    else
    {
      if (v271 == 1)
      {
        uint64_t v272 = v269[1];
        uint64_t *v268 = *v269;
        v268[1] = v272;
        v268[2] = v269[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v277 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v277 - 8) + 16))(v268, v269, v277);
        uint64_t v278 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v268 + *(int *)(v278 + 20)) = *(uint64_t *)((char *)v269 + *(int *)(v278 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v268, 0, 1, v6);
  }
  uint64_t v279 = a3[27];
  uint64_t v280 = (uint64_t *)(a1 + v279);
  uint64_t v281 = (uint64_t *)(a2 + v279);
  if (v41(a2 + v279, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v280, v281, *(void *)(*(void *)(v282 - 8) + 64));
  }
  else
  {
    int v283 = swift_getEnumCaseMultiPayload();
    if (v283 == 2)
    {
      uint64_t v285 = *v281;
      uint64_t v286 = v281[1];
      uint64_t v287 = v281[2];
      char v288 = *((unsigned char *)v281 + 24);
      sub_1BFE86E48(v285, v286, v287, v288);
      *uint64_t v280 = v285;
      v280[1] = v286;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v280[2] = v287;
      *((unsigned char *)v280 + 24) = v288;
    }
    else
    {
      if (v283 == 1)
      {
        uint64_t v284 = v281[1];
        *uint64_t v280 = *v281;
        v280[1] = v284;
        v280[2] = v281[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v289 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v289 - 8) + 16))(v280, v281, v289);
        uint64_t v290 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v280 + *(int *)(v290 + 20)) = *(uint64_t *)((char *)v281 + *(int *)(v290 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v280, 0, 1, v6);
  }
  uint64_t v291 = a3[28];
  uint64_t v292 = (uint64_t *)(a1 + v291);
  uint64_t v293 = (uint64_t *)(a2 + v291);
  if (v41(a2 + v291, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v292, v293, *(void *)(*(void *)(v294 - 8) + 64));
  }
  else
  {
    int v295 = swift_getEnumCaseMultiPayload();
    if (v295 == 2)
    {
      uint64_t v297 = *v293;
      uint64_t v298 = v293[1];
      uint64_t v299 = v293[2];
      char v300 = *((unsigned char *)v293 + 24);
      sub_1BFE86E48(v297, v298, v299, v300);
      *uint64_t v292 = v297;
      v292[1] = v298;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v292[2] = v299;
      *((unsigned char *)v292 + 24) = v300;
    }
    else
    {
      if (v295 == 1)
      {
        uint64_t v296 = v293[1];
        *uint64_t v292 = *v293;
        v292[1] = v296;
        v292[2] = v293[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v301 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v301 - 8) + 16))(v292, v293, v301);
        uint64_t v302 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v292 + *(int *)(v302 + 20)) = *(uint64_t *)((char *)v293 + *(int *)(v302 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v292, 0, 1, v6);
  }
  uint64_t v303 = a3[29];
  uint64_t v304 = (uint64_t *)(a1 + v303);
  char v305 = (uint64_t *)(a2 + v303);
  if (v41(a2 + v303, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v304, v305, *(void *)(*(void *)(v306 - 8) + 64));
  }
  else
  {
    int v307 = swift_getEnumCaseMultiPayload();
    if (v307 == 2)
    {
      uint64_t v309 = *v305;
      uint64_t v310 = v305[1];
      uint64_t v311 = v305[2];
      char v312 = *((unsigned char *)v305 + 24);
      sub_1BFE86E48(v309, v310, v311, v312);
      *uint64_t v304 = v309;
      v304[1] = v310;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v304[2] = v311;
      *((unsigned char *)v304 + 24) = v312;
    }
    else
    {
      if (v307 == 1)
      {
        uint64_t v308 = v305[1];
        *uint64_t v304 = *v305;
        v304[1] = v308;
        v304[2] = v305[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v313 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v313 - 8) + 16))(v304, v305, v313);
        uint64_t v314 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v304 + *(int *)(v314 + 20)) = *(uint64_t *)((char *)v305 + *(int *)(v314 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v304, 0, 1, v6);
  }
  uint64_t v315 = a3[30];
  uint64_t v316 = (uint64_t *)(a1 + v315);
  uint64_t v317 = (uint64_t *)(a2 + v315);
  if (v41(a2 + v315, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v316, v317, *(void *)(*(void *)(v318 - 8) + 64));
  }
  else
  {
    int v319 = swift_getEnumCaseMultiPayload();
    if (v319 == 2)
    {
      uint64_t v321 = *v317;
      uint64_t v322 = v317[1];
      uint64_t v323 = v317[2];
      char v324 = *((unsigned char *)v317 + 24);
      sub_1BFE86E48(v321, v322, v323, v324);
      *uint64_t v316 = v321;
      v316[1] = v322;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v316[2] = v323;
      *((unsigned char *)v316 + 24) = v324;
    }
    else
    {
      if (v319 == 1)
      {
        uint64_t v320 = v317[1];
        *uint64_t v316 = *v317;
        v316[1] = v320;
        v316[2] = v317[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v325 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v325 - 8) + 16))(v316, v317, v325);
        uint64_t v326 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v316 + *(int *)(v326 + 20)) = *(uint64_t *)((char *)v317 + *(int *)(v326 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v316, 0, 1, v6);
  }
  uint64_t v327 = a3[31];
  uint64_t v328 = (uint64_t *)(a1 + v327);
  char v329 = (uint64_t *)(a2 + v327);
  if (v41(a2 + v327, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v328, v329, *(void *)(*(void *)(v330 - 8) + 64));
  }
  else
  {
    int v331 = swift_getEnumCaseMultiPayload();
    if (v331 == 2)
    {
      uint64_t v333 = *v329;
      uint64_t v334 = v329[1];
      uint64_t v335 = v329[2];
      char v336 = *((unsigned char *)v329 + 24);
      sub_1BFE86E48(v333, v334, v335, v336);
      *uint64_t v328 = v333;
      v328[1] = v334;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v328[2] = v335;
      *((unsigned char *)v328 + 24) = v336;
    }
    else
    {
      if (v331 == 1)
      {
        uint64_t v332 = v329[1];
        *uint64_t v328 = *v329;
        v328[1] = v332;
        v328[2] = v329[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v337 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v337 - 8) + 16))(v328, v329, v337);
        uint64_t v338 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v328 + *(int *)(v338 + 20)) = *(uint64_t *)((char *)v329 + *(int *)(v338 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v328, 0, 1, v6);
  }
  uint64_t v339 = a3[32];
  uint64_t v340 = (uint64_t *)(a1 + v339);
  uint64_t v341 = (uint64_t *)(a2 + v339);
  if (v41(a2 + v339, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v340, v341, *(void *)(*(void *)(v342 - 8) + 64));
  }
  else
  {
    int v343 = swift_getEnumCaseMultiPayload();
    if (v343 == 2)
    {
      uint64_t v345 = *v341;
      uint64_t v346 = v341[1];
      uint64_t v347 = v341[2];
      char v348 = *((unsigned char *)v341 + 24);
      sub_1BFE86E48(v345, v346, v347, v348);
      *uint64_t v340 = v345;
      v340[1] = v346;
      uint64_t v41 = v364;
      uint64_t v40 = v365;
      v340[2] = v347;
      *((unsigned char *)v340 + 24) = v348;
    }
    else
    {
      if (v343 == 1)
      {
        uint64_t v344 = v341[1];
        *uint64_t v340 = *v341;
        v340[1] = v344;
        v340[2] = v341[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v349 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v349 - 8) + 16))(v340, v341, v349);
        uint64_t v350 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v340 + *(int *)(v350 + 20)) = *(uint64_t *)((char *)v341 + *(int *)(v350 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v340, 0, 1, v6);
  }
  uint64_t v351 = a3[33];
  uint64_t v352 = (uint64_t *)(a1 + v351);
  char v353 = (uint64_t *)(a2 + v351);
  if (v41(v353, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v352, v353, *(void *)(*(void *)(v354 - 8) + 64));
  }
  else
  {
    int v355 = swift_getEnumCaseMultiPayload();
    if (v355 == 2)
    {
      uint64_t v357 = *v353;
      uint64_t v358 = v353[1];
      uint64_t v359 = v353[2];
      char v360 = *((unsigned char *)v353 + 24);
      sub_1BFE86E48(v357, v358, v359, v360);
      *uint64_t v352 = v357;
      v352[1] = v358;
      v352[2] = v359;
      *((unsigned char *)v352 + 24) = v360;
    }
    else
    {
      if (v355 == 1)
      {
        uint64_t v356 = v353[1];
        *uint64_t v352 = *v353;
        v352[1] = v356;
        v352[2] = v353[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v361 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v361 - 8) + 16))(v352, v353, v361);
        uint64_t v362 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v352 + *(int *)(v362 + 20)) = *(uint64_t *)((char *)v353 + *(int *)(v362 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v352, 0, 1, v6);
  }
  return a1;
}

uint64_t assignWithCopy for FormatRemoteVideo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    sub_1BFFAEED8(a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
    type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = *(void *)v4;
      uint64_t v8 = *(void *)(v4 + 8);
      uint64_t v9 = *(void *)(v4 + 16);
      char v10 = *(unsigned char *)(v4 + 24);
      sub_1BFE86E48(*(void *)v4, v8, v9, v10);
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 24) = v10;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)v4;
        *(void *)(a1 + 8) = *(void *)(v4 + 8);
        *(void *)(a1 + 16) = *(void *)(v4 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v11 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, v4, v11);
        uint64_t v12 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(a1 + *(int *)(v12 + 20)) = *(void *)(v4 + *(int *)(v12 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[5];
    uint64_t v14 = a1 + v13;
    uint64_t v15 = v4 + v13;
    sub_1BFFAEED8(a1 + v13, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 2)
    {
      uint64_t v17 = *(void *)v15;
      uint64_t v18 = *(void *)(v15 + 8);
      uint64_t v19 = *(void *)(v15 + 16);
      char v20 = *(unsigned char *)(v15 + 24);
      sub_1BFE86E48(v17, v18, v19, v20);
      *(void *)uint64_t v14 = v17;
      *(void *)(v14 + 8) = v18;
      *(void *)(v14 + 16) = v19;
      uint64_t v4 = a2;
      *(unsigned char *)(v14 + 24) = v20;
    }
    else
    {
      if (v16 == 1)
      {
        *(void *)uint64_t v14 = *(void *)v15;
        *(void *)(v14 + 8) = *(void *)(v15 + 8);
        *(void *)(v14 + 16) = *(void *)(v15 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v21 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
        uint64_t v22 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v14 + *(int *)(v22 + 20)) = *(void *)(v15 + *(int *)(v22 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[6];
    uint64_t v24 = a1 + v23;
    uint64_t v25 = v4 + v23;
    sub_1BFFAEED8(a1 + v23, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2)
    {
      uint64_t v27 = *(void *)v25;
      uint64_t v28 = *(void *)(v25 + 8);
      uint64_t v29 = *(void *)(v25 + 16);
      char v30 = *(unsigned char *)(v25 + 24);
      sub_1BFE86E48(v27, v28, v29, v30);
      *(void *)uint64_t v24 = v27;
      *(void *)(v24 + 8) = v28;
      *(void *)(v24 + 16) = v29;
      uint64_t v4 = a2;
      *(unsigned char *)(v24 + 24) = v30;
    }
    else
    {
      if (v26 == 1)
      {
        *(void *)uint64_t v24 = *(void *)v25;
        *(void *)(v24 + 8) = *(void *)(v25 + 8);
        *(void *)(v24 + 16) = *(void *)(v25 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v31 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v24, v25, v31);
        uint64_t v32 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v24 + *(int *)(v32 + 20)) = *(void *)(v25 + *(int *)(v32 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v33 = a3[7];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = v4 + v33;
  uint64_t v36 = type metadata accessor for FormatURL();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  uint64_t v577 = v37;
  if (v39)
  {
    if (!v40)
    {
      int v41 = swift_getEnumCaseMultiPayload();
      if (v41 == 2)
      {
        uint64_t v44 = *(void *)v35;
        uint64_t v45 = *(void *)(v35 + 8);
        uint64_t v46 = *(void *)(v35 + 16);
        char v47 = *(unsigned char *)(v35 + 24);
        sub_1BFE86E48(v44, v45, v46, v47);
        *(void *)uint64_t v34 = v44;
        *(void *)(v34 + 8) = v45;
        *(void *)(v34 + 16) = v46;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v34 + 24) = v47;
      }
      else
      {
        if (v41 == 1)
        {
          *(void *)uint64_t v34 = *(void *)v35;
          *(void *)(v34 + 8) = *(void *)(v35 + 8);
          *(void *)(v34 + 16) = *(void *)(v35 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v48 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v34, v35, v48);
          uint64_t v49 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v34 + *(int *)(v49 + 20)) = *(void *)(v35 + *(int *)(v49 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_38;
    }
LABEL_29:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v34, (const void *)v35, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_38;
  }
  if (v40)
  {
    sub_1BFFAEED8(v34, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_29;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v34, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      uint64_t v415 = *(void *)v35;
      uint64_t v416 = *(void *)(v35 + 8);
      uint64_t v417 = *(void *)(v35 + 16);
      char v418 = *(unsigned char *)(v35 + 24);
      sub_1BFE86E48(v415, v416, v417, v418);
      *(void *)uint64_t v34 = v415;
      *(void *)(v34 + 8) = v416;
      *(void *)(v34 + 16) = v417;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v34 + 24) = v418;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v43 == 1)
      {
        *(void *)uint64_t v34 = *(void *)v35;
        *(void *)(v34 + 8) = *(void *)(v35 + 8);
        *(void *)(v34 + 16) = *(void *)(v35 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v523 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v523 - 8) + 16))(v34, v35, v523);
        uint64_t v524 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v34 + *(int *)(v524 + 20)) = *(void *)(v35 + *(int *)(v524 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_38:
  uint64_t v50 = a3[8];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = v4 + v50;
  int v53 = v38(a1 + v50, 1, v36);
  int v54 = v38(v52, 1, v36);
  if (v53)
  {
    if (!v54)
    {
      int v55 = swift_getEnumCaseMultiPayload();
      if (v55 == 2)
      {
        uint64_t v58 = *(void *)v52;
        uint64_t v59 = *(void *)(v52 + 8);
        uint64_t v60 = *(void *)(v52 + 16);
        char v61 = *(unsigned char *)(v52 + 24);
        sub_1BFE86E48(v58, v59, v60, v61);
        *(void *)uint64_t v51 = v58;
        *(void *)(v51 + 8) = v59;
        *(void *)(v51 + 16) = v60;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v51 + 24) = v61;
      }
      else
      {
        if (v55 == 1)
        {
          *(void *)uint64_t v51 = *(void *)v52;
          *(void *)(v51 + 8) = *(void *)(v52 + 8);
          *(void *)(v51 + 16) = *(void *)(v52 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v62 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v51, v52, v62);
          uint64_t v63 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v51 + *(int *)(v63 + 20)) = *(void *)(v52 + *(int *)(v63 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v51, 0, 1, v36);
      goto LABEL_55;
    }
LABEL_46:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v51, (const void *)v52, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_55;
  }
  if (v54)
  {
    sub_1BFFAEED8(v51, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_46;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v51, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v57 = swift_getEnumCaseMultiPayload();
    if (v57 == 2)
    {
      uint64_t v419 = *(void *)v52;
      uint64_t v420 = *(void *)(v52 + 8);
      uint64_t v421 = *(void *)(v52 + 16);
      char v422 = *(unsigned char *)(v52 + 24);
      sub_1BFE86E48(v419, v420, v421, v422);
      *(void *)uint64_t v51 = v419;
      *(void *)(v51 + 8) = v420;
      *(void *)(v51 + 16) = v421;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v51 + 24) = v422;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v57 == 1)
      {
        *(void *)uint64_t v51 = *(void *)v52;
        *(void *)(v51 + 8) = *(void *)(v52 + 8);
        *(void *)(v51 + 16) = *(void *)(v52 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v525 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v525 - 8) + 16))(v51, v52, v525);
        uint64_t v526 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v51 + *(int *)(v526 + 20)) = *(void *)(v52 + *(int *)(v526 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_55:
  uint64_t v64 = a3[9];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = v4 + v64;
  int v67 = v38(a1 + v64, 1, v36);
  int v68 = v38(v66, 1, v36);
  if (v67)
  {
    if (!v68)
    {
      int v69 = swift_getEnumCaseMultiPayload();
      if (v69 == 2)
      {
        uint64_t v72 = *(void *)v66;
        uint64_t v73 = *(void *)(v66 + 8);
        uint64_t v74 = *(void *)(v66 + 16);
        char v75 = *(unsigned char *)(v66 + 24);
        sub_1BFE86E48(v72, v73, v74, v75);
        *(void *)uint64_t v65 = v72;
        *(void *)(v65 + 8) = v73;
        *(void *)(v65 + 16) = v74;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v65 + 24) = v75;
      }
      else
      {
        if (v69 == 1)
        {
          *(void *)uint64_t v65 = *(void *)v66;
          *(void *)(v65 + 8) = *(void *)(v66 + 8);
          *(void *)(v65 + 16) = *(void *)(v66 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v76 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v65, v66, v76);
          uint64_t v77 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v65 + *(int *)(v77 + 20)) = *(void *)(v66 + *(int *)(v77 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v65, 0, 1, v36);
      goto LABEL_72;
    }
LABEL_63:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v65, (const void *)v66, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_72;
  }
  if (v68)
  {
    sub_1BFFAEED8(v65, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_63;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v65, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v71 = swift_getEnumCaseMultiPayload();
    if (v71 == 2)
    {
      uint64_t v423 = *(void *)v66;
      uint64_t v424 = *(void *)(v66 + 8);
      uint64_t v425 = *(void *)(v66 + 16);
      char v426 = *(unsigned char *)(v66 + 24);
      sub_1BFE86E48(v423, v424, v425, v426);
      *(void *)uint64_t v65 = v423;
      *(void *)(v65 + 8) = v424;
      *(void *)(v65 + 16) = v425;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v65 + 24) = v426;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v71 == 1)
      {
        *(void *)uint64_t v65 = *(void *)v66;
        *(void *)(v65 + 8) = *(void *)(v66 + 8);
        *(void *)(v65 + 16) = *(void *)(v66 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v527 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v527 - 8) + 16))(v65, v66, v527);
        uint64_t v528 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v65 + *(int *)(v528 + 20)) = *(void *)(v66 + *(int *)(v528 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_72:
  uint64_t v78 = a3[10];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = v4 + v78;
  int v81 = v38(a1 + v78, 1, v36);
  int v82 = v38(v80, 1, v36);
  if (v81)
  {
    if (!v82)
    {
      int v83 = swift_getEnumCaseMultiPayload();
      if (v83 == 2)
      {
        uint64_t v86 = *(void *)v80;
        uint64_t v87 = *(void *)(v80 + 8);
        uint64_t v88 = *(void *)(v80 + 16);
        char v89 = *(unsigned char *)(v80 + 24);
        sub_1BFE86E48(v86, v87, v88, v89);
        *(void *)uint64_t v79 = v86;
        *(void *)(v79 + 8) = v87;
        *(void *)(v79 + 16) = v88;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v79 + 24) = v89;
      }
      else
      {
        if (v83 == 1)
        {
          *(void *)uint64_t v79 = *(void *)v80;
          *(void *)(v79 + 8) = *(void *)(v80 + 8);
          *(void *)(v79 + 16) = *(void *)(v80 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v90 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v79, v80, v90);
          uint64_t v91 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v79 + *(int *)(v91 + 20)) = *(void *)(v80 + *(int *)(v91 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v79, 0, 1, v36);
      goto LABEL_89;
    }
LABEL_80:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v79, (const void *)v80, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_89;
  }
  if (v82)
  {
    sub_1BFFAEED8(v79, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_80;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v79, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v85 = swift_getEnumCaseMultiPayload();
    if (v85 == 2)
    {
      uint64_t v427 = *(void *)v80;
      uint64_t v428 = *(void *)(v80 + 8);
      uint64_t v429 = *(void *)(v80 + 16);
      char v430 = *(unsigned char *)(v80 + 24);
      sub_1BFE86E48(v427, v428, v429, v430);
      *(void *)uint64_t v79 = v427;
      *(void *)(v79 + 8) = v428;
      *(void *)(v79 + 16) = v429;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v79 + 24) = v430;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v85 == 1)
      {
        *(void *)uint64_t v79 = *(void *)v80;
        *(void *)(v79 + 8) = *(void *)(v80 + 8);
        *(void *)(v79 + 16) = *(void *)(v80 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v529 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v529 - 8) + 16))(v79, v80, v529);
        uint64_t v530 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v79 + *(int *)(v530 + 20)) = *(void *)(v80 + *(int *)(v530 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_89:
  uint64_t v92 = a3[11];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = v4 + v92;
  int v95 = v38(a1 + v92, 1, v36);
  int v96 = v38(v94, 1, v36);
  if (v95)
  {
    if (!v96)
    {
      int v97 = swift_getEnumCaseMultiPayload();
      if (v97 == 2)
      {
        uint64_t v100 = *(void *)v94;
        uint64_t v101 = *(void *)(v94 + 8);
        uint64_t v102 = *(void *)(v94 + 16);
        char v103 = *(unsigned char *)(v94 + 24);
        sub_1BFE86E48(v100, v101, v102, v103);
        *(void *)uint64_t v93 = v100;
        *(void *)(v93 + 8) = v101;
        *(void *)(v93 + 16) = v102;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v93 + 24) = v103;
      }
      else
      {
        if (v97 == 1)
        {
          *(void *)uint64_t v93 = *(void *)v94;
          *(void *)(v93 + 8) = *(void *)(v94 + 8);
          *(void *)(v93 + 16) = *(void *)(v94 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v104 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(v93, v94, v104);
          uint64_t v105 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v93 + *(int *)(v105 + 20)) = *(void *)(v94 + *(int *)(v105 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v93, 0, 1, v36);
      goto LABEL_106;
    }
LABEL_97:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v93, (const void *)v94, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_106;
  }
  if (v96)
  {
    sub_1BFFAEED8(v93, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_97;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v93, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v99 = swift_getEnumCaseMultiPayload();
    if (v99 == 2)
    {
      uint64_t v431 = *(void *)v94;
      uint64_t v432 = *(void *)(v94 + 8);
      uint64_t v433 = *(void *)(v94 + 16);
      char v434 = *(unsigned char *)(v94 + 24);
      sub_1BFE86E48(v431, v432, v433, v434);
      *(void *)uint64_t v93 = v431;
      *(void *)(v93 + 8) = v432;
      *(void *)(v93 + 16) = v433;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v93 + 24) = v434;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v99 == 1)
      {
        *(void *)uint64_t v93 = *(void *)v94;
        *(void *)(v93 + 8) = *(void *)(v94 + 8);
        *(void *)(v93 + 16) = *(void *)(v94 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v531 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v531 - 8) + 16))(v93, v94, v531);
        uint64_t v532 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v93 + *(int *)(v532 + 20)) = *(void *)(v94 + *(int *)(v532 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_106:
  uint64_t v106 = a3[12];
  uint64_t v107 = a1 + v106;
  uint64_t v108 = v4 + v106;
  int v109 = v38(a1 + v106, 1, v36);
  int v110 = v38(v108, 1, v36);
  if (v109)
  {
    if (!v110)
    {
      int v111 = swift_getEnumCaseMultiPayload();
      if (v111 == 2)
      {
        uint64_t v114 = *(void *)v108;
        uint64_t v115 = *(void *)(v108 + 8);
        uint64_t v116 = *(void *)(v108 + 16);
        char v117 = *(unsigned char *)(v108 + 24);
        sub_1BFE86E48(v114, v115, v116, v117);
        *(void *)uint64_t v107 = v114;
        *(void *)(v107 + 8) = v115;
        *(void *)(v107 + 16) = v116;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v107 + 24) = v117;
      }
      else
      {
        if (v111 == 1)
        {
          *(void *)uint64_t v107 = *(void *)v108;
          *(void *)(v107 + 8) = *(void *)(v108 + 8);
          *(void *)(v107 + 16) = *(void *)(v108 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v118 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v107, v108, v118);
          uint64_t v119 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v107 + *(int *)(v119 + 20)) = *(void *)(v108 + *(int *)(v119 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v107, 0, 1, v36);
      goto LABEL_123;
    }
LABEL_114:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v107, (const void *)v108, *(void *)(*(void *)(v112 - 8) + 64));
    goto LABEL_123;
  }
  if (v110)
  {
    sub_1BFFAEED8(v107, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_114;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v107, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v113 = swift_getEnumCaseMultiPayload();
    if (v113 == 2)
    {
      uint64_t v435 = *(void *)v108;
      uint64_t v436 = *(void *)(v108 + 8);
      uint64_t v437 = *(void *)(v108 + 16);
      char v438 = *(unsigned char *)(v108 + 24);
      sub_1BFE86E48(v435, v436, v437, v438);
      *(void *)uint64_t v107 = v435;
      *(void *)(v107 + 8) = v436;
      *(void *)(v107 + 16) = v437;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v107 + 24) = v438;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v113 == 1)
      {
        *(void *)uint64_t v107 = *(void *)v108;
        *(void *)(v107 + 8) = *(void *)(v108 + 8);
        *(void *)(v107 + 16) = *(void *)(v108 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v533 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v533 - 8) + 16))(v107, v108, v533);
        uint64_t v534 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v107 + *(int *)(v534 + 20)) = *(void *)(v108 + *(int *)(v534 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_123:
  uint64_t v120 = a3[13];
  uint64_t v121 = a1 + v120;
  uint64_t v122 = v4 + v120;
  int v123 = v38(a1 + v120, 1, v36);
  int v124 = v38(v122, 1, v36);
  if (v123)
  {
    if (!v124)
    {
      int v125 = swift_getEnumCaseMultiPayload();
      if (v125 == 2)
      {
        uint64_t v128 = *(void *)v122;
        uint64_t v129 = *(void *)(v122 + 8);
        uint64_t v130 = *(void *)(v122 + 16);
        char v131 = *(unsigned char *)(v122 + 24);
        sub_1BFE86E48(v128, v129, v130, v131);
        *(void *)uint64_t v121 = v128;
        *(void *)(v121 + 8) = v129;
        *(void *)(v121 + 16) = v130;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v121 + 24) = v131;
      }
      else
      {
        if (v125 == 1)
        {
          *(void *)uint64_t v121 = *(void *)v122;
          *(void *)(v121 + 8) = *(void *)(v122 + 8);
          *(void *)(v121 + 16) = *(void *)(v122 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v132 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 16))(v121, v122, v132);
          uint64_t v133 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v121 + *(int *)(v133 + 20)) = *(void *)(v122 + *(int *)(v133 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v121, 0, 1, v36);
      goto LABEL_140;
    }
LABEL_131:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v121, (const void *)v122, *(void *)(*(void *)(v126 - 8) + 64));
    goto LABEL_140;
  }
  if (v124)
  {
    sub_1BFFAEED8(v121, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_131;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v121, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v127 = swift_getEnumCaseMultiPayload();
    if (v127 == 2)
    {
      uint64_t v439 = *(void *)v122;
      uint64_t v440 = *(void *)(v122 + 8);
      uint64_t v441 = *(void *)(v122 + 16);
      char v442 = *(unsigned char *)(v122 + 24);
      sub_1BFE86E48(v439, v440, v441, v442);
      *(void *)uint64_t v121 = v439;
      *(void *)(v121 + 8) = v440;
      *(void *)(v121 + 16) = v441;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v121 + 24) = v442;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v127 == 1)
      {
        *(void *)uint64_t v121 = *(void *)v122;
        *(void *)(v121 + 8) = *(void *)(v122 + 8);
        *(void *)(v121 + 16) = *(void *)(v122 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v535 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v535 - 8) + 16))(v121, v122, v535);
        uint64_t v536 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v121 + *(int *)(v536 + 20)) = *(void *)(v122 + *(int *)(v536 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_140:
  uint64_t v134 = a3[14];
  uint64_t v135 = a1 + v134;
  uint64_t v136 = v4 + v134;
  int v137 = v38(a1 + v134, 1, v36);
  int v138 = v38(v136, 1, v36);
  if (v137)
  {
    if (!v138)
    {
      int v139 = swift_getEnumCaseMultiPayload();
      if (v139 == 2)
      {
        uint64_t v142 = *(void *)v136;
        uint64_t v143 = *(void *)(v136 + 8);
        uint64_t v144 = *(void *)(v136 + 16);
        char v145 = *(unsigned char *)(v136 + 24);
        sub_1BFE86E48(v142, v143, v144, v145);
        *(void *)uint64_t v135 = v142;
        *(void *)(v135 + 8) = v143;
        *(void *)(v135 + 16) = v144;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v135 + 24) = v145;
      }
      else
      {
        if (v139 == 1)
        {
          *(void *)uint64_t v135 = *(void *)v136;
          *(void *)(v135 + 8) = *(void *)(v136 + 8);
          *(void *)(v135 + 16) = *(void *)(v136 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v146 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 16))(v135, v136, v146);
          uint64_t v147 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v135 + *(int *)(v147 + 20)) = *(void *)(v136 + *(int *)(v147 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v135, 0, 1, v36);
      goto LABEL_157;
    }
LABEL_148:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v135, (const void *)v136, *(void *)(*(void *)(v140 - 8) + 64));
    goto LABEL_157;
  }
  if (v138)
  {
    sub_1BFFAEED8(v135, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_148;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v135, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v141 = swift_getEnumCaseMultiPayload();
    if (v141 == 2)
    {
      uint64_t v443 = *(void *)v136;
      uint64_t v444 = *(void *)(v136 + 8);
      uint64_t v445 = *(void *)(v136 + 16);
      char v446 = *(unsigned char *)(v136 + 24);
      sub_1BFE86E48(v443, v444, v445, v446);
      *(void *)uint64_t v135 = v443;
      *(void *)(v135 + 8) = v444;
      *(void *)(v135 + 16) = v445;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v135 + 24) = v446;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v141 == 1)
      {
        *(void *)uint64_t v135 = *(void *)v136;
        *(void *)(v135 + 8) = *(void *)(v136 + 8);
        *(void *)(v135 + 16) = *(void *)(v136 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v537 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v537 - 8) + 16))(v135, v136, v537);
        uint64_t v538 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v135 + *(int *)(v538 + 20)) = *(void *)(v136 + *(int *)(v538 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_157:
  uint64_t v148 = a3[15];
  uint64_t v149 = a1 + v148;
  uint64_t v150 = v4 + v148;
  int v151 = v38(a1 + v148, 1, v36);
  int v152 = v38(v150, 1, v36);
  if (v151)
  {
    if (!v152)
    {
      int v153 = swift_getEnumCaseMultiPayload();
      if (v153 == 2)
      {
        uint64_t v156 = *(void *)v150;
        uint64_t v157 = *(void *)(v150 + 8);
        uint64_t v158 = *(void *)(v150 + 16);
        char v159 = *(unsigned char *)(v150 + 24);
        sub_1BFE86E48(v156, v157, v158, v159);
        *(void *)uint64_t v149 = v156;
        *(void *)(v149 + 8) = v157;
        *(void *)(v149 + 16) = v158;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v149 + 24) = v159;
      }
      else
      {
        if (v153 == 1)
        {
          *(void *)uint64_t v149 = *(void *)v150;
          *(void *)(v149 + 8) = *(void *)(v150 + 8);
          *(void *)(v149 + 16) = *(void *)(v150 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v160 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 16))(v149, v150, v160);
          uint64_t v161 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v149 + *(int *)(v161 + 20)) = *(void *)(v150 + *(int *)(v161 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v149, 0, 1, v36);
      goto LABEL_174;
    }
LABEL_165:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v149, (const void *)v150, *(void *)(*(void *)(v154 - 8) + 64));
    goto LABEL_174;
  }
  if (v152)
  {
    sub_1BFFAEED8(v149, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_165;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v149, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v155 = swift_getEnumCaseMultiPayload();
    if (v155 == 2)
    {
      uint64_t v447 = *(void *)v150;
      uint64_t v448 = *(void *)(v150 + 8);
      uint64_t v449 = *(void *)(v150 + 16);
      char v450 = *(unsigned char *)(v150 + 24);
      sub_1BFE86E48(v447, v448, v449, v450);
      *(void *)uint64_t v149 = v447;
      *(void *)(v149 + 8) = v448;
      *(void *)(v149 + 16) = v449;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v149 + 24) = v450;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v155 == 1)
      {
        *(void *)uint64_t v149 = *(void *)v150;
        *(void *)(v149 + 8) = *(void *)(v150 + 8);
        *(void *)(v149 + 16) = *(void *)(v150 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v539 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v539 - 8) + 16))(v149, v150, v539);
        uint64_t v540 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v149 + *(int *)(v540 + 20)) = *(void *)(v150 + *(int *)(v540 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_174:
  uint64_t v162 = a3[16];
  uint64_t v163 = a1 + v162;
  uint64_t v164 = v4 + v162;
  int v165 = v38(a1 + v162, 1, v36);
  int v166 = v38(v164, 1, v36);
  if (v165)
  {
    if (!v166)
    {
      int v167 = swift_getEnumCaseMultiPayload();
      if (v167 == 2)
      {
        uint64_t v170 = *(void *)v164;
        uint64_t v171 = *(void *)(v164 + 8);
        uint64_t v172 = *(void *)(v164 + 16);
        char v173 = *(unsigned char *)(v164 + 24);
        sub_1BFE86E48(v170, v171, v172, v173);
        *(void *)uint64_t v163 = v170;
        *(void *)(v163 + 8) = v171;
        *(void *)(v163 + 16) = v172;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v163 + 24) = v173;
      }
      else
      {
        if (v167 == 1)
        {
          *(void *)uint64_t v163 = *(void *)v164;
          *(void *)(v163 + 8) = *(void *)(v164 + 8);
          *(void *)(v163 + 16) = *(void *)(v164 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v174 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 16))(v163, v164, v174);
          uint64_t v175 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v163 + *(int *)(v175 + 20)) = *(void *)(v164 + *(int *)(v175 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v163, 0, 1, v36);
      goto LABEL_191;
    }
LABEL_182:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v163, (const void *)v164, *(void *)(*(void *)(v168 - 8) + 64));
    goto LABEL_191;
  }
  if (v166)
  {
    sub_1BFFAEED8(v163, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_182;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v163, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v169 = swift_getEnumCaseMultiPayload();
    if (v169 == 2)
    {
      uint64_t v451 = *(void *)v164;
      uint64_t v452 = *(void *)(v164 + 8);
      uint64_t v453 = *(void *)(v164 + 16);
      char v454 = *(unsigned char *)(v164 + 24);
      sub_1BFE86E48(v451, v452, v453, v454);
      *(void *)uint64_t v163 = v451;
      *(void *)(v163 + 8) = v452;
      *(void *)(v163 + 16) = v453;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v163 + 24) = v454;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v169 == 1)
      {
        *(void *)uint64_t v163 = *(void *)v164;
        *(void *)(v163 + 8) = *(void *)(v164 + 8);
        *(void *)(v163 + 16) = *(void *)(v164 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v541 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v541 - 8) + 16))(v163, v164, v541);
        uint64_t v542 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v163 + *(int *)(v542 + 20)) = *(void *)(v164 + *(int *)(v542 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_191:
  uint64_t v176 = a3[17];
  uint64_t v177 = a1 + v176;
  uint64_t v178 = v4 + v176;
  int v179 = v38(a1 + v176, 1, v36);
  int v180 = v38(v178, 1, v36);
  if (v179)
  {
    if (!v180)
    {
      int v181 = swift_getEnumCaseMultiPayload();
      if (v181 == 2)
      {
        uint64_t v184 = *(void *)v178;
        uint64_t v185 = *(void *)(v178 + 8);
        uint64_t v186 = *(void *)(v178 + 16);
        char v187 = *(unsigned char *)(v178 + 24);
        sub_1BFE86E48(v184, v185, v186, v187);
        *(void *)uint64_t v177 = v184;
        *(void *)(v177 + 8) = v185;
        *(void *)(v177 + 16) = v186;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v177 + 24) = v187;
      }
      else
      {
        if (v181 == 1)
        {
          *(void *)uint64_t v177 = *(void *)v178;
          *(void *)(v177 + 8) = *(void *)(v178 + 8);
          *(void *)(v177 + 16) = *(void *)(v178 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v188 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 16))(v177, v178, v188);
          uint64_t v189 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v177 + *(int *)(v189 + 20)) = *(void *)(v178 + *(int *)(v189 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v177, 0, 1, v36);
      goto LABEL_208;
    }
LABEL_199:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v177, (const void *)v178, *(void *)(*(void *)(v182 - 8) + 64));
    goto LABEL_208;
  }
  if (v180)
  {
    sub_1BFFAEED8(v177, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_199;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v177, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v183 = swift_getEnumCaseMultiPayload();
    if (v183 == 2)
    {
      uint64_t v455 = *(void *)v178;
      uint64_t v456 = *(void *)(v178 + 8);
      uint64_t v457 = *(void *)(v178 + 16);
      char v458 = *(unsigned char *)(v178 + 24);
      sub_1BFE86E48(v455, v456, v457, v458);
      *(void *)uint64_t v177 = v455;
      *(void *)(v177 + 8) = v456;
      *(void *)(v177 + 16) = v457;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v177 + 24) = v458;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v183 == 1)
      {
        *(void *)uint64_t v177 = *(void *)v178;
        *(void *)(v177 + 8) = *(void *)(v178 + 8);
        *(void *)(v177 + 16) = *(void *)(v178 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v543 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v543 - 8) + 16))(v177, v178, v543);
        uint64_t v544 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v177 + *(int *)(v544 + 20)) = *(void *)(v178 + *(int *)(v544 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_208:
  uint64_t v190 = a3[18];
  uint64_t v191 = a1 + v190;
  uint64_t v192 = v4 + v190;
  int v193 = v38(a1 + v190, 1, v36);
  int v194 = v38(v192, 1, v36);
  if (v193)
  {
    if (!v194)
    {
      int v195 = swift_getEnumCaseMultiPayload();
      if (v195 == 2)
      {
        uint64_t v198 = *(void *)v192;
        uint64_t v199 = *(void *)(v192 + 8);
        uint64_t v200 = *(void *)(v192 + 16);
        char v201 = *(unsigned char *)(v192 + 24);
        sub_1BFE86E48(v198, v199, v200, v201);
        *(void *)uint64_t v191 = v198;
        *(void *)(v191 + 8) = v199;
        *(void *)(v191 + 16) = v200;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v191 + 24) = v201;
      }
      else
      {
        if (v195 == 1)
        {
          *(void *)uint64_t v191 = *(void *)v192;
          *(void *)(v191 + 8) = *(void *)(v192 + 8);
          *(void *)(v191 + 16) = *(void *)(v192 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v202 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v202 - 8) + 16))(v191, v192, v202);
          uint64_t v203 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v191 + *(int *)(v203 + 20)) = *(void *)(v192 + *(int *)(v203 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v191, 0, 1, v36);
      goto LABEL_225;
    }
LABEL_216:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v191, (const void *)v192, *(void *)(*(void *)(v196 - 8) + 64));
    goto LABEL_225;
  }
  if (v194)
  {
    sub_1BFFAEED8(v191, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_216;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v191, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v197 = swift_getEnumCaseMultiPayload();
    if (v197 == 2)
    {
      uint64_t v459 = *(void *)v192;
      uint64_t v460 = *(void *)(v192 + 8);
      uint64_t v461 = *(void *)(v192 + 16);
      char v462 = *(unsigned char *)(v192 + 24);
      sub_1BFE86E48(v459, v460, v461, v462);
      *(void *)uint64_t v191 = v459;
      *(void *)(v191 + 8) = v460;
      *(void *)(v191 + 16) = v461;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v191 + 24) = v462;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v197 == 1)
      {
        *(void *)uint64_t v191 = *(void *)v192;
        *(void *)(v191 + 8) = *(void *)(v192 + 8);
        *(void *)(v191 + 16) = *(void *)(v192 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v545 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v545 - 8) + 16))(v191, v192, v545);
        uint64_t v546 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v191 + *(int *)(v546 + 20)) = *(void *)(v192 + *(int *)(v546 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_225:
  uint64_t v204 = a3[19];
  uint64_t v205 = a1 + v204;
  uint64_t v206 = v4 + v204;
  int v207 = v38(a1 + v204, 1, v36);
  int v208 = v38(v206, 1, v36);
  if (v207)
  {
    if (!v208)
    {
      int v209 = swift_getEnumCaseMultiPayload();
      if (v209 == 2)
      {
        uint64_t v212 = *(void *)v206;
        uint64_t v213 = *(void *)(v206 + 8);
        uint64_t v214 = *(void *)(v206 + 16);
        char v215 = *(unsigned char *)(v206 + 24);
        sub_1BFE86E48(v212, v213, v214, v215);
        *(void *)uint64_t v205 = v212;
        *(void *)(v205 + 8) = v213;
        *(void *)(v205 + 16) = v214;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v205 + 24) = v215;
      }
      else
      {
        if (v209 == 1)
        {
          *(void *)uint64_t v205 = *(void *)v206;
          *(void *)(v205 + 8) = *(void *)(v206 + 8);
          *(void *)(v205 + 16) = *(void *)(v206 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v216 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v216 - 8) + 16))(v205, v206, v216);
          uint64_t v217 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v205 + *(int *)(v217 + 20)) = *(void *)(v206 + *(int *)(v217 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v205, 0, 1, v36);
      goto LABEL_242;
    }
LABEL_233:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v205, (const void *)v206, *(void *)(*(void *)(v210 - 8) + 64));
    goto LABEL_242;
  }
  if (v208)
  {
    sub_1BFFAEED8(v205, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_233;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v205, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v211 = swift_getEnumCaseMultiPayload();
    if (v211 == 2)
    {
      uint64_t v463 = *(void *)v206;
      uint64_t v464 = *(void *)(v206 + 8);
      uint64_t v465 = *(void *)(v206 + 16);
      char v466 = *(unsigned char *)(v206 + 24);
      sub_1BFE86E48(v463, v464, v465, v466);
      *(void *)uint64_t v205 = v463;
      *(void *)(v205 + 8) = v464;
      *(void *)(v205 + 16) = v465;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v205 + 24) = v466;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v211 == 1)
      {
        *(void *)uint64_t v205 = *(void *)v206;
        *(void *)(v205 + 8) = *(void *)(v206 + 8);
        *(void *)(v205 + 16) = *(void *)(v206 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v547 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v547 - 8) + 16))(v205, v206, v547);
        uint64_t v548 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v205 + *(int *)(v548 + 20)) = *(void *)(v206 + *(int *)(v548 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_242:
  uint64_t v218 = a3[20];
  uint64_t v219 = a1 + v218;
  uint64_t v220 = v4 + v218;
  int v221 = v38(a1 + v218, 1, v36);
  int v222 = v38(v220, 1, v36);
  if (v221)
  {
    if (!v222)
    {
      int v223 = swift_getEnumCaseMultiPayload();
      if (v223 == 2)
      {
        uint64_t v226 = *(void *)v220;
        uint64_t v227 = *(void *)(v220 + 8);
        uint64_t v228 = *(void *)(v220 + 16);
        char v229 = *(unsigned char *)(v220 + 24);
        sub_1BFE86E48(v226, v227, v228, v229);
        *(void *)uint64_t v219 = v226;
        *(void *)(v219 + 8) = v227;
        *(void *)(v219 + 16) = v228;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v219 + 24) = v229;
      }
      else
      {
        if (v223 == 1)
        {
          *(void *)uint64_t v219 = *(void *)v220;
          *(void *)(v219 + 8) = *(void *)(v220 + 8);
          *(void *)(v219 + 16) = *(void *)(v220 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v230 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v230 - 8) + 16))(v219, v220, v230);
          uint64_t v231 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v219 + *(int *)(v231 + 20)) = *(void *)(v220 + *(int *)(v231 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v219, 0, 1, v36);
      goto LABEL_259;
    }
LABEL_250:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v219, (const void *)v220, *(void *)(*(void *)(v224 - 8) + 64));
    goto LABEL_259;
  }
  if (v222)
  {
    sub_1BFFAEED8(v219, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_250;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v219, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v225 = swift_getEnumCaseMultiPayload();
    if (v225 == 2)
    {
      uint64_t v467 = *(void *)v220;
      uint64_t v468 = *(void *)(v220 + 8);
      uint64_t v469 = *(void *)(v220 + 16);
      char v470 = *(unsigned char *)(v220 + 24);
      sub_1BFE86E48(v467, v468, v469, v470);
      *(void *)uint64_t v219 = v467;
      *(void *)(v219 + 8) = v468;
      *(void *)(v219 + 16) = v469;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v219 + 24) = v470;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v225 == 1)
      {
        *(void *)uint64_t v219 = *(void *)v220;
        *(void *)(v219 + 8) = *(void *)(v220 + 8);
        *(void *)(v219 + 16) = *(void *)(v220 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v549 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v549 - 8) + 16))(v219, v220, v549);
        uint64_t v550 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v219 + *(int *)(v550 + 20)) = *(void *)(v220 + *(int *)(v550 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_259:
  uint64_t v232 = a3[21];
  uint64_t v233 = a1 + v232;
  uint64_t v234 = v4 + v232;
  int v235 = v38(a1 + v232, 1, v36);
  int v236 = v38(v234, 1, v36);
  if (v235)
  {
    if (!v236)
    {
      int v237 = swift_getEnumCaseMultiPayload();
      if (v237 == 2)
      {
        uint64_t v240 = *(void *)v234;
        uint64_t v241 = *(void *)(v234 + 8);
        uint64_t v242 = *(void *)(v234 + 16);
        char v243 = *(unsigned char *)(v234 + 24);
        sub_1BFE86E48(v240, v241, v242, v243);
        *(void *)uint64_t v233 = v240;
        *(void *)(v233 + 8) = v241;
        *(void *)(v233 + 16) = v242;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v233 + 24) = v243;
      }
      else
      {
        if (v237 == 1)
        {
          *(void *)uint64_t v233 = *(void *)v234;
          *(void *)(v233 + 8) = *(void *)(v234 + 8);
          *(void *)(v233 + 16) = *(void *)(v234 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v244 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v244 - 8) + 16))(v233, v234, v244);
          uint64_t v245 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v233 + *(int *)(v245 + 20)) = *(void *)(v234 + *(int *)(v245 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v233, 0, 1, v36);
      goto LABEL_276;
    }
LABEL_267:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v233, (const void *)v234, *(void *)(*(void *)(v238 - 8) + 64));
    goto LABEL_276;
  }
  if (v236)
  {
    sub_1BFFAEED8(v233, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_267;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v233, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v239 = swift_getEnumCaseMultiPayload();
    if (v239 == 2)
    {
      uint64_t v471 = *(void *)v234;
      uint64_t v472 = *(void *)(v234 + 8);
      uint64_t v473 = *(void *)(v234 + 16);
      char v474 = *(unsigned char *)(v234 + 24);
      sub_1BFE86E48(v471, v472, v473, v474);
      *(void *)uint64_t v233 = v471;
      *(void *)(v233 + 8) = v472;
      *(void *)(v233 + 16) = v473;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v233 + 24) = v474;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v239 == 1)
      {
        *(void *)uint64_t v233 = *(void *)v234;
        *(void *)(v233 + 8) = *(void *)(v234 + 8);
        *(void *)(v233 + 16) = *(void *)(v234 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v551 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v551 - 8) + 16))(v233, v234, v551);
        uint64_t v552 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v233 + *(int *)(v552 + 20)) = *(void *)(v234 + *(int *)(v552 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_276:
  uint64_t v246 = a3[22];
  uint64_t v247 = a1 + v246;
  uint64_t v248 = v4 + v246;
  int v249 = v38(a1 + v246, 1, v36);
  int v250 = v38(v248, 1, v36);
  if (v249)
  {
    if (!v250)
    {
      int v251 = swift_getEnumCaseMultiPayload();
      if (v251 == 2)
      {
        uint64_t v254 = *(void *)v248;
        uint64_t v255 = *(void *)(v248 + 8);
        uint64_t v256 = *(void *)(v248 + 16);
        char v257 = *(unsigned char *)(v248 + 24);
        sub_1BFE86E48(v254, v255, v256, v257);
        *(void *)uint64_t v247 = v254;
        *(void *)(v247 + 8) = v255;
        *(void *)(v247 + 16) = v256;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v247 + 24) = v257;
      }
      else
      {
        if (v251 == 1)
        {
          *(void *)uint64_t v247 = *(void *)v248;
          *(void *)(v247 + 8) = *(void *)(v248 + 8);
          *(void *)(v247 + 16) = *(void *)(v248 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v258 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v258 - 8) + 16))(v247, v248, v258);
          uint64_t v259 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v247 + *(int *)(v259 + 20)) = *(void *)(v248 + *(int *)(v259 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v247, 0, 1, v36);
      goto LABEL_293;
    }
LABEL_284:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v247, (const void *)v248, *(void *)(*(void *)(v252 - 8) + 64));
    goto LABEL_293;
  }
  if (v250)
  {
    sub_1BFFAEED8(v247, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_284;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v247, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v253 = swift_getEnumCaseMultiPayload();
    if (v253 == 2)
    {
      uint64_t v475 = *(void *)v248;
      uint64_t v476 = *(void *)(v248 + 8);
      uint64_t v477 = *(void *)(v248 + 16);
      char v478 = *(unsigned char *)(v248 + 24);
      sub_1BFE86E48(v475, v476, v477, v478);
      *(void *)uint64_t v247 = v475;
      *(void *)(v247 + 8) = v476;
      *(void *)(v247 + 16) = v477;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v247 + 24) = v478;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v253 == 1)
      {
        *(void *)uint64_t v247 = *(void *)v248;
        *(void *)(v247 + 8) = *(void *)(v248 + 8);
        *(void *)(v247 + 16) = *(void *)(v248 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v553 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v553 - 8) + 16))(v247, v248, v553);
        uint64_t v554 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v247 + *(int *)(v554 + 20)) = *(void *)(v248 + *(int *)(v554 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_293:
  uint64_t v260 = a3[23];
  uint64_t v261 = a1 + v260;
  uint64_t v262 = v4 + v260;
  int v263 = v38(a1 + v260, 1, v36);
  int v264 = v38(v262, 1, v36);
  if (v263)
  {
    if (!v264)
    {
      int v265 = swift_getEnumCaseMultiPayload();
      if (v265 == 2)
      {
        uint64_t v268 = *(void *)v262;
        uint64_t v269 = *(void *)(v262 + 8);
        uint64_t v270 = *(void *)(v262 + 16);
        char v271 = *(unsigned char *)(v262 + 24);
        sub_1BFE86E48(v268, v269, v270, v271);
        *(void *)uint64_t v261 = v268;
        *(void *)(v261 + 8) = v269;
        *(void *)(v261 + 16) = v270;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v261 + 24) = v271;
      }
      else
      {
        if (v265 == 1)
        {
          *(void *)uint64_t v261 = *(void *)v262;
          *(void *)(v261 + 8) = *(void *)(v262 + 8);
          *(void *)(v261 + 16) = *(void *)(v262 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v272 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v272 - 8) + 16))(v261, v262, v272);
          uint64_t v273 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v261 + *(int *)(v273 + 20)) = *(void *)(v262 + *(int *)(v273 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v261, 0, 1, v36);
      goto LABEL_310;
    }
LABEL_301:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v261, (const void *)v262, *(void *)(*(void *)(v266 - 8) + 64));
    goto LABEL_310;
  }
  if (v264)
  {
    sub_1BFFAEED8(v261, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_301;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v261, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v267 = swift_getEnumCaseMultiPayload();
    if (v267 == 2)
    {
      uint64_t v479 = *(void *)v262;
      uint64_t v480 = *(void *)(v262 + 8);
      uint64_t v481 = *(void *)(v262 + 16);
      char v482 = *(unsigned char *)(v262 + 24);
      sub_1BFE86E48(v479, v480, v481, v482);
      *(void *)uint64_t v261 = v479;
      *(void *)(v261 + 8) = v480;
      *(void *)(v261 + 16) = v481;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v261 + 24) = v482;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v267 == 1)
      {
        *(void *)uint64_t v261 = *(void *)v262;
        *(void *)(v261 + 8) = *(void *)(v262 + 8);
        *(void *)(v261 + 16) = *(void *)(v262 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v555 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v555 - 8) + 16))(v261, v262, v555);
        uint64_t v556 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v261 + *(int *)(v556 + 20)) = *(void *)(v262 + *(int *)(v556 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_310:
  uint64_t v274 = a3[24];
  uint64_t v275 = a1 + v274;
  uint64_t v276 = v4 + v274;
  int v277 = v38(a1 + v274, 1, v36);
  int v278 = v38(v276, 1, v36);
  if (v277)
  {
    if (!v278)
    {
      int v279 = swift_getEnumCaseMultiPayload();
      if (v279 == 2)
      {
        uint64_t v282 = *(void *)v276;
        uint64_t v283 = *(void *)(v276 + 8);
        uint64_t v284 = *(void *)(v276 + 16);
        char v285 = *(unsigned char *)(v276 + 24);
        sub_1BFE86E48(v282, v283, v284, v285);
        *(void *)uint64_t v275 = v282;
        *(void *)(v275 + 8) = v283;
        *(void *)(v275 + 16) = v284;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v275 + 24) = v285;
      }
      else
      {
        if (v279 == 1)
        {
          *(void *)uint64_t v275 = *(void *)v276;
          *(void *)(v275 + 8) = *(void *)(v276 + 8);
          *(void *)(v275 + 16) = *(void *)(v276 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v286 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v286 - 8) + 16))(v275, v276, v286);
          uint64_t v287 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v275 + *(int *)(v287 + 20)) = *(void *)(v276 + *(int *)(v287 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v275, 0, 1, v36);
      goto LABEL_327;
    }
LABEL_318:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v275, (const void *)v276, *(void *)(*(void *)(v280 - 8) + 64));
    goto LABEL_327;
  }
  if (v278)
  {
    sub_1BFFAEED8(v275, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_318;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v275, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v281 = swift_getEnumCaseMultiPayload();
    if (v281 == 2)
    {
      uint64_t v483 = *(void *)v276;
      uint64_t v484 = *(void *)(v276 + 8);
      uint64_t v485 = *(void *)(v276 + 16);
      char v486 = *(unsigned char *)(v276 + 24);
      sub_1BFE86E48(v483, v484, v485, v486);
      *(void *)uint64_t v275 = v483;
      *(void *)(v275 + 8) = v484;
      *(void *)(v275 + 16) = v485;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v275 + 24) = v486;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v281 == 1)
      {
        *(void *)uint64_t v275 = *(void *)v276;
        *(void *)(v275 + 8) = *(void *)(v276 + 8);
        *(void *)(v275 + 16) = *(void *)(v276 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v557 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v557 - 8) + 16))(v275, v276, v557);
        uint64_t v558 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v275 + *(int *)(v558 + 20)) = *(void *)(v276 + *(int *)(v558 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_327:
  uint64_t v288 = a3[25];
  uint64_t v289 = a1 + v288;
  uint64_t v290 = v4 + v288;
  int v291 = v38(a1 + v288, 1, v36);
  int v292 = v38(v290, 1, v36);
  if (v291)
  {
    if (!v292)
    {
      int v293 = swift_getEnumCaseMultiPayload();
      if (v293 == 2)
      {
        uint64_t v296 = *(void *)v290;
        uint64_t v297 = *(void *)(v290 + 8);
        uint64_t v298 = *(void *)(v290 + 16);
        char v299 = *(unsigned char *)(v290 + 24);
        sub_1BFE86E48(v296, v297, v298, v299);
        *(void *)uint64_t v289 = v296;
        *(void *)(v289 + 8) = v297;
        *(void *)(v289 + 16) = v298;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v289 + 24) = v299;
      }
      else
      {
        if (v293 == 1)
        {
          *(void *)uint64_t v289 = *(void *)v290;
          *(void *)(v289 + 8) = *(void *)(v290 + 8);
          *(void *)(v289 + 16) = *(void *)(v290 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v300 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 16))(v289, v290, v300);
          uint64_t v301 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v289 + *(int *)(v301 + 20)) = *(void *)(v290 + *(int *)(v301 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v289, 0, 1, v36);
      goto LABEL_344;
    }
LABEL_335:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v289, (const void *)v290, *(void *)(*(void *)(v294 - 8) + 64));
    goto LABEL_344;
  }
  if (v292)
  {
    sub_1BFFAEED8(v289, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_335;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v289, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v295 = swift_getEnumCaseMultiPayload();
    if (v295 == 2)
    {
      uint64_t v487 = *(void *)v290;
      uint64_t v488 = *(void *)(v290 + 8);
      uint64_t v489 = *(void *)(v290 + 16);
      char v490 = *(unsigned char *)(v290 + 24);
      sub_1BFE86E48(v487, v488, v489, v490);
      *(void *)uint64_t v289 = v487;
      *(void *)(v289 + 8) = v488;
      *(void *)(v289 + 16) = v489;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v289 + 24) = v490;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v295 == 1)
      {
        *(void *)uint64_t v289 = *(void *)v290;
        *(void *)(v289 + 8) = *(void *)(v290 + 8);
        *(void *)(v289 + 16) = *(void *)(v290 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v559 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v559 - 8) + 16))(v289, v290, v559);
        uint64_t v560 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v289 + *(int *)(v560 + 20)) = *(void *)(v290 + *(int *)(v560 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_344:
  uint64_t v302 = a3[26];
  uint64_t v303 = a1 + v302;
  uint64_t v304 = v4 + v302;
  int v305 = v38(a1 + v302, 1, v36);
  int v306 = v38(v304, 1, v36);
  if (v305)
  {
    if (!v306)
    {
      int v307 = swift_getEnumCaseMultiPayload();
      if (v307 == 2)
      {
        uint64_t v310 = *(void *)v304;
        uint64_t v311 = *(void *)(v304 + 8);
        uint64_t v312 = *(void *)(v304 + 16);
        char v313 = *(unsigned char *)(v304 + 24);
        sub_1BFE86E48(v310, v311, v312, v313);
        *(void *)uint64_t v303 = v310;
        *(void *)(v303 + 8) = v311;
        *(void *)(v303 + 16) = v312;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v303 + 24) = v313;
      }
      else
      {
        if (v307 == 1)
        {
          *(void *)uint64_t v303 = *(void *)v304;
          *(void *)(v303 + 8) = *(void *)(v304 + 8);
          *(void *)(v303 + 16) = *(void *)(v304 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v314 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v314 - 8) + 16))(v303, v304, v314);
          uint64_t v315 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v303 + *(int *)(v315 + 20)) = *(void *)(v304 + *(int *)(v315 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v303, 0, 1, v36);
      goto LABEL_361;
    }
LABEL_352:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v303, (const void *)v304, *(void *)(*(void *)(v308 - 8) + 64));
    goto LABEL_361;
  }
  if (v306)
  {
    sub_1BFFAEED8(v303, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_352;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v303, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v309 = swift_getEnumCaseMultiPayload();
    if (v309 == 2)
    {
      uint64_t v491 = *(void *)v304;
      uint64_t v492 = *(void *)(v304 + 8);
      uint64_t v493 = *(void *)(v304 + 16);
      char v494 = *(unsigned char *)(v304 + 24);
      sub_1BFE86E48(v491, v492, v493, v494);
      *(void *)uint64_t v303 = v491;
      *(void *)(v303 + 8) = v492;
      *(void *)(v303 + 16) = v493;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v303 + 24) = v494;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v309 == 1)
      {
        *(void *)uint64_t v303 = *(void *)v304;
        *(void *)(v303 + 8) = *(void *)(v304 + 8);
        *(void *)(v303 + 16) = *(void *)(v304 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v561 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v561 - 8) + 16))(v303, v304, v561);
        uint64_t v562 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v303 + *(int *)(v562 + 20)) = *(void *)(v304 + *(int *)(v562 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_361:
  uint64_t v316 = a3[27];
  uint64_t v317 = a1 + v316;
  uint64_t v318 = v4 + v316;
  int v319 = v38(a1 + v316, 1, v36);
  int v320 = v38(v318, 1, v36);
  if (v319)
  {
    if (!v320)
    {
      int v321 = swift_getEnumCaseMultiPayload();
      if (v321 == 2)
      {
        uint64_t v324 = *(void *)v318;
        uint64_t v325 = *(void *)(v318 + 8);
        uint64_t v326 = *(void *)(v318 + 16);
        char v327 = *(unsigned char *)(v318 + 24);
        sub_1BFE86E48(v324, v325, v326, v327);
        *(void *)uint64_t v317 = v324;
        *(void *)(v317 + 8) = v325;
        *(void *)(v317 + 16) = v326;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v317 + 24) = v327;
      }
      else
      {
        if (v321 == 1)
        {
          *(void *)uint64_t v317 = *(void *)v318;
          *(void *)(v317 + 8) = *(void *)(v318 + 8);
          *(void *)(v317 + 16) = *(void *)(v318 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v328 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v328 - 8) + 16))(v317, v318, v328);
          uint64_t v329 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v317 + *(int *)(v329 + 20)) = *(void *)(v318 + *(int *)(v329 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v317, 0, 1, v36);
      goto LABEL_378;
    }
LABEL_369:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v317, (const void *)v318, *(void *)(*(void *)(v322 - 8) + 64));
    goto LABEL_378;
  }
  if (v320)
  {
    sub_1BFFAEED8(v317, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_369;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v317, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v323 = swift_getEnumCaseMultiPayload();
    if (v323 == 2)
    {
      uint64_t v495 = *(void *)v318;
      uint64_t v496 = *(void *)(v318 + 8);
      uint64_t v497 = *(void *)(v318 + 16);
      char v498 = *(unsigned char *)(v318 + 24);
      sub_1BFE86E48(v495, v496, v497, v498);
      *(void *)uint64_t v317 = v495;
      *(void *)(v317 + 8) = v496;
      *(void *)(v317 + 16) = v497;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v317 + 24) = v498;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v323 == 1)
      {
        *(void *)uint64_t v317 = *(void *)v318;
        *(void *)(v317 + 8) = *(void *)(v318 + 8);
        *(void *)(v317 + 16) = *(void *)(v318 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v563 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v563 - 8) + 16))(v317, v318, v563);
        uint64_t v564 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v317 + *(int *)(v564 + 20)) = *(void *)(v318 + *(int *)(v564 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_378:
  uint64_t v330 = a3[28];
  uint64_t v331 = a1 + v330;
  uint64_t v332 = v4 + v330;
  int v333 = v38(a1 + v330, 1, v36);
  int v334 = v38(v332, 1, v36);
  if (v333)
  {
    if (!v334)
    {
      int v335 = swift_getEnumCaseMultiPayload();
      if (v335 == 2)
      {
        uint64_t v338 = *(void *)v332;
        uint64_t v339 = *(void *)(v332 + 8);
        uint64_t v340 = *(void *)(v332 + 16);
        char v341 = *(unsigned char *)(v332 + 24);
        sub_1BFE86E48(v338, v339, v340, v341);
        *(void *)uint64_t v331 = v338;
        *(void *)(v331 + 8) = v339;
        *(void *)(v331 + 16) = v340;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v331 + 24) = v341;
      }
      else
      {
        if (v335 == 1)
        {
          *(void *)uint64_t v331 = *(void *)v332;
          *(void *)(v331 + 8) = *(void *)(v332 + 8);
          *(void *)(v331 + 16) = *(void *)(v332 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v342 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v342 - 8) + 16))(v331, v332, v342);
          uint64_t v343 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v331 + *(int *)(v343 + 20)) = *(void *)(v332 + *(int *)(v343 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v331, 0, 1, v36);
      goto LABEL_395;
    }
LABEL_386:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v331, (const void *)v332, *(void *)(*(void *)(v336 - 8) + 64));
    goto LABEL_395;
  }
  if (v334)
  {
    sub_1BFFAEED8(v331, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_386;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v331, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v337 = swift_getEnumCaseMultiPayload();
    if (v337 == 2)
    {
      uint64_t v499 = *(void *)v332;
      uint64_t v500 = *(void *)(v332 + 8);
      uint64_t v501 = *(void *)(v332 + 16);
      char v502 = *(unsigned char *)(v332 + 24);
      sub_1BFE86E48(v499, v500, v501, v502);
      *(void *)uint64_t v331 = v499;
      *(void *)(v331 + 8) = v500;
      *(void *)(v331 + 16) = v501;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v331 + 24) = v502;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v337 == 1)
      {
        *(void *)uint64_t v331 = *(void *)v332;
        *(void *)(v331 + 8) = *(void *)(v332 + 8);
        *(void *)(v331 + 16) = *(void *)(v332 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v565 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v565 - 8) + 16))(v331, v332, v565);
        uint64_t v566 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v331 + *(int *)(v566 + 20)) = *(void *)(v332 + *(int *)(v566 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_395:
  uint64_t v344 = a3[29];
  uint64_t v345 = a1 + v344;
  uint64_t v346 = v4 + v344;
  int v347 = v38(a1 + v344, 1, v36);
  int v348 = v38(v346, 1, v36);
  if (v347)
  {
    if (!v348)
    {
      int v349 = swift_getEnumCaseMultiPayload();
      if (v349 == 2)
      {
        uint64_t v352 = *(void *)v346;
        uint64_t v353 = *(void *)(v346 + 8);
        uint64_t v354 = *(void *)(v346 + 16);
        char v355 = *(unsigned char *)(v346 + 24);
        sub_1BFE86E48(v352, v353, v354, v355);
        *(void *)uint64_t v345 = v352;
        *(void *)(v345 + 8) = v353;
        *(void *)(v345 + 16) = v354;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v345 + 24) = v355;
      }
      else
      {
        if (v349 == 1)
        {
          *(void *)uint64_t v345 = *(void *)v346;
          *(void *)(v345 + 8) = *(void *)(v346 + 8);
          *(void *)(v345 + 16) = *(void *)(v346 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v356 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v356 - 8) + 16))(v345, v346, v356);
          uint64_t v357 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v345 + *(int *)(v357 + 20)) = *(void *)(v346 + *(int *)(v357 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v345, 0, 1, v36);
      goto LABEL_412;
    }
LABEL_403:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v345, (const void *)v346, *(void *)(*(void *)(v350 - 8) + 64));
    goto LABEL_412;
  }
  if (v348)
  {
    sub_1BFFAEED8(v345, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_403;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v345, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v351 = swift_getEnumCaseMultiPayload();
    if (v351 == 2)
    {
      uint64_t v503 = *(void *)v346;
      uint64_t v504 = *(void *)(v346 + 8);
      uint64_t v505 = *(void *)(v346 + 16);
      char v506 = *(unsigned char *)(v346 + 24);
      sub_1BFE86E48(v503, v504, v505, v506);
      *(void *)uint64_t v345 = v503;
      *(void *)(v345 + 8) = v504;
      *(void *)(v345 + 16) = v505;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v345 + 24) = v506;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v351 == 1)
      {
        *(void *)uint64_t v345 = *(void *)v346;
        *(void *)(v345 + 8) = *(void *)(v346 + 8);
        *(void *)(v345 + 16) = *(void *)(v346 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v567 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v567 - 8) + 16))(v345, v346, v567);
        uint64_t v568 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v345 + *(int *)(v568 + 20)) = *(void *)(v346 + *(int *)(v568 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_412:
  uint64_t v358 = a3[30];
  uint64_t v359 = a1 + v358;
  uint64_t v360 = v4 + v358;
  int v361 = v38(a1 + v358, 1, v36);
  int v362 = v38(v360, 1, v36);
  if (v361)
  {
    if (!v362)
    {
      int v363 = swift_getEnumCaseMultiPayload();
      if (v363 == 2)
      {
        uint64_t v366 = *(void *)v360;
        uint64_t v367 = *(void *)(v360 + 8);
        uint64_t v368 = *(void *)(v360 + 16);
        char v369 = *(unsigned char *)(v360 + 24);
        sub_1BFE86E48(v366, v367, v368, v369);
        *(void *)uint64_t v359 = v366;
        *(void *)(v359 + 8) = v367;
        *(void *)(v359 + 16) = v368;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v359 + 24) = v369;
      }
      else
      {
        if (v363 == 1)
        {
          *(void *)uint64_t v359 = *(void *)v360;
          *(void *)(v359 + 8) = *(void *)(v360 + 8);
          *(void *)(v359 + 16) = *(void *)(v360 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v370 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v370 - 8) + 16))(v359, v360, v370);
          uint64_t v371 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v359 + *(int *)(v371 + 20)) = *(void *)(v360 + *(int *)(v371 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v359, 0, 1, v36);
      goto LABEL_429;
    }
LABEL_420:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v359, (const void *)v360, *(void *)(*(void *)(v364 - 8) + 64));
    goto LABEL_429;
  }
  if (v362)
  {
    sub_1BFFAEED8(v359, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_420;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v359, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v365 = swift_getEnumCaseMultiPayload();
    if (v365 == 2)
    {
      uint64_t v507 = *(void *)v360;
      uint64_t v508 = *(void *)(v360 + 8);
      uint64_t v509 = *(void *)(v360 + 16);
      char v510 = *(unsigned char *)(v360 + 24);
      sub_1BFE86E48(v507, v508, v509, v510);
      *(void *)uint64_t v359 = v507;
      *(void *)(v359 + 8) = v508;
      *(void *)(v359 + 16) = v509;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v359 + 24) = v510;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v365 == 1)
      {
        *(void *)uint64_t v359 = *(void *)v360;
        *(void *)(v359 + 8) = *(void *)(v360 + 8);
        *(void *)(v359 + 16) = *(void *)(v360 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v569 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v569 - 8) + 16))(v359, v360, v569);
        uint64_t v570 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v359 + *(int *)(v570 + 20)) = *(void *)(v360 + *(int *)(v570 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_429:
  uint64_t v372 = a3[31];
  uint64_t v373 = a1 + v372;
  uint64_t v374 = v4 + v372;
  int v375 = v38(a1 + v372, 1, v36);
  int v376 = v38(v374, 1, v36);
  if (v375)
  {
    if (!v376)
    {
      int v377 = swift_getEnumCaseMultiPayload();
      if (v377 == 2)
      {
        uint64_t v380 = *(void *)v374;
        uint64_t v381 = *(void *)(v374 + 8);
        uint64_t v382 = *(void *)(v374 + 16);
        char v383 = *(unsigned char *)(v374 + 24);
        sub_1BFE86E48(v380, v381, v382, v383);
        *(void *)uint64_t v373 = v380;
        *(void *)(v373 + 8) = v381;
        *(void *)(v373 + 16) = v382;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v373 + 24) = v383;
      }
      else
      {
        if (v377 == 1)
        {
          *(void *)uint64_t v373 = *(void *)v374;
          *(void *)(v373 + 8) = *(void *)(v374 + 8);
          *(void *)(v373 + 16) = *(void *)(v374 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v384 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v384 - 8) + 16))(v373, v374, v384);
          uint64_t v385 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v373 + *(int *)(v385 + 20)) = *(void *)(v374 + *(int *)(v385 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v373, 0, 1, v36);
      goto LABEL_446;
    }
LABEL_437:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v373, (const void *)v374, *(void *)(*(void *)(v378 - 8) + 64));
    goto LABEL_446;
  }
  if (v376)
  {
    sub_1BFFAEED8(v373, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_437;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v373, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v379 = swift_getEnumCaseMultiPayload();
    if (v379 == 2)
    {
      uint64_t v511 = *(void *)v374;
      uint64_t v512 = *(void *)(v374 + 8);
      uint64_t v513 = *(void *)(v374 + 16);
      char v514 = *(unsigned char *)(v374 + 24);
      sub_1BFE86E48(v511, v512, v513, v514);
      *(void *)uint64_t v373 = v511;
      *(void *)(v373 + 8) = v512;
      *(void *)(v373 + 16) = v513;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v373 + 24) = v514;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v379 == 1)
      {
        *(void *)uint64_t v373 = *(void *)v374;
        *(void *)(v373 + 8) = *(void *)(v374 + 8);
        *(void *)(v373 + 16) = *(void *)(v374 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v571 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v571 - 8) + 16))(v373, v374, v571);
        uint64_t v572 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v373 + *(int *)(v572 + 20)) = *(void *)(v374 + *(int *)(v572 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_446:
  uint64_t v386 = a3[32];
  uint64_t v387 = a1 + v386;
  uint64_t v388 = v4 + v386;
  int v389 = v38(a1 + v386, 1, v36);
  int v390 = v38(v388, 1, v36);
  if (v389)
  {
    if (!v390)
    {
      int v391 = swift_getEnumCaseMultiPayload();
      if (v391 == 2)
      {
        uint64_t v394 = *(void *)v388;
        uint64_t v395 = *(void *)(v388 + 8);
        uint64_t v396 = *(void *)(v388 + 16);
        char v397 = *(unsigned char *)(v388 + 24);
        sub_1BFE86E48(v394, v395, v396, v397);
        *(void *)uint64_t v387 = v394;
        *(void *)(v387 + 8) = v395;
        *(void *)(v387 + 16) = v396;
        uint64_t v37 = v577;
        uint64_t v4 = a2;
        *(unsigned char *)(v387 + 24) = v397;
      }
      else
      {
        if (v391 == 1)
        {
          *(void *)uint64_t v387 = *(void *)v388;
          *(void *)(v387 + 8) = *(void *)(v388 + 8);
          *(void *)(v387 + 16) = *(void *)(v388 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v398 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v398 - 8) + 16))(v387, v388, v398);
          uint64_t v399 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v387 + *(int *)(v399 + 20)) = *(void *)(v388 + *(int *)(v399 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v387, 0, 1, v36);
      goto LABEL_463;
    }
LABEL_454:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v387, (const void *)v388, *(void *)(*(void *)(v392 - 8) + 64));
    goto LABEL_463;
  }
  if (v390)
  {
    sub_1BFFAEED8(v387, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_454;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v387, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v393 = swift_getEnumCaseMultiPayload();
    if (v393 == 2)
    {
      uint64_t v515 = *(void *)v388;
      uint64_t v516 = *(void *)(v388 + 8);
      uint64_t v517 = *(void *)(v388 + 16);
      char v518 = *(unsigned char *)(v388 + 24);
      sub_1BFE86E48(v515, v516, v517, v518);
      *(void *)uint64_t v387 = v515;
      *(void *)(v387 + 8) = v516;
      *(void *)(v387 + 16) = v517;
      uint64_t v37 = v577;
      uint64_t v4 = a2;
      *(unsigned char *)(v387 + 24) = v518;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v393 == 1)
      {
        *(void *)uint64_t v387 = *(void *)v388;
        *(void *)(v387 + 8) = *(void *)(v388 + 8);
        *(void *)(v387 + 16) = *(void *)(v388 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v573 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v573 - 8) + 16))(v387, v388, v573);
        uint64_t v574 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v387 + *(int *)(v574 + 20)) = *(void *)(v388 + *(int *)(v574 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_463:
  uint64_t v400 = a3[33];
  uint64_t v401 = a1 + v400;
  uint64_t v402 = v4 + v400;
  int v403 = v38(a1 + v400, 1, v36);
  int v404 = v38(v402, 1, v36);
  if (v403)
  {
    if (!v404)
    {
      int v405 = swift_getEnumCaseMultiPayload();
      if (v405 == 2)
      {
        uint64_t v408 = *(void *)v402;
        uint64_t v409 = *(void *)(v402 + 8);
        uint64_t v410 = *(void *)(v402 + 16);
        char v411 = *(unsigned char *)(v402 + 24);
        sub_1BFE86E48(v408, v409, v410, v411);
        *(void *)uint64_t v401 = v408;
        *(void *)(v401 + 8) = v409;
        *(void *)(v401 + 16) = v410;
        *(unsigned char *)(v401 + 24) = v411;
      }
      else
      {
        if (v405 == 1)
        {
          *(void *)uint64_t v401 = *(void *)v402;
          *(void *)(v401 + 8) = *(void *)(v402 + 8);
          *(void *)(v401 + 16) = *(void *)(v402 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v412 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v412 - 8) + 16))(v401, v402, v412);
          uint64_t v413 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(v401 + *(int *)(v413 + 20)) = *(void *)(v402 + *(int *)(v413 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v401, 0, 1, v36);
      return a1;
    }
LABEL_471:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy((void *)v401, (const void *)v402, *(void *)(*(void *)(v406 - 8) + 64));
    return a1;
  }
  if (v404)
  {
    sub_1BFFAEED8(v401, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_471;
  }
  if (a1 != v4)
  {
    sub_1BFFAEED8(v401, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v407 = swift_getEnumCaseMultiPayload();
    if (v407 == 2)
    {
      uint64_t v519 = *(void *)v402;
      uint64_t v520 = *(void *)(v402 + 8);
      uint64_t v521 = *(void *)(v402 + 16);
      char v522 = *(unsigned char *)(v402 + 24);
      sub_1BFE86E48(v519, v520, v521, v522);
      *(void *)uint64_t v401 = v519;
      *(void *)(v401 + 8) = v520;
      *(void *)(v401 + 16) = v521;
      *(unsigned char *)(v401 + 24) = v522;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v407 == 1)
      {
        *(void *)uint64_t v401 = *(void *)v402;
        *(void *)(v401 + 8) = *(void *)(v402 + 8);
        *(void *)(v401 + 16) = *(void *)(v402 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v575 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v575 - 8) + 16))(v401, v402, v575);
        uint64_t v576 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v401 + *(int *)(v576 + 20)) = *(void *)(v402 + *(int *)(v576 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for FormatRemoteVideo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = a3[5];
  char v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v10, v11, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    uint64_t v13 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v10[*(int *)(v13 + 20)] = *(void *)&v11[*(int *)(v13 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  int v16 = &a2[v14];
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v17 = *(void *)(v6 - 8);
    memcpy(v15, v16, *(void *)(v17 + 64));
  }
  else
  {
    uint64_t v18 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    uint64_t v19 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v15[*(int *)(v19 + 20)] = *(void *)&v16[*(int *)(v19 + 20)];
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(void *)(v6 - 8);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = v17;
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v24(&a2[v20], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v21, v22, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v26 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v21, v22, v26);
      uint64_t v27 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v21[*(int *)(v27 + 20)] = *(void *)&v22[*(int *)(v27 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v6);
  }
  uint64_t v28 = a3[8];
  uint64_t v29 = &a1[v28];
  char v30 = &a2[v28];
  if (v24(&a2[v28], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v29, v30, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v32 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
      uint64_t v33 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v29[*(int *)(v33 + 20)] = *(void *)&v30[*(int *)(v33 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v6);
  }
  uint64_t v34 = a3[9];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v24(&a2[v34], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v35, v36, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v38 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
      uint64_t v39 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v35[*(int *)(v39 + 20)] = *(void *)&v36[*(int *)(v39 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v35, 0, 1, v6);
  }
  uint64_t v40 = a3[10];
  int v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  if (v24(&a2[v40], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v41, v42, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v44 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v41, v42, v44);
      uint64_t v45 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v41[*(int *)(v45 + 20)] = *(void *)&v42[*(int *)(v45 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v41, 0, 1, v6);
  }
  uint64_t v46 = a3[11];
  char v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  if (v24(&a2[v46], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v47, v48, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v50 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v47, v48, v50);
      uint64_t v51 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v47[*(int *)(v51 + 20)] = *(void *)&v48[*(int *)(v51 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v47, 0, 1, v6);
  }
  uint64_t v52 = a3[12];
  int v53 = &a1[v52];
  int v54 = &a2[v52];
  if (v24(&a2[v52], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v53, v54, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v56 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v53, v54, v56);
      uint64_t v57 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v53[*(int *)(v57 + 20)] = *(void *)&v54[*(int *)(v57 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v53, 0, 1, v6);
  }
  uint64_t v58 = a3[13];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  if (v24(&a2[v58], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v59, v60, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v62 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v59, v60, v62);
      uint64_t v63 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v59[*(int *)(v63 + 20)] = *(void *)&v60[*(int *)(v63 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v59, 0, 1, v6);
  }
  uint64_t v64 = a3[14];
  uint64_t v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  if (v24(&a2[v64], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v65, v66, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v68 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v66, v68);
      uint64_t v69 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v65[*(int *)(v69 + 20)] = *(void *)&v66[*(int *)(v69 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v65, 0, 1, v6);
  }
  uint64_t v70 = a3[15];
  int v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  if (v24(&a2[v70], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v71, v72, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v74 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v71, v72, v74);
      uint64_t v75 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v71[*(int *)(v75 + 20)] = *(void *)&v72[*(int *)(v75 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v71, 0, 1, v6);
  }
  uint64_t v76 = a3[16];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  if (v24(&a2[v76], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v77, v78, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v80 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v77, v78, v80);
      uint64_t v81 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v77[*(int *)(v81 + 20)] = *(void *)&v78[*(int *)(v81 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v77, 0, 1, v6);
  }
  uint64_t v82 = a3[17];
  int v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  if (v24(&a2[v82], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v83, v84, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v86 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v83, v84, v86);
      uint64_t v87 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v83[*(int *)(v87 + 20)] = *(void *)&v84[*(int *)(v87 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v83, 0, 1, v6);
  }
  uint64_t v88 = a3[18];
  char v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  if (v24(&a2[v88], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v89, v90, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v92 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v89, v90, v92);
      uint64_t v93 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v89[*(int *)(v93 + 20)] = *(void *)&v90[*(int *)(v93 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v89, 0, 1, v6);
  }
  uint64_t v94 = a3[19];
  int v95 = &a1[v94];
  int v96 = &a2[v94];
  if (v24(&a2[v94], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v95, v96, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v98 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v95, v96, v98);
      uint64_t v99 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v95[*(int *)(v99 + 20)] = *(void *)&v96[*(int *)(v99 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v95, 0, 1, v6);
  }
  uint64_t v100 = a3[20];
  uint64_t v101 = &a1[v100];
  uint64_t v102 = &a2[v100];
  if (v24(&a2[v100], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v101, v102, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v104 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v101, v102, v104);
      uint64_t v105 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v101[*(int *)(v105 + 20)] = *(void *)&v102[*(int *)(v105 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v101, 0, 1, v6);
  }
  uint64_t v106 = a3[21];
  uint64_t v107 = &a1[v106];
  uint64_t v108 = &a2[v106];
  if (v24(&a2[v106], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v107, v108, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v110 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v107, v108, v110);
      uint64_t v111 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v107[*(int *)(v111 + 20)] = *(void *)&v108[*(int *)(v111 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v107, 0, 1, v6);
  }
  uint64_t v112 = a3[22];
  int v113 = &a1[v112];
  uint64_t v114 = &a2[v112];
  if (v24(&a2[v112], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v113, v114, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v116 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v113, v114, v116);
      uint64_t v117 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v113[*(int *)(v117 + 20)] = *(void *)&v114[*(int *)(v117 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v113, 0, 1, v6);
  }
  uint64_t v118 = a3[23];
  uint64_t v119 = &a1[v118];
  uint64_t v120 = &a2[v118];
  if (v24(&a2[v118], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v119, v120, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v122 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v119, v120, v122);
      uint64_t v123 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v119[*(int *)(v123 + 20)] = *(void *)&v120[*(int *)(v123 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v119, 0, 1, v6);
  }
  uint64_t v124 = a3[24];
  int v125 = &a1[v124];
  uint64_t v126 = &a2[v124];
  if (v24(&a2[v124], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v125, v126, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v128 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v125, v126, v128);
      uint64_t v129 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v125[*(int *)(v129 + 20)] = *(void *)&v126[*(int *)(v129 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v125, 0, 1, v6);
  }
  uint64_t v130 = a3[25];
  char v131 = &a1[v130];
  uint64_t v132 = &a2[v130];
  if (v24(&a2[v130], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v131, v132, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v134 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v131, v132, v134);
      uint64_t v135 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v131[*(int *)(v135 + 20)] = *(void *)&v132[*(int *)(v135 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v131, 0, 1, v6);
  }
  uint64_t v136 = a3[26];
  int v137 = &a1[v136];
  int v138 = &a2[v136];
  if (v24(&a2[v136], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v137, v138, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v140 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v137, v138, v140);
      uint64_t v141 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v137[*(int *)(v141 + 20)] = *(void *)&v138[*(int *)(v141 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v137, 0, 1, v6);
  }
  uint64_t v142 = a3[27];
  uint64_t v143 = &a1[v142];
  uint64_t v144 = &a2[v142];
  if (v24(&a2[v142], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v143, v144, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v146 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v143, v144, v146);
      uint64_t v147 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v143[*(int *)(v147 + 20)] = *(void *)&v144[*(int *)(v147 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v143, 0, 1, v6);
  }
  uint64_t v148 = a3[28];
  uint64_t v149 = &a1[v148];
  uint64_t v150 = &a2[v148];
  if (v24(&a2[v148], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v149, v150, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v152 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v149, v150, v152);
      uint64_t v153 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v149[*(int *)(v153 + 20)] = *(void *)&v150[*(int *)(v153 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v149, 0, 1, v6);
  }
  uint64_t v154 = a3[29];
  int v155 = &a1[v154];
  uint64_t v156 = &a2[v154];
  if (v24(&a2[v154], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v155, v156, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v158 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v155, v156, v158);
      uint64_t v159 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v155[*(int *)(v159 + 20)] = *(void *)&v156[*(int *)(v159 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v155, 0, 1, v6);
  }
  uint64_t v160 = a3[30];
  uint64_t v161 = &a1[v160];
  uint64_t v162 = &a2[v160];
  if (v24(&a2[v160], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v161, v162, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v164 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v161, v162, v164);
      uint64_t v165 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v161[*(int *)(v165 + 20)] = *(void *)&v162[*(int *)(v165 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v161, 0, 1, v6);
  }
  uint64_t v166 = a3[31];
  int v167 = &a1[v166];
  uint64_t v168 = &a2[v166];
  if (v24(&a2[v166], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v167, v168, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v170 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v167, v168, v170);
      uint64_t v171 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v167[*(int *)(v171 + 20)] = *(void *)&v168[*(int *)(v171 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v167, 0, 1, v6);
  }
  uint64_t v172 = a3[32];
  char v173 = &a1[v172];
  uint64_t v174 = &a2[v172];
  if (v24(&a2[v172], 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v173, v174, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v176 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v173, v174, v176);
      uint64_t v177 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v173[*(int *)(v177 + 20)] = *(void *)&v174[*(int *)(v177 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v173, 0, 1, v6);
  }
  uint64_t v178 = a3[33];
  int v179 = &a1[v178];
  int v180 = &a2[v178];
  if (v24(v180, 1, v6))
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v179, v180, *(void *)(v23 + 64));
    }
    else
    {
      uint64_t v182 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v179, v180, v182);
      uint64_t v183 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v179[*(int *)(v183 + 20)] = *(void *)&v180[*(int *)(v183 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v179, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for FormatRemoteVideo(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BFFAEED8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v6 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v9 = a3[5];
    char v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    sub_1BFFAEED8((uint64_t)&a1[v9], (uint64_t (*)(void))type metadata accessor for FormatURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      uint64_t v13 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v10[*(int *)(v13 + 20)] = *(void *)&v11[*(int *)(v13 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    int v16 = &a2[v14];
    sub_1BFFAEED8((uint64_t)&a1[v14], (uint64_t (*)(void))type metadata accessor for FormatURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v15, v16, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v15[*(int *)(v18 + 20)] = *(void *)&v16[*(int *)(v18 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for FormatURL();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      if (a1 == a2) {
        goto LABEL_24;
      }
      sub_1BFFAEED8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v266 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v20, v21, v266);
        uint64_t v267 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v20[*(int *)(v267 + 20)] = *(void *)&v21[*(int *)(v267 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      size_t v28 = *(void *)(v23 + 64);
LABEL_18:
      memcpy(v20, v21, v28);
      goto LABEL_24;
    }
    sub_1BFFAEED8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_17:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    goto LABEL_18;
  }
  if (v26) {
    goto LABEL_17;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v20, v21, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v29 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v20, v21, v29);
    uint64_t v30 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v20[*(int *)(v30 + 20)] = *(void *)&v21[*(int *)(v30 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_24:
  uint64_t v31 = a3[8];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  int v34 = v24(&a1[v31], 1, v22);
  int v35 = v24(v33, 1, v22);
  if (!v34)
  {
    if (!v35)
    {
      if (a1 == a2) {
        goto LABEL_37;
      }
      sub_1BFFAEED8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v268 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 32))(v32, v33, v268);
        uint64_t v269 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v32[*(int *)(v269 + 20)] = *(void *)&v33[*(int *)(v269 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      }
      size_t v37 = *(void *)(v23 + 64);
LABEL_31:
      memcpy(v32, v33, v37);
      goto LABEL_37;
    }
    sub_1BFFAEED8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_30:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v37 = *(void *)(*(void *)(v36 - 8) + 64);
    goto LABEL_31;
  }
  if (v35) {
    goto LABEL_30;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v32, v33, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v38 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v32, v33, v38);
    uint64_t v39 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v32[*(int *)(v39 + 20)] = *(void *)&v33[*(int *)(v39 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v22);
LABEL_37:
  uint64_t v40 = a3[9];
  int v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  int v43 = v24(&a1[v40], 1, v22);
  int v44 = v24(v42, 1, v22);
  if (!v43)
  {
    if (!v44)
    {
      if (a1 == a2) {
        goto LABEL_50;
      }
      sub_1BFFAEED8((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v270 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v41, v42, v270);
        uint64_t v271 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v41[*(int *)(v271 + 20)] = *(void *)&v42[*(int *)(v271 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_50;
      }
      size_t v46 = *(void *)(v23 + 64);
LABEL_44:
      memcpy(v41, v42, v46);
      goto LABEL_50;
    }
    sub_1BFFAEED8((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_43:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v46 = *(void *)(*(void *)(v45 - 8) + 64);
    goto LABEL_44;
  }
  if (v44) {
    goto LABEL_43;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v41, v42, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v47 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v41, v42, v47);
    uint64_t v48 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v41[*(int *)(v48 + 20)] = *(void *)&v42[*(int *)(v48 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v41, 0, 1, v22);
LABEL_50:
  uint64_t v49 = a3[10];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  int v52 = v24(&a1[v49], 1, v22);
  int v53 = v24(v51, 1, v22);
  if (!v52)
  {
    if (!v53)
    {
      if (a1 == a2) {
        goto LABEL_63;
      }
      sub_1BFFAEED8((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v272 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 32))(v50, v51, v272);
        uint64_t v273 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v50[*(int *)(v273 + 20)] = *(void *)&v51[*(int *)(v273 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_63;
      }
      size_t v55 = *(void *)(v23 + 64);
LABEL_57:
      memcpy(v50, v51, v55);
      goto LABEL_63;
    }
    sub_1BFFAEED8((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_56:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v55 = *(void *)(*(void *)(v54 - 8) + 64);
    goto LABEL_57;
  }
  if (v53) {
    goto LABEL_56;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v50, v51, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v56 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v50, v51, v56);
    uint64_t v57 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v50[*(int *)(v57 + 20)] = *(void *)&v51[*(int *)(v57 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v50, 0, 1, v22);
LABEL_63:
  uint64_t v58 = a3[11];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  int v61 = v24(&a1[v58], 1, v22);
  int v62 = v24(v60, 1, v22);
  if (!v61)
  {
    if (!v62)
    {
      if (a1 == a2) {
        goto LABEL_76;
      }
      sub_1BFFAEED8((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v274 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v59, v60, v274);
        uint64_t v275 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v59[*(int *)(v275 + 20)] = *(void *)&v60[*(int *)(v275 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_76;
      }
      size_t v64 = *(void *)(v23 + 64);
LABEL_70:
      memcpy(v59, v60, v64);
      goto LABEL_76;
    }
    sub_1BFFAEED8((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_69:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v64 = *(void *)(*(void *)(v63 - 8) + 64);
    goto LABEL_70;
  }
  if (v62) {
    goto LABEL_69;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v59, v60, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v65 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v59, v60, v65);
    uint64_t v66 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v59[*(int *)(v66 + 20)] = *(void *)&v60[*(int *)(v66 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v59, 0, 1, v22);
LABEL_76:
  uint64_t v67 = a3[12];
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  int v70 = v24(&a1[v67], 1, v22);
  int v71 = v24(v69, 1, v22);
  if (!v70)
  {
    if (!v71)
    {
      if (a1 == a2) {
        goto LABEL_89;
      }
      sub_1BFFAEED8((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v276 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 32))(v68, v69, v276);
        uint64_t v277 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v68[*(int *)(v277 + 20)] = *(void *)&v69[*(int *)(v277 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_89;
      }
      size_t v73 = *(void *)(v23 + 64);
LABEL_83:
      memcpy(v68, v69, v73);
      goto LABEL_89;
    }
    sub_1BFFAEED8((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_82:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v73 = *(void *)(*(void *)(v72 - 8) + 64);
    goto LABEL_83;
  }
  if (v71) {
    goto LABEL_82;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v68, v69, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v74 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v68, v69, v74);
    uint64_t v75 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v68[*(int *)(v75 + 20)] = *(void *)&v69[*(int *)(v75 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v68, 0, 1, v22);
LABEL_89:
  uint64_t v76 = a3[13];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  int v79 = v24(&a1[v76], 1, v22);
  int v80 = v24(v78, 1, v22);
  if (!v79)
  {
    if (!v80)
    {
      if (a1 == a2) {
        goto LABEL_102;
      }
      sub_1BFFAEED8((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v278 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 32))(v77, v78, v278);
        uint64_t v279 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v77[*(int *)(v279 + 20)] = *(void *)&v78[*(int *)(v279 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_102;
      }
      size_t v82 = *(void *)(v23 + 64);
LABEL_96:
      memcpy(v77, v78, v82);
      goto LABEL_102;
    }
    sub_1BFFAEED8((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_95:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v82 = *(void *)(*(void *)(v81 - 8) + 64);
    goto LABEL_96;
  }
  if (v80) {
    goto LABEL_95;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v77, v78, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v83 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v77, v78, v83);
    uint64_t v84 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v77[*(int *)(v84 + 20)] = *(void *)&v78[*(int *)(v84 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v77, 0, 1, v22);
LABEL_102:
  uint64_t v85 = a3[14];
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  int v88 = v24(&a1[v85], 1, v22);
  int v89 = v24(v87, 1, v22);
  if (!v88)
  {
    if (!v89)
    {
      if (a1 == a2) {
        goto LABEL_115;
      }
      sub_1BFFAEED8((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v280 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 32))(v86, v87, v280);
        uint64_t v281 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v86[*(int *)(v281 + 20)] = *(void *)&v87[*(int *)(v281 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_115;
      }
      size_t v91 = *(void *)(v23 + 64);
LABEL_109:
      memcpy(v86, v87, v91);
      goto LABEL_115;
    }
    sub_1BFFAEED8((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_108:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v91 = *(void *)(*(void *)(v90 - 8) + 64);
    goto LABEL_109;
  }
  if (v89) {
    goto LABEL_108;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v86, v87, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v92 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v86, v87, v92);
    uint64_t v93 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v86[*(int *)(v93 + 20)] = *(void *)&v87[*(int *)(v93 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v86, 0, 1, v22);
LABEL_115:
  uint64_t v94 = a3[15];
  int v95 = &a1[v94];
  int v96 = &a2[v94];
  int v97 = v24(&a1[v94], 1, v22);
  int v98 = v24(v96, 1, v22);
  if (!v97)
  {
    if (!v98)
    {
      if (a1 == a2) {
        goto LABEL_128;
      }
      sub_1BFFAEED8((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v282 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 32))(v95, v96, v282);
        uint64_t v283 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v95[*(int *)(v283 + 20)] = *(void *)&v96[*(int *)(v283 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_128;
      }
      size_t v100 = *(void *)(v23 + 64);
LABEL_122:
      memcpy(v95, v96, v100);
      goto LABEL_128;
    }
    sub_1BFFAEED8((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_121:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v100 = *(void *)(*(void *)(v99 - 8) + 64);
    goto LABEL_122;
  }
  if (v98) {
    goto LABEL_121;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v95, v96, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v101 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v95, v96, v101);
    uint64_t v102 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v95[*(int *)(v102 + 20)] = *(void *)&v96[*(int *)(v102 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v95, 0, 1, v22);
LABEL_128:
  uint64_t v103 = a3[16];
  uint64_t v104 = &a1[v103];
  uint64_t v105 = &a2[v103];
  int v106 = v24(&a1[v103], 1, v22);
  int v107 = v24(v105, 1, v22);
  if (!v106)
  {
    if (!v107)
    {
      if (a1 == a2) {
        goto LABEL_141;
      }
      sub_1BFFAEED8((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v284 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 32))(v104, v105, v284);
        uint64_t v285 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v104[*(int *)(v285 + 20)] = *(void *)&v105[*(int *)(v285 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_141;
      }
      size_t v109 = *(void *)(v23 + 64);
LABEL_135:
      memcpy(v104, v105, v109);
      goto LABEL_141;
    }
    sub_1BFFAEED8((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_134:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v109 = *(void *)(*(void *)(v108 - 8) + 64);
    goto LABEL_135;
  }
  if (v107) {
    goto LABEL_134;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v104, v105, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v110 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v104, v105, v110);
    uint64_t v111 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v104[*(int *)(v111 + 20)] = *(void *)&v105[*(int *)(v111 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v104, 0, 1, v22);
LABEL_141:
  uint64_t v112 = a3[17];
  int v113 = &a1[v112];
  uint64_t v114 = &a2[v112];
  int v115 = v24(&a1[v112], 1, v22);
  int v116 = v24(v114, 1, v22);
  if (!v115)
  {
    if (!v116)
    {
      if (a1 == a2) {
        goto LABEL_154;
      }
      sub_1BFFAEED8((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v286 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 32))(v113, v114, v286);
        uint64_t v287 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v113[*(int *)(v287 + 20)] = *(void *)&v114[*(int *)(v287 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_154;
      }
      size_t v118 = *(void *)(v23 + 64);
LABEL_148:
      memcpy(v113, v114, v118);
      goto LABEL_154;
    }
    sub_1BFFAEED8((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_147:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v118 = *(void *)(*(void *)(v117 - 8) + 64);
    goto LABEL_148;
  }
  if (v116) {
    goto LABEL_147;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v113, v114, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v119 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v113, v114, v119);
    uint64_t v120 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v113[*(int *)(v120 + 20)] = *(void *)&v114[*(int *)(v120 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v113, 0, 1, v22);
LABEL_154:
  uint64_t v121 = a3[18];
  uint64_t v122 = &a1[v121];
  uint64_t v123 = &a2[v121];
  int v124 = v24(&a1[v121], 1, v22);
  int v125 = v24(v123, 1, v22);
  if (!v124)
  {
    if (!v125)
    {
      if (a1 == a2) {
        goto LABEL_167;
      }
      sub_1BFFAEED8((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v288 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 32))(v122, v123, v288);
        uint64_t v289 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v122[*(int *)(v289 + 20)] = *(void *)&v123[*(int *)(v289 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_167;
      }
      size_t v127 = *(void *)(v23 + 64);
LABEL_161:
      memcpy(v122, v123, v127);
      goto LABEL_167;
    }
    sub_1BFFAEED8((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_160:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v127 = *(void *)(*(void *)(v126 - 8) + 64);
    goto LABEL_161;
  }
  if (v125) {
    goto LABEL_160;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v122, v123, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v128 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v122, v123, v128);
    uint64_t v129 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v122[*(int *)(v129 + 20)] = *(void *)&v123[*(int *)(v129 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v122, 0, 1, v22);
LABEL_167:
  uint64_t v130 = a3[19];
  char v131 = &a1[v130];
  uint64_t v132 = &a2[v130];
  int v133 = v24(&a1[v130], 1, v22);
  int v134 = v24(v132, 1, v22);
  if (!v133)
  {
    if (!v134)
    {
      if (a1 == a2) {
        goto LABEL_180;
      }
      sub_1BFFAEED8((uint64_t)v131, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v290 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 32))(v131, v132, v290);
        uint64_t v291 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v131[*(int *)(v291 + 20)] = *(void *)&v132[*(int *)(v291 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_180;
      }
      size_t v136 = *(void *)(v23 + 64);
LABEL_174:
      memcpy(v131, v132, v136);
      goto LABEL_180;
    }
    sub_1BFFAEED8((uint64_t)v131, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_173:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v136 = *(void *)(*(void *)(v135 - 8) + 64);
    goto LABEL_174;
  }
  if (v134) {
    goto LABEL_173;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v131, v132, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v137 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v131, v132, v137);
    uint64_t v138 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v131[*(int *)(v138 + 20)] = *(void *)&v132[*(int *)(v138 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v131, 0, 1, v22);
LABEL_180:
  uint64_t v139 = a3[20];
  uint64_t v140 = &a1[v139];
  uint64_t v141 = &a2[v139];
  int v142 = v24(&a1[v139], 1, v22);
  int v143 = v24(v141, 1, v22);
  if (!v142)
  {
    if (!v143)
    {
      if (a1 == a2) {
        goto LABEL_193;
      }
      sub_1BFFAEED8((uint64_t)v140, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v292 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 32))(v140, v141, v292);
        uint64_t v293 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v140[*(int *)(v293 + 20)] = *(void *)&v141[*(int *)(v293 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_193;
      }
      size_t v145 = *(void *)(v23 + 64);
LABEL_187:
      memcpy(v140, v141, v145);
      goto LABEL_193;
    }
    sub_1BFFAEED8((uint64_t)v140, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_186:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v145 = *(void *)(*(void *)(v144 - 8) + 64);
    goto LABEL_187;
  }
  if (v143) {
    goto LABEL_186;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v140, v141, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v146 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v140, v141, v146);
    uint64_t v147 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v140[*(int *)(v147 + 20)] = *(void *)&v141[*(int *)(v147 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v140, 0, 1, v22);
LABEL_193:
  uint64_t v148 = a3[21];
  uint64_t v149 = &a1[v148];
  uint64_t v150 = &a2[v148];
  int v151 = v24(&a1[v148], 1, v22);
  int v152 = v24(v150, 1, v22);
  if (!v151)
  {
    if (!v152)
    {
      if (a1 == a2) {
        goto LABEL_206;
      }
      sub_1BFFAEED8((uint64_t)v149, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v294 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 32))(v149, v150, v294);
        uint64_t v295 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v149[*(int *)(v295 + 20)] = *(void *)&v150[*(int *)(v295 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_206;
      }
      size_t v154 = *(void *)(v23 + 64);
LABEL_200:
      memcpy(v149, v150, v154);
      goto LABEL_206;
    }
    sub_1BFFAEED8((uint64_t)v149, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_199:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v154 = *(void *)(*(void *)(v153 - 8) + 64);
    goto LABEL_200;
  }
  if (v152) {
    goto LABEL_199;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v149, v150, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v155 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v149, v150, v155);
    uint64_t v156 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v149[*(int *)(v156 + 20)] = *(void *)&v150[*(int *)(v156 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v149, 0, 1, v22);
LABEL_206:
  uint64_t v157 = a3[22];
  uint64_t v158 = &a1[v157];
  uint64_t v159 = &a2[v157];
  int v160 = v24(&a1[v157], 1, v22);
  int v161 = v24(v159, 1, v22);
  if (!v160)
  {
    if (!v161)
    {
      if (a1 == a2) {
        goto LABEL_219;
      }
      sub_1BFFAEED8((uint64_t)v158, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v296 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v158, v159, v296);
        uint64_t v297 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v158[*(int *)(v297 + 20)] = *(void *)&v159[*(int *)(v297 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_219;
      }
      size_t v163 = *(void *)(v23 + 64);
LABEL_213:
      memcpy(v158, v159, v163);
      goto LABEL_219;
    }
    sub_1BFFAEED8((uint64_t)v158, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_212:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v163 = *(void *)(*(void *)(v162 - 8) + 64);
    goto LABEL_213;
  }
  if (v161) {
    goto LABEL_212;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v158, v159, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v164 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v158, v159, v164);
    uint64_t v165 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v158[*(int *)(v165 + 20)] = *(void *)&v159[*(int *)(v165 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v158, 0, 1, v22);
LABEL_219:
  uint64_t v166 = a3[23];
  int v167 = &a1[v166];
  uint64_t v168 = &a2[v166];
  int v169 = v24(&a1[v166], 1, v22);
  int v170 = v24(v168, 1, v22);
  if (!v169)
  {
    if (!v170)
    {
      if (a1 == a2) {
        goto LABEL_232;
      }
      sub_1BFFAEED8((uint64_t)v167, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v298 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 32))(v167, v168, v298);
        uint64_t v299 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v167[*(int *)(v299 + 20)] = *(void *)&v168[*(int *)(v299 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_232;
      }
      size_t v172 = *(void *)(v23 + 64);
LABEL_226:
      memcpy(v167, v168, v172);
      goto LABEL_232;
    }
    sub_1BFFAEED8((uint64_t)v167, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_225:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v172 = *(void *)(*(void *)(v171 - 8) + 64);
    goto LABEL_226;
  }
  if (v170) {
    goto LABEL_225;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v167, v168, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v173 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v167, v168, v173);
    uint64_t v174 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v167[*(int *)(v174 + 20)] = *(void *)&v168[*(int *)(v174 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v167, 0, 1, v22);
LABEL_232:
  uint64_t v175 = a3[24];
  uint64_t v176 = &a1[v175];
  uint64_t v177 = &a2[v175];
  int v178 = v24(&a1[v175], 1, v22);
  int v179 = v24(v177, 1, v22);
  if (!v178)
  {
    if (!v179)
    {
      if (a1 == a2) {
        goto LABEL_245;
      }
      sub_1BFFAEED8((uint64_t)v176, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v300 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v176, v177, v300);
        uint64_t v301 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v176[*(int *)(v301 + 20)] = *(void *)&v177[*(int *)(v301 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_245;
      }
      size_t v181 = *(void *)(v23 + 64);
LABEL_239:
      memcpy(v176, v177, v181);
      goto LABEL_245;
    }
    sub_1BFFAEED8((uint64_t)v176, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_238:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v181 = *(void *)(*(void *)(v180 - 8) + 64);
    goto LABEL_239;
  }
  if (v179) {
    goto LABEL_238;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v176, v177, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v182 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v176, v177, v182);
    uint64_t v183 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v176[*(int *)(v183 + 20)] = *(void *)&v177[*(int *)(v183 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v176, 0, 1, v22);
LABEL_245:
  uint64_t v184 = a3[25];
  uint64_t v185 = &a1[v184];
  uint64_t v186 = &a2[v184];
  int v187 = v24(&a1[v184], 1, v22);
  int v188 = v24(v186, 1, v22);
  if (!v187)
  {
    if (!v188)
    {
      if (a1 == a2) {
        goto LABEL_258;
      }
      sub_1BFFAEED8((uint64_t)v185, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v302 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v185, v186, v302);
        uint64_t v303 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v185[*(int *)(v303 + 20)] = *(void *)&v186[*(int *)(v303 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_258;
      }
      size_t v190 = *(void *)(v23 + 64);
LABEL_252:
      memcpy(v185, v186, v190);
      goto LABEL_258;
    }
    sub_1BFFAEED8((uint64_t)v185, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_251:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v190 = *(void *)(*(void *)(v189 - 8) + 64);
    goto LABEL_252;
  }
  if (v188) {
    goto LABEL_251;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v185, v186, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v191 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v185, v186, v191);
    uint64_t v192 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v185[*(int *)(v192 + 20)] = *(void *)&v186[*(int *)(v192 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v185, 0, 1, v22);
LABEL_258:
  uint64_t v193 = a3[26];
  int v194 = &a1[v193];
  int v195 = &a2[v193];
  int v196 = v24(&a1[v193], 1, v22);
  int v197 = v24(v195, 1, v22);
  if (!v196)
  {
    if (!v197)
    {
      if (a1 == a2) {
        goto LABEL_271;
      }
      sub_1BFFAEED8((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v304 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v304 - 8) + 32))(v194, v195, v304);
        uint64_t v305 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v194[*(int *)(v305 + 20)] = *(void *)&v195[*(int *)(v305 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_271;
      }
      size_t v199 = *(void *)(v23 + 64);
LABEL_265:
      memcpy(v194, v195, v199);
      goto LABEL_271;
    }
    sub_1BFFAEED8((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_264:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v199 = *(void *)(*(void *)(v198 - 8) + 64);
    goto LABEL_265;
  }
  if (v197) {
    goto LABEL_264;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v194, v195, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v200 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v194, v195, v200);
    uint64_t v201 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v194[*(int *)(v201 + 20)] = *(void *)&v195[*(int *)(v201 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v194, 0, 1, v22);
LABEL_271:
  uint64_t v202 = a3[27];
  uint64_t v203 = &a1[v202];
  uint64_t v204 = &a2[v202];
  int v205 = v24(&a1[v202], 1, v22);
  int v206 = v24(v204, 1, v22);
  if (!v205)
  {
    if (!v206)
    {
      if (a1 == a2) {
        goto LABEL_284;
      }
      sub_1BFFAEED8((uint64_t)v203, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v306 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v203, v204, v306);
        uint64_t v307 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v203[*(int *)(v307 + 20)] = *(void *)&v204[*(int *)(v307 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_284;
      }
      size_t v208 = *(void *)(v23 + 64);
LABEL_278:
      memcpy(v203, v204, v208);
      goto LABEL_284;
    }
    sub_1BFFAEED8((uint64_t)v203, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_277:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v208 = *(void *)(*(void *)(v207 - 8) + 64);
    goto LABEL_278;
  }
  if (v206) {
    goto LABEL_277;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v203, v204, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v209 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 32))(v203, v204, v209);
    uint64_t v210 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v203[*(int *)(v210 + 20)] = *(void *)&v204[*(int *)(v210 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v203, 0, 1, v22);
LABEL_284:
  uint64_t v211 = a3[28];
  uint64_t v212 = &a1[v211];
  uint64_t v213 = &a2[v211];
  int v214 = v24(&a1[v211], 1, v22);
  int v215 = v24(v213, 1, v22);
  if (!v214)
  {
    if (!v215)
    {
      if (a1 == a2) {
        goto LABEL_297;
      }
      sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v308 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 32))(v212, v213, v308);
        uint64_t v309 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v212[*(int *)(v309 + 20)] = *(void *)&v213[*(int *)(v309 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_297;
      }
      size_t v217 = *(void *)(v23 + 64);
LABEL_291:
      memcpy(v212, v213, v217);
      goto LABEL_297;
    }
    sub_1BFFAEED8((uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_290:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v217 = *(void *)(*(void *)(v216 - 8) + 64);
    goto LABEL_291;
  }
  if (v215) {
    goto LABEL_290;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v212, v213, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v218 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v212, v213, v218);
    uint64_t v219 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v212[*(int *)(v219 + 20)] = *(void *)&v213[*(int *)(v219 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v212, 0, 1, v22);
LABEL_297:
  uint64_t v220 = a3[29];
  int v221 = &a1[v220];
  int v222 = &a2[v220];
  int v223 = v24(&a1[v220], 1, v22);
  int v224 = v24(v222, 1, v22);
  if (!v223)
  {
    if (!v224)
    {
      if (a1 == a2) {
        goto LABEL_310;
      }
      sub_1BFFAEED8((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v310 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 32))(v221, v222, v310);
        uint64_t v311 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v221[*(int *)(v311 + 20)] = *(void *)&v222[*(int *)(v311 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_310;
      }
      size_t v226 = *(void *)(v23 + 64);
LABEL_304:
      memcpy(v221, v222, v226);
      goto LABEL_310;
    }
    sub_1BFFAEED8((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_303:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v226 = *(void *)(*(void *)(v225 - 8) + 64);
    goto LABEL_304;
  }
  if (v224) {
    goto LABEL_303;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v221, v222, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v227 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v221, v222, v227);
    uint64_t v228 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v221[*(int *)(v228 + 20)] = *(void *)&v222[*(int *)(v228 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v221, 0, 1, v22);
LABEL_310:
  uint64_t v229 = a3[30];
  uint64_t v230 = &a1[v229];
  uint64_t v231 = &a2[v229];
  int v232 = v24(&a1[v229], 1, v22);
  int v233 = v24(v231, 1, v22);
  if (!v232)
  {
    if (!v233)
    {
      if (a1 == a2) {
        goto LABEL_323;
      }
      sub_1BFFAEED8((uint64_t)v230, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v312 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 32))(v230, v231, v312);
        uint64_t v313 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v230[*(int *)(v313 + 20)] = *(void *)&v231[*(int *)(v313 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_323;
      }
      size_t v235 = *(void *)(v23 + 64);
LABEL_317:
      memcpy(v230, v231, v235);
      goto LABEL_323;
    }
    sub_1BFFAEED8((uint64_t)v230, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_316:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v235 = *(void *)(*(void *)(v234 - 8) + 64);
    goto LABEL_317;
  }
  if (v233) {
    goto LABEL_316;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v230, v231, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v236 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v230, v231, v236);
    uint64_t v237 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v230[*(int *)(v237 + 20)] = *(void *)&v231[*(int *)(v237 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v230, 0, 1, v22);
LABEL_323:
  uint64_t v238 = a3[31];
  int v239 = &a1[v238];
  uint64_t v240 = &a2[v238];
  int v241 = v24(&a1[v238], 1, v22);
  int v242 = v24(v240, 1, v22);
  if (!v241)
  {
    if (!v242)
    {
      if (a1 == a2) {
        goto LABEL_336;
      }
      sub_1BFFAEED8((uint64_t)v239, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v314 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32))(v239, v240, v314);
        uint64_t v315 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v239[*(int *)(v315 + 20)] = *(void *)&v240[*(int *)(v315 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_336;
      }
      size_t v244 = *(void *)(v23 + 64);
LABEL_330:
      memcpy(v239, v240, v244);
      goto LABEL_336;
    }
    sub_1BFFAEED8((uint64_t)v239, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_329:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v244 = *(void *)(*(void *)(v243 - 8) + 64);
    goto LABEL_330;
  }
  if (v242) {
    goto LABEL_329;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v239, v240, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v245 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 32))(v239, v240, v245);
    uint64_t v246 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v239[*(int *)(v246 + 20)] = *(void *)&v240[*(int *)(v246 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v239, 0, 1, v22);
LABEL_336:
  uint64_t v247 = a3[32];
  uint64_t v248 = &a1[v247];
  int v249 = &a2[v247];
  int v250 = v24(&a1[v247], 1, v22);
  int v251 = v24(v249, 1, v22);
  if (!v250)
  {
    if (!v251)
    {
      if (a1 == a2) {
        goto LABEL_349;
      }
      sub_1BFFAEED8((uint64_t)v248, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v316 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 32))(v248, v249, v316);
        uint64_t v317 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v248[*(int *)(v317 + 20)] = *(void *)&v249[*(int *)(v317 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_349;
      }
      size_t v253 = *(void *)(v23 + 64);
LABEL_343:
      memcpy(v248, v249, v253);
      goto LABEL_349;
    }
    sub_1BFFAEED8((uint64_t)v248, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_342:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v253 = *(void *)(*(void *)(v252 - 8) + 64);
    goto LABEL_343;
  }
  if (v251) {
    goto LABEL_342;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v248, v249, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v254 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 32))(v248, v249, v254);
    uint64_t v255 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v248[*(int *)(v255 + 20)] = *(void *)&v249[*(int *)(v255 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v248, 0, 1, v22);
LABEL_349:
  uint64_t v256 = a3[33];
  char v257 = &a1[v256];
  uint64_t v258 = &a2[v256];
  int v259 = v24(&a1[v256], 1, v22);
  int v260 = v24(v258, 1, v22);
  if (!v259)
  {
    if (!v260)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1BFFAEED8((uint64_t)v257, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v318 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 32))(v257, v258, v318);
        uint64_t v319 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v257[*(int *)(v319 + 20)] = *(void *)&v258[*(int *)(v319 + 20)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v262 = *(void *)(v23 + 64);
      goto LABEL_356;
    }
    sub_1BFFAEED8((uint64_t)v257, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_355:
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    size_t v262 = *(void *)(*(void *)(v261 - 8) + 64);
LABEL_356:
    memcpy(v257, v258, v262);
    return a1;
  }
  if (v260) {
    goto LABEL_355;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v257, v258, *(void *)(v23 + 64));
  }
  else
  {
    uint64_t v263 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 32))(v257, v258, v263);
    uint64_t v264 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v257[*(int *)(v264 + 20)] = *(void *)&v258[*(int *)(v264 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v257, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatRemoteVideo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0AB0C28);
}

uint64_t sub_1C0AB0C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FormatRemoteVideo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0AB0D50);
}

uint64_t sub_1C0AB0D50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FormatURL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_1BFE85638(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 28);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1C0AB0E70()
{
  type metadata accessor for FormatURL();
  if (v0 <= 0x3F)
  {
    sub_1BFE85638(319, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C0AB0F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0AB0FF0()
{
  if (!qword_1EA1A3120)
  {
    sub_1BFE85638(255, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A3120);
    }
  }
}

uint64_t sub_1C0AB1070()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for FormatStringSelector.Selector()
{
  return &type metadata for FormatStringSelector.Selector;
}

uint64_t sub_1C0AB10C0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C151E89C();
  if (result)
  {
    swift_bridgeObjectRetain();
    if ((sub_1C151E8AC() & 1) != 0
      || (swift_bridgeObjectRelease(), swift_bridgeObjectRetain(), (sub_1C151E8AC() & 1) != 0))
    {
      uint64_t v78 = v3;
      uint64_t v79 = a3;
      swift_arrayDestroy();
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1C029748C(1uLL, a1, a2);
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_1C151E7AC();
      swift_bridgeObjectRelease();
      if (v12 < 0)
      {
        __break(1u);
      }
      else
      {
        uint64_t v15 = sub_1C151FDAC();
        if (v16) {
          unint64_t v17 = v11;
        }
        else {
          unint64_t v17 = v15;
        }
        uint64_t v13 = v17 >> 14;
        if (v17 >> 14 >= v11 >> 14)
        {
          uint64_t v18 = sub_1C151FDEC();
          uint64_t v20 = v19;
          uint64_t v22 = v21;
          uint64_t v24 = v23;
          swift_bridgeObjectRelease();
          uint64_t v25 = MEMORY[0x1C18C6220](v18, v20, v22, v24);
          uint64_t v27 = v26;
          swift_bridgeObjectRelease();
          size_t v28 = &v9[*(int *)(v7 + 28)];
          uint64_t v29 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
          *(void *)uint64_t v9 = v25;
          *((void *)v9 + 1) = v27;
          *((void *)v9 + 3) = 0;
          *((void *)v9 + 4) = 0;
          *((void *)v9 + 2) = 0;
          v9[40] = 2;
          *((void *)v9 + 6) = MEMORY[0x1E4FBC860];
          sub_1C0F49000((uint64_t)v9);
          return sub_1C0387D2C((uint64_t)v9);
        }
      }
      __break(1u);
      goto LABEL_67;
    }
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    uint64_t v80 = a1;
    uint64_t v81 = a2;
    sub_1BFF27ECC();
    uint64_t v30 = (void *)sub_1C151FF1C();
    uint64_t v31 = v30;
    if (v30[2] != 2) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v79 = a3;
    unint64_t v32 = v30[5];
    uint64_t v9 = (char *)v30[6];
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1C151FDAC();
    if (v34) {
      unint64_t v33 = v32;
    }
    if (v32 >> 14 < v33 >> 14)
    {
      __break(1u);
    }
    else
    {
      uint64_t v35 = sub_1C151FDEC();
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v42 = MEMORY[0x1C18C6220](v35, v37, v39, v41);
      uint64_t v9 = v43;
      swift_bridgeObjectRelease();
      if (v31[2] >= 2uLL)
      {
        uint64_t v78 = v42;
        uint64_t v44 = v31[8];
        uint64_t v45 = v31[9];
        uint64_t v46 = v31[10];
        uint64_t v47 = v31[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v48 = MEMORY[0x1C18C6220](v44, v45, v46, v47);
        unint64_t v50 = v49;
        swift_bridgeObjectRelease();
        if (v48 == 1702195828 && v50 == 0xE400000000000000
          || (sub_1C1520A9C() & 1) != 0
          || v48 == 0x65736C6166 && v50 == 0xE500000000000000
          || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v51 = &unk_1F1B660F0;
LABEL_24:
          uint64_t v52 = sub_1C00B857C((uint64_t)v51);
          sub_1C0F49260(v78, (uint64_t)v9, v52, 1);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v53 = HIBYTE(v50) & 0xF;
        uint64_t v54 = v48 & 0xFFFFFFFFFFFFLL;
        if ((v50 & 0x2000000000000000) != 0) {
          uint64_t v55 = HIBYTE(v50) & 0xF;
        }
        else {
          uint64_t v55 = v48 & 0xFFFFFFFFFFFFLL;
        }
        if (v55)
        {
          if ((v50 & 0x1000000000000000) != 0)
          {
            sub_1C02969B8(v48, v50, 10);
            char v58 = v77;
            goto LABEL_63;
          }
          if ((v50 & 0x2000000000000000) == 0)
          {
            if ((v48 & 0x1000000000000000) != 0) {
              uint64_t v56 = (unsigned __int8 *)((v50 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else {
              uint64_t v56 = (unsigned __int8 *)sub_1C152020C();
            }
            sub_1C02968B8(v56, v54, 10);
            char v58 = v57 & 1;
LABEL_63:
            swift_bridgeObjectRelease();
            if ((v58 & 1) == 0)
            {
              uint64_t v51 = &unk_1F1B66118;
              goto LABEL_24;
            }
LABEL_76:
            uint64_t v51 = &unk_1F1B66140;
            goto LABEL_24;
          }
          uint64_t v80 = v48;
          uint64_t v81 = v50 & 0xFFFFFFFFFFFFFFLL;
          if (v48 == 43)
          {
            if (v53)
            {
              if (v53 != 1 && (BYTE1(v48) - 48) <= 9u)
              {
                uint64_t v66 = v53 - 2;
                if (v66)
                {
                  uint64_t v67 = (BYTE1(v48) - 48);
                  uint64_t v68 = (unsigned __int8 *)&v80 + 2;
                  while (1)
                  {
                    unsigned int v69 = *v68 - 48;
                    if (v69 > 9) {
                      goto LABEL_60;
                    }
                    uint64_t v70 = (unsigned __int128)(v67 * (__int128)10) >> 64;
                    uint64_t v71 = 10 * v67;
                    if (v70 != v71 >> 63) {
                      goto LABEL_60;
                    }
                    BOOL v65 = __OFADD__(v71, v69);
                    uint64_t v67 = v71 + v69;
                    if (v65) {
                      goto LABEL_60;
                    }
                    char v58 = 0;
                    ++v68;
                    if (!--v66) {
                      goto LABEL_63;
                    }
                  }
                }
LABEL_62:
                char v58 = 0;
                goto LABEL_63;
              }
LABEL_60:
              char v58 = 1;
              goto LABEL_63;
            }
          }
          else
          {
            if (v48 != 45)
            {
              if (v53)
              {
                unsigned __int8 v14 = v48 - 48;
                if ((v48 - 48) <= 9u)
                {
                  uint64_t v13 = v53 - 1;
                  if (v13)
                  {
LABEL_67:
                    uint64_t v72 = v14;
                    size_t v73 = (unsigned __int8 *)&v80 + 1;
                    while (1)
                    {
                      unsigned int v74 = *v73 - 48;
                      if (v74 > 9) {
                        goto LABEL_60;
                      }
                      uint64_t v75 = (unsigned __int128)(v72 * (__int128)10) >> 64;
                      uint64_t v76 = 10 * v72;
                      if (v75 != v76 >> 63) {
                        goto LABEL_60;
                      }
                      BOOL v65 = __OFADD__(v76, v74);
                      uint64_t v72 = v76 + v74;
                      if (v65) {
                        goto LABEL_60;
                      }
                      char v58 = 0;
                      ++v73;
                      if (!--v13) {
                        goto LABEL_63;
                      }
                    }
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_60;
            }
            if (v53)
            {
              if (v53 != 1 && (BYTE1(v48) - 48) <= 9u)
              {
                uint64_t v59 = v53 - 2;
                if (v59)
                {
                  uint64_t v60 = (unsigned __int8 *)&v80 + 2;
                  uint64_t v61 = -(uint64_t)(BYTE1(v48) - 48);
                  while (1)
                  {
                    unsigned int v62 = *v60 - 48;
                    if (v62 > 9) {
                      goto LABEL_60;
                    }
                    uint64_t v63 = (unsigned __int128)(v61 * (__int128)10) >> 64;
                    uint64_t v64 = 10 * v61;
                    if (v63 != v64 >> 63) {
                      goto LABEL_60;
                    }
                    BOOL v65 = __OFSUB__(v64, v62);
                    uint64_t v61 = v64 - v62;
                    if (v65) {
                      goto LABEL_60;
                    }
                    char v58 = 0;
                    ++v60;
                    if (!--v59) {
                      goto LABEL_63;
                    }
                  }
                }
                goto LABEL_62;
              }
              goto LABEL_60;
            }
            __break(1u);
          }
          __break(1u);
          return result;
        }
LABEL_75:
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
    }
    __break(1u);
    goto LABEL_75;
  }
  return result;
}

uint64_t sub_1C0AB17B0(uint64_t a1)
{
  return sub_1C0AB1A88(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C0AB17CC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v29 = __src;
  size_t v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      uint64_t v18 = &v4[40 * v11];
      uint64_t v27 = v18;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v19 = a3 - 40;
        do
        {
          uint64_t v20 = (char *)(v19 + 40);
          if (*((void *)v6 - 3) >= *((void *)v18 - 3))
          {
            uint64_t v27 = v18 - 40;
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              long long v24 = *(_OWORD *)(v18 - 40);
              long long v25 = *(_OWORD *)(v18 - 24);
              *(void *)(v19 + 32) = *((void *)v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
              *(_OWORD *)(v19 + 16) = v25;
            }
            uint64_t v21 = v6;
            v18 -= 40;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 40;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              long long v22 = *(_OWORD *)v21;
              long long v23 = *(_OWORD *)(v6 - 24);
              *(void *)(v19 + 32) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v19 = v22;
              *(_OWORD *)(v19 + 16) = v23;
            }
            uint64_t v29 = v6 - 40;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 40;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1C0635248((void **)&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    uint64_t v12 = &v4[40 * v9];
    uint64_t v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      uint64_t v13 = v4;
      while (1)
      {
        if (*((void *)v13 + 2) >= *((void *)v6 + 2))
        {
          uint64_t v4 = v13 + 40;
          uint64_t v15 = v13;
          unsigned __int8 v14 = v6;
          if (v7 == v13)
          {
            v13 += 40;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 40;
          }
        }
        else
        {
          unsigned __int8 v14 = v6 + 40;
          uint64_t v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        long long v17 = *((_OWORD *)v15 + 1);
        *((void *)v7 + 4) = *((void *)v15 + 4);
        *(_OWORD *)uint64_t v7 = v16;
        *((_OWORD *)v7 + 1) = v17;
LABEL_18:
        v7 += 40;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        size_t v28 = v4;
        uint64_t v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0AB1A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = a2 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    sub_1C0AB10C0(v21, v22, a1);
    if (v4) {
      goto LABEL_45;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v17 = __OFADD__(v14++, 1);
    if (v17)
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v14 >= v12) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v14);
    if (!v18) {
      break;
    }
LABEL_15:
    unint64_t v11 = (v18 - 1) & v18;
  }
  int64_t v19 = v14 + 1;
  if (v14 + 1 >= v12) {
    goto LABEL_23;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v14 + 2;
  if (v14 + 2 >= v12) {
    goto LABEL_23;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v14 + 3;
  if (v14 + 3 >= v12)
  {
LABEL_23:
    swift_release();
    uint64_t v23 = a3 + 56;
    uint64_t v24 = 1 << *(unsigned char *)(a3 + 32);
    uint64_t v25 = -1;
    if (v24 < 64) {
      uint64_t v25 = ~(-1 << v24);
    }
    unint64_t v26 = v25 & *(void *)(a3 + 56);
    int64_t v27 = (unint64_t)(v24 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v28 = 0;
    if (!v26) {
      goto LABEL_27;
    }
LABEL_26:
    unint64_t v29 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    for (unint64_t j = v29 | (v28 << 6); ; unint64_t j = __clz(__rbit64(v31)) + (v28 << 6))
    {
      unint64_t v33 = (uint64_t *)(*(void *)(a3 + 48) + 16 * j);
      uint64_t v34 = *v33;
      unint64_t v35 = v33[1];
      swift_bridgeObjectRetain();
      sub_1C0AB10C0(v34, v35, a1);
      if (v4) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_26;
      }
LABEL_27:
      BOOL v17 = __OFADD__(v28++, 1);
      if (v17) {
        goto LABEL_49;
      }
      if (v28 >= v27) {
        return swift_release();
      }
      unint64_t v31 = *(void *)(v23 + 8 * v28);
      if (!v31)
      {
        int64_t v32 = v28 + 1;
        if (v28 + 1 >= v27) {
          return swift_release();
        }
        unint64_t v31 = *(void *)(v23 + 8 * v32);
        if (!v31)
        {
          int64_t v32 = v28 + 2;
          if (v28 + 2 >= v27) {
            return swift_release();
          }
          unint64_t v31 = *(void *)(v23 + 8 * v32);
          if (!v31)
          {
            int64_t v32 = v28 + 3;
            if (v28 + 3 >= v27) {
              return swift_release();
            }
            unint64_t v31 = *(void *)(v23 + 8 * v32);
            if (!v31)
            {
              while (1)
              {
                int64_t v28 = v32 + 1;
                if (__OFADD__(v32, 1)) {
                  goto LABEL_51;
                }
                if (v28 >= v27) {
                  return swift_release();
                }
                unint64_t v31 = *(void *)(v23 + 8 * v28);
                ++v32;
                if (v31) {
                  goto LABEL_37;
                }
              }
            }
          }
        }
        int64_t v28 = v32;
      }
LABEL_37:
      unint64_t v26 = (v31 - 1) & v31;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
LABEL_14:
    int64_t v14 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_15;
    }
  }
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for FormatStringListSelector()
{
  return &type metadata for FormatStringListSelector;
}

uint64_t FormatPluginFactory.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v0 + 16);
}

uint64_t FormatPluginFactory.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*FormatPluginFactory.delegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1C0AB1E90;
}

uint64_t FormatPluginFactory.pluginContainerController.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v0 + 32);
}

void sub_1C0AB1EDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = swift_unknownObjectWeakAssign();
  uint64_t v5 = *(void *)(v3 + 184);
  uint64_t v6 = (void *)MEMORY[0x1C18C9C60](v4);
  uint64_t v7 = *(void *)(v3 + 40);
  swift_beginAccess();
  *(void *)(v5 + 24) = v7;
  swift_unknownObjectWeakAssign();
}

void FormatPluginFactory.pluginContainerController.setter(void *a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a2;
  uint64_t v5 = swift_unknownObjectWeakAssign();
  uint64_t v6 = *(void *)(v2 + 184);
  uint64_t v7 = (void *)MEMORY[0x1C18C9C60](v5);
  uint64_t v8 = *(void *)(v2 + 40);
  swift_beginAccess();
  *(void *)(v6 + 24) = v8;
  swift_unknownObjectWeakAssign();
}

void (*FormatPluginFactory.pluginContainerController.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1C0AB2098;
}

void sub_1C0AB2098(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(*a1 + 24);
  *(void *)(*(void *)(*a1 + 40) + 40) = *(void *)(*a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 40);
    swift_endAccess();

    uint64_t v6 = *(void *)(v5 + 184);
    uint64_t v7 = (void *)MEMORY[0x1C18C9C60](v5 + 32);
    uint64_t v8 = *(void *)(v5 + 40);
    swift_beginAccess();
    *(void *)(v6 + 24) = v8;
    swift_unknownObjectWeakAssign();
  }
  free((void *)v3);
}

uint64_t FormatPluginFactory.__allocating_init(resolver:formatModelFactory:formatTracker:webEmbedManager:animatorFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BFC3D62C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0AB2B88);
}

uint64_t FormatPluginFactory.createPlugin(with:layoutOptionsProvider:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v6 = type metadata accessor for FormatPluginData();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3 + 6, v3[9]);
  sub_1C0090478();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = v3[9];
    uint64_t v25 = v3[10];
    __swift_project_boxed_opaque_existential_1(v3 + 6, v12);
    sub_1BFCB6824(0, (unint64_t *)&unk_1EB896660);
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    sub_1C0080F9C((uint64_t)a1, (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FormatPluginData);
    unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v3;
    sub_1C00BD4AC((uint64_t)v9, v15 + v13);
    *(void *)(v15 + v14) = v11;
    swift_retain();
    sub_1C151817C();
    swift_unownedRelease();
    uint64_t result = swift_release();
    if (v30)
    {
      sub_1BFC773DC(&v29, (uint64_t)v31);
      uint64_t v16 = a1[1];
      uint64_t v25 = *a1;
      uint64_t v17 = v32;
      uint64_t v18 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      sub_1C0080F9C((uint64_t)a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      int64_t v19 = (objc_class *)type metadata accessor for FormatPluginConfig();
      id v20 = objc_allocWithZone(v19);
      sub_1C0080F9C((uint64_t)v9, (uint64_t)v20 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      v28.receiver = v20;
      v28.super_class = v19;
      id v21 = objc_msgSendSuper2(&v28, sel_init);
      sub_1C0080F3C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      swift_beginAccess();
      uint64_t v22 = MEMORY[0x1C18C9C60](v4 + 2);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, void, uint64_t, uint64_t))(v18 + 8))(v25, v16, v26, v27, v21, v22, v4[3], v17, v18);

      swift_unknownObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      return v23;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0AB24C0(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  sub_1BFC66384(a2 + 88, (uint64_t)v8);
  swift_release();
  sub_1BFCB6824(0, &qword_1EB860640);
  sub_1C1517F6C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  type metadata accessor for WebEmbedManager();
  sub_1C1517F8C();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatPluginData();
  sub_1C1517F6C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1517F5C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  long long v5 = *(_OWORD *)(a2 + 128);
  swift_unknownObjectRetain();
  swift_release();
  v8[0] = v5;
  sub_1BFCB6824(0, &qword_1EB896678);
  sub_1C1517F6C();
  swift_unknownObjectRelease();
  swift_unownedRetainStrong();
  sub_1C0080F9C(a2 + 144, (uint64_t)&v6, (uint64_t (*)(void))sub_1C00685A4);
  swift_release();
  if (!v7) {
    return sub_1C0080F3C((uint64_t)&v6, (uint64_t (*)(void))sub_1C00685A4);
  }
  sub_1BFC773DC(&v6, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB869DF0);
  sub_1C1517F6C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t FormatPluginFactory.deinit()
{
  sub_1C019B9B4(v0 + 16);
  sub_1C019B9B4(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_unknownObjectRelease();
  sub_1C0080F3C(v0 + 144, (uint64_t (*)(void))sub_1C00685A4);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPluginFactory.__deallocating_deinit()
{
  sub_1C019B9B4(v0 + 16);
  sub_1C019B9B4(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_unknownObjectRelease();
  sub_1C0080F3C(v0 + 144, (uint64_t (*)(void))sub_1C00685A4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0AB287C()
{
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v0 + 16);
}

uint64_t (*sub_1C0AB28C4(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1C0AB1E90;
}

void sub_1C0AB2944(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1C0AB29C8()
{
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v0 + 32);
}

void (*sub_1C0AB2A10(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FormatPluginFactory.pluginContainerController.modify(v2);
  return sub_1C02B53A8;
}

void *sub_1C0AB2A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  a6[3] = 0;
  swift_unknownObjectWeakInit();
  a6[5] = 0;
  swift_unknownObjectWeakInit();
  a6[24] = MEMORY[0x1E4FBC870];
  sub_1BFC66384(a1, (uint64_t)(a6 + 6));
  sub_1BFC66384(a2, (uint64_t)(a6 + 11));
  sub_1C0080F9C(a5, (uint64_t)(a6 + 18), (uint64_t (*)(void))sub_1C00685A4);
  a6[23] = a4;
  type metadata accessor for WeakFormatTracker();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v14 + 24) = a8;
  swift_unknownObjectWeakAssign();
  sub_1C0080F3C(a5, (uint64_t (*)(void))sub_1C00685A4);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  a6[16] = v14;
  a6[17] = &protocol witness table for WeakFormatTracker;
  return a6;
}

void *sub_1C0AB2B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (void *)swift_allocObject();
  return sub_1C0AB2A6C(a1, a2, a3, a4, a5, v15, a7, a8);
}

uint64_t sub_1C0AB2C18(uint64_t a1, uint64_t a2)
{
  sub_1BFECA220(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AB2CAC(uint64_t a1)
{
  sub_1BFECA220(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0AB2D38()
{
  uint64_t v1 = (int *)type metadata accessor for FormatPluginData();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unownedRelease();
  uint64_t v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v5 = v3 + v4[5];
  uint64_t v6 = sub_1C151631C();
  uint64_t v32 = *(void (**)(uint64_t))(*(void *)(v6 - 8) + 8);
  uint64_t v33 = v6;
  v32(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v7 = v3 + v4[14];
  uint64_t v8 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[5];
    swift_bridgeObjectRelease();
    uint64_t v10 = type metadata accessor for FormatWebEmbed();
    uint64_t v11 = v9 + *(int *)(v10 + 20);
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void *)(v12 - 8);
    unint64_t v31 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v31(v11, v12);
    uint64_t v14 = v9 + *(int *)(v10 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12)) {
      v31(v14, v12);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v15 = v7 + v8[8];
    uint64_t v16 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = type metadata accessor for GenericDataVisualization();
        v31(v15 + *(int *)(v17 + 20), v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v18 = v7 + v8[9];
    sub_1BFECA220(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v22 = v3 + v4[18];
  uint64_t v23 = sub_1C151D6DC();
  uint64_t v24 = *(void *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  uint64_t v25 = (id *)(v3 + v1[5]);

  uint64_t v26 = (int *)type metadata accessor for FeedContext();
  uint64_t v27 = (char *)v25 + v26[5];
  uint64_t v28 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28))
  {
    ((void (*)(char *, uint64_t))v32)(&v27[*(int *)(v28 + 20)], v33);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v25 + v26[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v3 + v1[6];
  if (*(void *)(v29 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v29);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0AB3370(void *a1)
{
  type metadata accessor for FormatPluginData();
  uint64_t v3 = *(void *)(v1 + 16);
  return sub_1C0AB24C0(a1, v3);
}

uint64_t sub_1C0AB3410@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1C0AB346C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C0AB34C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 32;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v4);
  uint64_t v6 = *(void *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t dispatch thunk of FormatPluginFactoryType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.pluginContainerController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.pluginContainerController.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.pluginContainerController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.prepare(content:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.createPlugin(with:layoutOptionsProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t method lookup function for FormatPluginFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPluginFactory);
}

uint64_t dispatch thunk of FormatPluginFactory.__allocating_init(resolver:formatModelFactory:formatTracker:webEmbedManager:animatorFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

char *sub_1C0AB35F4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView;
  type metadata accessor for FormatAdMetricsContentView();
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v13 = v4;
  *(void *)&v4[v11] = objc_msgSend(v12, sel_init);
  uint64_t v14 = &v13[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker] = 0;
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_onCollapse;
  sub_1BFD22278();
  *(void *)&v13[v15] = objc_msgSend(objc_allocWithZone(v16), sel_init);

  v19.receiver = v13;
  v19.super_class = ObjectType;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v17, sel_addSubview_, *(void *)&v17[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView]);
  return v17;
}

uint64_t type metadata accessor for FormatAdMetricsView()
{
  return self;
}

uint64_t sub_1C0AB3814()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for FormatAdMetricsContentView()
{
  return self;
}

void sub_1C0AB39C4()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView;
  type metadata accessor for FormatAdMetricsContentView();
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v3 = &v0[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker] = 0;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_onCollapse;
  sub_1BFD22278();
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0AB3AA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1C15154CC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  if (a3)
  {
    sub_1C151545C();
    sub_1BFF27ECC();
    uint64_t v11 = sub_1C151FE9C();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v17 = v11;
    uint64_t v18 = v13;
    uint64_t v15 = 10;
    unint64_t v16 = 0xE100000000000000;
    uint64_t v10 = sub_1C151FE4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 10;
    unint64_t v16 = 0xE100000000000000;
    sub_1BFF27ECC();
    return sub_1C151FE4C();
  }
  return v10;
}

uint64_t sub_1C0AB3C2C(uint64_t a1, uint64_t a2)
{
  return sub_1C0AB3C6C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceHighlighter()
{
  return self;
}

uint64_t sub_1C0AB3C6C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        return 0;
      }
      goto LABEL_11;
    case 2:
      if (a6 == 2) {
        goto LABEL_11;
      }
      return 0;
    case 3:
      if (a6 == 3) {
        goto LABEL_11;
      }
      return 0;
    case 4:
      if (a6 == 4) {
        goto LABEL_11;
      }
      return 0;
    case 5:
      if (a6 == 5) {
        goto LABEL_11;
      }
      return 0;
    default:
      if (a6) {
        return 0;
      }
LABEL_11:
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      else {
        return sub_1C1520A9C();
      }
  }
}

uint64_t sub_1C0AB3D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C15154CC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  sub_1C151545C();
  sub_1BFF27ECC();
  uint64_t v8 = sub_1C151FE9C();
  unint64_t v10 = v9;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BFE7E4D4(v8, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    if (v11 == 35 && v13 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    char v15 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return a1;
    }
  }
  uint64_t v16 = sub_1BFEF4060((uint64_t)&unk_1F1B88FB0);
  swift_arrayDestroy();
  char v17 = sub_1BFF896B4(v8, v10, v16);
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_16;
  }
  BOOL v18 = v8 == 1702195828 && v10 == 0xE400000000000000;
  if (v18 || (sub_1C1520A9C() & 1) != 0) {
    goto LABEL_16;
  }
  if (v8 == 0x65736C6166 && v10 == 0xE500000000000000) {
    goto LABEL_16;
  }
  uint64_t v21 = sub_1C1520A9C();
  if (v21) {
    goto LABEL_16;
  }
  uint64_t v30 = 0;
  MEMORY[0x1F4188790](v21);
  *(void *)&v28[-16] = &v30;
  if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v8 & 0x1000000000000000))
  {
    sub_1C15200CC();
    goto LABEL_16;
  }
  MEMORY[0x1F4188790](v22);
  *(void *)&v28[-16] = sub_1C0AB4F14;
  *(void *)&v28[-8] = v23;
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((v8 & 0x1000000000000000) != 0)
    {
      uint64_t v24 = (v10 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v25 = v8 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v24 = sub_1C152020C();
    }
    char v29 = sub_1C02D3A68(v24, v25, (void (*)(uint64_t *__return_ptr))sub_1C0AB4F84) & 1;
    goto LABEL_16;
  }
  uint64_t v31 = v8;
  uint64_t v32 = v10 & 0xFFFFFFFFFFFFFFLL;
  BOOL v27 = (v8 > 0x20u || ((0x100003E01uLL >> v8) & 1) == 0)
     && (uint64_t v26 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
     && *v26 == 0;
  char v29 = v27;
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1C0AB4124(unint64_t a1, unint64_t a2)
{
  uint64_t v125 = sub_1C15154CC();
  uint64_t v4 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  int v124 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v6 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (!v6)
  {
    uint64_t v135 = 0;
    uint64_t v126 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v10 = 0xE000000000000000;
    goto LABEL_151;
  }
  uint64_t v135 = 0;
  uint64_t v7 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v7) = 1;
  }
  uint64_t v8 = 4 << v7;
  uint64_t v130 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v131 = 4 * v6;
  uint64_t v129 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v123 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v126 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v9 = 15;
  long long v119 = xmmword_1C158BE20;
  long long v118 = xmmword_1C158BE30;
  unint64_t v10 = 0xE000000000000000;
  unint64_t v128 = v6;
  uint64_t v132 = 4 << v7;
  unint64_t v121 = a1;
  uint64_t v122 = HIBYTE(a2) & 0xF;
  while (2)
  {
    uint64_t v120 = v126 + 4;
    while (1)
    {
      unint64_t v11 = v9 & 0xC;
      BOOL v12 = (v9 & 1) == 0 || v11 == v8;
      BOOL v13 = v12;
      if (v12)
      {
        unint64_t v14 = v9;
        if (v11 == v8) {
          unint64_t v14 = sub_1C149BAC0(v9, a1, a2);
        }
        char v15 = (uint64_t *)(v14 >> 16);
        if (v14 >> 16 >= v6)
        {
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        if ((v14 & 1) == 0) {
          sub_1C149BC4C(v14, a1, a2);
        }
      }
      else
      {
        char v15 = (uint64_t *)(v9 >> 16);
        if (v9 >> 16 >= v6) {
          goto LABEL_161;
        }
      }
      BOOL v134 = v13;
      unint64_t v16 = v10;
      unint64_t v133 = v9 & 0xC;
      if ((a2 & 0x1000000000000000) == 0) {
        break;
      }
      LODWORD(v11) = sub_1C15200EC();
      uint64_t v17 = v135;
      if ((int)v11 <= 44) {
        goto LABEL_53;
      }
LABEL_31:
      if (v11 == 45)
      {
        uint64_t v136 = v17;
        unint64_t v137 = v16;
        swift_bridgeObjectRetain();
        uint64_t v25 = v124;
        sub_1C15153DC();
        sub_1BFF27ECC();
        uint64_t v26 = sub_1C151FE9C();
        uint64_t v28 = v27;
        (*v123)(v25, v125);
        swift_bridgeObjectRelease();
        if (v26 || v28 != 0xE000000000000000)
        {
          char v29 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          unint64_t v6 = v128;
          if (v29) {
            goto LABEL_107;
          }
          goto LABEL_70;
        }
        swift_bridgeObjectRelease();
        unint64_t v6 = v128;
LABEL_107:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v126 = sub_1C0EE656C(0, v126[2] + 1, 1, v126);
        }
        unint64_t v82 = v126[2];
        unint64_t v81 = v126[3];
        if (v82 >= v81 >> 1) {
          uint64_t v126 = sub_1C0EE656C((void *)(v81 > 1), v82 + 1, 1, v126);
        }
        uint64_t v83 = v126;
        v126[2] = v82 + 1;
        uint64_t v84 = &v83[3 * v82];
        v84[4] = v135;
        v84[5] = v16;
        *((unsigned char *)v84 + 48) = 2;
        swift_bridgeObjectRelease();
        unint64_t v86 = v83[2];
        unint64_t v85 = v83[3];
        if (v86 >= v85 >> 1) {
          uint64_t v126 = sub_1C0EE656C((void *)(v85 > 1), v86 + 1, 1, v126);
        }
        uint64_t v87 = v126;
        v126[2] = v86 + 1;
        int v88 = &v87[3 * v86];
        *((_OWORD *)v88 + 2) = v119;
        *((unsigned char *)v88 + 48) = 0;
        unint64_t v89 = sub_1C149BB3C(v9, a1, a2);
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_117;
        }
        unint64_t v65 = v89 >> 16;
        if ((a2 & 0x2000000000000000) != 0) {
          goto LABEL_118;
        }
        uint64_t v66 = v129;
        if ((a1 & 0x1000000000000000) == 0) {
LABEL_96:
        }
          uint64_t v66 = sub_1C152020C();
LABEL_116:
        int v90 = *(unsigned __int8 *)(v66 + v65);
        uint64_t v8 = v132;
LABEL_138:
        uint64_t v135 = 0;
        int v106 = (char)v90;
        unsigned int v107 = __clz(v90 ^ 0xFF) - 24;
        if (v106 >= 0) {
          LOBYTE(v107) = 1;
        }
        unint64_t v9 = ((v65 + v107) << 16) | 5;
LABEL_141:
        unint64_t v10 = 0xE000000000000000;
        goto LABEL_142;
      }
      if (v11 != 58) {
        goto LABEL_70;
      }
      unint64_t v18 = a2;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C0AB3D2C(v17, v16);
      uint64_t v21 = v20;
      unsigned __int8 v23 = v22;
      int v24 = v22;
      sub_1C0AB4EE4(v19, v20, v22);
      swift_bridgeObjectRelease();
      if (v24 != 3)
      {
        sub_1C0AB4EFC(v19, v21, v23);
        a2 = v18;
        a1 = v121;
        unint64_t v6 = v128;
LABEL_42:
        uint64_t v30 = v126[2];
        if (v30)
        {
          uint64_t v31 = &v120[3 * v30];
          uint64_t v34 = *(v31 - 3);
          uint64_t v33 = v31 - 3;
          uint64_t v32 = v34;
          if (*((unsigned char *)v33 + 16)) {
            goto LABEL_70;
          }
          BOOL v35 = v32 == 45 && v33[1] == 0xE100000000000000;
          if (!v35 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_70;
          }
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v126 = sub_1C0EE656C(0, v30 + 1, 1, v126);
        }
        unint64_t v57 = v126[2];
        unint64_t v56 = v126[3];
        if (v57 >= v56 >> 1) {
          uint64_t v126 = sub_1C0EE656C((void *)(v56 > 1), v57 + 1, 1, v126);
        }
        char v58 = v126;
        v126[2] = v57 + 1;
        uint64_t v59 = &v58[3 * v57];
        v59[4] = v135;
        v59[5] = v16;
        *((unsigned char *)v59 + 48) = 2;
        swift_bridgeObjectRelease();
        unint64_t v61 = v58[2];
        unint64_t v60 = v58[3];
        if (v61 >= v60 >> 1) {
          uint64_t v126 = sub_1C0EE656C((void *)(v60 > 1), v61 + 1, 1, v126);
        }
        unsigned int v62 = v126;
        v126[2] = v61 + 1;
        uint64_t v63 = &v62[3 * v61];
        *((_OWORD *)v63 + 2) = v118;
        *((unsigned char *)v63 + 48) = 0;
        unint64_t v64 = sub_1C149BB3C(v9, a1, a2);
        if ((a2 & 0x1000000000000000) == 0)
        {
          unint64_t v65 = v64 >> 16;
          if ((a2 & 0x2000000000000000) == 0)
          {
            uint64_t v66 = v129;
            if ((a1 & 0x1000000000000000) == 0) {
              goto LABEL_96;
            }
            goto LABEL_116;
          }
LABEL_118:
          uint64_t v136 = a1;
          unint64_t v137 = v130;
          int v90 = *((unsigned __int8 *)&v136 + v65);
          uint64_t v8 = v132;
          goto LABEL_138;
        }
LABEL_117:
        unint64_t v9 = sub_1C151E72C();
        uint64_t v135 = 0;
        unint64_t v10 = 0xE000000000000000;
        uint64_t v8 = v132;
        goto LABEL_142;
      }
      if (v19 == v17 && v21 == v16)
      {
        sub_1C0AB4EFC(v17, v16, 3u);
        a2 = v18;
        a1 = v121;
        unint64_t v6 = v128;
        goto LABEL_70;
      }
      char v36 = sub_1C1520A9C();
      sub_1C0AB4EFC(v19, v21, 3u);
      a2 = v18;
      a1 = v121;
      unint64_t v6 = v128;
      if ((v36 & 1) == 0) {
        goto LABEL_42;
      }
LABEL_70:
      uint64_t v136 = v17;
      unint64_t v137 = v16;
      char v15 = &v136;
      sub_1C151E74C();
      unint64_t v10 = v137;
      uint64_t v135 = v136;
      if (v134)
      {
        uint64_t v8 = v132;
        if (v133 == v132)
        {
          unint64_t v9 = sub_1C149BAC0(v9, a1, a2);
          if (v6 <= v9 >> 16) {
            goto LABEL_163;
          }
        }
        else if (v6 <= v9 >> 16)
        {
          goto LABEL_163;
        }
        if ((v9 & 1) == 0) {
          unint64_t v9 = v9 & 0xC | sub_1C149BC4C(v9, a1, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
        }
      }
      else
      {
        uint64_t v8 = v132;
        if (v6 <= v9 >> 16) {
          goto LABEL_162;
        }
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t v9 = sub_1C151E72C();
      }
      else
      {
        unint64_t v51 = v9 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          uint64_t v136 = a1;
          unint64_t v137 = v130;
          int v53 = *((unsigned __int8 *)&v136 + v51);
        }
        else
        {
          uint64_t v52 = v129;
          if ((a1 & 0x1000000000000000) == 0) {
            uint64_t v52 = sub_1C152020C();
          }
          int v53 = *(unsigned __int8 *)(v52 + v51);
        }
        int v54 = (char)v53;
        unsigned int v55 = __clz(v53 ^ 0xFF) - 24;
        if (v54 >= 0) {
          LOBYTE(v55) = 1;
        }
        unint64_t v9 = ((v51 + v55) << 16) | 5;
      }
      if (v131 <= v9 >> 14) {
        goto LABEL_151;
      }
    }
    uint64_t v17 = v135;
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v136 = a1;
      unint64_t v137 = v130;
    }
    else if ((a1 & 0x1000000000000000) == 0)
    {
      sub_1C152020C();
    }
    LODWORD(v11) = sub_1C152021C();
    if ((int)v11 > 44) {
      goto LABEL_31;
    }
LABEL_53:
    if (v11 != 35)
    {
      if (v11 != 10) {
        goto LABEL_70;
      }
      uint64_t v136 = v17;
      unint64_t v137 = v16;
      sub_1C151E74C();
      uint64_t v68 = v136;
      uint64_t v67 = v137;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1C0AB3D2C(v68, v67);
      uint64_t v71 = v70;
      unsigned __int8 v73 = v72;
      sub_1C0AB4EE4(v69, v70, v72);
      swift_bridgeObjectRelease();
      unsigned int v74 = v126;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unsigned int v74 = sub_1C0EE656C(0, v74[2] + 1, 1, v74);
      }
      unint64_t v77 = v74[2];
      unint64_t v76 = v74[3];
      uint64_t v126 = v74;
      if (v77 >= v76 >> 1) {
        uint64_t v126 = sub_1C0EE656C((void *)(v76 > 1), v77 + 1, 1, v126);
      }
      uint64_t v78 = v126;
      v126[2] = v77 + 1;
      uint64_t v79 = &v78[3 * v77];
      v79[4] = v69;
      v79[5] = v71;
      *((unsigned char *)v79 + 48) = v73;
      unint64_t result = swift_bridgeObjectRelease();
      if (v134)
      {
        uint64_t v8 = v132;
        a1 = v121;
        unint64_t v6 = v128;
        if (v133 == v132)
        {
          unint64_t result = sub_1C149BAC0(v9, v121, a2);
          unint64_t v9 = result;
          if (v6 > result >> 16)
          {
LABEL_104:
            if ((v9 & 1) == 0) {
              unint64_t v9 = v9 & 0xC | sub_1C149BC4C(v9, a1, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
            }
            goto LABEL_120;
          }
        }
        else if (v128 > v9 >> 16)
        {
          goto LABEL_104;
        }
      }
      else
      {
        unint64_t v6 = v128;
        a1 = v121;
        uint64_t v8 = v132;
        if (v128 > v9 >> 16)
        {
LABEL_120:
          if ((a2 & 0x1000000000000000) == 0)
          {
            unint64_t v65 = v9 >> 16;
            if ((a2 & 0x2000000000000000) != 0)
            {
              uint64_t v136 = a1;
              unint64_t v137 = v130;
              int v90 = *((unsigned __int8 *)&v136 + v65);
            }
            else
            {
              uint64_t v91 = v129;
              if ((a1 & 0x1000000000000000) == 0) {
                uint64_t v91 = sub_1C152020C();
              }
              int v90 = *(unsigned __int8 *)(v91 + v65);
            }
            goto LABEL_138;
          }
          unint64_t v9 = sub_1C151E72C();
          uint64_t v135 = 0;
          goto LABEL_141;
        }
        __break(1u);
      }
      __break(1u);
      return result;
    }
    uint64_t v37 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v37 = v17 & 0xFFFFFFFFFFFFLL;
    }
    if (!v37) {
      goto LABEL_70;
    }
    swift_bridgeObjectRetain();
    sub_1C151E7CC();
    uint64_t v38 = sub_1C151E8BC();
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    if (v38 == 32 && v40 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v135;
    }
    else
    {
      char v41 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      uint64_t v17 = v135;
      if ((v41 & 1) == 0) {
        goto LABEL_70;
      }
    }
    uint64_t v136 = v17;
    unint64_t v137 = v16;
    swift_bridgeObjectRetain();
    uint64_t v42 = v124;
    sub_1C15153DC();
    sub_1BFF27ECC();
    uint64_t v43 = sub_1C151FE9C();
    unint64_t v45 = v44;
    (*v123)(v42, v125);
    swift_bridgeObjectRelease();
    uint64_t v46 = HIBYTE(v45) & 0xF;
    if ((v45 & 0x2000000000000000) == 0) {
      uint64_t v46 = v43 & 0xFFFFFFFFFFFFLL;
    }
    if (v46)
    {
      uint64_t v47 = sub_1C151E8BC();
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();
      if (v47 == 34 && v49 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        unint64_t v6 = v128;
      }
      else
      {
        char v50 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        unint64_t v6 = v128;
        if ((v50 & 1) == 0) {
          goto LABEL_127;
        }
      }
      goto LABEL_70;
    }
    swift_bridgeObjectRelease();
LABEL_127:
    swift_bridgeObjectRetain();
    uint64_t v92 = sub_1C0AB3D2C(v17, v16);
    uint64_t v94 = v93;
    unsigned __int8 v96 = v95;
    sub_1C0AB4EE4(v92, v93, v95);
    swift_bridgeObjectRelease();
    int v97 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v97 = sub_1C0EE656C(0, v97[2] + 1, 1, v97);
    }
    unint64_t v99 = v97[2];
    unint64_t v98 = v97[3];
    uint64_t v126 = v97;
    if (v99 >= v98 >> 1) {
      uint64_t v126 = sub_1C0EE656C((void *)(v98 > 1), v99 + 1, 1, v126);
    }
    size_t v100 = v126;
    v126[2] = v99 + 1;
    uint64_t v101 = &v100[3 * v99];
    v101[4] = v92;
    v101[5] = v94;
    *((unsigned char *)v101 + 48) = v96;
    swift_bridgeObjectRelease();
    unint64_t v102 = sub_1C149BB3C(v9, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t v9 = sub_1C151E72C();
      unint64_t v10 = 0xE100000000000000;
      uint64_t v135 = 35;
      unint64_t v6 = v128;
      uint64_t v8 = v132;
    }
    else
    {
      unint64_t v103 = v102 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        uint64_t v136 = a1;
        unint64_t v137 = v130;
        int v105 = *((unsigned __int8 *)&v136 + v103);
      }
      else
      {
        uint64_t v104 = v129;
        if ((a1 & 0x1000000000000000) == 0) {
          uint64_t v104 = sub_1C152020C();
        }
        int v105 = *(unsigned __int8 *)(v104 + v103);
      }
      unint64_t v6 = v128;
      uint64_t v8 = v132;
      int v108 = (char)v105;
      unsigned int v109 = __clz(v105 ^ 0xFF) - 24;
      if (v108 >= 0) {
        LOBYTE(v109) = 1;
      }
      unint64_t v9 = ((v103 + v109) << 16) | 5;
      unint64_t v10 = 0xE100000000000000;
      uint64_t v135 = 35;
    }
LABEL_142:
    if (v131 > v9 >> 14) {
      continue;
    }
    break;
  }
LABEL_151:
  uint64_t v110 = HIBYTE(v10) & 0xF;
  uint64_t v111 = v135;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v110 = v135 & 0xFFFFFFFFFFFFLL;
  }
  if (v110)
  {
    swift_bridgeObjectRetain();
    char v15 = (uint64_t *)sub_1C0AB3D2C(v111, v10);
    uint64_t v112 = v126;
    a1 = v113;
    LOBYTE(v11) = v114;
    sub_1C0AB4EE4((uint64_t)v15, v113, v114);
    swift_bridgeObjectRelease();
    unint64_t v6 = (unint64_t)v112;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_164:
    }
      unint64_t v6 = (unint64_t)sub_1C0EE656C(0, *(void *)(v6 + 16) + 1, 1, (void *)v6);
    unint64_t v116 = *(void *)(v6 + 16);
    unint64_t v115 = *(void *)(v6 + 24);
    if (v116 >= v115 >> 1) {
      unint64_t v6 = (unint64_t)sub_1C0EE656C((void *)(v115 > 1), v116 + 1, 1, (void *)v6);
    }
    *(void *)(v6 + 16) = v116 + 1;
    unint64_t v117 = v6 + 24 * v116;
    *(void *)(v117 + 32) = v15;
    *(void *)(v117 + 40) = a1;
    *(unsigned char *)(v117 + 48) = v11;
  }
  else
  {
    unint64_t v6 = (unint64_t)v126;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C0AB4EE4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0AB4EFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *sub_1C0AB4F14@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1C0AB4F84@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C02D3B54(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t destroy for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1)
{
  return sub_1C0AB4EFC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed36DebugFormatDebuggerSourceHighlighterC5TokenOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C0AB4EE4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C0AB4EE4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0AB4EFC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0AB4EFC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatDebuggerSourceHighlighter.Token(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerSourceHighlighter.Token()
{
  return &type metadata for DebugFormatDebuggerSourceHighlighter.Token;
}

id SportsInjuryReportDataVisualization.leagueTag.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
  return v1;
}

uint64_t SportsInjuryReportDataVisualization.competitorTags.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

uint64_t SportsInjuryReportDataVisualization.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsInjuryReportDataVisualization.umcCanonicalId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsInjuryReportDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsInjuryReportDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl, a1);
}

uint64_t SportsInjuryReportDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsInjuryReportDataVisualization.roster.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsInjuryReportDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 24);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 32);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1C025C670(v2, v3);
}

uint64_t SportsInjuryReportDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl, a1);
}

uint64_t SportsInjuryReportDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14 = swift_allocObject();
  SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

char *SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  unsigned __int8 v8 = v7;
  uint64_t v54 = a5;
  uint64_t v15 = sub_1C1515FDC();
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v52 = (uint64_t)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a6;
  uint64_t v19 = *a7;
  uint64_t v20 = a7[1];
  uint64_t v21 = a7[2];
  uint64_t v22 = a7[3];
  uint64_t v24 = a7[4];
  uint64_t v23 = a7[5];
  uint64_t v49 = a1;
  uint64_t v50 = v25;
  *((void *)v8 + 4) = a1;
  *((void *)v8 + 5) = a2;
  uint64_t v26 = v19;
  uint64_t v27 = a3;
  *((void *)v8 + 6) = a3;
  uint64_t v28 = v21;
  char v29 = *(void (**)(char *, uint64_t, __n128))(v25 + 16);
  uint64_t v51 = a4;
  uint64_t v30 = a4;
  uint64_t v31 = v22;
  uint64_t v53 = v32;
  v29(&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl], v30, v16);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources] = v54;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster] = v18;
  uint64_t v33 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config];
  uint64_t v54 = v26;
  *uint64_t v33 = v26;
  v33[1] = v20;
  uint64_t v34 = v20;
  v33[2] = v28;
  v33[3] = v31;
  unsigned char v33[4] = v24;
  v33[5] = v23;
  uint64_t v47 = v31;
  uint64_t v48 = v24;
  uint64_t v45 = v23;
  uint64_t v46 = v27;
  if (v20)
  {
    uint64_t v55 = 14906;
    unint64_t v56 = 0xE200000000000000;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1C025C670(v54, v20);
    uint64_t v35 = v28;
    sub_1C151E80C();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v35 = v28;
  }
  v44[1] = v35;
  uint64_t v36 = v51;
  uint64_t v55 = sub_1C1515E2C();
  unint64_t v56 = v37;
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v38 = v56;
  *((void *)v8 + 2) = v55;
  *((void *)v8 + 3) = v38;
  uint64_t v39 = v54;
  uint64_t v55 = v54;
  unint64_t v56 = v34;
  uint64_t v57 = v35;
  uint64_t v58 = v47;
  uint64_t v59 = v48;
  uint64_t v60 = v45;
  uint64_t v40 = v52;
  sub_1C0B98938(v36, &v55, 0xD00000000000001DLL, 0x80000001C161B140, v52);
  swift_unknownObjectRelease();
  uint64_t v41 = v50;
  uint64_t v42 = v53;
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v36, v53);
  sub_1C025EF94(v39, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl], v40, v42);
  return v8;
}

uint64_t SportsInjuryReportDataVisualization.with(config:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v13 = v1[4];
  uint64_t v21 = v1[5];
  uint64_t v22 = v1[6];
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl, v4);
  uint64_t v15 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources);
  uint64_t v16 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster);
  v24[5] = v11;
  uint64_t v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v21;
  swift_bridgeObjectRetain();
  uint64_t v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsInjuryReportDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsInjuryReportDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsInjuryReportDataVisualization.init(from:)(void *a1)
{
  uint64_t v39 = a1;
  uint64_t v2 = v1;
  uint64_t v40 = *(void *)v2;
  uint64_t v34 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - v7;
  sub_1C025F004();
  uint64_t v10 = v9;
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AB7B4C(0, &qword_1EA1A3158, MEMORY[0x1E4FBBDC0]);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AB7AF8();
  unint64_t v37 = v16;
  uint64_t v17 = v38;
  uint64_t v18 = v2;
  sub_1C1520EBC();
  if (v17)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    unint64_t v38 = v8;
    uint64_t v31 = v5;
    LOBYTE(v41) = 0;
    uint64_t v19 = v35;
    *((void *)v2 + 4) = sub_1C152069C();
    *((void *)v2 + 5) = v20;
    LOBYTE(v41) = 1;
    sub_1C025F0C0(&qword_1EB863FA0, (void (*)(uint64_t))sub_1C025F004);
    sub_1C15206EC();
    sub_1C151948C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    *((void *)v2 + 6) = v41;
    LOBYTE(v41) = 2;
    uint64_t v21 = sub_1C025F0C0((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    uint64_t v22 = v38;
    uint64_t v23 = v34;
    sub_1C15206EC();
    uint64_t v33 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl], v24, v23);
    sub_1BFF5D74C(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    char v44 = 3;
    sub_1C0A473A4(&qword_1EB86B2E0, &qword_1EB86A8C0);
    unint64_t v38 = 0;
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources] = v41;
    char v44 = 6;
    sub_1C025F108();
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster] = v41;
    char v44 = 5;
    sub_1C025F15C();
    sub_1C152065C();
    uint64_t v26 = &v18[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config];
    long long v27 = v42;
    *(_OWORD *)uint64_t v26 = v41;
    *((_OWORD *)v26 + 1) = v27;
    *((_OWORD *)v26 + 2) = v43;
    LOBYTE(v41) = 4;
    *((void *)v18 + 2) = sub_1C152069C();
    *((void *)v18 + 3) = v28;
    LOBYTE(v41) = 7;
    char v29 = v31;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v19);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl], v29, v23);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v18;
}

uint64_t SportsInjuryReportDataVisualization.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025F004();
  uint64_t v7 = v6;
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AB7B4C(0, (unint64_t *)&unk_1EA1A3170, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AB7AF8();
  uint64_t v15 = v11;
  uint64_t v16 = v36;
  sub_1C1520F0C();
  LOBYTE(v37) = 0;
  uint64_t v17 = v35;
  sub_1C15207CC();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v30 = 0;
  uint64_t v31 = v9;
  uint64_t v19 = v32;
  uint64_t v35 = v14;
  uint64_t v29 = v12;
  *(void *)&long long v37 = *(void *)(v16 + 48);
  uint64_t v20 = qword_1EB863C98;
  swift_unknownObjectRetain_n();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB863C78);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v5, v21, v19);
  MEMORY[0x1F4188790](v22);
  *(&v29 - 2) = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB890230);
  swift_getKeyPath();
  uint64_t v23 = v31;
  sub_1C151947C();
  swift_unknownObjectRelease();
  LOBYTE(v37) = 1;
  sub_1C025F0C0((unint64_t *)&unk_1EB863F90, (void (*)(uint64_t))sub_1C025F004);
  uint64_t v24 = v35;
  uint64_t v25 = v30;
  sub_1C152080C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v7);
  if (v25) {
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v24, v15);
  }
  uint64_t v26 = v36;
  LOBYTE(v37) = 2;
  sub_1C1515FDC();
  sub_1C025F0C0((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
  sub_1C152080C();
  *(void *)&long long v37 = *(void *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources);
  char v40 = 3;
  sub_1BFF5D74C(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
  sub_1C0A473A4((unint64_t *)&qword_1EB86B2D0, (unint64_t *)&unk_1EB86A8B0);
  sub_1C152080C();
  *(void *)&long long v37 = *(void *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster);
  char v40 = 6;
  sub_1C025F39C();
  sub_1C152080C();
  uint64_t v27 = v29;
  long long v28 = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 16);
  long long v37 = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config);
  long long v38 = v28;
  long long v39 = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 32);
  char v40 = 5;
  sub_1C025F3F0();
  sub_1C152078C();
  LOBYTE(v37) = 4;
  sub_1C15207CC();
  LOBYTE(v37) = 7;
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v24, v15);
}

unint64_t sub_1C0AB66C8(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x696669746E656469;
      break;
    case 5:
      unint64_t result = 0x6769666E6F63;
      break;
    case 6:
      unint64_t result = 0x726574736F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0AB67E0(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x696669746E656469;
      break;
    case 5:
      unint64_t result = 0x6769666E6F63;
      break;
    case 6:
      unint64_t result = 0x726574736F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0AB68F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0AB7F44();
  *a1 = result;
  return result;
}

unint64_t sub_1C0AB6928@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0AB66C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C0AB6954()
{
  return sub_1C0AB67E0(*v0);
}

uint64_t sub_1C0AB695C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0AB7F44();
  *a1 = result;
  return result;
}

uint64_t sub_1C0AB6984(uint64_t a1)
{
  unint64_t v2 = sub_1C0AB7AF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0AB69C0(uint64_t a1)
{
  unint64_t v2 = sub_1C0AB7AF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsInjuryReportDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl;
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C025EF94(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsInjuryReportDataVisualization.__deallocating_deinit()
{
  SportsInjuryReportDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1C0AB6B3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsInjuryReportDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0AB6B94(void *a1)
{
  return SportsInjuryReportDataVisualization.encode(to:)(a1);
}

uint64_t static SportsInjuryReportDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

void *sub_1C0AB6BE8(uint64_t a1)
{
  uint64_t v2 = (char *)sub_1C1515FDC();
  unint64_t v3 = *((void *)v2 - 1);
  MEMORY[0x1F4188790](v2);
  int v97 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF5D74C(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned __int8 v96 = (void **)((char *)&v90 - v7);
  sub_1BFF5D74C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v5);
  MEMORY[0x1F4188790](v8 - 8);
  MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v90 - v13;
  if (a1)
  {
    uint64_t v115 = v12;
    uint64_t v106 = v11;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF5D74C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF5D74C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v15);
    uint64_t v17 = v16;
    sub_1C0181BEC(0);
    uint64_t v117 = v18;
    uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 72);
    uint64_t v20 = *(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
    uint64_t v21 = (v20 + 32) & ~v20;
    uint64_t v114 = v17;
    uint64_t v112 = v21 + 3 * v19;
    uint64_t v111 = v20 | 7;
    uint64_t v22 = swift_allocObject();
    long long v110 = xmmword_1C152C7F0;
    *(_OWORD *)(v22 + 16) = xmmword_1C152C7F0;
    uint64_t v91 = v22;
    uint64_t v113 = v21;
    uint64_t v23 = (void *)(v22 + v21);
    uint64_t v24 = *(void *)(a1 + 32);
    uint64_t v93 = a1;
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v27 = (char *)v23 + *(int *)(v26 + 24);
    *(void *)uint64_t v27 = v24;
    *((void *)v27 + 1) = v25;
    uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56);
    uint64_t v124 = v28;
    uint64_t v123 = v30;
    uint64_t v122 = v29 + 56;
    v30(v27, 0, 1, v28);
    *uint64_t v23 = 0xD000000000000010;
    v23[1] = 0x80000001C1608E60;
    v23[2] = 0;
    v23[3] = 0;
    uint64_t v31 = (char *)v23 + *(int *)(v26 + 28);
    *(void *)uint64_t v31 = 0;
    *((void *)v31 + 1) = 0;
    v31[16] = -1;
    uint64_t v32 = *(void *)(v26 - 8);
    uint64_t v33 = *(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56);
    uint64_t v34 = v32 + 56;
    v33(v23, 0, 1, v26);
    int v90 = v23;
    uint64_t v118 = v19;
    uint64_t v35 = (void *)((char *)v23 + v19);
    uint64_t v36 = (void *)v26;
    long long v37 = *(void (**)(char *, uint64_t, char *))(v3 + 16);
    unint64_t v109 = v3 + 16;
    v37(v14, v93 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl, v2);
    long long v38 = *(void (**)(uint64_t, void, uint64_t, char *))(v3 + 56);
    unint64_t v108 = v3 + 56;
    unsigned int v107 = v38;
    v38((uint64_t)v14, 0, 1, v2);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C04338EC(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v14, v35);
    uint64_t v126 = (void (*)(char *, void, uint64_t, void *))v33;
    uint64_t v125 = v34;
    v33(v35, 0, 1, (uint64_t)v36);
    unint64_t v39 = *(void *)(v93 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources);
    if (v39 >> 62) {
      goto LABEL_24;
    }
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v40)
    {
      while (1)
      {
        uint64_t v129 = MEMORY[0x1E4FBC860];
        uint64_t result = (void *)sub_1C05F6B44(0, v40 & ~(v40 >> 63), 0);
        if (v40 < 0) {
          break;
        }
        long long v119 = v36;
        uint64_t v42 = 0;
        uint64_t v43 = v129;
        unint64_t v103 = v39 & 0xC000000000000001;
        uint64_t v116 = 2 * v118;
        unint64_t v102 = (unsigned int (**)(uint64_t, uint64_t, char *))(v3 + 48);
        unsigned __int8 v95 = (void (**)(char *, char *, char *))(v3 + 32);
        uint64_t v94 = (void (**)(uint64_t, char *))(v3 + 8);
        uint64_t v44 = MEMORY[0x1E4FBB1A0];
        long long v99 = xmmword_1C1536B40;
        long long v98 = xmmword_1C1536B50;
        int v105 = v2;
        uint64_t v104 = v37;
        unint64_t v101 = v39;
        uint64_t v100 = v40;
        while (v40 != v42)
        {
          uint64_t v121 = v42;
          uint64_t v120 = v43;
          if (v103)
          {
            uint64_t v45 = (void *)MEMORY[0x1C18C7CB0](v42, v39);
          }
          else
          {
            uint64_t v45 = *(void **)(v39 + 8 * v42 + 32);
            swift_retain();
          }
          uint64_t v46 = v119;
          uint64_t v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = v110;
          uint64_t v48 = (void *)(v47 + v113);
          uint64_t v49 = v45[2];
          unint64_t v50 = v45[3];
          sub_1C025F810(v49, v50);
          sub_1C0436838(0x20746E65746E6F43, 0xEC00000065707954, v49, v50, (char *)v48);
          v126((char *)v48, 0, 1, v46);
          uint64_t v51 = (char *)v48 + v118;
          uint64_t v52 = v45[5];
          *(void *)&long long v128 = v45[4];
          *((void *)&v128 + 1) = v52;
          sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
          swift_bridgeObjectRetain_n();
          if (swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
            uint64_t v53 = &v51[*((int *)v46 + 6)];
            *(void *)uint64_t v53 = v130;
            uint64_t v54 = v124;
            swift_storeEnumTagMultiPayload();
            v123(v53, 0, 1, v54);
            *(_OWORD *)uint64_t v51 = v99;
            *((void *)v51 + 2) = 0;
            *((void *)v51 + 3) = 0;
            uint64_t v55 = &v51[*((int *)v46 + 7)];
            *(void *)uint64_t v55 = 0;
            *((void *)v55 + 1) = 0;
            v55[16] = -1;
          }
          else
          {
            *((void *)&v131 + 1) = v44;
            uint64_t v132 = (char **)MEMORY[0x1E4FBB208];
            long long v130 = v128;
            sub_1BFC773DC(&v130, (uint64_t)v127);
            unint64_t v56 = __swift_project_boxed_opaque_existential_1(v127, v127[3]);
            uint64_t v57 = *v56;
            uint64_t v58 = v56[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v59 = (uint64_t)v96;
            void *v96 = v57;
            *(void *)(v59 + 8) = v58;
            uint64_t v46 = v119;
            uint64_t v60 = v124;
            swift_storeEnumTagMultiPayload();
            v123((char *)v59, 0, 1, v60);
            *(_OWORD *)uint64_t v51 = v99;
            *((void *)v51 + 2) = 0;
            *((void *)v51 + 3) = 0;
            sub_1C025F820(v59, (uint64_t)&v51[*((int *)v46 + 6)]);
            unint64_t v61 = &v51[*((int *)v46 + 7)];
            *(void *)unint64_t v61 = 0;
            *((void *)v61 + 1) = 0;
            v61[16] = -1;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
          }
          uint64_t v62 = v106;
          swift_bridgeObjectRelease();
          v126(v51, 0, 1, v46);
          long long v37 = (void (*)(char *, uint64_t, char *))((char *)v48 + v116);
          uint64_t v63 = v46;
          unint64_t v64 = v105;
          unint64_t v65 = v104;
          v104((char *)v62, (uint64_t)v45 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v105);
          v107(v62, 0, 1, v64);
          uint64_t v66 = v115;
          sub_1C0025B10(v62, v115);
          if ((*v102)(v66, 1, v64) == 1)
          {
            sub_1C002F608(v62);
            v123((char *)v37 + *((int *)v63 + 6), 1, 1, v124);
            *(_OWORD *)long long v37 = v98;
            *((void *)v37 + 2) = 0;
            *((void *)v37 + 3) = 0;
            uint64_t v67 = (char *)v37 + *((int *)v63 + 7);
            *(void *)uint64_t v67 = 0;
            *((void *)v67 + 1) = 0;
            v67[16] = -1;
          }
          else
          {
            uint64_t v68 = v97;
            v65(v97, v66, v64);
            sub_1C002F608(v62);
            uint64_t v69 = (char *)v37 + *((int *)v63 + 6);
            (*v95)(v69, v68, v64);
            uint64_t v70 = v124;
            swift_storeEnumTagMultiPayload();
            v123(v69, 0, 1, v70);
            *(_OWORD *)long long v37 = v98;
            *((void *)v37 + 2) = 0;
            *((void *)v37 + 3) = 0;
            uint64_t v71 = (char *)v37 + *((int *)v63 + 7);
            *(void *)uint64_t v71 = 0;
            *((void *)v71 + 1) = 0;
            v71[16] = -1;
            (*v94)(v66, v64);
          }
          unint64_t v39 = v101;
          uint64_t v40 = v100;
          v126((char *)v37, 0, 1, v63);
          sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, v47, v133);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          *((void *)&v131 + 1) = &type metadata for FormatInspectionGroup;
          uint64_t v132 = &off_1F1BDEC90;
          uint64_t v72 = swift_allocObject();
          *(void *)&long long v130 = v72;
          swift_release();
          *(void *)(v72 + 48) = v134;
          long long v73 = v133[1];
          *(_OWORD *)(v72 + 16) = v133[0];
          *(_OWORD *)(v72 + 32) = v73;
          uint64_t v129 = v120;
          unint64_t v3 = *(void *)(v120 + 16);
          unint64_t v74 = *(void *)(v120 + 24);
          if (v3 >= v74 >> 1) {
            sub_1C05F6B44(v74 > 1, v3 + 1, 1);
          }
          uint64_t v42 = v121 + 1;
          uint64_t v75 = *((void *)&v131 + 1);
          uint64_t v76 = (uint64_t)v132;
          uint64_t v77 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v130, *((uint64_t *)&v131 + 1));
          uint64_t v36 = &v90;
          __n128 v78 = MEMORY[0x1F4188790](v77);
          uint64_t v2 = (char *)&v90 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v80 + 16))(v2, v78);
          sub_1BFEA7C90(v3, (uint64_t)v2, &v129, v75, v76);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v130);
          uint64_t v43 = v129;
          uint64_t v44 = MEMORY[0x1E4FBB1A0];
          if (v40 == v42)
          {
            swift_bridgeObjectRelease();
            uint64_t v36 = v119;
            uint64_t v81 = v116;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1C15204BC();
        if (!v40) {
          goto LABEL_25;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v81 = 2 * v118;
      uint64_t v43 = MEMORY[0x1E4FBC860];
LABEL_26:
      uint64_t v83 = (void *)inited;
      uint64_t v84 = (void *)((char *)v90 + v81);
      uint64_t v85 = sub_1C0233FC8(v43);
      swift_bridgeObjectRelease();
      unint64_t v86 = sub_1C131B79C(v85);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x756F532061746144, 0xEC00000073656372, (uint64_t)v86, 0, 0, (char *)v84);
      v126((char *)v84, 0, 1, v36);
      sub_1C09BCFA4(0x726F635320786F42, 0xE900000000000065, 0, 0, v91, &v130);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v83[7] = &type metadata for FormatInspectionGroup;
      v83[8] = &off_1F1BDEC90;
      uint64_t v87 = swift_allocObject();
      v83[4] = v87;
      *(void *)(v87 + 48) = v132;
      long long v88 = v131;
      *(_OWORD *)(v87 + 16) = v130;
      *(_OWORD *)(v87 + 32) = v88;
      unint64_t v89 = sub_1C131B79C((uint64_t)v83);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      swift_release();
      return v89;
    }
  }
  else
  {
    uint64_t v82 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v82);
  }
  return result;
}

unint64_t sub_1C0AB7AF8()
{
  unint64_t result = qword_1EA1A3160;
  if (!qword_1EA1A3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3160);
  }
  return result;
}

void sub_1C0AB7B4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0AB7AF8();
    unint64_t v7 = a3(a1, &type metadata for SportsInjuryReportDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0AB7BB4()
{
  return 8;
}

void *sub_1C0AB7BC0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0AB7BCC()
{
  return type metadata accessor for SportsInjuryReportDataVisualization();
}

uint64_t type metadata accessor for SportsInjuryReportDataVisualization()
{
  uint64_t result = qword_1EA1A3180;
  if (!qword_1EA1A3180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0AB7C20()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SportsInjuryReportDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsInjuryReportDataVisualization);
}

uint64_t dispatch thunk of SportsInjuryReportDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsInjuryReportDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for SportsInjuryReportDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AB7E04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsInjuryReportDataVisualization.CodingKeys()
{
  return &type metadata for SportsInjuryReportDataVisualization.CodingKeys;
}

unint64_t sub_1C0AB7E40()
{
  unint64_t result = qword_1EA1A3198;
  if (!qword_1EA1A3198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3198);
  }
  return result;
}

unint64_t sub_1C0AB7E98()
{
  unint64_t result = qword_1EA1A31A0;
  if (!qword_1EA1A31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A31A0);
  }
  return result;
}

unint64_t sub_1C0AB7EF0()
{
  unint64_t result = qword_1EA1A31A8;
  if (!qword_1EA1A31A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A31A8);
  }
  return result;
}

uint64_t sub_1C0AB7F44()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0AB7F90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0AB8020(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C00458A8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C00458A8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0AB80AC()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C00458A8(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0AB8110()
{
  sub_1C00458A8(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AB8164()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C00458A8(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

void sub_1C0AB81C4(void *a1@<X8>)
{
  *a1 = &unk_1F1B64728;
}

uint64_t FormatNodeStyle.class.getter()
{
  if ((unint64_t)v0[6] >> 59 == 16) {
    char v1 = v0 + 2;
  }
  else {
    char v1 = (uint64_t *)(*v0 + 32);
  }
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s8NewsFeed15FormatNodeStyleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v9 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v13 = a2[2];
  uint64_t v12 = a2[3];
  uint64_t v15 = a2[4];
  uint64_t v14 = a2[5];
  unint64_t v16 = a2[6];
  uint64_t v17 = a2[7];
  uint64_t v156 = v2;
  v163[0] = v2;
  v163[1] = v3;
  v163[2] = v5;
  v163[3] = v4;
  v163[4] = v7;
  v163[5] = v6;
  v163[6] = v9;
  v163[7] = v8;
  v163[8] = v10;
  v163[9] = v11;
  v163[10] = v13;
  v163[11] = v12;
  v163[12] = v15;
  v163[13] = v14;
  v163[14] = v16;
  v163[15] = v17;
  switch(v9 >> 59)
  {
    case 1uLL:
      if (v16 >> 59 != 1) {
        goto LABEL_39;
      }
      uint64_t v20 = v10;
      uint64_t v21 = v11;
      uint64_t v140 = v5;
      uint64_t v22 = v13;
      uint64_t v23 = v4;
      uint64_t v24 = v12;
      uint64_t v25 = v7;
      uint64_t v26 = v6;
      sub_1BFF95098(v10, v21, v22, v24, v15, v14, v16);
      sub_1BFF95098(v156, v3, v140, v23, v25, v26, v9);
      char v19 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v20);
      goto LABEL_38;
    case 2uLL:
      if (v16 >> 59 != 2) {
        goto LABEL_39;
      }
      uint64_t v27 = v10;
      uint64_t v131 = v4;
      uint64_t v134 = v7;
      uint64_t v137 = v6;
      uint64_t v141 = v5;
      type metadata accessor for FormatImageNodeStyle();
      sub_1BFF95098(v27, v11, v13, v12, v15, v14, v16);
      sub_1BFF95098(v156, v3, v141, v131, v134, v137, v9);
      char v19 = static FormatImageNodeStyle.== infix(_:_:)(v156, v27);
      goto LABEL_38;
    case 3uLL:
      if (v16 >> 59 != 3) {
        goto LABEL_39;
      }
      uint64_t v28 = v10;
      uint64_t v29 = v11;
      uint64_t v142 = v5;
      uint64_t v30 = v13;
      uint64_t v31 = v4;
      uint64_t v32 = v12;
      uint64_t v33 = v7;
      uint64_t v34 = v6;
      sub_1BFF95098(v10, v29, v30, v32, v15, v14, v16);
      sub_1BFF95098(v156, v3, v142, v31, v33, v34, v9);
      char v19 = _s8NewsFeed19FormatItemNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v28);
      goto LABEL_38;
    case 4uLL:
      if (v16 >> 59 != 4) {
        goto LABEL_39;
      }
      uint64_t v35 = v10;
      uint64_t v36 = v11;
      uint64_t v143 = v5;
      uint64_t v37 = v13;
      uint64_t v38 = v4;
      uint64_t v39 = v12;
      uint64_t v40 = v7;
      uint64_t v41 = v6;
      sub_1BFF95098(v10, v36, v37, v39, v15, v14, v16);
      sub_1BFF95098(v156, v3, v143, v38, v40, v41, v9);
      char v19 = _s8NewsFeed23FormatWebEmbedNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v35);
      goto LABEL_38;
    case 5uLL:
      if (v16 >> 59 != 5) {
        goto LABEL_39;
      }
      uint64_t v42 = v10;
      uint64_t v43 = v11;
      uint64_t v144 = v5;
      uint64_t v44 = v13;
      uint64_t v45 = v4;
      uint64_t v46 = v12;
      uint64_t v47 = v7;
      uint64_t v48 = v6;
      sub_1BFF95098(v10, v43, v44, v46, v15, v14, v16);
      sub_1BFF95098(v156, v3, v144, v45, v47, v48, v9);
      char v19 = _s8NewsFeed21FormatCustomNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v42);
      goto LABEL_38;
    case 6uLL:
      if (v16 >> 59 != 6) {
        goto LABEL_39;
      }
      uint64_t v49 = v10;
      uint64_t v50 = v11;
      uint64_t v145 = v5;
      uint64_t v51 = v13;
      uint64_t v52 = v4;
      uint64_t v53 = v12;
      uint64_t v54 = v7;
      uint64_t v55 = v6;
      sub_1BFF95098(v10, v50, v51, v53, v15, v14, v16);
      sub_1BFF95098(v156, v3, v145, v52, v54, v55, v9);
      char v19 = _s8NewsFeed28FormatSupplementaryNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v49);
      goto LABEL_38;
    case 7uLL:
      if (v16 >> 59 != 7) {
        goto LABEL_39;
      }
      uint64_t v56 = v10;
      uint64_t v57 = v11;
      uint64_t v146 = v5;
      uint64_t v58 = v13;
      uint64_t v59 = v4;
      uint64_t v60 = v12;
      uint64_t v61 = v7;
      uint64_t v62 = v6;
      sub_1BFF95098(v10, v57, v58, v60, v15, v14, v16);
      sub_1BFF95098(v156, v3, v146, v59, v61, v62, v9);
      char v19 = _s8NewsFeed19FormatMicaNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v56);
      goto LABEL_38;
    case 8uLL:
      if (v16 >> 59 != 8) {
        goto LABEL_39;
      }
      uint64_t v63 = v10;
      uint64_t v64 = v11;
      uint64_t v147 = v5;
      uint64_t v65 = v13;
      uint64_t v66 = v4;
      uint64_t v67 = v12;
      uint64_t v68 = v7;
      uint64_t v69 = v6;
      sub_1BFF95098(v10, v64, v65, v67, v15, v14, v16);
      sub_1BFF95098(v156, v3, v147, v66, v68, v69, v9);
      char v19 = _s8NewsFeed27FormatLayeredMediaNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v63);
      goto LABEL_38;
    case 9uLL:
      if (v16 >> 59 == 9) {
        goto LABEL_21;
      }
      goto LABEL_39;
    case 0xAuLL:
      if (v16 >> 59 != 10) {
        goto LABEL_39;
      }
      uint64_t v77 = v10;
      uint64_t v78 = v11;
      uint64_t v149 = v5;
      uint64_t v79 = v13;
      uint64_t v80 = v4;
      uint64_t v81 = v12;
      uint64_t v82 = v7;
      uint64_t v83 = v6;
      sub_1BFF95098(v10, v78, v79, v81, v15, v14, v16);
      sub_1BFF95098(v156, v3, v149, v80, v82, v83, v9);
      char v19 = _s8NewsFeed25FormatIssueCoverNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v77);
      goto LABEL_38;
    case 0xBuLL:
      if (v16 >> 59 != 11) {
        goto LABEL_39;
      }
      uint64_t v84 = v10;
      uint64_t v85 = v11;
      uint64_t v150 = v5;
      uint64_t v86 = v13;
      uint64_t v87 = v4;
      uint64_t v88 = v12;
      uint64_t v89 = v7;
      uint64_t v90 = v6;
      sub_1BFF95098(v10, v85, v86, v88, v15, v14, v16);
      sub_1BFF95098(v156, v3, v150, v87, v89, v90, v9);
      char v19 = _s8NewsFeed20FormatGroupNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v84);
      goto LABEL_38;
    case 0xCuLL:
      if (v16 >> 59 != 12) {
        goto LABEL_39;
      }
      uint64_t v91 = v10;
      uint64_t v92 = v11;
      uint64_t v151 = v5;
      uint64_t v93 = v13;
      uint64_t v94 = v4;
      uint64_t v95 = v12;
      uint64_t v96 = v7;
      uint64_t v97 = v6;
      sub_1BFF95098(v10, v92, v93, v95, v15, v14, v16);
      sub_1BFF95098(v156, v3, v151, v94, v96, v97, v9);
      char v19 = _s8NewsFeed24FormatGroupNodeMaskStyleC2eeoiySbAC_ACtFZ_0(v156, v91);
      goto LABEL_38;
    case 0xDuLL:
      if (v16 >> 59 != 13) {
        goto LABEL_39;
      }
      uint64_t v98 = v10;
      uint64_t v99 = v11;
      uint64_t v152 = v5;
      uint64_t v100 = v13;
      uint64_t v101 = v4;
      uint64_t v102 = v12;
      uint64_t v103 = v7;
      uint64_t v104 = v6;
      sub_1BFF95098(v10, v99, v100, v102, v15, v14, v16);
      sub_1BFF95098(v156, v3, v152, v101, v103, v104, v9);
      char v19 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v98);
      goto LABEL_38;
    case 0xEuLL:
      if (v16 >> 59 != 14) {
        goto LABEL_39;
      }
LABEL_21:
      uint64_t v70 = v10;
      uint64_t v71 = v11;
      uint64_t v148 = v5;
      uint64_t v72 = v13;
      uint64_t v73 = v4;
      uint64_t v74 = v12;
      uint64_t v75 = v7;
      uint64_t v76 = v6;
      sub_1BFF95098(v10, v71, v72, v74, v15, v14, v16);
      sub_1BFF95098(v156, v3, v148, v73, v75, v76, v9);
      char v19 = sub_1C085A638(v156, v70);
      goto LABEL_38;
    case 0xFuLL:
      if (v16 >> 59 != 15) {
        goto LABEL_39;
      }
      uint64_t v105 = v10;
      uint64_t v106 = v11;
      uint64_t v153 = v5;
      uint64_t v107 = v13;
      uint64_t v108 = v4;
      uint64_t v109 = v12;
      uint64_t v110 = v7;
      uint64_t v111 = v6;
      sub_1BFF95098(v10, v106, v107, v109, v15, v14, v16);
      sub_1BFF95098(v156, v3, v153, v108, v110, v111, v9);
      char v19 = _s8NewsFeed27FormatProgressViewNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v105);
      goto LABEL_38;
    case 0x10uLL:
      if (v16 >> 59 != 16) {
        goto LABEL_39;
      }
      v160[0] = v2;
      v160[1] = v3;
      v160[2] = v5;
      v160[3] = v4;
      v160[4] = v7;
      v160[5] = v6;
      __int16 v161 = v9;
      uint64_t v162 = v8;
      v157[0] = v10;
      v157[1] = v11;
      v157[2] = v13;
      v157[3] = v12;
      v157[4] = v15;
      v157[5] = v14;
      __int16 v158 = v16;
      uint64_t v159 = v17;
      uint64_t v129 = v10;
      uint64_t v138 = v6;
      uint64_t v154 = v5;
      uint64_t v132 = v4;
      uint64_t v135 = v7;
      sub_1BFF95098(v10, v11, v13, v12, v15, v14, v16);
      sub_1BFF95098(v156, v3, v154, v132, v135, v138, v9);
      sub_1BFF95098(v129, v11, v13, v12, v15, v14, v16);
      sub_1BFF95098(v156, v3, v154, v132, v135, v138, v9);
      char v112 = _s8NewsFeed26FormatPuzzleEmbedNodeStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v160, (uint64_t)v157);
      sub_1C0AB90D8(v163);
      sub_1BFF94FE4(v129, v11, v13, v12, v15, v14, v16);
      sub_1BFF94FE4(v156, v3, v154, v132, v135, v138, v9);
      return v112 & 1;
    case 0x11uLL:
      if (v16 >> 59 != 17) {
        goto LABEL_39;
      }
      uint64_t v113 = v10;
      uint64_t v114 = v11;
      uint64_t v155 = v5;
      uint64_t v115 = v13;
      uint64_t v116 = v4;
      uint64_t v117 = v12;
      uint64_t v118 = v7;
      uint64_t v119 = v6;
      sub_1BFF95098(v10, v114, v115, v117, v15, v14, v16);
      sub_1BFF95098(v156, v3, v155, v116, v118, v119, v9);
      char v19 = _s8NewsFeed30FormatSponsoredBannerNodeStyleC2eeoiySbAC_ACtFZ_0(v156, v113);
      goto LABEL_38;
    default:
      if (v16 >> 59)
      {
LABEL_39:
        uint64_t v122 = v11;
        uint64_t v123 = v5;
        uint64_t v124 = v13;
        uint64_t v125 = v4;
        uint64_t v126 = v12;
        uint64_t v127 = v7;
        uint64_t v128 = v6;
        sub_1BFF95098(v10, v122, v124, v126, v15, v14, v16);
        sub_1BFF95098(v156, v3, v123, v125, v127, v128, v9);
        sub_1C0AB90D8(v163);
        char v112 = 0;
        return v112 & 1;
      }
      else
      {
        uint64_t v18 = v10;
        uint64_t v130 = v4;
        uint64_t v133 = v7;
        uint64_t v136 = v6;
        uint64_t v139 = v5;
        type metadata accessor for FormatViewNodeStyle();
        sub_1BFF95098(v18, v11, v13, v12, v15, v14, v16);
        sub_1BFF95098(v156, v3, v139, v130, v133, v136, v9);
        char v19 = static FormatViewNodeStyle.== infix(_:_:)(v156, v18);
LABEL_38:
        char v120 = v19;
        sub_1C0AB90D8(v163);
        return v120 & 1;
      }
  }
}

unint64_t sub_1C0AB8D34(uint64_t a1)
{
  unint64_t result = sub_1C0AB8D5C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AB8D5C()
{
  unint64_t result = qword_1EA1A31B0;
  if (!qword_1EA1A31B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A31B0);
  }
  return result;
}

unint64_t sub_1C0AB8DB0(void *a1)
{
  a1[1] = sub_1BFF95748();
  a1[2] = sub_1C00800EC();
  unint64_t result = sub_1C0AB8DE8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0AB8DE8()
{
  unint64_t result = qword_1EA1A31B8;
  if (!qword_1EA1A31B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A31B8);
  }
  return result;
}

unint64_t sub_1C0AB8E3C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1BFF95748();
  unint64_t result = sub_1C00800EC();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t *assignWithCopy for FormatNodeStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  sub_1BFF95098(*a2, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  uint64_t v16 = a1[5];
  unint64_t v17 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_1BFF94FE4(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

uint64_t *assignWithTake for FormatNodeStyle(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  unint64_t v9 = a1[6];
  long long v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  long long v11 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v11;
  sub_1BFF94FE4(v3, v5, v4, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1C0AB8F58(uint64_t a1)
{
  return *(void *)(a1 + 48) >> 59;
}

uint64_t sub_1C0AB8F64(uint64_t result)
{
  *(void *)(result + 48) &= 0x7FFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1C0AB8F74(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = *(unsigned __int16 *)(result + 48) | (unint64_t)(a2 << 59);
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeStyle()
{
  return &type metadata for FormatNodeStyle;
}

ValueMetadata *type metadata accessor for FormatNodeStyle.CodingType()
{
  return &type metadata for FormatNodeStyle.CodingType;
}

unint64_t sub_1C0AB8FD0()
{
  unint64_t result = qword_1EA1A31C0;
  if (!qword_1EA1A31C0)
  {
    sub_1C0AB9028();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A31C0);
  }
  return result;
}

void sub_1C0AB9028()
{
  if (!qword_1EA1A31C8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A31C8);
    }
  }
}

unint64_t sub_1C0AB9084()
{
  unint64_t result = qword_1EA1A31D0;
  if (!qword_1EA1A31D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A31D0);
  }
  return result;
}

uint64_t *sub_1C0AB90D8(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  unint64_t v8 = a1[14];
  sub_1BFF94FE4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_1BFF94FE4(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t ProcessedImageRequestType.isDownloaded.getter()
{
  uint64_t v0 = sub_1C151BD7C();
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v0 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v0 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_5:
    sub_1BFC66384(*(void *)(v1 + 56) + 40 * v10, (uint64_t)v17);
    sub_1BFC773DC(v17, (uint64_t)v16);
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1C151A71C();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if (!v12)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v13 >= v6) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v13);
  ++v8;
  if (v14) {
    goto LABEL_24;
  }
  int64_t v8 = v13 + 1;
  if (v13 + 1 >= v6) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v8);
  if (v14) {
    goto LABEL_24;
  }
  int64_t v8 = v13 + 2;
  if (v13 + 2 >= v6) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v8);
  if (v14) {
    goto LABEL_24;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v6) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v8);
  if (v14) {
    goto LABEL_24;
  }
  int64_t v8 = v13 + 4;
  if (v13 + 4 >= v6) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v8);
  if (v14)
  {
LABEL_24:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
    goto LABEL_5;
  }
  int64_t v15 = v13 + 5;
  if (v15 >= v6)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for A6_V2()
{
  return &type metadata for A6_V2;
}

uint64_t sub_1C0AB9360(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0ABCA54(0, &qword_1EA1A3268, (uint64_t (*)(void))sub_1C0ABCA00, (uint64_t)&type metadata for A6_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0ABCA00();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0ABC3D0(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0AB95A8(uint64_t a1)
{
  unint64_t v2 = sub_1C0ABCA00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0AB95E4(uint64_t a1)
{
  unint64_t v2 = sub_1C0ABCA00();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0AB9620@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0ABC750(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0AB9668(void *a1)
{
  return sub_1C0AB9360(a1);
}

uint64_t sub_1C0AB9680()
{
  sub_1C0ABC494();
  return sub_1C151798C();
}

uint64_t sub_1C0AB96FC@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0ABCA54(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0AB97B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v46 = a3;
  uint64_t v49 = sub_1C151635C();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v69 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  unint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v57 = a1;
  sub_1BFF1AFA4(a1, v50, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v53 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v47 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  uint64_t v67 = &type metadata for A6_V2;
  unint64_t v20 = sub_1BFEB14BC();
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v22;
  uint64_t v63 = 95;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 45;
  unint64_t v62 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v47;
  *uint64_t v26 = v48;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v65, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v29, 0, 1, v56);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  sub_1BFFFC630(v17, v18);
  uint64_t v67 = &type metadata for A6_V2;
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  sub_1BFF1AFA4(v54, v69, (uint64_t (*)(void))v53);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 4;
  sub_1C001930C(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v32 = (void *)(v31 + 16);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1C002F078;
  *(void *)(v33 + 24) = v30;
  swift_beginAccess();
  uint64_t v34 = *(void **)(v31 + 16);
  sub_1BFFFC7A0(v17, v18);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v31 + 16) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v34 = sub_1BFFB83AC(0, v34[2] + 1, 1, v34);
    *uint64_t v32 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v34 = sub_1BFFB83AC((void *)(v36 > 1), v37 + 1, 1, v34);
    *uint64_t v32 = v34;
  }
  void v34[2] = v37 + 1;
  uint64_t v38 = &v34[2 * v37];
  v38[4] = sub_1C002EF5C;
  v38[5] = v33;
  swift_endAccess();
  swift_release();
  uint64_t v39 = v58;
  uint64_t v40 = sub_1C001EE20(1, 6, 0, 0, v31, 0, 0, 0, 0);
  if (v39)
  {
    sub_1BFF1F104(v69, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  }
  else
  {
    uint64_t v42 = v40;
    swift_release();
    uint64_t v43 = type metadata accessor for A6_V2.Bound();
    uint64_t v44 = v46;
    v46[3] = v43;
    v44[4] = sub_1C0ABC3D0(&qword_1EA1A31D8, (void (*)(uint64_t))type metadata accessor for A6_V2.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v65, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v69, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

uint64_t sub_1C0AB9E80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v26 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  long long v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A6_V2.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v33);
  sub_1BFC66384(v9 + 56, (uint64_t)v32);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v33, inited + 16);
  sub_1BFC773DC(v32, inited + 56);
  *(double *)(inited + 96) = v11;
  v31[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v31, v37);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  v29[2] = v2;
  _OWORD v29[3] = v37;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C0ABC418, (uint64_t)v29, v13, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  uint64_t v15 = *MEMORY[0x1E4FAB6D8];
  uint64_t v16 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v26);
  uint64_t v28 = v14;
  sub_1C0ABC54C(0, &qword_1EA1A31F8, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v26 = sub_1C1517BEC();
  uint64_t v17 = sub_1C1517BFC();
  long long v25 = v33;
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  *(void *)&long long v33 = v14;
  *(void *)&v32[0] = v36;
  MEMORY[0x1F4188790](v17);
  sub_1C001930C(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v33 = v20;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v21 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v27;
  unsigned char *v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((void *)v22 + 3) = v18;
  *((void *)v22 + 4) = v19;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  *((void *)v22 + 5) = v21;
  *((void *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1C0ABA310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0ABA3E8(uint64_t a1, uint64_t a2)
{
  sub_1C0ABCA54(0, &qword_1EA1A3210, (uint64_t (*)(void))sub_1C0ABC440, (uint64_t)&type metadata for A6_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  double v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0ABC54C(0, &qword_1EA1A3218, MEMORY[0x1E4FAB6F0]);
  sub_1C0ABC508(&qword_1EA1A3220, &qword_1EA1A3218, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C0ABA5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v63 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  unint64_t v62 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1C151794C();
  uint64_t v5 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v60 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v59);
  uint64_t v8 = (void *)((char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0ABCA54(0, &qword_1EA1A3210, (uint64_t (*)(void))sub_1C0ABC440, (uint64_t)&type metadata for A6_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (void *)((char *)v45 - v12);
  uint64_t v14 = type metadata accessor for HeadlineViewLayout.Context(0) - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = *(void *)(a2 + 16);
  if (v17)
  {
    uint64_t v18 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v19 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v58 = *(void *)(v15 + 72);
    unsigned int v20 = *MEMORY[0x1E4FAB4E8];
    unsigned int v56 = *MEMORY[0x1E4FAB940];
    unsigned int v57 = v20;
    uint64_t v55 = (void (**)(uint64_t *, void, uint64_t))(v11 + 104);
    uint64_t v21 = (void (**)(uint64_t *, uint64_t))(v11 + 8);
    unsigned int v54 = *MEMORY[0x1E4FABA28];
    unsigned int v53 = *MEMORY[0x1E4FAB8C8];
    uint64_t v52 = (void *)*MEMORY[0x1E4FB27D0];
    unsigned int v51 = *MEMORY[0x1E4FAB8F8];
    uint64_t v49 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v50 = (void (**)(char *, void, uint64_t, __n128))(v3 + 104);
    v45[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v22 = (uint64_t)v18;
    uint64_t v47 = v21;
    uint64_t v48 = v18;
    uint64_t v46 = v10;
    do
    {
      uint64_t v67 = v17;
      sub_1BFF1AFA4(v19, v22, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v23 = v64;
      uint64_t v68 = v64;
      uint64_t v24 = sub_1C151729C();
      uint64_t v25 = swift_allocBox();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, v57, v24);
      *uint64_t v13 = v25;
      uint64_t v27 = *v55;
      (*v55)(v13, v56, v10);
      uint64_t v28 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0ABC54C(0, &qword_1EA1A3228, MEMORY[0x1E4FAB4D0]);
      uint64_t v30 = v29;
      uint64_t v65 = sub_1C0ABC508(&qword_1EA1A3230, &qword_1EA1A3228, v28);
      uint64_t v66 = v30;
      sub_1C151738C();
      uint64_t v31 = *v21;
      (*v21)(v13, v10);
      uint64_t v68 = v23;
      swift_getKeyPath();
      v27(v13, v54, v10);
      uint64_t v32 = v59;
      long long v33 = (char *)v8 + *(int *)(v59 + 20);
      uint64_t v34 = sub_1C1517A7C();
      uint64_t v35 = *(void *)(v34 - 8);
      (*(void (**)(char *, void, uint64_t))(v35 + 104))(v33, v53, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v34);
      *uint64_t v8 = 0;
      *(void *)((char *)v8 + *(int *)(v32 + 24)) = 0;
      uint64_t v36 = v52;
      *(void *)((char *)v8 + *(int *)(v32 + 28)) = v52;
      uint64_t v37 = qword_1EB87CC48;
      id v38 = v36;
      if (v37 != -1) {
        swift_once();
      }
      swift_retain();
      uint64_t v39 = v60;
      sub_1C151709C();
      uint64_t v40 = swift_release();
      __n128 v41 = MEMORY[0x1F4188790](v40);
      uint64_t v42 = (uint64_t)v48;
      v45[-4] = v48;
      v45[-3] = v8;
      unint64_t v44 = (unint64_t)v39;
      (*v50)(v62, v51, v63, v41);
      sub_1C018C5C8();
      swift_allocObject();
      sub_1C1517BEC();
      (*v49)(v39, v61);
      sub_1BFF1F104((uint64_t)v8, type metadata accessor for HeadlineViewLayout.Options);
      unint64_t v44 = sub_1BFD5DED4();
      sub_1C151735C();
      swift_release();
      swift_release();
      uint64_t v10 = v46;
      uint64_t v43 = v47;
      v31(v13, v46);
      sub_1BFF1F104(v42, type metadata accessor for HeadlineViewLayout.Context);
      v19 += v58;
      uint64_t v17 = v67 - 1;
      uint64_t v22 = v42;
      uint64_t v21 = v43;
    }
    while (v67 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0ABACF8@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A6_V2.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0ABADE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0AB97B8(a1, a2, a3);
}

uint64_t sub_1C0ABAE00()
{
  return sub_1C12BC4C0();
}

uint64_t sub_1C0ABAE10()
{
  return swift_deallocObject();
}

uint64_t sub_1C0ABAE20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for A6_V2.Bound()
{
  uint64_t result = qword_1EA1A31E0;
  if (!qword_1EA1A31E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0ABAEA4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v35 = a3;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    uint64_t v34 = v25;
    uint64_t v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v34 + 40)) = *(void *)(v23 + *(int *)(v34 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    *(void *)(a1 + *(int *)(v35 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v35 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0ABB230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C0ABB574(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  __n128 v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F104((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F104(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0ABBA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  long long v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C0ABBCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F104((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F104(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0ABC148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0ABC15C);
}

uint64_t sub_1C0ABC15C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0ABC20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0ABC220);
}

void *sub_1C0ABC220(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0ABC2C8()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0ABC378(uint64_t a1)
{
  uint64_t result = sub_1C0ABC3D0(&qword_1EA1A31F0, (void (*)(uint64_t))type metadata accessor for A6_V2.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0ABC3D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0ABC418@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0ABA310(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C0ABC438(uint64_t a1)
{
  return sub_1C0ABA3E8(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0ABC440()
{
  unint64_t result = qword_1EA1A3200;
  if (!qword_1EA1A3200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3200);
  }
  return result;
}

unint64_t sub_1C0ABC494()
{
  unint64_t result = qword_1EA1A3208;
  if (!qword_1EA1A3208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3208);
  }
  return result;
}

uint64_t sub_1C0ABC4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0ABACF8(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0ABC4F0()
{
  return swift_deallocObject();
}

void sub_1C0ABC500(uint64_t a1)
{
  sub_1C0ABA5D4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0ABC508(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0ABC54C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0ABC54C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A6_V2.Layout;
    v8[1] = &type metadata for A6_V2.Layout.Attributes;
    uint64_t v8[2] = sub_1C0ABC440();
    _OWORD v8[3] = sub_1C0ABC494();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

ValueMetadata *type metadata accessor for A6_V2.Layout.Attributes()
{
  return &type metadata for A6_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A6_V2.Layout()
{
  return &type metadata for A6_V2.Layout;
}

unint64_t sub_1C0ABC5F4()
{
  unint64_t result = qword_1EA1A3238;
  if (!qword_1EA1A3238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3238);
  }
  return result;
}

unint64_t sub_1C0ABC64C()
{
  unint64_t result = qword_1EA1A3240;
  if (!qword_1EA1A3240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3240);
  }
  return result;
}

unint64_t sub_1C0ABC6A4()
{
  unint64_t result = qword_1EA1A3248;
  if (!qword_1EA1A3248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3248);
  }
  return result;
}

unint64_t sub_1C0ABC6FC()
{
  unint64_t result = qword_1EA1A3250;
  if (!qword_1EA1A3250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3250);
  }
  return result;
}

uint64_t sub_1C0ABC750@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0ABCA54(0, &qword_1EA1A3258, (uint64_t (*)(void))sub_1C0ABCA00, (uint64_t)&type metadata for A6_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0ABCA00();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0ABC3D0(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  uint64_t v10[3] = v14;
  _OWORD v10[4] = v15;
  return result;
}

unint64_t sub_1C0ABCA00()
{
  unint64_t result = qword_1EA1A3260;
  if (!qword_1EA1A3260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3260);
  }
  return result;
}

void sub_1C0ABCA54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for A6_V2.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ABCB88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A6_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for A6_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0ABCBC4()
{
  unint64_t result = qword_1EA1A3270;
  if (!qword_1EA1A3270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3270);
  }
  return result;
}

unint64_t sub_1C0ABCC1C()
{
  unint64_t result = qword_1EA1A3278;
  if (!qword_1EA1A3278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3278);
  }
  return result;
}

unint64_t sub_1C0ABCC74()
{
  unint64_t result = qword_1EA1A3280;
  if (!qword_1EA1A3280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3280);
  }
  return result;
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional __swiftcall SportsDataVisualizationResponseEmbedType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t SportsDataVisualizationResponseEmbedType.rawValue.getter()
{
  unint64_t result = 0x535F5354524F5053;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x425F5354524F5053;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0ABCE44(unsigned __int8 *a1, char *a2)
{
  return sub_1C14780B8(*a1, *a2);
}

uint64_t sub_1C0ABCE50()
{
  return sub_1C044C188();
}

uint64_t sub_1C0ABCE5C()
{
  return sub_1C0446FEC();
}

uint64_t sub_1C0ABCE64()
{
  return sub_1C044C188();
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional sub_1C0ABCE6C(Swift::String *a1)
{
  return SportsDataVisualizationResponseEmbedType.init(rawValue:)(*a1);
}

unint64_t sub_1C0ABCE78@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SportsDataVisualizationResponseEmbedType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0ABCEA0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0ABCF00()
{
  return sub_1C151EAEC();
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseEmbedType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ABD01CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseEmbedType()
{
  return &type metadata for SportsDataVisualizationResponseEmbedType;
}

unint64_t sub_1C0ABD054()
{
  unint64_t result = qword_1EA1A3288;
  if (!qword_1EA1A3288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3288);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatProgressViewData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  sub_1C00F804C(v3);
  *(void *)(a1 + 8) = v3;
  return a1;
}

uint64_t destroy for FormatProgressViewData(uint64_t a1)
{
  return sub_1C00F80E0(*(void *)(a1 + 8));
}

uint64_t assignWithCopy for FormatProgressViewData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  sub_1C00F804C(v3);
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  sub_1C00F80E0(v4);
  return a1;
}

uint64_t assignWithTake for FormatProgressViewData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1C00F80E0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatProgressViewData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 15);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 3) & 0xFFFFFFF1 | (2 * ((*(void *)(a1 + 8) >> 60) & 7))) ^ 0xF;
  if (v3 >= 0xE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatProgressViewData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(void *)unint64_t result = a2 - 15;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 1) & 7) - 8 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressViewData()
{
  return &type metadata for FormatProgressViewData;
}

uint64_t FeedUserInfo.__allocating_init(userInfo:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t FeedUserInfo.init(userInfo:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t FeedUserInfo.deinit()
{
  return v0;
}

uint64_t FeedUserInfo.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of FeedUserInfoType.layoutSelectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedUserInfoType.contextSelectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for FeedUserInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedUserInfo);
}

uint64_t dispatch thunk of FeedUserInfo.__allocating_init(userInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

id PuzzleActivityItemsConfiguration.__allocating_init(puzzle:puzzleImageShareAttributeProvider:puzzleRankProvider:puzzleDifficultyDescriptionProvider:userHasAccess:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v11 = sub_1C151804C();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    v31[1] = v13;
    id v32 = objc_allocWithZone(v5);
    sub_1BFE4DBE0();
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1540C60;
    uint64_t v14 = (objc_class *)type metadata accessor for SharingPuzzleImageActivityItemSource();
    uint64_t v15 = (char *)objc_allocWithZone(v14);
    *(void *)&v15[OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image] = 0;
    v40.receiver = v15;
    v40.super_class = v14;
    id v16 = objc_msgSendSuper2(&v40, sel_init);
    MEMORY[0x1F4188790](v16);
    v31[-2] = v17;
    v31[-1] = a1;
    sub_1C0ABDC20();
    id v18 = v16;
    sub_1C151932C();
    uint64_t v19 = (void *)sub_1C1518E7C();
    sub_1C151901C();
    swift_release();
    swift_release();

    uint64_t v20 = v33;
    *(void *)(v33 + 32) = v18;
    sub_1C0ABDC88(a3, (uint64_t)v39, &qword_1EB891A10, (unint64_t *)&unk_1EB884AB0);
    sub_1C0ABDC88(a4, (uint64_t)v38, &qword_1EB893CD0, &qword_1EB893B50);
    long long v34 = 0uLL;
    uint64_t v35 = 0;
    uint64_t v36 = 1;
    char v37 = 0;
    id v21 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleTextActivityItemSource());
    uint64_t v22 = swift_unknownObjectRetain();
    *(void *)(v20 + 40) = SharingPuzzleTextActivityItemSource.init(puzzle:puzzleRankProvider:puzzleDifficultyDescriptionProvider:shareData:)(v22, (uint64_t)v39, (uint64_t)v38, &v34);
    sub_1C0ABDC88(a2, (uint64_t)v39, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a1;
    sub_1C0ABDD40((uint64_t)v39, v23 + 24);
    v39[0] = MEMORY[0x1E4FBC860];
    sub_1BFDA5B64((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFDA5D04();
    sub_1BFDA5B64((unint64_t *)&qword_1EB879C40, (void (*)(uint64_t))sub_1BFDA5D04);
    swift_unknownObjectRetain_n();
    sub_1C151FFBC();
    sub_1C097AA34();
    swift_allocObject();
    uint64_t v24 = sub_1C1518D1C();
    id v25 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleURLActivityItemSource());
    id v26 = sub_1C0A5D630(a1, v24);
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v27 = v33;
    *(void *)(v33 + 48) = v26;
    v39[0] = v27;
    sub_1C151EBEC();
    sub_1BFC9DBE8(0, (unint64_t *)&unk_1EA1A32A0);
    size_t v28 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v32, sel_initNAWithActivityItemSources_, v28);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    id v29 = 0;
  }
  sub_1BFE4D118(a4, &qword_1EB893CD0, &qword_1EB893B50);
  sub_1BFE4D118(a3, &qword_1EB891A10, (unint64_t *)&unk_1EB884AB0);
  sub_1BFE4D118(a2, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0);
  return v29;
}

id PuzzleActivityItemsConfiguration.__allocating_init(objects:)(uint64_t a1)
{
  return sub_1C0ABD884(a1, (uint64_t)&qword_1EA19A1F0, (uint64_t)&protocolRef_NSItemProviderWriting, (void (*)(void, uint64_t, uint64_t))sub_1BFC9DBE8, (SEL *)&selRef_initWithObjects_);
}

id PuzzleActivityItemsConfiguration.init(objects:)(uint64_t a1)
{
  return sub_1C0ABD948(a1, (uint64_t)&qword_1EA19A1F0, (uint64_t)&protocolRef_NSItemProviderWriting, (void (*)(void, uint64_t, uint64_t))sub_1BFC9DBE8, (SEL *)&selRef_initWithObjects_);
}

id PuzzleActivityItemsConfiguration.__allocating_init(itemProviders:)(uint64_t a1)
{
  return sub_1C0ABD884(a1, (uint64_t)&qword_1EA1A32B0, 0x1E4F28D78, (void (*)(void, uint64_t, uint64_t))sub_1BFC39268, (SEL *)&selRef_initWithItemProviders_);
}

id sub_1C0ABD884(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), SEL *a5)
{
  id v10 = objc_allocWithZone(v5);
  a4(0, a2, a3);
  uint64_t v11 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, *a5, v11);

  return v12;
}

id PuzzleActivityItemsConfiguration.init(itemProviders:)(uint64_t a1)
{
  return sub_1C0ABD948(a1, (uint64_t)&qword_1EA1A32B0, 0x1E4F28D78, (void (*)(void, uint64_t, uint64_t))sub_1BFC39268, (SEL *)&selRef_initWithItemProviders_);
}

id sub_1C0ABD948(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), SEL *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a4(0, a2, a3);
  uint64_t v11 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v14.receiver = v5;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, *a5, v11);

  return v12;
}

id sub_1C0ABDA20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t, uint64_t), SEL *a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a6(0, a4, a5);
  sub_1C151EBCC();
  uint64_t v13 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v16.receiver = a1;
  v16.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v16, *a7, v13);

  return v14;
}

id PuzzleActivityItemsConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0ABDB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1C0ABDC88(a2, (uint64_t)v10, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0);
  uint64_t v5 = (objc_class *)type metadata accessor for PuzzleLinkPresentationSource();
  unsigned int v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzle] = a1;
  sub_1C0ABDC88((uint64_t)v10, (uint64_t)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider], &qword_1EB881460, (unint64_t *)&qword_1EB884BD0);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_unknownObjectRetain();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  uint64_t result = sub_1BFE4D118((uint64_t)v10, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0);
  *a3 = v7;
  return result;
}

uint64_t sub_1C0ABDC04()
{
  return sub_1C0ED8ED0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1C0ABDC20()
{
  if (!qword_1EA1A3298)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A300);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3298);
    }
  }
}

uint64_t sub_1C0ABDC88(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1BFE4D1E4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0ABDCF8()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0ABDD40(uint64_t a1, uint64_t a2)
{
  sub_1BFE4D1E4(0, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0ABDDBC@<X0>(void *a1@<X8>)
{
  return sub_1C0ABDB10(*(void *)(v1 + 16), v1 + 24, a1);
}

uint64_t type metadata accessor for PuzzleActivityItemsConfiguration()
{
  return self;
}

double FormatLayoutModel.frame.getter()
{
  *(void *)&double result = FeedItemLayoutAttributes.frame.getter().n128_u64[0];
  return result;
}

uint64_t FormatLayoutModel.resizingIdentifier.getter()
{
  return sub_1C0ABDF40(FeedItemLayoutAttributes.resizingIdentifier.getter);
}

uint64_t FormatLayoutModel.resizingGroupIdentifier.getter()
{
  return sub_1C0ABDF40(FeedItemLayoutAttributes.resizingGroupIdentifier.getter);
}

uint64_t FormatLayoutModel.layoutData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  a1[3] = &type metadata for FeedItemLayoutAttributes;
  *a1 = v2;
  return swift_retain();
}

double sub_1C0ABDE6C()
{
  *(void *)&double result = FeedItemLayoutAttributes.frame.getter().n128_u64[0];
  return result;
}

uint64_t sub_1C0ABDEA0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  a1[3] = &type metadata for FeedItemLayoutAttributes;
  *a1 = v2;
  return swift_retain();
}

uint64_t sub_1C0ABDEBC(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABDF90(a1, a2, FeedItemLayoutAttributes.resizingIdentifier.getter);
}

uint64_t sub_1C0ABDED4(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABDF90(a1, a2, FeedItemLayoutAttributes.resizingGroupIdentifier.getter);
}

uint64_t sub_1C0ABDEEC(uint64_t a1)
{
  unint64_t v2 = sub_1C0ABE6B4();
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t FormatLayoutModel.identifier.getter()
{
  return sub_1C0ABDF40(FeedItemLayoutAttributes.identifier.getter);
}

uint64_t sub_1C0ABDF40(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C0ABDF78(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABDF90(a1, a2, FeedItemLayoutAttributes.identifier.getter);
}

uint64_t sub_1C0ABDF90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t FormatLayoutModel.visualRankValue.getter()
{
  return sub_1C0ABE4D0((uint64_t (*)(void))FeedItemLayoutAttributes.visualRankValue.getter);
}

uint64_t sub_1C0ABDFE0(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABE524(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.visualRankValue.getter);
}

uint64_t FormatLayoutModel.dragBackgroundColor.getter()
{
  return sub_1C0ABE3C8(FeedItemLayoutAttributes.dragBackgroundColor.getter);
}

uint64_t FormatLayoutModel.dragPreviewClipping.getter()
{
  return sub_1C0ABE4D0((uint64_t (*)(void))FeedItemLayoutAttributes.dragPreviewClipping.getter);
}

uint64_t sub_1C0ABE028(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABE418(a1, a2, FeedItemLayoutAttributes.dragBackgroundColor.getter);
}

uint64_t sub_1C0ABE040(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABE524(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.dragPreviewClipping.getter);
}

uint64_t FormatLayoutModel.contextMenuItemOptions.getter()
{
  return sub_1C0ABE3C8(FeedItemLayoutAttributes.contextMenuItemOptions.getter);
}

uint64_t sub_1C0ABE070(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABE418(a1, a2, FeedItemLayoutAttributes.contextMenuItemOptions.getter);
}

void FormatLayoutModel.adFrame.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 60 == 3)
  {
    sub_1BFE29A3C();
    uint64_t v7 = v6;
    uint64_t v8 = swift_projectBox();
    sub_1C0ABE1A4(v8 + *(int *)(v7 + 48), (uint64_t)v5);
    swift_retain();
    sub_1C151DA1C();
    uint64_t v9 = v14[1];
    uint64_t v10 = v14[2];
    uint64_t v11 = v14[3];
    uint64_t v12 = v14[4];
    char v13 = v15;
    sub_1C0ABE208((uint64_t)v5);
    swift_release();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 1;
  }
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v13;
}

uint64_t sub_1C0ABE1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0ABE208(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatLayoutModel.prerollPlacements.getter()
{
  return sub_1C0ABE3C8((uint64_t (*)(void))FeedItemLayoutAttributes.prerollPlacements.getter);
}

void sub_1C0ABE27C(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 60 == 3)
  {
    sub_1BFE29A3C();
    uint64_t v7 = v6;
    uint64_t v8 = swift_projectBox();
    sub_1C0ABE1A4(v8 + *(int *)(v7 + 48), (uint64_t)v5);
    swift_retain();
    sub_1C151DA1C();
    uint64_t v9 = v14[1];
    uint64_t v10 = v14[2];
    uint64_t v11 = v14[3];
    uint64_t v12 = v14[4];
    char v13 = v15;
    sub_1C0ABE208((uint64_t)v5);
    swift_release();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 1;
  }
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v13;
}

uint64_t sub_1C0ABE398(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABE418(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.prerollPlacements.getter);
}

uint64_t FormatLayoutModel.groupLayoutKey.getter()
{
  return sub_1C0ABE3C8(FeedItemLayoutAttributes.groupLayoutKey.getter);
}

uint64_t sub_1C0ABE3C8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C0ABE400(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABE418(a1, a2, FeedItemLayoutAttributes.groupLayoutKey.getter);
}

uint64_t sub_1C0ABE418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t FormatLayoutModel.formatImageRequests(options:)(uint64_t a1)
{
  return FeedItemLayoutAttributes.formatImageRequests(options:)(a1);
}

uint64_t sub_1C0ABE484(uint64_t a1)
{
  return FeedItemLayoutAttributes.formatImageRequests(options:)(a1);
}

uint64_t FormatLayoutModel.layoutSelectionStyle.getter()
{
  return sub_1C0ABE4D0((uint64_t (*)(void))FeedItemLayoutAttributes.layoutSelectionStyle.getter);
}

uint64_t sub_1C0ABE4D0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C0ABE50C(uint64_t a1, uint64_t a2)
{
  return sub_1C0ABE524(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.layoutSelectionStyle.getter);
}

uint64_t sub_1C0ABE524(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t destroy for FormatLayoutModel()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed17FormatLayoutModelOwCP_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatLayoutModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatLayoutModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayoutModel()
{
  return &type metadata for FormatLayoutModel;
}

unint64_t sub_1C0ABE6B4()
{
  unint64_t result = qword_1EB865EC0;
  if (!qword_1EB865EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865EC0);
  }
  return result;
}

id FormatFixedColor.color.getter()
{
  id v1 = objc_msgSend(self, *off_1E6416C20[*v0]);
  return v1;
}

unint64_t sub_1C0ABE794()
{
  unint64_t result = qword_1EB86C560;
  if (!qword_1EB86C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C560);
  }
  return result;
}

uint64_t sub_1C0ABE7E8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0ABE850()
{
  FormatFixedColor.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0ABE8B4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0ABE918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatFixedColor.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C0ABE940(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0ABE970();
  unint64_t result = sub_1BFC3A144();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0ABE970()
{
  unint64_t result = qword_1EA1A32B8;
  if (!qword_1EA1A32B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A32B8);
  }
  return result;
}

uint64_t sub_1C0ABE9C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148E744(*a1, *a2);
}

unint64_t sub_1C0ABE9D0(uint64_t a1)
{
  unint64_t result = sub_1C087B344();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0ABE9F8(void *a1)
{
  a1[1] = sub_1BFC7D338();
  a1[2] = sub_1C007E97C();
  unint64_t result = sub_1C0ABE794();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatFixedColor()
{
  return &type metadata for FormatFixedColor;
}

BOOL static FormatFocusPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatFocusPosition.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatFocusPosition.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0ABEAF0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatFocusPosition.init(from:)(a1, a2);
}

uint64_t sub_1C0ABEB08(void *a1)
{
  return FormatFocusPosition.encode(to:)(a1);
}

uint64_t FormatFocusPosition.description.getter()
{
  uint64_t v1 = 0x6564697374754FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656469736E49;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6974616D6F747541;
  }
}

unint64_t sub_1C0ABEB80()
{
  unint64_t result = qword_1EA1A32C0;
  if (!qword_1EA1A32C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A32C0);
  }
  return result;
}

unint64_t sub_1C0ABEBD4(uint64_t a1)
{
  unint64_t result = sub_1C0ABEBFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0ABEBFC()
{
  unint64_t result = qword_1EA1A32C8;
  if (!qword_1EA1A32C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A32C8);
  }
  return result;
}

unint64_t sub_1C0ABEC50(void *a1)
{
  a1[1] = sub_1C0884CC4();
  a1[2] = sub_1C08FBC00();
  unint64_t result = sub_1C0ABEB80();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0ABEC88()
{
  uint64_t v1 = 0x6564697374754FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656469736E49;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6974616D6F747541;
  }
}

unsigned char *storeEnumTagSinglePayload for FormatFocusPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ABEDB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFocusPosition()
{
  return &type metadata for FormatFocusPosition;
}

ValueMetadata *type metadata accessor for G_V2()
{
  return &type metadata for G_V2;
}

uint64_t sub_1C0ABEDF8(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0AC3454(0, &qword_1EA1A3398, (uint64_t (*)(void))sub_1C0AC3340, (uint64_t)&type metadata for G_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AC3340();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0AC2620(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1C01BD088(&qword_1EA197D78, (void (*)(void))sub_1C01BD118);
    sub_1C152080C();
    *(void *)&v12[0] = *(void *)(v3 + 40);
    char v13 = 2;
    sub_1C0AC2894(0, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
    sub_1C0AC3394(&qword_1EA1A33A0, &qword_1EA197288);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0ABF104()
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (*v0 != 1) {
    unint64_t v1 = 0x6F74617261706573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_1C0ABF16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0AC36C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0ABF194(uint64_t a1)
{
  unint64_t v2 = sub_1C0AC3340();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0ABF1D0(uint64_t a1)
{
  unint64_t v2 = sub_1C0AC3340();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0ABF20C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0AC2F74(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C0ABF250(void *a1)
{
  return sub_1C0ABEDF8(a1);
}

uint64_t sub_1C0ABF268()
{
  sub_1C0AC26E8();
  return sub_1C151798C();
}

uint64_t sub_1C0ABF2E4@<X0>(uint64_t *a1@<X8>)
{
  sub_1C0AC2ED8(0, (unint64_t *)&qword_1EB871268, MEMORY[0x1E4FAB4F0]);
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0AC3454(0, &qword_1EB85C818, (uint64_t (*)(void))sub_1C01BC9AC, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t v3 = sub_1C151775C();
  sub_1C0AC2B44(0);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_1C0ABF3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v45 = a1;
  uint64_t v46 = a3;
  unint64_t v39 = sub_1C151635C();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for GroupLayoutContext();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  long long v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  char v12 = *v3;
  int v40 = *v3;
  char v13 = (void *)*((void *)v3 + 1);
  unsigned __int8 v14 = v3[16];
  uint64_t v36 = type metadata accessor for GroupLayoutBindingContext;
  uint64_t v15 = a1;
  objc_super v16 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1B00C(v15, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  char v37 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1B00C(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v13, v14);
  sub_1C151634C();
  uint64_t v35 = sub_1C151633C();
  uint64_t v34 = v17;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v39);
  unsigned int v56 = &type metadata for G_V2;
  unint64_t v39 = sub_1C0185F48();
  unint64_t v57 = v39;
  v53[0] = v12;
  unsigned int v54 = v13;
  unsigned __int8 v55 = v14;
  type metadata accessor for GroupLayoutKey();
  uint64_t v18 = swift_allocObject();
  sub_1BFFFC7A0(v13, v14);
  uint64_t v51 = sub_1C1520FAC();
  uint64_t v52 = v19;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 45;
  unint64_t v48 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v20 = sub_1C151FEBC();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 16) = v20;
  *(void *)(v18 + 24) = v22;
  uint64_t v23 = (uint64_t *)(v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v24 = v34;
  *uint64_t v23 = v35;
  v23[1] = v24;
  sub_1BFC66384((uint64_t)v53, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v25 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v16, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))v36);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v25, 0, 1, v41);
  uint64_t v26 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  uint64_t v27 = v37;
  sub_1BFF2389C((uint64_t)v10, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))v37);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v26, 0, 1, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFFFC630(v13, v14);
  uint64_t v28 = type metadata accessor for G_V2.Bound();
  id v29 = v46;
  v46[3] = v28;
  void v29[4] = sub_1C0AC2620(&qword_1EA1A32E0, (void (*)(uint64_t))type metadata accessor for G_V2.Bound);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  unint64_t v31 = v39;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for G_V2;
  boxed_opaque_existential_0[5] = v31;
  *((unsigned char *)boxed_opaque_existential_0 + 8) = v40;
  boxed_opaque_existential_0[2] = (uint64_t)v13;
  *((unsigned char *)boxed_opaque_existential_0 + 24) = v14;
  sub_1BFF1B00C(v43, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(void))v27);
  sub_1BFFFC7A0(v13, v14);
  uint64_t result = sub_1C0F52E00(0, 0, 0, 0, 0);
  uint64_t *boxed_opaque_existential_0 = v18;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

uint64_t sub_1C0ABF89C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for G_V2.Bound();
  uint64_t v8 = *(void *)(v2 + *(int *)(v7 + 28));
  uint64_t v30 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0183444((void (*)(void *__return_ptr, _OWORD *))sub_1C0AC2668, (uint64_t)v29, v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + *(int *)(v7 + 24);
  uint64_t v11 = *(void *)(v10 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 24);
  uint64_t v12 = *MEMORY[0x1E4FAB6D8];
  uint64_t v13 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v6, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAB8F0], v3);
  uint64_t v26 = v9;
  uint64_t v27 = v2;
  uint64_t v28 = v11;
  sub_1C0AC2AC0(0, &qword_1EA1A3300, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v24 = sub_1C1517BEC();
  uint64_t v14 = sub_1C1517BFC();
  v22[1] = v22;
  long long v36 = v33;
  long long v37 = v34;
  long long v35 = v32;
  long long v23 = v32;
  long long v15 = v33;
  uint64_t v38 = v34;
  uint64_t v31 = v34;
  *(void *)&long long v32 = v9;
  MEMORY[0x1F4188790](v14);
  objc_super v16 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C01BCA00(0, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, v16);
  sub_1BFEB35D0(&qword_1EB85DF20, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
  sub_1BFEB35D0(&qword_1EB85DF08, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v32 = v17;
  sub_1C01BCA00(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v16);
  sub_1BFEB35D0((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  sub_1BFEB0FD4();
  uint64_t v18 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  sub_1BFCA59C8((uint64_t)&v38);
  uint64_t v19 = v25;
  *uint64_t v25 = 0;
  *(_OWORD *)(v19 + 8) = v23;
  *(_OWORD *)(v19 + 24) = v15;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  *((void *)v19 + 5) = v18;
  *((void *)v19 + 6) = v20;
  *(void *)&long long v32 = *((void *)&v37 + 1);
  sub_1BFCA59C8((uint64_t)&v32);
  return swift_release();
}

uint64_t sub_1C0ABFD0C@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[5];
  long long v6 = a1[7];
  long long v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  long long v7 = a1[1];
  long long v8 = a1[3];
  long long v28 = a1[2];
  long long v29 = v8;
  long long v9 = a1[3];
  long long v10 = a1[5];
  long long v30 = a1[4];
  long long v31 = v10;
  long long v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  long long v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  uint64_t v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1C01B3C58(v34);
  sub_1C0AC29D8((uint64_t)v34, (uint64_t)v24, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C01BCA00);
  uint64_t v14 = (char *)a2 + *(int *)(type metadata accessor for G_V2.Bound() + 24);
  uint64_t v15 = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(*(void *)&v14[*(int *)(v15 + 40)] + 16);
  double v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BFC66384(v16 + 16, (uint64_t)v22);
  sub_1BFC66384(v16 + 56, (uint64_t)v21);
  double v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v22, inited + 16);
  sub_1BFC773DC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1C0187FB0((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

uint64_t sub_1C0ABFED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0AC3454(0, &qword_1EA1A3318, (uint64_t (*)(void))sub_1C0AC2694, (uint64_t)&type metadata for G_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = &v21[-v12];
  uint64_t v25 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v10 + 104))(&v21[-v12], *MEMORY[0x1E4FABA28], v9, v11);
  sub_1C0AC28F8();
  sub_1C0AC3454(0, &qword_1EA1A3328, (uint64_t (*)(void))sub_1C0AC2694, (uint64_t)&type metadata for G_V2.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E4FAB638], v15);
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0AC2AC0(0, &qword_1EA1A3330, MEMORY[0x1E4FAB6F0]);
  sub_1C0AC2994(&qword_1EA1A3338, &qword_1EA1A3330, v19);
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1C0AC019C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v95 = a4;
  uint64_t v104 = a3;
  uint64_t v113 = a1;
  sub_1C0AC3454(0, &qword_1EA1A3318, (uint64_t (*)(void))sub_1C0AC2694, (uint64_t)&type metadata for G_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v112 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v108 = (void *)((char *)v73 - v7);
  uint64_t v88 = sub_1C1517A9C();
  MEMORY[0x1F4188790](v88);
  uint64_t v87 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void *)(a2 + 16);
  uint64_t v80 = a2 + 32;
  unsigned int v85 = *MEMORY[0x1E4FAB8F8];
  uint64_t v78 = &v118[1];
  uint64_t v79 = &v117;
  uint64_t v94 = &v120;
  uint64_t v84 = (void (**)(char *, void, uint64_t, __n128))(v10 + 104);
  unsigned int v93 = *MEMORY[0x1E4FAB7B0];
  unsigned int v92 = *MEMORY[0x1E4FAB9E8];
  uint64_t v109 = (void (**)(uint64_t *, void, uint64_t))(v6 + 104);
  unsigned int v91 = *MEMORY[0x1E4FAB5E8];
  unsigned int v90 = *MEMORY[0x1E4FAB620];
  uint64_t v111 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
  unint64_t v77 = v9 - 1;
  unsigned int v82 = *MEMORY[0x1E4FAB4E0];
  unsigned int v81 = *MEMORY[0x1E4FAB940];
  unsigned int v83 = *MEMORY[0x1E4FABA00];
  unsigned int v76 = *MEMORY[0x1E4FAB560];
  unsigned int v75 = *MEMORY[0x1E4FAB548];
  v73[1] = a2;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v12 = 0;
  long long v89 = xmmword_1C1529AE0;
  long long v74 = xmmword_1C1527210;
  unint64_t v86 = v9;
  while (1)
  {
    if (v12 == v9)
    {
      unint64_t v19 = v9;
      memset(v118, 0, 400);
      goto LABEL_8;
    }
    if (v12 >= v9) {
      break;
    }
    uint64_t v20 = v79;
    sub_1C01BC5C8(v80 + 392 * v12, (uint64_t)v79);
    v118[0] = v12;
    memcpy(v78, v20, 0x188uLL);
    unint64_t v19 = v12 + 1;
LABEL_8:
    sub_1C0AC29D8((uint64_t)v118, (uint64_t)&v119, (uint64_t)&unk_1EA1A3340, (uint64_t)sub_1C0AC2A4C, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C0AC2894);
    if (!v120) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v21 = v119;
    memcpy(v118, v94, 0x188uLL);
    char v22 = v118[7];
    uint64_t v23 = type metadata accessor for G_V2.Bound();
    uint64_t v24 = v104 + *(int *)(v23 + 24);
    uint64_t v25 = type metadata accessor for GroupLayoutContext();
    uint64_t v26 = *(void *)(*(void *)(v24 + *(int *)(v25 + 40)) + 24);
    uint64_t v105 = v21;
    unint64_t v106 = v19;
    uint64_t v102 = v23;
    __n128 v28 = MEMORY[0x1F4188790](v25);
    if ((v22 & 0x10) != 0)
    {
      v73[-4] = v118;
      v73[-3] = v26;
      uint64_t v71 = v27;
    }
    else
    {
      uint64_t v71 = v118;
      uint64_t v72 = v26;
    }
    (*v84)(v87, v85, v88, v28);
    sub_1C01BC774();
    swift_allocObject();
    swift_retain();
    uint64_t v114 = sub_1C1517BEC();
    swift_release();
    uint64_t v116 = v113;
    uint64_t KeyPath = (void (*)(uint64_t *, uint64_t))swift_getKeyPath();
    sub_1BFF35C38();
    uint64_t v30 = v29;
    uint64_t v31 = swift_allocBox();
    uint64_t v33 = v32 + *(int *)(v30 + 48);
    sub_1C151785C();
    uint64_t v34 = sub_1C151786C();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v34 - 8) + 104))(v33, v93, v34);
    long long v36 = v108;
    long long v35 = v109;
    *uint64_t v108 = v31;
    uint64_t v37 = v112;
    uint64_t v115 = *v35;
    v115(v36, v92, v112);
    sub_1C0AC28F8();
    uint64_t v39 = v38;
    sub_1C0AC3454(0, &qword_1EA1A3328, (uint64_t (*)(void))sub_1C0AC2694, (uint64_t)&type metadata for G_V2.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v41 = v40;
    uint64_t v42 = *(void *)(v40 - 8);
    uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
    uint64_t v44 = (v43 + 32) & ~v43;
    uint64_t v99 = *(void *)(v42 + 72);
    uint64_t v100 = v39;
    uint64_t v98 = v43 | 7;
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v89;
    uint64_t v96 = v44;
    uint64_t v46 = v45 + v44;
    sub_1C0AC3454(0, &qword_1EA1A3350, (uint64_t (*)(void))sub_1C0AC2694, (uint64_t)&type metadata for G_V2.Layout, MEMORY[0x1E4FAB618]);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v47 - 8) + 104))(v46, v91, v47);
    unint64_t v48 = *(void (**)(void, void, void))(v42 + 104);
    uint64_t v101 = v41;
    uint64_t v97 = v48;
    v48(v46, v90, v41);
    uint64_t v49 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0AC2AC0(0, &qword_1EA1A3358, MEMORY[0x1E4FAB4D0]);
    uint64_t v51 = v50;
    uint64_t v52 = sub_1C0AC2994(&qword_1EA1A3360, &qword_1EA1A3358, v49);
    uint64_t v71 = (void *)sub_1C01BC91C();
    uint64_t v53 = v114;
    uint64_t v110 = v52;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    unsigned int v54 = *v111;
    (*v111)(v36, v37);
    if (!v95)
    {
LABEL_2:
      uint64_t v13 = v113;
      uint64_t v116 = v113;
      swift_getKeyPath();
      uint64_t v103 = v51;
      sub_1C0AC2694();
      uint64_t v14 = v108;
      sub_1C1517C3C();
      sub_1C0AC2620(&qword_1EB85C820, sub_1C0AC2B44);
      sub_1C151737C();
      swift_release();
      uint64_t v15 = v112;
      v54(v14, v112);
      uint64_t v116 = v13;
      uint64_t v16 = sub_1C151729C();
      uint64_t v17 = swift_allocBox();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, v82, v16);
      *uint64_t v14 = v17;
      v115(v14, v81, v15);
      sub_1C151738C();
      swift_release();
      v54(v14, v15);
      goto LABEL_3;
    }
    if (v95 == 1)
    {
      if (v105 == v77) {
        goto LABEL_2;
      }
    }
    else if (!sub_1BFFC399C(v105, v95))
    {
      goto LABEL_2;
    }
    uint64_t v116 = v113;
    uint64_t v55 = v113;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = 0x4034000000000000;
    unint64_t v57 = v108;
    *uint64_t v108 = v56;
    uint64_t v114 = v53;
    uint64_t v58 = v112;
    v115(v57, v83, v112);
    sub_1C151738C();
    v54(v57, v58);
    uint64_t v116 = v55;
    uint64_t v105 = swift_getKeyPath();
    uint64_t v59 = swift_allocObject();
    uint64_t KeyPath = v54;
    uint64_t v60 = v59;
    sub_1C15176EC();
    *(double *)(v60 + 16) = 1.0 / v61;
    *unint64_t v57 = v60;
    v115(v57, v83, v58);
    uint64_t v62 = v99;
    uint64_t v63 = v96;
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v74;
    uint64_t v65 = v64 + v63;
    sub_1C15179DC();
    uint64_t v66 = v101;
    uint64_t v67 = v97;
    v97(v65, v76, v101);
    v67(v65 + v62, v75, v66);
    sub_1C0AC2620(&qword_1EB85C820, sub_1C0AC2B44);
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v68 = v112;
    uint64_t v69 = KeyPath;
    KeyPath(v57, v112);
    uint64_t v116 = v113;
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = 0x4034000000000000;
    *unint64_t v57 = v70;
    v115(v57, v83, v68);
    sub_1C151738C();
    swift_release();
    v69(v57, v68);
LABEL_3:
    uint64_t result = sub_1C01BC710((uint64_t)v118);
    unint64_t v9 = v86;
    unint64_t v12 = v106;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0AC0DC4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = swift_allocObject();
  sub_1C01BC5C8(a2, v13 + 16);
  memcpy((void *)(v13 + 408), a3, 0x180uLL);
  uint64_t v14 = a4 + *(int *)(type metadata accessor for G_V2.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(v14 + *(int *)(result + 28));
  BOOL v17 = __OFADD__(v16, a1);
  uint64_t v18 = v16 + a1;
  if (v17)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v13 + 792) = v18;
  *(void *)(v12 + 16) = v13 | 0x5000000000000000;
  sub_1C0AC2894(0, &qword_1EB87A630, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = *(void *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v21 = *(void *)(a5 + 40);
  if (*(void *)(v21 + 16) > a1)
  {
    uint64_t v22 = result;
    uint64_t v23 = v21 + 32 * a1;
    long long v24 = *(_OWORD *)(v23 + 48);
    uint64_t v25 = (_OWORD *)(result + v20);
    *uint64_t v25 = *(_OWORD *)(v23 + 32);
    v25[1] = v24;
    uint64_t result = swift_storeEnumTagMultiPayload();
    *(void *)(v12 + 24) = v22;
    *a6 = v12 | 0xB000000000000000;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C0AC0FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0ABF3E0(a1, a2, a3);
}

uint64_t sub_1C0AC0FC0()
{
  return sub_1C12BC4D8();
}

unint64_t sub_1C0AC0FD0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0AC1000();
  unint64_t result = sub_1C0AC1054();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0AC1000()
{
  unint64_t result = qword_1EA1A32D0;
  if (!qword_1EA1A32D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A32D0);
  }
  return result;
}

unint64_t sub_1C0AC1054()
{
  unint64_t result = qword_1EA1A32D8;
  if (!qword_1EA1A32D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A32D8);
  }
  return result;
}

uint64_t type metadata accessor for G_V2.Bound()
{
  uint64_t result = qword_1EA1A32E8;
  if (!qword_1EA1A32E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0AC10F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    __n128 v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v35 = a3;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    uint64_t v34 = v25;
    uint64_t v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C0AC2894(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v34 + 40)) = *(void *)(v23 + *(int *)(v34 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    *(void *)(a1 + *(int *)(v35 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v35 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0AC1480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C0AC2894(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C0AC17C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  long long v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0656968((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C0AC2894(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1C0656968(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0AC2894(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0AC1C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  long long v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C0AC2894(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C0AC1F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1C0656968((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C0AC2894(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1C0656968(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0AC2894(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0AC2398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0AC23AC);
}

uint64_t sub_1C0AC23AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0AC245C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0AC2470);
}

void *sub_1C0AC2470(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0AC2518()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0AC25C8(uint64_t a1)
{
  uint64_t result = sub_1C0AC2620(&qword_1EA1A32F8, (void (*)(uint64_t))type metadata accessor for G_V2.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0AC2620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0AC2668@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0ABFD0C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1C0AC2688(uint64_t a1)
{
  return sub_1C0ABFED8(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1C0AC2694()
{
  unint64_t result = qword_1EA1A3308;
  if (!qword_1EA1A3308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3308);
  }
  return result;
}

unint64_t sub_1C0AC26E8()
{
  unint64_t result = qword_1EA1A3310;
  if (!qword_1EA1A3310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3310);
  }
  return result;
}

uint64_t sub_1C0AC273C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, unint64_t *a4@<X8>)
{
  return sub_1C0AC0DC4(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1C0AC2744()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0AC2788()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 152) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 296) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0AC2894(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0AC28F8()
{
  if (!qword_1EA1A3320)
  {
    sub_1C0AC3454(255, &qword_1EA1A3328, (uint64_t (*)(void))sub_1C0AC2694, (uint64_t)&type metadata for G_V2.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3320);
    }
  }
}

uint64_t sub_1C0AC2988(uint64_t a1)
{
  return sub_1C0AC019C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C0AC2994(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0AC2AC0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0AC29D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_1C0AC2A4C()
{
  if (!qword_1EA1A3348)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A3348);
    }
  }
}

uint64_t sub_1C0AC2AB8(uint64_t a1)
{
  return sub_1C1273BEC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C0AC2AC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for G_V2.Layout;
    v8[1] = &type metadata for G_V2.Layout.Attributes;
    uint64_t v8[2] = sub_1C0AC2694();
    _OWORD v8[3] = sub_1C0AC26E8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0AC2B44(uint64_t a1)
{
}

uint64_t sub_1C0AC2B64()
{
  return swift_deallocObject();
}

uint64_t sub_1C0AC2B74(uint64_t a1)
{
  return sub_1C0C23658(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t destroy for G_V2.Layout.Attributes()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for G_V2.Layout.Attributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for G_V2.Layout.Attributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for G_V2.Layout.Attributes(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for G_V2.Layout.Attributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for G_V2.Layout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for G_V2.Layout.Attributes()
{
  return &type metadata for G_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for G_V2.Layout()
{
  return &type metadata for G_V2.Layout;
}

unint64_t sub_1C0AC2D7C()
{
  unint64_t result = qword_1EA1A3368;
  if (!qword_1EA1A3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3368);
  }
  return result;
}

unint64_t sub_1C0AC2DD4()
{
  unint64_t result = qword_1EA1A3370;
  if (!qword_1EA1A3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3370);
  }
  return result;
}

unint64_t sub_1C0AC2E2C()
{
  unint64_t result = qword_1EA1A3378;
  if (!qword_1EA1A3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3378);
  }
  return result;
}

unint64_t sub_1C0AC2E84()
{
  unint64_t result = qword_1EA1A3380;
  if (!qword_1EA1A3380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3380);
  }
  return result;
}

void sub_1C0AC2ED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for CGRect(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C0AC2620(&qword_1EB87A288, type metadata accessor for CGRect);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C0AC2F74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0AC3454(0, &qword_1EA1A3388, (uint64_t (*)(void))sub_1C0AC3340, (uint64_t)&type metadata for G_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v19 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AC3340();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  type metadata accessor for CGRect(0);
  char v24 = 0;
  sub_1C0AC2620(&qword_1EB87A290, type metadata accessor for CGRect);
  uint64_t v10 = v19;
  sub_1C15206EC();
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
  char v24 = 1;
  sub_1C01BD088(&qword_1EB85DF10, (void (*)(void))sub_1C01BCFCC);
  sub_1C15206EC();
  uint64_t v15 = v20;
  sub_1C0AC2894(0, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
  char v24 = 2;
  sub_1C0AC3394((unint64_t *)&unk_1EB85DF60, &qword_1EB87A290);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v16 = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = v16;
  return result;
}

unint64_t sub_1C0AC3340()
{
  unint64_t result = qword_1EA1A3390;
  if (!qword_1EA1A3390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3390);
  }
  return result;
}

uint64_t sub_1C0AC3394(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0AC2894(255, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
    sub_1C0AC2620(a2, type metadata accessor for CGRect);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0AC3454(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for G_V2.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AC3588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for G_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for G_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0AC35C4()
{
  unint64_t result = qword_1EA1A33A8;
  if (!qword_1EA1A33A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33A8);
  }
  return result;
}

unint64_t sub_1C0AC361C()
{
  unint64_t result = qword_1EA1A33B0;
  if (!qword_1EA1A33B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33B0);
  }
  return result;
}

unint64_t sub_1C0AC3674()
{
  unint64_t result = qword_1EA1A33B8;
  if (!qword_1EA1A33B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33B8);
  }
  return result;
}

uint64_t sub_1C0AC36C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C1606560 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F74617261706573 && a2 == 0xEF73656D61724672)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C0AC3834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + *(int *)(type metadata accessor for FeedWebEmbed() + 52);
  uint64_t v12 = (uint64_t (*)(void))sub_1BFECFC20;
  sub_1C0AC3DFC(v11, (uint64_t)v10, (uint64_t (*)(void))sub_1BFECFC20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    goto LABEL_4;
  }
  sub_1C0AC3DFC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
    sub_1C0AC3E64((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_4:
    sub_1C0AC3E64((uint64_t)v10, v12);
    type metadata accessor for FormatAction();
    return swift_storeEnumTagMultiPayload();
  }
  unint64_t v14 = *v7;
  sub_1C0AC3E64((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  switch(v14 >> 61)
  {
    case 1uLL:
      uint64_t v16 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)a2 = v16;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_WORD *)(a2 + 40) = 1536;
      *(void *)(a2 + 48) = MEMORY[0x1E4FBC870];
      *(void *)(a2 + 56) = v16;
      char v17 = 64;
      goto LABEL_13;
    case 2uLL:
      uint64_t v18 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)a2 = v18;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_WORD *)(a2 + 40) = 1792;
      *(void *)(a2 + 48) = MEMORY[0x1E4FBC870];
      *(void *)(a2 + 56) = v18;
      char v17 = 80;
      goto LABEL_13;
    case 3uLL:
      uint64_t v19 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)a2 = v19;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_WORD *)(a2 + 40) = 2048;
      *(void *)(a2 + 48) = MEMORY[0x1E4FBC870];
      *(void *)(a2 + 56) = v19;
      char v17 = 96;
      goto LABEL_13;
    case 4uLL:
      uint64_t v20 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)a2 = v20;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_WORD *)(a2 + 40) = 2304;
      *(void *)(a2 + 48) = MEMORY[0x1E4FBC870];
      *(void *)(a2 + 56) = v20;
      char v17 = 112;
      goto LABEL_13;
    case 5uLL:
      uint64_t v21 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)a2 = v21;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_WORD *)(a2 + 40) = 2560;
      *(void *)(a2 + 48) = MEMORY[0x1E4FBC870];
      *(void *)(a2 + 56) = v21;
      char v17 = 0x80;
      goto LABEL_13;
    case 6uLL:
      uint64_t v22 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)a2 = v22;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_WORD *)(a2 + 40) = 2816;
      *(void *)(a2 + 48) = MEMORY[0x1E4FBC870];
      *(void *)(a2 + 56) = v22;
      char v17 = -112;
LABEL_13:
      *(unsigned char *)(a2 + 64) = v17;
      type metadata accessor for FormatAction();
      swift_storeEnumTagMultiPayload();
      swift_retain_n();
      break;
    default:
      uint64_t v15 = *(void *)(v14 + 16);
      *(void *)a2 = v15;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_WORD *)(a2 + 40) = 1280;
      *(void *)(a2 + 48) = MEMORY[0x1E4FBC870];
      *(void *)(a2 + 56) = v15;
      *(unsigned char *)(a2 + 64) = 48;
      type metadata accessor for FormatAction();
      swift_storeEnumTagMultiPayload();
      swift_retain_n();
      break;
  }
  return swift_release();
}

uint64_t static FormatWebEmbedBinding.Action.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatWebEmbedBinding.Action.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatWebEmbedBinding.Action.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0AC3CA4()
{
  unint64_t result = qword_1EA1A33C0;
  if (!qword_1EA1A33C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33C0);
  }
  return result;
}

unint64_t sub_1C0AC3CF8(uint64_t a1)
{
  unint64_t result = sub_1C0AC3D20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AC3D20()
{
  unint64_t result = qword_1EA1A33C8;
  if (!qword_1EA1A33C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33C8);
  }
  return result;
}

unint64_t sub_1C0AC3D74(void *a1)
{
  a1[1] = sub_1C0074AB0();
  a1[2] = sub_1C08FE84C();
  unint64_t result = sub_1C0AC3CA4();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0AC3DAC(void *a1)
{
  return FormatWebEmbedBinding.Action.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.Action()
{
  return &type metadata for FormatWebEmbedBinding.Action;
}

uint64_t sub_1C0AC3DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0AC3E64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatFileKind.rawValue.getter()
{
  uint64_t result = 0x746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x70756F7267;
      break;
    case 2:
      uint64_t result = 1835365481;
      break;
    case 3:
      uint64_t result = 0x6567616B636170;
      break;
    case 4:
      uint64_t result = 0x4C6567616B636170;
      break;
    case 5:
      uint64_t result = 0x74657070696E73;
      break;
    case 6:
      uint64_t result = 0x656C797473;
      break;
    case 7:
      uint64_t result = 0x656D656C70707573;
      break;
    case 8:
      uint64_t result = 1701869940;
      break;
    case 9:
      uint64_t result = 0x697461726F636564;
      break;
    case 0xA:
      uint64_t result = 0x617A696C61636F6CLL;
      break;
    case 0xB:
      uint64_t result = 0x676E69646E6962;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatFileKind_optional __swiftcall FormatFileKind.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

void *static FormatFileKind.allCases.getter()
{
  return &unk_1F1B696A8;
}

uint64_t sub_1C0AC4098(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14901A8(*a1, *a2);
}

unint64_t sub_1C0AC40A8()
{
  unint64_t result = qword_1EA1A33D0;
  if (!qword_1EA1A33D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33D0);
  }
  return result;
}

uint64_t sub_1C0AC40FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0AC4164()
{
  FormatFileKind.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AC41C8()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatFileKind_optional sub_1C0AC422C(Swift::String *a1)
{
  return FormatFileKind.init(rawValue:)(*a1);
}

uint64_t sub_1C0AC4238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatFileKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C0AC4260(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0AC4290();
  unint64_t result = sub_1C0AC42E4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0AC4290()
{
  unint64_t result = qword_1EA1A33D8;
  if (!qword_1EA1A33D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33D8);
  }
  return result;
}

unint64_t sub_1C0AC42E4()
{
  unint64_t result = qword_1EB874A88;
  if (!qword_1EB874A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874A88);
  }
  return result;
}

unint64_t sub_1C0AC433C()
{
  unint64_t result = qword_1EA1A33E0;
  if (!qword_1EA1A33E0)
  {
    sub_1C0AC4394();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A33E0);
  }
  return result;
}

void sub_1C0AC4394()
{
  if (!qword_1EA1A33E8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A33E8);
    }
  }
}

void sub_1C0AC43EC(void *a1@<X8>)
{
  *a1 = &unk_1F1B696A8;
}

unint64_t sub_1C0AC43FC(uint64_t a1)
{
  unint64_t result = sub_1C0AC4424();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AC4424()
{
  unint64_t result = qword_1EA1A33F0[0];
  if (!qword_1EA1A33F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A33F0);
  }
  return result;
}

unint64_t sub_1C0AC4478(void *a1)
{
  a1[1] = sub_1C08843C8();
  a1[2] = sub_1C08FBF38();
  unint64_t result = sub_1C0AC40A8();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0AC44B0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0AC4510(void *a1)
{
  return FormatFileKind.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatFileKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AC45F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFileKind()
{
  return &type metadata for FormatFileKind;
}

uint64_t sub_1C0AC462C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7 = v6;
  *(void *)&long long v48 = a4;
  *((void *)&v48 + 1) = a5;
  uint64_t v51 = a6;
  uint64_t v52 = a1;
  uint64_t v47 = *v6;
  sub_1BFD21498(0, (unint64_t *)&qword_1EB864250, MEMORY[0x1E4FAC398]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v45 = (char *)&v44 - v11;
  uint64_t v12 = type metadata accessor for FormatPluginData();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v46 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v17 = (char *)&v44 - v16;
  uint64_t v49 = a2;
  uint64_t v18 = type metadata accessor for FeedPluginFactoryContext();
  uint64_t v50 = a3;
  uint64_t v19 = FeedPluginFactoryContext.plugin(identifier:)();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v52, AssociatedTypeWitness);
    sub_1BFC845BC(0, &qword_1EB86EF90);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(v53, (uint64_t)v55);
      uint64_t v22 = (void *)sub_1C151C94C();
      type metadata accessor for FormatViewController();
      uint64_t v23 = swift_dynamicCastClass();
      if (v23)
      {
        uint64_t v24 = v23;
        uint64_t v25 = v46;
        sub_1C0AC4BAC(v21, v49, v50, v46);
        uint64_t v26 = v56;
        uint64_t v27 = v57;
        __swift_project_boxed_opaque_existential_1(v55, v56);
        uint64_t v28 = (uint64_t)v45;
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
        uint64_t v29 = *(void *)(*(void *)(v24 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 40))(v25, v28, ObjectType, v29);

        sub_1BFD215B8(v28, (unint64_t *)&qword_1EB864250, MEMORY[0x1E4FAC398]);
        sub_1BFD217B8(v25, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      }
      else
      {
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    }
    else
    {
      uint64_t v54 = 0;
      memset(v53, 0, sizeof(v53));
      sub_1BFD217B8((uint64_t)v53, (uint64_t (*)(void))sub_1C0AC51F0);
    }
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v20;
  }
  else
  {
    uint64_t v31 = v52;
    swift_beginAccess();
    uint64_t v32 = v6[9];
    v53[0] = v48;
    uint64_t v33 = type metadata accessor for FormatFeedPluginFactory.FactoryWrapper();
    swift_bridgeObjectRetain();
    MEMORY[0x1C18C5F70](&v58, v53, v32, MEMORY[0x1E4FBB1A0], v33, MEMORY[0x1E4FBB1B0]);
    swift_bridgeObjectRelease();
    uint64_t v34 = v58;
    if (v58)
    {
      swift_endAccess();
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v31, v49, v50);
      swift_release();
      *(void *)(v35 + 16) = v36;
      uint64_t result = v35 | 0x4000000000000000;
    }
    else
    {
      swift_endAccess();
      uint64_t v38 = v46;
      uint64_t v39 = v50;
      sub_1C0AC4BAC(v31, v49, v50, v46);
      uint64_t v40 = v7[7];
      uint64_t v41 = swift_getObjectType();
      uint64_t v42 = (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v40 + 64))(v38, *(void *)(v39 + *(int *)(v18 + 52)), MEMORY[0x1E4FACF10], v41, v40);
      sub_1BFD217B8(v38, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v42;
      uint64_t result = v43 | 0x4000000000000000;
    }
  }
  *uint64_t v51 = result;
  return result;
}

uint64_t sub_1C0AC4BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = (char *)a2;
  uint64_t v32 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA684((uint64_t)v29, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v19 = type metadata accessor for FeedPluginFactoryContext();
  sub_1BFECA684(a3 + *(int *)(v19 + 40), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v29 = v12;
  uint64_t v21 = v12;
  uint64_t v22 = v28;
  v20(v21, v28, v6);
  uint64_t v23 = *(void **)(v4 + 64);
  char v35 = *(unsigned char *)(a3 + 33);
  v20(v9, v22, v6);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB861818);
  id v24 = v23;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v34 = 0;
    memset(v33, 0, sizeof(v33));
  }
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  return FormatPluginData.init<A>(formatContent:feedContext:feedGroup:feedDescriptor:feedKind:dataProvider:)((uint64_t)v18, (uint64_t)v15, (uint64_t)v29, v23, &v35, (uint64_t)v33, v6, *(void *)(v25 + 8), v32);
}

uint64_t sub_1C0AC4ED0()
{
  sub_1C019B9B4(v0 + 16);
  sub_1C019B9B4(v0 + 32);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0AC4F10()
{
  sub_1C0AC4ED0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0AC4F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_1BFD210FC(a1, a2, a3);
}

uint64_t sub_1C0AC4F68(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1C18C9C60](v2 + 16);
  if (result)
  {
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C0AC5004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1C18C9C60](v3 + 16);
  if (result)
  {
    uint64_t v8 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, ObjectType, v8);
    swift_unknownObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1C0AC5090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1C18C9C60](v3 + 16);
  if (result)
  {
    uint64_t v8 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C0AC5140(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1C0AC5148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0AC462C(*(void *)(v4 + 24), a1, *(void *)(v4 + 32), a2, a3, a4);
}

uint64_t sub_1C0AC5180()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0AC51B8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0AC51F0()
{
  if (!qword_1EB86FCA0)
  {
    sub_1BFC845BC(255, &qword_1EB86EF90);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86FCA0);
    }
  }
}

uint64_t sub_1C0AC5258()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1C0AC52E0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 32))();
}

BOOL static FormatCodingEmptySetStrategy.shouldEncode(wrappedValue:)()
{
  return (sub_1C151F01C() & 1) == 0;
}

uint64_t static FormatCodingEmptySetStrategy.decode(rawValue:)()
{
  return sub_1C0AC561C();
}

BOOL sub_1C0AC538C()
{
  return static FormatCodingEmptySetStrategy.shouldEncode(wrappedValue:)();
}

uint64_t sub_1C0AC53A0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result = static FormatCodingEmptySetStrategy.encode(wrappedValue:)(*a1, a2[2], a2[3], a3, a4, a2[6]);
  *a5 = result;
  return result;
}

uint64_t sub_1C0AC53D8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0AC5500(a1, a2, a3, (uint64_t (*)(uint64_t, void, uint64_t, void, void, void))static FormatCodingEmptySetStrategy.decode(rawValue:), a4);
}

uint64_t static FormatCodingNotEmptySetStrategy.decode(rawValue:)()
{
  sub_1C1517E6C();
  sub_1C1517E5C();
  char v0 = sub_1C151F01C();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    return sub_1C1517E5C();
  }
  sub_1C02570B4();
  swift_allocError();
  void *v1 = 1;
  v1[1] = 0;
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0xF000000000000000;
  return swift_willThrow();
}

uint64_t sub_1C0AC54D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0AC5500(a1, a2, a3, (uint64_t (*)(uint64_t, void, uint64_t, void, void, void))static FormatCodingNotEmptySetStrategy.decode(rawValue:), a4);
}

uint64_t sub_1C0AC5500@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, void, uint64_t, void, void, void)@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = a4(a1, a2[2], a3, a2[4], a2[5], a2[6]);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t static FormatCodingColumnSetStrategy.decode(rawValue:)(uint64_t a1)
{
  uint64_t result = sub_1C0AC5770(a1);
  if (!v1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0AC5570@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C0AC5770(a1);
  if (!v2)
  {
    *a2 = result;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t static FormatCodingSafeishSetStrategy.decode(rawValue:)()
{
  return sub_1C0AC561C();
}

uint64_t sub_1C0AC55CC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0AC5500(a1, a2, a3, (uint64_t (*)(uint64_t, void, uint64_t, void, void, void))static FormatCodingSafeishSetStrategy.decode(rawValue:), a4);
}

uint64_t static FormatCodingIgnoreSetStrategy.shouldEncode(wrappedValue:)()
{
  return 0;
}

uint64_t static FormatCodingIgnoreSetStrategy.decode(rawValue:)()
{
  return sub_1C0AC561C();
}

uint64_t sub_1C0AC561C()
{
  return sub_1C1517E5C();
}

uint64_t _s8NewsFeed28FormatCodingEmptySetStrategyV6encode12wrappedValueSayxGShyxG_tFZ_0()
{
  sub_1C151F04C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151ED7C();
  sub_1C151ED5C();
  swift_getWitnessTable();
  uint64_t v0 = sub_1C151EA5C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0AC5744@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0AC5500(a1, a2, a3, (uint64_t (*)(uint64_t, void, uint64_t, void, void, void))static FormatCodingIgnoreSetStrategy.decode(rawValue:), a4);
}

uint64_t sub_1C0AC5770(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_1C0AC5778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v51 = (char *)&v39 - v10;
  uint64_t v40 = v11;
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x1C18C6830](v13))
  {
    sub_1C15200BC();
    uint64_t v16 = sub_1C15200AC();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v44 = MEMORY[0x1C18C6880](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  long long v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  uint64_t v43 = v15;
  while (1)
  {
    char v18 = sub_1C151ECDC();
    sub_1C151EC7C();
    if (v18)
    {
      uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1C152016C();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      uint64_t v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_1C151E47C();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v8, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_1C151E5CC();
        uint64_t v33 = *v48;
        (*v48)(v8, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C0AC5B34(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0AC5B70()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0AC5B8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0AC5BD4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0AC5C1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0AC5C64(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0AC5CA0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0AC5CDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0AC5CF8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatCodingEmptySetStrategy()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FormatCodingNotEmptySetStrategy()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FormatCodingColumnSetStrategy()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FormatCodingSafeishSetStrategy()
{
  return swift_getGenericMetadata();
}

uint64_t FeedItemVisibility.description.getter()
{
  unint64_t v1 = *v0;
  if (*v0 == 2) {
    return 0x656C6269736976;
  }
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1527210;
  *(void *)(v3 + 32) = 0x6E6564646968;
  *(void *)(v3 + 40) = 0xE600000000000000;
  sub_1C01A6E20(v1);
  *(void *)(v3 + 48) = FeedItemHiddenReason.description.getter();
  *(void *)(v3 + 56) = v4;
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v2 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C0A63304(v1);
  return v2;
}

uint64_t FeedItemHiddenReason.description.getter()
{
  unint64_t v1 = *v0;
  if (!*v0) {
    return 0xD000000000000011;
  }
  if (v1 == 1) {
    return 0x646574656C6564;
  }
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1527210;
  *(void *)(v3 + 32) = 0x64656B636F6C62;
  *(void *)(v3 + 40) = 0xE700000000000000;
  id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = v7;
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v2 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C0A63314(v1);
  return v2;
}

uint64_t sub_1C0AC603C()
{
  unint64_t v1 = *v0;
  if (*v0 && v1 != (void *)1)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v7 = self;
    swift_unknownObjectRetain();
    id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    sub_1BFFDEB20();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
    id v10 = objc_msgSend(v1, sel_name, 0x80000001C161B490);
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;

    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1BFE9C558();
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v13;
    uint64_t v14 = sub_1C151E5FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0A63314((unint64_t)v1);
    return v14;
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t v2 = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, v2);
    uint64_t v4 = sub_1C1515B8C();

    return v4;
  }
}

uint64_t sub_1C0AC62E4()
{
  if (*v0 == 1) {
    return 0;
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v1 = sub_1C1515B8C();

  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedItemVisibility(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_unknownObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for FeedItemVisibility(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *assignWithCopy for FeedItemVisibility(uint64_t *a1, uint64_t *a2)
{
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  else {
    uint64_t v3 = *a1;
  }
  unsigned int v4 = v3 + 1;
  uint64_t v5 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  else {
    uint64_t v6 = *a2;
  }
  unsigned int v7 = v6 + 1;
  if (v4 > 2)
  {
    if (v7 <= 2 && v6 == -1) {
      uint64_t v5 = swift_unknownObjectRetain();
    }
    goto LABEL_17;
  }
  if (v7 > 2)
  {
    if (!v4)
    {
      swift_unknownObjectRelease();
      uint64_t v5 = *a2;
    }
    goto LABEL_17;
  }
  if (v4)
  {
    if (v6 == -1)
    {
      *a1 = v5;
      swift_unknownObjectRetain();
      return a1;
    }
LABEL_17:
    *a1 = v5;
    return a1;
  }
  if (v6 == -1)
  {
    *a1 = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    *a1 = *a2;
  }
  return a1;
}

unint64_t *assignWithTake for FeedItemVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = v3;
  }
  unsigned int v6 = v5 + 1;
  unint64_t v7 = *a2;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  if (v6 > 2) {
    goto LABEL_13;
  }
  unsigned int v8 = v4 + 1;
  if (v8 > 2)
  {
    if (!v6) {
      goto LABEL_12;
    }
LABEL_13:
    *a1 = v7;
    return a1;
  }
  if (v6) {
    goto LABEL_13;
  }
  if (v8)
  {
LABEL_12:
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  *a1 = v7;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemVisibility(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 < 3) {
    unsigned int v5 = 0;
  }
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0AC6644(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  unsigned int v2 = v1 + 1;
  unsigned int v3 = v1 - 1;
  if (v2 >= 3) {
    return v3;
  }
  else {
    return 0;
  }
}

void *sub_1C0AC6668(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFD)
  {
    *unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
  }
  else if (a2)
  {
    *unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemVisibility()
{
  return &type metadata for FeedItemVisibility;
}

unint64_t *assignWithCopy for FeedItemHiddenReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_unknownObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_unknownObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for FeedItemHiddenReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_unknownObjectRelease();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedItemHiddenReason()
{
  return &type metadata for FeedItemHiddenReason;
}

uint64_t FormatColorComponent.rawValue.getter()
{
  uint64_t result = 6649192;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6974617275746173;
      break;
    case 2:
      uint64_t result = 0x656E746867697262;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    case 4:
      uint64_t result = 6579570;
      break;
    case 5:
      uint64_t result = 0x6E65657267;
      break;
    case 6:
      uint64_t result = 1702194274;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0AC68AC()
{
  unint64_t result = qword_1EA1A3478;
  if (!qword_1EA1A3478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3478);
  }
  return result;
}

uint64_t sub_1C0AC6900()
{
  return sub_1C044F284();
}

uint64_t sub_1C0AC690C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AC6A0C()
{
  return sub_1C044F284();
}

void sub_1C0AC6A14(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 6649192;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x6974617275746173;
      unint64_t v2 = 0xEA00000000006E6FLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x656E746867697262;
      a1[1] = 0xEA00000000007373;
      break;
    case 3:
      *a1 = 0x6168706C61;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 6579570;
      a1[1] = 0xE300000000000000;
      break;
    case 5:
      *a1 = 0x6E65657267;
      a1[1] = 0xE500000000000000;
      break;
    case 6:
      *a1 = 1702194274;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C0AC6AF8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0AC6B28();
  unint64_t result = sub_1BFD0CC84();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0AC6B28()
{
  unint64_t result = qword_1EA1A3480;
  if (!qword_1EA1A3480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3480);
  }
  return result;
}

uint64_t sub_1C0AC6B7C(unsigned __int8 *a1, char *a2)
{
  return sub_1C1478790(*a1, *a2);
}

unint64_t sub_1C0AC6B88(uint64_t a1)
{
  unint64_t result = sub_1C0AC6BB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AC6BB0()
{
  unint64_t result = qword_1EA1A3488;
  if (!qword_1EA1A3488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3488);
  }
  return result;
}

unint64_t sub_1C0AC6C04(void *a1)
{
  a1[1] = sub_1BFDE5430();
  a1[2] = sub_1BFDED6F8();
  unint64_t result = sub_1C0AC68AC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatColorComponent()
{
  return &type metadata for FormatColorComponent;
}

uint64_t sub_1C0AC6C90()
{
  uint64_t v0 = sub_1BFEF4060((uint64_t)&unk_1F1B644E8);
  uint64_t result = swift_arrayDestroy();
  qword_1EA1A3490 = v0;
  return result;
}

uint64_t type metadata accessor for FormatDOMElement()
{
  return self;
}

uint64_t sub_1C0AC6D00(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0AC6EC0(*a1, *a2);
}

uint64_t sub_1C0AC6D0C()
{
  uint64_t v14 = sub_1C093B930();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v2, 0);
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
      {
        uint64_t v6 = *(void *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v8 = *(void *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v5 = swift_retain();
        uint64_t v6 = sub_1C0AC6D0C(v5);
        uint64_t v8 = v7;
        swift_release();
      }
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1) {
        sub_1BFF661B8(v9 > 1, v10 + 1, 1);
      }
      ++v3;
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_1BFED9C20();
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C0AC6E9C()
{
  return sub_1C0AC6D0C();
}

uint64_t sub_1C0AC6EC0(uint64_t a1, uint64_t a2)
{
  if (sub_1C093BB60(*(void *)(a1 + 16), *(void *)(a2 + 16)))
  {
    swift_beginAccess();
    uint64_t v4 = *(void *)(a1 + 24);
    swift_beginAccess();
    uint64_t v5 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v6 = sub_1C00DD510(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C0AC6F70(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v2 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 >= v7) {
      goto LABEL_30;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v2;
    if (!v12)
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (!v12)
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_30;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v2);
        if (!v12)
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_30;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * v10);
    swift_retain();
    FeedItemLayoutAttributes.frame.getter();
    if (v16 == 0.0 && v15 == 0.0)
    {
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = v8;
      if ((result & 1) == 0) {
        uint64_t result = sub_1BFE9F020(0, *(void *)(v8 + 16) + 1, 1);
      }
      uint64_t v17 = v8;
      unint64_t v18 = *(void *)(v8 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      if (v18 >= v19 >> 1)
      {
        uint64_t result = sub_1BFE9F020(v19 > 1, v18 + 1, 1);
        uint64_t v17 = v20;
      }
      *(void *)(v17 + 16) = v18 + 1;
      *(void *)(v17 + 8 * v18 + 32) = v14;
      uint64_t v8 = v17;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_30:
    swift_release();
    return v8;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v2 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v2 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_30;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v2);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C0AC7184(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v72 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v5 - 8);
  unsigned int v76 = (uint64_t *)((char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v82);
  unsigned int v75 = (id *)((char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v79 = (id *)((char *)&v69 - v9);
  uint64_t v77 = 0;
  uint64_t v74 = type metadata accessor for DebugFormatTestCaseResult(0);
  uint64_t v69 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v81 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v78 = (uint64_t)&v69 - v12;
  uint64_t v13 = a2[1];
  uint64_t v80 = *a2;
  char v14 = *((unsigned char *)a2 + 16);
  uint64_t v15 = a2[3];
  char v16 = *((unsigned char *)a2 + 32);
  uint64_t v17 = a2[5];
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_tableView;
  id v19 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v20 = v3;
  *(void *)&v3[v18] = objc_msgSend(v19, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v20[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_editor] = v72;
  uint64_t v70 = v20;
  uint64_t v21 = &v20[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result];
  *(void *)uint64_t v21 = v80;
  *((void *)v21 + 1) = v13;
  unsigned char v21[16] = v14;
  *((void *)v21 + 3) = v15;
  v21[32] = v16;
  *((void *)v21 + 5) = v17;
  uint64_t v22 = *(void *)(v13 + 16);
  if (!v22)
  {
    swift_retain();
    uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_43;
  }
  unint64_t v73 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v23 = v13 + v73;
  uint64_t v80 = *(void *)(v69 + 72);
  swift_retain();
  uint64_t v69 = v13;
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v26 = v78;
  unint64_t v25 = v79;
  do
  {
    sub_1C0AC9474(v23, v26, type metadata accessor for DebugFormatTestCaseResult);
    uint64_t v28 = v26 + *(int *)(v74 + 24);
    sub_1C0AC9474(v28, (uint64_t)v25, type metadata accessor for DebugFormatTestCaseResult.Result);
    if (swift_getEnumCaseMultiPayload() - 2 >= 2)
    {
      uint64_t v29 = v76;
      sub_1C0AC94DC((uint64_t)v25, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
      uint64_t v30 = v29[3];
      uint64_t v31 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v30);
      sub_1BFFFABA8(v30, v31);
      sub_1C0ACBB78((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
      if (!v24[2]) {
        goto LABEL_16;
      }
    }
    else
    {

      memcpy(v84, v25, sizeof(v84));
      switch(LOBYTE(v84[6]))
      {
        case 1:
          unsigned __int8 v85 = 1;
          break;
        case 2:
          char v35 = 2;
          goto LABEL_13;
        case 3:
          char v35 = 3;
LABEL_13:
          unsigned __int8 v85 = v35;
          break;
        default:
          unsigned __int8 v85 = 0;
          break;
      }
      sub_1BFFD07D8((uint64_t)v84);
      if (!v24[2])
      {
LABEL_16:
        unint64_t v33 = MEMORY[0x1E4FBC860];
        goto LABEL_17;
      }
    }
    uint64_t v32 = sub_1BFFFC6AC(v85);
    unint64_t v33 = MEMORY[0x1E4FBC860];
    if (v34)
    {
      unint64_t v33 = *(void *)(v24[7] + 8 * v32);
      swift_bridgeObjectRetain();
    }
LABEL_17:
    sub_1C0AC9474(v26, v81, type metadata accessor for DebugFormatTestCaseResult);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v33 = sub_1C0EE687C(0, *(void *)(v33 + 16) + 1, 1, v33);
    }
    unint64_t v37 = *(void *)(v33 + 16);
    unint64_t v36 = *(void *)(v33 + 24);
    if (v37 >= v36 >> 1) {
      unint64_t v33 = sub_1C0EE687C(v36 > 1, v37 + 1, 1, v33);
    }
    *(void *)(v33 + 16) = v37 + 1;
    sub_1C0AC94DC(v81, v33 + v73 + v37 * v80, type metadata accessor for DebugFormatTestCaseResult);
    uint64_t v38 = v75;
    sub_1C0AC9474(v28, (uint64_t)v75, type metadata accessor for DebugFormatTestCaseResult.Result);
    if (swift_getEnumCaseMultiPayload() - 2 >= 2)
    {
      uint64_t v39 = v76;
      sub_1C0AC94DC((uint64_t)v38, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
      uint64_t v40 = v39[3];
      uint64_t v41 = v39[4];
      __swift_project_boxed_opaque_existential_1(v39, v40);
      sub_1BFFFABA8(v40, v41);
      sub_1C0ACBB78((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
    }
    else
    {

      memcpy(v84, v38, sizeof(v84));
      switch(LOBYTE(v84[6]))
      {
        case 1:
          unsigned __int8 v85 = 1;
          break;
        case 2:
          char v42 = 2;
          goto LABEL_27;
        case 3:
          char v42 = 3;
LABEL_27:
          unsigned __int8 v85 = v42;
          break;
        default:
          unsigned __int8 v85 = 0;
          break;
      }
      sub_1BFFD07D8((uint64_t)v84);
    }
    uint64_t v43 = v85;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v84[0] = v24;
    unint64_t v46 = sub_1BFFFC6AC(v43);
    uint64_t v47 = v24[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      sub_1C1520CFC();
      __break(1u);
LABEL_57:
      swift_release();
      __break(1u);
      JUMPOUT(0x1C0AC79F4);
    }
    char v50 = v45;
    if (v24[3] >= v49)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v24 = v84[0];
        if (v45) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C1072A74();
        uint64_t v24 = v84[0];
        if (v50) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C1061630(v49, isUniquelyReferenced_nonNull_native);
      uint64_t v51 = sub_1BFFFC6AC(v43);
      if ((v50 & 1) != (v52 & 1)) {
        goto LABEL_56;
      }
      unint64_t v46 = v51;
      uint64_t v24 = v84[0];
      if (v50)
      {
LABEL_3:
        uint64_t v27 = v24[7];
        swift_bridgeObjectRelease();
        *(void *)(v27 + 8 * v46) = v33;
        goto LABEL_4;
      }
    }
    v24[(v46 >> 6) + 8] |= 1 << v46;
    *(unsigned char *)(v24[6] + v46) = v43;
    *(void *)(v24[7] + 8 * v46) = v33;
    uint64_t v53 = v24[2];
    BOOL v54 = __OFADD__(v53, 1);
    uint64_t v55 = v53 + 1;
    if (v54) {
      goto LABEL_55;
    }
    v24[2] = v55;
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v26 = v78;
    sub_1C0ACBB78(v78, type metadata accessor for DebugFormatTestCaseResult);
    unint64_t v25 = v79;
    v23 += v80;
    --v22;
  }
  while (v22);
  swift_bridgeObjectRelease();
LABEL_43:
  uint64_t v56 = 0;
  uint64_t v57 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (v24[2])
    {
      unsigned __int8 v59 = byte_1F1B898B8[v56 + 32];
      uint64_t v60 = sub_1BFFFC6AC(v59);
      if (v61)
      {
        v84[0] = *(void **)(v24[7] + 8 * v60);
        swift_bridgeObjectRetain_n();
        uint64_t v62 = v77;
        sub_1C0AC93CC(v84);
        uint64_t v77 = v62;
        if (v62) {
          goto LABEL_57;
        }
        swift_bridgeObjectRelease();
        uint64_t v63 = v84[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v57 = sub_1C0EE6DD8(0, v57[2] + 1, 1, v57);
        }
        unint64_t v65 = v57[2];
        unint64_t v64 = v57[3];
        if (v65 >= v64 >> 1) {
          uint64_t v57 = sub_1C0EE6DD8((void *)(v64 > 1), v65 + 1, 1, v57);
        }
        v57[2] = v65 + 1;
        uint64_t v58 = &v57[2 * v65];
        *((unsigned char *)v58 + 32) = v59;
        v58[5] = v63;
      }
    }
    ++v56;
  }
  while (v56 != 4);
  uint64_t v66 = v70;
  *(void *)&v70[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections] = v57;

  unsigned long long v83 = __PAIR128__(ObjectType, (unint64_t)v66);
  id v67 = objc_msgSendSuper2((objc_super *)&v83, sel_initWithNibName_bundle_, 0, 0);
  swift_bridgeObjectRelease();
  swift_release();
  return v67;
}

void sub_1C0AC7AC8()
{
  uint64_t v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_tableView];
    objc_msgSend(v5, sel_setDataSource_, v1);
    objc_msgSend(v5, sel_setDelegate_, v1);
    objc_msgSend(v5, sel_setAlwaysBounceVertical_, 1);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, sel_setTableFooterView_, v6);

    type metadata accessor for SubtitleTableViewCell();
    sub_1C151F26C();
    id v7 = objc_msgSend(v1, sel_view);
    if (v7)
    {
      uint64_t v8 = v7;
      objc_msgSend(v7, sel_addSubview_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatTestCaseMultiResultViewController()
{
  return self;
}

unint64_t sub_1C0AC7EA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DebugFormatTestCaseResult(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections);
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (result >= *(void *)(v6 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v8 = *(void *)(v6 + 16 * result + 40);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (result >= *(void *)(v8 + 16))
  {
LABEL_35:
    __break(1u);
    return result;
  }
  v49[1] = v2;
  sub_1C0AC9474(v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * result, (uint64_t)v5, type metadata accessor for DebugFormatTestCaseResult);
  swift_bridgeObjectRelease();
  type metadata accessor for SubtitleTableViewCell();
  objc_super v9 = (void *)sub_1C151F24C();
  id v10 = objc_msgSend(v9, sel_textLabel);
  if (v10)
  {
    uint64_t v11 = v10;
    objc_msgSend(v10, sel_setNumberOfLines_, 0);
  }
  id v12 = objc_msgSend(v9, sel_textLabel);
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
    objc_msgSend(v13, sel_setFont_, v14);
  }
  id v15 = objc_msgSend(v9, sel_detailTextLabel);
  if (v15)
  {
    char v16 = v15;
    objc_msgSend(v15, sel_setNumberOfLines_, 0);
  }
  id v17 = objc_msgSend(v9, sel_detailTextLabel);
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v18, sel_setTextColor_, v19);
  }
  id v20 = objc_msgSend(v9, sel_detailTextLabel);
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = objc_msgSend(self, sel_systemFontOfSize_, 12.0);
    objc_msgSend(v21, sel_setFont_, v22);
  }
  objc_msgSend(v9, sel_setAccessoryType_, 1);
  char v23 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 16);
  uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 24);
  char v25 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 32);
  uint64_t v26 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 40);
  long long v50 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result);
  char v51 = v23;
  uint64_t v52 = v24;
  char v53 = v25;
  uint64_t v54 = v26;
  BOOL v27 = sub_1C1448B8C((uint64_t)v5);
  id v28 = objc_msgSend(v9, sel_textLabel);
  uint64_t v29 = v28;
  if (v27)
  {
    if (v28)
    {
      id v30 = objc_msgSend(self, sel_systemGreenColor);
      objc_msgSend(v29, sel_setTextColor_, v30);
    }
    id v31 = objc_msgSend(v9, sel_textLabel);
    if (!v31) {
      goto LABEL_23;
    }
    uint64_t v29 = v31;
    id v32 = objc_msgSend(self, sel_systemFontOfSize_weight_, 15.0, *MEMORY[0x1E4FB09B8]);
    objc_msgSend(v29, sel_setFont_, v32);
    goto LABEL_22;
  }
  if (v28)
  {
    id v32 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v29, sel_setTextColor_, v32);
LABEL_22:
  }
LABEL_23:
  id v33 = objc_msgSend(v9, sel_textLabel);
  if (v33)
  {
    char v34 = v33;
    swift_bridgeObjectRetain();
    char v35 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setText_, v35);
  }
  id v36 = objc_msgSend(v9, sel_detailTextLabel);
  if (v36)
  {
    unint64_t v37 = v36;
    sub_1C01CDB50();
    uint64_t v38 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_setText_, v38);
  }
  id v39 = objc_msgSend(v9, sel_imageView);
  if (v39)
  {
    uint64_t v40 = v39;
    char v41 = sub_1C01CE1A4();
    id v42 = sub_1C112C0C8(v41);
    id v43 = objc_msgSend(self, sel_configurationWithPointSize_, 15.0);
    id v44 = objc_msgSend(v42, sel_imageWithConfiguration_, v43);

    objc_msgSend(v40, sel_setImage_, v44);
  }
  id v45 = objc_msgSend(v9, sel_imageView);
  if (v45)
  {
    unint64_t v46 = v45;
    char v47 = sub_1C01CE1A4();
    id v48 = sub_1C112C2C4(v47);
    objc_msgSend(v46, sel_setTintColor_, v48);
  }
  sub_1C0ACBB78((uint64_t)v5, type metadata accessor for DebugFormatTestCaseResult);
  return (unint64_t)v9;
}

unint64_t sub_1C0AC8620(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DebugFormatTestCaseResult(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = (void *)sub_1C151670C();
  uint64_t v71 = a1;
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v16, 1);

  uint64_t v17 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections];
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (result >= *(void *)(v17 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v19 = *(void *)(v17 + 16 * result + 40);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result >= *(void *)(v19 + 16))
  {
LABEL_25:
    __break(1u);
    return result;
  }
  sub_1C0AC9474(v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * result, (uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
  swift_bridgeObjectRelease();
  sub_1C0AC9474((uint64_t)&v15[*(int *)(v12 + 24)], (uint64_t)v8, type metadata accessor for DebugFormatTestCaseResult.Result);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    uint64_t v70 = v3;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v23 = *((void *)v8 + 37);
      uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E528(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      long long v69 = xmmword_1C1529AE0;
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v68 = inited + 32;
      sub_1BFF9E528(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v24);
      sub_1C0181BEC(0);
      unint64_t v27 = (*(unsigned __int8 *)(*(void *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v26 - 8) + 80);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v69;
      uint64_t v29 = (void *)(v28 + v27);
      *(void *)&long long v75 = 0;
      *((void *)&v75 + 1) = 0xE000000000000000;
      *(void *)&long long v69 = v23;
      uint64_t v74 = v23;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      sub_1C152036C();
      uint64_t v30 = HIBYTE(*((void *)&v75 + 1)) & 0xFLL;
      if ((*((void *)&v75 + 1) & 0x2000000000000000) == 0) {
        uint64_t v30 = v75 & 0xFFFFFFFFFFFFLL;
      }
      if (v30)
      {
        *((void *)&v76 + 1) = MEMORY[0x1E4FBB1A0];
      }
      else
      {
        swift_bridgeObjectRelease();
        long long v75 = 0u;
        long long v76 = 0u;
      }
      sub_1C042F9B0(0, 0xE000000000000000, (uint64_t)&v75, v29);
      uint64_t v41 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v29, 0, 1, v41);
      sub_1C09BCFA4(0x72724520646E6942, 0xEA0000000000726FLL, 0, 0, v28, &v75);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v42 = swift_allocObject();
      *(void *)(inited + 32) = v42;
      *(void *)(v42 + 48) = v77;
      long long v43 = v76;
      *(_OWORD *)(v42 + 16) = v75;
      *(_OWORD *)(v42 + 32) = v43;
      id v44 = sub_1C131B79C(inited);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      uint64_t v45 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_editor];
      swift_retain();
      uint64_t v46 = sub_1C131B4D4((uint64_t)v44);
      swift_bridgeObjectRelease();
      char v47 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
      id v48 = objc_allocWithZone(v47);
      v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
      v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
      *(void *)&v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
      *(_OWORD *)&v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
      uint64_t v49 = &v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
      *uint64_t v49 = 0;
      v49[1] = 0xE000000000000000;
      uint64_t v50 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
      id v51 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
      uint64_t v52 = v48;
      *(void *)&v48[v50] = objc_msgSend(v51, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
      *(void *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
      *(void *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v45;
      *(void *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v46;
      *(void *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v46;
      *(void *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
      swift_retain();
      swift_bridgeObjectRetain();

      v72.receiver = v52;
      v72.super_class = v47;
      id v53 = objc_msgSendSuper2(&v72, sel_initWithNibName_bundle_, 0, 0);
    }
    else
    {
      id v31 = v3;
      uint64_t v32 = *((void *)v8 + 37);
      id v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E528(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v34 = swift_initStackObject();
      long long v69 = xmmword_1C1529AE0;
      *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
      uint64_t v68 = v34 + 32;
      sub_1BFF9E528(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v33);
      sub_1C0181BEC(0);
      unint64_t v36 = (*(unsigned __int8 *)(*(void *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v69;
      uint64_t v38 = (void *)(v37 + v36);
      *(void *)&long long v75 = 0;
      *((void *)&v75 + 1) = 0xE000000000000000;
      *(void *)&long long v69 = v32;
      uint64_t v74 = v32;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      sub_1C152036C();
      uint64_t v39 = HIBYTE(*((void *)&v75 + 1)) & 0xFLL;
      if ((*((void *)&v75 + 1) & 0x2000000000000000) == 0) {
        uint64_t v39 = v75 & 0xFFFFFFFFFFFFLL;
      }
      if (v39)
      {
        *((void *)&v76 + 1) = MEMORY[0x1E4FBB1A0];
      }
      else
      {
        swift_bridgeObjectRelease();
        long long v75 = 0u;
        long long v76 = 0u;
      }
      uint64_t v40 = v31;
      sub_1C042F9B0(0, 0xE000000000000000, (uint64_t)&v75, v38);
      uint64_t v54 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v38, 0, 1, v54);
      sub_1C09BCFA4(0x2064696C61766E49, 0xEE0074756F79614CLL, 0, 0, v37, &v75);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v34 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v34 + 64) = &off_1F1BDEC90;
      uint64_t v55 = swift_allocObject();
      *(void *)(v34 + 32) = v55;
      *(void *)(v55 + 48) = v77;
      long long v56 = v76;
      *(_OWORD *)(v55 + 16) = v75;
      *(_OWORD *)(v55 + 32) = v56;
      uint64_t v57 = sub_1C131B79C(v34);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      uint64_t v58 = *(void *)&v40[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_editor];
      swift_retain();
      uint64_t v59 = sub_1C131B4D4((uint64_t)v57);
      swift_bridgeObjectRelease();
      uint64_t v60 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
      char v61 = objc_allocWithZone(v60);
      v61[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
      v61[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
      *(void *)&v61[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
      *(_OWORD *)&v61[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
      uint64_t v62 = &v61[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
      *uint64_t v62 = 0;
      v62[1] = 0xE000000000000000;
      uint64_t v63 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
      id v64 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
      unint64_t v65 = v61;
      *(void *)&v61[v63] = objc_msgSend(v64, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
      *(void *)&v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
      *(void *)&v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v58;
      *(void *)&v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v59;
      *(void *)&v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v59;
      *(void *)&v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
      swift_retain();
      swift_bridgeObjectRetain();

      v73.receiver = v65;
      v73.super_class = v60;
      id v53 = objc_msgSendSuper2(&v73, sel_initWithNibName_bundle_, 0, 0);
    }
    uint64_t v66 = v53;
    objc_msgSend(v53, sel_setTitle_, 0);
    swift_release();
    sub_1C0AC91C4(v66, v71, a2, v70);

    sub_1C0ACBB78((uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
    return sub_1BFFD07D8((uint64_t)v8);
  }
  else
  {
    sub_1C0AC94DC((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
    objc_allocWithZone((Class)type metadata accessor for DebugFormatTestCasePreviewNavigationController());
    uint64_t v21 = swift_retain();
    id v22 = sub_1C14B7420(v21, (uint64_t)v11);
    sub_1C0AC91C4(v22, v71, a2, v3);

    return sub_1C0ACBB78((uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
  }
}

id sub_1C0AC91C4(void *a1, void *a2, uint64_t a3, void *a4)
{
  objc_msgSend(a1, sel_setModalPresentationStyle_, 7);
  id v7 = objc_msgSend(a1, sel_popoverPresentationController);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = (void *)sub_1C151670C();
    id v10 = objc_msgSend(a2, sel_cellForRowAtIndexPath_, v9);

    objc_msgSend(v8, sel_setSourceView_, v10);
  }
  id v11 = objc_msgSend(a1, sel_popoverPresentationController);
  if (v11)
  {
    uint64_t v12 = v11;
    objc_msgSend(v11, sel_setPermittedArrowDirections_, 4);
  }
  return objc_msgSend(a4, sel_presentViewController_animated_completion_, a1, 1, 0);
}

void sub_1C0AC93CC(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DebugFormatTestCaseResult(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C06365CC(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C0AC9544(v5);
  *a1 = v3;
}

uint64_t sub_1C0AC9474(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0AC94DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0AC9544(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v182 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v182);
  uint64_t v181 = (uint64_t)&v164 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v180);
  uint64_t v192 = (uint64_t)&v164 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v191 = (uint64_t)&v164 - v7;
  MEMORY[0x1F4188790](v8);
  int v170 = (char *)&v164 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v176 = (uint64_t)&v164 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v164 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v169 = (uint64_t)&v164 - v16;
  uint64_t v194 = type metadata accessor for DebugFormatTestCaseResult(0);
  uint64_t v17 = *(void *)(v194 - 8);
  MEMORY[0x1F4188790](v194);
  uint64_t v173 = (uint64_t)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v188 = (uint64_t)&v164 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v195 = (uint64_t)&v164 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v190 = (uint64_t)&v164 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v178 = (uint64_t)&v164 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v175 = (uint64_t)&v164 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v171 = (uint64_t)&v164 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v168 = (uint64_t)&v164 - v32;
  uint64_t v193 = a1;
  uint64_t v33 = a1[1];
  uint64_t v34 = sub_1C152086C();
  if (v34 >= v33)
  {
    if (v33 < 0) {
      goto LABEL_169;
    }
    if (v33) {
      sub_1C0ACAA00(0, v33, 1, v193);
    }
    return;
  }
  if (v33 >= 0) {
    uint64_t v35 = v33;
  }
  else {
    uint64_t v35 = v33 + 1;
  }
  if (v33 < -1) {
    goto LABEL_177;
  }
  int v167 = v14;
  uint64_t v165 = v34;
  uint64_t v179 = v17;
  if (v33 < 2)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    unint64_t v177 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    if (v33 != 1)
    {
      unint64_t v42 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v41 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_134;
    }
    uint64_t v164 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v36 = v35 >> 1;
    uint64_t v37 = sub_1C151ECCC();
    *(void *)(v37 + 16) = v36;
    unint64_t v38 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v164 = v37;
    unint64_t v177 = v37 + v38;
  }
  uint64_t v40 = 0;
  uint64_t v41 = (char *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v43 = v40 + 1;
    uint64_t v174 = v40;
    if (v40 + 1 >= v33)
    {
      uint64_t v50 = v40 + 1;
      uint64_t v51 = v179;
    }
    else
    {
      uint64_t v44 = *v193;
      uint64_t v45 = *(void *)(v179 + 72);
      uint64_t v46 = v168;
      sub_1C0AC9474(*v193 + v45 * v43, v168, type metadata accessor for DebugFormatTestCaseResult);
      uint64_t v172 = v44;
      uint64_t v189 = v45;
      sub_1C0AC9474(v44 + v45 * v40, v171, type metadata accessor for DebugFormatTestCaseResult);
      sub_1C0AC9474(v46 + *(int *)(v194 + 24), v169, type metadata accessor for DebugFormatTestCaseResult.Result);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v48 = (uint64_t)v167;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          sub_1C0ACBB78(v169, type metadata accessor for DebugFormatTestCaseResult.Result);
          goto LABEL_22;
        case 2:
        case 3:
          uint64_t v49 = v169;

          sub_1BFFD07D8(v49);
LABEL_22:
          unint64_t v186 = 0;
          break;
        default:
          uint64_t v52 = v181;
          sub_1C0AC94DC(v169, v181, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          uint64_t v53 = *(void *)(v52 + *(int *)(v182 + 28) + 40);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          unint64_t v186 = *(void *)(sub_1C0AC6F70(v53) + 16);
          swift_bridgeObjectRelease();
          uint64_t v48 = (uint64_t)v167;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C0ACBB78(v52, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          break;
      }
      sub_1C0AC9474(v171 + *(int *)(v194 + 24), v48, type metadata accessor for DebugFormatTestCaseResult.Result);
      int v54 = swift_getEnumCaseMultiPayload();
      uint64_t v51 = v179;
      switch(v54)
      {
        case 1:
          sub_1C0ACBB78(v48, type metadata accessor for DebugFormatTestCaseResult.Result);
          goto LABEL_27;
        case 2:
        case 3:

          sub_1BFFD07D8(v48);
LABEL_27:
          unint64_t v185 = 0;
          break;
        default:
          uint64_t v55 = v181;
          sub_1C0AC94DC(v48, v181, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          uint64_t v56 = *(void *)(v55 + *(int *)(v182 + 28) + 40);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          unint64_t v185 = *(void *)(sub_1C0AC6F70(v56) + 16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v51 = v179;
          swift_bridgeObjectRelease();
          sub_1C0ACBB78(v55, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          break;
      }
      sub_1C0ACBB78(v171, type metadata accessor for DebugFormatTestCaseResult);
      sub_1C0ACBB78(v168, type metadata accessor for DebugFormatTestCaseResult);
      uint64_t v40 = v174;
      uint64_t v50 = v174 + 2;
      uint64_t v184 = v33;
      if (v174 + 2 < v33)
      {
        uint64_t v166 = v41;
        uint64_t v187 = v189 * v43;
        uint64_t v57 = v172;
        uint64_t v58 = v174 + 2;
        uint64_t v183 = v189 * v50;
        uint64_t v59 = (uint64_t)v170;
        while (1)
        {
          uint64_t v60 = v175;
          sub_1C0AC9474(v57 + v183, v175, type metadata accessor for DebugFormatTestCaseResult);
          sub_1C0AC9474(v57 + v187, v178, type metadata accessor for DebugFormatTestCaseResult);
          sub_1C0AC9474(v60 + *(int *)(v194 + 24), v176, type metadata accessor for DebugFormatTestCaseResult.Result);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1C0ACBB78(v176, type metadata accessor for DebugFormatTestCaseResult.Result);
              goto LABEL_34;
            case 2u:
            case 3u:
              uint64_t v61 = v176;

              sub_1BFFD07D8(v61);
LABEL_34:
              unint64_t v64 = 0;
              break;
            default:
              uint64_t v62 = v181;
              sub_1C0AC94DC(v176, v181, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              uint64_t v63 = *(void *)(v62 + *(int *)(v182 + 28) + 40);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              unint64_t v64 = *(void *)(sub_1C0AC6F70(v63) + 16);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1C0ACBB78(v62, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              break;
          }
          sub_1C0AC9474(v178 + *(int *)(v194 + 24), v59, type metadata accessor for DebugFormatTestCaseResult.Result);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v65 = v2;
              sub_1C0ACBB78(v59, type metadata accessor for DebugFormatTestCaseResult.Result);
              goto LABEL_39;
            case 2u:
            case 3u:
              uint64_t v65 = v2;

              sub_1BFFD07D8(v59);
LABEL_39:
              unint64_t v69 = 0;
              break;
            default:
              uint64_t v66 = v59;
              uint64_t v67 = v181;
              sub_1C0AC94DC(v66, v181, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              uint64_t v68 = *(void *)(v67 + *(int *)(v182 + 28) + 40);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v65 = v2;
              unint64_t v69 = *(void *)(sub_1C0AC6F70(v68) + 16);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v70 = v67;
              uint64_t v59 = (uint64_t)v170;
              sub_1C0ACBB78(v70, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              break;
          }
          BOOL v71 = v185 < v186;
          sub_1C0ACBB78(v178, type metadata accessor for DebugFormatTestCaseResult);
          sub_1C0ACBB78(v175, type metadata accessor for DebugFormatTestCaseResult);
          if (v71 == v69 >= v64) {
            break;
          }
          v57 += v189;
          ++v58;
          uint64_t v33 = v184;
          uint64_t v2 = v65;
          uint64_t v51 = v179;
          if (v184 == v58)
          {
            uint64_t v50 = v184;
            uint64_t v41 = v166;
            uint64_t v40 = v174;
            goto LABEL_44;
          }
        }
        uint64_t v2 = v65;
        uint64_t v51 = v179;
        uint64_t v41 = v166;
        uint64_t v40 = v174;
        uint64_t v50 = v58;
        uint64_t v33 = v184;
      }
LABEL_44:
      if (v185 < v186)
      {
        if (v50 < v40) {
          goto LABEL_170;
        }
        if (v40 < v50)
        {
          uint64_t v166 = v41;
          uint64_t v72 = 0;
          uint64_t v73 = v50;
          uint64_t v74 = v189 * (v50 - 1);
          uint64_t v75 = v73 * v189;
          uint64_t v76 = v40;
          uint64_t v77 = v40 * v189;
          uint64_t v187 = v73;
          do
          {
            if (v76 != v73 + v72 - 1)
            {
              uint64_t v78 = v172;
              if (!v172) {
                goto LABEL_175;
              }
              unint64_t v79 = v172 + v77;
              sub_1C0AC94DC(v172 + v77, v173, type metadata accessor for DebugFormatTestCaseResult);
              if (v77 < v74 || v79 >= v78 + v75)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v77 != v74)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1C0AC94DC(v173, v78 + v74, type metadata accessor for DebugFormatTestCaseResult);
              uint64_t v40 = v174;
            }
            ++v76;
            --v72;
            uint64_t v73 = v187;
            v74 -= v189;
            v75 -= v189;
            v77 += v189;
          }
          while (v76 < v187 + v72);
          uint64_t v51 = v179;
          uint64_t v41 = v166;
          uint64_t v50 = v187;
          uint64_t v33 = v184;
        }
      }
    }
    if (v50 < v33)
    {
      if (__OFSUB__(v50, v40)) {
        goto LABEL_168;
      }
      if (v50 - v40 < v165)
      {
        if (__OFADD__(v40, v165)) {
          goto LABEL_171;
        }
        if (v40 + v165 >= v33) {
          uint64_t v80 = v33;
        }
        else {
          uint64_t v80 = v40 + v165;
        }
        if (v80 >= v40)
        {
          if (v50 != v80)
          {
            uint64_t v166 = v41;
            uint64_t v81 = *(void *)(v51 + 72);
            uint64_t v82 = v81 * (v50 - 1);
            uint64_t v183 = v2;
            uint64_t v184 = v81;
            uint64_t v83 = v50 * v81;
            uint64_t v172 = v80;
            do
            {
              uint64_t v85 = 0;
              uint64_t v86 = v40;
              unint64_t v186 = v82;
              uint64_t v187 = v50;
              unint64_t v185 = v83;
              while (1)
              {
                uint64_t v87 = *v193;
                uint64_t v189 = v83 + v85;
                uint64_t v88 = v83 + v85 + v87;
                uint64_t v89 = v190;
                sub_1C0AC9474(v88, v190, type metadata accessor for DebugFormatTestCaseResult);
                sub_1C0AC9474(v82 + v85 + v87, v195, type metadata accessor for DebugFormatTestCaseResult);
                sub_1C0AC9474(v89 + *(int *)(v194 + 24), v191, type metadata accessor for DebugFormatTestCaseResult.Result);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    sub_1C0ACBB78(v191, type metadata accessor for DebugFormatTestCaseResult.Result);
                    goto LABEL_76;
                  case 2u:
                  case 3u:
                    uint64_t v90 = v191;

                    sub_1BFFD07D8(v90);
LABEL_76:
                    unint64_t v95 = 0;
                    break;
                  default:
                    uint64_t v91 = v181;
                    sub_1C0AC94DC(v191, v181, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
                    uint64_t v92 = *(void *)(v91 + *(int *)(v182 + 28) + 40);
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain();
                    uint64_t v93 = v183;
                    uint64_t v94 = sub_1C0AC6F70(v92);
                    uint64_t v183 = v93;
                    unint64_t v95 = *(void *)(v94 + 16);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1C0ACBB78(v91, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
                    break;
                }
                sub_1C0AC9474(v195 + *(int *)(v194 + 24), v192, type metadata accessor for DebugFormatTestCaseResult.Result);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    sub_1C0ACBB78(v192, type metadata accessor for DebugFormatTestCaseResult.Result);
                    goto LABEL_81;
                  case 2u:
                  case 3u:
                    uint64_t v96 = v192;

                    sub_1BFFD07D8(v96);
LABEL_81:
                    unint64_t v101 = 0;
                    break;
                  default:
                    uint64_t v97 = v181;
                    sub_1C0AC94DC(v192, v181, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
                    uint64_t v98 = *(void *)(v97 + *(int *)(v182 + 28) + 40);
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain();
                    uint64_t v99 = v183;
                    uint64_t v100 = sub_1C0AC6F70(v98);
                    uint64_t v183 = v99;
                    unint64_t v101 = *(void *)(v100 + 16);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1C0ACBB78(v97, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
                    break;
                }
                sub_1C0ACBB78(v195, type metadata accessor for DebugFormatTestCaseResult);
                sub_1C0ACBB78(v190, type metadata accessor for DebugFormatTestCaseResult);
                if (v101 >= v95) {
                  break;
                }
                uint64_t v102 = *v193;
                uint64_t v82 = v186;
                uint64_t v84 = v187;
                uint64_t v83 = v185;
                if (!*v193) {
                  goto LABEL_173;
                }
                uint64_t v103 = v102 + v186 + v85;
                sub_1C0AC94DC(v102 + v185 + v85, v188, type metadata accessor for DebugFormatTestCaseResult);
                swift_arrayInitWithTakeFrontToBack();
                sub_1C0AC94DC(v188, v103, type metadata accessor for DebugFormatTestCaseResult);
                v85 -= v184;
                if (v84 == ++v86) {
                  goto LABEL_69;
                }
              }
              uint64_t v82 = v186;
              uint64_t v84 = v187;
              uint64_t v83 = v185;
LABEL_69:
              uint64_t v50 = v84 + 1;
              v82 += v184;
              v83 += v184;
              uint64_t v40 = v174;
            }
            while (v50 != v172);
            uint64_t v50 = v172;
            uint64_t v2 = v183;
            uint64_t v41 = v166;
          }
          goto LABEL_86;
        }
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        sub_1C15203FC();
        __break(1u);
        JUMPOUT(0x1C0ACA9A0);
      }
    }
LABEL_86:
    if (v50 < v40) {
      goto LABEL_163;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v187 = v50;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v41 = sub_1C0634CC8(0, *((void *)v41 + 2) + 1, 1, v41);
    }
    unint64_t v106 = *((void *)v41 + 2);
    unint64_t v105 = *((void *)v41 + 3);
    unint64_t v42 = v106 + 1;
    if (v106 >= v105 >> 1) {
      uint64_t v41 = sub_1C0634CC8((char *)(v105 > 1), v106 + 1, 1, v41);
    }
    *((void *)v41 + 2) = v42;
    uint64_t v107 = v41 + 32;
    uint64_t v108 = &v41[16 * v106 + 32];
    uint64_t v109 = v187;
    *(void *)uint64_t v108 = v40;
    *((void *)v108 + 1) = v109;
    if (v106)
    {
      while (1)
      {
        unint64_t v110 = v42 - 1;
        if (v42 >= 4)
        {
          uint64_t v115 = &v107[16 * v42];
          uint64_t v116 = *((void *)v115 - 8);
          uint64_t v117 = *((void *)v115 - 7);
          BOOL v121 = __OFSUB__(v117, v116);
          uint64_t v118 = v117 - v116;
          if (v121) {
            goto LABEL_152;
          }
          uint64_t v120 = *((void *)v115 - 6);
          uint64_t v119 = *((void *)v115 - 5);
          BOOL v121 = __OFSUB__(v119, v120);
          uint64_t v113 = v119 - v120;
          char v114 = v121;
          if (v121) {
            goto LABEL_153;
          }
          unint64_t v122 = v42 - 2;
          uint64_t v123 = &v107[16 * v42 - 32];
          uint64_t v125 = *(void *)v123;
          uint64_t v124 = *((void *)v123 + 1);
          BOOL v121 = __OFSUB__(v124, v125);
          uint64_t v126 = v124 - v125;
          if (v121) {
            goto LABEL_155;
          }
          BOOL v121 = __OFADD__(v113, v126);
          uint64_t v127 = v113 + v126;
          if (v121) {
            goto LABEL_158;
          }
          if (v127 >= v118)
          {
            uint64_t v145 = &v107[16 * v110];
            uint64_t v147 = *(void *)v145;
            uint64_t v146 = *((void *)v145 + 1);
            BOOL v121 = __OFSUB__(v146, v147);
            uint64_t v148 = v146 - v147;
            if (v121) {
              goto LABEL_162;
            }
            BOOL v138 = v113 < v148;
            goto LABEL_123;
          }
        }
        else
        {
          if (v42 != 3)
          {
            uint64_t v139 = *((void *)v41 + 4);
            uint64_t v140 = *((void *)v41 + 5);
            BOOL v121 = __OFSUB__(v140, v139);
            uint64_t v132 = v140 - v139;
            char v133 = v121;
            goto LABEL_117;
          }
          uint64_t v112 = *((void *)v41 + 4);
          uint64_t v111 = *((void *)v41 + 5);
          BOOL v121 = __OFSUB__(v111, v112);
          uint64_t v113 = v111 - v112;
          char v114 = v121;
        }
        if (v114) {
          goto LABEL_154;
        }
        unint64_t v122 = v42 - 2;
        uint64_t v128 = &v107[16 * v42 - 32];
        uint64_t v130 = *(void *)v128;
        uint64_t v129 = *((void *)v128 + 1);
        BOOL v131 = __OFSUB__(v129, v130);
        uint64_t v132 = v129 - v130;
        char v133 = v131;
        if (v131) {
          goto LABEL_157;
        }
        uint64_t v134 = &v107[16 * v110];
        uint64_t v136 = *(void *)v134;
        uint64_t v135 = *((void *)v134 + 1);
        BOOL v121 = __OFSUB__(v135, v136);
        uint64_t v137 = v135 - v136;
        if (v121) {
          goto LABEL_160;
        }
        if (__OFADD__(v132, v137)) {
          goto LABEL_161;
        }
        if (v132 + v137 >= v113)
        {
          BOOL v138 = v113 < v137;
LABEL_123:
          if (v138) {
            unint64_t v110 = v122;
          }
          goto LABEL_125;
        }
LABEL_117:
        if (v133) {
          goto LABEL_156;
        }
        uint64_t v141 = &v107[16 * v110];
        uint64_t v143 = *(void *)v141;
        uint64_t v142 = *((void *)v141 + 1);
        BOOL v121 = __OFSUB__(v142, v143);
        uint64_t v144 = v142 - v143;
        if (v121) {
          goto LABEL_159;
        }
        if (v144 < v132) {
          goto LABEL_15;
        }
LABEL_125:
        unint64_t v149 = v110 - 1;
        if (v110 - 1 >= v42)
        {
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
          goto LABEL_172;
        }
        if (!*v193) {
          goto LABEL_174;
        }
        uint64_t v150 = v41;
        uint64_t v151 = &v107[16 * v149];
        uint64_t v152 = *(void *)v151;
        uint64_t v153 = &v107[16 * v110];
        uint64_t v154 = *((void *)v153 + 1);
        sub_1C0ACB004(*v193 + *(void *)(v179 + 72) * *(void *)v151, *v193 + *(void *)(v179 + 72) * *(void *)v153, *v193 + *(void *)(v179 + 72) * v154, v177);
        if (v2) {
          goto LABEL_145;
        }
        if (v154 < v152) {
          goto LABEL_149;
        }
        if (v110 > *((void *)v150 + 2)) {
          goto LABEL_150;
        }
        *(void *)uint64_t v151 = v152;
        *(void *)&v107[16 * v149 + 8] = v154;
        unint64_t v155 = *((void *)v150 + 2);
        if (v110 >= v155) {
          goto LABEL_151;
        }
        uint64_t v41 = v150;
        unint64_t v42 = v155 - 1;
        memmove(&v107[16 * v110], v153 + 16, 16 * (v155 - 1 - v110));
        *((void *)v150 + 2) = v155 - 1;
        if (v155 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v42 = 1;
LABEL_15:
    uint64_t v33 = v193[1];
    uint64_t v40 = v187;
  }
  while (v187 < v33);
  uint64_t v39 = v164;
LABEL_134:
  uint64_t v164 = v39;
  if (v42 >= 2)
  {
    uint64_t v156 = *v193;
    do
    {
      unint64_t v157 = v42 - 2;
      if (v42 < 2) {
        goto LABEL_164;
      }
      if (!v156) {
        goto LABEL_176;
      }
      __int16 v158 = v41;
      uint64_t v159 = v41 + 32;
      uint64_t v160 = *(void *)&v41[16 * v157 + 32];
      uint64_t v161 = *(void *)&v41[16 * v42 + 24];
      sub_1C0ACB004(v156 + *(void *)(v179 + 72) * v160, v156 + *(void *)(v179 + 72) * *(void *)&v159[16 * v42 - 16], v156 + *(void *)(v179 + 72) * v161, v177);
      if (v2) {
        break;
      }
      if (v161 < v160) {
        goto LABEL_165;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        __int16 v158 = sub_1C063604C((uint64_t)v158);
      }
      if (v157 >= *((void *)v158 + 2)) {
        goto LABEL_166;
      }
      uint64_t v162 = &v158[16 * v157 + 32];
      *(void *)uint64_t v162 = v160;
      *((void *)v162 + 1) = v161;
      unint64_t v163 = *((void *)v158 + 2);
      if (v42 > v163) {
        goto LABEL_167;
      }
      uint64_t v41 = v158;
      memmove(&v158[16 * v42 + 16], &v158[16 * v42 + 32], 16 * (v163 - v42));
      *((void *)v158 + 2) = v163 - 1;
      unint64_t v42 = v163 - 1;
    }
    while (v163 > 2);
  }
LABEL_145:
  swift_bridgeObjectRelease();
  *(void *)(v164 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C0ACAA00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v39 = a1;
  uint64_t v42 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v52);
  uint64_t v50 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v37 - v10);
  uint64_t v55 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1F4188790](v55);
  uint64_t v48 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v37 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v51 = (uint64_t)&v37 - v18;
  uint64_t v38 = a2;
  if (a3 != a2)
  {
    uint64_t v45 = *(void *)(v17 + 72);
    uint64_t v53 = v45 * a3;
    uint64_t v54 = v45 * (a3 - 1);
    uint64_t v40 = a4;
    uint64_t v43 = v11;
    char v47 = v15;
    do
    {
      uint64_t v20 = 0;
      uint64_t v21 = v39;
      uint64_t v46 = a3;
      while (1)
      {
        uint64_t v22 = *a4;
        uint64_t v49 = v53 + v20;
        uint64_t v23 = v51;
        sub_1C0AC9474(v53 + v20 + v22, v51, type metadata accessor for DebugFormatTestCaseResult);
        sub_1C0AC9474(v54 + v20 + v22, (uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
        sub_1C0AC9474(v23 + *(int *)(v55 + 24), (uint64_t)v11, type metadata accessor for DebugFormatTestCaseResult.Result);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1C0ACBB78((uint64_t)v11, type metadata accessor for DebugFormatTestCaseResult.Result);
            goto LABEL_12;
          case 2u:
          case 3u:

            sub_1BFFD07D8((uint64_t)v11);
LABEL_12:
            unint64_t v28 = 0;
            break;
          default:
            uint64_t v24 = v41;
            sub_1C0AC94DC((uint64_t)v11, v41, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
            uint64_t v25 = *(void *)(v24 + *(int *)(v42 + 28) + 40);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v26 = v44;
            uint64_t v27 = sub_1C0AC6F70(v25);
            uint64_t v44 = v26;
            unint64_t v28 = *(void *)(v27 + 16);
            uint64_t v15 = v47;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a4 = v40;
            swift_bridgeObjectRelease();
            sub_1C0ACBB78(v24, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
            break;
        }
        sub_1C0AC9474((uint64_t)&v15[*(int *)(v55 + 24)], v50, type metadata accessor for DebugFormatTestCaseResult.Result);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1C0ACBB78(v50, type metadata accessor for DebugFormatTestCaseResult.Result);
            goto LABEL_17;
          case 2u:
          case 3u:
            uint64_t v29 = v50;

            sub_1BFFD07D8(v29);
LABEL_17:
            unint64_t v34 = 0;
            break;
          default:
            uint64_t v30 = v41;
            sub_1C0AC94DC(v50, v41, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
            uint64_t v31 = *(void *)(v30 + *(int *)(v42 + 28) + 40);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v32 = v44;
            uint64_t v33 = sub_1C0AC6F70(v31);
            uint64_t v44 = v32;
            unint64_t v34 = *(void *)(v33 + 16);
            uint64_t v15 = v47;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a4 = v40;
            swift_bridgeObjectRelease();
            sub_1C0ACBB78(v30, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
            break;
        }
        sub_1C0ACBB78((uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
        sub_1C0ACBB78(v51, type metadata accessor for DebugFormatTestCaseResult);
        if (v34 >= v28) {
          break;
        }
        uint64_t v35 = *a4;
        uint64_t v11 = v43;
        if (!*a4)
        {
          __break(1u);
          JUMPOUT(0x1C0ACAFE4);
        }
        uint64_t v36 = v35 + v54 + v20;
        sub_1C0AC94DC(v35 + v53 + v20, v48, type metadata accessor for DebugFormatTestCaseResult);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C0AC94DC(v48, v36, type metadata accessor for DebugFormatTestCaseResult);
        uint64_t v19 = v46;
        v20 -= v45;
        ++v21;
        uint64_t v15 = v47;
        if (v46 == v21) {
          goto LABEL_5;
        }
      }
      uint64_t v19 = v46;
      uint64_t v11 = v43;
LABEL_5:
      a3 = v19 + 1;
      v54 += v45;
      v53 += v45;
    }
    while (a3 != v38);
  }
}

uint64_t sub_1C0ACB004(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v77 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v86);
  uint64_t v83 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (uint64_t)&v73 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v81 = (unint64_t)&v73 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (id *)((char *)&v73 - v15);
  uint64_t v17 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1F4188790](v17);
  unint64_t v84 = (unint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v80 = (uint64_t)&v73 - v20;
  MEMORY[0x1F4188790](v21);
  unint64_t v78 = (unint64_t)&v73 - v22;
  MEMORY[0x1F4188790](v23);
  unint64_t v79 = (unint64_t)&v73 - v24;
  uint64_t v26 = *(void *)(v25 + 72);
  if (!v26)
  {
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  unint64_t v27 = a1;
  if (a2 - a1 == 0x8000000000000000 && v26 == -1) {
    goto LABEL_82;
  }
  int64_t v28 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v26 == -1) {
    goto LABEL_83;
  }
  uint64_t v29 = (uint64_t)(a2 - a1) / v26;
  unint64_t v89 = a1;
  unint64_t v88 = a4;
  uint64_t v30 = v28 / v26;
  uint64_t v74 = v17;
  if (v29 < v28 / v26)
  {
    if ((v29 & 0x8000000000000000) == 0)
    {
      uint64_t v31 = v29 * v26;
      if (a4 < v27 || v27 + v31 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != v27)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v84 = a4 + v31;
      unint64_t v87 = a4 + v31;
      if (v31 >= 1 && a2 < a3)
      {
        uint64_t v83 = v26;
        do
        {
          unint64_t v34 = v79;
          sub_1C0AC9474(a2, v79, type metadata accessor for DebugFormatTestCaseResult);
          uint64_t v35 = v78;
          sub_1C0AC9474(a4, v78, type metadata accessor for DebugFormatTestCaseResult);
          sub_1C0AC9474(v34 + *(int *)(v17 + 24), (uint64_t)v16, type metadata accessor for DebugFormatTestCaseResult.Result);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1C0ACBB78((uint64_t)v16, type metadata accessor for DebugFormatTestCaseResult.Result);
              goto LABEL_27;
            case 2u:
            case 3u:

              sub_1BFFD07D8((uint64_t)v16);
LABEL_27:
              unint64_t v40 = 0;
              break;
            default:
              uint64_t v36 = v76;
              sub_1C0AC94DC((uint64_t)v16, v76, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              uint64_t v37 = *(void *)(v36 + *(int *)(v77 + 28) + 40);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v38 = v85;
              uint64_t v39 = sub_1C0AC6F70(v37);
              uint64_t v85 = v38;
              unint64_t v40 = *(void *)(v39 + 16);
              uint64_t v35 = v78;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1C0ACBB78(v36, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              break;
          }
          sub_1C0AC9474(v35 + *(int *)(v17 + 24), v81, type metadata accessor for DebugFormatTestCaseResult.Result);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1C0ACBB78(v81, type metadata accessor for DebugFormatTestCaseResult.Result);
              goto LABEL_32;
            case 2u:
            case 3u:
              uint64_t v41 = v81;

              sub_1BFFD07D8(v41);
LABEL_32:
              unint64_t v47 = 0;
              break;
            default:
              unint64_t v42 = a3;
              uint64_t v43 = v76;
              sub_1C0AC94DC(v81, v76, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              uint64_t v44 = *(void *)(v43 + *(int *)(v77 + 28) + 40);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v45 = v85;
              uint64_t v46 = sub_1C0AC6F70(v44);
              uint64_t v85 = v45;
              unint64_t v47 = *(void *)(v46 + 16);
              uint64_t v35 = v78;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v48 = v43;
              a3 = v42;
              uint64_t v17 = v74;
              sub_1C0ACBB78(v48, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
              break;
          }
          sub_1C0ACBB78(v35, type metadata accessor for DebugFormatTestCaseResult);
          sub_1C0ACBB78(v79, type metadata accessor for DebugFormatTestCaseResult);
          unint64_t v49 = v89;
          if (v47 >= v40)
          {
            uint64_t v50 = v83;
            unint64_t v52 = v88 + v83;
            if (v89 < v88 || v89 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v89 != v88)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v88 = v52;
            unint64_t v51 = a2;
          }
          else
          {
            uint64_t v50 = v83;
            unint64_t v51 = a2 + v83;
            if (v89 < a2 || v89 >= v51)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v89 == a2)
            {
              unint64_t v49 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v89 = v49 + v50;
          a4 = v88;
          if (v88 >= v84) {
            break;
          }
          a2 = v51;
        }
        while (v51 < a3);
      }
      goto LABEL_80;
    }
LABEL_84:
    sub_1C152052C();
    __break(1u);
    JUMPOUT(0x1C0ACBB38);
  }
  if (v30 < 0) {
    goto LABEL_84;
  }
  unint64_t v79 = a1;
  uint64_t v32 = v30 * v26;
  if (a4 < a2 || a2 + v32 <= a4)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a4 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  unint64_t v53 = a4 + v32;
  unint64_t v87 = a4 + v32;
  unint64_t v89 = a2;
  if (v32 >= 1 && v79 < a2)
  {
    uint64_t v55 = -v26;
    unint64_t v78 = a4;
    uint64_t v75 = -v26;
    do
    {
      uint64_t v56 = v80;
      sub_1C0AC9474(v53 + v55, v80, type metadata accessor for DebugFormatTestCaseResult);
      unint64_t v57 = a2 + v55;
      sub_1C0AC9474(a2 + v55, v84, type metadata accessor for DebugFormatTestCaseResult);
      sub_1C0AC9474(v56 + *(int *)(v17 + 24), v82, type metadata accessor for DebugFormatTestCaseResult.Result);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1C0ACBB78(v82, type metadata accessor for DebugFormatTestCaseResult.Result);
          goto LABEL_59;
        case 2u:
        case 3u:
          uint64_t v58 = v82;

          sub_1BFFD07D8(v58);
LABEL_59:
          unint64_t v81 = 0;
          break;
        default:
          uint64_t v59 = v76;
          sub_1C0AC94DC(v82, v76, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          uint64_t v60 = *(void *)(v59 + *(int *)(v77 + 28) + 40);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v61 = v85;
          uint64_t v62 = sub_1C0AC6F70(v60);
          uint64_t v85 = v61;
          unint64_t v81 = *(void *)(v62 + 16);
          uint64_t v55 = v75;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v17 = v74;
          swift_bridgeObjectRelease();
          sub_1C0ACBB78(v59, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          break;
      }
      sub_1C0AC9474(v84 + *(int *)(v17 + 24), v83, type metadata accessor for DebugFormatTestCaseResult.Result);
      unint64_t v63 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v64 = v85;
          sub_1C0ACBB78(v83, type metadata accessor for DebugFormatTestCaseResult.Result);
          goto LABEL_64;
        case 2u:
        case 3u:
          uint64_t v64 = v85;
          uint64_t v65 = v83;

          sub_1BFFD07D8(v65);
LABEL_64:
          unint64_t v68 = 0;
          break;
        default:
          uint64_t v66 = v76;
          sub_1C0AC94DC(v83, v76, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          uint64_t v67 = *(void *)(v66 + *(int *)(v77 + 28) + 40);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v64 = v85;
          unint64_t v68 = *(void *)(sub_1C0AC6F70(v67) + 16);
          uint64_t v55 = v75;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v17 = v74;
          swift_bridgeObjectRelease();
          sub_1C0ACBB78(v66, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          break;
      }
      unint64_t v69 = v63 + v55;
      sub_1C0ACBB78(v84, type metadata accessor for DebugFormatTestCaseResult);
      sub_1C0ACBB78(v80, type metadata accessor for DebugFormatTestCaseResult);
      uint64_t v85 = v64;
      if (v68 >= v81)
      {
        unint64_t v71 = v87;
        v87 += v55;
        unint64_t v70 = v78;
        if (v63 < v71 || v69 >= v71)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 != v71)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v57 = a2;
      }
      else
      {
        unint64_t v70 = v78;
        if (v63 < a2 || v69 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v55 = v75;
        }
        else
        {
          uint64_t v55 = v75;
          if (v63 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v89 += v55;
      }
      unint64_t v53 = v87;
      if (v87 <= v70) {
        break;
      }
      a2 = v57;
      a3 = v69;
    }
    while (v57 > v79);
  }
LABEL_80:
  sub_1C0635E68(&v89, &v88, (uint64_t *)&v87);
  return 1;
}

uint64_t sub_1C0ACBB78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0ACBBD8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0ACBC20(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections);
    if (*(void *)(v2 + 16) > result) {
      return *(void *)&aNone_28[8 * *(char *)(v2 + 16 * result + 32)];
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0ACBC6C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FeedGroupItem();
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (uint64_t)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return v6;
  }
  v28[1] = v1;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1C05F75BC(0, v5, 0);
  uint64_t result = sub_1BFE4E9CC(a1);
  uint64_t v9 = result;
  uint64_t v10 = 0;
  uint64_t v11 = a1 + 64;
  char v12 = *(unsigned char *)(a1 + 32);
  v28[0] = a1 + 88;
  uint64_t v13 = a1;
  int64_t v29 = v5;
  uint64_t v30 = v8;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << v12)
  {
    unint64_t v16 = (unint64_t)v9 >> 6;
    if ((*(void *)(v11 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v13 + 36) != v8) {
      goto LABEL_28;
    }
    uint64_t v17 = v11;
    uint64_t v18 = v13;
    sub_1BFC66384(*(void *)(v13 + 56) + 40 * v9, (uint64_t)v36);
    sub_1BFC773DC(v36, (uint64_t)v33);
    uint64_t v20 = v34;
    uint64_t v19 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    uint64_t v6 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F75BC(0, *(void *)(v6 + 16) + 1, 1);
      uint64_t v6 = v37;
    }
    unint64_t v22 = *(void *)(v6 + 16);
    unint64_t v21 = *(void *)(v6 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1C05F75BC(v21 > 1, v22 + 1, 1);
      uint64_t v6 = v37;
    }
    *(void *)(v6 + 16) = v22 + 1;
    uint64_t result = sub_1C0AD0EEC(v32, v6+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v22, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    char v12 = *(unsigned char *)(v18 + 32);
    unint64_t v14 = 1 << v12;
    if (v9 >= 1 << v12) {
      goto LABEL_29;
    }
    uint64_t v23 = *(void *)(v17 + 8 * v16);
    if ((v23 & (1 << v9)) == 0) {
      goto LABEL_30;
    }
    uint64_t v13 = v18;
    LODWORD(v8) = v30;
    if (*(_DWORD *)(v18 + 36) != v30) {
      goto LABEL_31;
    }
    uint64_t v11 = v17;
    unint64_t v24 = v23 & (-2 << (v9 & 0x3F));
    if (v24)
    {
      unint64_t v14 = __clz(__rbit64(v24)) | v9 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v29;
    }
    else
    {
      unint64_t v25 = v16 + 1;
      unint64_t v26 = (v14 + 63) >> 6;
      int64_t v15 = v29;
      if (v16 + 1 < v26)
      {
        unint64_t v27 = *(void *)(v17 + 8 * v25);
        if (!v27)
        {
          unint64_t v25 = v16 + 2;
          if (v16 + 2 >= v26) {
            goto LABEL_4;
          }
          unint64_t v27 = *(void *)(v17 + 8 * v25);
          if (!v27)
          {
            while (v26 - 3 != v16)
            {
              unint64_t v27 = *(void *)(v28[0] + 8 * v16++);
              if (v27)
              {
                unint64_t v25 = v16 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v14 = __clz(__rbit64(v27)) + (v25 << 6);
      }
    }
LABEL_4:
    ++v10;
    uint64_t v9 = v14;
    if (v10 == v15) {
      return v6;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C0ACBFAC(void *a1)
{
  uint64_t v19 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1F4188790](v19);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)(v1 + 16) = 0x676E69646E6962;
  *(void *)(v1 + 24) = 0xE700000000000000;
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1 + 1, v5);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 64))(&v20, v5, v6);
  uint64_t v7 = v22;
  if (v22)
  {
    uint64_t v8 = v23;
    __swift_project_boxed_opaque_existential_1(&v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  }
  else
  {
    sub_1C0AD0E8C((uint64_t)&v20, (uint64_t (*)(void))sub_1BFECFBEC);
  }
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1 + 1, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v9, v10);
  uint64_t v13 = v12;
  unint64_t v20 = 0x646574726F707845;
  unint64_t v21 = 0xEA0000000000203ALL;
  sub_1C151E80C();
  unint64_t v15 = v20;
  unint64_t v14 = v21;
  unint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xD000000000000016;
  unint64_t v21 = 0x80000001C161B730;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v16 = v20;
  unint64_t v17 = v21;
  sub_1C0ACC238((char *)v4 + *(int *)(v19 + 28));
  *uint64_t v4 = v11;
  v4[1] = v13;
  v4[2] = v15;
  v4[3] = v14;
  void v4[4] = v16;
  v4[5] = v17;
  sub_1C0AD0E8C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1C0AD0EEC((uint64_t)v4, v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatBindingExportRequest_data, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
  return v1;
}

uint64_t sub_1C0ACC238@<X0>(char *a1@<X8>)
{
  uint64_t v159 = a1;
  uint64_t v2 = sub_1C151631C();
  uint64_t v157 = *(void *)(v2 - 8);
  uint64_t v158 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v156 = (char *)&v149 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v150 = (char *)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBCA80(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v161 = (char *)&v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBC130();
  uint64_t v160 = v8;
  uint64_t v162 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v163 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBC1C4(0);
  uint64_t v151 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v152 = (uint64_t)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatContentSubgroup();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v153 = (int *)v12;
  uint64_t v154 = v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v155 = (uint64_t *)((char *)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1F4188790](v173);
  uint64_t v172 = (uint64_t *)((char *)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v171 = (uint64_t *)((char *)&v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v178 = (uint64_t)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (unint64_t)&v149 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE3854(0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v164 = (uint64_t)&v149 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  int v170 = (char *)&v149 - v26;
  MEMORY[0x1F4188790](v27);
  int64_t v29 = (uint64_t *)((char *)&v149 - v28);
  uint64_t v30 = sub_1C151D6DC();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 56);
  uint64_t v33 = v31 + 56;
  uint64_t v183 = v29;
  uint64_t v168 = v32;
  uint64_t v169 = v30;
  ((void (*)(void *, uint64_t, uint64_t))v32)(v29, 1, 1);
  uint64_t v198 = MEMORY[0x1E4FBC860];
  uint64_t v199 = MEMORY[0x1E4FBC860];
  uint64_t v34 = v1[8];
  uint64_t v35 = v34 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & *(void *)(v34 + 64);
  uint64_t v184 = (void *)((unint64_t)(v36 + 63) >> 6);
  *(void *)&long long v167 = v33;
  uint64_t v165 = v1;
  uint64_t v166 = (void (**)(char *, char *, uint64_t))(v33 - 40);
  swift_bridgeObjectRetain();
  uint64_t v176 = 0;
  uint64_t v177 = 0;
  uint64_t v181 = 0;
  uint64_t v182 = 0;
  uint64_t v174 = 0;
  uint64_t v175 = 0;
  uint64_t v179 = 0;
  uint64_t v180 = 0;
  uint64_t v39 = 0;
  while (1)
  {
    if (v38)
    {
      unint64_t v44 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v45 = v44 | (v39 << 6);
      goto LABEL_25;
    }
    uint64_t v46 = v39 + 1;
    if (__OFADD__(v39, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v46 >= (uint64_t)v184) {
      goto LABEL_39;
    }
    unint64_t v47 = *(void *)(v35 + 8 * v46);
    ++v39;
    if (!v47)
    {
      uint64_t v39 = v46 + 1;
      if (v46 + 1 >= (uint64_t)v184) {
        goto LABEL_39;
      }
      unint64_t v47 = *(void *)(v35 + 8 * v39);
      if (!v47)
      {
        uint64_t v39 = v46 + 2;
        if (v46 + 2 >= (uint64_t)v184) {
          goto LABEL_39;
        }
        unint64_t v47 = *(void *)(v35 + 8 * v39);
        if (!v47)
        {
          uint64_t v39 = v46 + 3;
          if (v46 + 3 >= (uint64_t)v184) {
            goto LABEL_39;
          }
          unint64_t v47 = *(void *)(v35 + 8 * v39);
          if (!v47) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v38 = (v47 - 1) & v47;
    unint64_t v45 = __clz(__rbit64(v47)) + (v39 << 6);
LABEL_25:
    sub_1BFC66384(*(void *)(v34 + 56) + 40 * v45, (uint64_t)v197);
    sub_1BFC773DC(v197, (uint64_t)v194);
    int64_t v29 = v195;
    uint64_t v49 = v196;
    __swift_project_boxed_opaque_existential_1(v194, (uint64_t)v195);
    (*(void (**)(void *, uint64_t))(v49 + 8))(v29, v49);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_bridgeObjectRelease();
        long long v52 = *(_OWORD *)(v22 + 96);
        v192[0] = *(_OWORD *)(v22 + 112);
        *(_OWORD *)((char *)v192 + 9) = *(_OWORD *)(v22 + 121);
        long long v53 = *(_OWORD *)(v22 + 16);
        long long v185 = *(_OWORD *)v22;
        long long v186 = v53;
        long long v54 = *(_OWORD *)(v22 + 48);
        long long v187 = *(_OWORD *)(v22 + 32);
        long long v188 = v54;
        long long v55 = *(_OWORD *)(v22 + 64);
        long long v190 = *(_OWORD *)(v22 + 80);
        long long v191 = v52;
        long long v189 = v55;
        id v56 = objc_msgSend((id)v185, sel_identifier);
        uint64_t v174 = sub_1C151E62C();
        uint64_t v179 = v57;

        sub_1C01880A4((uint64_t)&v185);
        break;
      case 2u:
        int64_t v29 = *(void **)v22;
        uint64_t v58 = *(void *)(v22 + 8);
        uint64_t v59 = sub_1C0ACDC90(*(void *)v22);
        sub_1C1047944(v59);
        uint64_t v60 = sub_1C0ACDC90(v58);
        sub_1C1047944(v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 3u:
      case 9u:
      case 0xBu:
        unint64_t v42 = (uint64_t (*)(void))type metadata accessor for FeedGroupItem;
        uint64_t v43 = v22;
        goto LABEL_5;
      case 4u:
        long long v61 = *(_OWORD *)(v22 + 192);
        long long v62 = *(_OWORD *)(v22 + 224);
        v192[6] = *(_OWORD *)(v22 + 208);
        v192[7] = v62;
        long long v63 = *(_OWORD *)(v22 + 128);
        long long v64 = *(_OWORD *)(v22 + 160);
        long long v65 = *(_OWORD *)(v22 + 176);
        v192[2] = *(_OWORD *)(v22 + 144);
        v192[3] = v64;
        v192[4] = v65;
        v192[5] = v61;
        long long v66 = *(_OWORD *)(v22 + 80);
        long long v189 = *(_OWORD *)(v22 + 64);
        long long v190 = v66;
        long long v67 = *(_OWORD *)(v22 + 112);
        long long v191 = *(_OWORD *)(v22 + 96);
        uint64_t v193 = *(void *)(v22 + 240);
        v192[0] = v67;
        v192[1] = v63;
        long long v68 = *(_OWORD *)(v22 + 16);
        long long v185 = *(_OWORD *)v22;
        long long v186 = v68;
        long long v69 = *(_OWORD *)(v22 + 48);
        long long v187 = *(_OWORD *)(v22 + 32);
        long long v188 = v69;
        sub_1C01F0AC8((uint64_t)&v185);
        break;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v70 = v178;
        sub_1C0AD0EEC(v22, v178, type metadata accessor for FeedHeadline);
        id v71 = objc_msgSend(*(id *)(v70 + 40), sel_articleID);
        if (v71)
        {
          uint64_t v72 = v71;
          uint64_t v175 = sub_1C151E62C();
          uint64_t v180 = v73;
        }
        else
        {
          uint64_t v175 = 0;
          uint64_t v180 = 0;
        }
        unint64_t v42 = type metadata accessor for FeedHeadline;
        uint64_t v43 = v178;
        goto LABEL_5;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v40 = (uint64_t)v171;
        sub_1C0AD0EEC(v22, (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        uint64_t v41 = *(void *)(v40 + 48);
        uint64_t v177 = *(void *)(v40 + 40);
        uint64_t v182 = v41;
        swift_bridgeObjectRetain();
        unint64_t v42 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
        uint64_t v43 = v40;
LABEL_5:
        sub_1C0AD0E8C(v43, v42);
        break;
      case 7u:

        break;
      case 8u:
        goto LABEL_35;
      case 0xAu:
        int64_t v29 = *(void **)(v22 + 56);
        sub_1BFEEFC20(*(void *)(v22 + 24), *(void *)(v22 + 32));
LABEL_35:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0xCu:
        sub_1C0AD0E8C((uint64_t)v183, (uint64_t (*)(void))sub_1BFEE3854);
        int64_t v29 = v172;
        sub_1C0AD0EEC(v22, (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
        uint64_t v74 = (uint64_t)v170;
        uint64_t v75 = v34;
        uint64_t v76 = v20;
        uint64_t v77 = v35;
        uint64_t v78 = v169;
        (*v166)(v170, (char *)v29 + *(int *)(v173 + 20), v169);
        sub_1C0AD0E8C((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
        uint64_t v79 = v78;
        uint64_t v35 = v77;
        uint64_t v20 = v76;
        uint64_t v34 = v75;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v74, 0, 1, v79);
        sub_1C0AD0EEC(v74, (uint64_t)v183, (uint64_t (*)(void))sub_1BFEE3854);
        break;
      default:
        swift_bridgeObjectRelease();
        uint64_t v50 = *(void **)(v22 + 8);
        int64_t v29 = objc_msgSend(*(id *)v22, sel_identifier);
        uint64_t v176 = sub_1C151E62C();
        uint64_t v181 = v51;
        swift_unknownObjectRelease();

        break;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v194);
  }
  uint64_t v48 = v46 + 4;
  if (v48 < (uint64_t)v184)
  {
    unint64_t v47 = *(void *)(v35 + 8 * v48);
    if (!v47)
    {
      while (1)
      {
        uint64_t v39 = v48 + 1;
        if (__OFADD__(v48, 1)) {
          break;
        }
        if (v39 >= (uint64_t)v184) {
          goto LABEL_39;
        }
        unint64_t v47 = *(void *)(v35 + 8 * v39);
        ++v48;
        if (v47) {
          goto LABEL_24;
        }
      }
LABEL_54:
      __break(1u);
LABEL_55:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1C15204BC();
      uint64_t v171 = v29;
      if (!v93) {
        goto LABEL_56;
      }
LABEL_43:
      if (v93 >= 1)
      {
        uint64_t v94 = 0;
        do
        {
          if ((v22 & 0xC000000000000001) != 0)
          {
            uint64_t v95 = MEMORY[0x1C18C7CB0](v94, v22);
          }
          else
          {
            uint64_t v95 = *(void *)(v22 + 8 * v94 + 32);
            swift_retain();
          }
          ++v94;
          uint64_t v96 = (uint64_t *)(v95 + *(void *)(v38 + 2704));
          swift_beginAccess();
          uint64_t v97 = *v96;
          swift_bridgeObjectRetain();
          swift_release();
          sub_1BFEC4CAC(v97);
        }
        while (v93 != v94);
        swift_bridgeObjectRelease_n();
        uint64_t v98 = (char *)v194[0];
        goto LABEL_57;
      }
      __break(1u);
LABEL_68:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x1C0ACD588);
    }
    uint64_t v39 = v48;
    goto LABEL_24;
  }
LABEL_39:
  swift_release();
  uint64_t v80 = v165;
  uint64_t v81 = swift_bridgeObjectRetain();
  uint64_t v82 = sub_1C0ACBC6C(v81);
  swift_bridgeObjectRelease();
  uint64_t v173 = sub_1C0605C84(v82);
  swift_bridgeObjectRelease();
  uint64_t v83 = v80 + 1;
  uint64_t v84 = v80[4];
  uint64_t v85 = v80[5];
  __swift_project_boxed_opaque_existential_1(v80 + 1, v84);
  *(void *)&long long v185 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 16))(v84, v85);
  sub_1C0AD0F54(0);
  sub_1C00786E0((unint64_t *)&qword_1EB894420, sub_1C0AD0F54);
  sub_1C00786E0((unint64_t *)&unk_1EB87AF50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  uint64_t v86 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  uint64_t v87 = v80[4];
  uint64_t v88 = v80[5];
  __swift_project_boxed_opaque_existential_1(v80 + 1, v87);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v88 + 64))(&v185, v87, v88);
  uint64_t v89 = *((void *)&v186 + 1);
  uint64_t v184 = v80 + 1;
  uint64_t v178 = 0;
  uint64_t v172 = (void *)v86;
  if (!*((void *)&v186 + 1))
  {
    sub_1C0AD0E8C((uint64_t)&v185, (uint64_t (*)(void))sub_1BFECFBEC);
    int v170 = 0;
    uint64_t v171 = 0;
    uint64_t v34 = MEMORY[0x1E4FBC860];
LABEL_52:
    uint64_t v100 = v162;
    uint64_t v99 = (uint64_t)v163;
    uint64_t v102 = v160;
    uint64_t v101 = (uint64_t)v161;
    goto LABEL_58;
  }
  uint64_t v90 = v187;
  __swift_project_boxed_opaque_existential_1(&v185, *((uint64_t *)&v186 + 1));
  int64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v90 + 40))(v89, v90);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v185);
  uint64_t v91 = MEMORY[0x1E4FBC860];
  if (!v29)
  {
    int v170 = 0;
    uint64_t v171 = 0;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    goto LABEL_52;
  }
  unint64_t v38 = (unint64_t)&type metadata for FormatContentSlotItem;
  uint64_t v92 = (uint64_t *)(v29[6] + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  uint64_t v34 = *v92;
  unint64_t v22 = v29[12];
  v194[0] = v91;
  if (v22 >> 62) {
    goto LABEL_55;
  }
  uint64_t v93 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v171 = v29;
  if (v93) {
    goto LABEL_43;
  }
LABEL_56:
  swift_bridgeObjectRelease_n();
  uint64_t v98 = (char *)MEMORY[0x1E4FBC860];
LABEL_57:
  int v170 = v98;
  uint64_t v100 = v162;
  uint64_t v99 = (uint64_t)v163;
  uint64_t v102 = v160;
  uint64_t v101 = (uint64_t)v161;
  uint64_t v83 = v184;
LABEL_58:
  uint64_t v103 = v165[4];
  uint64_t v104 = v165[5];
  __swift_project_boxed_opaque_existential_1(v83, v103);
  uint64_t v169 = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 88))(v103, v104);
  uint64_t v106 = v105;
  if (qword_1EB87BD00 != -1) {
    swift_once();
  }
  uint64_t v107 = sub_1C151928C();
  uint64_t v108 = __swift_project_value_buffer(v107, (uint64_t)qword_1EB8799C8);
  sub_1BFEDB774(v108, v34, v101);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v101, 1, v102) == 1)
  {
    uint64_t v109 = v150;
    sub_1C1515F7C();
    uint64_t v110 = sub_1C1515FDC();
    uint64_t v111 = *(void *)(v110 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110) == 1) {
      goto LABEL_68;
    }
    sub_1BFEBE33C();
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, (char *)(v99 + *(int *)(v112 + 48)), 0, 0, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v111 + 32))(v99, v109, v110);
    swift_storeEnumTagMultiPayload();
    sub_1C0AD0E8C(v101, (uint64_t (*)(void))sub_1BFEBCA80);
  }
  else
  {
    sub_1C0AD0EEC(v101, v99, (uint64_t (*)(void))sub_1BFEBC130);
  }
  uint64_t v113 = v152;
  sub_1C0AD0F88(v99, v152, (uint64_t (*)(void))sub_1BFEBC130);
  uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFED9DC8(0, &qword_1EB87A778, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBBE00]);
  unint64_t v114 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  uint64_t v115 = swift_allocObject();
  long long v167 = xmmword_1C1529AE0;
  *(_OWORD *)(v115 + 16) = xmmword_1C1529AE0;
  sub_1C0AD0EEC(v99, v115 + v114, (uint64_t (*)(void))sub_1BFEBC130);
  *(void *)(v113 + *(int *)(v151 + 36)) = v115;
  uint64_t v116 = v198;
  swift_bridgeObjectRetain();
  uint64_t v117 = sub_1BFF9CAC4(v173);
  swift_bridgeObjectRelease();
  uint64_t v118 = v165;
  uint64_t v119 = (uint64_t)v172;
  swift_bridgeObjectRetain();
  uint64_t v120 = swift_bridgeObjectRetain();
  unint64_t v121 = sub_1C0AD0AD8(v120, v119);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t v122 = v153;
  uint64_t v123 = v155;
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, (char *)v155 + v153[10], 0, 0, 0, 0);
  *uint64_t v123 = v169;
  v123[1] = v106;
  sub_1C0AD0EEC(v113, (uint64_t)v123 + v122[5], (uint64_t (*)(void))sub_1BFEBC1C4);
  *(uint64_t *)((char *)v123 + v122[6]) = v116;
  *(uint64_t *)((char *)v123 + v122[7]) = v117;
  uint64_t v124 = MEMORY[0x1E4FBC860];
  *(uint64_t *)((char *)v123 + v122[9]) = MEMORY[0x1E4FBC860];
  *(uint64_t *)((char *)v123 + v122[8]) = v121;
  *(uint64_t *)((char *)v123 + v122[12]) = v124;
  *(uint64_t *)((char *)v123 + v122[11]) = v124;
  uint64_t v125 = v118[4];
  uint64_t v126 = v118[5];
  uint64_t v127 = v184;
  __swift_project_boxed_opaque_existential_1(v184, v125);
  uint64_t v172 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v126 + 88))(v125, v126);
  uint64_t v169 = v128;
  uint64_t v129 = v156;
  sub_1C151630C();
  uint64_t v130 = (uint64_t)v183;
  sub_1C0AD0F88((uint64_t)v183, v164, (uint64_t (*)(void))sub_1BFEE3854);
  uint64_t v131 = (uint64_t)v170;
  if (!v170) {
    uint64_t v131 = v124;
  }
  uint64_t v178 = v131;
  sub_1BFED9DC8(0, &qword_1EB87A7B8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, v168);
  unint64_t v132 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
  uint64_t v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = v167;
  sub_1C0AD0F88((uint64_t)v123, v133 + v132, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  uint64_t v173 = v199;
  uint64_t v134 = v118[4];
  uint64_t v135 = v118[5];
  __swift_project_boxed_opaque_existential_1(v127, v134);
  uint64_t v136 = (*(uint64_t (**)(uint64_t, uint64_t))(v135 + 80))(v134, v135);
  swift_release();
  sub_1C0AD0E8C((uint64_t)v123, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  sub_1C0AD0E8C(v130, (uint64_t (*)(void))sub_1BFEE3854);
  uint64_t v137 = v159;
  uint64_t v138 = v169;
  *(void *)uint64_t v159 = v172;
  *((void *)v137 + 1) = v138;
  uint64_t v139 = (int *)type metadata accessor for FormatContent(0);
  (*(void (**)(char *, char *, uint64_t))(v157 + 32))(&v137[v139[5]], v129, v158);
  uint64_t v140 = (uint64_t *)&v137[v139[6]];
  uint64_t v141 = v181;
  *uint64_t v140 = v176;
  v140[1] = v141;
  uint64_t v142 = (uint64_t *)&v137[v139[7]];
  uint64_t v143 = v179;
  uint64_t *v142 = v174;
  v142[1] = v143;
  uint64_t v144 = (uint64_t *)&v137[v139[8]];
  uint64_t v145 = v180;
  *uint64_t v144 = v175;
  v144[1] = v145;
  uint64_t v146 = &v137[v139[9]];
  uint64_t v147 = v182;
  *(void *)uint64_t v146 = v177;
  *((void *)v146 + 1) = v147;
  uint64_t result = sub_1C0AD0EEC(v164, (uint64_t)&v137[v139[10]], (uint64_t (*)(void))sub_1BFEE3854);
  *(void *)&v137[v139[11]] = v124;
  *(void *)&v137[v139[12]] = v124;
  *(void *)&v137[v139[13]] = v124;
  *(void *)&v137[v139[14]] = v178;
  *(void *)&v137[v139[15]] = v133;
  *(void *)&v137[v139[16]] = v173;
  *(void *)&v137[v139[17]] = v136;
  return result;
}