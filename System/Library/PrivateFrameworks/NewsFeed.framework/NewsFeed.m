uint64_t destroy for FormatSelector()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC35218()
{
  sub_1BFC35240();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFC35240()
{
  return *(void *)v0;
}

uint64_t getEnumTagSinglePayload for FormatFeedGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C9CE5C);
}

uint64_t destroy for FormatLayoutValue()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for FeedItemLayoutAttributes()
{
  return &type metadata for FeedItemLayoutAttributes;
}

ValueMetadata *type metadata accessor for AdFeedGroup()
{
  return &type metadata for AdFeedGroup;
}

uint64_t getEnumTagSinglePayload for FormatSourceMapNode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1BFC352FC()
{
  return sub_1BFC35304(*v0);
}

uint64_t sub_1BFC35304(char a1)
{
  uint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x655674616D726F66;
      break;
    case 2:
      unsigned int v3 = 1315858797;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1316512109;
LABEL_5:
      uint64_t result = v3 | 0x5673776500000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000014;
      break;
    case 5:
      uint64_t result = 0xD000000000000014;
      break;
    case 6:
    case 7:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatSourceMapNode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t FeedModel.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

ValueMetadata *type metadata accessor for OfflineModel()
{
  return &type metadata for OfflineModel;
}

uint64_t getEnumTagSinglePayload for FormatLayoutValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x6B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 107);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

void *sub_1BFC354F4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  unsigned int v2 = (*result >> 59) & 0x1E | (*result >> 2) & 1;
  if (v2 > 0x12) {
    *a2 = 10;
  }
  else {
    *a2 = qword_1C15DEE60[v2];
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x74)
  {
    *(void *)uint64_t result = a2 - 117;
    if (a3 >= 0x75) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x75) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BFC35580()
{
  return 1885433183;
}

uint64_t storeEnumTagSinglePayload for SportsConfigResourceParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *_s10CodingTypeOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    *uint64_t result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 39;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNodeKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD9) {
    goto LABEL_17;
  }
  if (a2 + 39 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 39) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 39;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x28;
  int v8 = v6 - 40;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t getEnumTagSinglePayload for FormatColor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x75 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 117);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x74) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t type metadata accessor for FeedContext()
{
  uint64_t result = qword_1EB893AE8;
  if (!qword_1EB893AE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C13735DC);
}

uint64_t sub_1BFC357DC()
{
  return swift_storeEnumTagMultiPayload();
}

ValueMetadata *type metadata accessor for FeedGapOffline()
{
  return &type metadata for FeedGapOffline;
}

uint64_t storeEnumTagSinglePayload for FormatLayoutValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x6A)
  {
    *(void *)uint64_t result = a2 - 107;
    if (a3 >= 0x6B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BFC35850@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BFC3587C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BFC3587C(char a1)
{
  uint64_t result = 2020557416;
  switch(a1)
  {
    case 1:
      uint64_t result = 2020557430;
      break;
    case 2:
      uint64_t result = 0x79616C7265764F68;
      break;
    case 3:
      uint64_t result = 0x79616C7265764F76;
      break;
    case 4:
      uint64_t result = 2003134838;
      break;
    case 5:
      uint64_t result = 1954047348;
      break;
    case 6:
      uint64_t result = 0x6567616D69;
      break;
    case 7:
      uint64_t result = 1835365481;
      break;
    case 8:
      uint64_t result = 0x6563617073;
      break;
    case 9:
      uint64_t result = 0x74657070696E73;
      break;
    case 10:
      uint64_t result = 0x656D656C70707573;
      break;
    case 11:
      uint64_t result = 0x686374697773;
      break;
    case 12:
      uint64_t result = 1953459315;
      break;
    case 13:
      uint64_t result = 0x6269737365636361;
      break;
    case 14:
      uint64_t result = 0x6E6F74747562;
      break;
    case 15:
      uint64_t result = 0x70756F7267;
      break;
    case 16:
      uint64_t result = 0x6465626D45626577;
      break;
    case 17:
      uint64_t result = 0x656D617266;
      break;
    case 18:
      uint64_t result = 0x746165706572;
      break;
    case 19:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 20:
      uint64_t result = 0x6569566574617473;
      break;
    case 21:
      uint64_t result = 0x6D6F74737563;
      break;
    case 22:
      uint64_t result = 0x746E697270;
      break;
    case 23:
      uint64_t result = 0x63697274654D6461;
      break;
    case 24:
      uint64_t result = 1633905005;
      break;
    case 25:
      uint64_t result = 0x4D6465726579616CLL;
      break;
    case 26:
      uint64_t result = 0x6F65646976;
      break;
    case 27:
      uint64_t result = 0x766F436575737369;
      break;
    case 28:
      uint64_t result = 0x6572616873;
      break;
    case 29:
      uint64_t result = 0x6B636F6C62;
      break;
    case 30:
      uint64_t result = 0x797274656D6F6567;
      break;
    case 31:
      uint64_t result = 0x616C506F65646976;
      break;
    case 32:
      uint64_t result = 0x73736572676F7270;
      break;
    case 33:
      uint64_t result = 0x646E69426D657469;
      break;
    case 34:
      uint64_t result = 0x7261696C69787561;
      break;
    case 35:
      uint64_t result = 0x7465736572;
      break;
    case 36:
      uint64_t result = 0x656C626169726176;
      break;
    case 37:
      uint64_t result = 0x696F706B61657262;
      break;
    case 38:
      uint64_t result = 0x6D45656C7A7A7570;
      break;
    case 39:
      uint64_t result = 0x65726F736E6F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatColorNotExpression(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

ValueMetadata *type metadata accessor for FeedItem.PremiumBadge()
{
  return &type metadata for FeedItem.PremiumBadge;
}

uint64_t sub_1BFC35CB4()
{
  return sub_1BFDF99B0(*v0);
}

uint64_t sub_1BFC35CC4()
{
  return sub_1BFC35CCC(*v0);
}

uint64_t sub_1BFC35CCC(char a1)
{
  uint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7374756F79616CLL;
      break;
    case 2:
      uint64_t result = 0x69747265706F7270;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 4:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 5:
      uint64_t result = 0x73746E65746E6F63;
      break;
    case 6:
      uint64_t result = 0x736E6F6974636573;
      break;
    case 7:
      uint64_t result = 0x617461646174656DLL;
      break;
    case 8:
      uint64_t result = 0x737265746C6966;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BFC35DD8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 >= a2)
  {
    switch(v11)
    {
      case 1:
        a1[v8] = 0;
        if (a2) {
          goto LABEL_21;
        }
        break;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        if (a2) {
          goto LABEL_21;
        }
        break;
      case 3:
LABEL_34:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        goto LABEL_20;
      default:
LABEL_20:
        if (a2)
        {
LABEL_21:
          v16 = *(void (**)(void))(v6 + 56);
          v16();
        }
        break;
    }
  }
  else
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        break;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        break;
      default:
        return;
    }
  }
}

uint64_t storeEnumTagSinglePayload for FormatUnderline(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(void *)uint64_t result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 8;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatShadow(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_1BFC3608C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

uint64_t sub_1BFC361D8()
{
  return sub_1BFE4FDE0(*v0);
}

uint64_t getEnumTagSinglePayload for FormatOption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0B3AB2C);
}

uint64_t sub_1BFC361F8()
{
  return sub_1BFC36204(*v0);
}

uint64_t sub_1BFC36204(char a1)
{
  uint64_t result = 0x746C754D6B6E6172;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726F635365736162;
      break;
    case 2:
      uint64_t result = 0x72685465726F6373;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 4:
      uint64_t result = 0x727563634F78616DLL;
      break;
    case 5:
    case 11:
    case 15:
    case 19:
    case 32:
      uint64_t result = 0xD000000000000016;
      break;
    case 6:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      uint64_t result = 0xD000000000000018;
      break;
    case 8:
      uint64_t v3 = 0x646563657270;
      goto LABEL_15;
    case 9:
      uint64_t result = 0xD000000000000013;
      break;
    case 10:
      uint64_t result = 0x6563657250746F6ELL;
      break;
    case 12:
      uint64_t result = 0xD000000000000011;
      break;
    case 13:
      uint64_t result = 0xD000000000000013;
      break;
    case 14:
      uint64_t result = 0x73694470756F7267;
      break;
    case 16:
      uint64_t v3 = 0x776F6C6C6F66;
LABEL_15:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      break;
    case 17:
      uint64_t result = 0xD000000000000013;
      break;
    case 18:
      uint64_t result = 0x6F6C6C6F46746F6ELL;
      break;
    case 20:
      uint64_t result = 0x6557664F73796164;
      break;
    case 21:
      uint64_t result = 0x4F73796144746F6ELL;
      break;
    case 22:
      uint64_t result = 0x44664F73656D6974;
      break;
    case 23:
      uint64_t result = 0x73656D6954746F6ELL;
      break;
    case 24:
      uint64_t result = 0x65646F4D64656566;
      break;
    case 25:
      uint64_t result = 0x4D64656546746F6ELL;
      break;
    case 26:
      uint64_t result = 0x6B53737961776C61;
      break;
    case 27:
      uint64_t result = 0xD000000000000018;
      break;
    case 28:
      uint64_t result = 0xD000000000000010;
      break;
    case 29:
      uint64_t result = 0xD000000000000010;
      break;
    case 30:
      uint64_t result = 0x4F746E65746E6F63;
      break;
    case 31:
      uint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatSelector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSelector(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatColorNotExpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)uint64_t result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatNotExpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x71)
  {
    *(void *)uint64_t result = a2 - 114;
    if (a3 >= 0x72) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x72) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNotExpression(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x72 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 114);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x71) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeedLayoutResult.LayoutPath()
{
  return &type metadata for FeedLayoutResult.LayoutPath;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeStyle.Selector(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 528)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

double storeEnumTagSinglePayload for FormatFill(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 120) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 2 * -a2;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNodeStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 50);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t getEnumTagSinglePayload for FormatAdjustment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x67 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 103);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x66) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1BFC368C0()
{
  return sub_1C07E2868(*v0);
}

uint64_t sub_1BFC368DC()
{
  return sub_1BFC368EC(*v0);
}

uint64_t sub_1BFC368EC(char a1)
{
  if (a1) {
    return 0x617461646174656DLL;
  }
  else {
    return 0x7463656A626FLL;
  }
}

ValueMetadata *type metadata accessor for FeedItemTraits()
{
  return &type metadata for FeedItemTraits;
}

uint64_t FeedContext.isSubscribed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedContext() + 24));
}

uint64_t FeedModel.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

ValueMetadata *type metadata accessor for FeedHeadlineTrack()
{
  return &type metadata for FeedHeadlineTrack;
}

uint64_t storeEnumTagSinglePayload for FormatCornerRadius(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)double result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)double result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1BFC369F8()
{
  return sub_1BFC36A08(*v0);
}

uint64_t sub_1BFC36A08(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x696669746E656469;
      break;
    case 2:
      uint64_t result = 0xD000000000000013;
      break;
    case 3:
      uint64_t result = 0x73746F6C73;
      break;
    case 4:
      uint64_t result = 0x6973695664696170;
      break;
    case 5:
      unsigned int v3 = 1316512109;
      goto LABEL_8;
    case 6:
      unsigned int v3 = 1315858797;
LABEL_8:
      uint64_t result = v3 | 0x5673776500000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000014;
      break;
    case 8:
      uint64_t result = 0xD000000000000014;
      break;
    case 9:
    case 10:
      uint64_t result = 0xD000000000000010;
      break;
    case 11:
      uint64_t result = 0x797469726F697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x69)
  {
    *(void *)uint64_t result = a2 - 106;
    if (a3 >= 0x6A) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6A) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSize(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x6A && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 106);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x69) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

unint64_t sub_1BFC36BFC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1BFC36C28(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1BFC36C28(char a1)
{
  unint64_t result = 0x656C626978656C66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6974706FLL;
      break;
    case 2:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 3:
      unint64_t result = 1684957538;
      break;
    case 4:
      unint64_t result = 0x676E69646E6962;
      break;
    case 5:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 6:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 7:
      unint64_t result = 7630702;
      break;
    case 8:
      unint64_t result = 6581857;
      break;
    case 9:
      unint64_t result = 29295;
      break;
    case 10:
      unint64_t result = 1819242338;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0x656D617266;
      break;
    case 13:
      unint64_t result = 0x6E694270756F7267;
      break;
    case 14:
      unint64_t result = 0x6B636F6C62;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *_s10CodingTypeOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 29 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 29) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE2)
  {
    unsigned int v6 = ((a2 - 227) >> 8) + 1;
    *unint64_t result = a2 + 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 29;
        break;
    }
  }
  return result;
}

uint64_t _s10CodingTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE3) {
    goto LABEL_17;
  }
  if (a2 + 29 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 29) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 29;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 29;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 29;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1E;
  int v8 = v6 - 30;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatOption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0B3AC0C);
}

uint64_t storeEnumTagSinglePayload for FormatOptionValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x72)
  {
    *(void *)unint64_t result = a2 - 115;
    if (a3 >= 0x73) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x73) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatOptionValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x73 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 115);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x72) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatQueryParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatQueryParameter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatParagraphStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 192) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 194) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 194) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 193) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1BFC3709C(void *a1)
{
  return FormatHeadlineBinding.SharedItem.init(from:)(a1);
}

uint64_t FormatHeadlineBinding.SharedItem.init(from:)(void *a1)
{
  return sub_1BFD3F064(a1, (void (*)(uint64_t))sub_1BFD3F43C, (uint64_t)&_s10CodingTypeON_90, (uint64_t)&unk_1F1B856F0);
}

uint64_t sub_1BFC370F0(void *a1)
{
  return FormatIssueBinding.IssueCover.init(from:)(a1);
}

uint64_t FormatIssueBinding.IssueCover.init(from:)(void *a1)
{
  return sub_1BFD3F064(a1, (void (*)(uint64_t))sub_1BFD3F490, (uint64_t)&_s10CodingTypeON_78, (uint64_t)&unk_1F1B85D80);
}

uint64_t sub_1BFC37144@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatHeadlineBinding.Action.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Action.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFD55F84(a1, (void (*)(uint64_t))sub_1BFD563C0, (uint64_t)&_s10CodingTypeON_94, (uint64_t)&unk_1F1B85470, a2);
}

uint64_t sub_1BFC37198@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatHeadlineTrackDurationFormat.init(from:)(a1, a2);
}

uint64_t FormatHeadlineTrackDurationFormat.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFD55F84(a1, (void (*)(uint64_t))sub_1BFD56414, (uint64_t)&_s10CodingTypeON_87, (uint64_t)&unk_1F1B85880, a2);
}

uint64_t sub_1BFC371EC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatRoute.init(from:)(a1, a2);
}

uint64_t FormatRoute.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD821C, (uint64_t)&_s10CodingTypeON_160, (uint64_t)&unk_1F1B82710, a2);
}

uint64_t sub_1BFC37240@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatTagBinding.Color.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Color.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD81C8, (uint64_t)&_s5ColorO10CodingTypeON, (uint64_t)&unk_1F1B6CC50, a2);
}

uint64_t sub_1BFC37294@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatIssueBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatIssueBinding.Bool.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD8174, (uint64_t)&_s4BoolO10CodingTypeON_3, (uint64_t)&unk_1F1B85C40, a2);
}

uint64_t sub_1BFC372E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithTake for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t sub_1BFC37370(uint64_t a1, uint64_t a2)
{
  return sub_1BFFE8570(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_1BFFE8A88);
}

void sub_1BFC3739C()
{
  sub_1BFFE2D28(319, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  if (v0 <= 0x3F)
  {
    sub_1BFFE2D28(319, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1BFC374C8(void *a1)
{
  unint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  a1[1] = sub_1BFF877BC((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
  a1[2] = sub_1BFF877BC((unint64_t *)&unk_1EB8710F0, v2);
  uint64_t result = sub_1BFF877BC((unint64_t *)&unk_1EB871110, v2);
  a1[3] = result;
  return result;
}

uint64_t sub_1BFC37574(void *a1)
{
  unint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  a1[1] = sub_1BFF877BC(&qword_1EB871168, MEMORY[0x1E4F27928]);
  a1[2] = sub_1BFF877BC((unint64_t *)&unk_1EB871150, v2);
  uint64_t result = sub_1BFF877BC((unint64_t *)&qword_1EB871160, v2);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatVideoPlayerNode()
{
  return self;
}

uint64_t FormatLayoutView.blueprintViewportMonitorWillDisplaySupplementaryView(_:)(uint64_t a1)
{
  unint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*v2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*v2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v7)
  {
    unint64_t v13 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v14 = v13 | (v10 << 6);
LABEL_24:
    unint64_t v18 = *(void *)(*(void *)(*(void *)(v3 + 56) + 8 * v14) + 56);
    switch((v18 >> 59) & 0x1E | (v18 >> 2) & 1)
    {
      case 4uLL:
        int v11 = *(void **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        id v12 = v11;
        FormatLayoutView.blueprintViewportMonitorWillDisplaySupplementaryView(_:)(a1);
        swift_release();

        goto LABEL_5;
      case 0xBuLL:
        v19 = *(char **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v20) {
          continue;
        }
        uint64_t v21 = *(void *)(v20 + qword_1EB870530);
        goto LABEL_31;
      case 0xCuLL:
        v22 = *(char **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        uint64_t result = swift_beginAccess();
        int v24 = *(unsigned __int8 *)(v23 + 17);
        *(unsigned char *)(v23 + 17) = 1;
        if ((v24 & 0xFFFFFFC1) == 1) {
          continue;
        }
        swift_retain();
        swift_retain();
        v25 = v22;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_5;
      case 0xDuLL:
        v19 = *(char **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v26 = *(void *)&v19[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v26) {
          continue;
        }
        uint64_t v21 = *(void *)(v26 + qword_1EB870530);
LABEL_31:
        uint64_t result = swift_beginAccess();
        int v27 = *(unsigned __int8 *)(v21 + 17);
        *(unsigned char *)(v21 + 17) = 1;
        if ((v27 & 0xFFFFFFC1) != 1)
        {
          swift_retain();
          swift_retain();
          v28 = v19;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_5:
          uint64_t result = swift_release();
        }
        break;
      default:
        continue;
    }
  }
  int64_t v15 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v15 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v15);
  ++v10;
  if (v16) {
    goto LABEL_23;
  }
  int64_t v10 = v15 + 1;
  if (v15 + 1 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v10);
  if (v16) {
    goto LABEL_23;
  }
  int64_t v10 = v15 + 2;
  if (v15 + 2 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v10);
  if (v16) {
    goto LABEL_23;
  }
  int64_t v10 = v15 + 3;
  if (v15 + 3 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v10);
  if (v16)
  {
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
    goto LABEL_24;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v4 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t FormatContentSubgroupFilter.encode(to:)(void *a1)
{
  sub_1C005CA80(0, &qword_1EB86B930, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v8 = (char *)&v26 - v7;
  unint64_t v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C005CAE4();
  sub_1C1520F0C();
  switch(v9 >> 60)
  {
    case 1uLL:
      uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v13 = *(unsigned char *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v26) = 1;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v12;
      LOBYTE(v27) = v13;
      char v28 = 1;
      sub_1C0C325D0();
      break;
    case 2uLL:
      uint64_t v14 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v26) = 2;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v14;
      uint64_t v27 = v15;
      char v28 = 1;
      sub_1C094C65C();
      break;
    case 3uLL:
      uint64_t v16 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v26) = 3;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v16;
      uint64_t v27 = v17;
      char v28 = 1;
      sub_1C0C3257C();
      break;
    case 4uLL:
      uint64_t v18 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v19 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v26) = 4;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v18;
      uint64_t v27 = v19;
      char v28 = 1;
      sub_1C021070C();
      break;
    case 5uLL:
      LOBYTE(v26) = 5;
      char v28 = 0;
      sub_1C006CD98();
      break;
    case 6uLL:
      uint64_t v20 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v26) = 6;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v20;
      char v28 = 1;
      sub_1C0203E38();
      break;
    case 7uLL:
      uint64_t v21 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v26) = 7;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v21;
      char v28 = 1;
      sub_1C0203F74();
      break;
    case 8uLL:
      uint64_t v22 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v26) = 8;
      char v28 = 0;
      sub_1C006CD98();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v26 = v22;
        char v28 = 1;
        sub_1C0204104();
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_release();
    case 9uLL:
      uint64_t v24 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v26) = 9;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v24;
      uint64_t v27 = v25;
      char v28 = 1;
      sub_1C0067C84();
      break;
    default:
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = *(void *)(v9 + 24);
      LOBYTE(v26) = 0;
      char v28 = 0;
      sub_1C006CD98();
      sub_1C152080C();
      if (v2) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v26 = v10;
      uint64_t v27 = v11;
      char v28 = 1;
      sub_1C02D2670();
      break;
  }
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for TagReferenceService()
{
  return self;
}

uint64_t sub_1BFC37F04()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedContext();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t FormatLayeredMediaFilter.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v6 - 8);
  int64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v14 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatLayeredMediaFilter, v15, v12, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyC, v13, (uint64_t)v8, v14, (uint64_t)&off_1F1C39A28);
  sub_1BFDC11A4(v10);
  sub_1BFEF683C(v9);
  sub_1BFEF683C(v11);
  if (qword_1EB887650 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1C151928C();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EB93CAE0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C067F9FC(v10, v9, v11, (uint64_t)v5);
  sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BFEFEB68((uint64_t)v8, (uint64_t (*)(void))sub_1BFEFF7D8);
  sub_1BFDC11BC(v10);
  sub_1BFEF68C0(v9);
  return sub_1BFEF68C0(v11);
}

uint64_t sub_1BFC3827C()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC3831C(void *a1)
{
  sub_1BFDE4564(0, &qword_1EB85EFE0, (uint64_t (*)(void))sub_1BFDE47D0, (uint64_t)&type metadata for FormatItemKind.Object.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDE47D0();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Bool __swiftcall FeedNativeAdManager.shouldFetchNativeAd(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 80);
  swift_bridgeObjectRetain();
  char v5 = sub_1BFF896B4(countAndFlagsBits, (uint64_t)object, v4);
  swift_bridgeObjectRelease();
  Swift::Bool result = *(unsigned char *)(v1 + 56);
  if (result || *(unsigned char *)(v1 + 88))
  {
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  else if ((v5 & 1) == 0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1BFC3851C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FCNewsAppConfigurationManager.todayFeedEditionConfig.getter@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_possiblyUnfetchedAppConfiguration);
  FCNewsAppConfiguration.todayFeedEditionConfig.getter(a1);
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for UserInfoReferenceService()
{
  return self;
}

uint64_t sub_1BFC38670()
{
  uint64_t result = sub_1C151D2DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1BFC386FC()
{
  v1[4] = &unk_1C15B81D8;
  sub_1BFF81FF0();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1BFC387A8(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t static Format.prepare()()
{
  if (qword_1EB88CB30 != -1) {
    swift_once();
  }
  return sub_1BFD3224C();
}

uint64_t sub_1BFC3884C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1BFC388CC()
{
  uint64_t result = sub_1C1515B3C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC3897C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AssetReferenceService()
{
  return self;
}

uint64_t sub_1BFC389E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = swift_projectBox();
  uint64_t v10 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1BFC38B58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FeedServiceOptions(0);
  uint64_t v3 = v2 - 8;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v8 = swift_checkMetadataState();
  v7(v8, AssociatedConformanceWitness);
  char v9 = v5[*(int *)(v3 + 36)];
  sub_1BFE62840((uint64_t)v5);
  char v12 = v9;
  return sub_1BFCFFDA0(&v12, a1);
}

uint64_t FormatContentSubgroupFilterSelector.encode(to:)(void *a1)
{
  sub_1C005C9C8(0, &qword_1EB86B9E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C005CA2C();
  sub_1C1520F0C();
  v11[0] = v9;
  v11[1] = v8;
  sub_1BFE79808();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BFC38E18()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC38E78()
{
  unint64_t result = qword_1EB876888;
  if (!qword_1EB876888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876888);
  }
  return result;
}

uint64_t type metadata accessor for FeedNativeAdIntegrator()
{
  return self;
}

uint64_t type metadata accessor for FeedClusteringService()
{
  return self;
}

uint64_t sub_1BFC38F14()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC38FB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C0062BCC();
  uint64_t result = sub_1C15204EC();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
    v33 = v3;
    int64_t v34 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v34) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v33;
                goto LABEL_40;
              }
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), 8 * v34);
              }
              else {
                *uint64_t v9 = v31;
              }
              uint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1C1520DAC();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1BFC39268(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BFC392A4()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC3931C()
{
  uint64_t result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151AC1C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC39400()
{
  uint64_t result = sub_1C1516D9C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC394A8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FormatAnimationData()
{
  return self;
}

void sub_1BFC39508(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a3 != 1)
  {
    swift_release();
    sub_1BFF58918(a2);
    swift_release();
    swift_release();
    sub_1BFE94AD4(a5, a6, a7 & 1);
  }
}

uint64_t type metadata accessor for PuzzleReferenceService()
{
  return self;
}

uint64_t type metadata accessor for FeedRefreshBasicAnimation()
{
  return self;
}

uint64_t sub_1BFC395DC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3963C()
{
  unint64_t result = qword_1EB887110;
  if (!qword_1EB887110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887110);
  }
  return result;
}

unint64_t sub_1BFC39690()
{
  unint64_t result = qword_1EB884D00;
  if (!qword_1EB884D00)
  {
    sub_1C151631C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884D00);
  }
  return result;
}

uint64_t sub_1BFC396E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for Feed(uint64_t a1)
{
  swift_bridgeObjectRelease();

  unint64_t v2 = *(void **)(a1 + 24);
}

uint64_t sub_1BFC397C4@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, _OWORD *a5@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_1BFF896B4(v10, v11, a2);
  uint64_t result = swift_bridgeObjectRelease();
  long long v13 = 0uLL;
  long long v14 = 0uLL;
  long long v15 = 0uLL;
  if (a2)
  {
    uint64_t result = sub_1C0B8F098(a1, a3, a4, (uint64_t *)v16);
    long long v13 = v16[0];
    long long v14 = v16[1];
    long long v15 = v16[2];
  }
  *a5 = v13;
  a5[1] = v14;
  a5[2] = v15;
  return result;
}

id FeedHeadlineScoringContext.topicsConfiguration(treatment:)(id result)
{
  switch(*v1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      goto LABEL_6;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_14;
    case 7:
      goto LABEL_16;
    case 8:
      goto LABEL_18;
    case 9:
      goto LABEL_20;
    case 0xA:
      goto LABEL_22;
    case 0xB:
      goto LABEL_24;
    case 0xC:
      goto LABEL_26;
    case 0xD:
      goto LABEL_28;
    case 0xE:
      goto LABEL_30;
    case 0xF:
      goto LABEL_32;
    case 0x10:
      goto LABEL_34;
    case 0x11:
      goto LABEL_36;
    case 0x12:
      goto LABEL_38;
    case 0x13:
      goto LABEL_40;
    case 0x14:
      goto LABEL_42;
    case 0x15:
      goto LABEL_44;
    case 0x16:
      goto LABEL_46;
    case 0x17:
      goto LABEL_48;
    case 0x18:
      goto LABEL_50;
    case 0x19:
      goto LABEL_52;
    case 0x1A:
      goto LABEL_74;
    case 0x1B:
      goto LABEL_54;
    case 0x1C:
      goto LABEL_56;
    case 0x1D:
      goto LABEL_58;
    case 0x1E:
      goto LABEL_60;
    case 0x1F:
      goto LABEL_62;
    case 0x20:
      goto LABEL_64;
    case 0x21:
      goto LABEL_66;
    case 0x22:
      goto LABEL_68;
    case 0x23:
      goto LABEL_70;
    case 0x24:
      goto LABEL_72;
    default:
      uint64_t result = objc_msgSend(result, sel_defaultTopicsConfig);
      if (result) {
        return result;
      }
      __break(1u);
LABEL_4:
      uint64_t result = objc_msgSend(result, sel_legacyAudioFeedTopicsConfig);
      if (result) {
        return result;
      }
      __break(1u);
LABEL_6:
      uint64_t result = objc_msgSend(result, sel_audioFeedTopicsConfig);
      if (!result)
      {
        __break(1u);
LABEL_8:
        uint64_t result = objc_msgSend(result, sel_articleRecirculationPrimaryTopicsConfig);
        if (!result)
        {
          __break(1u);
LABEL_10:
          uint64_t result = objc_msgSend(result, sel_articleRecirculationSecondaryTopicsConfig);
          if (!result)
          {
            __break(1u);
LABEL_12:
            uint64_t result = objc_msgSend(result, sel_articleRecirculationTertiaryTopicsConfig);
            if (!result)
            {
              __break(1u);
LABEL_14:
              uint64_t result = objc_msgSend(result, sel_articleRecirculationQuaternaryTopicsConfig);
              if (!result)
              {
                __break(1u);
LABEL_16:
                uint64_t result = objc_msgSend(result, sel_bestOfBundleTopicsConfig);
                if (!result)
                {
                  __break(1u);
LABEL_18:
                  uint64_t result = objc_msgSend(result, sel_curatedTopicsConfig);
                  if (!result)
                  {
                    __break(1u);
LABEL_20:
                    uint64_t result = objc_msgSend(result, sel_forYouTopicsConfig);
                    if (!result)
                    {
                      __break(1u);
LABEL_22:
                      uint64_t result = objc_msgSend(result, sel_greatStoriesYouMissedTopicsConfig);
                      if (!result)
                      {
                        __break(1u);
LABEL_24:
                        uint64_t result = objc_msgSend(result, sel_latestStoriesTopicsConfig);
                        if (!result)
                        {
                          __break(1u);
LABEL_26:
                          uint64_t result = objc_msgSend(result, sel_localNewsTopicsConfig);
                          if (!result)
                          {
                            __break(1u);
LABEL_28:
                            uint64_t result = objc_msgSend(result, sel_magazineFeedArticleTopicsConfig);
                            if (!result)
                            {
                              __break(1u);
LABEL_30:
                              uint64_t result = objc_msgSend(result, sel_newspaperMagazineFeedTopicsConfig);
                              if (!result)
                              {
                                __break(1u);
LABEL_32:
                                uint64_t result = objc_msgSend(result, sel_topicFeedTopicsConfig);
                                if (!result)
                                {
                                  __break(1u);
LABEL_34:
                                  uint64_t result = objc_msgSend(result, sel_mySportsGroupTopicsConfig);
                                  if (!result)
                                  {
                                    __break(1u);
LABEL_36:
                                    uint64_t result = objc_msgSend(result, sel_mySportsGroupForYouTopicsConfig);
                                    if (!result)
                                    {
                                      __break(1u);
LABEL_38:
                                      uint64_t result = objc_msgSend(result, sel_mySportsTopicsTopicsConfig);
                                      if (!result)
                                      {
                                        __break(1u);
LABEL_40:
                                        uint64_t result = objc_msgSend(result, sel_sportsTopStoriesTopicsConfig);
                                        if (!result)
                                        {
                                          __break(1u);
LABEL_42:
                                          uint64_t result = objc_msgSend(result, sel_introToSportsGroupTopicsConfig);
                                          if (!result)
                                          {
                                            __break(1u);
LABEL_44:
                                            uint64_t result = objc_msgSend(result, sel_introToSportsGroupForYouTopicsConfig);
                                            if (!result)
                                            {
                                              __break(1u);
LABEL_46:
                                              uint64_t result = objc_msgSend(result, sel_articleListTagFeedGroupTopicsConfig);
                                              if (!result)
                                              {
                                                __break(1u);
LABEL_48:
                                                uint64_t result = objc_msgSend(result, sel_tagFeedTopicsConfig);
                                                if (!result)
                                                {
                                                  __break(1u);
LABEL_50:
                                                  uint64_t result = objc_msgSend(result, sel_highlightsGroupTopicsConfig);
                                                  if (!result)
                                                  {
                                                    __break(1u);
LABEL_52:
                                                    uint64_t result = objc_msgSend(result, sel_newspaperTodayFeedTopicsConfig);
                                                    if (!result)
                                                    {
                                                      __break(1u);
LABEL_54:
                                                      uint64_t result = objc_msgSend(result, sel_localSectionGroupTopicsConfig);
                                                      if (!result)
                                                      {
                                                        __break(1u);
LABEL_56:
                                                        uint64_t result = objc_msgSend(result, sel_newspaperSectionGroupTopicsConfig);
                                                        if (!result)
                                                        {
                                                          __break(1u);
LABEL_58:
                                                          uint64_t result = objc_msgSend(result, sel_sportsEventArticlesGroupTopicsConfig);
                                                          if (!result)
                                                          {
                                                            __break(1u);
LABEL_60:
                                                            uint64_t result = objc_msgSend(result, sel_tagForYouGroupTopicsConfig);
                                                            if (!result)
                                                            {
                                                              __break(1u);
LABEL_62:
                                                              uint64_t result = objc_msgSend(result, sel_tagRecentStoriesTopicsConfig);
                                                              if (!result)
                                                              {
                                                                __break(1u);
LABEL_64:
                                                                uint64_t result = objc_msgSend(result, sel_tagDateRangeTopicsConfig);
                                                                if (!result)
                                                                {
                                                                  __break(1u);
LABEL_66:
                                                                  uint64_t result = objc_msgSend(result, sel_sportsEventTopicGroupTopicsConfig);
                                                                  if (!result)
                                                                  {
                                                                    __break(1u);
LABEL_68:
                                                                    uint64_t result = objc_msgSend(result, sel_affinityGroupTopicsConfig);
                                                                    if (!result)
                                                                    {
                                                                      __break(1u);
LABEL_70:
                                                                      uint64_t result = objc_msgSend(result, sel_todayWidgetTopicsConfig);
                                                                      if (!result)
                                                                      {
                                                                        __break(1u);
LABEL_72:
                                                                        uint64_t result = objc_msgSend(result, sel_tagWidgetTopicsConfig);
                                                                        if (!result)
                                                                        {
                                                                          __break(1u);
LABEL_74:
                                                                          uint64_t result = objc_msgSend(result, sel_moreForYouTopicsConfig);
                                                                          if (!result) {
                                                                            __break(1u);
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return result;
  }
}

uint64_t sub_1BFC39CB4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC39D14()
{
  unint64_t result = qword_1EB860588;
  if (!qword_1EB860588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860588);
  }
  return result;
}

uint64_t FeedGroupFreezing.encode(to:)(void *a1)
{
  sub_1BFC9811C(0, &qword_1EB85C618, (uint64_t (*)(void))sub_1BFCA47AC, (uint64_t)&type metadata for FeedGroupFreezing.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v8 = (char *)&v10 - v7;
  int v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCA47AC();
  sub_1C1520F0C();
  char v14 = 0;
  sub_1C008B47C();
  sub_1C152080C();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_1C0087A9C();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BFC39F24()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC39F84()
{
  unint64_t result = qword_1EB881408;
  if (!qword_1EB881408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB881408);
  }
  return result;
}

uint64_t type metadata accessor for FormatCustomNode()
{
  return self;
}

void sub_1BFC39FFC()
{
  sub_1C151928C();
  if (v0 <= 0x3F)
  {
    sub_1BFEC0CE8(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1BFC3A0E4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3A144()
{
  unint64_t result = qword_1EB8752E0;
  if (!qword_1EB8752E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8752E0);
  }
  return result;
}

uint64_t sub_1BFC3A198()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3A1F8()
{
  unint64_t result = qword_1EB867440;
  if (!qword_1EB867440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867440);
  }
  return result;
}

unint64_t sub_1BFC3A24C()
{
  unint64_t result = qword_1EB884A60;
  if (!qword_1EB884A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884A60);
  }
  return result;
}

uint64_t FeedGroupSortOption.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1C0062AEC(0, &qword_1EB86B610, (uint64_t (*)(void))sub_1C0089570, (uint64_t)&type metadata for FeedGroupSortOption.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0089570();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v16;
    char v21 = 0;
    sub_1C0089418();
    sub_1C15206EC();
    switch(v22)
    {
      case 1:
        (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
        char v12 = 0;
        uint64_t v11 = 1;
        goto LABEL_5;
      case 2:
        (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
        char v12 = 0;
        char v13 = 1;
        uint64_t v11 = 2;
        break;
      case 3:
        char v20 = 1;
        sub_1C026A088();
        sub_1C152065C();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
        if (v19) {
          uint64_t v11 = 0;
        }
        else {
          uint64_t v11 = v17;
        }
        if (v19) {
          char v12 = 1;
        }
        else {
          char v12 = v18 & 1;
        }
        char v13 = 0;
        break;
      default:
        (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
        uint64_t v11 = 0;
        char v12 = 0;
LABEL_5:
        char v13 = 1;
        break;
    }
    *(void *)uint64_t v10 = v11;
    *(unsigned char *)(v10 + 8) = v12;
    *(unsigned char *)(v10 + 9) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFC3A568()
{
  v1[4] = MEMORY[0x1E4FBADB0] + 64;
  sub_1BFF81FF0();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1BFC3A618(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t), uint64_t a3, uint64_t a4)
{
  a2(&v5, a4);
  sub_1BFD43E80(0, &qword_1EB871470, (uint64_t)&type metadata for FeedFontLoadResult, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1BFC3A6A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB862940 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB861180);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t type metadata accessor for HeadlineReferenceService()
{
  return self;
}

uint64_t sub_1BFC3A770(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7958113 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616854726577656ELL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BFC3A860()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C040FB50, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1BFC3A9A8()
{
  uint64_t v0 = sub_1C15164BC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151661C();
  __swift_allocate_value_buffer(v4, qword_1EB86AD78);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB86AD78);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27B20], v0);
  sub_1C15164CC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BFC3AAC8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3AB28()
{
  unint64_t result = qword_1EB864D40;
  if (!qword_1EB864D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864D40);
  }
  return result;
}

uint64_t type metadata accessor for IssueReferenceService()
{
  return self;
}

uint64_t sub_1BFC3ABA0(uint64_t a1)
{
  uint64_t v48 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed12FormatButton_stateMaskFormatLayoutViews);
  int64_t v49 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_26;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_54;
    }
    if (v11 >= v49) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v48 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v49) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v48 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v49) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v48 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v49) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v48 + 8 * v7);
          if (!v12)
          {
            int64_t v7 = v11 + 4;
            if (v11 + 4 >= v49) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v48 + 8 * v7);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_26:
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v15 = qword_1EB88CB30;
    swift_bridgeObjectRetain();
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void *)(qword_1EB93C930 + 48);
    uint64_t v17 = (unint64_t *)(v16 + 16);
    swift_beginAccess();
    unint64_t v18 = *(void *)(v16 + 16);
    if (v18 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v27)
      {
LABEL_37:
        uint64_t v28 = swift_endAccess();
        uint64_t v29 = *(void *)(v16 + 64);
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_55;
        }
        *(void *)(v16 + 64) = v31;
        BOOL v26 = (void *)(*(uint64_t (**)(uint64_t))(v16 + 40))(v28);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (!v19) {
        goto LABEL_37;
      }
    }
    unint64_t v20 = *v17;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v17 = v20;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v20 & 0x8000000000000000) != 0
      || (v20 & 0x4000000000000000) != 0)
    {
      sub_1C0378E04(v20);
      unint64_t v20 = v22;
      *uint64_t v17 = v22;
    }
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v24) {
      goto LABEL_52;
    }
    uint64_t v25 = v24 - 1;
    BOOL v26 = *(void **)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v25 + 0x20);
    *(void *)(v23 + 16) = v25;
    sub_1C151EBEC();
    swift_endAccess();
LABEL_39:
    swift_release();
    objc_msgSend(v26, sel_setUserInteractionEnabled_, 0);
    sub_1C151F91C();
    objc_msgSend(v50, sel_addSubview_, v26);
    swift_beginAccess();
    id v32 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v34 = (void *)*v6;
    v51 = (void *)*v6;
    *uint64_t v6 = 0x8000000000000000;
    unint64_t v36 = sub_1BFD6B6EC(v14);
    uint64_t v37 = v34[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    char v40 = v35;
    if (v34[3] >= v39)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        v43 = v51;
        if (v35) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C1070348();
        v43 = v51;
        if (v40) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C105CA5C(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_1BFD6B6EC(v14);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_57;
      }
      unint64_t v36 = v41;
      v43 = v51;
      if (v40)
      {
LABEL_4:
        uint64_t v8 = v43[7];

        *(void *)(v8 + 8 * v36) = v32;
        goto LABEL_5;
      }
    }
    v43[(v36 >> 6) + 8] |= 1 << v36;
    uint64_t v44 = 8 * v36;
    *(void *)(v43[6] + v44) = v14;
    *(void *)(v43[7] + v44) = v32;
    uint64_t v45 = v43[2];
    BOOL v30 = __OFADD__(v45, 1);
    uint64_t v46 = v45 + 1;
    if (v30) {
      goto LABEL_53;
    }
    v43[2] = v46;
    swift_bridgeObjectRetain();
LABEL_5:
    *uint64_t v6 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v49) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v48 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v49) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v48 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1BFC3B02C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*a1) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = a1[1] == 1;
  }
  if (v5)
  {
    sub_1BFEFD990((uint64_t)a1, &qword_1EB863050, (uint64_t)&type metadata for PuzzleGameCenterListenerType);
    unint64_t v8 = sub_1BFC44E98(a2);
    if (v9)
    {
      unint64_t v10 = v8;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = *v2;
      uint64_t v14 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C1074770();
        uint64_t v12 = v14;
      }
      sub_1BFC372E8(*(void *)(v12 + 56) + 16 * v10, (uint64_t)&v15);
      sub_1C091EF20(v10, v12);
      *uint64_t v3 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v15 = xmmword_1C152C800;
    }
    return sub_1BFEFD990((uint64_t)&v15, &qword_1EB863050, (uint64_t)&type metadata for PuzzleGameCenterListenerType);
  }
  else
  {
    sub_1BFC372E8((uint64_t)a1, (uint64_t)&v15);
    char v6 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1BFC44D68((uint64_t)&v15, a2, v6);
    *uint64_t v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

void sub_1BFC3B15C()
{
  if (!qword_1EB871190)
  {
    sub_1C15166BC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871190);
    }
  }
}

uint64_t sub_1BFC3B1B4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC3B250()
{
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v2 = rawValue_8;
  if (rawValue_8)
  {
    uint64_t v3 = rawValue;
    FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v2 - 1));
    if (v6 == 1) {
      return 1;
    }
    else {
      return *(unsigned __int8 *)(v0 + 56);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC3B2C4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3B324()
{
  unint64_t result = qword_1EB888718;
  if (!qword_1EB888718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888718);
  }
  return result;
}

uint64_t sub_1BFC3B378()
{
  uint64_t result = sub_1C151BCEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FeedModifierStore.init()()
{
  sub_1C151AC9C();
  sub_1C1518DAC();
  *(void *)(v0 + 16) = sub_1C1518D8C();
  return v0;
}

uint64_t sub_1BFC3B4A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EmptyViewSupplementaryLayoutAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for EmptyViewSupplementaryLayoutAttributes()
{
  uint64_t result = qword_1EB8795C8;
  if (!qword_1EB8795C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SportsEmbedConfigurationManager()
{
  return self;
}

unint64_t sub_1BFC3B55C()
{
  unint64_t result = qword_1EB871160;
  if (!qword_1EB871160)
  {
    sub_1C151631C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871160);
  }
  return result;
}

uint64_t initializeWithCopy for A12_V24.Layout.Attributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFC3B5EC(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_1C0062B54();
  uint64_t result = sub_1C15204EC();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v34 = v3;
    int64_t v8 = 0;
    char v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *char v9 = v32;
              }
              long long v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      BOOL v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = sub_1C1520DAC();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

unint64_t sub_1BFC3B8A0()
{
  unint64_t result = qword_1EB85DF88;
  if (!qword_1EB85DF88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB85DF88);
  }
  return result;
}

uint64_t FeedPluginManager.__allocating_init(feed:feedKind:formatPluginFactory:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  char v8 = *a2;
  uint64_t v12 = *(void *)a1;
  long long v13 = *(_OWORD *)(a1 + 8);
  uint64_t v14 = v6;
  char v15 = v7;
  char v11 = v8;
  swift_allocObject();
  uint64_t v9 = sub_1BFC7472C(&v12, &v11, 0, a3, a4);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1BFC3B978@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB863D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB863D00);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1BFC3BA20()
{
  swift_retain();
  sub_1C1518EBC();
  return swift_release();
}

uint64_t sub_1BFC3BA7C(uint64_t a1)
{
  char v4 = *(unsigned char *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  long long v7 = *(_OWORD *)(v1 + 40);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1C005E7F4;
  *(unsigned char *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v7;
  *(void *)(v5 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1BFCE2034, 0, 0);
}

void sub_1BFC3BB44(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a3 != 1)
  {
    swift_retain();
    sub_1BFF58908(a2);
    swift_retain();
    swift_retain();
    sub_1BFE94AB4(a5, a6, a7 & 1);
  }
}

uint64_t static FeedScalingManager.shared.getter()
{
  if (qword_1EB87CC48 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1BFC3BC2C()
{
  uint64_t result = sub_1C151CC9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC3BCF0(void *a1)
{
  sub_1BFC9811C(0, &qword_1EB85C628, (uint64_t (*)(void))sub_1BFC98184, (uint64_t)&type metadata for FeedGroupFreezingDisallow.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  long long v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC98184();
  sub_1C1520F0C();
  sub_1C15207DC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_1BFC3BE54()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
  id result = objc_msgSend(v0, sel_setUnitsStyle_, 2);
  qword_1EB85B1E0 = (uint64_t)v0;
  return result;
}

uint64_t type metadata accessor for SportsTaxonomyGraphManager()
{
  return self;
}

uint64_t type metadata accessor for FeedJournalFormatter()
{
  return self;
}

id FeedHeadlineScoringContext.scoringConfiguration(treatment:)(id result)
{
  switch(*v1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      goto LABEL_6;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_14;
    case 7:
      goto LABEL_16;
    case 8:
      goto LABEL_18;
    case 9:
      goto LABEL_20;
    case 0xA:
      goto LABEL_22;
    case 0xB:
      goto LABEL_24;
    case 0xC:
      goto LABEL_26;
    case 0xD:
      goto LABEL_28;
    case 0xE:
      goto LABEL_30;
    case 0xF:
      goto LABEL_32;
    case 0x10:
      goto LABEL_34;
    case 0x11:
      goto LABEL_36;
    case 0x12:
      goto LABEL_38;
    case 0x13:
      goto LABEL_40;
    case 0x14:
      goto LABEL_42;
    case 0x15:
      goto LABEL_44;
    case 0x16:
      goto LABEL_46;
    case 0x17:
      goto LABEL_48;
    case 0x18:
      goto LABEL_50;
    case 0x19:
      goto LABEL_52;
    case 0x1A:
      goto LABEL_74;
    case 0x1B:
      goto LABEL_54;
    case 0x1C:
      goto LABEL_56;
    case 0x1D:
      goto LABEL_58;
    case 0x1E:
      goto LABEL_60;
    case 0x1F:
      goto LABEL_62;
    case 0x20:
      goto LABEL_64;
    case 0x21:
      goto LABEL_66;
    case 0x22:
      goto LABEL_68;
    case 0x23:
      goto LABEL_70;
    case 0x24:
      goto LABEL_72;
    default:
      id result = objc_msgSend(result, sel_defaultScoringConfig);
      if (result) {
        return result;
      }
      __break(1u);
LABEL_4:
      id result = objc_msgSend(result, sel_legacyAudioFeedScoringConfig);
      if (result) {
        return result;
      }
      __break(1u);
LABEL_6:
      id result = objc_msgSend(result, sel_audioFeedScoringConfig);
      if (!result)
      {
        __break(1u);
LABEL_8:
        id result = objc_msgSend(result, sel_articleRecirculationPrimaryScoringConfig);
        if (!result)
        {
          __break(1u);
LABEL_10:
          id result = objc_msgSend(result, sel_articleRecirculationSecondaryScoringConfig);
          if (!result)
          {
            __break(1u);
LABEL_12:
            id result = objc_msgSend(result, sel_articleRecirculationTertiaryScoringConfig);
            if (!result)
            {
              __break(1u);
LABEL_14:
              id result = objc_msgSend(result, sel_articleRecirculationQuaternaryScoringConfig);
              if (!result)
              {
                __break(1u);
LABEL_16:
                id result = objc_msgSend(result, sel_bestOfBundleScoringConfig);
                if (!result)
                {
                  __break(1u);
LABEL_18:
                  id result = objc_msgSend(result, sel_curatedScoringConfig);
                  if (!result)
                  {
                    __break(1u);
LABEL_20:
                    id result = objc_msgSend(result, sel_forYouScoringConfig);
                    if (!result)
                    {
                      __break(1u);
LABEL_22:
                      id result = objc_msgSend(result, sel_greatStoriesYouMissedScoringConfig);
                      if (!result)
                      {
                        __break(1u);
LABEL_24:
                        id result = objc_msgSend(result, sel_latestStoriesScoringConfig);
                        if (!result)
                        {
                          __break(1u);
LABEL_26:
                          id result = objc_msgSend(result, sel_localNewsScoringConfig);
                          if (!result)
                          {
                            __break(1u);
LABEL_28:
                            id result = objc_msgSend(result, sel_magazineFeedArticleScoringConfig);
                            if (!result)
                            {
                              __break(1u);
LABEL_30:
                              id result = objc_msgSend(result, sel_newspaperMagazineFeedScoringConfig);
                              if (!result)
                              {
                                __break(1u);
LABEL_32:
                                id result = objc_msgSend(result, sel_topicFeedScoringConfig);
                                if (!result)
                                {
                                  __break(1u);
LABEL_34:
                                  id result = objc_msgSend(result, sel_mySportsGroupScoringConfig);
                                  if (!result)
                                  {
                                    __break(1u);
LABEL_36:
                                    id result = objc_msgSend(result, sel_mySportsGroupForYouScoringConfig);
                                    if (!result)
                                    {
                                      __break(1u);
LABEL_38:
                                      id result = objc_msgSend(result, sel_mySportsTopicsScoringConfig);
                                      if (!result)
                                      {
                                        __break(1u);
LABEL_40:
                                        id result = objc_msgSend(result, sel_sportsTopStoriesScoringConfig);
                                        if (!result)
                                        {
                                          __break(1u);
LABEL_42:
                                          id result = objc_msgSend(result, sel_introToSportsGroupScoringConfig);
                                          if (!result)
                                          {
                                            __break(1u);
LABEL_44:
                                            id result = objc_msgSend(result, sel_introToSportsGroupForYouScoringConfig);
                                            if (!result)
                                            {
                                              __break(1u);
LABEL_46:
                                              id result = objc_msgSend(result, sel_articleListTagFeedGroupScoringConfig);
                                              if (!result)
                                              {
                                                __break(1u);
LABEL_48:
                                                id result = objc_msgSend(result, sel_tagFeedScoringConfig);
                                                if (!result)
                                                {
                                                  __break(1u);
LABEL_50:
                                                  id result = objc_msgSend(result, sel_highlightsGroupScoringConfig);
                                                  if (!result)
                                                  {
                                                    __break(1u);
LABEL_52:
                                                    id result = objc_msgSend(result, sel_newspaperTodayFeedScoringConfig);
                                                    if (!result)
                                                    {
                                                      __break(1u);
LABEL_54:
                                                      id result = objc_msgSend(result, sel_localSectionGroupScoringConfig);
                                                      if (!result)
                                                      {
                                                        __break(1u);
LABEL_56:
                                                        id result = objc_msgSend(result, sel_newspaperSectionGroupScoringConfig);
                                                        if (!result)
                                                        {
                                                          __break(1u);
LABEL_58:
                                                          id result = objc_msgSend(result, sel_sportsEventArticlesGroupScoringConfig);
                                                          if (!result)
                                                          {
                                                            __break(1u);
LABEL_60:
                                                            id result = objc_msgSend(result, sel_tagForYouGroupScoringConfig);
                                                            if (!result)
                                                            {
                                                              __break(1u);
LABEL_62:
                                                              id result = objc_msgSend(result, sel_tagRecentStoriesScoringConfig);
                                                              if (!result)
                                                              {
                                                                __break(1u);
LABEL_64:
                                                                id result = objc_msgSend(result, sel_tagDateRangeScoringConfig);
                                                                if (!result)
                                                                {
                                                                  __break(1u);
LABEL_66:
                                                                  id result = objc_msgSend(result, sel_sportsEventTopicGroupScoringConfig);
                                                                  if (!result)
                                                                  {
                                                                    __break(1u);
LABEL_68:
                                                                    id result = objc_msgSend(result, sel_affinityGroupScoringConfig);
                                                                    if (!result)
                                                                    {
                                                                      __break(1u);
LABEL_70:
                                                                      id result = objc_msgSend(result, sel_todayWidgetScoringConfig);
                                                                      if (!result)
                                                                      {
                                                                        __break(1u);
LABEL_72:
                                                                        id result = objc_msgSend(result, sel_tagWidgetScoringConfig);
                                                                        if (!result)
                                                                        {
                                                                          __break(1u);
LABEL_74:
                                                                          id result = objc_msgSend(result, sel_moreForYouScoringConfig);
                                                                          if (!result) {
                                                                            __break(1u);
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return result;
  }
}

uint64_t sub_1BFC3C330()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FormatMetadata();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C1515FDC();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BFC3C434()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t FormatContentSubgroupFilterSelector.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C005C9C8(0, &qword_1EB86B7A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C005CA2C();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1BFE9420C();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v10 = v12[1];
    *a2 = v12[0];
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC3C6B8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3C718()
{
  unint64_t result = qword_1EB88A1E8;
  if (!qword_1EB88A1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A1E8);
  }
  return result;
}

uint64_t sub_1BFC3C76C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC3C800()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BFC3C850@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1BFCA4380(0, &qword_1EB85E488, (uint64_t (*)(void))sub_1C0065FBC, (uint64_t)&type metadata for A6_V4.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0065FBC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C001814C(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

uint64_t sub_1BFC3CB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F415F240](a1, a2, ObjectType, a6);
}

uint64_t type metadata accessor for SubscriptionReferenceService()
{
  return self;
}

uint64_t sub_1BFC3CB8C()
{
  type metadata accessor for FormatPackageInventoryCache();
  uint64_t v0 = swift_allocObject();
  sub_1C00917C0();
  swift_allocObject();
  uint64_t result = sub_1C1518D9C();
  *(void *)(v0 + 16) = result;
  qword_1EB93C7D0 = v0;
  return result;
}

uint64_t sub_1BFC3CBE4()
{
  uint64_t result = type metadata accessor for FeedBannerAd();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151D87C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC3CCC4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC3CD6C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t static Commands.Suggestions.ignore.getter()
{
  if (qword_1EB85E4E0 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t FeedNativeAdIntegrator.object.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BFC3CE8C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC3CF04()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3CF64()
{
  unint64_t result = qword_1EB88E628;
  if (!qword_1EB88E628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E628);
  }
  return result;
}

void sub_1BFC3CFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1C0A5C348(a2, (uint64_t)v26);
  sub_1C0A5C348((uint64_t)v26, (uint64_t)&v27);
  if (sub_1C00F6584(&v27) != 1)
  {
    uint64_t v5 = v27;
    if (v27)
    {
      sub_1C1517EFC();
      double v6 = sub_1BFF493E4(v25, v5);
      if (v3)
      {
LABEL_7:
        swift_release();
        return;
      }
      double v7 = v6;
      swift_release();
      objc_msgSend(v2, sel_setDuration_, v7);
    }
    uint64_t v8 = v28;
    if (v28)
    {
      sub_1C1517EFC();
      double v9 = sub_1BFF493E4(v25, v8);
      if (v3) {
        goto LABEL_7;
      }
      double v10 = v9;
      swift_release();
      *(float *)&double v11 = v10;
      objc_msgSend(v2, sel_setSpeed_, v11);
    }
    uint64_t v12 = v29;
    if (v29)
    {
      sub_1C1517EFC();
      double v13 = sub_1BFF493E4(v25, v12);
      swift_release();
      if (v3) {
        return;
      }
      objc_msgSend(v2, sel_setTimeOffset_, v13);
    }
    uint64_t v14 = (void *)MEMORY[0x1E4F39F98];
    switch(v30)
    {
      case 1:
        goto LABEL_17;
      case 2:
        uint64_t v14 = (void *)MEMORY[0x1E4F39FA0];
        goto LABEL_17;
      case 3:
        uint64_t v14 = (void *)MEMORY[0x1E4F39FB0];
        goto LABEL_17;
      case 4:
        goto LABEL_18;
      default:
        uint64_t v14 = (void *)MEMORY[0x1E4F39FA8];
LABEL_17:
        objc_msgSend(v2, sel_setFillMode_, *v14);
LABEL_18:
        uint64_t v15 = v31;
        if (!v31) {
          goto LABEL_21;
        }
        sub_1C1517EFC();
        double v16 = sub_1BFF493E4(v25, v15);
        swift_release();
        if (v3) {
          return;
        }
        *(float *)&double v17 = v16;
        objc_msgSend(v2, sel_setRepeatCount_, v17);
LABEL_21:
        uint64_t v18 = v32;
        if (!v32) {
          goto LABEL_24;
        }
        sub_1C1517EFC();
        double v19 = sub_1BFF493E4(v25, v18);
        swift_release();
        if (v3) {
          return;
        }
        objc_msgSend(v2, sel_setRepeatDuration_, v19);
LABEL_24:
        if (v33 == 255) {
          goto LABEL_27;
        }
        sub_1C1517EFC();
        char v20 = FormatBoolean.value(contextLayoutOptions:)(v24);
        swift_release();
        if (v3) {
          return;
        }
        objc_msgSend(v4, sel_setAutoreverses_, v20 & 1);
LABEL_27:
        if (v35 == 255) {
          goto LABEL_30;
        }
        sub_1C1517EFC();
        char v21 = FormatBoolean.value(contextLayoutOptions:)(v24);
        swift_release();
        if (!v3)
        {
          objc_msgSend(v4, sel_setRemovedOnCompletion_, v21 & 1);
LABEL_30:
          if (v34 != 255)
          {
            if (v34) {
              id v22 = sub_1C131A1BC();
            }
            else {
              id v22 = sub_1C0C1A414();
            }
            if (!v3)
            {
              char v23 = v22;
              objc_msgSend(v4, sel_setTimingFunction_, v22);
            }
          }
        }
        break;
    }
  }
}

uint64_t sub_1BFC3D388()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3D3E8()
{
  unint64_t result = qword_1EB888108;
  if (!qword_1EB888108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888108);
  }
  return result;
}

void sub_1BFC3D43C()
{
  sub_1C151631C();
  if (v0 <= 0x3F)
  {
    sub_1BFF97C40();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

double static FormatServiceOptions.prefetch(purpose:log:)@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = qword_1EB87F110;
  id v6 = a1;
  id v7 = a2;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for FormatTransformData();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB93C758);
  double v10 = (int *)type metadata accessor for FormatServiceOptions();
  sub_1C0078E68(v9, a3 + v10[10], (uint64_t (*)(void))type metadata accessor for FormatTransformData);
  *(void *)(a3 + 40) = 0x4122750000000000;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + v10[12]) = v6;
  *(void *)(a3 + v10[13]) = v7;
  *(_OWORD *)(a3 + 56) = xmmword_1C15335A0;
  *(void *)(a3 + 72) = 0x40F5180000000000;
  *(void *)(a3 + 80) = 30;
  *(void *)(a3 + v10[11]) = MEMORY[0x1E4FBC870];
  *(void *)(a3 + v10[15]) = 0;
  *(void *)(a3 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(unsigned char *)(a3 + v10[14]) = 1;
  return result;
}

uint64_t sub_1BFC3D62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = a7(a1, a2, a3, a5, a6, v7, ObjectType, a4);
  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_1BFC3D6BC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E818 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85AA98);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

unint64_t sub_1BFC3D764()
{
  unint64_t result = qword_1EB87A300;
  if (!qword_1EB87A300)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A300);
  }
  return result;
}

uint64_t sub_1BFC3D7A4@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1BFC3D7F4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = MEMORY[0x1C18C9C60](v0 + 32);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 40))(v3, *(void *)(v0 + 40), ObjectType, v1);
}

uint64_t sub_1BFC3D854(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C7561666564 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E696C66666FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1BFC3D99C()
{
  uint64_t v0 = swift_allocObject();
  if (qword_1EB88FBF0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB88FBB0;
  __int16 v2 = word_1EB88FBB8;
  char v3 = byte_1EB88FBBA;
  uint64_t v4 = qword_1EB88FBC0;
  __int16 v5 = word_1EB88FBE8;
  *(void *)(v0 + 16) = qword_1EB88FBA8;
  *(void *)(v0 + 24) = v1;
  *(_WORD *)(v0 + 32) = v2;
  *(unsigned char *)(v0 + 34) = v3;
  *(void *)(v0 + 40) = v4;
  long long v6 = unk_1EB88FBD8;
  *(_OWORD *)(v0 + 48) = xmmword_1EB88FBC8;
  *(_OWORD *)(v0 + 64) = v6;
  *(_WORD *)(v0 + 80) = v5;
  qword_1EB88FBF8 = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFC3DA58()
{
  return sub_1C151687C();
}

id FeedHeadlineScoringContext.ontologyLevelConfiguration(treatment:)(id result)
{
  switch(*v1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      goto LABEL_6;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_14;
    case 7:
      goto LABEL_16;
    case 8:
      goto LABEL_18;
    case 9:
      goto LABEL_20;
    case 0xA:
      goto LABEL_22;
    case 0xB:
      goto LABEL_24;
    case 0xC:
      goto LABEL_26;
    case 0xD:
      goto LABEL_28;
    case 0xE:
      goto LABEL_30;
    case 0xF:
      goto LABEL_32;
    case 0x10:
      goto LABEL_34;
    case 0x11:
      goto LABEL_36;
    case 0x12:
      goto LABEL_38;
    case 0x13:
      goto LABEL_40;
    case 0x14:
      goto LABEL_42;
    case 0x15:
      goto LABEL_44;
    case 0x16:
      goto LABEL_46;
    case 0x17:
      goto LABEL_48;
    case 0x18:
      goto LABEL_50;
    case 0x19:
      goto LABEL_52;
    case 0x1A:
      goto LABEL_74;
    case 0x1B:
      goto LABEL_54;
    case 0x1C:
      goto LABEL_56;
    case 0x1D:
      goto LABEL_58;
    case 0x1E:
      goto LABEL_60;
    case 0x1F:
      goto LABEL_62;
    case 0x20:
      goto LABEL_64;
    case 0x21:
      goto LABEL_66;
    case 0x22:
      goto LABEL_68;
    case 0x23:
      goto LABEL_70;
    case 0x24:
      goto LABEL_72;
    default:
      uint64_t result = objc_msgSend(result, sel_defaultOntologyLevelConfig);
      if (result) {
        return result;
      }
      __break(1u);
LABEL_4:
      uint64_t result = objc_msgSend(result, sel_legacyAudioFeedOntologyLevelConfig);
      if (result) {
        return result;
      }
      __break(1u);
LABEL_6:
      uint64_t result = objc_msgSend(result, sel_audioFeedOntologyLevelConfig);
      if (!result)
      {
        __break(1u);
LABEL_8:
        uint64_t result = objc_msgSend(result, sel_articleRecirculationPrimaryOntologyLevelConfig);
        if (!result)
        {
          __break(1u);
LABEL_10:
          uint64_t result = objc_msgSend(result, sel_articleRecirculationSecondaryOntologyLevelConfig);
          if (!result)
          {
            __break(1u);
LABEL_12:
            uint64_t result = objc_msgSend(result, sel_articleRecirculationTertiaryOntologyLevelConfig);
            if (!result)
            {
              __break(1u);
LABEL_14:
              uint64_t result = objc_msgSend(result, sel_articleRecirculationQuaternaryOntologyLevelConfig);
              if (!result)
              {
                __break(1u);
LABEL_16:
                uint64_t result = objc_msgSend(result, sel_bestOfBundleOntologyLevelConfig);
                if (!result)
                {
                  __break(1u);
LABEL_18:
                  uint64_t result = objc_msgSend(result, sel_curatedOntologyLevelConfig);
                  if (!result)
                  {
                    __break(1u);
LABEL_20:
                    uint64_t result = objc_msgSend(result, sel_forYouOntologyLevelConfig);
                    if (!result)
                    {
                      __break(1u);
LABEL_22:
                      uint64_t result = objc_msgSend(result, sel_greatStoriesYouMissedOntologyLevelConfig);
                      if (!result)
                      {
                        __break(1u);
LABEL_24:
                        uint64_t result = objc_msgSend(result, sel_latestStoriesOntologyLevelConfig);
                        if (!result)
                        {
                          __break(1u);
LABEL_26:
                          uint64_t result = objc_msgSend(result, sel_localNewsOntologyLevelConfig);
                          if (!result)
                          {
                            __break(1u);
LABEL_28:
                            uint64_t result = objc_msgSend(result, sel_magazineFeedArticleOntologyLevelConfig);
                            if (!result)
                            {
                              __break(1u);
LABEL_30:
                              uint64_t result = objc_msgSend(result, sel_newspaperMagazineFeedOntologyLevelConfig);
                              if (!result)
                              {
                                __break(1u);
LABEL_32:
                                uint64_t result = objc_msgSend(result, sel_topicFeedOntologyLevelConfig);
                                if (!result)
                                {
                                  __break(1u);
LABEL_34:
                                  uint64_t result = objc_msgSend(result, sel_mySportsGroupOntologyLevelConfig);
                                  if (!result)
                                  {
                                    __break(1u);
LABEL_36:
                                    uint64_t result = objc_msgSend(result, sel_mySportsGroupForYouOntologyLevelConfig);
                                    if (!result)
                                    {
                                      __break(1u);
LABEL_38:
                                      uint64_t result = objc_msgSend(result, sel_mySportsTopicsOntologyLevelConfig);
                                      if (!result)
                                      {
                                        __break(1u);
LABEL_40:
                                        uint64_t result = objc_msgSend(result, sel_sportsTopStoriesOntologyLevelConfig);
                                        if (!result)
                                        {
                                          __break(1u);
LABEL_42:
                                          uint64_t result = objc_msgSend(result, sel_introToSportsGroupOntologyLevelConfig);
                                          if (!result)
                                          {
                                            __break(1u);
LABEL_44:
                                            uint64_t result = objc_msgSend(result, sel_introToSportsGroupForYouOntologyLevelConfig);
                                            if (!result)
                                            {
                                              __break(1u);
LABEL_46:
                                              uint64_t result = objc_msgSend(result, sel_articleListTagFeedGroupOntologyLevelConfig);
                                              if (!result)
                                              {
                                                __break(1u);
LABEL_48:
                                                uint64_t result = objc_msgSend(result, sel_tagFeedOntologyLevelConfig);
                                                if (!result)
                                                {
                                                  __break(1u);
LABEL_50:
                                                  uint64_t result = objc_msgSend(result, sel_highlightsGroupOntologyLevelConfig);
                                                  if (!result)
                                                  {
                                                    __break(1u);
LABEL_52:
                                                    uint64_t result = objc_msgSend(result, sel_newspaperTodayFeedOntologyLevelConfig);
                                                    if (!result)
                                                    {
                                                      __break(1u);
LABEL_54:
                                                      uint64_t result = objc_msgSend(result, sel_localSectionGroupOntologyLevelConfig);
                                                      if (!result)
                                                      {
                                                        __break(1u);
LABEL_56:
                                                        uint64_t result = objc_msgSend(result, sel_newspaperSectionGroupOntologyLevelConfig);
                                                        if (!result)
                                                        {
                                                          __break(1u);
LABEL_58:
                                                          uint64_t result = objc_msgSend(result, sel_sportsEventArticlesGroupOntologyLevelConfig);
                                                          if (!result)
                                                          {
                                                            __break(1u);
LABEL_60:
                                                            uint64_t result = objc_msgSend(result, sel_tagForYouGroupOntologyLevelConfig);
                                                            if (!result)
                                                            {
                                                              __break(1u);
LABEL_62:
                                                              uint64_t result = objc_msgSend(result, sel_tagRecentStoriesOntologyLevelConfig);
                                                              if (!result)
                                                              {
                                                                __break(1u);
LABEL_64:
                                                                uint64_t result = objc_msgSend(result, sel_tagDateRangeOntologyLevelConfig);
                                                                if (!result)
                                                                {
                                                                  __break(1u);
LABEL_66:
                                                                  uint64_t result = objc_msgSend(result, sel_sportsEventTopicGroupOntologyLevelConfig);
                                                                  if (!result)
                                                                  {
                                                                    __break(1u);
LABEL_68:
                                                                    uint64_t result = objc_msgSend(result, sel_affinityGroupOntologyLevelConfig);
                                                                    if (!result)
                                                                    {
                                                                      __break(1u);
LABEL_70:
                                                                      uint64_t result = objc_msgSend(result, sel_todayWidgetOntologyLevelConfig);
                                                                      if (!result)
                                                                      {
                                                                        __break(1u);
LABEL_72:
                                                                        uint64_t result = objc_msgSend(result, sel_tagWidgetOntologyLevelConfig);
                                                                        if (!result)
                                                                        {
                                                                          __break(1u);
LABEL_74:
                                                                          uint64_t result = objc_msgSend(result, sel_moreForYouOntologyLevelConfig);
                                                                          if (!result) {
                                                                            __break(1u);
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return result;
  }
}

void sub_1BFC3DF8C()
{
  sub_1C151A3EC();
  uint64_t v0 = (uint64_t (*)(void))sub_1C151A3FC();
  id v2 = (id)v0();
  sub_1C008CF90((uint64_t)v2, v1);
}

uint64_t sub_1BFC3E004()
{
  uint64_t result = MEMORY[0x1C18C0080]();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FeedWeatherReferenceService()
{
  return self;
}

uint64_t sub_1BFC3E060()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3E0C0()
{
  unint64_t result = qword_1EB886FD8;
  if (!qword_1EB886FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886FD8);
  }
  return result;
}

uint64_t FeedRebuildPolicy.groupLimit.getter()
{
  sub_1C151933C();
  return v1;
}

uint64_t sub_1BFC3E148()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3E1A8()
{
  unint64_t result = qword_1EB867D78;
  if (!qword_1EB867D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867D78);
  }
  return result;
}

uint64_t sub_1BFC3E1FC()
{
  return swift_release();
}

uint64_t sub_1BFC3E240()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3E2A0()
{
  unint64_t result = qword_1EB885808;
  if (!qword_1EB885808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB885808);
  }
  return result;
}

uint64_t sub_1BFC3E2F4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BFC3E358()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BFC3E3E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1BFC3E490()
{
  if (!qword_1EB882B70)
  {
    sub_1C151A6AC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB882B70);
    }
  }
}

uint64_t type metadata accessor for AssetManagerReferenceService()
{
  return self;
}

id OfflineManager.onStateChange(_:)(uint64_t a1, uint64_t a2)
{
  char v3 = (void *)(v2 + qword_1EA1AA1F0);
  uint64_t v4 = *(void *)(v2 + qword_1EA1AA1F0);
  *char v3 = a1;
  v3[1] = a2;
  sub_1BFC3E5C0(v4);
  swift_retain();
  return v6;
}

uint64_t sub_1BFC3E570(uint64_t a1)
{
  sub_1BFC3E5C0(*(void *)(a1 + qword_1EA1AA1F0));
  uint64_t v2 = a1 + qword_1EA1AA1F8;
  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t sub_1BFC3E5C0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for MailShareLinkTextProvider()
{
  return self;
}

uint64_t sub_1BFC3E5F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    uint64_t v5 = v2;
    id v6 = &unk_1C15D11E0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC3E6AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC3E748()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3E7A8()
{
  unint64_t result = qword_1EB88B938;
  if (!qword_1EB88B938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B938);
  }
  return result;
}

uint64_t sub_1BFC3E7FC()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FormatCompilerOptions(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void *FeedLayoutCache.init(database:)(uint64_t a1)
{
  sub_1C0091724();
  swift_allocObject();
  v1[2] = sub_1C1518D9C();
  v1[8] = 0;
  v1[9] = 0;
  sub_1C0088240(a1, (uint64_t)(v1 + 3));
  return v1;
}

BOOL sub_1BFC3E984(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  unsigned __int8 v35 = a1;
  uint64_t v4 = sub_1C151677C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0064EE8(0, &qword_1EB8711A8, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = (char *)v27 - v9;
  uint64_t v11 = *(void *)(a3 + 16);
  if (v11)
  {
    double v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    unsigned __int8 v34 = v13;
    uint64_t v14 = a3;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v16 = *(void *)(v12 + 56);
    uint64_t v31 = v7;
    uint64_t v32 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v28 = v16;
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    char v30 = (void (**)(char *, uint64_t))(v12 - 8);
    v27[2] = v14;
    swift_bridgeObjectRetain();
    unsigned __int8 v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    v27[1] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v36 = v11;
      v34(v10, v15, v4);
      double v17 = *v33;
      (*v33)(v10, 0, 1, v4);
      int v18 = (*v32)(v10, 1, v4);
      BOOL v19 = v18 != 1;
      if (v18 == 1) {
        break;
      }
      uint64_t v20 = v12;
      uint64_t v21 = v4;
      id v22 = v31;
      (*v29)(v31, v10, v21);
      uint64_t v23 = v37;
      char v24 = v35(v22);
      uint64_t v37 = v23;
      if (v23)
      {
        (*v30)(v22, v21);
        swift_bridgeObjectRelease();
        return v19;
      }
      char v25 = v24;
      (*v30)(v22, v21);
      if (v25) {
        break;
      }
      uint64_t v4 = v21;
      v15 += v28;
      uint64_t v11 = v36 - 1;
      uint64_t v12 = v20;
      if (v36 == 1) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    double v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v17(v10, 1, 1, v4);
    BOOL v19 = 0;
  }
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1BFC3EC8C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3ECEC()
{
  unint64_t result = qword_1EB88A280;
  if (!qword_1EB88A280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A280);
  }
  return result;
}

uint64_t sub_1BFC3ED40()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB85E020, (void (*)(void))sub_1C00846FC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  uint64_t v31 = v0;
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v32) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v20 = *(void **)v19;
    uint64_t v21 = *(void **)(v19 + 8);
    sub_1C1520DBC();
    id v22 = v21;
    id v23 = v20;
    sub_1C151FB8C();
    sub_1C1520DCC();
    uint64_t result = sub_1C1520E0C();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v9 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v25) & ~*(void *)(v9 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v9 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    double v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *double v13 = v23;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v31;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BFC3F014()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3F074()
{
  unint64_t result = qword_1EB876798;
  if (!qword_1EB876798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876798);
  }
  return result;
}

uint64_t sub_1BFC3F0C8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1336, sub_1C005E668, v0 + 1296);
}

uint64_t sub_1BFC3F148()
{
  v1[219] = v0;
  if (v0)
  {
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 173, sub_1C0238190, v1 + 180);
  }
  else
  {
    v1[220] = v1[167];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 2, v1 + 173, sub_1C005E6A0, v1 + 168);
  }
}

uint64_t sub_1BFC3F214()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC3F2E4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3F344()
{
  unint64_t result = qword_1EB866470;
  if (!qword_1EB866470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866470);
  }
  return result;
}

uint64_t sub_1BFC3F398()
{
  uint64_t result = sub_1C151FD8C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FormatResetNode()
{
  return self;
}

uint64_t sub_1BFC3F450()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3F4B0()
{
  unint64_t result = qword_1EB865A68;
  if (!qword_1EB865A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865A68);
  }
  return result;
}

uint64_t sub_1BFC3F504@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB863C68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB863C48);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1BFC3F5AC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E858 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85E838);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1BFC3F654()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3F6B4()
{
  unint64_t result = qword_1EB8880F0;
  if (!qword_1EB8880F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8880F0);
  }
  return result;
}

uint64_t sub_1BFC3F708()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PuzzleTypeReferenceService()
{
  return self;
}

uint64_t sub_1BFC3F7C4()
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1BFC3F854()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3F8B4()
{
  unint64_t result = qword_1EB88D168;
  if (!qword_1EB88D168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D168);
  }
  return result;
}

uint64_t sub_1BFC3F908(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C0062CCC();
  uint64_t result = sub_1C15204EC();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v31 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_41;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v30;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      uint64_t v22 = *(void *)(v5 + 56) + 16 * v17;
      if (a2) {
        sub_1BFC372E8(v22, (uint64_t)v32);
      }
      else {
        sub_1C107791C(v22, (uint64_t)v32);
      }
      uint64_t result = sub_1C1520DAC();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      uint64_t result = sub_1BFC372E8((uint64_t)v32, *(void *)(v7 + 56) + 16 * v15);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t type metadata accessor for FormatLayeredMediaNode()
{
  return self;
}

uint64_t sub_1BFC3FBEC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3FC4C()
{
  unint64_t result = qword_1EB88D518;
  if (!qword_1EB88D518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D518);
  }
  return result;
}

uint64_t sub_1BFC3FCA0()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

NewsFeed::FeedMode_optional __swiftcall FeedMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC3FD9C()
{
  return sub_1C151908C();
}

uint64_t sub_1BFC3FDD4()
{
  uint64_t result = sub_1C151772C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151757C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

NewsFeed::FeedPoolCachePolicy_optional __swiftcall FeedPoolCachePolicy.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC3FF34()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC3FF94()
{
  unint64_t result = qword_1EB864728;
  if (!qword_1EB864728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864728);
  }
  return result;
}

uint64_t sub_1BFC3FFE8()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FeedSponsorshipAdReferenceService()
{
  return self;
}

uint64_t sub_1BFC400F0()
{
  unint64_t v1 = *(void **)(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC4013C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC4019C()
{
  unint64_t result = qword_1EB888DC8;
  if (!qword_1EB888DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888DC8);
  }
  return result;
}

uint64_t sub_1BFC401F0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E868 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85AAE8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1BFC40298()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for LoadedFont(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t sub_1BFC4036C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC403CC()
{
  unint64_t result = qword_1EB87DE28;
  if (!qword_1EB87DE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87DE28);
  }
  return result;
}

uint64_t type metadata accessor for FormatStateViewNode()
{
  return self;
}

uint64_t type metadata accessor for CloudContextReferenceService()
{
  return self;
}

uint64_t sub_1BFC40468()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BFC404B0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC40510()
{
  unint64_t result = qword_1EB867458;
  if (!qword_1EB867458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867458);
  }
  return result;
}

uint64_t sub_1BFC40564()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC405C4()
{
  unint64_t result = qword_1EB888128;
  if (!qword_1EB888128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888128);
  }
  return result;
}

uint64_t sub_1BFC40618(uint64_t a1)
{
  uint64_t v36 = a1 + 64;
  uint64_t v34 = MEMORY[0x1E4FBC868];
  uint64_t v38 = MEMORY[0x1E4FBC868];
  uint64_t v2 = -1 << *(unsigned char *)(a1 + 32);
  if (-v2 < 64) {
    uint64_t v3 = ~(-1 << -(char)v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v35 = (unint64_t)(63 - v2) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v4) {
    goto LABEL_8;
  }
LABEL_9:
  int64_t v10 = i + 1;
  if (__OFADD__(i, 1))
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v10 >= v35) {
    goto LABEL_57;
  }
  unint64_t v11 = *(void *)(v36 + 8 * v10);
  int64_t v12 = i + 1;
  if (!v11)
  {
    int64_t v12 = i + 2;
    if (i + 2 >= v35) {
      goto LABEL_57;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v12);
    if (!v11)
    {
      int64_t v12 = i + 3;
      if (i + 3 >= v35) {
        goto LABEL_57;
      }
      unint64_t v11 = *(void *)(v36 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = i + 4;
        if (i + 4 >= v35) {
          goto LABEL_57;
        }
        unint64_t v11 = *(void *)(v36 + 8 * v12);
        if (!v11)
        {
          int64_t v13 = i + 5;
          if (i + 5 < v35)
          {
            unint64_t v11 = *(void *)(v36 + 8 * v13);
            if (v11)
            {
              int64_t v12 = i + 5;
              goto LABEL_24;
            }
            while (1)
            {
              int64_t v12 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_61;
              }
              if (v12 >= v35) {
                break;
              }
              unint64_t v11 = *(void *)(v36 + 8 * v12);
              ++v13;
              if (v11) {
                goto LABEL_24;
              }
            }
          }
LABEL_57:
          sub_1BFEFB808();
          return v34;
        }
      }
    }
  }
LABEL_24:
  unint64_t v4 = (v11 - 1) & v11;
  unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
  for (i = v12; ; unint64_t v9 = v8 | (i << 6))
  {
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8 * v9);
    unint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v9);
    uint64_t v37 = MEMORY[0x1E4FBC860];
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1C15204BC();
      uint64_t v16 = result;
      if (!result) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v16) {
        goto LABEL_40;
      }
    }
    if (v16 < 1)
    {
      __break(1u);
      goto LABEL_59;
    }
    if ((v15 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v16; ++j)
      {
        uint64_t v18 = MEMORY[0x1C18C7CB0](j, v15);
        unint64_t v19 = (void *)MEMORY[0x1C18C9C60](v18 + 16);

        if (v19)
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (uint64_t k = 0; k != v16; ++k)
      {
        uint64_t v21 = (void *)MEMORY[0x1C18C9C60](*(void *)(v15 + 8 * k + 32) + 16);
        swift_retain();

        if (v21)
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
        }
        else
        {
          swift_release();
        }
      }
    }
LABEL_40:
    swift_bridgeObjectRelease();
    if (v37 < 0 || (v37 & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v7 = sub_1C15204BC();
      swift_release();
      if (!v7) {
        goto LABEL_7;
      }
    }
    else if (!*(void *)(v37 + 16))
    {
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      if (!v4) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    uint64_t v22 = v34;
    unint64_t v23 = *(void *)(v34 + 16);
    if (*(void *)(v34 + 24) <= v23)
    {
      sub_1BFC38FB0(v23 + 1, 1);
      uint64_t v22 = v38;
    }
    uint64_t result = sub_1C1520DAC();
    uint64_t v24 = v22 + 64;
    uint64_t v34 = v22;
    uint64_t v25 = -1 << *(unsigned char *)(v22 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v22 + 64 + 8 * (v26 >> 6))) == 0) {
      break;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v22 + 64 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_55:
    *(void *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = 8 * v28;
    *(void *)(*(void *)(v22 + 48) + v33) = v14;
    *(void *)(*(void *)(v22 + 56) + v33) = v37;
    ++*(void *)(v22 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_9;
    }
LABEL_8:
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
  }
  char v29 = 0;
  unint64_t v30 = (unint64_t)(63 - v25) >> 6;
  while (++v27 != v30 || (v29 & 1) == 0)
  {
    BOOL v31 = v27 == v30;
    if (v27 == v30) {
      unint64_t v27 = 0;
    }
    v29 |= v31;
    uint64_t v32 = *(void *)(v24 + 8 * v27);
    if (v32 != -1)
    {
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
      goto LABEL_55;
    }
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ShareLinkProvider()
{
  return self;
}

uint64_t sub_1BFC40AE0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E828 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85AAC8);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

NewsFeed::FeedGroupClusterOrderingMode_optional __swiftcall FeedGroupClusterOrderingMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t type metadata accessor for PuzzleStatsService()
{
  return self;
}

uint64_t type metadata accessor for DisposableObserver()
{
  return self;
}

uint64_t sub_1BFC40C30()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC40CB8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC40D18()
{
  unint64_t result = qword_1EB8885E8;
  if (!qword_1EB8885E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8885E8);
  }
  return result;
}

uint64_t *sub_1BFC40D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v4;
  v4[2] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v4[3] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v4[4] = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24))(a2);
  uint64_t v9 = *(void *)(v8 + 80);
  v4[5] = (uint64_t)sub_1C008D250(a1, v9, a2, a3);
  v4[6] = v10;
  v4[7] = (uint64_t)sub_1C008D640(a1, v9, a2, a3);
  v4[8] = v11;
  v4[9] = (uint64_t)sub_1C008D0B8(a1, v9, a2, a3);
  v4[10] = v12;
  v4[11] = (uint64_t)sub_1C008D37C(a1, v9, a2, a3);
  v4[12] = v13;
  v4[13] = (uint64_t)sub_1C008D4A8(a1, v9, a2, a3);
  v4[14] = v14;
  return v4;
}

BOOL FeedServiceContextType.shouldRefreshRootCursor(createdDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedServiceOptions(0);
  uint64_t v10 = v9 - 8;
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 8))(a2, a3, v11);
  uint64_t v14 = &v13[*(int *)(v10 + 32)];
  double v15 = *(double *)v14;
  char v16 = v14[8];
  sub_1BFE62B90((uint64_t)v13, type metadata accessor for FeedServiceOptions);
  if (v16) {
    return 0;
  }
  sub_1C151630C();
  sub_1C15161FC();
  double v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v15 < v19;
}

uint64_t sub_1BFC41040@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF2EF38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v29 - v7;
  MEMORY[0x1F4188790](v9);
  __n128 v11 = (char *)&v29 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v29 - v13;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v29 - v16;
  switch(*v1)
  {
    case 1:
    case 6:
    case 7:
      sub_1C1515F7C();
      uint64_t v18 = sub_1C1515FDC();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18);
      if (result == 1)
      {
        __break(1u);
        goto LABEL_14;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v14, v18);
      break;
    case 2:
      sub_1C1515F7C();
      uint64_t v25 = sub_1C1515FDC();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25);
      if (result == 1) {
        goto LABEL_16;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v11, v25);
      break;
    case 3:
      sub_1C1515F7C();
      uint64_t v27 = sub_1C1515FDC();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v8, 1, v27);
      if (result == 1) {
        goto LABEL_17;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(a1, v8, v27);
      break;
    case 4:
    case 5:
      sub_1C1515F7C();
      uint64_t v21 = sub_1C1515FDC();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v5, 1, v21);
      if (result == 1)
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(a1, v5, v21);
      break;
    default:
      sub_1C1515F7C();
      uint64_t v23 = sub_1C1515FDC();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23);
      if (result == 1)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(a1, v17, v23);
      }
      break;
  }
  return result;
}

uint64_t sub_1BFC414A4()
{
  return swift_initClassMetadata2();
}

void *sub_1BFC414EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0062594();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 192);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[24 * v8 + 4]) {
          memmove(v12, a4 + 4, 192 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C00633B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1BFC41610()
{
  sub_1C1515FDC();
  if (v0 <= 0x3F)
  {
    sub_1BFF00BEC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t FeedLoadingGate.__deallocating_deinit()
{
  swift_release();
  sub_1BFD63E0C(v0 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatGroupNodeMaskLayoutAttributes()
{
  return self;
}

uint64_t sub_1BFC41788@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB863CF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB863CD0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1BFC41830()
{
  uint64_t result = sub_1C151C1FC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t FeedPluginManagerResult.fetchResult.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t *initializeWithCopy for FormatAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      unint64_t v6 = (id *)(a2 + 1);
      unsigned int v7 = *((unsigned __int8 *)a2 + 16);
      swift_bridgeObjectRetain();
      if (v7 <= 0xFD)
      {
        id v37 = *v6;
        sub_1BFF43A68(*v6, v7);
        a1[1] = (uint64_t)v37;
        *((unsigned char *)a1 + 16) = v7;
      }
      else
      {
        a1[1] = (uint64_t)*v6;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      }
      goto LABEL_30;
    case 1u:
      uint64_t v8 = *a2;
      uint64_t v9 = a2[1];
      uint64_t v10 = a2[2];
      uint64_t v11 = a2[3];
      uint64_t v12 = a2[4];
      char v13 = *((unsigned char *)a2 + 41);
      unsigned __int8 v14 = *((unsigned char *)a2 + 40);
      sub_1BFF43AA4((id)*a2, v9, v10, v11, v12, v14, v13);
      *a1 = v8;
      a1[1] = v9;
      a1[2] = v10;
      a1[3] = v11;
      a1[4] = v12;
      *((unsigned char *)a1 + 40) = v14;
      *((unsigned char *)a1 + 41) = v13;
      uint64_t v15 = (void *)a2[7];
      a1[6] = a2[6];
      unsigned __int8 v16 = *((unsigned char *)a2 + 64);
      swift_bridgeObjectRetain();
      sub_1BFF43A68(v15, v16);
      a1[7] = (uint64_t)v15;
      *((unsigned char *)a1 + 64) = v16;
      goto LABEL_30;
    case 2u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_30;
    case 4u:
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      uint64_t v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      uint64_t v19 = a2[5];
      a1[4] = a2[4];
      a1[5] = v19;
      uint64_t v20 = a2[6];
      uint64_t v21 = a2[7];
      uint64_t v22 = a2[8];
      uint64_t v23 = a2[9];
      char v24 = *((unsigned char *)a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF429DC(v20, v21, v22, v23, v24);
      a1[6] = v20;
      a1[7] = v21;
      a1[8] = v22;
      a1[9] = v23;
      *((unsigned char *)a1 + 80) = v24;
      uint64_t v25 = a2[12];
      a1[11] = a2[11];
      a1[12] = v25;
      uint64_t v26 = a2[14];
      a1[13] = a2[13];
      a1[14] = v26;
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_30;
    case 5u:
      uint64_t v27 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v38 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v39 = *(void *)(v38 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v43 = a2[1];
          *a1 = *a2;
          a1[1] = v43;
          uint64_t v44 = *(int *)(v38 + 20);
          __dst = (char *)a1 + v44;
          uint64_t v45 = (char *)a2 + v44;
          uint64_t v46 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v47 = *(void *)(v46 - 8);
          uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
          swift_bridgeObjectRetain();
          if (v48(v45, 1, v46))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dst, v45, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            uint64_t v50 = sub_1C1515FDC();
            uint64_t v51 = *(void *)(v50 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v45, 2, v50))
            {
              memcpy(__dst, v45, *(void *)(v47 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v51 + 16))(__dst, v45, v50);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 2, v50);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
          }
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
          goto LABEL_30;
        }
        uint64_t v29 = a2[1];
        *a1 = *a2;
        a1[1] = v29;
        uint64_t v30 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        BOOL v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v34 = *(void *)(v33 - 8);
        int64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        swift_bridgeObjectRetain();
        if (v35(v32, 1, v33))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          uint64_t v41 = sub_1C1515FDC();
          uint64_t v42 = *(void *)(v41 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v32, 2, v41))
          {
            memcpy(v31, v32, *(void *)(v34 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v31, v32, v41);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v31, 0, 2, v41);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_30:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_1BFC41FF0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t FeedScalingManager.$currentFeedScaleSize.getter()
{
  swift_retain();
  uint64_t v0 = sub_1C15170BC();
  swift_release();
  return v0;
}

uint64_t sub_1BFC4208C(uint64_t a1)
{
  char v4 = *(unsigned char *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  long long v7 = *(_OWORD *)(v1 + 40);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1C005E7F4;
  *(unsigned char *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v7;
  *(void *)(v5 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1BFC74DA8, 0, 0);
}

uint64_t sub_1BFC42154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v31 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C002FEFC(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C15156FC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *(_OWORD *)(a1 + 80);
  v34[4] = *(_OWORD *)(a1 + 64);
  v34[5] = v20;
  uint64_t v35 = *(void *)(a1 + 96);
  long long v21 = *(_OWORD *)(a1 + 16);
  v34[0] = *(_OWORD *)a1;
  v34[1] = v21;
  long long v22 = *(_OWORD *)(a1 + 48);
  v34[2] = *(_OWORD *)(a1 + 32);
  v34[3] = v22;
  if (*(void *)(a2 + 16))
  {
    uint64_t v30 = a3;
    sub_1C151564C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v15, (uint64_t (*)(void))sub_1C002FEFC);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v30, v4, v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      uint64_t v25 = sub_1C15155FC();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v25);
      *(&v29 - 2) = (uint64_t)v34;
      unint64_t v27 = sub_1C002FB68((void (*)(void))sub_1C0A3F4B8, (uint64_t)(&v29 - 4), a2);
      uint64_t v33 = v26;
      sub_1C002FB3C(v27);
      sub_1C151560C();
      sub_1C151565C();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      uint64_t v28 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v4, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v8) == 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v30, v28, v8);
        return sub_1BFEFEBC8((uint64_t)v12, (uint64_t (*)(void))sub_1BFF00BEC);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v8);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v30, v12, v8);
      }
    }
  }
  else
  {
    char v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
    return v24(a3, v4, v8);
  }
}

uint64_t sub_1BFC42598()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1BFEFFF68(0, &qword_1EB87A378);
  uint64_t result = sub_1C152008C();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    long long v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    unint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *long long v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1C1520DAC();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1BFC42830()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC4287C(uint64_t a1, uint64_t a2)
{
  sub_1BFCA4380(0, (unint64_t *)&unk_1EB85E330, (uint64_t (*)(void))sub_1BFCA44B0, (uint64_t)&type metadata for A6_V4.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  int64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1BFCA442C(0, &qword_1EB85E310, MEMORY[0x1E4FAB6F0]);
  sub_1BFCA43E8(&qword_1EB85E308, &qword_1EB85E310, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BFC42A68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC42B04()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t type metadata accessor for SportsTaxonomyGraph()
{
  return self;
}

uint64_t sub_1BFC42B74()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC42C0C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static FeedCursorGroup.tags(from:excluding:)()
{
  return sub_1C151E97C();
}

uint64_t sub_1BFC42D58()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC42DB8()
{
  unint64_t result = qword_1EB88E9D8;
  if (!qword_1EB88E9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E9D8);
  }
  return result;
}

void destroy for FeedEdition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t type metadata accessor for Assembly()
{
  return self;
}

uint64_t type metadata accessor for FeedPersonalizationService()
{
  return self;
}

uint64_t sub_1BFC42EC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC42F10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFC42F58()
{
  sub_1C151D2DC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FormatItemNodeData();
    if (v1 <= 0x3F)
    {
      type metadata accessor for FormatButtonNodeData();
      if (v2 <= 0x3F)
      {
        sub_1BFEEF440(319, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        if (v3 <= 0x3F)
        {
          type metadata accessor for FormatMicaData();
          if (v4 <= 0x3F)
          {
            type metadata accessor for FormatVideoData(319);
            if (v5 <= 0x3F)
            {
              type metadata accessor for SharedItem();
              if (v6 <= 0x3F)
              {
                type metadata accessor for FormatVideoPlayerData();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for FeedSponsorshipBannerAd();
                  if (v8 <= 0x3F) {
                    swift_initEnumMetadataMultiPayload();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1BFC43240()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FeedPluginManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + qword_1EB864E70;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t FeedEdition.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1BFC433A4()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC433F0()
{
  return swift_initClassMetadata2();
}

uint64_t FormatContent.Resolved.iAdKeywords.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupConfig.init(type:identifier:kindIdentifier:slots:paidVisibility:minNewsVersion:maxNewsVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:priority:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, uint64_t a17, uint64_t a18)
{
  char v19 = *a8;
  char v20 = *a16;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = v19;
  unint64_t v21 = (int *)type metadata accessor for FeedGroupConfig();
  sub_1BFEC1200(a10, a9 + v21[15]);
  sub_1BFEC1200(a11, a9 + v21[16]);
  *(void *)(a9 + v21[17]) = a12;
  *(void *)(a9 + v21[18]) = a13;
  *(void *)(a9 + v21[19]) = a14;
  *(void *)(a9 + v21[20]) = a15;
  *(unsigned char *)(a9 + v21[21]) = v20;
  uint64_t v22 = a9 + v21[22];
  unint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a18 - 8) + 32);
  return v23(v22, a17, a18);
}

void sub_1BFC4359C()
{
  if (!qword_1EB884DE0)
  {
    type metadata accessor for FormatRegex();
    sub_1C085F050(&qword_1EB886F40, (void (*)(uint64_t))type metadata accessor for FormatRegex);
    sub_1C085F050(&qword_1EB886F28, (void (*)(uint64_t))type metadata accessor for FormatRegex);
    sub_1C085F050(&qword_1EB886F30, (void (*)(uint64_t))type metadata accessor for FormatRegex);
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884DE0);
    }
  }
}

uint64_t sub_1BFC436A0()
{
  uint64_t v0 = type metadata accessor for FeedServiceOptions(0);
  __swift_allocate_value_buffer(v0, qword_1EB884948);
  uint64_t v1 = (unsigned char *)__swift_project_value_buffer(v0, (uint64_t)qword_1EB884948);
  type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  uint64_t result = swift_storeEnumTagMultiPayload();
  unsigned char *v1 = 0;
  uint64_t v3 = &v1[*(int *)(v0 + 24)];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  v1[*(int *)(v0 + 28)] = 1;
  return result;
}

uint64_t sub_1BFC43730(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFC43790@<X0>(uint64_t *a1@<X8>)
{
  return FeedCursor.shortDescription.getter(a1);
}

uint64_t sub_1BFC437B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatFeedGroup.init(from:)(a1, a2);
}

unint64_t sub_1BFC437CC()
{
  uint64_t v1 = 0x656C797473;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1BFC43820()
{
  uint64_t v1 = 0x676E6963617073;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x61746E6563726570;
  }
}

uint64_t sub_1BFC43878()
{
  sub_1BFE4F8BC(0, &qword_1EB885200, (uint64_t)&type metadata for OpenSportEventContext, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFE4F8BC(0, &qword_1EB885268, (uint64_t)&type metadata for OpenSportEventContext, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB885420 = result;
  return result;
}

uint64_t (*sub_1BFC439B8(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))(void)
{
  return sub_1BFE47F1C(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1BFC43A18()
{
  return sub_1BFE4028C();
}

void sub_1BFC43A3C()
{
  sub_1BFE0E1D8(319, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F)
  {
    sub_1BFE0E1D8(319, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1BFC43B54()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x61746E6563726570;
  }
}

uint64_t sub_1BFC43B8C()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 1937335659;
  }
}

uint64_t sub_1BFC43BB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC43BE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC43C20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

void sub_1BFC43C58(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1BFC43C70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC43CA8(void *a1)
{
  a1[1] = sub_1BFD97374(&qword_1EB879180, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue);
  a1[2] = sub_1BFD97374(&qword_1EB870F20, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue);
  uint64_t result = sub_1BFD97374(&qword_1EB8929A8, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue);
  a1[3] = result;
  return result;
}

uint64_t sub_1BFC43D54(void *a1)
{
  a1[1] = sub_1BFEBC2BC(&qword_1EB874558, (void (*)(uint64_t))type metadata accessor for FormatPackage);
  a1[2] = sub_1BFEBC2BC(&qword_1EB874550, (void (*)(uint64_t))type metadata accessor for FormatPackage);
  uint64_t result = sub_1BFEBC2BC(&qword_1EB891120, (void (*)(uint64_t))type metadata accessor for FormatPackage);
  a1[3] = result;
  return result;
}

void sub_1BFC43E00()
{
  sub_1BFD3E320(319, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  if (v0 <= 0x3F)
  {
    sub_1BFD3E320(319, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1BFC43F28()
{
  sub_1BFD3E320(319, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  if (v0 <= 0x3F)
  {
    sub_1BFD3E320(319, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1BFC44068@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PuzzleTypeStats.init(from:)(a1, a2);
}

uint64_t sub_1BFC44080(void *a1)
{
  return FormatTypeCollection.encode(to:)(a1);
}

uint64_t sub_1BFC44098(void *a1)
{
  return FormatDecorationCollection.encode(to:)(a1);
}

uint64_t sub_1BFC440B0()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFC5CA3C(0, &qword_1EB87C840, &qword_1EB87ED78, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C8A0, &qword_1EB87ED78, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB85F498 = result;
  return result;
}

uint64_t sub_1BFC44208()
{
  uint64_t v0 = MEMORY[0x1E4FBB3D0];
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C828, (unint64_t *)&unk_1EB87ED60, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, &qword_1EB87C888, (unint64_t *)&unk_1EB87ED60, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB8907D0 = result;
  return result;
}

uint64_t sub_1BFC4435C()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFC5CA3C(0, &qword_1EB87C840, &qword_1EB87ED78, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C8A0, &qword_1EB87ED78, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CA40 = result;
  return result;
}

uint64_t sub_1BFC444B4(void *a1)
{
  return FormatHeadlineBinding.LayeredMedia.init(from:)(a1);
}

uint64_t FormatHeadlineBinding.LayeredMedia.init(from:)(void *a1)
{
  return sub_1BFD3F064(a1, (void (*)(uint64_t))sub_1BFD3F3E8, (uint64_t)&_s10CodingTypeON_91, (uint64_t)&unk_1F1B856A0);
}

uint64_t sub_1BFC44508(void *a1)
{
  return FormatCustomItemBinding.URL.init(from:)(a1);
}

uint64_t FormatCustomItemBinding.URL.init(from:)(void *a1)
{
  return sub_1BFD3F064(a1, (void (*)(uint64_t))sub_1BFD3F394, (uint64_t)&_s3URLO10CodingTypeON, (uint64_t)&unk_1F1B81798);
}

uint64_t sub_1BFC4455C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatBindingURLExpressionLogic.init(from:)(a1, a2);
}

uint64_t FormatBindingURLExpressionLogic.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD8024, (uint64_t)&_s10CodingTypeON_128, (uint64_t)&unk_1F1B840F8, a2);
}

uint64_t sub_1BFC445B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatIssueBinding.Text.init(from:)(a1, a2);
}

uint64_t FormatIssueBinding.Text.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD80CC, (uint64_t)&_s4TextO10CodingTypeON_3, (uint64_t)&unk_1F1B85E20, a2);
}

uint64_t sub_1BFC44604@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatTagBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Bool.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD8120, (uint64_t)&_s4BoolO10CodingTypeON_4, (uint64_t)&unk_1F1B88448, a2);
}

uint64_t sub_1BFC44658@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatHeadlineBinding.DateTime.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.DateTime.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD8078, (uint64_t)&_s8DateTimeO10CodingTypeON, (uint64_t)&unk_1F1B63F20, a2);
}

uint64_t sub_1BFC446AC()
{
  sub_1BFC447DC(0, (unint64_t *)&unk_1EB87BDC0, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFC447DC(0, &qword_1EB87C8E0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CAF8 = result;
  return result;
}

void sub_1BFC447DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFC4483C();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFC4483C()
{
  unint64_t result = qword_1EB87B090;
  if (!qword_1EB87B090)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87B090);
  }
  return result;
}

void sub_1BFC4487C()
{
  sub_1BFC44A48(319, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if (v0 <= 0x3F)
  {
    sub_1BFC44A48(319, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
    if (v1 <= 0x3F)
    {
      type metadata accessor for FormatOsloSheetPurchaseDataModel(319);
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t sub_1BFC449B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1BFC44A48(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFC44A9C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFC44AF0()
{
  sub_1BFC44C20(0, &qword_1EB871608, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v6 - v3;
  sub_1BFC44C20(0, &qword_1EB871648, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB871698 = result;
  return result;
}

void sub_1BFC44C20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFC44C80(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t FeedGroupKnobsRuleValue.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BFC44D68(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1BFC44E98(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C1074770();
      goto LABEL_7;
    }
    sub_1BFC3F908(v13, a3 & 1);
    unint64_t v19 = sub_1BFC44E98(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 16 * v10;
    return sub_1C1077978(a1, v17);
  }
LABEL_13:
  return sub_1C0062D4C(v10, a2, a1, v16);
}

unint64_t sub_1BFC44E98(uint64_t a1)
{
  uint64_t v2 = sub_1C1520DAC();
  return sub_1BFFE63F4(a1, v2);
}

uint64_t sub_1BFC44ED4(void *a1)
{
  return FormatContentSubgroup.Resolved.encode(to:)(a1);
}

uint64_t sub_1BFC44EEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotDefinitionItemSet.init(from:)(a1, a2);
}

uint64_t sub_1BFC44F04(void *a1)
{
  return FormatStateMachineDefinition.encode(to:)(a1);
}

uint64_t sub_1BFC44F1C()
{
  sub_1BFF2E454(0, &qword_1EB871640, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v6 - v3;
  sub_1BFF2E454(0, qword_1EB87AF30, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87B160 = result;
  return result;
}

uint64_t sub_1BFC45068()
{
  sub_1BFF2E454(0, &qword_1EB871640, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v6 - v3;
  sub_1BFF2E454(0, qword_1EB87AF30, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CAE0 = result;
  return result;
}

uint64_t sub_1BFC451B4()
{
  sub_1C005C864(0, &qword_1EB871640, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v6 - v3;
  sub_1C005C864(0, qword_1EB87AF30, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87BDE0 = result;
  return result;
}

uint64_t sub_1BFC45300()
{
  sub_1BFF2E454(0, &qword_1EB871640, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v6 - v3;
  sub_1BFF2E454(0, qword_1EB87AF30, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CA90 = result;
  return result;
}

uint64_t sub_1BFC4544C()
{
  sub_1BFF2E454(0, &qword_1EB871640, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v6 - v3;
  sub_1BFF2E454(0, qword_1EB87AF30, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87BDD0 = result;
  return result;
}

uint64_t sub_1BFC45598(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1C151718C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151719C();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, void, __n128))(v14 + 104))((char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB3F8], v7);
  *(double *)&v16[1] = a1;
  sub_1BFCC22F8(0, &qword_1EB8711D8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a5 = result;
  return result;
}

uint64_t sub_1BFC45774()
{
  uint64_t result = sub_1C151DA2C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC4580C()
{
  uint64_t result = sub_1C151812C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1BFC458E0(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 48) != 4)
  {
    if (v3)
    {
      *(void *)(a1 + 24) = MEMORY[0x1E4FBC958];
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v7 = sub_1BFF493E4(v14, v3);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        __swift_deallocate_boxed_opaque_existential_0(a1);
      }
      else
      {
        double v8 = v7;
        swift_release();
        *(double *)a1 = v8;
        swift_bridgeObjectRelease();
      }
      return;
    }
LABEL_9:
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
  if (!v4) {
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v9 = sub_1BFF71C54();
  if (v2)
  {
    sub_1BFDB3960(v4);
  }
  else
  {
    double v11 = v9;
    double v12 = v10;
    sub_1BFDB3960(v4);
    id v13 = objc_msgSend(self, sel_valueWithCGSize_, v11, v12, v15, v5);
    *(void *)(a1 + 24) = sub_1C0A1769C();
    *(void *)a1 = v13;
  }
}

void sub_1BFC45A78(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  if (*(unsigned char *)(v1 + 48) != 4)
  {
    if (v3)
    {
      *(void *)(a1 + 24) = MEMORY[0x1E4FBC958];
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v6 = sub_1BFF493E4(v13, v3);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        __swift_deallocate_boxed_opaque_existential_0(a1);
      }
      else
      {
        double v7 = v6;
        swift_release();
        *(double *)a1 = v7;
        swift_bridgeObjectRelease();
      }
      return;
    }
LABEL_9:
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v14 = *(void *)v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v8 = sub_1BFF71C54();
  if (v2)
  {
    sub_1BFDB3960(v3);
  }
  else
  {
    double v10 = v8;
    double v11 = v9;
    sub_1BFDB3960(v3);
    id v12 = objc_msgSend(self, sel_valueWithCGSize_, v10, v11, v14, v4);
    *(void *)(a1 + 24) = sub_1C0A1769C();
    *(void *)a1 = v12;
  }
}

uint64_t type metadata accessor for FormatPuzzleEmbedViewControllerFactory()
{
  return self;
}

uint64_t sub_1BFC45C30()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C1516FEC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC93818();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB278], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  uint64_t result = sub_1C15171DC();
  qword_1EB881298 = result;
  return result;
}

unint64_t sub_1BFC45DDC(uint64_t a1)
{
  sub_1C01915E8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    double v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191688();
  uint64_t v7 = sub_1C152050C();
  double v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C0191764(v13, (uint64_t)v6, (uint64_t (*)(void))sub_1C01915E8);
    unint64_t result = sub_1C1052524((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for WebEmbedDatastoreCacheKey();
    unint64_t result = sub_1C01917CC((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AdsAssembly()
{
  return self;
}

void sub_1BFC45FF4()
{
  if (!qword_1EB8715A8)
  {
    sub_1C151A45C();
    unint64_t v0 = sub_1C151B6CC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8715A8);
    }
  }
}

uint64_t sub_1BFC46054@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895420);
  uint64_t result = sub_1C151819C();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for WebArchiveService();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1BFC773DC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&protocol witness table for WebArchiveService;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC46108(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_1BFC7D6A8(a2, a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC5DC24();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    type metadata accessor for FeedBannerAdRequester();
    swift_allocObject();
    return sub_1BFC8B38C(v5, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC461A0(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C0904618;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0069058();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC462F4(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F7DA0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0072FC0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C007302C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC4648C()
{
  v2[4] = " ";
  v2[5] = " ";
  v2[6] = &unk_1C158F7A8;
  uint64_t result = type metadata accessor for InternalErrorViewLayout.Context();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[7] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC46540()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[1] = 0;
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EB863B08 = result;
  return result;
}

uint64_t type metadata accessor for FeedIssueFactory()
{
  return self;
}

uint64_t type metadata accessor for CommandAssembly()
{
  return self;
}

uint64_t sub_1BFC4674C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC467C4()
{
  sub_1BFCB6824(0, &qword_1EB879458);
  swift_retain();
  sub_1C1518B0C();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for FormatProgressViewNodeRenderer()
{
  return self;
}

uint64_t sub_1BFC46880(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C0906B8C;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C007DE38();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC469D4()
{
  uint64_t v0 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C1515FDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1C0091AEC(0, &qword_1EB896590, (uint64_t (*)(uint64_t))type metadata accessor for FormatPictureInPictureModel, MEMORY[0x1E4FAAA48]);
  swift_allocObject();
  return sub_1C151845C();
}

uint64_t type metadata accessor for EngagementAssembly()
{
  return self;
}

uint64_t sub_1BFC46AEC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC46B4C()
{
  unint64_t result = qword_1EB889D78;
  if (!qword_1EB889D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889D78);
  }
  return result;
}

uint64_t sub_1BFC46BA0()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CategoryViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_1BFC46C7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895448);
  uint64_t result = sub_1C151819C();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for LayeredMediaVariantFactory();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1BFC773DC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1F1B9F868;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void FeedPluginManager.pluginContainerController.setter(void *a1, uint64_t a2)
{
  sub_1C151A3EC();
  uint64_t v4 = (void (*)(void *, uint64_t))sub_1C151A3FC();
  id v5 = a1;
  v4(a1, a2);
  sub_1BFC3DF8C();
}

uint64_t sub_1BFC46DB8()
{
  uint64_t v3 = &unk_1C159FA78;
  uint64_t result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    uint64_t v4 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaRenderedViewModelFactory()
{
  return self;
}

void *sub_1BFC46EA8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0091EC4(0, &qword_1EB871408, (void (*)(void))sub_1C008BAB4);
  uint64_t v1 = sub_1C151818C();
  type metadata accessor for FormatRunModeRunner();
  swift_allocObject();
  return sub_1BFC8E0D8(v1);
}

uint64_t sub_1BFC46F44()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC46FA4()
{
  unint64_t result = qword_1EB88A1A0;
  if (!qword_1EB88A1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A1A0);
  }
  return result;
}

void sub_1BFC46FF8()
{
  if (!qword_1EB884910)
  {
    sub_1C151D82C();
    sub_1C151D90C();
    sub_1C002C7B4(qword_1EB8812D0, 255, MEMORY[0x1E4F7AE58]);
    unint64_t v0 = sub_1C151D38C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884910);
    }
  }
}

uint64_t type metadata accessor for AdPolicyViewportEnvironmentProvider()
{
  return self;
}

uint64_t sub_1BFC470DC()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = type metadata accessor for FeedContext();
    if (v3 > 0x3F) {
      return v2;
    }
    uint64_t v2 = sub_1C151631C();
    if (v4 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getAssociatedTypeWitness();
      uint64_t v0 = sub_1C151FD8C();
      if (v5 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return v0;
}

uint64_t sub_1BFC472CC@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  a1(0);
  uint64_t result = swift_allocObject();
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_1BFC4730C()
{
  if (!qword_1EB894960[0])
  {
    sub_1C151D7BC();
    sub_1C151D87C();
    sub_1C002C7B4(&qword_1EB894940, 255, MEMORY[0x1E4F7AE10]);
    unint64_t v0 = sub_1C151DAFC();
    if (!v1) {
      atomic_store(v0, qword_1EB894960);
    }
  }
}

uint64_t sub_1BFC473CC()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FormatRunModeRunner()
{
  return self;
}

uint64_t type metadata accessor for DatabaseAssembly()
{
  return self;
}

uint64_t FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)()
{
  return sub_1C151911C();
}

void sub_1BFC47534(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFC9DBE8(255, a3);
    unint64_t v4 = sub_1C151917C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for IssueCoverViewRenderer()
{
  return self;
}

uint64_t sub_1BFC475B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BFC47614()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC47674()
{
  unint64_t result = qword_1EB88E418;
  if (!qword_1EB88E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E418);
  }
  return result;
}

uint64_t type metadata accessor for FeedPuzzleFactory()
{
  return self;
}

uint64_t type metadata accessor for FormatAssembly()
{
  return self;
}

uint64_t sub_1BFC47710()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC477A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC47840()
{
  uint64_t result = sub_1C151D6DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC478D8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC47938()
{
  unint64_t result = qword_1EB876978;
  if (!qword_1EB876978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876978);
  }
  return result;
}

uint64_t sub_1BFC4798C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6573616261746164 && a2 == 0xEC000000796C6E4FLL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726566657270 && a2 == 0xEE00657361626174 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C16113B0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C16113D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4F6B726F7774656ELL && a2 == 0xEB00000000796C6ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t type metadata accessor for ShareAttributionViewReuseManager()
{
  return self;
}

int *sub_1BFC47C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
  unint64_t result = (int *)type metadata accessor for FeedCursorTrackerSnapshot();
  *(void *)(a5 + result[9]) = a2;
  *(void *)(a5 + result[11]) = a3;
  *(void *)(a5 + result[10]) = a4;
  return result;
}

uint64_t type metadata accessor for FormatLayoutViewRouter()
{
  return self;
}

uint64_t sub_1BFC47DA8()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC47E5C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09024CC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDA001C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFF8B5AC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t destroy for FormatConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BFC48064()
{
  sub_1C151631C();
  if (v0 <= 0x3F)
  {
    sub_1BFEC0BBC(319, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for SharingActivityProviderFactory()
{
  return self;
}

uint64_t type metadata accessor for FormatMicaRenderer()
{
  return self;
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return self;
}

uint64_t sub_1BFC481FC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0903330;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE28654();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC48394()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC483F4()
{
  unint64_t result = qword_1EB878170;
  if (!qword_1EB878170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878170);
  }
  return result;
}

uint64_t sub_1BFC48448(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewRenderer();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for FormatLayeredMediaNodeRenderer();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(void *)(result + 48) = 0;
    *(void *)(result + 56) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC484C0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatIssueCoverNode();
    sub_1C085F050(&qword_1EB8603C0, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC4868C(uint64_t a1, uint64_t a2)
{
  sub_1BFD43E80(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  sub_1BFD43E80(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320E0;
  *(void *)(v3 + 32) = sub_1BFC7D8C8(a2);
  sub_1C151EBEC();
  uint64_t v4 = (void *)sub_1C1518E7C();
  sub_1C0064DB8();
  sub_1C0064D60();
  uint64_t v5 = sub_1C1518FAC();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1BFC487C0()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for IssueCoverViewStyler()
{
  return self;
}

uint64_t type metadata accessor for FeedPuzzleStatisticFactory()
{
  return self;
}

id sub_1BFC4894C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  id result = objc_msgSend(v0, sel_setTimeStyle_, 2);
  qword_1EB85B1D8 = (uint64_t)v0;
  return result;
}

uint64_t type metadata accessor for IssueCoverImageProcessor()
{
  return self;
}

uint64_t sub_1BFC489D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC48A1C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, qword_1EB872D58);
  sub_1C151819C();
  *(void *)(v2 + 24) = v4;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t destroy for FormatButtonNodeStateMaskLayoutAttributes()
{
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for FormatDecorationProviderFactory()
{
  return self;
}

uint64_t sub_1BFC48B0C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC48B6C()
{
  unint64_t result = qword_1EB889AC0;
  if (!qword_1EB889AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889AC0);
  }
  return result;
}

uint64_t sub_1BFC48C00()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC48C60()
{
  unint64_t result = qword_1EB88F1A0;
  if (!qword_1EB88F1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88F1A0);
  }
  return result;
}

uint64_t sub_1BFC48CB4()
{
  uint64_t result = sub_1C151555C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC48D40()
{
  v1[16] = v0;
  uint64_t v2 = sub_1C151E17C();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1BFC4C838, v0, 0);
}

uint64_t FeedLoadingGate.dateLifted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1517E7C();
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BFD63E68(v6, (uint64_t)v5);
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    uint64_t v9 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v9, 1, v7);
  return sub_1C1517E8C();
}

uint64_t type metadata accessor for EngagementBannerViewStyler()
{
  return self;
}

uint64_t sub_1BFC48F8C()
{
  if (objc_msgSend(v0, sel_validatedCachedSubscription))
  {
    sub_1C00914A8();
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](0);
    sub_1C00914A8();
    swift_allocObject();
    return sub_1C151911C();
  }
}

uint64_t sub_1BFC4905C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C00744A8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t type metadata accessor for EngagementBannerView()
{
  return self;
}

uint64_t sub_1BFC49218(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFF2918C();
    sub_1C085F050(&qword_1EB85D3F0, (void (*)(uint64_t))sub_1BFF2918C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC493EC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC49490()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C040EE7C;
  }
  else {
    uint64_t v2 = sub_1BFCE5BC0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t type metadata accessor for FeedPuzzleTypeFactory()
{
  return self;
}

uint64_t sub_1BFC495C8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC49628()
{
  unint64_t result = qword_1EB87B3B8;
  if (!qword_1EB87B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87B3B8);
  }
  return result;
}

id FeedBannerAdIntegrator.init(pipeline:blueprintProvider:policyValidator:layoutCollectionProvider:journal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *MEMORY[0x1E4FBC8C8] & *v5;
  id v8 = sub_1BFC974CC(a1, a2, a3, a4, a5);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v7 + 80) - 8) + 8))(a2);
  swift_release();
  return v8;
}

uint64_t type metadata accessor for FormatPuzzleEmbedViewController()
{
  return self;
}

uint64_t type metadata accessor for SportsDataServiceRequestBuilder()
{
  return self;
}

uint64_t sub_1BFC4976C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  *(unsigned char *)(v6 + 88) = a4;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(void *)(v6 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1BFCE2034, 0, 0);
}

uint64_t sub_1BFC49798()
{
  uint64_t result = sub_1C151CC9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151A79C();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C151BCEC();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1BFC498CC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC4992C()
{
  unint64_t result = qword_1EB88A1F8;
  if (!qword_1EB88A1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A1F8);
  }
  return result;
}

uint64_t sub_1BFC49980()
{
  uint64_t result = sub_1C151794C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for FormatTextNodeAlternative()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1BFC49ABC()
{
  uint64_t result = sub_1C151787C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC49B98()
{
  if (qword_1EB87BC38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return qword_1EB879160;
}

void *initializeBufferWithCopyOfBuffer for FormatFeedGroup(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    BOOL v21 = (void *)(v25 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    *a1 = *a2;
    uint64_t v4 = a3[5];
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (char *)a2 + v4;
    uint64_t v7 = *(void *)((char *)a2 + v4 + 8);
    *uint64_t v5 = *(void *)((char *)a2 + v4);
    v5[1] = v7;
    id v8 = (int *)type metadata accessor for FormatContent.Resolved();
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)v5 + v9;
    uint64_t v11 = &v6[v9];
    uint64_t v12 = sub_1C151631C();
    char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(void *)((char *)v5 + v8[6]) = *(void *)&v6[v8[6]];
    *(void *)((char *)v5 + v8[7]) = *(void *)&v6[v8[7]];
    *(void *)((char *)v5 + v8[8]) = *(void *)&v6[v8[8]];
    *(void *)((char *)v5 + v8[9]) = *(void *)&v6[v8[9]];
    *(void *)((char *)v5 + v8[10]) = *(void *)&v6[v8[10]];
    *(void *)((char *)v5 + v8[11]) = *(void *)&v6[v8[11]];
    uint64_t v14 = v8[12];
    v117 = *(void **)&v6[v14];
    *(void *)((char *)v5 + v14) = v117;
    *(void *)((char *)v5 + v8[13]) = *(void *)&v6[v8[13]];
    v107 = v8;
    uint64_t v15 = v8[14];
    v111 = v5;
    v121 = (void *)((char *)v5 + v15);
    v108 = v6;
    char v16 = &v6[v15];
    uint64_t v17 = type metadata accessor for FormatWebEmbed.Resolved();
    uint64_t v18 = *(void *)(v17 - 8);
    __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v19 = v117;
    swift_unknownObjectRetain();
    if (__dsta(v16, 1, v17))
    {
      sub_1BFECFA84(0, &qword_1EB896EE0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
      memcpy(v121, v16, *(void *)(*(void *)(v20 - 8) + 64));
      uint64_t v22 = a2;
      BOOL v21 = a1;
      unint64_t v23 = v108;
      BOOL v24 = v107;
    }
    else
    {
      uint64_t v104 = v18;
      uint64_t v26 = *((void *)v16 + 1);
      void *v121 = *(void *)v16;
      v121[1] = v26;
      v119 = (int *)v17;
      uint64_t v27 = *(int *)(v17 + 20);
      uint64_t v28 = (void *)((char *)v121 + v27);
      v118 = v16;
      uint64_t v29 = &v16[v27];
      uint64_t v30 = *(void *)&v16[v27 + 8];
      void *v28 = *(void *)&v16[v27];
      v28[1] = v30;
      BOOL v31 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v32 = v31[5];
      uint64_t v33 = (char *)v28 + v32;
      v105 = &v29[v32];
      uint64_t v34 = sub_1C1515FDC();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v33, v105, v34);
      uint64_t v37 = v31[6];
      __dst = (char *)v28 + v37;
      uint64_t v38 = &v29[v37];
      uint64_t v102 = v34;
      v101 = v36;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v29[v37], 1, v34))
      {
        sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(__dst, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        v36(__dst, v38, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
      }
      unint64_t v23 = v108;
      *(void *)((char *)v28 + v31[7]) = *(void *)&v29[v31[7]];
      uint64_t v40 = v31[8];
      uint64_t v41 = (void *)((char *)v28 + v40);
      uint64_t v42 = &v29[v40];
      uint64_t v43 = *((void *)v42 + 1);
      *uint64_t v41 = *(void *)v42;
      v41[1] = v43;
      uint64_t v44 = v31[9];
      uint64_t v45 = (void *)((char *)v28 + v44);
      uint64_t v46 = &v29[v44];
      uint64_t v47 = *((void *)v46 + 1);
      *uint64_t v45 = *(void *)v46;
      v45[1] = v47;
      *(void *)((char *)v28 + v31[10]) = *(void *)&v29[v31[10]];
      *(void *)((char *)v28 + v31[11]) = *(void *)&v29[v31[11]];
      *(void *)((char *)v28 + v31[12]) = *(void *)&v29[v31[12]];
      *(void *)((char *)v121 + v119[6]) = *(void *)((char *)v118 + v119[6]);
      *(void *)((char *)v121 + v119[7]) = *(void *)((char *)v118 + v119[7]);
      uint64_t v48 = v119[8];
      v106 = (void *)((char *)v121 + v48);
      uint64_t v49 = (void *)((char *)v118 + v48);
      uint64_t v50 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v103 = *(void *)(v50 - 8);
      v109 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v103 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v109(v49, 1, v50))
      {
        sub_1BFECFA84(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v106, v49, *(void *)(*(void *)(v51 - 8) + 64));
        uint64_t v5 = v111;
        uint64_t v22 = a2;
        BOOL v24 = v107;
        v52 = v121;
        v53 = v119;
        v54 = v118;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v56 = *v49;
        uint64_t v5 = v111;
        uint64_t v22 = a2;
        v52 = v121;
        v54 = v118;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v57 = v49[1];
          void *v106 = v56;
          v106[1] = v57;
          __dstb = (void *)v50;
          uint64_t v58 = type metadata accessor for GenericDataVisualization();
          uint64_t v59 = *(int *)(v58 + 20);
          v110 = (char *)v106 + v59;
          v100 = (char *)v49 + v59;
          swift_bridgeObjectRetain();
          v101(v110, v100, v102);
          uint64_t v60 = *(int *)(v58 + 24);
          uint64_t v50 = (uint64_t)__dstb;
          *(void *)((char *)v106 + v60) = *(uint64_t *)((char *)v49 + v60);
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v106 = v56;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v103 + 56))(v106, 0, 1, v50);
        BOOL v24 = v107;
        v53 = v119;
      }
      uint64_t v61 = v53[9];
      v62 = (char *)v52 + v61;
      v63 = (char *)v54 + v61;
      sub_1BFEC84E0();
      uint64_t v65 = v64;
      uint64_t v66 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v64))
      {
        sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
        memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v62, v63, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v62, 0, 1, v65);
      }
      BOOL v21 = a1;
      (*(void (**)(void *, void, uint64_t, int *))(v104 + 56))(v52, 0, 1, v53);
    }
    uint64_t v68 = v24[15];
    v69 = *(void **)&v23[v68];
    *(void *)((char *)v5 + v68) = v69;
    *((unsigned char *)v5 + v24[16]) = v23[v24[16]];
    *(void *)((char *)v5 + v24[17]) = *(void *)&v23[v24[17]];
    uint64_t v70 = v24[18];
    v71 = (char *)v5 + v70;
    v72 = &v23[v70];
    uint64_t v73 = sub_1C151D6DC();
    uint64_t v74 = *(void *)(v73 - 8);
    v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    id v76 = v69;
    swift_bridgeObjectRetain();
    if (v75(v72, 1, v73))
    {
      sub_1BFECFA84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
      memcpy(v71, v72, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
    uint64_t v78 = a3[6];
    uint64_t v79 = a3[7];
    v80 = (void *)((char *)v21 + v78);
    v81 = (void *)((char *)v22 + v78);
    uint64_t v82 = v81[1];
    void *v80 = *v81;
    v80[1] = v82;
    *((unsigned char *)v21 + v79) = *((unsigned char *)v22 + v79);
    uint64_t v83 = a3[9];
    *((unsigned char *)v21 + a3[8]) = *((unsigned char *)v22 + a3[8]);
    *(void *)((char *)v21 + v83) = *(void *)((char *)v22 + v83);
    uint64_t v84 = a3[11];
    *(void *)((char *)v21 + a3[10]) = *(void *)((char *)v22 + a3[10]);
    *(void *)((char *)v21 + v84) = *(void *)((char *)v22 + v84);
    uint64_t v85 = a3[12];
    uint64_t v86 = a3[13];
    v87 = (char *)v21 + v85;
    v88 = (char *)v22 + v85;
    *(void *)v87 = *(void *)v88;
    v87[8] = v88[8];
    v89 = (char *)v21 + v86;
    v90 = (char *)v22 + v86;
    *(void *)v89 = *(void *)v90;
    v89[8] = v90[8];
    uint64_t v91 = a3[14];
    uint64_t v92 = a3[15];
    v93 = (char *)v21 + v91;
    v94 = (char *)v22 + v91;
    *(void *)v93 = *(void *)v94;
    v93[8] = v94[8];
    v95 = (char *)v21 + v92;
    v96 = (char *)v22 + v92;
    *(void *)v95 = *(void *)v96;
    v95[8] = v96[8];
    uint64_t v97 = a3[17];
    *((unsigned char *)v21 + a3[16]) = *((unsigned char *)v22 + a3[16]);
    *(void *)((char *)v21 + v97) = *(void *)((char *)v22 + v97);
    uint64_t v98 = a3[19];
    *(void *)((char *)v21 + a3[18]) = *(void *)((char *)v22 + a3[18]);
    *(void *)((char *)v21 + v98) = *(void *)((char *)v22 + v98);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v21;
}

uint64_t sub_1BFC4A5C4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedHeadlineFactory();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for FeedWebEmbedFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC4A634()
{
  uint64_t v0 = swift_checkMetadataState();
  uint64_t v1 = v0;
  if (v2 <= 0x3F)
  {
    uint64_t v3 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v9 = &v8;
    swift_getTupleTypeLayout2();
    uint64_t v10 = &v7;
    uint64_t v11 = v3;
    uint64_t v12 = &unk_1C15D11E0;
    char v13 = &unk_1C15D11E0;
    uint64_t v14 = &unk_1C15D11E0;
    uint64_t v1 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v15 = &v6;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v1;
}

uint64_t static FeedGroupGroupingRules.noRules.getter@<X0>(void *a1@<X8>)
{
  sub_1BFDC6E38();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = 1000;
  *(void *)(v2 + 24) = v3;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 1000;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 1000;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 1000;
  *(void *)(v6 + 24) = v3;
  sub_1C0087D7C();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x3FF0000000000000;
  *(unsigned char *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = 1;
  *(unsigned char *)(v7 + 40) = 0;
  *(void *)(v7 + 48) = MEMORY[0x1E4FBC870];
  *(void *)(v7 + 56) = v3;
  return sub_1C033E09C(v2, v4, v5, v6, v7, 0, 0, 0, a1, 0, 0);
}

uint64_t sub_1BFC4A894()
{
  uint64_t result = sub_1C151CC9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151A79C();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C151BCEC();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_1C151D99C();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFC4A9F4()
{
  uint64_t result = sub_1C151959C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC4AAAC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatGroupNodeStyle();
    sub_1C085F050(&qword_1EB866A88, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

void **initializeWithCopy for FormatTransformData(void **a1, void **a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatTransformKnobs();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v76 = v7;
    uint64_t v78 = v6;
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v10 = (int *)type metadata accessor for FeedContext();
    uint64_t v11 = v10[5];
    char v12 = (void **)((char *)a1 + v11);
    char v13 = (void **)((char *)a2 + v11);
    uint64_t v14 = (int *)type metadata accessor for BundleSession();
    uint64_t v74 = *((void *)v14 - 1);
    long long v15 = *(unsigned int (**)(void *, uint64_t, int *))(v74 + 48);
    id v16 = v9;
    if (v15(v13, 1, v14))
    {
      sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *char v12 = *v13;
      uint64_t v18 = v14[5];
      id v19 = (char *)v12 + v18;
      uint64_t v20 = (char *)v13 + v18;
      uint64_t v21 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      *((unsigned char *)v12 + v14[6]) = *((unsigned char *)v13 + v14[6]);
      *((unsigned char *)v12 + v14[7]) = *((unsigned char *)v13 + v14[7]);
      *(_OWORD *)((char *)v12 + v14[8]) = *(_OWORD *)((char *)v13 + v14[8]);
      *(void *)((char *)v12 + v14[9]) = *(void *)((char *)v13 + v14[9]);
      *((unsigned char *)v12 + v14[10]) = *((unsigned char *)v13 + v14[10]);
      *((unsigned char *)v12 + v14[11]) = *((unsigned char *)v13 + v14[11]);
      uint64_t v22 = *(void (**)(void *, void, uint64_t, int *))(v74 + 56);
      swift_bridgeObjectRetain();
      v22(v12, 0, 1, v14);
    }
    *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
    *((unsigned char *)a1 + v10[7]) = *((unsigned char *)a2 + v10[7]);
    *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
    *((unsigned char *)a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
    *(void **)((char *)a1 + v10[10]) = *(void **)((char *)a2 + v10[10]);
    *(void **)((char *)a1 + v10[11]) = *(void **)((char *)a2 + v10[11]);
    uint64_t v23 = v10[12];
    BOOL v24 = (void **)((char *)a1 + v23);
    uint64_t v25 = (void **)((char *)a2 + v23);
    uint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v26 - 1) >= 3)
    {
      *BOOL v24 = *v25;
      v24[1] = v26;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)BOOL v24 = *(_OWORD *)v25;
    }
    *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
    uint64_t v27 = v10[14];
    uint64_t v28 = *(void **)((char *)a2 + v27);
    *(void **)((char *)a1 + v27) = v28;
    uint64_t v29 = v10[15];
    uint64_t v30 = (void **)((char *)a1 + v29);
    BOOL v31 = (void **)((char *)a2 + v29);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = *(int *)(v78 + 20);
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    long long v36 = *(_OWORD *)((char *)a2 + v33 + 24);
    *(_OWORD *)((char *)a1 + v33 + 24) = v36;
    uint64_t v37 = v36;
    v75 = **(void (***)(char *, char *, uint64_t))(v36 - 8);
    id v38 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v75(v34, v35, v37);
    (*(void (**)(void **, void, uint64_t, uint64_t))(v76 + 56))(a1, 0, 1, v78);
  }
  uint64_t v39 = a3[6];
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  *(void **)((char *)a1 + v39) = *(void **)((char *)a2 + v39);
  uint64_t v40 = a3[8];
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v40) = *((unsigned char *)a2 + v40);
  uint64_t v41 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v42 = (void **)((char *)a1 + v41);
  uint64_t v43 = (void **)((char *)a2 + v41);
  uint64_t v44 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v45 = *((void *)v44 - 1);
  uint64_t v46 = *(unsigned int (**)(void *, uint64_t, int *))(v45 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46(v43, 1, v44))
  {
    sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    *uint64_t v42 = *v43;
    *((unsigned char *)v42 + 8) = *((unsigned char *)v43 + 8);
    v42[2] = v43[2];
    *((unsigned char *)v42 + 24) = *((unsigned char *)v43 + 24);
    uint64_t v48 = v44[6];
    uint64_t v49 = (void *)((char *)v42 + v48);
    uint64_t v50 = (void *)((char *)v43 + v48);
    uint64_t v51 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v52 = *(void *)(v51 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      uint64_t v54 = v50[1];
      *uint64_t v49 = *v50;
      v49[1] = v54;
      uint64_t v55 = *(int *)(v51 + 24);
      uint64_t v77 = (char *)v50 + v55;
      uint64_t v79 = (char *)v49 + v55;
      uint64_t v56 = sub_1C1516D9C();
      uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      v73(v79, v77, v56);
      *(void *)((char *)v49 + *(int *)(v51 + 28)) = *(void *)((char *)v50 + *(int *)(v51 + 28));
      uint64_t v57 = *(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56);
      swift_bridgeObjectRetain();
      v57(v49, 0, 1, v51);
    }
    uint64_t v58 = v44[7];
    uint64_t v59 = (char *)v42 + v58;
    uint64_t v60 = (char *)v43 + v58;
    *(void *)uint64_t v59 = *(void *)v60;
    v59[8] = v60[8];
    uint64_t v61 = v44[8];
    v62 = (char *)v42 + v61;
    v63 = (char *)v43 + v61;
    v62[8] = v63[8];
    *(void *)v62 = *(void *)v63;
    uint64_t v64 = v44[9];
    uint64_t v65 = (char *)v42 + v64;
    uint64_t v66 = (char *)v43 + v64;
    *(void *)uint64_t v65 = *(void *)v66;
    v65[8] = v66[8];
    uint64_t v67 = v44[10];
    uint64_t v68 = (char *)v42 + v67;
    v69 = (char *)v43 + v67;
    uint64_t v70 = *((void *)v69 + 4);
    if (v70 == 1)
    {
      long long v71 = *((_OWORD *)v69 + 1);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      *((_OWORD *)v68 + 1) = v71;
      *((void *)v68 + 4) = *((void *)v69 + 4);
    }
    else
    {
      *(void *)uint64_t v68 = *(void *)v69;
      v68[8] = v69[8];
      *((void *)v68 + 2) = *((void *)v69 + 2);
      v68[24] = v69[24];
      *((void *)v68 + 4) = v70;
      swift_bridgeObjectRetain();
    }
    (*(void (**)(void *, void, uint64_t, int *))(v45 + 56))(v42, 0, 1, v44);
  }
  return a1;
}

uint64_t type metadata accessor for LayeredMediaViewProvider()
{
  return self;
}

unint64_t sub_1BFC4B3B4()
{
  unint64_t result = qword_1EB87A0F0;
  if (!qword_1EB87A0F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A0F0);
  }
  return result;
}

void sub_1BFC4B3F4()
{
  if (!qword_1EB885188)
  {
    sub_1C151BC8C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB885188);
    }
  }
}

uint64_t sub_1BFC4B44C(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F0718;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C006FC6C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC4B5A0()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_1C151FD8C();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for FeedContext();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFC4B794()
{
  if (objc_msgSend(*(id *)(v0 + 32), sel_respondsToSelector_, sel_fetchedAppConfiguration))
  {
    id v1 = objc_msgSend(*(id *)(v0 + 32), sel_fetchedAppConfiguration);
    if (v1)
    {
LABEL_5:
      unint64_t v2 = *(uint64_t (**)(id))(v0 + 8);
      return v2(v1);
    }
  }
  if (*(unsigned char *)(v0 + 64) == 1)
  {
    id v1 = objc_msgSend(*(id *)(v0 + 32), sel_possiblyUnfetchedAppConfiguration);
    goto LABEL_5;
  }
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB85C560);
  *uint64_t v5 = v0;
  v5[1] = sub_1C0243888;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000001FLL, 0x80000001C160D9E0, sub_1C03CD20C, v4, v6);
}

uint64_t sub_1BFC4B934(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F7E3C;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0073148();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C007B46C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC4BAC0()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC4BB64(uint64_t a1)
{
  sub_1BFEFF7D8();
  char v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  void v11[2] = sub_1C08F7F20;
  v11[3] = v8;
  swift_retain();
  char v9 = sub_1BFEFF114(a1, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C007B530();
    v11[4] = 0;
    v11[5] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t type metadata accessor for SharingActivityTypeProvider()
{
  return self;
}

uint64_t type metadata accessor for FeedWebEmbedFactory()
{
  return self;
}

void sub_1BFC4BCF0()
{
  if (!qword_1EB884D50)
  {
    sub_1C151794C();
    sub_1BFC5D2EC(&qword_1EB884DA0);
    unint64_t v0 = sub_1C15170DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884D50);
    }
  }
}

uint64_t type metadata accessor for FormatVideoPlayerViewControllerFactory()
{
  return self;
}

uint64_t sub_1BFC4BD94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C098E648(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - v5;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_1BFEF2D8C(0x6461654864656546, 0xEC000000656E696CLL), (v8 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BFC773DC(v19, (uint64_t)v20);
    sub_1BFC66384((uint64_t)v20, (uint64_t)v19);
    sub_1C008B33C();
    uint64_t v9 = type metadata accessor for FeedHeadline(0);
    int v10 = swift_dynamicCast();
    char v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BFF7FF78((uint64_t)v6, a2, type metadata accessor for FeedHeadline);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1C098E5E8((uint64_t)v6, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void))sub_1C098E648);
      sub_1BFF7DFA8();
      swift_allocError();
      uint64_t v18 = v17;
      strcpy((char *)v17, "FeedHeadline");
      *(unsigned char *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BFC66384((uint64_t)v20, v17 + 16);
      *(unsigned char *)(v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedHeadline");
    *(unsigned char *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for FormatLayoutViewRenderer()
{
  return self;
}

uint64_t sub_1BFC4C0A4()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

void sub_1BFC4C0F8(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C151A23C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for LayeredMediaVariantSelector()
{
  return self;
}

uint64_t type metadata accessor for FormatVideoPlayerNodeRenderer()
{
  return self;
}

uint64_t sub_1BFC4C1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a4;
  uint64_t v23 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v11 = (char *)&v22 - v10;
  uint64_t v12 = sub_1C151631C();
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))(v15, a1, v13);
  uint64_t v17 = type metadata accessor for FeedDeferredCursorGroup();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v17 + 36), AssociatedTypeWitness);
  uint64_t v18 = sub_1BFD7FEC0();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v7, v24, a3);
  return FeedCursorGroup.init(createdDate:group:configIdentifier:serviceConfig:)((uint64_t)v15, (uint64_t)v11, v18, v20, (uint64_t)v7, a3, v25);
}

uint64_t type metadata accessor for SharingIssueActivityTypeProvider()
{
  return self;
}

uint64_t type metadata accessor for FactoryAssembly()
{
  return self;
}

uint64_t type metadata accessor for InternalErrorView()
{
  return self;
}

uint64_t type metadata accessor for FormatLayoutViewDebugger()
{
  return self;
}

uint64_t type metadata accessor for TagImageShareAttributeProvider()
{
  return self;
}

void sub_1BFC4C508()
{
  if (!qword_1EB884D58)
  {
    sub_1C151794C();
    sub_1BFC938AC(&qword_1EB884DA0, MEMORY[0x1E4FAB828]);
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884D58);
    }
  }
}

void sub_1BFC4C59C()
{
  type metadata accessor for FormatCompilerOptions(319);
  if (v0 <= 0x3F)
  {
    sub_1C151928C();
    if (v1 <= 0x3F)
    {
      sub_1BFE79B2C(319, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1BFC4C72C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB871538);
  uint64_t result = sub_1C151819C();
  if (v4)
  {
    type metadata accessor for OpenURLCommandHandler();
    uint64_t v2 = swift_allocObject();
    sub_1BFC773DC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FormatLayeredMediaNodeRenderer()
{
  return self;
}

uint64_t type metadata accessor for StubOfflineProvider()
{
  return self;
}

uint64_t type metadata accessor for FormatShareAttributionNodeRenderer()
{
  return self;
}

uint64_t sub_1BFC4C838()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = *(void **)(v0[16] + 112);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCB50], v3);
  uint64_t v5 = sub_1C151F5BC();
  v0[20] = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C007200C;
  uint64_t v6 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C0063D48;
  v0[13] = &block_descriptor_118;
  v0[14] = v6;
  objc_msgSend(v4, sel_fetchAppConfigurationIfNeededWithCompletionQueue_completion_, v5, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

void sub_1BFC4C9C0()
{
  sub_1BFF9F1E8();
  if (v0 <= 0x3F)
  {
    sub_1C151C5DC();
    if (v1 <= 0x3F)
    {
      sub_1C151C37C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1BFC4CAD0()
{
  sub_1BFF6B690();
  uint64_t v0 = sub_1C151FA1C();
  uint64_t result = sub_1C151FA0C();
  qword_1EB875180 = v0;
  *(void *)algn_1EB875188 = result;
  return result;
}

id sub_1BFC4CB10@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA5658]), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1BFC4CB4C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatProgressViewNodeStyle();
    sub_1C085F050(&qword_1EB868268, (void (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t type metadata accessor for RendererAssembly()
{
  return self;
}

uint64_t sub_1BFC4CD3C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 328) = a1;
  *(void *)(v3 + 336) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1C040D910;
  }
  else {
    uint64_t v4 = sub_1BFD00674;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t type metadata accessor for CoverChannelView()
{
  return self;
}

void sub_1BFC4CE74()
{
  if (!qword_1EB8716F0)
  {
    sub_1C151D7BC();
    sub_1C151D87C();
    sub_1C002C7B4(&qword_1EB894940, 255, MEMORY[0x1E4F7AE10]);
    unint64_t v0 = sub_1C151D38C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8716F0);
    }
  }
}

uint64_t type metadata accessor for FormatImageRenderer()
{
  return self;
}

uint64_t sub_1BFC4CF58()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC4CFF8()
{
  uint64_t v1 = *(void *)(v0 + 120);

  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t type metadata accessor for SportsDataConfigurationService()
{
  return self;
}

void sub_1BFC4D090()
{
  if (!qword_1EB8717C0)
  {
    sub_1C151D4EC();
    sub_1C151D61C();
    sub_1C002C7B4((unint64_t *)&unk_1EB894910, 255, MEMORY[0x1E4F7AC20]);
    unint64_t v0 = sub_1C151DAFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8717C0);
    }
  }
}

uint64_t sub_1BFC4D150(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1C0038168(0, (unint64_t *)&qword_1EB879D68, MEMORY[0x1E4FBB320]);
  sub_1BFC95D10(&qword_1EB85C380, &qword_1EB85B690);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BFC4D254()
{
  sub_1C1517ECC();
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v1;
}

uint64_t sub_1BFC4D308()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FormatMetadata();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v6 = &v5;
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v7 = &v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BFC4D434()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC4D494()
{
  unint64_t result = qword_1EB87E950;
  if (!qword_1EB87E950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E950);
  }
  return result;
}

uint64_t sub_1BFC4D4E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatAccessibilityLayoutValue();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC4D528()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC4D588()
{
  unint64_t result = qword_1EB88AD18;
  if (!qword_1EB88AD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AD18);
  }
  return result;
}

uint64_t sub_1BFC4D5DC(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_retain();
  sub_1C0E0BA64(a1, v3);
  swift_release();
  sub_1BFCF7AA0(0, &qword_1EB85AB60, (uint64_t (*)(uint64_t))sub_1C0064EB4, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t type metadata accessor for LayeredMediaVariantFactory()
{
  return self;
}

uint64_t type metadata accessor for FeedItemPrefetcher()
{
  return self;
}

unint64_t sub_1BFC4D6D4()
{
  unint64_t result = qword_1EB8713E0;
  if (!qword_1EB8713E0)
  {
    sub_1C151804C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8713E0);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleGameCenterService()
{
  return self;
}

uint64_t sub_1BFC4D750()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SharingActivityItemFactory()
{
  return self;
}

uint64_t sub_1BFC4D808(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0078;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1B8BC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD34DDC();
    sub_1C085F050(&qword_1EB85FC48, (void (*)(uint64_t))sub_1BFD34DDC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC4D9D4(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FDF90;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE063D0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C007DD68();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t type metadata accessor for FormatAdMetricsNodeRenderer()
{
  return self;
}

void sub_1BFC4DB8C()
{
  if (!qword_1EB884930)
  {
    sub_1C151D82C();
    sub_1C151D90C();
    sub_1C002C7B4(qword_1EB8812D0, 255, MEMORY[0x1E4F7AE58]);
    unint64_t v0 = sub_1C151DAFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884930);
    }
  }
}

uint64_t type metadata accessor for CategoryView()
{
  return self;
}

uint64_t FormatContentSubgroupFilter.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C005CA80(0, &qword_1EB86B6C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v36 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C005CAE4();
  sub_1C1520EBC();
  if (!v2)
  {
    char v38 = 0;
    sub_1C006CCF0();
    sub_1C15206EC();
    switch((char)v36)
    {
      case 1:
        char v38 = 1;
        sub_1C0C32518();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v14 = v36;
        char v15 = v37;
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v14;
        *(unsigned char *)(v16 + 24) = v15;
        *a2 = v16 | 0x1000000000000000;
        break;
      case 2:
        char v38 = 1;
        sub_1C094C608();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v17 = v36;
        uint64_t v18 = v37;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v17;
        *(void *)(v19 + 24) = v18;
        *a2 = v19 | 0x2000000000000000;
        break;
      case 3:
        char v38 = 1;
        sub_1C0C324C4();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v20 = v36;
        uint64_t v21 = v37;
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v20;
        *(void *)(v22 + 24) = v21;
        *a2 = v22 | 0x3000000000000000;
        break;
      case 4:
        char v38 = 1;
        sub_1C02106B8();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v23 = v36;
        uint64_t v24 = v37;
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v23;
        *(void *)(v25 + 24) = v24;
        *a2 = v25 | 0x4000000000000000;
        break;
      case 5:
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v26 = swift_allocEmptyBox();
        unint64_t v27 = 0x5000000000000000;
        goto LABEL_15;
      case 6:
        char v38 = 1;
        sub_1C0203DE4();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v28 = v36;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = v28;
        *a2 = v29 | 0x6000000000000000;
        break;
      case 7:
        char v38 = 1;
        sub_1C0203F20();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v30 = v36;
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = v30;
        *a2 = v31 | 0x7000000000000000;
        break;
      case 8:
        char v38 = 1;
        sub_1C02040B0();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v32 = v36;
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v32;
        *a2 = v33 | 0x8000000000000000;
        break;
      case 9:
        char v38 = 1;
        sub_1C0067C30();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v34 = v36;
        uint64_t v35 = v37;
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v34;
        *(void *)(v26 + 24) = v35;
        unint64_t v27 = 0x9000000000000000;
LABEL_15:
        *a2 = v26 | v27;
        break;
      default:
        char v38 = 1;
        sub_1C02D261C();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v11 = v36;
        uint64_t v12 = v37;
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v11;
        *(void *)(v13 + 24) = v12;
        *a2 = v13;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC4E29C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t type metadata accessor for FeedBannerAdView()
{
  return self;
}

uint64_t sub_1BFC4E308()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StubImageDownloader()
{
  return self;
}

uint64_t type metadata accessor for HeadlineViewRendererPipelineProcessor()
{
  return self;
}

uint64_t sub_1BFC4E3F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C151812C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB896BB0);
  uint64_t result = sub_1C151815C();
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t result = sub_1C151815C();
    if (v11)
    {
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAA980], v4);
      uint64_t v9 = type metadata accessor for WebEmbedDataVisualizationDataService(0);
      swift_allocObject();
      uint64_t result = sub_1C01E739C(&v12, &v10, (uint64_t)v7, 60);
      a2[3] = v9;
      a2[4] = (uint64_t)&off_1F1B92570;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC4E5CC()
{
  uint64_t result = sub_1C1518C6C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC4E684(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FE8A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFFEEFC8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0083CE8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t type metadata accessor for FeedTagFactory()
{
  return self;
}

uint64_t sub_1BFC4E83C@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1BFCA4380(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:callbackQueue:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 1624) = v3;
  *(void *)(v4 + 1576) = a3;
  *(unsigned char *)(v4 + 1784) = a2;
  *(void *)(v4 + 1528) = a1;
  *(void *)(v4 + 1672) = *v3;
  return MEMORY[0x1F4188298](sub_1BFCE2154, 0, 0);
}

uint64_t sub_1BFC4E94C(uint64_t a1)
{
  uint64_t result = sub_1C1515FDC();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t sub_1BFC4E9F0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FormatVideoNodeRenderer()
{
  return self;
}

void sub_1BFC4EA70()
{
  sub_1C1515FDC();
  if (v0 <= 0x3F)
  {
    sub_1BFF2EDE8(319, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1BFC4EB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1C151719C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1C151718C();
  __n128 v10 = MEMORY[0x1F4188790](v9);
  (*(void (**)(unsigned char *, void, __n128))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB400], v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB410], v5);
  v14[15] = 0;
  sub_1BFCC22F8(0, (unint64_t *)&qword_1EB8979E8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a4 = result;
  return result;
}

uint64_t sub_1BFC4ED64()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v3;
    swift_getTupleTypeLayout3();
    uint64_t v6 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaConditionValidator()
{
  return self;
}

uint64_t (*sub_1BFC4EE54())()
{
  uint64_t v2 = *(void *)v0;
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v5 = sub_1BFF493E4(v25, v2);
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t (*)())swift_release();
      if (!v1)
      {
        *(double *)(swift_allocObject() + 16) = v5;
        return sub_1C0A176FC;
      }
      return result;
    case 2:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v6 = sub_1BFF493E4(v25, v2);
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t (*)())swift_release();
      if (!v1)
      {
        *(double *)(swift_allocObject() + 16) = v6;
        return sub_1C0A176F8;
      }
      return result;
    case 3:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v7 = sub_1BFF493E4(v25, v2);
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t (*)())swift_release();
      if (!v1)
      {
        *(double *)(swift_allocObject() + 16) = v7;
        return sub_1C0A176F4;
      }
      return result;
    case 4:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      double v8 = sub_1BFF71C54();
      if (v1) {
        return (uint64_t (*)())sub_1BFDB3960(v2);
      }
      double v21 = v8;
      uint64_t v22 = v9;
      sub_1BFDB3960(v2);
      uint64_t v23 = swift_allocObject();
      *(double *)(v23 + 16) = v21;
      *(void *)(v23 + 24) = v22;
      return sub_1C0A17704;
    case 5:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v10 = sub_1BFF493E4(v25, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v11 = v10;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v11;
      return sub_1C0A176F0;
    case 6:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v12 = sub_1BFF493E4(v25, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v13 = v12;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v13;
      return sub_1C0A176EC;
    case 7:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v14 = sub_1BFF493E4(v25, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v15 = v14;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v15;
      return sub_1C0A176E8;
    case 8:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v16 = sub_1BFF493E4(v25, v2);
      if (v1) {
        goto LABEL_37;
      }
      goto LABEL_41;
    case 9:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v17 = sub_1BFF493E4(v25, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v18 = v17;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v18;
      uint64_t result = sub_1C0A176E4;
      break;
    case 0xA:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v19 = sub_1BFF493E4(v25, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v20 = v19;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v20;
      uint64_t result = sub_1C0A176E0;
      break;
    case 0xB:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v16 = sub_1BFF493E4(v25, v2);
      if (v1)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        uint64_t result = (uint64_t (*)())swift_release();
      }
      else
      {
LABEL_41:
        double v24 = v16;
        swift_bridgeObjectRelease();
        swift_release();
        *(double *)(swift_allocObject() + 16) = v24;
        uint64_t result = sub_1C0A176DC;
      }
      break;
    default:
      if (v2)
      {
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        double v3 = sub_1BFF493E4(v25, v2);
        swift_bridgeObjectRelease();
        uint64_t result = (uint64_t (*)())swift_release();
        if (!v1)
        {
          *(double *)(swift_allocObject() + 16) = v3;
          uint64_t result = sub_1C0A17700;
        }
      }
      else
      {
LABEL_39:
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1BFC4F50C()
{
  uint64_t result = sub_1C151E2BC();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedWeather.Temperature(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC4F604(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8972F0);
  uint64_t result = sub_1C151819C();
  if (!v17)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB890160);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  double v3 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8955C0);
  uint64_t result = sub_1C151819C();
  if (!v15)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A280);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (v12)
  {
    uint64_t v5 = v13;
    double v6 = (objc_class *)type metadata accessor for ShortcutCommandHandler();
    double v7 = (char *)objc_allocWithZone(v6);
    double v8 = &v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_commandCenter];
    *(void *)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_commandCenter + 8] = 0;
    swift_unknownObjectWeakInit();
    sub_1BFC66384((uint64_t)v16, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutManager]);
    *(void *)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutList] = v3;
    sub_1BFC66384((uint64_t)v14, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability]);
    *(void *)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_bundleSubscriptionManager] = v4;
    *((void *)v8 + 1) = v5;
    swift_unknownObjectWeakAssign();
    v11.receiver = v7;
    v11.super_class = v6;
    id v9 = v3;
    swift_unknownObjectRetain();
    double v10 = (char *)objc_msgSendSuper2(&v11, sel_init);
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutList], sel_addObserver_, v10, v11.receiver, v11.super_class);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return (uint64_t)v10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LazyAuthTokenStore()
{
  return self;
}

uint64_t sub_1BFC4F8D4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  double v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EBE00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7BA30();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C006E210();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t type metadata accessor for PuzzleStatsProcessor()
{
  return self;
}

uint64_t sub_1BFC4FA8C()
{
  sub_1BFC4FD1C(0, &qword_1EB87BDB8, (uint64_t)&type metadata for CommandShareContent, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFC4FD1C(0, (unint64_t *)&unk_1EB87C8B0, (uint64_t)&type metadata for CommandShareContent, MEMORY[0x1E4FAD790]);
  sub_1C151CA1C();
  sub_1C151C9DC();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CA80 = result;
  return result;
}

uint64_t sub_1BFC4FBDC()
{
  sub_1BFC4FD1C(0, &qword_1EB87C848, (uint64_t)&type metadata for CommandShareContentComplete, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFC4FD1C(0, &qword_1EB87C8C0, (uint64_t)&type metadata for CommandShareContentComplete, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CA68 = result;
  return result;
}

void sub_1BFC4FD1C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t static Commands.copyArticle.getter()
{
  if (qword_1EB87C8F8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1BFC4FDC4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 264);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1BFC44E98(a1), (v7 & 1) != 0)) {
    sub_1C107791C(*(void *)(v5 + 56) + 16 * v6, (uint64_t)&v10);
  }
  else {
    long long v10 = xmmword_1C152C800;
  }
  swift_endAccess();
  long long v8 = v10;
  uint64_t result = sub_1C10BCC38((uint64_t)&v10);
  if (v8 == __PAIR128__(1, 0))
  {
    *((void *)&v10 + 1) = a2;
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    sub_1BFC3B02C(&v10, a1);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1BFC4FEAC@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895430);
  uint64_t result = sub_1C151819C();
  if (v13)
  {
    uint64_t v10 = a2(0);
    uint64_t v11 = swift_allocObject();
    *(double *)(v11 + 16) = a5;
    uint64_t result = sub_1BFC773DC(&v12, v11 + 24);
    a4[3] = v10;
    a4[4] = a3;
    *a4 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FeedRefreshEvent.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t type metadata accessor for SocialLayerSharedItemCenter()
{
  return self;
}

uint64_t type metadata accessor for GapView()
{
  return self;
}

uint64_t type metadata accessor for LayeredMediaViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for GapOfflineView()
{
  return self;
}

uint64_t sub_1BFC50034()
{
  uint64_t result = sub_1C151555C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC500CC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC5012C()
{
  unint64_t result = qword_1EB8767A8;
  if (!qword_1EB8767A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8767A8);
  }
  return result;
}

uint64_t type metadata accessor for LocationDetectionManager()
{
  return self;
}

uint64_t FeedCursorGroup.init(createdDate:group:configIdentifier:serviceConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a7, a1, v13);
  double v14 = (int *)type metadata accessor for FeedCursorGroup();
  uint64_t v15 = a7 + v14[9];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v15, a2, AssociatedTypeWitness);
  char v17 = (void *)(a7 + v14[10]);
  *char v17 = a3;
  v17[1] = a4;
  uint64_t v18 = a7 + v14[11];
  double v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32);
  return v19(v18, a5, a6);
}

uint64_t type metadata accessor for SportsDataServiceRequestFetcher()
{
  return self;
}

uint64_t sub_1BFC5036C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0718;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C006FC6C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C007F014();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFC50500()
{
  unint64_t result = qword_1EB871170;
  if (!qword_1EB871170)
  {
    sub_1C151631C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871170);
  }
  return result;
}

uint64_t type metadata accessor for AdPresentationDelegateProvider()
{
  return self;
}

uint64_t type metadata accessor for SharingPuzzleActivityTypeProvider()
{
  return self;
}

uint64_t sub_1BFC505A0()
{
  uint64_t result = sub_1C151CC9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151A79C();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C151BCEC();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1BFC506D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  *(unsigned char *)(v6 + 88) = a4;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(void *)(v6 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1BFC74DA8, 0, 0);
}

uint64_t sub_1BFC506FC()
{
  uint64_t result = sub_1C151976C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C15196AC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaLayerProcessor()
{
  return self;
}

uint64_t sub_1BFC507E8()
{
  uint64_t v0 = sub_1C15164BC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151661C();
  __swift_allocate_value_buffer(v4, qword_1EB879A00);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB879A00);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27B20], v0);
  sub_1C15164CC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t type metadata accessor for FeedContentPrefetchManager()
{
  return self;
}

uint64_t sub_1BFC5092C()
{
  uint64_t result = sub_1C151DBAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC509E4(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  char v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C09025C8;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0083DF4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFC50B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1BFC50C68();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC50CC0(0, &qword_1EB8850F8, (uint64_t)&type metadata for LikingCommandContext, MEMORY[0x1E4FBB390], MEMORY[0x1E4FABCE8]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD770], v6);
  uint64_t result = sub_1C151C9BC();
  *a4 = result;
  return result;
}

void sub_1BFC50C68()
{
  if (!qword_1EB8851B0)
  {
    unint64_t v0 = sub_1C151C98C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8851B0);
    }
  }
}

void sub_1BFC50CC0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4, MEMORY[0x1E4FAD910]);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t type metadata accessor for LayoutAssembly()
{
  return self;
}

uint64_t sub_1BFC50D40()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SwitchHiddenContentEffectRenderer()
{
  return self;
}

uint64_t sub_1BFC50DFC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs), sel_array));
  uint64_t v4 = sub_1C151EBCC();

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    char v14 = a2;
    uint64_t v6 = v4 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1BFF6A008(v6, (uint64_t)v18);
      sub_1BFF6A008((uint64_t)v18, (uint64_t)v15);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v16 = 0;
        uint64_t v17 = 0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      uint64_t v9 = v17;
      if (v17)
      {
        uint64_t v10 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1BFEF9B68(0, v7[2] + 1, 1, v7);
        }
        unint64_t v12 = v7[2];
        unint64_t v11 = v7[3];
        if (v12 >= v11 >> 1) {
          uint64_t v7 = sub_1BFEF9B68((void *)(v11 > 1), v12 + 1, 1, v7);
        }
        v7[2] = v12 + 1;
        uint64_t v8 = &v7[2 * v12];
        v8[4] = v10;
        v8[5] = v9;
      }
      v6 += 32;
      --v5;
    }
    while (v5);
    uint64_t result = swift_bridgeObjectRelease_n();
    a2 = v14;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  }
  *a2 = v7;
  return result;
}

uint64_t type metadata accessor for FeedLayoutCache()
{
  return self;
}

uint64_t type metadata accessor for FormatImageProcessor()
{
  return self;
}

uint64_t type metadata accessor for StubThumbnailProcessor()
{
  return self;
}

uint64_t sub_1BFC51004()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC51064()
{
  unint64_t result = qword_1EB88A2A0;
  if (!qword_1EB88A2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A2A0);
  }
  return result;
}

void sub_1BFC510B8()
{
  if (!qword_1EB896BD0)
  {
    sub_1C151D80C();
    sub_1C151D73C();
    sub_1C002C7B4(&qword_1EB896BE0, 255, MEMORY[0x1E4F7AE40]);
    unint64_t v0 = sub_1C151D38C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB896BD0);
    }
  }
}

uint64_t sub_1BFC51178()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SportsDataService()
{
  return self;
}

uint64_t sub_1BFC51274@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A120);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for FormatMicaRenderer();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F1BF12D0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC5130C()
{
  uint64_t result = sub_1C151CC9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151A79C();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C151BCEC();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1BFC51458(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (v2)
  {
    type metadata accessor for FormatProgressViewNodeRenderer();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
    *(void *)(result + 24) = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC514EC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 560) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C040F680;
  }
  else
  {
    *(void *)(v4 + 568) = a1;
    uint64_t v5 = sub_1BFCD1A78;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1BFC51614@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC4730C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for FeedBannerAdFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F1C27248;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC5169C(double a1)
{
  sub_1BFFDEB20();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  CFTimeInterval v3 = CACurrentMediaTime();
  uint64_t v4 = MEMORY[0x1E4FBB460];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v2 + 64) = v4;
  *(CFTimeInterval *)(v2 + 32) = (v3 - a1) * 1000.0;
  sub_1C151F38C();
  sub_1C15197BC();
  return swift_bridgeObjectRelease();
}

void sub_1BFC5175C()
{
  if (!qword_1EB894900)
  {
    sub_1C151D4EC();
    sub_1C151D61C();
    sub_1C002C7B4((unint64_t *)&unk_1EB894910, 255, MEMORY[0x1E4F7AC20]);
    unint64_t v0 = sub_1C151D38C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894900);
    }
  }
}

uint64_t sub_1BFC5181C()
{
  type metadata accessor for FeedCursorTrackerGroup();
  sub_1C151E41C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_1C151E97C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t (*sub_1BFC51910())()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v6 = sub_1BFF493E4(v28, v2);
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t (*)())swift_release();
      if (!v1)
      {
        *(double *)(swift_allocObject() + 16) = v6;
        uint64_t result = (uint64_t (*)())sub_1C0A1757C;
      }
      break;
    case 2:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v7 = sub_1BFF493E4(v28, v2);
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t (*)())swift_release();
      if (!v1)
      {
        *(double *)(swift_allocObject() + 16) = v7;
        uint64_t result = (uint64_t (*)())sub_1C0A17538;
      }
      break;
    case 3:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v8 = sub_1BFF493E4(v28, v2);
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t (*)())swift_release();
      if (!v1)
      {
        *(double *)(swift_allocObject() + 16) = v8;
        uint64_t result = (uint64_t (*)())sub_1C0A174F4;
      }
      break;
    case 4:
      if (!v3) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      double v9 = sub_1BFF71C54();
      if (v1)
      {
        uint64_t result = (uint64_t (*)())sub_1BFDB3960(v3);
      }
      else
      {
        double v24 = v9;
        uint64_t v25 = v10;
        sub_1BFDB3960(v3);
        uint64_t v26 = swift_allocObject();
        *(double *)(v26 + 16) = v24;
        *(void *)(v26 + 24) = v25;
        uint64_t result = (uint64_t (*)())sub_1C0A174C8;
      }
      break;
    case 5:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v11 = sub_1BFF493E4(v28, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v12 = v11;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v12;
      uint64_t result = (uint64_t (*)())sub_1C0A17484;
      break;
    case 6:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v13 = sub_1BFF493E4(v28, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v14 = v13;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v14;
      uint64_t result = (uint64_t (*)())sub_1C0A17440;
      break;
    case 7:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v15 = sub_1BFF493E4(v28, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v16 = v15;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v16;
      uint64_t result = (uint64_t (*)())sub_1C0A173FC;
      break;
    case 8:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v17 = sub_1BFF493E4(v28, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v18 = v17;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v18;
      uint64_t result = sub_1C0A176DC;
      break;
    case 9:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v19 = sub_1BFF493E4(v28, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v20 = v19;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v20;
      uint64_t result = (uint64_t (*)())sub_1C0A173B4;
      break;
    case 0xA:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v21 = sub_1BFF493E4(v28, v2);
      if (v1) {
        goto LABEL_37;
      }
      double v22 = v21;
      swift_bridgeObjectRelease();
      swift_release();
      *(double *)(swift_allocObject() + 16) = v22;
      uint64_t result = (uint64_t (*)())sub_1C0A1737C;
      break;
    case 0xB:
      if (!v2) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      double v23 = sub_1BFF493E4(v28, v2);
      if (v1)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        uint64_t result = (uint64_t (*)())swift_release();
      }
      else
      {
        double v27 = v23;
        swift_bridgeObjectRelease();
        swift_release();
        *(double *)(swift_allocObject() + 16) = v27;
        uint64_t result = (uint64_t (*)())sub_1C0A17344;
      }
      break;
    default:
      if (v2)
      {
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        double v4 = sub_1BFF493E4(v28, v2);
        swift_bridgeObjectRelease();
        uint64_t result = (uint64_t (*)())swift_release();
        if (!v1)
        {
          *(double *)(swift_allocObject() + 16) = v4;
          uint64_t result = (uint64_t (*)())sub_1C0A175C0;
        }
      }
      else
      {
LABEL_39:
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1BFC51FD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for EngagementBannerViewLayoutAttributesFactory()
{
  return self;
}

uint64_t type metadata accessor for HiddenContentPlacardViewLayoutAttributesFactory()
{
  return self;
}

void sub_1BFC520B8()
{
  if (!qword_1EB896BE8)
  {
    sub_1C151D80C();
    sub_1C151D73C();
    sub_1C008E3E8(&qword_1EB896BE0, MEMORY[0x1E4F7AE40]);
    unint64_t v0 = sub_1C151DAFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB896BE8);
    }
  }
}

uint64_t type metadata accessor for FormatIssueCoverNodeRenderer()
{
  return self;
}

uint64_t sub_1BFC52198()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C1515FDC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ServiceAssembly()
{
  return self;
}

uint64_t type metadata accessor for CoverIssueView()
{
  return self;
}

uint64_t type metadata accessor for IssueCoverViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_1BFC522E4()
{
  uint64_t result = sub_1C151772C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151757C();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for FeedLayoutSolverOptions(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for OfflineAssembly()
{
  return self;
}

uint64_t sub_1BFC52440()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_1BFC524EC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, &qword_1EB87A198);
  uint64_t result = (char *)sub_1C151818C();
  if (result)
  {
    unint64_t v2 = result;
    id v3 = objc_allocWithZone((Class)type metadata accessor for LikingCompleteCommandHandler());
    return sub_1BFC9C6A4(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC5256C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC525CC()
{
  unint64_t result = qword_1EB860620;
  if (!qword_1EB860620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860620);
  }
  return result;
}

uint64_t sub_1BFC52620(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  double v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatVideoPlayerNodeStyle();
    sub_1C085F050(qword_1EB867F08, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t type metadata accessor for PublisherLogoProcessor()
{
  return self;
}

uint64_t sub_1BFC52810()
{
  uint64_t v3 = *(void *)(v0 + 1760);
  unint64_t v1 = swift_bridgeObjectRetain();
  sub_1BFC528B0(v1);
  *(void *)(v0 + 1776) = v3;
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1384, sub_1C005E684, v0 + 1536);
}

uint64_t sub_1BFC528B0(unint64_t a1)
{
  return sub_1BFFF1A64(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1BFFF1C38);
}

uint64_t type metadata accessor for NSAttributedStringWarmupTask()
{
  return self;
}

uint64_t type metadata accessor for LayeredMediaImageVariantSelector()
{
  return self;
}

uint64_t sub_1BFC52910()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t FormatContent.Resolved.themes.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatAssetHandle(uint64_t a1)
{
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (*(void *)(a1 + 64))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  return result;
}

uint64_t sub_1BFC529E4()
{
  uint64_t v0 = (int *)type metadata accessor for FormatTransformData();
  MEMORY[0x1F4188790]();
  unint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v12 - v3;
  sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
  MEMORY[0x1F4188790]();
  double v6 = (char *)&v12 - v5;
  __swift_allocate_value_buffer((uint64_t)v0, qword_1EB93C758);
  uint64_t v7 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1EB93C758);
  uint64_t v8 = type metadata accessor for FormatTransformKnobs();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  uint64_t v9 = type metadata accessor for FeedPersonalizationClusteringRules();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_1C0076DAC((uint64_t)v6, (uint64_t)v2);
  uint64_t v10 = MEMORY[0x1E4FBC870];
  *(void *)&v2[v0[5]] = MEMORY[0x1E4FBC870];
  *(void *)&v2[v0[6]] = v10;
  sub_1C11AA7C0((uint64_t)v6);
  *(void *)&v2[v0[7]] = v10;
  v2[v0[8]] = 0;
  v2[v0[9]] = 0;
  sub_1C0086A60((uint64_t)v4, (uint64_t)&v2[v0[10]]);
  return sub_1C0078ED0((uint64_t)v2, v7);
}

uint64_t sub_1BFC52C1C()
{
  sub_1BFEE8164(0, (unint64_t *)&qword_1EB871630, (uint64_t (*)(uint64_t))sub_1BFFB52BC, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFEE8164(0, &qword_1EB871670, (uint64_t (*)(uint64_t))sub_1BFFB52BC, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB8707D8 = result;
  return result;
}

BOOL FeedOfflineProviding.isOffline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() != 0;
}

uint64_t FormatFeedGroup.kindIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BFC52DD8()
{
  uint64_t v1 = 0x73646E696BLL;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1BFC52E2C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 2:
      uint64_t result = 0x6C65537865676572;
      break;
    case 3:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC52ED0()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x6564496B636F6C62;
  }
}

uint64_t sub_1BFC52F10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC52F48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC52F80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC52FB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC52FF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC53028()
{
  sub_1C02662CC(0, (unint64_t *)&qword_1EB87C870, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1C02662CC(0, (unint64_t *)&unk_1EB87C8E8, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB8812C8 = result;
  return result;
}

uint64_t sub_1BFC53158()
{
  sub_1C09884F8(0, &qword_1EB871628, (uint64_t)&type metadata for FollowingNotificationContext, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1C09884F8(0, (unint64_t *)&unk_1EB871660, (uint64_t)&type metadata for FollowingNotificationContext, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB8716A8 = result;
  return result;
}

uint64_t sub_1BFC53298(void *a1)
{
  return FormatColorAndExpression.encode(to:)(a1);
}

uint64_t initializeWithCopy for FormatImageNodeRequestAdjustment(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1BFCD9FD8(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_1BFC53314(void *a1)
{
  return FormatContentSubgroup.ResolvedContainer.encode(to:)(a1);
}

uint64_t sub_1BFC5332C()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFC5CA3C(0, &qword_1EB87C840, &qword_1EB87ED78, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C8A0, &qword_1EB87ED78, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87C9D0 = result;
  return result;
}

uint64_t sub_1BFC53484()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFC5CA3C(0, &qword_1EB87C840, &qword_1EB87ED78, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C8A0, &qword_1EB87ED78, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87C958 = result;
  return result;
}

uint64_t sub_1BFC535DC()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFC5CA3C(0, &qword_1EB87C840, &qword_1EB87ED78, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C8A0, &qword_1EB87ED78, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87C928 = result;
  return result;
}

uint64_t sub_1BFC53734()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFC5CA3C(0, &qword_1EB87C840, &qword_1EB87ED78, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C8A0, &qword_1EB87ED78, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87C9B0 = result;
  return result;
}

uint64_t sub_1BFC5388C()
{
  return sub_1BFC538A8();
}

uint64_t sub_1BFC538A8()
{
  return sub_1C151911C();
}

uint64_t sub_1BFC53944()
{
  sub_1BFC53BDC(0, (unint64_t *)&unk_1EB85F360, (uint64_t (*)(uint64_t))sub_1BFC53CA4, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFC53BDC(0, &qword_1EB85F388, (uint64_t (*)(uint64_t))sub_1BFC53CA4, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB85F488 = result;
  return result;
}

uint64_t sub_1BFC53A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFC53C40(0, &qword_1EB85F358, a3, (uint64_t (*)(uint64_t))type metadata accessor for Commands.RemoveIssues.Prompt, MEMORY[0x1E4FAD778]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1BFC53C40(0, &qword_1EB85F380, v8, (uint64_t (*)(uint64_t))type metadata accessor for Commands.RemoveIssues.Prompt, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD770], v4);
  uint64_t result = sub_1C151C9BC();
  qword_1EB85F470 = result;
  return result;
}

void sub_1BFC53BDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFC53C40(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFC53CA4(uint64_t a1)
{
}

uint64_t type metadata accessor for Commands.RemoveIssues.Prompt()
{
  return self;
}

uint64_t FeedCursorReference.__deallocating_deinit()
{
  sub_1BFC53D34();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC53D34()
{
  return swift_release();
}

uint64_t sub_1BFC53D44(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4161388](a1, WitnessTable);
}

id sub_1BFC53D98@<X0>(void *a1@<X8>)
{
  if (qword_1EB87C520 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EB87E9C8;
  a1[3] = type metadata accessor for SharedItemManager();
  a1[4] = &protocol witness table for SharedItemManager;
  *a1 = v3;
  return v3;
}

uint64_t type metadata accessor for SharedItemManager()
{
  uint64_t result = qword_1EB8915B8;
  if (!qword_1EB8915B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFC53E74(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C040D45C;
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    uint64_t v5 = sub_1C040D438;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1BFC53F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[2] = a3;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[4] = (uint64_t)v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1BFC53E74;
  return sub_1C040D474(v3 + 2);
}

uint64_t sub_1BFC5403C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC5408C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC540EC()
{
  unint64_t result = qword_1EB87EB68;
  if (!qword_1EB87EB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EB68);
  }
  return result;
}

uint64_t sub_1BFC54140()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC541CC()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC5421C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC5427C()
{
  unint64_t result = qword_1EB88DDD8;
  if (!qword_1EB88DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88DDD8);
  }
  return result;
}

uint64_t type metadata accessor for FeedPrerollAdRequester()
{
  return self;
}

uint64_t sub_1BFC542F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1BFC543E8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1BFC542F4;
  return sub_1BFC53F9C(a1, v5, v4);
}

uint64_t type metadata accessor for WebEmbedManager()
{
  return self;
}

uint64_t sub_1BFC544B8()
{
  uint64_t v10 = MEMORY[0x1E4FBADB0] + 64;
  uint64_t v11 = MEMORY[0x1E4FBADB0] + 64;
  uint64_t v12 = MEMORY[0x1E4FBADB0] + 64;
  double v13 = " ";
  uint64_t v14 = MEMORY[0x1E4FBADB0] + 64;
  long long v15 = &unk_1C15F15C0;
  uint64_t v16 = &unk_1C15F15D8;
  char v17 = &unk_1C15F15F0;
  double v18 = &unk_1C15F15D8;
  uint64_t v19 = MEMORY[0x1E4FBADB0] + 64;
  double v20 = &unk_1C15F15D8;
  double v21 = &unk_1C15F1608;
  double v22 = &unk_1C15F1620;
  double v23 = &unk_1C15F1620;
  uint64_t result = type metadata accessor for FormatCompilerProperty(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    double v24 = &v9;
    swift_getTupleTypeLayout2();
    uint64_t v25 = &v8;
    uint64_t v26 = &unk_1C15F1638;
    double v27 = &unk_1C15F1650;
    uint64_t v28 = &unk_1C15F15D8;
    uint64_t result = type metadata accessor for FormatEnumPropertyDefinition(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v29 = &v7;
      uint64_t v30 = &unk_1C15F15D8;
      uint64_t v31 = &unk_1C15F1608;
      uint64_t v32 = " ";
      uint64_t v33 = &unk_1C15F1608;
      uint64_t v34 = &unk_1C15F1668;
      uint64_t v35 = &unk_1C15F1608;
      uint64_t v36 = &unk_1C15F1608;
      uint64_t v37 = &unk_1C15F1608;
      char v38 = &unk_1C15F1608;
      uint64_t v39 = &unk_1C15F1608;
      uint64_t v40 = &unk_1C15F1608;
      uint64_t v41 = &unk_1C15F1680;
      uint64_t v42 = &unk_1C15F1698;
      uint64_t v43 = &unk_1C15F15C0;
      uint64_t v44 = " ";
      uint64_t result = type metadata accessor for FormatOption();
      if (v3 <= 0x3F)
      {
        uint64_t v45 = *(void *)(result - 8) + 64;
        uint64_t v46 = &unk_1C15F1608;
        uint64_t v47 = " ";
        uint64_t v48 = &unk_1C15F1608;
        uint64_t v49 = &unk_1C15F1608;
        uint64_t v50 = &unk_1C15F1608;
        uint64_t v51 = &unk_1C15F1608;
        uint64_t v52 = &unk_1C15F1608;
        uint64_t v53 = &unk_1C15F1608;
        uint64_t v54 = &unk_1C15F1608;
        uint64_t v55 = &unk_1C15F1608;
        uint64_t v56 = &unk_1C15F15D8;
        uint64_t v57 = &unk_1C15F15D8;
        uint64_t v58 = " ";
        uint64_t v59 = &unk_1C15F1608;
        uint64_t v60 = &unk_1C15F16B0;
        uint64_t v61 = &unk_1C15F1608;
        uint64_t result = type metadata accessor for FeedCustomItem();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for FormatPropertyDefinition(319);
          if (v5 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            v62 = &v6;
            v63 = &unk_1C15F1608;
            uint64_t v64 = &unk_1C15F1608;
            uint64_t v65 = &unk_1C15F1608;
            uint64_t v66 = &unk_1C15F15D8;
            uint64_t v67 = &unk_1C15F1608;
            uint64_t v68 = &unk_1C15F1608;
            v69 = &unk_1C15F1608;
            uint64_t v70 = " ";
            long long v71 = &unk_1C15F16C8;
            v72 = &unk_1C15F1608;
            uint64_t v73 = &unk_1C15F1668;
            uint64_t v74 = &unk_1C15F15D8;
            v75 = &unk_1C15F1608;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFC547A0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC54800()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC54850()
{
  unint64_t result = qword_1EB88CB50;
  if (!qword_1EB88CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88CB50);
  }
  return result;
}

uint64_t sub_1BFC548A4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC548F4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC54954()
{
  unint64_t result = qword_1EB88AD28;
  if (!qword_1EB88AD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AD28);
  }
  return result;
}

uint64_t type metadata accessor for FeedModelFactory()
{
  return self;
}

uint64_t sub_1BFC549CC(void *a1)
{
  uint64_t v3 = *(void *)(sub_1C151D4AC() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + v5) & ~v4);
  return sub_1C002C2BC(a1, v1 + v5, v6);
}

uint64_t sub_1BFC54A68()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC54AB8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC54B18()
{
  unint64_t result = qword_1EB88B6B0;
  if (!qword_1EB88B6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B6B0);
  }
  return result;
}

uint64_t sub_1BFC54B6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFC54BCC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  char v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FC52C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB888F10, (uint64_t (*)(void))sub_1C00732E8, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C00796BC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t FormatTagBinding.Color.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  v105 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v104 = (char *)&v91 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v103 = (char *)&v91 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v102 = (char *)&v91 - v10;
  MEMORY[0x1F4188790](v11);
  v101 = (char *)&v91 - v12;
  MEMORY[0x1F4188790](v13);
  v100 = (char *)&v91 - v14;
  MEMORY[0x1F4188790](v15);
  v99 = (char *)&v91 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v98 = (char *)&v91 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v97 = (char *)&v91 - v20;
  MEMORY[0x1F4188790](v21);
  v96 = (char *)&v91 - v22;
  MEMORY[0x1F4188790](v23);
  v95 = (char *)&v91 - v24;
  MEMORY[0x1F4188790](v25);
  v93 = (char *)&v91 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v92 = (char *)&v91 - v28;
  MEMORY[0x1F4188790](v29);
  v94 = (char *)&v91 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v91 = (char *)&v91 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v91 - v34;
  MEMORY[0x1F4188790](v36);
  char v38 = (char *)&v91 - v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v91 - v40;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v44 = (char *)&v91 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *v1;
  uint64_t v47 = a1[3];
  uint64_t v46 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v47);
  unint64_t v48 = sub_1BFEB6A24();
  v106 = v44;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTagBinding.Color, v49, v47, (uint64_t)&type metadata for FormatTagBinding.Color, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyC, v46, (uint64_t)v44, v48, (uint64_t)&off_1F1C39A28);
  switch(v45)
  {
    case 1:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_1C151928C();
      uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93CAE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v38, v55, v54);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v106;
      sub_1BFC46880(1, (uint64_t)v38);
      uint64_t v53 = (uint64_t)v38;
      break;
    case 2:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1C151928C();
      uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1EB93CAE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v35, v57, v56);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v106;
      sub_1BFC46880(2, (uint64_t)v35);
      uint64_t v53 = (uint64_t)v35;
      break;
    case 3:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1C151928C();
      uint64_t v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1EB93CAE0);
      uint64_t v60 = (uint64_t)v91;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v91, v59, v58);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 3;
      goto LABEL_56;
    case 4:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_1C151928C();
      uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CAE0);
      uint64_t v60 = (uint64_t)v94;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v94, v63, v62);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 4;
      goto LABEL_56;
    case 5:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_1C151928C();
      uint64_t v65 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CAE0);
      uint64_t v60 = (uint64_t)v92;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v92, v65, v64);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 5;
      goto LABEL_56;
    case 6:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1C151928C();
      uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB93CAE0);
      uint64_t v60 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v93, v67, v66);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 6;
      goto LABEL_56;
    case 7:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_1C151928C();
      uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CAE0);
      uint64_t v60 = (uint64_t)v95;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v95, v69, v68);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 7;
      goto LABEL_56;
    case 8:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1C151928C();
      uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93CA08);
      uint64_t v60 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v96, v71, v70);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 8;
      goto LABEL_56;
    case 9:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_1C151928C();
      uint64_t v73 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CA08);
      uint64_t v60 = (uint64_t)v97;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v97, v73, v72);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 9;
      goto LABEL_56;
    case 10:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_1C151928C();
      uint64_t v75 = __swift_project_value_buffer(v74, (uint64_t)qword_1EB93CA08);
      uint64_t v60 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v98, v75, v74);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 10;
      goto LABEL_56;
    case 11:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_1C151928C();
      uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB93CA80);
      uint64_t v60 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v99, v77, v76);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 11;
      goto LABEL_56;
    case 12:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CA80);
      uint64_t v60 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v100, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 12;
      goto LABEL_56;
    case 13:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_1C151928C();
      uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EB93CA80);
      uint64_t v60 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v101, v81, v80);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 13;
      goto LABEL_56;
    case 14:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_1C151928C();
      uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EB93CA80);
      uint64_t v60 = (uint64_t)v102;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v102, v83, v82);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 14;
      goto LABEL_56;
    case 15:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_1C151928C();
      uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CA80);
      uint64_t v60 = (uint64_t)v103;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v103, v85, v84);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 15;
      goto LABEL_56;
    case 16:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v86 = sub_1C151928C();
      uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB93CA80);
      uint64_t v60 = (uint64_t)v104;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16))(v104, v87, v86);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 16;
      goto LABEL_56;
    case 17:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v88 = sub_1C151928C();
      uint64_t v89 = __swift_project_value_buffer(v88, (uint64_t)qword_1EB93CA80);
      uint64_t v60 = (uint64_t)v105;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v105, v89, v88);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = 17;
LABEL_56:
      uint64_t v52 = (uint64_t)v106;
      sub_1BFC46880(v61, v60);
      uint64_t v53 = v60;
      break;
    default:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C151928C();
      uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CAE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v41, v51, v50);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v106;
      sub_1BFC46880(0, (uint64_t)v41);
      uint64_t v53 = (uint64_t)v41;
      break;
  }
  sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v52, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatIssueBinding.IssueCover.encode(to:)(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatIssueBinding.IssueCover, v11, v8, (uint64_t)&type metadata for FormatIssueBinding.IssueCover, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v9, (uint64_t)v7, v10, (uint64_t)&off_1F1C39BA8);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB93CA98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BFC4BB64((uint64_t)v4);
  sub_1BFEFEB68((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v7, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFC55F54(void *a1, uint64_t a2, void (*a3)(void, char *), void (*a4)(uint64_t, char *))
{
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v27 - v11;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v4;
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  unint64_t v19 = sub_1BFEB6A24();
  sub_1BFEFBD78(a2, v20, v17, a2, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v18, (uint64_t)v15, v19, (uint64_t)&off_1F1C39BA8);
  if (v16)
  {
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C151928C();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v9, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v29(1, v9);
    uint64_t v23 = (uint64_t)v9;
  }
  else
  {
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1C151928C();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v28(0, v12);
    uint64_t v23 = (uint64_t)v12;
  }
  sub_1BFEFEB68(v23, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v15, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatBindingTextExpressionLogic.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v69 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v68 = (char *)&v65 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v67 = (char *)&v65 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v65 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v65 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v65 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v66 = (char *)&v65 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v65 - v21;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v1 + 8);
  *(void *)&long long v75 = *(void *)v1;
  *((void *)&v75 + 1) = v26;
  unint64_t v27 = *(void *)(v1 + 16);
  uint64_t v28 = *(void *)(v1 + 32);
  uint64_t v71 = *(void *)(v1 + 24);
  uint64_t v72 = v28;
  uint64_t v73 = *(void *)(v1 + 40);
  unint64_t v74 = v27;
  unsigned __int16 v29 = *(unsigned __int8 *)(v1 + 50);
  unsigned int v70 = *(unsigned __int16 *)(v1 + 48) | (*(unsigned __int8 *)(v1 + 50) << 16);
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  unint64_t v32 = sub_1BFEB6A24();
  uint64_t v83 = v25;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBindingTextExpressionLogic, v33, v30, (uint64_t)&type metadata for FormatBindingTextExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v31, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  switch(v29 >> 5)
  {
    case 1:
      uint64_t v41 = qword_1EB882D28;
      uint64_t v35 = *((void *)&v75 + 1);
      swift_bridgeObjectRetain();
      if (v41 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C151928C();
      uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v14, v43, v42);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v75;
      uint64_t v39 = (uint64_t)v83;
      sub_1C0677180(3, v75, v35, (uint64_t)v14);
      sub_1BFEFEB68((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
      uint64_t v40 = v44;
      goto LABEL_8;
    case 2:
      uint64_t v46 = qword_1EB882D28;
      uint64_t v47 = *((void *)&v75 + 1);
      swift_bridgeObjectRetain();
      if (v46 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C151928C();
      uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v11, v49, v48);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = v75;
      uint64_t v39 = (uint64_t)v83;
      sub_1C0677180(4, v75, v47, (uint64_t)v11);
      sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
      uint64_t v40 = v50;
      uint64_t v45 = v47;
      goto LABEL_12;
    case 3:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CAB0);
      uint64_t v53 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v67, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v83;
      sub_1C0677348(5, v75, SBYTE8(v75), v53);
      uint64_t v54 = v53;
      goto LABEL_32;
    case 4:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1C151928C();
      uint64_t v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CAB0);
      uint64_t v22 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v68, v56, v55);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v83;
      sub_1C06774E0(6, v75, *((uint64_t *)&v75 + 1), v74, (uint64_t)v22);
      goto LABEL_31;
    case 5:
      long long v76 = v75;
      unint64_t v77 = v74;
      uint64_t v78 = v71;
      uint64_t v79 = v72;
      uint64_t v80 = v73;
      __int16 v81 = v70;
      char v82 = BYTE2(v70) & 0x1F;
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CA80);
      uint64_t v22 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v69, v58, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v83;
      sub_1C0677678(7, &v76, (uint64_t)v22);
      goto LABEL_31;
    case 6:
      if (v74 | *((void *)&v75 + 1) | (unint64_t)v75 | v71 | v72 | v73 || v70 != 12582912)
      {
        if (qword_1EB882D28 != -1) {
          swift_once();
        }
        uint64_t v62 = sub_1C151928C();
        uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CAB0);
        uint64_t v22 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v66, v63, v62);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v61 = 1;
      }
      else
      {
        if (qword_1EB882D28 != -1) {
          swift_once();
        }
        uint64_t v59 = sub_1C151928C();
        uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1EB93CAB0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v22, v60, v59);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v61 = 0;
      }
      uint64_t v39 = (uint64_t)v83;
      sub_1BFC461A0(v61, (uint64_t)v22);
LABEL_31:
      uint64_t v54 = (uint64_t)v22;
LABEL_32:
      sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
      break;
    default:
      uint64_t v34 = qword_1EB882D28;
      uint64_t v35 = *((void *)&v75 + 1);
      swift_bridgeObjectRetain();
      if (v34 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v17, v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v75;
      uint64_t v39 = (uint64_t)v83;
      sub_1C0677180(2, v75, v35, (uint64_t)v17);
      sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
      uint64_t v40 = v38;
LABEL_8:
      uint64_t v45 = v35;
LABEL_12:
      sub_1BFF00C44(v40, v45, v74, v71, v72, v73, v70);
      break;
  }
  return sub_1BFEFEB68(v39, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatIssueCoverContent.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v26 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatIssueCoverContent, v16, v13, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39BA8);
  if (v12 < 0)
  {
    uint64_t v21 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v22 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v23 = qword_1EB887638;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1C151928C();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v5, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0680574(1, v21, v22, (uint64_t)v5);
    sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    char v17 = *(unsigned char *)(v12 + 16);
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1C151928C();
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v8, v19, v18);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFC462F4(0, v17, (uint64_t)v8);
    sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t FormatRoute.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v28 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v28 - v10;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *v1;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  unint64_t v18 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatRoute, v19, v16, (uint64_t)&type metadata for FormatRoute, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v18, (uint64_t)&off_1F1C39B68);
  if (v15)
  {
    if (v15 == 1)
    {
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1C151928C();
      uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFC509E4(1, (uint64_t)v8);
      uint64_t v22 = (uint64_t)v8;
    }
    else
    {
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C151928C();
      uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93CAE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v5, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFC509E4(2, (uint64_t)v5);
      uint64_t v22 = (uint64_t)v5;
    }
  }
  else
  {
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1C151928C();
    uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v11, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFC509E4(0, (uint64_t)v11);
    uint64_t v22 = (uint64_t)v11;
  }
  sub_1BFEFEB68(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatFlexibleExpression.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0884934();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v9 = *v1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C0884808();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C085F050(&qword_1EA19DAD0, (void (*)(uint64_t))sub_1C0884808);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatFlexibleExpression, v15, v10, (uint64_t)&type metadata for FormatFlexibleExpression, v13, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v14, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1C151928C();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06FB440(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v8, (uint64_t (*)(void))sub_1C0884934);
}

uint64_t sub_1BFC575B0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E820 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85AAB0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1BFC57658@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB863CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB863CA0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1BFC57700@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E810 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85AA80);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t FormatLayeredMediaRatio.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  sub_1C08974EC();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned __int8 v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0897580();
  sub_1C085F050(&qword_1EB892050, (void (*)(uint64_t))sub_1C0897580);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v23;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v16 = *((void *)v15 - 1);
      uint64_t v23 = (unsigned char *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v17 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v17);
      *(&v22 - 4) = (uint64_t)&_s10CodingKeysON_107;
      *(&v22 - 3) = sub_1C0897604();
      *(&v22 - 2) = sub_1C0072E70();
      *(&v22 - 1) = sub_1C0897658();
      swift_getKeyPath();
      swift_retain();
      uint64_t v18 = sub_1C085FA20((uint64_t)&unk_1F1B860A0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v19 = (uint64_t)v23;
      *(void *)uint64_t v20 = v23;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v18;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v19, v16, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C006A2B0();
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  char v26 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v12 = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC57B20(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  unint64_t v7 = a4 >> 1;
  uint64_t v8 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
  if (v8 <= 0)
  {
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    if (v7 != a3)
    {
LABEL_10:
      if (v8 < 0) {
        goto LABEL_24;
      }
      uint64_t v18 = *(void *)(a7(0) - 8);
      uint64_t v19 = (char *)v15 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      uint64_t v20 = *(void *)(v18 + 72);
      unint64_t v21 = a2 + v20 * a3;
      uint64_t v22 = v20 * v8;
      uint64_t v23 = &v19[v22];
      unint64_t v24 = v21 + v22;
      if (v21 < (unint64_t)v23 && (unint64_t)v19 < v24) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v15;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1C006271C(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = *(void *)(a7(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (void *)swift_allocObject();
  size_t v16 = _swift_stdlib_malloc_size(v15);
  if (v13)
  {
    if (v16 - v14 == 0x8000000000000000 && v13 == -1) {
      goto LABEL_23;
    }
    v15[2] = v8;
    v15[3] = 2 * ((uint64_t)(v16 - v14) / v13);
    if (v7 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFC57D84()
{
  sub_1BFE82970(319, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  if (v0 <= 0x3F)
  {
    sub_1BFF014AC(319, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    if (v1 <= 0x3F)
    {
      sub_1BFE82C58(319, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      if (v2 <= 0x3F)
      {
        type metadata accessor for FormatCompilerEnumProperty(319);
        if (v3 <= 0x3F)
        {
          sub_1BFF014AC(319, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
          if (v4 <= 0x3F)
          {
            sub_1BFE82970(319, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
            if (v5 <= 0x3F)
            {
              sub_1BFE82970(319, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              if (v6 <= 0x3F)
              {
                sub_1BFE82A10(319, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
                if (v7 <= 0x3F)
                {
                  sub_1BFF014AC(319, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
                  if (v8 <= 0x3F)
                  {
                    sub_1BFF014AC(319, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
                    if (v9 <= 0x3F) {
                      swift_initEnumMetadataMultiPayload();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t FeedServiceContextType.shouldReadRootCursorFromDatabase(createdDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v5 = sub_1C151555C();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151631C();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (double *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for FeedServiceOptions(0);
  uint64_t v15 = v14 - 8;
  __n128 v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 8))(a2, a3, v16);
  sub_1BFC69940((uint64_t)&v18[*(int *)(v15 + 28)], (uint64_t)v13);
  char v19 = 1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v24 = v26;
      uint64_t v23 = v27;
      (*(void (**)(char *, double *, uint64_t))(v26 + 32))(v7, v13, v27);
      char v19 = sub_1C151553C();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
      break;
    case 2u:
    case 3u:
      return v19 & 1;
    case 4u:
      char v19 = 0;
      break;
    default:
      double v20 = *v13;
      sub_1C151630C();
      sub_1C15161FC();
      double v22 = v21;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
      char v19 = v20 < v22;
      break;
  }
  return v19 & 1;
}

uint64_t sub_1BFC5849C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatFontMetricAdjustment.init(from:)(a1, a2);
}

uint64_t FormatFontMetricAdjustment.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFD55F84(a1, (void (*)(uint64_t))sub_1BFD562C4, (uint64_t)&_s10CodingTypeON_180, (uint64_t)&unk_1F1B69198, a2);
}

uint64_t sub_1BFC584F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatFontMetric.init(from:)(a1, a2);
}

uint64_t FormatFontMetric.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFD55F84(a1, (void (*)(uint64_t))sub_1BFD5636C, (uint64_t)&_s10CodingTypeON_181, (uint64_t)&unk_1F1B69148, a2);
}

uint64_t sub_1BFC58544@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatIssueBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatIssueBinding.Image.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFD55F84(a1, (void (*)(uint64_t))sub_1BFD56318, (uint64_t)&_s5ImageO10CodingTypeON, (uint64_t)&unk_1F1B85D30, a2);
}

uint64_t sub_1BFC58598@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC585C8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC585C8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC58614@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC58644();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC58644()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12) {
    return 18;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC58698(void *a1)
{
  return FormatRepeatNode.encode(to:)(a1);
}

uint64_t sub_1BFC586BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroup.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1BFC586D4(void *a1)
{
  return sub_1BFFEF040(a1);
}

uint64_t sub_1BFC586EC(void *a1)
{
  return FormatOptionsNode.encode(to:)(a1);
}

uint64_t FeedPluginManager.add<A>(factory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(*v3 + class metadata base offset for FeedPluginManager);
  uint64_t v8 = *(void *)(*v3 + class metadata base offset for FeedPluginManager + 16);
  type metadata accessor for FeedPluginManager.FactoryWrapper();
  uint64_t v9 = sub_1C008B0FC(a1, v7, a2, a3, v8);
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  sub_1C151ED5C();
  swift_retain();
  sub_1C151ED1C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BFC58834()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151631C();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t *FeedManager.deinit()
{
  uint64_t v1 = *v0;
  swift_release();
  swift_release();
  unint64_t v2 = (void *)v0[6];

  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t)v0 + *(void *)(*v0 + 152);
  uint64_t v4 = sub_1C151FD8C();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5((uint64_t)v0 + *(void *)(*v0 + 160), v4);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 168));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 176));
  swift_release();
  return v0;
}

uint64_t sub_1BFC58ACC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = MEMORY[0x1E4FBADB0] + 64;
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v3;
    uint64_t v7 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeWithCopy for FormatTextNodeAlternative(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BFC58C54()
{
  uint64_t v0 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v0 - 8);
  type metadata accessor for FormatStringSelector();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t result = sub_1C1517EBC();
  *(void *)(v1 + 24) = result;
  qword_1EB93C770 = v1;
  return result;
}

uint64_t sub_1BFC58D14()
{
  uint64_t v15 = sub_1C151718C();
  uint64_t v0 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C151719C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1C1516FEC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC93818();
  uint64_t v14 = v11;
  sub_1C151E62C();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB278], v7);
  *uint64_t v6 = sub_1C151E62C();
  v6[1] = v12;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAB408], v3);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB400], v15);
  uint64_t result = sub_1C15171EC();
  qword_1EB8637B8 = result;
  return result;
}

uint64_t sub_1BFC58F88()
{
  uint64_t v0 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v0 - 8);
  type metadata accessor for FormatBundleCache();
  uint64_t v1 = swift_allocObject();
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t result = sub_1C1517EBC();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  *(void *)(v1 + 16) = result;
  *(void *)(v1 + 24) = v3;
  qword_1EB93C7F8 = v1;
  return result;
}

uint64_t FormatLayeredMediaNode.init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13)
{
  uint64_t v19 = *a3;
  uint64_t v20 = *a6;
  uint64_t v21 = *a7;
  uint64_t v23 = *a10;
  uint64_t v25 = *a12;
  char v24 = *((unsigned char *)a12 + 8);
  swift_beginAccess();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = v19;
  *(void *)(v13 + 40) = a4;
  *(void *)(v13 + 48) = a5;
  *(void *)(v13 + 56) = v20;
  *(void *)(v13 + 64) = v21;
  swift_beginAccess();
  *(void *)(v13 + 72) = a8;
  swift_beginAccess();
  *(void *)(v13 + 80) = a9;
  swift_beginAccess();
  *(void *)(v13 + 88) = v23;
  swift_beginAccess();
  *(unsigned char *)(v13 + 96) = a11;
  *(void *)(v13 + 104) = v25;
  *(unsigned char *)(v13 + 112) = v24;
  swift_beginAccess();
  *(void *)(v13 + 120) = a13;
  return v13;
}

uint64_t sub_1BFC59194()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1BFC59274()
{
  return swift_initClassMetadata2();
}

uint64_t static FeedLocation.topOfFeed(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v10 = (char *)&v17 - v9;
  type metadata accessor for FeedCursorTracker();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = swift_allocBox();
  uint64_t v14 = v13;
  uint64_t v15 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v13, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  uint64_t result = FeedCursorTracker.__allocating_init(context:)((uint64_t)v10);
  *(void *)(v14 + v15) = result;
  *a4 = v12;
  return result;
}

uint64_t PuzzleStatsState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_1C151631C();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDA6F84(0, &qword_1EB8634F8, MEMORY[0x1E4FBBDC0]);
  uint64_t v23 = v6;
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for PuzzleStatsState();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDA6F30();
  double v22 = v8;
  uint64_t v12 = v24;
  sub_1C1520EBC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)a1;
  char v24 = v5;
  uint64_t v15 = v20;
  uint64_t v14 = v21;
  LOBYTE(v26) = 0;
  *uint64_t v11 = sub_1C152069C();
  v11[1] = v16;
  sub_1BFDA6EC8();
  char v25 = 1;
  sub_1BFDA6FE8(&qword_1EB863200, (void (*)(void))sub_1C007F738);
  sub_1C15206EC();
  void v11[2] = v26;
  sub_1BFDA70F4();
  char v25 = 2;
  sub_1C00657D8();
  sub_1C15206EC();
  uint64_t v18 = 0;
  v11[3] = v26;
  LOBYTE(v26) = 3;
  sub_1BFE0D898(&qword_1EB871168);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v23);
  (*(void (**)(void, char *, uint64_t))(v14 + 32))(*(int *)(v9 + 28), v24, v3);
  sub_1C007DBB8(0, v19);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1C007DB58(0, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
}

uint64_t _s11TeaSettings0B0C8NewsFeedE7PuzzlesV18BadgeCountOverrideC3key12defaultValue6accessAHSSSg_SbAA6AccessOtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  uint64_t v9 = sub_1C151700C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

void sub_1BFC59A14(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v33 = v7 - 1;
  uint64_t v8 = a5[1];
  if (*a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v8 == v9) {
      goto LABEL_3;
    }
  }
  else if (v8 == *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain();
    sub_1C139A670(a1, a2, v33, a3);
    return;
  }
  uint64_t v35 = a3 + 56;
  uint64_t v34 = v5;
  while (1)
  {
    uint64_t v10 = *v5;
    unint64_t v11 = v5[1];
    if ((*v5 & 0xC000000000000001) != 0)
    {
      id v12 = (id)MEMORY[0x1C18C7CB0](v5[1]);
      uint64_t v29 = v5[1];
      unint64_t v13 = v29 + 1;
      if (__OFADD__(v29, 1)) {
        goto LABEL_33;
      }
      goto LABEL_10;
    }
    if ((v11 & 0x8000000000000000) != 0) {
      break;
    }
    if (v11 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_32;
    }
    id v12 = *(id *)(v10 + 8 * v11 + 32);
    unint64_t v13 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_33;
    }
LABEL_10:
    v5[1] = v13;
    uint64_t v14 = sub_1C151FB5C();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v35 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_17;
    }
    sub_1BFD439D4();
    id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v16);
    char v20 = sub_1C151FB6C();

    if ((v20 & 1) == 0)
    {
      uint64_t v21 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v23 + 1)
      {
        unint64_t v23 = i & v21;
        if (((*(void *)(v35 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0) {
          break;
        }
        id v24 = *(id *)(*(void *)(a3 + 48) + 8 * v23);
        char v25 = sub_1C151FB6C();

        if (v25)
        {

          unint64_t v17 = v23 >> 6;
          uint64_t v18 = 1 << v23;
          goto LABEL_19;
        }
      }
LABEL_17:

      uint64_t v5 = v34;
      goto LABEL_22;
    }

LABEL_19:
    unint64_t v26 = a1[v17];
    a1[v17] = v26 & ~v18;
    uint64_t v5 = v34;
    if ((v18 & v26) != 0)
    {
      uint64_t v27 = v33 - 1;
      if (__OFSUB__(v33, 1)) {
        goto LABEL_34;
      }
      --v33;
      if (!v27) {
        return;
      }
    }
LABEL_22:
    uint64_t v28 = v5[1];
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v28 == v30) {
        goto LABEL_3;
      }
    }
    else if (v28 == *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t FeedModifierStore.applyPendingModifiers<A, B>(to:)()
{
  swift_retain();
  uint64_t v0 = sub_1C1518D6C();
  uint64_t result = swift_release();
  int64_t v2 = 0;
  uint64_t v10 = v0 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v0 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(v0 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v7 >= v6) {
      return swift_release();
    }
    uint64_t v8 = *(void *)(v10 + 8 * v7);
    ++v2;
    if (!v8)
    {
      int64_t v2 = v7 + 1;
      if (v7 + 1 >= v6) {
        return swift_release();
      }
      uint64_t v8 = *(void *)(v10 + 8 * v2);
      if (!v8) {
        break;
      }
    }
LABEL_18:
    uint64_t v5 = (v8 - 1) & v8;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C151AC9C();
    swift_getWitnessTable();
    sub_1C151ACDC();
    swift_retain();
    sub_1C1518DDC();
    swift_release();
    uint64_t result = swift_release();
  }
  int64_t v9 = v7 + 2;
  if (v9 >= v6) {
    return swift_release();
  }
  uint64_t v8 = *(void *)(v10 + 8 * v9);
  if (v8)
  {
    int64_t v2 = v9;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v2 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v2 >= v6) {
      return swift_release();
    }
    uint64_t v8 = *(void *)(v10 + 8 * v2);
    ++v9;
    if (v8) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1BFC59EF8()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1BFC40618(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v45 = v0;
  uint64_t v46 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  int64_t v47 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v43 = *MEMORY[0x1E4F1C4B0];
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  int64_t v9 = &selRef_scrollToRowAtIndexPath_atScrollPosition_animated_;
  uint64_t v44 = v4;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_37;
    }
    if (v15 >= v47) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v46 + 8 * v15);
    ++v8;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v47) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v46 + 8 * v8);
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v47) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v46 + 8 * v8);
        if (!v16) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_23:
    uint64_t v18 = 8 * v14;
    double v19 = *(double *)(*(void *)(v4 + 48) + v18);
    id v20 = *(id *)(*(void *)(v4 + 56) + v18);
    if (([v20 v9[244]] & 1) == 0)
    {
      uint64_t v21 = swift_allocObject();
      swift_weakInit();
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v21;
      *(double *)(v22 + 24) = v19;
      aBlock[4] = sub_1C11A8278;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BFD34E78;
      aBlock[3] = &block_descriptor_91;
      unint64_t v23 = _Block_copy(aBlock);
      id v24 = self;
      swift_retain();
      id v25 = objc_msgSend(v24, sel_timerWithTimeInterval_repeats_block_, 1, v23, v19);
      _Block_release(v23);
      swift_release();
      swift_release();
      unint64_t v26 = v3;
      swift_beginAccess();
      id v27 = v25;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = *(void **)(v45 + 16);
      *(void *)(v45 + 16) = 0x8000000000000000;
      unint64_t v31 = sub_1BFE6E400(v19);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_1BFC3B5EC(v34, isUniquelyReferenced_nonNull_native);
        unint64_t v36 = sub_1BFE6E400(v19);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_40;
        }
        unint64_t v31 = v36;
        if ((v35 & 1) == 0) {
          goto LABEL_31;
        }
LABEL_4:
        uint64_t v10 = v29[7];
        uint64_t v11 = 8 * v31;

        *(void *)(v10 + v11) = v27;
LABEL_5:
        uint64_t v3 = v26;
        *unint64_t v26 = v29;
        swift_bridgeObjectRelease();
        swift_endAccess();
        id v12 = objc_msgSend(self, sel_currentRunLoop);
        objc_msgSend(v12, sel_addTimer_forMode_, v27, v43);

        uint64_t v4 = v44;
        int64_t v9 = &selRef_scrollToRowAtIndexPath_atScrollPosition_animated_;
        goto LABEL_6;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v30) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C106FDD0();
        if (v35) {
          goto LABEL_4;
        }
      }
LABEL_31:
      v29[(v31 >> 6) + 8] |= 1 << v31;
      uint64_t v38 = 8 * v31;
      *(double *)(v29[6] + v38) = v19;
      *(void *)(v29[7] + v38) = v27;
      uint64_t v39 = v29[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_38;
      }
      v29[2] = v41;
      goto LABEL_5;
    }
LABEL_6:
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v47) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v46 + 8 * v17);
  if (v16)
  {
    int64_t v8 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v8 >= v47) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v46 + 8 * v8);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t *sub_1BFC5A3B0(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v5;
  uint64_t v11 = sub_1C151804C();
  MEMORY[0x1F4188790](v11 - 8);
  long long v12 = a1[3];
  *((_OWORD *)v5 + 3) = a1[2];
  *((_OWORD *)v5 + 4) = v12;
  long long v13 = a1[5];
  *((_OWORD *)v5 + 5) = a1[4];
  *((_OWORD *)v5 + 6) = v13;
  long long v14 = a1[1];
  *((_OWORD *)v5 + 1) = *a1;
  *((_OWORD *)v5 + 2) = v14;
  v5[14] = a2;
  uint64_t v15 = *(void *)(v10 + 80);
  sub_1C151917C();
  sub_1C1518D2C();
  unint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v15;
  _OWORD v16[3] = *(void *)(v10 + 88);
  v16[4] = a3;
  v16[5] = a4;
  sub_1BFC717EC((uint64_t)a1);
  swift_retain();
  sub_1BFDA5AB8();
  v5[15] = sub_1C1518D0C();
  return v5;
}

id sportsOnboardingState(userInfo:)(void *a1)
{
  if (objc_msgSend(a1, sel_sportsSyncState) != (id)2) {
    return 0;
  }
  id v2 = objc_msgSend(self, sel_sharedAccount);
  unsigned int v3 = objc_msgSend(v2, sel_isUserSignedInToiCloud);

  if (!v3) {
    return 0;
  }
  return objc_msgSend(a1, sel_sportsOnboardingState);
}

uint64_t sub_1BFC5A634(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFFC879C(a8, a9, a10);
    sub_1C006F0EC(a11, a12, a13, a14, a15);
    return sub_1BFFC879C(a16, a17, a18);
  }
  return result;
}

uint64_t initializeWithCopy for FormatAnimationNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFC5A79C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1C1520DBC();
  if (v2 == 1 || v2 == 2 || v2 == 3)
  {
    sub_1C1520DCC();
  }
  else
  {
    sub_1C1520DCC();
    sub_1C1520DDC();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      sub_1BFEE653C(v1, v2);
    }
  }
  return sub_1C1520E0C();
}

uint64_t FormatStateViewNode.init(identifier:size:resize:adjustments:stateMachineName:states:zIndex:visibility:isUserInteractionEnabled:animation:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = *a3;
  uint64_t v21 = *a4;
  uint64_t v23 = *a10;
  swift_beginAccess();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  swift_beginAccess();
  *(void *)(v13 + 32) = v20;
  *(void *)(v13 + 40) = v21;
  swift_beginAccess();
  *(void *)(v13 + 48) = a5;
  *(void *)(v13 + 56) = a6;
  *(void *)(v13 + 64) = a7;
  *(void *)(v13 + 72) = a8;
  swift_beginAccess();
  *(void *)(v13 + 80) = a9;
  swift_beginAccess();
  *(void *)(v13 + 88) = v23;
  swift_beginAccess();
  *(unsigned char *)(v13 + 96) = a11;
  *(void *)(v13 + 104) = a12;
  swift_beginAccess();
  *(void *)(v13 + 112) = a13;
  return v13;
}

uint64_t sub_1BFC5A9B0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151917C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v1 = sub_1C151FD8C();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(TupleTypeMetadata2 - 8) + 56))((char *)&v7 - v4, 1, 1, TupleTypeMetadata2, v3);
  sub_1BFD643A0((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_1BFC5AB7C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1C0069218();
  uint64_t v9 = v8;
  uint64_t v10 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = swift_allocObject();
  char v14 = a2 & 1;
  *(unsigned char *)(v13 + 16) = a2 & 1;
  *(void *)(v13 + 24) = v11;
  *(void *)(v13 + 32) = v12;
  sub_1BFEFF3E8(0, (unint64_t *)&unk_1EB860DE0, (uint64_t (*)(void))sub_1BFC6EFBC, (uint64_t)&type metadata for FormatCountLimit.CodingKeys, MEMORY[0x1E4FBBDE0]);
  sub_1C00629F8();
  swift_retain();
  uint64_t v15 = sub_1C1520B8C();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = v14;
  sub_1BFC66384(v4 + *(int *)(v9 + 36), (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  id v25 = sub_1C08E52BC;
  uint64_t v26 = v16;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = sub_1C08E5290;
  uint64_t v23 = v13;
  LOBYTE(v11) = sub_1BFEFC050(a1, (uint64_t)sub_1C090A464, (uint64_t)v24, (uint64_t)sub_1C090A470, (uint64_t)v19);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v11 & 1;
}

uint64_t sub_1BFC5AD54()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC5ADB4()
{
  unint64_t result = qword_1EB88C250;
  if (!qword_1EB88C250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C250);
  }
  return result;
}

uint64_t sub_1BFC5AE08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v3 + qword_1EB93C2C8;
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(void *)(v3 + qword_1EB93C2D0) = a2;
  type metadata accessor for FeedCursorManifestGroupEntry();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  sub_1C151E2FC();
  sub_1C151E41C();
  swift_getWitnessTable();
  sub_1C151E9DC();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  *(void *)(v3 + qword_1EB93C2D8) = v10;
  return v3;
}

void sub_1BFC5AFE0(void *a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a2;
  uint64_t v5 = swift_unknownObjectWeakAssign();
  uint64_t v6 = *(void *)(v2 + 184);
  uint64_t v7 = (void *)MEMORY[0x1C18C9C60](v5);
  uint64_t v8 = *(void *)(v2 + 40);
  swift_beginAccess();
  *(void *)(v6 + 24) = v8;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1BFC5B160()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for FeedGap(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t FeedModeState.description.getter()
{
  switch(*v0 >> 6)
  {
    case 1:
      uint64_t v1 = 0x7269736544746F6ELL;
      break;
    case 2:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v1 = 0x456D726177657270;
      break;
    case 3:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v1 = 0x724564616F6C6572;
      break;
    default:
      uint64_t v1 = 0x2064657269736564;
      break;
  }
  uint64_t v3 = v1;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v3;
}

uint64_t sub_1BFC5B30C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  uint64_t v18 = sub_1C151635C();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0;
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_1C151634C();
    uint64_t v23 = sub_1C151633C();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    type metadata accessor for FormatGroupNodeMaskLayoutAttributes();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v25;
    *(double *)(v22 + 48) = a6;
    *(double *)(v22 + 56) = a7;
    *(double *)(v22 + 64) = a8;
    *(double *)(v22 + 72) = a9;
    *(void *)(v22 + 80) = a4;
    *(void *)(v22 + 88) = a5;
    swift_retain();
    swift_retain();
  }
  return v22;
}

uint64_t type metadata accessor for FeedScalingManager()
{
  return self;
}

uint64_t sub_1BFC5B498()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatOptionBindingModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFC5B568()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151631C();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1BFC5B700()
{
  return swift_initClassMetadata2();
}

uint64_t initializeWithCopy for FeedEdition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t FeedPluginManagerResult.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC5B82C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC5B88C()
{
  unint64_t result = qword_1EB887D20;
  if (!qword_1EB887D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887D20);
  }
  return result;
}

uint64_t sub_1BFC5B8E0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C024B72C, 0, 0);
  }
  else
  {

    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

id sub_1BFC5BA38(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

uint64_t sub_1BFC5BA84@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BFC5BAD8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC5BB38()
{
  unint64_t result = qword_1EB87F208;
  if (!qword_1EB87F208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87F208);
  }
  return result;
}

uint64_t FeedScoringContext.description.getter()
{
  uint64_t v1 = 0x6E776F6E6B6E55;
  unsigned int v2 = *v0;
  switch(v2 >> 14)
  {
    case 1u:
      uint64_t v4 = 0x28206575737349;
      sub_1C151E80C();
      goto LABEL_4;
    case 2u:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v4 = 0x656E696C64616548;
      FeedHeadlineScoringContext.description.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return v4;
    case 3u:
      return v1;
    default:
      uint64_t v4 = 0x656E696C64616548;
      FeedHeadlineScoringContext.description.getter();
      sub_1C151E80C();
LABEL_4:
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      return v4;
  }
}

uint64_t sub_1BFC5BDAC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a2;
  uint64_t v4 = swift_unknownObjectWeakAssign();
  uint64_t v5 = *(void *)(*(void *)(v2 + 184) + 56);
  MEMORY[0x1C18C9C60](v4);
  *(void *)(v5 + 24) = *(void *)(v2 + 32);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t destroy for FormatLayoutContext()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC5BE98()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC5BEF8()
{
  unint64_t result = qword_1EB85D108;
  if (!qword_1EB85D108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D108);
  }
  return result;
}

uint64_t sub_1BFC5BF4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC8784(a8, a9, a10);
    sub_1C006F0D4(a11, a12, a13, a14, a15);
    return sub_1BFFC8784(a16, a17, a18);
  }
  return result;
}

uint64_t sub_1BFC5C058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  sub_1C151811C();
  uint64_t v9 = *(void *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 96);
  type metadata accessor for FormatFeedPluginFactory.FactoryWrapper();
  uint64_t v11 = sub_1C008CE60(a1, v9, a2, a3, v10);
  uint64_t v13 = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v13;
  swift_beginAccess();
  sub_1C151E41C();
  sub_1C151E44C();
  return swift_endAccess();
}

uint64_t sub_1BFC5C1A0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC5C200()
{
  unint64_t result = qword_1EB85CB08;
  if (!qword_1EB85CB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CB08);
  }
  return result;
}

uint64_t _s8NewsFeed8FeedItemO4KindOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BFC5C2A0()
{
  uint64_t result = 0x746E6F436F676F6CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657A69536F676F6CLL;
      break;
    case 2:
      uint64_t result = 0x6C7974536F676F6CLL;
      break;
    case 3:
      uint64_t result = 0x697365526F676F6CLL;
      break;
    case 4:
      uint64_t result = 0x61727544776F6873;
      break;
    case 5:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC5C360()
{
  return *(void *)&aSize_55[8 * *v0];
}

uint64_t sub_1BFC5C378()
{
  uint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x426F547370696C63;
      break;
    case 2:
      uint64_t result = 7235952;
      break;
    case 3:
      uint64_t result = 0x6162726562627572;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC5C410@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC5C448(void *a1)
{
  return FormatEdgeInsetsEquation.encode(to:)(a1);
}

uint64_t sub_1BFC5C460@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC5C498@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC5C4D0(void *a1)
{
  return FormatContentSlot.Resolved.encode(to:)(a1);
}

uint64_t sub_1BFC5C4E8()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1BFC5CA3C(0, &qword_1EB87C840, &qword_1EB87ED78, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C8A0, &qword_1EB87ED78, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87C9F0 = result;
  return result;
}

uint64_t sub_1BFC5C640()
{
  uint64_t v0 = MEMORY[0x1E4FBB3D0];
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C828, (unint64_t *)&unk_1EB87ED60, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, &qword_1EB87C888, (unint64_t *)&unk_1EB87ED60, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87C940 = result;
  return result;
}

uint64_t sub_1BFC5C794()
{
  uint64_t v0 = MEMORY[0x1E4FBB3D0];
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C828, (unint64_t *)&unk_1EB87ED60, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, &qword_1EB87C888, (unint64_t *)&unk_1EB87ED60, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87C998 = result;
  return result;
}

uint64_t sub_1BFC5C8E8()
{
  uint64_t v0 = MEMORY[0x1E4FBB3D0];
  sub_1BFC5CA3C(0, (unint64_t *)&unk_1EB87C828, (unint64_t *)&unk_1EB87ED60, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1BFC5CA3C(0, &qword_1EB87C888, (unint64_t *)&unk_1EB87ED60, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CA08 = result;
  return result;
}

void sub_1BFC5CA3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1BFEFDFBC(255, a3, a4, (uint64_t (*)(void, uint64_t))type metadata accessor for AudioCommandContext);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFC5CAB8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatWebEmbedBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatWebEmbedBinding.Bool.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD7FD0, (uint64_t)&type metadata for FormatWebEmbedBinding.Bool.CodingType, (uint64_t)&unk_1F1B88D30, a2);
}

uint64_t sub_1BFC5CB0C(uint64_t a1)
{
  return sub_1BFC5CB24(a1);
}

uint64_t sub_1BFC5CB24(uint64_t a1)
{
  return sub_1BFFF7088(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

void sub_1BFC5CB48()
{
  type metadata accessor for PuzzleStatisticValue(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PuzzleStatisticDifficultyLevelValue(319);
    if (v1 <= 0x3F)
    {
      sub_1C00671B8(319, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F)
      {
        type metadata accessor for PuzzleStatisticsGroupedValue(319);
        if (v3 <= 0x3F) {
          swift_initEnumMetadataMultiPayload();
        }
      }
    }
  }
}

uint64_t sub_1BFC5CCB4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFC5CCEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0867BE0();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC5CD24(void *a1)
{
  return FormatQueryParameter.encode(to:)(a1);
}

uint64_t sub_1BFC5CD3C(void *a1)
{
  return FormatLayeredMediaNodeStyle.Selector.encode(to:)(a1);
}

void sub_1BFC5CD54()
{
  sub_1BFF71970(319, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  if (v0 <= 0x3F)
  {
    sub_1BFF718BC(319, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
    if (v1 <= 0x3F)
    {
      sub_1BFF71B30();
      if (v2 <= 0x3F)
      {
        type metadata accessor for FormatEnumPropertyDefinition(319);
        if (v3 <= 0x3F)
        {
          sub_1BFF718BC(319, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          if (v4 <= 0x3F)
          {
            sub_1BFF71970(319, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
            if (v5 <= 0x3F)
            {
              sub_1BFF71970(319, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
              if (v6 <= 0x3F)
              {
                sub_1BFF719C0();
                if (v7 <= 0x3F)
                {
                  sub_1BFF718BC(319, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                  if (v8 <= 0x3F)
                  {
                    sub_1BFF718BC(319, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                    if (v9 <= 0x3F)
                    {
                      sub_1BFF718BC(319, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                      if (v10 <= 0x3F)
                      {
                        sub_1BFF718BC(319, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                        if (v11 <= 0x3F) {
                          swift_initEnumMetadataMultiPayload();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

id sub_1BFC5D244()
{
  if (qword_1EB88D6B0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB88D6A0;
  uint64_t v1 = *(void *)algn_1EB88D6A8;
  unint64_t v2 = self;
  swift_bridgeObjectRetain();
  sub_1BFEF95A8(v1);
  id result = objc_msgSend(v2, sel_emptyDatastore);
  qword_1EB88F318 = v0;
  unk_1EB88F320 = v1;
  qword_1EB88F328 = (uint64_t)result;
  return result;
}

uint64_t sub_1BFC5D2EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C151794C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataConfigurationManager()
{
  return self;
}

NewsFeed::GapColorPalette __swiftcall GapColorPalette.init(tintColor:textColor:)(UIColor tintColor, UIColor textColor)
{
  unint64_t v3 = v2;

  v3->super.isa = textColor.super.isa;
  v3[1].super.isa = textColor.super.isa;
  unint64_t v4 = textColor.super.isa;
  result.textColor.super.isa = v5;
  result.tintColor.super.isa = v4;
  return result;
}

uint64_t destroy for FormatSizeEquation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC5D3D8(uint64_t a1)
{
  return sub_1C00A5D60(a1, &qword_1EB880760);
}

uint64_t sub_1BFC5D400()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151757C();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C151772C();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for FeedLayoutSolverOptions(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for FeedContext();
          if (v5 <= 0x3F) {
            return swift_initClassMetadata2();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFC5D5D4()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151794C();
  MEMORY[0x1F4188790]();
  (*(void (**)(char *, void))(v9 + 104))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB820]);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB410], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  sub_1BFC4C508();
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EB884D20 = result;
  return result;
}

uint64_t sub_1BFC5D824(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CopyIssueCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB87BDF8 != -1) {
      swift_once();
    }
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87B090);
    sub_1BFCD8360(&qword_1EB87C158, (void (*)(uint64_t))type metadata accessor for CopyIssueCommandHandler);
    sub_1C151AD9C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DebugCommandHandler()
{
  return self;
}

uint64_t type metadata accessor for LayeredMediaLayerRenderer()
{
  return self;
}

uint64_t sub_1BFC5D9AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC4B3B4();
  sub_1C151E78C();
  uint64_t v3 = sub_1C151814C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v5 = type metadata accessor for AdPolicyViewportEnvironmentProvider();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    a2[3] = v5;
    uint64_t result = sub_1C002C7B4(&qword_1EB879478, 255, (void (*)(uint64_t))type metadata accessor for AdPolicyViewportEnvironmentProvider);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BFC5DA98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  unint64_t v7 = 0;
  if (v6(a1, 1, v4) != 1)
  {
    unint64_t v7 = (void *)sub_1C151621C();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  if (v6(a2, 1, v4) == 1)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = (void *)sub_1C151621C();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  }
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStartDate_endDate_, v7, v8);

  return v9;
}

void *initializeBufferWithCopyOfBuffer for FeedItemRendererResult(void *a1, void *a2)
{
  uint64_t v3 = (void *)(*a2 & 0xFFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void sub_1BFC5DC24()
{
  if (!qword_1EB871738)
  {
    sub_1C151D7BC();
    sub_1C151D7FC();
    sub_1C151D87C();
    sub_1C002C7B4(&qword_1EB894940, 255, MEMORY[0x1E4F7AE10]);
    unint64_t v0 = sub_1C151D56C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871738);
    }
  }
}

void sub_1BFC5DCFC()
{
  swift_beginAccess();
  uint64_t v0 = swift_unknownObjectWeakAssign();
  uint64_t v1 = (void *)MEMORY[0x1C18C9C60](v0);
  uint64_t v2 = swift_unknownObjectWeakAssign();
  uint64_t v3 = (void *)MEMORY[0x1C18C9C60](v2);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for NotificationCommandHandler()
{
  return self;
}

uint64_t sub_1BFC5DDC4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFC5DE08()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC5DF2C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC5DF8C()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC5DFDC()
{
  unint64_t result = qword_1EB8877E8;
  if (!qword_1EB8877E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8877E8);
  }
  return result;
}

uint64_t sub_1BFC5E030(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_1BFC5E06C()
{
  if (!qword_1EB884920)
  {
    sub_1C151D82C();
    sub_1C151D8CC();
    sub_1C151D90C();
    sub_1C002C7B4(qword_1EB8812D0, 255, MEMORY[0x1E4F7AE58]);
    unint64_t v0 = sub_1C151D56C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884920);
    }
  }
}

uint64_t sub_1BFC5E144()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 16);
  char v10 = *(unsigned char *)(v0 + 48);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  int v5 = *(unsigned __int8 *)(v0 + 74);
  int v6 = *(unsigned __int16 *)(v0 + 72);
  char v7 = *(unsigned char *)(v0 + 75);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v1;
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v2;
  *(unsigned char *)(v8 + 48) = v10;
  swift_beginAccess();
  *(void *)(v8 + 56) = v4;
  *(void *)(v8 + 64) = v3;
  *(unsigned char *)(v8 + 74) = v5;
  *(_WORD *)(v8 + 72) = v6;
  *(unsigned char *)(v8 + 75) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF9C7FC(v3, v6 | (v5 << 16));
  return v8;
}

uint64_t sub_1BFC5E298()
{
  if (qword_1EB8875F0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB93C850;
  if (qword_1EB882A48 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t result = sub_1C0064F6C(v1);
  qword_1EB93C848 = v0;
  return result;
}

uint64_t type metadata accessor for BlockingCompleteCommandHandler()
{
  return self;
}

CLLocation_optional __swiftcall NSUserDefaults.location(forKey:)(Swift::String forKey)
{
  uint64_t v2 = (void *)sub_1C151E5EC();
  id v3 = objc_msgSend(v1, sel_dictionaryForKey_, v2);

  if (!v3) {
    goto LABEL_20;
  }
  uint64_t v6 = sub_1C151E33C();

  double v7 = 0.0;
  if (*(void *)(v6 + 16) && (unint64_t v8 = sub_1BFEF2D8C(0x656475746974616CLL, 0xEB0000000079654BLL), (v9 & 1) != 0))
  {
    sub_1BFF6A008(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v18);
    int v10 = swift_dynamicCast();
    int v11 = v10 ^ 1;
    if (v10) {
      double v7 = v17;
    }
    else {
      double v7 = 0.0;
    }
    if (!*(void *)(v6 + 16)) {
      goto LABEL_12;
    }
  }
  else
  {
    int v11 = 1;
    if (!*(void *)(v6 + 16)) {
      goto LABEL_12;
    }
  }
  unint64_t v12 = sub_1BFEF2D8C(0x64757469676E6F6CLL, 0xEC00000079654B65);
  if (v13)
  {
    sub_1BFF6A008(*(void *)(v6 + 56) + 32 * v12, (uint64_t)&v18);
    goto LABEL_13;
  }
LABEL_12:
  long long v18 = 0u;
  long long v19 = 0u;
LABEL_13:
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
    sub_1BFEFE4A0((uint64_t)&v18);
    goto LABEL_20;
  }
  int v14 = swift_dynamicCast();
  if ((v11 | v14 ^ 1))
  {
LABEL_20:
    uint64_t v16 = 0;
    goto LABEL_21;
  }
  if (v14) {
    double v15 = v17;
  }
  else {
    double v15 = 0.0;
  }
  uint64_t v16 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v7, v15);
LABEL_21:
  result.value._internal = v4;
  result.value.super.isa = v16;
  result.is_nil = v5;
  return result;
}

uint64_t type metadata accessor for FeedAdPipelineProcessor()
{
  return self;
}

uint64_t sub_1BFC5E574(uint64_t a1)
{
  uint64_t v68 = a1;
  uint64_t v58 = *(void *)v1;
  swift_beginAccess();
  uint64_t v60 = *(void *)(v1 + 16);
  uint64_t v69 = *(void *)(v1 + 24);
  uint64_t v59 = *(void *)(v1 + 32);
  uint64_t v70 = *(void *)(v1 + 40);
  uint64_t v2 = swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 80);
  uint64_t v8 = *(void *)(v1 + 88);
  uint64_t v9 = *(void *)(v1 + 96);
  uint64_t v10 = *(void *)(v1 + 104);
  uint64_t v11 = *(void *)(v1 + 112);
  int v12 = *(unsigned __int8 *)(v1 + 120);
  uint64_t v13 = *(void *)(v1 + 128);
  uint64_t v66 = v10;
  uint64_t v67 = v6;
  uint64_t v65 = v4;
  int v64 = v12;
  uint64_t v62 = v5;
  uint64_t v63 = v3;
  if (!v13)
  {
    char v61 = (uint64_t *)v8;
    uint64_t v25 = v7;
    char v26 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v49 = v25;
    uint64_t v50 = v11;
    sub_1BFFE54A0(v4, v6, v26, v25, (uint64_t)v61, v9, v10, v11, v12);
    uint64_t v27 = 0;
    goto LABEL_6;
  }
  char v61 = &v48;
  v71[0] = v68;
  MEMORY[0x1F4188790](v2);
  uint64_t v57 = v47;
  v47[2] = v71;
  uint64_t v15 = v14;
  uint64_t v16 = v11;
  char v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v67;
  swift_bridgeObjectRetain();
  unsigned __int8 v46 = v12;
  uint64_t v20 = v9;
  uint64_t v21 = v9;
  uint64_t v22 = v66;
  sub_1BFFE54A0(v4, v19, v18, v15, v8, v20, v66, v16, v46);
  uint64_t v23 = v72;
  uint64_t v24 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)v57, v13);
  uint64_t v72 = v23;
  if (!v23)
  {
    uint64_t v50 = v16;
    uint64_t v9 = v21;
    char v61 = (uint64_t *)v8;
    uint64_t v49 = v15;
    uint64_t v27 = v24;
LABEL_6:
    uint64_t v28 = *(void *)(v1 + 144);
    uint64_t v53 = *(void *)(v1 + 136);
    uint64_t v54 = *(void *)(v1 + 152);
    uint64_t v29 = *(void *)(v1 + 168);
    uint64_t v55 = *(void *)(v1 + 160);
    uint64_t v56 = *(void *)(v1 + 176);
    uint64_t v30 = *(void *)(v1 + 192);
    uint64_t v57 = *(void **)(v1 + 184);
    uint64_t v52 = *(void *)(v1 + 200);
    uint64_t v51 = *(void *)(v1 + 208);
    int v31 = *(unsigned __int8 *)(v1 + 216);
    uint64_t v32 = v68;
    if (v31 == 254)
    {
      uint64_t v34 = v69;
      uint64_t v33 = v70;
    }
    else
    {
      swift_retain();
      uint64_t v35 = v32;
      uint64_t v36 = v72;
      sub_1BFF64090(v35, v29, v71);
      uint64_t v34 = v69;
      uint64_t v33 = v70;
      uint64_t v72 = v36;
      if (v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF8738(v53, v28, v54, v55, v29, v56, (uint64_t)v57, v30, v52, v51, v31);
        sub_1BFFE54B8(v65, v67, v62, v49, (uint64_t)v61, v9, v66, v50, v64);
        return v1;
      }
      sub_1BFEF8738(v53, v28, v54, v55, v29, v56, (uint64_t)v57, v30, v52, v51, v31);
      uint64_t v29 = v71[0];
      uint64_t v28 = v28;
    }
    uint64_t v1 = swift_allocObject();
    swift_beginAccess();
    *(void *)(v1 + 16) = v60;
    *(void *)(v1 + 24) = v34;
    *(void *)(v1 + 32) = v59;
    *(void *)(v1 + 40) = v33;
    swift_beginAccess();
    uint64_t v37 = v65;
    *(void *)(v1 + 48) = v63;
    *(void *)(v1 + 56) = v37;
    uint64_t v38 = v62;
    *(void *)(v1 + 64) = v67;
    *(void *)(v1 + 72) = v38;
    uint64_t v39 = (uint64_t)v61;
    *(void *)(v1 + 80) = v49;
    *(void *)(v1 + 88) = v39;
    uint64_t v40 = v66;
    *(void *)(v1 + 96) = v9;
    *(void *)(v1 + 104) = v40;
    *(void *)(v1 + 112) = v50;
    *(unsigned char *)(v1 + 120) = v64;
    uint64_t v41 = v53;
    *(void *)(v1 + 128) = v27;
    *(void *)(v1 + 136) = v41;
    uint64_t v42 = v54;
    *(void *)(v1 + 144) = v28;
    *(void *)(v1 + 152) = v42;
    *(void *)(v1 + 160) = v55;
    *(void *)(v1 + 168) = v29;
    uint64_t v43 = (uint64_t)v57;
    *(void *)(v1 + 176) = v56;
    *(void *)(v1 + 184) = v43;
    uint64_t v44 = v52;
    *(void *)(v1 + 192) = v30;
    *(void *)(v1 + 200) = v44;
    *(void *)(v1 + 208) = v51;
    *(unsigned char *)(v1 + 216) = v31;
    return v1;
  }
  sub_1BFFE54B8(v65, v19, v62, v15, v8, v21, v22, v16, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FormatSupplementaryNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF9C84C(*(void *)(v0 + 64), *(unsigned __int16 *)(v0 + 72) | (*(unsigned __int8 *)(v0 + 74) << 16));
  return swift_deallocClassInstance();
}

void sub_1BFC5EB80()
{
  sub_1C151631C();
  if (v0 <= 0x3F)
  {
    sub_1BFEE6554(319);
    if (v1 <= 0x3F)
    {
      sub_1BFEE3854(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1BFC5ECC8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs;
  uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs);
  sub_1BFC39268(0, &qword_1EB890200);
  id v14 = v13;
  char v15 = sub_1C151FB6C();

  uint64_t v16 = *(void **)(a2 + v12);
  *(void *)(a2 + v12) = a1;
  id v17 = a1;

  uint64_t v18 = *a3;
  uint64_t v19 = (void *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  swift_beginAccess();
  void *v19 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C151630C();
  uint64_t v20 = a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 40))(v20, v11, v8);
  uint64_t result = swift_endAccess();
  *a4 = (v15 & 1) == 0;
  return result;
}

uint64_t type metadata accessor for WebEmbedDataSourceRadarCommandHandler()
{
  return self;
}

uint64_t type metadata accessor for LikingCompleteCommandHandler()
{
  return self;
}

void sub_1BFC5EEC4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ShortcutCommandHandler();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1EB885468 != -1) {
      swift_once();
    }
    sub_1BFCD8360(&qword_1EB88ABC8, (void (*)(uint64_t))type metadata accessor for ShortcutCommandHandler);
    sub_1C151ADAC();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BFC5EFE8(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ClearSavedCommandHandler();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1EB8848A8 != -1) {
      swift_once();
    }
    sub_1BFCD8360(&qword_1EB884AF0, (void (*)(uint64_t))type metadata accessor for ClearSavedCommandHandler);
    sub_1C151AD9C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t FeedManager.prepare(context:)(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151917C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - v10;
  CFTimeInterval v12 = CACurrentMediaTime();
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 184);
  *(CFTimeInterval *)uint64_t v13 = v12;
  *(unsigned char *)(v13 + 8) = 0;
  uint64_t v14 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, a1, AssociatedTypeWitness);
  *(void *)&v11[v14] = sub_1BFC94708(a1);
  uint64_t v15 = *(void *)(TupleTypeMetadata2 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, TupleTypeMetadata2);
  sub_1BFD643A0((uint64_t)v11);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  sub_1BFC3BA20();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, TupleTypeMetadata2)) {
    return ((uint64_t (*)(char *, uint64_t))v16)(v8, v5);
  }
  swift_retain();
  v16(v8, v5);
  uint64_t v18 = (void *)sub_1C1518E7C();
  sub_1C151904C();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for OpenURLCommandHandler()
{
  return self;
}

id FormatTagBinding.Asset.assetHandle(tag:)(void *a1)
{
  swift_getObjectType();
  return sub_1BFFB1574(a1, v1);
}

uint64_t type metadata accessor for FeedCursorCommandHandler()
{
  return self;
}

uint64_t sub_1BFC5F4E4()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C1515FDC();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C151526C();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BFC5F60C(uint64_t a1)
{
  uint64_t v96 = a1;
  uint64_t v85 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v85);
  uint64_t v86 = (uint64_t *)((char *)&v82 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0257DAC(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v82 - v3;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v87 = *(void *)(v5 - 8);
  uint64_t v88 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v84 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v91 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v82 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v82 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v90 = (uint64_t)&v82 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v82 - v18;
  sub_1C0257DAC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v20 - 8);
  char v82 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v83 = (uint64_t)&v82 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v89 = (uint64_t)&v82 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v82 - v27;
  uint64_t v29 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1F4188790](v29);
  int v31 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (uint64_t *)((char *)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF81B18(v94, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1BFCCD550((uint64_t)v34, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    if (qword_1EB87B130 != -1) {
      swift_once();
    }
    uint64_t v49 = qword_1EB871698;
    uint64_t v50 = v96;
    uint64_t v51 = *(void *)(v96 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    uint64_t v91 = *(void *)(v96 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    uint64_t v53 = *(void *)(v96 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    uint64_t v52 = *(void *)(v96 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    uint64_t v54 = *(void *)&v31[*(int *)(v29 + 20)];
    swift_bridgeObjectRetain();
    uint64_t v94 = v49;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C002F714(v50, v54, (uint64_t)v19);
    swift_bridgeObjectRelease();
    if (v51)
    {
      sub_1C0C5D594((uint64_t)v19, v91, v51, v53, v52, (uint64_t)v28);
      uint64_t v56 = v92;
      uint64_t v55 = v93;
    }
    else
    {
      uint64_t v56 = v92;
      uint64_t v55 = v93;
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v28, v19, v93);
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v28, 0, 1, v55);
    type metadata accessor for FormatCommandAction();
    swift_allocObject();
    uint64_t v62 = sub_1C00257AC(v94, (uint64_t)v28);
    sub_1BFEFE8C8((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    return v62;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = v34[1];
    uint64_t v37 = v34[2];
    uint64_t v38 = v96;
    if (qword_1EB87B130 != -1) {
      swift_once();
    }
    uint64_t v39 = qword_1EB871698;
    uint64_t v40 = *(void *)(v38 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    uint64_t v41 = *(void *)(v38 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    uint64_t v42 = *(void *)(v38 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    uint64_t v86 = *(uint64_t **)(v38 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    uint64_t v87 = v40;
    char v97 = *(unsigned char *)(v38 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    uint64_t v91 = v42;
    swift_bridgeObjectRetain();
    uint64_t v94 = v39;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BFC41040((uint64_t)v11);
    sub_1C1515EDC();
    uint64_t v43 = v92;
    uint64_t v88 = v36;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v92 + 8);
    uint64_t v45 = v11;
    uint64_t v46 = v93;
    v44(v45, v93);
    swift_bridgeObjectRetain();
    uint64_t v47 = v90;
    sub_1C002F714(v96, v37, v90);
    swift_bridgeObjectRelease();
    v44(v14, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = v89;
    if (v41) {
      sub_1C0C5D594(v47, v87, v41, (uint64_t)v86, v91, v89);
    }
    else {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v89, v47, v46);
    }
    v44((char *)v47, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v48, 0, 1, v46);
    type metadata accessor for FormatCommandAction();
    swift_allocObject();
    return sub_1C00257AC(v94, v48);
  }
  uint64_t v57 = *v34;
  uint64_t v58 = v34[1];
  uint64_t v59 = v34[2];
  uint64_t v60 = v96;
  FormatOptionCollection.subscript.getter(*v34, v58, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v4, 1, v88) != 1)
  {
    uint64_t v69 = v84;
    sub_1BFCCD550((uint64_t)v4, v84, (uint64_t (*)(void))type metadata accessor for FormatOption);
    uint64_t v62 = *(void *)(v69 + 16) & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    uint64_t v70 = v95;
    sub_1BFF28A20(v60, &v98);
    uint64_t v71 = v91;
    if (!v70)
    {
      swift_release();
      sub_1C001CFA0(v98, v57, v58, v59, v60, v71);
      swift_release();
      sub_1BFEFE8C8(v69, (uint64_t (*)(void))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_release();
    sub_1BFEFE8C8(v69, (uint64_t (*)(void))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v62;
  }
  sub_1C0257E00((uint64_t)v4);
  char v61 = v86;
  *uint64_t v86 = v57;
  v61[1] = v58;
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = *(unsigned __int8 *)(v60 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  sub_1C0257884((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  int v64 = (void *)swift_allocError();
  if ((v62 & 1) == 0)
  {
    sub_1BFF81B18((uint64_t)v61, v63, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BFEFE8C8((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v62;
  }
  sub_1BFF81B18((uint64_t)v61, v63, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
  swift_bridgeObjectRetain();
  uint64_t v65 = v82;
  sub_1C1515F7C();
  uint64_t v67 = v92;
  uint64_t v66 = v93;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48))(v65, 1, v93);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v91, v65, v66);
    sub_1BFEFE8C8((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    if (qword_1EB87B130 != -1) {
      swift_once();
    }
    uint64_t v72 = qword_1EB871698;
    uint64_t v73 = (void *)(v60 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    uint64_t v74 = *(void *)(v60 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    uint64_t v76 = v92;
    uint64_t v75 = v93;
    uint64_t v77 = v91;
    if (v74)
    {
      uint64_t v78 = v73[3];
      uint64_t v79 = v73[4];
      uint64_t v80 = v73[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v83;
      sub_1C0C5D594(v77, v80, v74, v78, v79, v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v81 = v83;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v83, v91, v93);
      swift_retain();
    }
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v81, 0, 1, v75);
    type metadata accessor for FormatCommandAction();
    swift_allocObject();
    uint64_t v62 = sub_1C00257AC(v72, v81);
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v75);
    return v62;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NetworkEventHandler()
{
  return self;
}

uint64_t FeedManager.readAndFetch(context:)(uint64_t a1)
{
  uint64_t v2 = v1;
  CFTimeInterval v4 = CACurrentMediaTime();
  sub_1BFC7EB3C(v2, a1);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(CFTimeInterval *)(v5 + 24) = v4;
  swift_retain();
  uint64_t v6 = (void *)sub_1C1518E7C();
  uint64_t v7 = sub_1C151909C();
  swift_release();
  swift_release();

  sub_1BFC5A9B0();
  return v7;
}

uint64_t type metadata accessor for ClearSavedCommandHandler()
{
  return self;
}

uint64_t sub_1BFC602E4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC60344()
{
  unint64_t result = qword_1EB877728;
  if (!qword_1EB877728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877728);
  }
  return result;
}

void sub_1BFC60398()
{
  if (!qword_1EB894920)
  {
    sub_1C151D4EC();
    sub_1C151D5AC();
    sub_1C151D61C();
    sub_1C002C7B4((unint64_t *)&unk_1EB894910, 255, MEMORY[0x1E4F7AC20]);
    unint64_t v0 = sub_1C151D56C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894920);
    }
  }
}

void sub_1BFC60470()
{
  if (!qword_1EB896BD8)
  {
    sub_1C151D80C();
    sub_1C151D62C();
    sub_1C151D73C();
    sub_1C002C7B4(&qword_1EB896BE0, 255, MEMORY[0x1E4F7AE40]);
    unint64_t v0 = sub_1C151D56C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB896BD8);
    }
  }
}

uint64_t sub_1BFC60548(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for LiveActivityCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB885318 != -1) {
      swift_once();
    }
    type metadata accessor for LiveActivityCommandContext();
    sub_1BFCD8360(&qword_1EB88C5B8, (void (*)(uint64_t))type metadata accessor for LiveActivityCommandHandler);
    sub_1C151ADAC();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CopyIssueCommandHandler()
{
  return self;
}

uint64_t type metadata accessor for SavingCommandHandler()
{
  return self;
}

uint64_t type metadata accessor for WebEmbedDatastoreRadarCommandHandler()
{
  return self;
}

Swift::Void __swiftcall WebEmbedDataSourceService.sceneWillEnterForeground()()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v1 != 255)
  {
    if (v1)
    {
      sub_1C093651C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1C1518ECC();
      swift_release();
    }
  }
}

uint64_t sub_1BFC60774()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFC60870()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC608C0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC60920()
{
  unint64_t result = qword_1EB8854B8;
  if (!qword_1EB8854B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8854B8);
  }
  return result;
}

id ColorPaletteProviding.issueCoverColorPalette.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB87B0D8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB877AB8;
  uint64_t v3 = (void *)unk_1EB877AC0;
  uint64_t v5 = (void *)qword_1EB877AC8;
  uint64_t v4 = unk_1EB877AD0;
  id v10 = (id)unk_1EB877AD0;
  *a1 = qword_1EB877AB8;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;
  return v10;
}

uint64_t type metadata accessor for FormatSponsoredBannerNodeRenderer()
{
  return self;
}

uint64_t sub_1BFC60A34(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SavingCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB87B150 != -1) {
      swift_once();
    }
    sub_1C007A828(0);
    sub_1BFCD8360(&qword_1EB876E48, (void (*)(uint64_t))type metadata accessor for SavingCommandHandler);
    sub_1C151ADAC();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC60B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1C151719C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v12 = sub_1C151E62C();
  v12[1] = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FAB408], v9);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB400], v5);
  v15[15] = 0;
  sub_1BFCC22F8(0, (unint64_t *)&qword_1EB8979E8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for LikingCommandHandler()
{
  return self;
}

uint64_t sub_1BFC60D80()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedPersonalizationDetailCommandHandler()
{
  return self;
}

uint64_t sub_1BFC60DDC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedCursorCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB87B110 != -1) {
      swift_once();
    }
    sub_1BFCD8360((unint64_t *)&unk_1EB872EB0, (void (*)(uint64_t))type metadata accessor for FeedCursorCommandHandler);
    sub_1C151AD9C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC60EFC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v11 - v5;
  type metadata accessor for FeedCursorGroup();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v8 = swift_checkMetadataState();
  v7(v8, AssociatedConformanceWitness);
  swift_getAssociatedConformanceWitness();
  char v9 = sub_1C151F03C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  uint64_t result = 0;
  if ((v9 & 1) == 0) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(v8, AssociatedConformanceWitness);
  }
  *uint64_t v12 = result;
  return result;
}

uint64_t sub_1BFC61130()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC61180()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC611E0()
{
  unint64_t result = qword_1EB88AE18;
  if (!qword_1EB88AE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AE18);
  }
  return result;
}

uint64_t destroy for FormatAnimationNodeStyle.Selector()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC61270()
{
  *(void *)(*(void *)v1 + 1080) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C041AFDC;
  }
  else {
    uint64_t v2 = sub_1BFE58060;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1BFC61384()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC613D4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC61434()
{
  unint64_t result = qword_1EB876B20;
  if (!qword_1EB876B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876B20);
  }
  return result;
}

void *sub_1BFC61488()
{
  type metadata accessor for FormatAdMetricsNodeRenderer();
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for AdPresentationDelegateProvider();
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 24) = 1;
  v0[5] = v1;
  return v0;
}

uint64_t sub_1BFC61500(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for BlockingCompleteCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB87B180 != -1) {
      swift_once();
    }
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
    sub_1BFCD8360((unint64_t *)&unk_1EB870E70, (void (*)(uint64_t))type metadata accessor for BlockingCompleteCommandHandler);
    sub_1C151AD9C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC61640(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedCursorDatabaseCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB8852A8 != -1) {
      swift_once();
    }
    sub_1BFCD8360(&qword_1EB886A08, (void (*)(uint64_t))type metadata accessor for FeedCursorDatabaseCommandHandler);
    sub_1C151AD9C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC61760()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC617B0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC61810()
{
  unint64_t result = qword_1EB87EB80;
  if (!qword_1EB87EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EB80);
  }
  return result;
}

uint64_t sub_1BFC61864()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC618C4()
{
  unint64_t result = qword_1EB87DD80;
  if (!qword_1EB87DD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87DD80);
  }
  return result;
}

void sub_1BFC61918(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v40 = v9;
  uint64_t v41 = v8;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(a4 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v12;
  unsigned int v14 = *(_DWORD *)(v12 + 84);
  if (v14 <= v10) {
    unsigned int v15 = v10;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v16 = *(void *)(v11 - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  uint64_t v18 = *(void *)(v9 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v20 = *(void *)(v12 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v16 + 80);
  if (v15 <= v17) {
    unsigned int v22 = *(_DWORD *)(v16 + 84);
  }
  else {
    unsigned int v22 = v15;
  }
  if (v22 <= 0x7FFFFFFF) {
    unsigned int v23 = 0x7FFFFFFF;
  }
  else {
    unsigned int v23 = v22;
  }
  uint64_t v24 = v20 + 7;
  size_t v25 = ((v21 + 16 + ((v24 + ((v18 + v19) & ~v19)) & 0xFFFFFFFFFFFFFFF8)) & ~v21)
      + *(void *)(*(void *)(v11 - 8) + 64);
  if (a3 <= v23)
  {
    int v27 = 0;
    uint64_t v26 = a1;
  }
  else
  {
    uint64_t v26 = a1;
    if (v25 <= 3)
    {
      unsigned int v30 = ((a3 - v23 + ~(-1 << (8 * v25))) >> (8 * v25)) + 1;
      if (HIWORD(v30))
      {
        int v27 = 4;
      }
      else if (v30 >= 0x100)
      {
        int v27 = 2;
      }
      else
      {
        int v27 = v30 > 1;
      }
    }
    else
    {
      int v27 = 1;
    }
  }
  if (v23 < a2)
  {
    unsigned int v28 = ~v23 + a2;
    if (v25 < 4)
    {
      int v29 = (v28 >> (8 * v25)) + 1;
      if (v25)
      {
        int v31 = v28 & ~(-1 << (8 * v25));
        bzero(v26, v25);
        if (v25 == 3)
        {
          *(_WORD *)uint64_t v26 = v31;
          v26[2] = BYTE2(v31);
        }
        else if (v25 == 2)
        {
          *(_WORD *)uint64_t v26 = v31;
        }
        else
        {
          *uint64_t v26 = v31;
        }
      }
    }
    else
    {
      bzero(v26, v25);
      *(_DWORD *)uint64_t v26 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        v26[v25] = v29;
        break;
      case 2:
        *(_WORD *)&v26[v25] = v29;
        break;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&v26[v25] = v29;
        break;
      default:
        return;
    }
    return;
  }
  switch(v27)
  {
    case 1:
      v26[v25] = 0;
      if (a2) {
        goto LABEL_30;
      }
      return;
    case 2:
      *(_WORD *)&v26[v25] = 0;
      if (a2) {
        goto LABEL_30;
      }
      return;
    case 3:
LABEL_54:
      __break(1u);
      return;
    case 4:
      *(_DWORD *)&v26[v25] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if (v10 == v23)
      {
        uint64_t v32 = v41;
        uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
        uint64_t v34 = (uint64_t)v26;
        uint64_t v35 = a2;
        uint64_t v36 = v10;
LABEL_32:
        v33(v34, v35, v36, v32);
        return;
      }
      unint64_t v37 = (unint64_t)&v26[v18 + v19] & ~v19;
      if (v14 != v23)
      {
        uint64_t v39 = (void *)((v24 + v37) & 0xFFFFFFFFFFFFFFF8);
        if ((v22 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v39 = a2 ^ 0x80000000;
            v39[1] = 0;
          }
          else
          {
            v39[1] = (a2 - 1);
          }
          return;
        }
        uint64_t v34 = ((unint64_t)v39 + v21 + 16) & ~v21;
        uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        uint64_t v35 = a2;
        uint64_t v36 = v17;
        uint64_t v32 = v11;
        goto LABEL_32;
      }
      uint64_t v38 = *(void (**)(unint64_t, uint64_t))(v13 + 56);
      v38(v37, a2);
      return;
  }
}

uint64_t type metadata accessor for LayeredMediaViewModelRenderer()
{
  return self;
}

uint64_t FormatArticle.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1BFC61DB0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A130);
  id result = (id)sub_1C151818C();
  if (result)
  {
    uint64_t v2 = result;
    id v3 = objc_msgSend(result, sel_networkReachability);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EmptyViewSupplementaryLayoutAttributes.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  uint64_t v2 = sub_1C151C1FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void *sub_1BFC61F38(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v4[3] = 0;
  swift_unknownObjectWeakInit();
  v4[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for FormatFeedPluginFactory.FactoryWrapper();
  uint64_t v8 = sub_1C151E2FC();
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = v8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 16);
  id v11 = a3;
  swift_retain();
  swift_unknownObjectRetain_n();
  v10(v4, &off_1F1BE8CA0, ObjectType, a2);
  swift_unknownObjectRelease();

  return v4;
}

uint64_t type metadata accessor for BlockingCommandHandler()
{
  return self;
}

uint64_t sub_1BFC62088(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1C151677C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151672C();
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  sub_1BFC7F354(v11, (uint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t type metadata accessor for FeedDatabaseCommandHandler()
{
  return self;
}

uint64_t sub_1BFC621C0(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v2 = 0x746C7561666564;
  }
  if (a2) {
    uint64_t v3 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v3 = 0x746C7561666564;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1BFC62240()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB85E020, (void (*)(void))sub_1C00846FC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unsigned int v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unsigned int v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_1C1520DBC();
      sub_1C151FB8C();
      sub_1C1520DCC();
      uint64_t result = sub_1C1520E0C();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      id v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *id v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1BFC62540()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB400], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  v9[1] = 0x3FD999999999999ALL;
  sub_1BFCC22F8(0, &qword_1EB8711D8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EB8829C8 = result;
  return result;
}

uint64_t sub_1BFC62710()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC62770()
{
  unint64_t result = qword_1EB8758A0;
  if (!qword_1EB8758A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8758A0);
  }
  return result;
}

uint64_t type metadata accessor for FeedCursorDatabaseCommandHandler()
{
  return self;
}

void sub_1BFC627E8(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FollowingCommandHandler();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1EB87B198 != -1) {
      swift_once();
    }
    sub_1BFCD8360(&qword_1EB877AF0, (void (*)(uint64_t))type metadata accessor for FollowingCommandHandler);
    sub_1C151ADAC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BFC6290C@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_mainBundle);
  uint64_t v7 = sub_1BFC39268(0, &qword_1EB87A318);
  uint64_t v8 = MEMORY[0x1E4FAD950];
  *(void *)&long long v6 = v2;
  uint64_t v3 = type metadata accessor for LayeredMediaConditionValidator();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_1BFC773DC(&v6, v4 + 16);
  a1[3] = v3;
  a1[4] = (uint64_t)&off_1F1C1AC58;
  *a1 = v4;
  return result;
}

uint64_t sub_1BFC629C0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedDatabaseCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB8852D0 != -1) {
      swift_once();
    }
    sub_1BFCD8360(&qword_1EB886880, (void (*)(uint64_t))type metadata accessor for FeedDatabaseCommandHandler);
    sub_1C151AD9C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC62AE0()
{
  type metadata accessor for FeedScalingManager();
  uint64_t v0 = swift_allocObject();
  if (qword_1EB87C678 != -1) {
    swift_once();
  }
  sub_1BFC4BCF0();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1C15170EC();
  *(void *)(v0 + 16) = result;
  off_1EB87CC38 = (_UNKNOWN *)v0;
  return result;
}

uint64_t FormatVideoPlayerNode.init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10, long long *a11, long long *a12, uint64_t a13, uint64_t *a14, char a15, uint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20)
{
  uint64_t v23 = *a3;
  uint64_t v24 = *a4;
  uint64_t v25 = *a8;
  uint64_t v26 = *a9;
  long long v36 = a11[1];
  long long v37 = *a11;
  uint64_t v27 = *((void *)a11 + 4);
  uint64_t v35 = *((void *)a11 + 5);
  char v34 = *((unsigned char *)a11 + 48);
  long long v33 = *a12;
  uint64_t v32 = *((void *)a12 + 2);
  char v38 = *((unsigned char *)a12 + 24);
  uint64_t v41 = *a14;
  uint64_t v43 = *a16;
  char v44 = *((unsigned char *)a16 + 8);
  uint64_t v45 = a20[1];
  uint64_t v46 = *a20;
  char v47 = *((unsigned char *)a20 + 16);
  *(_OWORD *)(v20 + 248) = 0u;
  *(unsigned char *)(v20 + 264) = -1;
  *(_OWORD *)(v20 + 232) = 0u;
  swift_beginAccess();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = v23;
  *(void *)(v20 + 40) = v24;
  swift_beginAccess();
  *(void *)(v20 + 48) = a5;
  *(void *)(v20 + 56) = a6;
  *(void *)(v20 + 64) = a7;
  *(void *)(v20 + 72) = v25;
  *(void *)(v20 + 80) = v26;
  *(void *)(v20 + 88) = a10;
  *(_OWORD *)(v20 + 96) = v37;
  *(_OWORD *)(v20 + 112) = v36;
  *(void *)(v20 + 128) = v27;
  *(void *)(v20 + 136) = v35;
  *(unsigned char *)(v20 + 144) = v34;
  *(_OWORD *)(v20 + 152) = v33;
  *(void *)(v20 + 168) = v32;
  *(unsigned char *)(v20 + 176) = v38;
  swift_beginAccess();
  *(void *)(v20 + 184) = a13;
  swift_beginAccess();
  *(void *)(v20 + 192) = v41;
  swift_beginAccess();
  *(unsigned char *)(v20 + 200) = a15;
  *(void *)(v20 + 208) = v43;
  *(unsigned char *)(v20 + 216) = v44;
  swift_beginAccess();
  *(void *)(v20 + 224) = a17;
  swift_beginAccess();
  *(void *)(v20 + 232) = a18;
  *(void *)(v20 + 240) = a19;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v28 = *(void *)(v20 + 248);
  uint64_t v29 = *(void *)(v20 + 256);
  *(void *)(v20 + 248) = v46;
  *(void *)(v20 + 256) = v45;
  unsigned __int8 v30 = *(unsigned char *)(v20 + 264);
  *(unsigned char *)(v20 + 264) = v47;
  sub_1BFFC879C(v28, v29, v30);
  return v20;
}

id *FeedDatabase.deinit()
{
  uint64_t v1 = *v0;

  swift_unknownObjectRelease();
  (*(void (**)(char *))(*(void *)(v1[11] - 8) + 8))((char *)v0 + *((void *)*v0 + 20));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

void sub_1BFC62F28(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for LikingCompleteCommandHandler();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1EB885348 != -1) {
      swift_once();
    }
    sub_1BFCD8360((unint64_t *)&unk_1EB88D180, (void (*)(uint64_t))type metadata accessor for LikingCompleteCommandHandler);
    sub_1C151ADAC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t FCNewsAppConfiguration.todayFeedEditionConfig.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151E68C();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x1F4188790](v4).n128_u64[0];
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)objc_msgSend(v2, sel_respondsToSelector_, sel_todayFeedEditionConfigJSON, v6);
  if (result)
  {
    id v10 = objc_msgSend(v2, sel_todayFeedEditionConfigJSON);
    if (!v10) {
      goto LABEL_5;
    }
    int64_t v11 = v10;
    sub_1C151E62C();

    sub_1C151E67C();
    uint64_t v12 = sub_1C151E63C();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (v14 >> 60 == 15)
    {
LABEL_5:
      if (qword_1EB8815C0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v15 = unk_1EB885C20;
      *a1 = qword_1EB885C18;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    else
    {
      sub_1C151529C();
      swift_allocObject();
      sub_1C151528C();
      sub_1C03CD464();
      sub_1C151527C();
      swift_release();
      return sub_1BFE95878(v12, v14);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC63388()
{
  return sub_1C1520BEC();
}

uint64_t sub_1BFC633A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1C14A32F8(0, &qword_1EB885208, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FAD778]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1C14A32F8(0, (unint64_t *)&unk_1EB885270, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD770], v6);
  uint64_t result = sub_1C151C9BC();
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for ShortcutCommandHandler()
{
  return self;
}

uint64_t sub_1BFC6351C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CopySportsEventUmcIdCommandHandler()
{
  return self;
}

uint64_t type metadata accessor for ShareAttributionViewReuseFactory()
{
  return self;
}

uint64_t sub_1BFC63630()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC63690()
{
  unint64_t result = qword_1EB8755F8;
  if (!qword_1EB8755F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8755F8);
  }
  return result;
}

uint64_t sub_1BFC636E4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  uint64_t v13 = *(void *)(v9 - 8);
  if (v12 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v15 = *(unsigned int *)(v13 + 84);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = *(void *)(v10 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = *(void *)(v13 + 64);
  if (v14 <= v15) {
    unsigned int v20 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v20 = v14;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  else {
    unsigned int v21 = v20;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v22 = *(void *)(v7 + 64) + v16;
  uint64_t v23 = v17 + 7;
  uint64_t v24 = v18 + 16;
  if (a2 <= v21) {
    goto LABEL_31;
  }
  uint64_t v25 = ((v24 + ((v23 + (v22 & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v18) + v19;
  char v26 = 8 * v25;
  if (v25 > 3) {
    goto LABEL_13;
  }
  unsigned int v29 = ((a2 - v21 + ~(-1 << v26)) >> v26) + 1;
  if (HIWORD(v29))
  {
    int v27 = *(_DWORD *)((char *)a1 + v25);
    if (v27) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v29 <= 0xFF)
    {
      if (v29 < 2) {
        goto LABEL_31;
      }
LABEL_13:
      int v27 = *((unsigned __int8 *)a1 + v25);
      if (!*((unsigned char *)a1 + v25)) {
        goto LABEL_31;
      }
LABEL_21:
      int v30 = (v27 - 1) << v26;
      if (v25 > 3) {
        int v30 = 0;
      }
      if (v25)
      {
        if (v25 <= 3) {
          int v31 = ((v24 + ((v23 + (v22 & ~v16)) & 0xFFFFFFF8)) & ~v18) + v19;
        }
        else {
          int v31 = 4;
        }
        switch(v31)
        {
          case 2:
            int v32 = *a1;
            break;
          case 3:
            int v32 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v32 = *(_DWORD *)a1;
            break;
          default:
            int v32 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v32 = 0;
      }
      return v21 + (v32 | v30) + 1;
    }
    int v27 = *(unsigned __int16 *)((char *)a1 + v25);
    if (*(unsigned __int16 *)((char *)a1 + v25)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if (v8 == v21)
  {
    long long v33 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    char v34 = a1;
    uint64_t v35 = v8;
    uint64_t v36 = v6;
LABEL_33:
    return v33(v34, v35, v36);
  }
  unint64_t v37 = ((unint64_t)a1 + v22) & ~v16;
  if (v12 == v21)
  {
    char v38 = *(uint64_t (**)(unint64_t))(v11 + 48);
    return v38(v37);
  }
  else
  {
    unint64_t v39 = (v23 + v37) & 0xFFFFFFFFFFFFFFF8;
    if ((v20 & 0x80000000) != 0)
    {
      char v34 = (unsigned __int16 *)((v24 + v39) & ~v18);
      long long v33 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
      uint64_t v35 = v15;
      uint64_t v36 = v9;
      goto LABEL_33;
    }
    unint64_t v40 = *(void *)(v39 + 8);
    if (v40 >= 0xFFFFFFFF) {
      LODWORD(v40) = -1;
    }
    return (v40 + 1);
  }
}

unint64_t destroy for FeedIssue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t result = *(void *)(a1 + 128);
  if (result >= 0x11)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFC63B1C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC63B7C()
{
  unint64_t result = qword_1EB876F20;
  if (!qword_1EB876F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876F20);
  }
  return result;
}

uint64_t sub_1BFC63BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1BFEFB808();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v19 = sub_1C1520E0C();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        char v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1C1520A9C() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1C0063734((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1BFEFB808();
    }
    else
    {
      long long v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1C0063734((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1BFEFB808();
      MEMORY[0x1C18C9B00](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

void sub_1BFC64040(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for BlockingCommandHandler();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1EB87B188 != -1) {
      swift_once();
    }
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
    sub_1BFCD8360(&qword_1EB877368, (void (*)(uint64_t))type metadata accessor for BlockingCommandHandler);
    sub_1C151ADAC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for FeedHeadlineFactory()
{
  return self;
}

uint64_t type metadata accessor for LayeredMediaViewRenderer()
{
  return self;
}

uint64_t sub_1BFC641CC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFC6424C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedPersonalizationDetailCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB8852C0 != -1) {
      swift_once();
    }
    sub_1BFCD8360((unint64_t *)&unk_1EB886AD0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationDetailCommandHandler);
    sub_1C151AD9C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC6436C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC643BC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6441C()
{
  unint64_t result = qword_1EB889850;
  if (!qword_1EB889850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889850);
  }
  return result;
}

uint64_t type metadata accessor for HiddenContentPlacardViewStyler()
{
  return self;
}

void sub_1BFC64494(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_currentDevice);
  id v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  switch((unint64_t)v3)
  {
    case 0uLL:
      long long v4 = xmmword_1C152C800;
      goto LABEL_6;
    case 1uLL:
      long long v4 = xmmword_1C1533700;
      goto LABEL_6;
    case 5uLL:
      long long v4 = xmmword_1C152FC80;
LABEL_6:
      *(_OWORD *)a1 = v4;
      break;
    default:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      break;
  }
}

uint64_t sub_1BFC6454C()
{
  return sub_1C1520BCC();
}

uint64_t sub_1BFC64564()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC645C4()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC64614()
{
  unint64_t result = qword_1EB8877F8;
  if (!qword_1EB8877F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8877F8);
  }
  return result;
}

uint64_t sub_1BFC64668(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = v9;
  sub_1C0A5C348(a5, (uint64_t)v26);
  sub_1C0A5C348((uint64_t)v26, (uint64_t)v25);
  sub_1BFC3CFB8(a4, (uint64_t)v25);
  if (!v10)
  {
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    *(void *)(v11 + 32) = a3;
    *(void *)(v11 + 56) = a6;
    *(void *)(v11 + 64) = a7;
    *(void *)(v11 + 72) = a8;
    *(void *)(v11 + 80) = a9;
    sub_1C0A5C348((uint64_t)v26, (uint64_t)v24);
    if (sub_1C00F6584(v24) != 1)
    {
      uint64_t v18 = v24[2];
      id v19 = a1;
      sub_1BFC648F8(a6);
      sub_1BFC648F8(a8);
      swift_bridgeObjectRetain();
      sub_1C05D8C2C((uint64_t)v26);
      if (v18)
      {
        sub_1C1517EFC();
        double v21 = sub_1BFF493E4(v23, v18);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BFC3E5C0(a8);
        sub_1BFC3E5C0(a6);

        swift_release();
        *(double *)(v11 + 40) = v21;
        *(unsigned char *)(v11 + 48) = 0;
        return v11;
      }
      sub_1BFC3E5C0(a8);
      sub_1BFC3E5C0(a6);
    }
    swift_release();
    *(void *)(v11 + 40) = 0;
    *(unsigned char *)(v11 + 48) = 1;
    return v11;
  }
  sub_1BFC3E5C0(a8);
  sub_1BFC3E5C0(a6);
  swift_bridgeObjectRelease();

  swift_release();
  sub_1C05D8C2C((uint64_t)v26);
  swift_deallocPartialClassInstance();
  return v11;
}

uint64_t sub_1BFC648F8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t FeedScalingManager.currentFeedScaleSize.getter()
{
  swift_retain();
  sub_1C151709C();
  return swift_release();
}

uint64_t type metadata accessor for WebEmbedDatastoreCopyToClipboardCommandHandler()
{
  return self;
}

uint64_t sub_1BFC64974(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for OpenURLCommandHandler();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB87B130 != -1) {
      swift_once();
    }
    sub_1C1515FDC();
    sub_1BFCD8360(&qword_1EB8772B0, (void (*)(uint64_t))type metadata accessor for OpenURLCommandHandler);
    sub_1C151AD9C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC64AA4(uint64_t a1)
{
  uint64_t v43 = type metadata accessor for SharedItem();
  uint64_t v3 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v39 - v7;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  id v42 = v9;
  unint64_t v46 = MEMORY[0x1E4FBC868];
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_19:
    char v44 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
    MEMORY[0x1F4188790](v9);
    id v36 = v42;
    *(&v39 - 4) = (uint64_t)v42;
    *(&v39 - 3) = v1;
    *(&v39 - 2) = (uint64_t)&v46;
    sub_1C1517ECC();
    swift_retain();
    sub_1C1518D3C();

    swift_release();
    uint64_t v37 = v45;
    swift_bridgeObjectRelease();
    return v37;
  }
  uint64_t v39 = a1;
  uint64_t v40 = v1;
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  int64_t v41 = v8;
  while (1)
  {
    sub_1C0977524(v11, (uint64_t)v8);
    unint64_t v13 = (void *)sub_1C1515E9C();
    id v14 = objc_msgSend(v13, sel_fc_NewsArticleID);

    if (!v14) {
      goto LABEL_5;
    }
    uint64_t v15 = sub_1C151E62C();
    uint64_t v17 = v16;

    uint64_t v18 = (void *)sub_1C151E5EC();
    objc_msgSend(v42, sel_addObject_, v18);

    uint64_t v19 = (uint64_t)v8;
    uint64_t v20 = (uint64_t)v5;
    sub_1C0977524(v19, (uint64_t)v5);
    unint64_t v21 = v46;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v44 = (void *)v21;
    unint64_t v46 = 0x8000000000000000;
    unint64_t v24 = sub_1BFEF2D8C(v15, v17);
    uint64_t v25 = *(void *)(v21 + 16);
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      break;
    }
    char v28 = v23;
    if (*(void *)(v21 + 24) >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        size_t v31 = v44;
        if ((v23 & 1) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        sub_1C107089C();
        size_t v31 = v44;
        if ((v28 & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      sub_1C105D280(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_1BFEF2D8C(v15, v17);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_22;
      }
      unint64_t v24 = v29;
      size_t v31 = v44;
      if ((v28 & 1) == 0)
      {
LABEL_14:
        v31[(v24 >> 6) + 8] |= 1 << v24;
        uint64_t v32 = (uint64_t *)(v31[6] + 16 * v24);
        *uint64_t v32 = v15;
        v32[1] = v17;
        uint64_t v5 = (char *)v20;
        sub_1C097768C(v20, v31[7] + v24 * v12);
        uint64_t v33 = v31[2];
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_21;
        }
        v31[2] = v35;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    uint64_t v5 = (char *)v20;
    sub_1C0978194(v20, v31[7] + v24 * v12);
LABEL_4:
    unint64_t v46 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v41;
LABEL_5:
    sub_1C0978284((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SharedItem);
    v11 += v12;
    if (!--v10)
    {
      id v9 = (id)swift_bridgeObjectRelease();
      uint64_t v1 = v40;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FollowingCommandHandler()
{
  return self;
}

uint64_t sub_1BFC64EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  sub_1BFF5984C(a1, (uint64_t)v19);
  uint64_t v12 = v19[0];
  uint64_t v13 = v19[1];
  uint64_t v14 = v19[2];
  uint64_t v15 = v19[3];
  char v16 = v20;
  *(void *)&long long v21 = 0;
  *((void *)&v21 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  long long v18 = v21;
  sub_1C151E80C();
  *(double *)&long long v21 = a3;
  *((double *)&v21 + 1) = a4;
  double v22 = a5;
  double v23 = a6;
  type metadata accessor for CGRect(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1BFF5984C(a1, (uint64_t)&v21);
  if ((v24 & 1) == 0) {
    sub_1C152036C();
  }
  sub_1C151E80C();
  uint64_t result = swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v18;
  *(double *)(a2 + 16) = a3;
  *(double *)(a2 + 24) = a4;
  *(double *)(a2 + 32) = a5;
  *(double *)(a2 + 40) = a6;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v14;
  *(void *)(a2 + 72) = v15;
  *(unsigned char *)(a2 + 80) = v16;
  return result;
}

void sub_1BFC65058(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for NotificationCommandHandler();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1EB87B190 != -1) {
      swift_once();
    }
    sub_1BFCD8360(&qword_1EB878A08, (void (*)(uint64_t))type metadata accessor for NotificationCommandHandler);
    sub_1C151AD9C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BFC65174()
{
  return sub_1C15199EC();
}

uint64_t type metadata accessor for ReportScoreConcernCommandHandler()
{
  return self;
}

void sub_1BFC65258()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SocialLayerSharedItemCenter()), sel_init);
  uint64_t v1 = (char *)objc_allocWithZone((Class)type metadata accessor for SharedItemManager());
  id v2 = v0;
  id v3 = sub_1BFCB4C9C((uint64_t)v2, v1);

  qword_1EB87E9C8 = (uint64_t)v3;
}

uint64_t sub_1BFC652C0()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6567616D69;
      break;
    case 2:
      uint64_t result = 0x6E6F69746361;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatCustomItemDefinition.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C088277C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C0882650();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C085F050(&qword_1EB8921E0, (void (*)(uint64_t))sub_1C0882650);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatCustomItemDefinition, v15, v10, (uint64_t)&type metadata for FormatCustomItemDefinition, v13, (uint64_t)&type metadata for FormatVersions.AzdenB, v11, (uint64_t)v8, v14, (uint64_t)&off_1F1C399E8);
  uint64_t v16 = qword_1EB887610;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C151928C();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CA20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06AFBB4(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68((uint64_t)v8, (uint64_t (*)(void))sub_1C088277C);
}

uint64_t FormatCountLimit.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - v6;
  sub_1C0069218();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  uint64_t v27 = v1[1];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v14 = sub_1BFC6EFBC();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatCountLimit, v15, v12, (uint64_t)&type metadata for FormatCountLimit, (uint64_t)&type metadata for FormatCountLimit.CodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v13, (uint64_t)v10, v14, (uint64_t)&off_1F1C39BA8);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1C151928C();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EB93CA98);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  v18(v7, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  if (v11)
  {
    uint64_t v19 = v29;
    char v20 = sub_1BFC5AB7C((uint64_t)v7, 0, (uint64_t)sub_1C01B158C, 0);
    uint64_t v21 = v19;
    if (v19) {
      goto LABEL_12;
    }
    if (v20)
    {
      char v31 = 0;
      uint64_t v30 = v11;
      sub_1BFC6EF58(0, (unint64_t *)&unk_1EB860DE0, MEMORY[0x1E4FBBDE0]);
      sub_1C00629F8();
      sub_1C1520BAC();
      uint64_t v21 = 0;
    }
  }
  else
  {
    uint64_t v21 = v29;
  }
  sub_1BFEFEE68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  uint64_t v22 = (uint64_t)v28;
  v18(v28, v17, v16);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = v27;
  if (v27 != 0x7FFFFFFFFFFFFFFFLL)
  {
    char v25 = sub_1BFC5AB7C(v22, 1, (uint64_t)sub_1C01B158C, 0);
    if (!v21)
    {
      if (v25)
      {
        char v31 = 1;
        uint64_t v30 = v23;
        sub_1BFC6EF58(0, (unint64_t *)&unk_1EB860DE0, MEMORY[0x1E4FBBDE0]);
        sub_1C00629F8();
        sub_1C1520BAC();
      }
      goto LABEL_9;
    }
    uint64_t v7 = (char *)v22;
LABEL_12:
    uint64_t v24 = (uint64_t)v7;
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v24 = v22;
LABEL_13:
  sub_1BFEFEE68(v24, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEE68((uint64_t)v10, (uint64_t (*)(void))sub_1C0069218);
}

uint64_t FormatFontMetricSizing.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v30 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v28[-v8];
  sub_1C0885678();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void *)v1;
  int v29 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C088554C();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB891FD0, (void (*)(uint64_t))sub_1C088554C);
  char v31 = v12;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatFontMetricSizing, v19, v14, (uint64_t)&type metadata for FormatFontMetricSizing, v17, (uint64_t)&type metadata for FormatVersions.AzdenE, v15, (uint64_t)v12, v18, (uint64_t)&off_1F1C39B08);
  uint64_t v20 = qword_1EB887620;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CA50);
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06B7248(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v24 = (uint64_t)v31;
  }
  else
  {
    uint64_t v25 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (uint64_t)v31;
    sub_1C06FF234(v29, 1, 0, 0, v25, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v25, type metadata accessor for FormatVersionRequirement);
    uint64_t v24 = v26;
  }
  return sub_1BFEFEB68(v24, (uint64_t (*)(void))sub_1C0885678);
}

uint64_t sub_1BFC65D08(uint64_t a1)
{
  return sub_1BFCFB43C(a1, qword_1EB93C790);
}

uint64_t sub_1BFC65D1C()
{
  uint64_t v0 = sub_1C151928C();
  __swift_allocate_value_buffer(v0, qword_1EB881468);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB881468);
  if (qword_1EB894400 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB93CB88);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

void *sub_1BFC65DE4(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v8 = type metadata accessor for LayeredMediaConditionValidator();
  v38[3] = v8;
  v38[4] = &off_1F1C1AC58;
  v38[0] = a1;
  uint64_t v9 = type metadata accessor for LayeredMediaImageVariantSelector();
  uint64_t v36 = v9;
  uint64_t v37 = &off_1F1BEEEC0;
  v35[0] = a2;
  uint64_t v10 = type metadata accessor for LayeredMediaVariantSelector();
  uint64_t v33 = v10;
  BOOL v34 = &off_1F1BAD340;
  v32[0] = a3;
  type metadata accessor for LayeredMediaLayerRenderer();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v8);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (void *)((char *)&v32[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (void *)((char *)&v32[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  __n128 v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (void *)((char *)&v32[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  uint64_t v27 = *v15;
  uint64_t v28 = *v20;
  uint64_t v29 = *v25;
  v11[5] = v8;
  void v11[6] = &off_1F1C1AC58;
  void v11[2] = v27;
  v11[10] = v9;
  v11[11] = &off_1F1BEEEC0;
  v11[12] = v29;
  v11[7] = v28;
  v11[15] = v10;
  v11[16] = &off_1F1BAD340;
  sub_1BFC773DC(a4, (uint64_t)(v11 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v11;
}

void *sub_1BFC660C8(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, long long *a6)
{
  uint64_t v38 = type metadata accessor for SportsDataServiceRequestBuilder();
  uint64_t v39 = &off_1F1B95218;
  v37[0] = a1;
  uint64_t v35 = type metadata accessor for SportsDataServiceRequestFetcher();
  uint64_t v36 = &off_1F1BE5CA0;
  v34[0] = a2;
  uint64_t v32 = type metadata accessor for SportsDataConfigurationManager();
  uint64_t v33 = &off_1F1BECAA0;
  v31[0] = a4;
  type metadata accessor for SportsDataService();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (void *)((char *)&v31[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  __n128 v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (void *)((char *)&v31[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (void *)((char *)&v31[-1] - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v27 + 16))(v26, v24);
  uint64_t v28 = sub_1BFD9CAC8(*v16, *v21, a3, *v26, a5, a6, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v28;
}

uint64_t sub_1BFC66384(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t FormatSupplementaryNodePinTrait.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_17:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v28;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v17;
      *(void *)(v23 + 16) = &unk_1F1B818C0;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v17);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
      goto LABEL_17;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0069628();
  long long v27 = 0uLL;
  sub_1C15206EC();
  char v18 = v25;
  if ((_BYTE)v25)
  {
    if (v25 == 1)
    {
      long long v27 = xmmword_1C152C800;
      sub_1C00681E4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
      uint64_t v19 = v25;
      if (HIBYTE(v26)) {
        __int16 v20 = 256;
      }
      else {
        __int16 v20 = 0;
      }
      __int16 v21 = v20 | v26;
    }
    else
    {
      long long v27 = xmmword_1C152C800;
      sub_1C00681E4();
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
      uint64_t v19 = v25;
      __int16 v21 = v26;
    }
  }
  else
  {
    sub_1BFEFF3E8(0, &qword_1EB86C450, (uint64_t (*)(void))sub_1C08688B8, (uint64_t)&type metadata for FormatSupplementaryNodePinEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    long long v27 = xmmword_1C152C800;
    sub_1C086890C();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
    __int16 v21 = 0;
    uint64_t v19 = v25;
  }
  *(void *)uint64_t v12 = v19;
  *(_WORD *)(v12 + 8) = v21;
  *(unsigned char *)(v12 + 10) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC66830(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaLayerRenderer();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for LayeredMediaViewModelRenderer();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v4 = result;
      type metadata accessor for LayeredMediaViewRenderer();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v3;
      *(void *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC668E4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A120);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFCB6824(0, &qword_1EB8948D8);
    uint64_t result = sub_1C151815C();
    if (v5)
    {
      type metadata accessor for FormatVideoNodeRenderer();
      swift_allocObject();
      return sub_1BFC72108(v3, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t FormatSupplementaryNodePinDistance.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v26;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v16;
      *(void *)(v21 + 16) = &unk_1F1B881A0;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0068378();
  long long v25 = 0uLL;
  sub_1C15206EC();
  char v17 = v23;
  if (v23)
  {
    long long v25 = xmmword_1C152C800;
    sub_1C0066D64();
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v18 = v23;
    char v19 = v24;
  }
  else
  {
    sub_1BFE41AFC();
    long long v25 = xmmword_1C152C800;
    sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v19 = 0;
    uint64_t v18 = v23;
  }
  *(void *)uint64_t v12 = v18;
  *(unsigned char *)(v12 + 8) = v19;
  *(unsigned char *)(v12 + 9) = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC66DB8(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8850C0);
  uint64_t result = sub_1C151819C();
  if (v4)
  {
    sub_1BFC773DC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1BFCD8360(&qword_1EB88C5B0, (void (*)(uint64_t))type metadata accessor for LiveActivityCommandHandler);
    sub_1C151969C();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatShareAttributionNodeContent.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v1)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v2);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = sub_1C152070C();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = (unint64_t *)(v11 + 40);
      while (1)
      {
        unint64_t v14 = *v13;
        if (*v13 >= 4) {
          break;
        }
        v13 += 2;
        if (!--v12) {
          goto LABEL_7;
        }
      }
      uint64_t v15 = *(v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v2 = (void *)swift_allocError();
      *(void *)uint64_t v16 = v15;
      *(void *)(v16 + 8) = v14;
      *(void *)(v16 + 16) = &unk_1F1B82DD8;
      *(_OWORD *)(v16 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v15, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C00688A0();
  long long v18 = 0uLL;
  sub_1C15206EC();
  long long v18 = xmmword_1C152C800;
  sub_1BFC89094();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC671B4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB871540);
  uint64_t result = sub_1C151819C();
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A130);
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v3 = result;
      type metadata accessor for FeedDatabaseCommandHandler();
      uint64_t v4 = swift_allocObject();
      sub_1BFC773DC(&v5, v4 + 16);
      *(void *)(v4 + 56) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t FormatImageNodeRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  char v24 = a2;
  sub_1C088F9B4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C088FA48();
  sub_1C085F050(&qword_1EB891FE0, (void (*)(uint64_t))sub_1C088FA48);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      char v24 = (void *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = &_s10CodingKeysON_121;
      *(&v24 - 3) = (void *)sub_1C088FACC();
      *(&v24 - 2) = (void *)sub_1C0074394();
      *(&v24 - 1) = (void *)sub_1C088FB20();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B85A88);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = (uint64_t)v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C006DD90();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C152065C();
  uint64_t v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1C006DF04();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  *uint64_t v12 = v16;
  v12[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatLayeredMediaNodeContent.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v16;
      *(void *)(v22 + 16) = &unk_1F1B86050;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C006AE3C();
  long long v26 = 0uLL;
  sub_1C15206EC();
  if (v25)
  {
    sub_1BFEFF3E8(0, &qword_1EA19DD20, (uint64_t (*)(void))sub_1C0896950, (uint64_t)&type metadata for FormatLayeredMediaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    long long v25 = xmmword_1C152C800;
    sub_1C08969A4();
    sub_1C15206EC();
    uint64_t v17 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    long long v18 = v26;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v18;
    unint64_t v20 = v19 | 0x8000000000000000;
  }
  else
  {
    long long v26 = xmmword_1C152C800;
    sub_1BFC88BF8();
    sub_1C15206EC();
    uint64_t v17 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v24 = v25;
    unint64_t v20 = swift_allocObject();
    *(unsigned char *)(v20 + 16) = v24;
  }
  *uint64_t v17 = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatVideoPlayerLive.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v12 = sub_1C152070C();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1C0074FDC();
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    sub_1C15206EC();
    char v16 = v27;
    if (v27)
    {
      long long v27 = xmmword_1C152C800;
      sub_1BFFC82FC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v17 = v24;
      uint64_t v18 = v25;
      uint64_t v19 = v26;
    }
    else
    {
      long long v27 = xmmword_1C152C800;
      sub_1C0372780();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v17 = v24;
      uint64_t v18 = v25;
      uint64_t v19 = v26;
    }
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v18;
    *(void *)(a2 + 16) = v19;
    *(unsigned char *)(a2 + 24) = v16;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    unint64_t v15 = *v14;
    if (*v14 >= 4) {
      break;
    }
    v14 += 2;
    if (!--v13) {
      goto LABEL_7;
    }
  }
  uint64_t v20 = *(v14 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C02570B4();
  swift_allocError();
  *(void *)uint64_t v21 = v20;
  *(void *)(v21 + 8) = v15;
  *(void *)(v21 + 16) = &unk_1F1B815F0;
  *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
  swift_willThrow();
  sub_1C0257108(v20, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatImageNodeRequestSize.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v31 = a2;
  sub_1C0908CDC(0, &qword_1EB884F68, (void (*)(void))sub_1C0068D5C, (void (*)(void))sub_1C0068DB0);
  uint64_t v4 = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v31 - v5;
  sub_1C0890014();
  uint64_t v8 = v7;
  uint64_t v33 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08900A8();
  sub_1C085F050(&qword_1EB892210, (void (*)(uint64_t))sub_1C08900A8);
  char v11 = v34;
  sub_1C1520EBC();
  if (v11)
  {
    uint64_t v12 = v11;
LABEL_3:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  BOOL v34 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  unint64_t v15 = v8;
  uint64_t v16 = v32;
  if (v14)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_9;
        }
      }
      BOOL v34 = v15;
      uint64_t v22 = *((void *)v19 - 2);
      uint64_t v23 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      uint64_t v25 = v10;
      MEMORY[0x1F4188790](v24);
      *(&v31 - 4) = (uint64_t *)&_s14descr1F1B5CC21V10CodingKeysON;
      *(&v31 - 3) = (uint64_t *)sub_1C089012C();
      *(&v31 - 2) = (uint64_t *)sub_1C006DE98();
      *(&v31 - 1) = (uint64_t *)sub_1C0890180();
      swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FA20((uint64_t)&unk_1F1B85B28);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v22;
      *(void *)(v27 + 8) = v23;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v23, 1);
      (*(void (**)(char *, char *))(v33 + 8))(v25, v34);
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
  }
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  char v40 = 0;
  if (sub_1C152071C())
  {
    sub_1C088FE5C();
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    char v37 = 0;
    uint64_t v20 = v34;
    sub_1C15206EC();
    uint64_t v21 = v31;
    uint64_t v28 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v4);
    uint64_t v29 = v33;
  }
  else
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v33;
    uint64_t v21 = v31;
  }
  (*(void (**)(char *, char *))(v29 + 8))(v10, v15);
  *uint64_t v21 = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC68234(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFD51FC8();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFCB6824(0, qword_1EB896620);
    uint64_t result = sub_1C151819C();
    if (v6)
    {
      type metadata accessor for FeedItemPrefetcher();
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v3;
      sub_1BFC773DC(&v5, v4 + 24);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC6831C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatLayoutResizingProvider();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatSystemFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB896CF0);
  uint64_t result = sub_1C151819C();
  if (v8)
  {
    *a2 = v5;
    a2[1] = v6;
    return sub_1BFC773DC(&v7, (uint64_t)(a2 + 2));
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BFC6842C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EA196700);
  uint64_t result = sub_1C151819C();
  if (!v11)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  __swift_project_boxed_opaque_existential_1(v10, v11);
  char v5 = sub_1C151DB0C();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (v5)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC9DBE8(0, &qword_1EB8948F8);
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v6 = type metadata accessor for StubImageProcessor();
      uint64_t v7 = swift_allocObject();
      uint64_t v11 = v6;
      uint64_t v12 = sub_1BFD52288(&qword_1EA196708, 255, (void (*)(uint64_t))type metadata accessor for StubImageProcessor);
      v10[0] = v7;
      objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubImageDownloader()), sel_init);
      sub_1BFD52288(&qword_1EA1966C0, 255, (void (*)(uint64_t))type metadata accessor for StubImageDownloader);
      uint64_t v8 = sub_1C1519EFC();
      swift_allocObject();
      uint64_t result = sub_1C1519EEC();
      uint64_t v9 = MEMORY[0x1E4FABB80];
      *(void *)(a2 + 24) = v8;
      *(void *)(a2 + 32) = v9;
      *(void *)a2 = result;
      return result;
    }
    goto LABEL_8;
  }
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t FormatTextAdjustmentOtherBaseline.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1C08BEE40();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BEED4();
  sub_1C085F050(&qword_1EB8923D0, (void (*)(uint64_t))sub_1C08BEED4);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)v28;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v28 = *((void *)v16 - 2);
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_23;
      *(&v28 - 3) = sub_1C08BEF58();
      *(&v28 - 2) = sub_1BFCF9CB0();
      *(&v28 - 1) = sub_1C08BEFAC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B88718);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v24 = v28;
      *(void *)uint64_t v25 = v28;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v12;
  long long v29 = 0uLL;
  char v30 = 0;
  uint64_t v18 = sub_1C152069C();
  uint64_t v20 = v19;
  type metadata accessor for FormatTextNodeStyle();
  long long v29 = xmmword_1C153AB20;
  char v30 = 0;
  sub_1C085F050(&qword_1EB8890A0, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  uint64_t v27 = v31;
  *uint64_t v17 = v18;
  v17[1] = v20;
  v17[2] = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatImageNodeRequestPath.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1C0908CDC(0, &qword_1EB884F68, (void (*)(void))sub_1C0068D5C, (void (*)(void))sub_1C0068DB0);
  uint64_t v4 = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v31 - v5;
  sub_1C088FC9C();
  uint64_t v8 = v7;
  uint64_t v33 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C088FD30();
  sub_1C085F050(&qword_1EB892200, (void (*)(uint64_t))sub_1C088FD30);
  char v11 = v34;
  sub_1C1520EBC();
  if (v11)
  {
    uint64_t v12 = v11;
LABEL_3:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  BOOL v34 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v8;
  uint64_t v16 = v32;
  if (v14)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_9;
        }
      }
      BOOL v34 = v15;
      uint64_t v22 = *((void *)v19 - 2);
      uint64_t v23 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      uint64_t v25 = v10;
      MEMORY[0x1F4188790](v24);
      *(&v31 - 4) = (uint64_t *)&_s10CodingKeysON_120;
      *(&v31 - 3) = (uint64_t *)sub_1C088FDB4();
      *(&v31 - 2) = (uint64_t *)sub_1C006E044();
      *(&v31 - 1) = (uint64_t *)sub_1C088FE08();
      swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FA20((uint64_t)&unk_1F1B85B00);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v22;
      *(void *)(v27 + 8) = v23;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v23, 1);
      (*(void (**)(char *, char *))(v33 + 8))(v25, v34);
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
  }
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  char v40 = 0;
  if (sub_1C152071C())
  {
    sub_1C088FE5C();
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    char v37 = 0;
    uint64_t v20 = v34;
    sub_1C15206EC();
    uint64_t v21 = v31;
    uint64_t v28 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v4);
    uint64_t v29 = v33;
  }
  else
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v33;
    uint64_t v21 = v31;
  }
  (*(void (**)(char *, char *))(v29 + 8))(v10, v15);
  *uint64_t v21 = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSupplementaryNodePinDistanceAdjustment.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v23;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v17;
      *(void *)(v20 + 16) = &unk_1F1B881F0;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v19, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0067068();
  long long v24 = 0uLL;
  sub_1C15206EC();
  char v18 = v25;
  long long v24 = xmmword_1C152C800;
  sub_1C0066AF0();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  *(void *)uint64_t v12 = v25;
  *(unsigned char *)(v12 + 8) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFC69238()
{
  sub_1C1515FDC();
  if (v0 <= 0x3F)
  {
    sub_1BFECA32C(319, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F)
    {
      sub_1BFECA32C(319, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F)
      {
        sub_1BFECA32C(319, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

NewsFeed::FeedDaysOfWeek_optional __swiftcall FeedDaysOfWeek.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t _s8NewsFeed0B14ServiceOptionsV16RootCursorSourceO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151555C();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (double *)((char *)&v26 - v11);
  sub_1C008A31C();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = (double *)&v15[*(int *)(v16 + 56)];
  sub_1BFC69840(a1, (uint64_t)v15, type metadata accessor for FeedServiceOptions.RootCursorSource);
  sub_1BFC69840(a2, (uint64_t)v17, type metadata accessor for FeedServiceOptions.RootCursorSource);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1BFC69840((uint64_t)v15, (uint64_t)v9, type metadata accessor for FeedServiceOptions.RootCursorSource);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v4);
        goto LABEL_13;
      }
      uint64_t v20 = v27;
      (*(void (**)(char *, double *, uint64_t))(v27 + 32))(v6, v17, v4);
      char v18 = sub_1C15154EC();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 8);
      v21(v6, v4);
      v21(v9, v4);
      uint64_t v19 = type metadata accessor for FeedServiceOptions.RootCursorSource;
      break;
    case 2u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v19 = type metadata accessor for FeedServiceOptions.RootCursorSource;
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 3u:
      int v23 = swift_getEnumCaseMultiPayload();
      uint64_t v19 = type metadata accessor for FeedServiceOptions.RootCursorSource;
      if (v23 != 3) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 4u:
      int v24 = swift_getEnumCaseMultiPayload();
      uint64_t v19 = type metadata accessor for FeedServiceOptions.RootCursorSource;
      if (v24 != 4) {
        goto LABEL_13;
      }
LABEL_11:
      char v18 = 1;
      break;
    default:
      sub_1BFC69840((uint64_t)v15, (uint64_t)v12, type metadata accessor for FeedServiceOptions.RootCursorSource);
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_13:
        char v18 = 0;
        uint64_t v19 = (uint64_t (*)(void))sub_1C008A31C;
      }
      else
      {
        char v18 = *v12 == *v17;
        uint64_t v19 = type metadata accessor for FeedServiceOptions.RootCursorSource;
      }
      break;
  }
  sub_1BFC43730((uint64_t)v15, v19);
  return v18 & 1;
}

uint64_t sub_1BFC69840(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FeedServiceOptions.init(feedMode:rootCursorSource:rootCursorFreshness:database:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned __int8 *a4@<X3>, unsigned char *a5@<X8>)
{
  int v7 = *a1;
  uint64_t v8 = *a3;
  char v9 = *((unsigned char *)a3 + 8);
  int v10 = *a4;
  *a5 = v7;
  uint64_t v11 = (int *)type metadata accessor for FeedServiceOptions(0);
  uint64_t result = sub_1BFC69940(a2, (uint64_t)&a5[v11[5]]);
  uint64_t v13 = &a5[v11[6]];
  *(void *)uint64_t v13 = v8;
  v13[8] = v9;
  if (v7) {
    char v14 = 2;
  }
  else {
    char v14 = 1;
  }
  if (v10 != 3) {
    char v14 = v10;
  }
  a5[v11[7]] = v14;
  return result;
}

uint64_t sub_1BFC69940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeedServiceOptions.RootCursorSource(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB884938);
}

uint64_t FeedServiceOptions.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC76340(0, &qword_1EB863470, (uint64_t (*)(void))sub_1C008AB54, (uint64_t)&type metadata for FeedServiceOptions.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - v7;
  char v9 = (int *)type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C008AB54();
  uint64_t v22 = v8;
  uint64_t v13 = v24;
  sub_1C1520EBC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  uint64_t v14 = v20;
  char v31 = 0;
  sub_1BFDC73B0();
  uint64_t v15 = v21;
  sub_1C15206EC();
  *uint64_t v11 = v32;
  char v30 = 1;
  sub_1BFC42EC8(&qword_1EB862B88, (void (*)(uint64_t))type metadata accessor for FeedServiceOptions.RootCursorSource);
  sub_1C15206EC();
  sub_1BFC69940((uint64_t)v5, (uint64_t)&v11[v9[5]]);
  char v29 = 2;
  sub_1C0089F50();
  sub_1C15206EC();
  char v16 = v26;
  unint64_t v17 = &v11[v9[6]];
  *(void *)unint64_t v17 = v25;
  v17[8] = v16;
  char v27 = 3;
  sub_1C0089948();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v15);
  v11[v9[7]] = v28;
  sub_1BFC69840((uint64_t)v11, v19, type metadata accessor for FeedServiceOptions);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_1BFC43730((uint64_t)v11, type metadata accessor for FeedServiceOptions);
}

unint64_t FeedJournal.init(entries:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v5 = sub_1BFC69EB4(MEMORY[0x1E4FBC860]);
  unint64_t v16 = v5;
  unint64_t result = sub_1BFC69EA0(v4);
  unint64_t v17 = result;
  uint64_t v15 = a1;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    char v9 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v10 = *(v9 - 2);
      uint64_t v11 = *(v9 - 1);
      uint64_t v12 = *v9;
      v9 += 3;
      uint64_t v13 = v8 + 1;
      v14[0] = v10;
      v14[1] = v11;
      v14[2] = v12;
      sub_1C13A813C(v8, v14, (uint64_t)&v15);
      uint64_t v8 = v13;
    }
    while (v7 != v13);
    swift_bridgeObjectRelease();
    a1 = v15;
    unint64_t v5 = v16;
    unint64_t result = v17;
  }
  *a2 = a1;
  a2[1] = v5;
  a2[2] = result;
  return result;
}

unint64_t sub_1BFC69EA0(uint64_t a1)
{
  return sub_1BFE5CCEC(a1, (unint64_t *)&qword_1EB880E40, MEMORY[0x1E4FBB550]);
}

unint64_t sub_1BFC69EB4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB890310, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E4FBBD58]);
  unint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    unint64_t v8 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFE60260(v8);
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    uint64_t v13 = (void *)(v2[7] + 24 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    v13[2] = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BFC6A020()
{
  uint64_t v1 = 0x656D695465746164;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F74617265706FLL;
  }
}

uint64_t sub_1BFC6A074()
{
  uint64_t v1 = 0x656D695465746164;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73646E6F636573;
  }
}

uint64_t sub_1BFC6A0C8()
{
  uint64_t result = 0x5373726566657270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953394534;
      break;
    case 2:
      uint64_t result = 0x676E6964646170;
      break;
    case 3:
      uint64_t result = 0x615272656E726F63;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatFixedColor_optional __swiftcall FormatFixedColor.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

NewsFeed::FormatTextLineBreakMode_optional __swiftcall FormatTextLineBreakMode.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

NewsFeed::FormatJsonConfigKey_optional __swiftcall FormatJsonConfigKey.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

NewsFeed::FormatSizeConstraint_optional __swiftcall FormatSizeConstraint.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

NewsFeed::FeedCursorKind_optional __swiftcall FeedCursorKind.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

NewsFeed::FormatGroupItemKind_optional __swiftcall FormatGroupItemKind.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

NewsFeed::FormatFontWidth_optional __swiftcall FormatFontWidth.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC6A3F0()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x736574617473;
  }
}

uint64_t sub_1BFC6A420@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC6A458(void *a1)
{
  return FormatButtonNode.encode(to:)(a1);
}

uint64_t FeedServiceOptions.RootCursorFreshness.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  BOOL v34 = a2;
  unint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1BFC76340(0, &qword_1EB8634B8, (uint64_t (*)(void))sub_1C008A060, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.NewerThanCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v38 = v4;
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v37 = (char *)&v31 - v5;
  sub_1BFC76340(0, &qword_1EB8634B0, (uint64_t (*)(void))sub_1C008A164, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.AnyCodingKeys, v3);
  uint64_t v7 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - v8;
  sub_1BFC76340(0, &qword_1EB8634A8, (uint64_t (*)(void))sub_1C008A2C8, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v35 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C008A2C8();
  uint64_t v14 = v39;
  sub_1C1520EBC();
  if (v14) {
    goto LABEL_6;
  }
  uint64_t v32 = v7;
  uint64_t v15 = v36;
  uint64_t v16 = v37;
  uint64_t v17 = v38;
  uint64_t v39 = a1;
  uint64_t v18 = sub_1C152070C();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v23 = sub_1C15201EC();
    swift_allocError();
    uint64_t v25 = v24;
    sub_1C01AC8BC();
    void *v25 = &type metadata for FeedServiceOptions.RootCursorFreshness;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x1E4FBBA70], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
    a1 = v39;
LABEL_6:
    uint64_t v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  char v19 = *(unsigned char *)(v18 + 32);
  if (v19)
  {
    LODWORD(v36) = *(unsigned __int8 *)(v18 + 32);
    char v41 = 1;
    sub_1C008A060();
    uint64_t v20 = v16;
    sub_1C15205CC();
    uint64_t v21 = v17;
    sub_1C15206BC();
    uint64_t v22 = v35;
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
    char v19 = v36;
  }
  else
  {
    char v40 = 0;
    sub_1C008A164();
    sub_1C15205CC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
    uint64_t v29 = 0;
  }
  char v30 = v34;
  *BOOL v34 = v29;
  *((unsigned char *)v30 + 8) = v19 ^ 1;
  uint64_t v26 = (uint64_t)v39;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1BFC6A99C()
{
  sub_1BFC6AC48(0, (unint64_t *)&unk_1EB8643E8, (unint64_t *)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFC6AC48(0, (unint64_t *)&unk_1EB864408, (unint64_t *)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB864518 = result;
  return result;
}

uint64_t sub_1BFC6AAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1BFC6AC48(0, &qword_1EB885220, (unint64_t *)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding, MEMORY[0x1E4FAD778]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1BFC6AC48(0, &qword_1EB885290, (unint64_t *)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD770], v6);
  uint64_t result = sub_1C151C9BC();
  *a4 = result;
  return result;
}

void sub_1BFC6AC48(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC9DBE8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFC6ACB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895430);
  uint64_t result = sub_1C151819C();
  if (*((void *)&v10 + 1))
  {
    sub_1BFC773DC(&v9, (uint64_t)v11);
    uint64_t v4 = v12;
    uint64_t v5 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 32))(&v9, v4, v5);
    uint64_t v6 = type metadata accessor for IssueCoverViewStyler();
    uint64_t v7 = swift_allocObject();
    long long v8 = v10;
    *(_OWORD *)(v7 + 16) = v9;
    *(_OWORD *)(v7 + 32) = v8;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1F1C37A60;
    *a2 = v7;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC6ADA4(uint64_t a1, uint64_t a2)
{
  sub_1BFD5CA98(0, &qword_1EB871378, (uint64_t (*)(void))sub_1BFD5CB00, (uint64_t)&type metadata for A6_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *long long v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  long long v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1BFD5D4A8(0, &qword_1EB871300, MEMORY[0x1E4FAB6F0]);
  sub_1BFD5D464(&qword_1EB8712F8, &qword_1EB871300, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BFC6AF90@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatTagBinding.Text.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Text.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD7F7C, (uint64_t)&_s4TextO10CodingTypeON_5, (uint64_t)&unk_1F1B885D8, a2);
}

uint64_t sub_1BFC6AFE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFC6B004(a1, *(void *)(v2 + 40), a2);
}

uint64_t sub_1BFC6B004@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  type metadata accessor for FeedPluginManagerResult();
  *a3 = sub_1BFC6B090(a2, v5);
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedPluginManagerResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFC6B090(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_1BFC6B0D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for FormatImageAdjustment(uint64_t a1)
{
  return sub_1BFF91120(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128), (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
}

uint64_t sub_1BFC6B1DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_executionPhase;
  uint64_t v4 = sub_1C1518C6C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1BFC6B254@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C151804C();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1BFC66384(a1, (uint64_t)v11);
  uint64_t v5 = swift_allocObject();
  sub_1BFC773DC(v11, v5 + 16);
  sub_1C151E2EC();
  swift_allocObject();
  uint64_t v6 = sub_1C151E2DC();
  uint64_t v7 = type metadata accessor for WeatherKitService();
  long long v8 = (void *)swift_allocObject();
  if (qword_1EB85E4A8 != -1) {
    swift_once();
  }
  sub_1C00924C0(0, (unint64_t *)&qword_1EB85AA60, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAB478], MEMORY[0x1E4FAB2F8]);
  swift_allocObject();
  swift_retain();
  v8[4] = sub_1C15170EC();
  sub_1C151802C();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C1102058;
  *(void *)(v9 + 24) = v5;
  sub_1C0091AEC(0, &qword_1EB86C248, MEMORY[0x1E4F45F40], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t result = sub_1C1518D1C();
  v8[2] = result;
  v8[3] = v6;
  a2[3] = v7;
  a2[4] = &protocol witness table for WeatherKitService;
  *a2 = v8;
  return result;
}

uint64_t sub_1BFC6B48C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC6B534(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v4);
  sub_1BFD657AC();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1C151856C();
  uint64_t v5 = v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth) = 0;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_lock;
  sub_1BFD65808();
  sub_1BFD6565C(0, (unint64_t *)&unk_1EB880C60, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBB320]);
  sub_1BFD656C0();
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  *(void *)(v2 + v7) = sub_1C1517EBC();
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log) = a1;
  id v8 = a1;
  sub_1C151F38C();
  sub_1C15197BC();
  return v2;
}

uint64_t sub_1BFC6B72C()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t sub_1BFC6B780(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for ResetPuzzleProgressCommandHandler()
{
  return self;
}

uint64_t FeedNativeAdManager.onFetch(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DisposableObserver();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  swift_retain();
  uint64_t v10 = swift_retain();
  MEMORY[0x1C18C66D0](v10);
  if (*(void *)((*(void *)(v4 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v4 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1C151EC8C();
  sub_1C151ECEC();
  sub_1C151EBEC();
  swift_endAccess();
  a3[3] = v8;
  uint64_t result = sub_1C007C450(&qword_1EB875D48, (void (*)(uint64_t))type metadata accessor for DisposableObserver);
  a3[4] = result;
  *a3 = v9;
  return result;
}

uint64_t sub_1BFC6B9AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAAE88];
  uint64_t v3 = sub_1C1518C6C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1BFC6BA20()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC6BABC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability), v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
  if (v3)
  {
    MEMORY[0x1F4188790](v3);
    sub_1BFC815C8(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C15198DC();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB93C7A8);
    uint64_t v6 = sub_1C15198AC();
    os_log_type_t v7 = sub_1C151F38C();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1BFC31000, v6, v7, "PuzzleNotificationAutoEnableStartupTask did not run due to puzzles feature disabled.", v8, 2u);
      MEMORY[0x1C18C9B00](v8, -1, -1);
    }

    sub_1BFC815C8(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
}

uint64_t sub_1BFC6BCAC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6BD0C()
{
  unint64_t result = qword_1EB878008;
  if (!qword_1EB878008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878008);
  }
  return result;
}

uint64_t destroy for FormatQueryParameter()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for EmptyView()
{
  return self;
}

uint64_t sub_1BFC6BDC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC6BDF8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC6BE48()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6BEA8()
{
  unint64_t result = qword_1EB88C260;
  if (!qword_1EB88C260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C260);
  }
  return result;
}

uint64_t sub_1BFC6BEFC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double *EmptyViewSupplementaryLayoutAttributes.init(kind:frame:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = (char *)v5 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  uint64_t v12 = sub_1C151C1FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  v5[2] = a2;
  v5[3] = a3;
  void v5[4] = a4;
  v5[5] = a5;
  return v5;
}

uint64_t sub_1BFC6C040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAAE90];
  uint64_t v3 = sub_1C1518C6C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1BFC6C0B4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC6C104()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6C164()
{
  unint64_t result = qword_1EB866D38;
  if (!qword_1EB866D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866D38);
  }
  return result;
}

uint64_t initializeWithCopy for FormatImageAdjustment(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  unsigned __int8 v20 = *(unsigned char *)(a2 + 128);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_1BFF91120(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(unsigned char *)(a1 + 128) = v20;
  return a1;
}

uint64_t sub_1BFC6C2E4(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v10 = *(void *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BFC6C470(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1C151719C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1C151718C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FAB400], v11);
  *uint64_t v10 = sub_1C151E62C();
  v10[1] = v15;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB408], v7);
  uint64_t result = sub_1C1516FFC();
  *a5 = result;
  return result;
}

uint64_t FormatMenu.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0062A88(0, &qword_1EB87A4E0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCE5B6C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1BFC6CA08(0, &qword_1EB880CE8);
  char v16 = 0;
  sub_1BFC6C990(&qword_1EB880CF0, &qword_1EB880CE8, (uint64_t)&type metadata for FormatMenuGroupable, (void (*)(void))sub_1C0079C9C);
  sub_1C152065C();
  uint64_t v15 = a2;
  uint64_t v10 = v17;
  sub_1BFC6CA08(0, &qword_1EB879DA8);
  char v16 = 1;
  sub_1BFC6C990((unint64_t *)&qword_1EB879DB0, &qword_1EB879DA8, (uint64_t)&type metadata for FormatMenuItem, (void (*)(void))sub_1C0081C98);
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v11 = v17;
  char v16 = 2;
  sub_1C00691C4();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v12 = v17;
  uint64_t v13 = v15;
  *uint64_t v15 = v10;
  v13[1] = v11;
  *((unsigned char *)v13 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC6C990(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, a2);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFC6CA08(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C151ED5C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t type metadata accessor for FormatLayoutResizingProvider()
{
  return self;
}

uint64_t _s8NewsFeed22FormatResizeConstraintVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFC6CAAC()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC6CAFC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6CB5C()
{
  unint64_t result = qword_1EB88D948;
  if (!qword_1EB88D948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D948);
  }
  return result;
}

uint64_t type metadata accessor for SetPuzzleStreakEligibleHandler()
{
  return self;
}

uint64_t sub_1BFC6CBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v13[2] = a3;
  uint64_t v14 = a4;
  v13[1] = a2;
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151718C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB8711D8);
  uint64_t v16 = 0;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB400], v8);
  sub_1C006293C(0, &qword_1EB861B08, &qword_1EB863B98);
  sub_1C0092478(0, &qword_1EB863B98);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152FC70;
  uint64_t v15 = 0;
  sub_1C15171AC();
  uint64_t v15 = 0x404E000000000000;
  sub_1C15171AC();
  uint64_t v15 = 0x4066800000000000;
  sub_1C15171AC();
  uint64_t v15 = 0x4072C00000000000;
  sub_1C15171AC();
  uint64_t v15 = 0x4082C00000000000;
  sub_1C15171AC();
  uint64_t v15 = 0x408C200000000000;
  sub_1C15171AC();
  uint64_t v15 = 0x40AC200000000000;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB410], v4);
  uint64_t result = sub_1C15171CC();
  *uint64_t v14 = result;
  return result;
}

uint64_t sub_1BFC6D00C()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC6D05C()
{
  unint64_t result = qword_1EB884B18;
  if (!qword_1EB884B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884B18);
  }
  return result;
}

unint64_t sub_1BFC6D0B0()
{
  unint64_t result = 0x726F6C6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746E756F6D61;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC6D124@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E870 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85AB00);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t FormatSupplementaryNodeStyle.Selector.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C08BBD18();
  uint64_t v7 = v6;
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BBDAC();
  sub_1C085F050(&qword_1EB892300, (void (*)(uint64_t))sub_1C08BBDAC);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v33;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *((void *)v16 - 1);
      uint64_t v32 = *((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v23 = v12;
      MEMORY[0x1F4188790](v22);
      *(&v30 - 4) = (uint64_t)&_s10CodingKeysON_36;
      *(&v30 - 3) = sub_1C08BBE30();
      *(&v30 - 2) = sub_1C006B72C();
      *(&v30 - 1) = sub_1C08BBE84();
      swift_getKeyPath();
      swift_retain();
      uint64_t v24 = sub_1C085FB14((uint64_t)&unk_1F1B88290);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v25 = v32;
      *(void *)uint64_t v26 = v32;
      *(void *)(v26 + 8) = v21;
      *(void *)(v26 + 16) = v24;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v25, v21, 1);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v7);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9420C();
  long long v34 = 0uLL;
  char v35 = 0;
  sub_1C15206EC();
  uint64_t v17 = v12;
  uint64_t v18 = v36;
  uint64_t v19 = v37;
  long long v34 = xmmword_1C153AB20;
  char v35 = 0;
  char v20 = sub_1C152061C();
  long long v34 = xmmword_1C1557FA0;
  char v35 = 0;
  sub_1BFD0C460();
  sub_1C152065C();
  uint64_t v30 = v18;
  uint64_t v31 = v36;
  LODWORD(v32) = (unsigned __int16)v37 | (BYTE2(v37) << 16);
  long long v34 = xmmword_1C1557FB0;
  char v35 = 0;
  sub_1BFCAA810();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v7);
  char v28 = v36;
  *(void *)a2 = v30;
  *(void *)(a2 + 8) = v19;
  *(unsigned char *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v31;
  __int16 v29 = v32;
  *(unsigned char *)(a2 + 34) = BYTE2(v32);
  *(_WORD *)(a2 + 32) = v29;
  *(unsigned char *)(a2 + 35) = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC6D688(void *a1)
{
  sub_1C0091F84();
  uint64_t v3 = v2;
  uint64_t v31 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08F71C4();
  uint64_t v7 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0895F98();
  uint64_t KeyPath = v10;
  sub_1C085F050(&qword_1EB891BF0, (void (*)(uint64_t))sub_1C0895F98);
  uint64_t v12 = v33;
  sub_1C1520EBC();
  if (v12)
  {
    uint64_t v13 = v12;
LABEL_3:
    sub_1C0038728(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v33 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1C1520EAC();
  char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = v7;
  uint64_t v17 = v31;
  if (v15)
  {
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      char v20 = (unsigned char *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19) {
          goto LABEL_9;
        }
      }
      uint64_t v22 = v9;
      uint64_t v23 = *((void *)v20 - 2);
      uint64_t v24 = *((void *)v20 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v25);
      *(&v30 - 4) = (uint64_t)&_s10CodingKeysON_112;
      *(&v30 - 3) = sub_1C089601C();
      *(&v30 - 2) = sub_1C007E910();
      *(&v30 - 1) = sub_1C0896070();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FA20((uint64_t)&unk_1F1B85FB0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v13 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v23;
      *(void *)(v27 + 8) = v24;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v24, 1);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v16);
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  char v39 = 0;
  if (sub_1C152071C())
  {
    sub_1C085F050(&qword_1EB884E00, (void (*)(uint64_t))sub_1C0091F84);
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    char v36 = 0;
    uint64_t v21 = v33;
    sub_1C15206EC();
    uint64_t v28 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v3);
  }
  else
  {
    uint64_t v28 = MEMORY[0x1E4FBC870];
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v16);
  type metadata accessor for FormatJsonConfig();
  uint64_t KeyPath = swift_allocObject();
  swift_beginAccess();
  *(void *)(KeyPath + 16) = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t FormatPercentFillSizing.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C085EE90();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C085EF24();
  sub_1C085F050(&qword_1EB892060, (void (*)(uint64_t))sub_1C085EF24);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      char v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = (void *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = &_s10CodingKeysON_271;
      *(&v24 - 3) = (void *)sub_1C085EFA8();
      *(&v24 - 2) = (void *)sub_1C0072AF0();
      *(&v24 - 1) = (void *)sub_1C085EFFC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B64470);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = (uint64_t)v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BFE94094();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C15206EC();
  uint64_t v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1C006FDAC();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  *uint64_t v12 = v16;
  v12[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FeedPlatform.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    uint64_t v7 = sub_1C1520ABC();
    uint64_t v8 = v10;
    uint64_t v11 = sub_1C151E6BC();
    BOOL v13 = v11 == 0x656E6F6870 && v12 == 0xE500000000000000;
    if (v13 || (uint64_t v14 = v11, v15 = v12, (sub_1C1520A9C() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
      uint64_t v8 = 1;
    }
    else
    {
      BOOL v16 = v14 == 6578544 && v15 == 0xE300000000000000;
      if (v16 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        uint64_t v8 = 2;
      }
      else
      {
        if (v14 == 6513005 && v15 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v17 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            if (qword_1EB87BF18 != -1) {
              swift_once();
            }
            uint64_t v18 = (void *)qword_1EB93C748;
            sub_1BFFDEB20();
            uint64_t v19 = swift_allocObject();
            *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
            *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v19 + 64) = sub_1BFE9C558();
            *(void *)(v19 + 32) = v7;
            *(void *)(v19 + 40) = v8;
            id v20 = v18;
            swift_bridgeObjectRetain();
            sub_1C151F38C();
            sub_1C15197BC();

            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        uint64_t v8 = 3;
      }
    }
LABEL_27:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    goto LABEL_6;
  }
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EB93C748;
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  v21[6] = v2;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1BFE9C558();
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v7 = 0;
  uint64_t v8 = 0;
LABEL_6:
  *a2 = v7;
  a2[1] = v8;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatVideoPlayerOverlayContent.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  sub_1C086D4BC();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086D550();
  sub_1C085F050(&qword_1EB892340, (void (*)(uint64_t))sub_1C086D550);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v28 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  uint64_t v10 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v11 = sub_1C1520EAC();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v9;
  if (v10)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *((void *)v15 - 2);
      uint64_t v17 = *((void *)v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1C07F7B5C();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v18;
      *(void *)(v20 + 8) = v17;
      *(void *)(v20 + 16) = v19;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v18, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      a1 = v30;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE3D1DC();
  long long v33 = 0uLL;
  char v34 = 0;
  sub_1C15206EC();
  uint64_t v16 = v31;
  long long v33 = xmmword_1C153AB20;
  char v34 = 0;
  sub_1BFD29C70();
  sub_1C15206EC();
  uint64_t v22 = v31;
  type metadata accessor for FormatImageNodeStyle();
  long long v33 = xmmword_1C1557FA0;
  char v34 = 0;
  sub_1C085F050(&qword_1EB889800, (void (*)(uint64_t))type metadata accessor for FormatImageNodeStyle);
  sub_1C152065C();
  uint64_t v23 = v31;
  long long v33 = xmmword_1C1557FB0;
  char v34 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  uint64_t v24 = v31;
  long long v31 = xmmword_1C1557FD0;
  char v32 = 0;
  sub_1BFFC82FC();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  char v25 = v34;
  long long v26 = v33;
  uint64_t v27 = v35;
  *uint64_t v35 = v16;
  v27[1] = v22;
  v27[2] = v23;
  void v27[3] = v24;
  *((_OWORD *)v27 + 2) = v26;
  *((unsigned char *)v27 + 48) = v25;
  uint64_t v28 = (uint64_t)v30;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

void sub_1BFC6E810()
{
  sub_1BFF97C40();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_1C151631C();
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t sub_1BFC6E93C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      uint64_t result = 0x73776F726874;
      break;
    case 5:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC6E9E8@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A6_V4.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

void sub_1BFC6EAD4(void *a1)
{
}

uint64_t sub_1BFC6EAEC()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65706F6373;
      break;
    case 2:
      uint64_t result = 0x636E657265666572;
      break;
    case 3:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC6EB7C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C151815C();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8715B0);
  uint64_t result = sub_1C151819C();
  if (v5)
  {
    type metadata accessor for HeadlineViewRendererPipelineProcessor();
    uint64_t v3 = swift_allocObject();
    sub_1BFC773DC(&v8, v3 + 16);
    sub_1BFC773DC(&v6, v3 + 56);
    sub_1BFC773DC(&v4, v3 + 96);
    return v3;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_1BFC6ED04()
{
  return sub_1C07D18C8(*v0);
}

unint64_t sub_1BFC6ED0C()
{
  return sub_1C07BE18C(*v0);
}

uint64_t sub_1BFC6ED14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCountLimit.init(from:)(a1, a2);
}

uint64_t FormatCountLimit.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFC6EF58(0, &qword_1EB880E78, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC6EFBC();
  sub_1C1520EBC();
  if (!v2)
  {
    char v21 = 0;
    uint64_t v10 = sub_1C152063C();
    if (v11) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = v10;
    }
    char v20 = 1;
    uint64_t v13 = sub_1C152063C();
    if (v14)
    {
      if ((v12 & 0x8000000000000000) == 0)
      {
        uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_12;
      }
    }
    else if ((v12 & 0x8000000000000000) == 0)
    {
      uint64_t v15 = v13;
      if (v13 < v12)
      {
        sub_1C149BF48();
        swift_allocError();
        *(void *)uint64_t v16 = v12;
        *(void *)(v16 + 8) = v15;
        *(unsigned char *)(v16 + 16) = 1;
        goto LABEL_14;
      }
LABEL_12:
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *a2 = v12;
      a2[1] = v15;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    sub_1C149BF48();
    swift_allocError();
    *(void *)uint64_t v17 = v12;
    *(void *)(v17 + 8) = 0;
    *(unsigned char *)(v17 + 16) = 0;
LABEL_14:
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFC6EF58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFC6EFBC();
    unint64_t v7 = a3(a1, &type metadata for FormatCountLimit.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFC6EFBC()
{
  unint64_t result = qword_1EB87E3E0;
  if (!qword_1EB87E3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E3E0);
  }
  return result;
}

uint64_t sub_1BFC6F010()
{
  return sub_1BFC6F02C();
}

uint64_t sub_1BFC6F02C()
{
  return sub_1C151911C();
}

uint64_t sub_1BFC6F0C8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC6F118()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6F178()
{
  unint64_t result = qword_1EB865780;
  if (!qword_1EB865780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865780);
  }
  return result;
}

uint64_t sub_1BFC6F1CC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC6F22C()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC6F27C()
{
  unint64_t result = qword_1EB8880B0;
  if (!qword_1EB8880B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8880B0);
  }
  return result;
}

uint64_t sub_1BFC6F2D0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC6F330()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC6F380()
{
  unint64_t result = qword_1EB8885C8;
  if (!qword_1EB8885C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8885C8);
  }
  return result;
}

uint64_t sub_1BFC6F3D4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC6F424()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6F484()
{
  unint64_t result = qword_1EB888B38;
  if (!qword_1EB888B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888B38);
  }
  return result;
}

uint64_t FeedCursorToken.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC6F510()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC6F560()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC6F5C0()
{
  unint64_t result = qword_1EB88A4F8;
  if (!qword_1EB88A4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A4F8);
  }
  return result;
}

void sub_1BFC6F614()
{
  if (!qword_1EB8814A8[0])
  {
    sub_1C151943C();
    sub_1C0071C4C();
    sub_1BFC6F6E0(&qword_1EB8850A8);
    sub_1BFC6F6E0(&qword_1EB8850A0);
    unint64_t v0 = sub_1C1519AAC();
    if (!v1) {
      atomic_store(v0, qword_1EB8814A8);
    }
  }
}

uint64_t sub_1BFC6F6E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C151943C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC6F724@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895B80);
  uint64_t result = sub_1C151819C();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    __n128 v5 = MEMORY[0x1F4188790](v4);
    unint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for LayeredMediaVariantSelector();
    v19[3] = v10;
    void v19[4] = &off_1F1BAD340;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for LayeredMediaImageVariantSelector();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    __n128 v14 = MEMORY[0x1F4188790](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1F1BAD340;
    void v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1F1BEEEC0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC6F950@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC845BC(0, &qword_1EB8804D0);
  uint64_t result = sub_1C151819C();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    __n128 v5 = MEMORY[0x1F4188790](v4);
    unint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for EngagementBannerViewStyler();
    v19[3] = v10;
    void v19[4] = &off_1F1BED998;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for EngagementBannerViewRenderer();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    __n128 v14 = MEMORY[0x1F4188790](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1F1BED998;
    void v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &protocol witness table for EngagementBannerViewRenderer;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC6FB78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8856F8);
  uint64_t result = sub_1C151819C();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    __n128 v5 = MEMORY[0x1F4188790](v4);
    unint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for WebEmbedDataVisualizationDataService(0);
    v19[3] = v10;
    void v19[4] = &off_1F1B92570;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for WebEmbedDataSourceManager();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    __n128 v14 = MEMORY[0x1F4188790](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    uint64_t v18 = sub_1BFCF4024(*v16, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1F1BAC8E8;
    *a2 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC6FDA8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A110);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&unk_1EB87A230);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8955C0);
  uint64_t result = sub_1C151819C();
  if (v7)
  {
    type metadata accessor for SavingCommandHandler();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    sub_1BFC773DC(&v6, v5 + 32);
    return v5;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_1BFC6FEE8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC60470();
  uint64_t result = (void *)sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC510B8();
  uint64_t result = (void *)sub_1C151818C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC520B8();
  uint64_t result = (void *)sub_1C151818C();
  if (result)
  {
    uint64_t v5 = (uint64_t)result;
    type metadata accessor for FeedPrerollAdRequester();
    swift_allocObject();
    return sub_1BFC78E1C(v3, v4, v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1BFC6FFE8(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, qword_1EB872D58);
  sub_1C151819C();
  swift_beginAccess();
  *(void *)(v3 + 16) = v7;
  *(void *)(v3 + 24) = v8;
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C151BB6C();
  uint64_t v4 = sub_1C151818C();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1BFC4B3B4();
    sub_1C151E78C();
    long long v6 = (void *)sub_1C151814C();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_1C002C7B4((unint64_t *)&unk_1EA1AA6A8, 255, (void (*)(uint64_t))type metadata accessor for FeedBannerAdRequester);
      sub_1C151BB2C();
      swift_retain();
      sub_1C1518ECC();

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_1BFC701A0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C007DCE4();
  uint64_t result = sub_1C151819C();
  if (v13)
  {
    sub_1C0080D08();
    uint64_t v3 = v2;
    uint64_t v4 = (char *)objc_allocWithZone(v2);
    uint64_t v5 = &v4[qword_1EA1AA1F0];
    *(void *)uint64_t v5 = 0;
    *((void *)v5 + 1) = 0;
    sub_1BFC66384((uint64_t)v12, (uint64_t)&v4[qword_1EA1AA1F8]);
    v11.receiver = v4;
    v11.super_class = v3;
    long long v6 = (char *)objc_msgSendSuper2(&v11, sel_init);
    uint64_t v7 = *(void *)&v6[qword_1EA1AA1F8 + 24];
    uint64_t v8 = *(void *)&v6[qword_1EA1AA1F8 + 32];
    __swift_project_boxed_opaque_existential_1(&v6[qword_1EA1AA1F8], v7);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v10 = v6;
    v9(v6, v7, v8);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return (uint64_t)v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1BFC702B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  uint64_t result = (void *)sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC88358(0, &qword_1EB880C90, qword_1EB87CF78, (uint64_t)&protocol descriptor for FeedGroupDebuggerType, MEMORY[0x1E4FBB320]);
    sub_1C151819C();
    if (qword_1EB896B90 != -1) {
      swift_once();
    }
    sub_1BFD52288(&qword_1EB888138, v6, (void (*)(uint64_t))type metadata accessor for RendererAssembly);
    sub_1C1516FBC();
    unint64_t v7 = 0xEA00000000006E6FLL;
    uint64_t v8 = 0x69746375646F7270;
    switch(v10)
    {
      case 1:
        unint64_t v7 = 0xE700000000000000;
        uint64_t v8 = 0x676E6967617473;
        break;
      case 2:
        unint64_t v7 = 0xE200000000000000;
        uint64_t v8 = 24945;
        break;
      case 3:
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1953719668;
        break;
      case 4:
        unint64_t v7 = 0xE500000000000000;
        uint64_t v8 = 0x6C65766564;
        break;
      case 5:
        unint64_t v7 = 0xE700000000000000;
        uint64_t v8 = 0x786F62646E6173;
        break;
      case 6:
        unint64_t v7 = 0xE500000000000000;
        uint64_t v8 = 0x316F6D6564;
        break;
      case 7:
        unint64_t v7 = 0xE500000000000000;
        uint64_t v8 = 0x326F6D6564;
        break;
      default:
        break;
    }
    type metadata accessor for InternalErrorViewRenderer();
    uint64_t result = (void *)swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (v11) {
      uint64_t v9 = v11;
    }
    result[2] = v5;
    result[3] = v9;
    result[4] = v8;
    result[5] = v7;
    *a2 = result;
    a2[1] = &off_1F1BF0608;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC70534@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, &qword_1EB878558);
  uint64_t v4 = sub_1C151818C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A250);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFCB6824(0, &qword_1EB871540);
    uint64_t result = sub_1C151819C();
    if (v10)
    {
      uint64_t v7 = type metadata accessor for FollowingManager();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v4;
      *(void *)(v8 + 24) = v6;
      uint64_t result = sub_1BFC773DC(&v9, v8 + 32);
      a2[3] = v7;
      a2[4] = (uint64_t)&protocol witness table for FollowingManager;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC70688(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895C58);
  uint64_t result = sub_1C151819C();
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewModelFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewModelRenderer();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for LayeredMediaRenderedViewModelFactory();
    uint64_t v5 = swift_allocObject();
    sub_1BFC773DC(&v6, v5 + 16);
    *(void *)(v5 + 56) = v3;
    *(void *)(v5 + 64) = v4;
    return v5;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BFC707A8(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB871438);
  uint64_t result = sub_1C151819C();
  if (v4)
  {
    sub_1BFC773DC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1BFD52288(&qword_1EB878288, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutViewRenderer);
    sub_1C1518B1C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC708A8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(void))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a4(0, a2, a3);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v10 = result;
    a5(0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC7094C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8716C0);
  uint64_t result = sub_1C151819C();
  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC5E06C();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC46FF8();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB871740);
  uint64_t result = sub_1C151819C();
  if (v10)
  {
    uint64_t v7 = type metadata accessor for FeedSponsorshipAdService();
    uint64_t v8 = swift_allocObject();
    sub_1BFC773DC(&v11, v8 + 16);
    *(void *)(v8 + 56) = v5;
    *(void *)(v8 + 64) = v6;
    uint64_t result = sub_1BFC773DC(&v9, v8 + 72);
    a2[3] = v7;
    a2[4] = (uint64_t)&protocol witness table for FeedSponsorshipAdService;
    *a2 = v8;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BFC70AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1C02662CC(0, (unint64_t *)&qword_1EB87C870, MEMORY[0x1E4FAD778]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v11 - v8;
  sub_1C02662CC(0, (unint64_t *)&unk_1EB87C8E8, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD770], v6);
  uint64_t result = sub_1C151C9BC();
  *a4 = result;
  return result;
}

uint64_t sub_1BFC70C1C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatHeadlineBinding.Color.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Color.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD7F28, (uint64_t)&_s5ColorO10CodingTypeON_0, (uint64_t)&unk_1F1B81C50, a2);
}

uint64_t sub_1BFC70C70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC70CA0();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC70CA0()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13) {
    return 19;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC70CF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC70D24();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC70D24()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC70D70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC70DA0();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC70DA0()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC70DEC(uint64_t a1)
{
  return sub_1BFFF7618(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1BFC70E20()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t destroy for FormatWebEmbedNodeStyle.Selector(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0xFD) {
    uint64_t result = sub_1BFF04738(*(void *)(a1 + 16), *(void *)(a1 + 24), v3);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 <= 0xFD)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    return sub_1BFF04738(v5, v6, v4);
  }
  return result;
}

void sub_1BFC70FEC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for LikingCommandHandler();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    unsigned int v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1EB87B0C8 != -1) {
      swift_once();
    }
    sub_1BFCD8360(&qword_1EB876E40, (void (*)(uint64_t))type metadata accessor for LikingCommandHandler);
    sub_1C151ADAC();
    if (qword_1EB87B140 != -1) {
      swift_once();
    }
    sub_1C151ADAC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BFC71184()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BFC71304(int *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t result = sub_1C151631C();
  uint64_t v8 = *(void *)(result - 8);
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = *(void *)(v5 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (v6 <= *(_DWORD *)(v8 + 84)) {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v12 = v6;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (v13 >= a2)
  {
LABEL_28:
    if ((v12 & 0x80000000) != 0)
    {
      uint64_t v22 = ((unint64_t)a1 + v9 + 16) & ~v9;
      if (v6 == v13)
      {
        uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        return v23(v22, v6, AssociatedTypeWitness);
      }
      else
      {
        uint64_t v24 = (v22 + v10 + v11) & ~v11;
        char v25 = *(uint64_t (**)(uint64_t))(v8 + 48);
        return v25(v24);
      }
    }
    else
    {
      unint64_t v21 = *((void *)a1 + 1);
      if (v21 >= 0xFFFFFFFF) {
        LODWORD(v21) = -1;
      }
      return (v21 + 1);
    }
  }
  else
  {
    unint64_t v14 = ((((((*(void *)(*(void *)(result - 8) + 64) + ((v10 + v11 + ((v9 + 16) & ~v9)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v15 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v13 + 1;
    }
    if (v16 >= 0x10000) {
      LODWORD(v17) = 4;
    }
    else {
      LODWORD(v17) = 2;
    }
    if (v16 < 0x100) {
      LODWORD(v17) = 1;
    }
    if (v16 >= 2) {
      uint64_t v17 = v17;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v14);
        if (!v18) {
          goto LABEL_28;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v14);
        if (!v18) {
          goto LABEL_28;
        }
        goto LABEL_25;
      case 3:
        __break(1u);
        return result;
      case 4:
        int v18 = *(int *)((char *)a1 + v14);
        if (!v18) {
          goto LABEL_28;
        }
LABEL_25:
        int v19 = v18 - 1;
        if (v15)
        {
          int v19 = 0;
          int v20 = *a1;
        }
        else
        {
          int v20 = 0;
        }
        uint64_t result = v13 + (v20 | v19) + 1;
        break;
      default:
        goto LABEL_28;
    }
  }
  return result;
}

uint64_t sub_1BFC71640()
{
  uint64_t v0 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v0 - 8);
  type metadata accessor for FeedCursorStoreManager();
  uint64_t v1 = swift_allocObject();
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t result = sub_1C1517EBC();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = result;
  *(void *)(v1 + 24) = v3;
  qword_1EB886320 = v1;
  return result;
}

void sub_1BFC716FC(char *a1@<X0>, unint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs], sel_array);
  uint64_t v5 = sub_1C151EBCC();

  uint64_t v6 = a1;
  unint64_t v7 = sub_1C0064F94(v5, (uint64_t)v6);
  swift_bridgeObjectRelease();

  *a2 = v7;
}

uint64_t sub_1BFC71798@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BFC717EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFC718B4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1BFC7196C()
{
  uint64_t v0 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v0);
  type metadata accessor for FormatLayoutResizingProvider();
  unint64_t v1 = (void *)swift_allocObject();
  sub_1C006ABCC((unint64_t *)&qword_1EB87C6F0, MEMORY[0x1E4FAA868]);
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA868];
  sub_1C0062780(0, (unint64_t *)&unk_1EB880C60, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBB320]);
  sub_1C0064C98((unint64_t *)&qword_1EB880C70, (unint64_t *)&unk_1EB880C60, v2);
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t v3 = sub_1C1517EBC();
  uint64_t v4 = MEMORY[0x1E4FBC868];
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = 0;
  v1[5] = 0;
  return v1;
}

uint64_t sub_1BFC71AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  sub_1BFD98850(0, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v38 - v7);
  uint64_t v9 = sub_1C151995C();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x1F4188790](v18);
  int v20 = (char *)&v38 - v19;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1BFE71F8C(v21);
  swift_bridgeObjectRelease();
  if (v22[2])
  {
    sub_1C1519B9C();
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    if (v42)
    {
      uint64_t v45 = MEMORY[0x1E4FBB1A0];
      uint64_t v46 = MEMORY[0x1E4FAA778];
      uint64_t v43 = v41;
      uint64_t v44 = v42;
      sub_1C1519AEC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      sub_1C0062DB4((uint64_t)v22);
      swift_release();
      sub_1C1519B1C();
      swift_bridgeObjectRelease();
      sub_1C1519ADC();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v39 + 8);
      char v25 = v14;
      uint64_t v26 = v40;
      v24(v25, v40);
      v24(v17, v26);
      *uint64_t v8 = 0x4464657461657263;
      v8[1] = 0xEB00000000657461;
      uint64_t v27 = *MEMORY[0x1E4FAA6E0];
      uint64_t v28 = sub_1C1519C5C();
      uint64_t v29 = *(void *)(v28 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v29 + 104))(v8, v27, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v28);
      uint64_t v30 = v38;
      uint64_t v31 = sub_1C1519B6C();
      if (!v30) {
        uint64_t v27 = v31;
      }
      swift_release();
      sub_1BFD987E0((uint64_t)v8, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
      v24(v20, v26);
      return v27;
    }
    __break(1u);
  }
  else
  {
    swift_release();
    sub_1C1519B9C();
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    if (v42)
    {
      uint64_t v45 = MEMORY[0x1E4FBB1A0];
      uint64_t v46 = MEMORY[0x1E4FAA778];
      uint64_t v43 = v41;
      uint64_t v44 = v42;
      sub_1C1519AEC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      *uint64_t v5 = 0x4464657461657263;
      v5[1] = 0xEB00000000657461;
      uint64_t v27 = *MEMORY[0x1E4FAA6E0];
      uint64_t v32 = sub_1C1519C5C();
      uint64_t v33 = *(void *)(v32 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v33 + 104))(v5, v27, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v5, 0, 1, v32);
      uint64_t v34 = v38;
      uint64_t v35 = sub_1C1519B6C();
      uint64_t v37 = v39;
      uint64_t v36 = v40;
      if (!v34) {
        uint64_t v27 = v35;
      }
      swift_release();
      sub_1BFD987E0((uint64_t)v5, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v36);
      return v27;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC72108(uint64_t a1, long long *a2)
{
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  uint64_t v3 = sub_1C151F55C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151F52C();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  sub_1C151E1AC();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1BFCBD0F4((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  sub_1C00645C4(0, (unint64_t *)&unk_1EB879FB0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C006453C();
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v3);
  *(void *)(v2 + 64) = sub_1C151F5AC();
  uint64_t v9 = v13;
  *(void *)(v2 + 16) = v12;
  sub_1BFC773DC(v9, v2 + 24);
  return v2;
}

uint64_t sub_1BFC7238C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151631C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1BFC72530(void *a1, uint64_t a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v7 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v8 <= *(_DWORD *)(v10 + 84)) {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v14 = v8;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  size_t v16 = ((((((*(void *)(*(void *)(v9 - 8) + 64) + ((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v15 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v15;
    if (a2 <= v15)
    {
LABEL_20:
      switch(v19)
      {
        case 1:
          *((unsigned char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)((char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v16) = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if ((v14 & 0x80000000) != 0)
            {
              uint64_t v23 = ((unint64_t)a1 + v11 + 16) & ~v11;
              if (v8 == v15)
              {
                uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
                v24(v23, a2, v8, AssociatedTypeWitness);
              }
              else
              {
                uint64_t v25 = (v23 + v12 + v13) & ~v13;
                uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v10 + 56);
                v26(v25, a2);
              }
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *a1 = a2 ^ 0x80000000;
              a1[1] = 0;
            }
            else
            {
              a1[1] = (a2 - 1);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((((*(_DWORD *)(*(void *)(v9 - 8) + 64)
             + ((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13)
             + 7) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v17 = a3 - v15 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v15;
    if (a2 <= v15) {
      goto LABEL_20;
    }
  }
  if (((((((*(_DWORD *)(*(void *)(v9 - 8) + 64)
           + ((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13)
           + 7) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v21 = v20;
  else {
    int v21 = 1;
  }
  if (((((((*(_DWORD *)(*(void *)(v9 - 8) + 64)
           + ((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13)
           + 7) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v15 + a2;
    bzero(a1, v16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      *((unsigned char *)a1 + v16) = v21;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v16) = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      break;
    case 4:
      *(_DWORD *)((char *)a1 + v16) = v21;
      break;
    default:
      return;
  }
}

void *initializeWithCopy for CoverChannelViewLayout(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t FormatSlotDefinitionItemSet.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C001BC28(0, &qword_1EB86B940, (uint64_t (*)(void))sub_1C001BC90, (uint64_t)&type metadata for FormatSlotDefinitionItemSet.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C001BC90();
  sub_1C1520F0C();
  LOBYTE(v15) = 0;
  sub_1C152081C();
  if (!v2)
  {
    int v10 = *(_DWORD *)(v3 + 4);
    if (v10 != 0x7FFFFFFF)
    {
      LOBYTE(v16) = 1;
      LODWORD(v15) = v10;
      sub_1BFC72D64();
      sub_1C1520BAC();
    }
    uint64_t v11 = *(void *)(v3 + 8);
    char v17 = 2;
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_1BFE74E78(v11);
    swift_bridgeObjectRelease();
    size_t v16 = v12;
    swift_retain();
    sub_1C00656C8((uint64_t *)&v16);
    swift_release();
    *(void *)&long long v15 = v16;
    sub_1BFC72D64();
    sub_1BFC6CA08(0, &qword_1EB860C70);
    sub_1BFE74EA0();
    sub_1C1520BAC();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v14 = *(void *)(v3 + 16);
    if (*(void *)(v14 + 16))
    {
      LOBYTE(v16) = 3;
      *(void *)&long long v15 = v14;
      sub_1BFE79BF4(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
      sub_1C001BD8C((unint64_t *)&qword_1EB85EF40, &qword_1EB87BA38);
      sub_1C1520BAC();
    }
    long long v15 = *(_OWORD *)(v3 + 24);
    LOBYTE(v16) = 4;
    sub_1C00679D4();
    sub_1C152078C();
    type metadata accessor for FormatSlotDefinitionItemSet();
    LOBYTE(v15) = 5;
    sub_1C1518CDC();
    sub_1C0020AA8((unint64_t *)&qword_1EB884FD0, MEMORY[0x1E4FAAFC8]);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BFC72D64()
{
  unint64_t result = qword_1EB86B938;
  if (!qword_1EB86B938)
  {
    sub_1C001BC28(255, &qword_1EB86B940, (uint64_t (*)(void))sub_1C001BC90, (uint64_t)&type metadata for FormatSlotDefinitionItemSet.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B938);
  }
  return result;
}

void sub_1BFC72DF4()
{
  uint64_t v0 = sub_1C15198DC();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1C1515B3C();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1C0);
  sub_1C15159CC();
  swift_getKeyPath();
  sub_1C151593C();
  sub_1BFDE8E14(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
}

id sub_1BFC7312C()
{
  id v1 = objc_msgSend(*v0, sel_dataProvider);
  if (!v1) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_isRawFileConsumable);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1BFC7318C()
{
  FCCurrentQoSOrUtilityIfMain();
  id v1 = (id)FCDispatchQueueForQualityOfService();
  v0[4] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_1BFC5B8E0;
  uint64_t v4 = v0[2];
  uint64_t v3 = (void *)v0[3];
  *(void *)(v2 + 1624) = v3;
  *(void *)(v2 + 1576) = v1;
  *(unsigned char *)(v2 + 1784) = 0;
  *(void *)(v2 + 1528) = v4;
  *(void *)(v2 + 1672) = *v3;
  return MEMORY[0x1F4188298](sub_1BFCE2154, 0, 0);
}

uint64_t sub_1BFC73284()
{
  return swift_initClassMetadata2();
}

void sub_1BFC732CC()
{
  int v10 = &unk_1C1540798;
  uint64_t v11 = &unk_1C1540798;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v9;
    swift_getTupleTypeLayout2();
    uint64_t v13 = &v8;
    swift_getTupleTypeLayout2();
    uint64_t v14 = &v7;
    swift_getTupleTypeLayout2();
    uint64_t v1 = MEMORY[0x1E4FBAD80] + 64;
    long long v15 = &v6;
    uint64_t v16 = MEMORY[0x1E4FBAD80] + 64;
    uint64_t v17 = MEMORY[0x1E4FBAD80] + 64;
    uint64_t v18 = MEMORY[0x1E4FBAD80] + 64;
    uint64_t v19 = MEMORY[0x1E4FBAD80] + 64;
    uint64_t v20 = MEMORY[0x1E4FBAD80] + 64;
    uint64_t v21 = MEMORY[0x1E4FBAD80] + 64;
    swift_getTupleTypeLayout2();
    int v22 = &v5;
    swift_getTupleTypeLayout2();
    uint64_t v23 = &v4;
    uint64_t v24 = v1;
    uint64_t v25 = v1;
    uint64_t v26 = v1;
    uint64_t v27 = v1;
    uint64_t v28 = v1;
    uint64_t v29 = v1;
    uint64_t v30 = v1;
    uint64_t v31 = v1;
    uint64_t v32 = v1;
    uint64_t v33 = v1;
    uint64_t v34 = v1;
    uint64_t v35 = v1;
    sub_1C0368F0C(319, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    if (v3 <= 0x3F)
    {
      uint64_t v36 = *(void *)(v2 - 8) + 64;
      uint64_t v37 = v36;
      uint64_t v38 = &unk_1C15407C8;
      uint64_t v39 = v1;
      uint64_t v40 = v1;
      uint64_t v41 = v1;
      uint64_t v42 = v1;
      uint64_t v43 = v1;
      uint64_t v44 = v1;
      uint64_t v45 = MEMORY[0x1E4FBADB0] + 64;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t FeedCursorTracker.snapshot()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v7 = (char *)&v14 - v6;
  sub_1C1517E7C();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(void *)(*(void *)v2 + 96), AssociatedTypeWitness);
  char v8 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 104));
  swift_beginAccess();
  uint64_t v9 = *v8;
  int v10 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 120));
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 112));
  swift_beginAccess();
  sub_1BFC47C18((uint64_t)v7, v9, v11, *v12, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1C1517E8C();
}

uint64_t sub_1BFC73820()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC73870()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC738D0()
{
  unint64_t result = qword_1EB88C9E0;
  if (!qword_1EB88C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C9E0);
  }
  return result;
}

uint64_t sub_1BFC73924()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC73984()
{
  unint64_t result = qword_1EB887460;
  if (!qword_1EB887460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887460);
  }
  return result;
}

uint64_t sub_1BFC739D8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC73A38()
{
  unint64_t result = qword_1EB865C40;
  if (!qword_1EB865C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865C40);
  }
  return result;
}

uint64_t sub_1BFC73A8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_msgSend(a1, sel_possiblyUnfetchedAppConfiguration);
  swift_getAtKeyPath();
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v4 = v5;
  if (v6) {
    uint64_t v4 = 0;
  }
  *a2 = v4;
  return result;
}

id sub_1BFC73B08()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_blackColor);
  id v2 = objc_msgSend(v0, sel_whiteColor);
  id v3 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.490196078, 0.498039216, 0.498039216, 1.0);
  qword_1EB874F60 = (uint64_t)v5;
  *(void *)algn_1EB874F68 = v5;
  return v5;
}

void sub_1BFC73BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2 + OBJC_IVAR____TtC8NewsFeed27SocialLayerSharedItemCenter_delegate;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  sub_1C1518CEC();
  objc_msgSend(v6, sel_setDelegate_, v4);
  swift_unknownObjectRelease();
}

uint64_t sub_1BFC73C98()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC73CF8()
{
  unint64_t result = qword_1EB8769A0;
  if (!qword_1EB8769A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8769A0);
  }
  return result;
}

uint64_t sub_1BFC73D4C()
{
  uint64_t v0 = sub_1C1518DEC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C15183EC();
  sub_1C0080D08();
  sub_1C1518AFC();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB030], v0);
  sub_1C1517E1C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BFC73E94(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v3 = 7827308;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v5 = 7827308;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t FormatAnimationNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC73F80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v4 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895418);
  uint64_t result = sub_1C151819C();
  if (v11)
  {
    uint64_t v6 = type metadata accessor for FeedNativeAdManager();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 64) = MEMORY[0x1E4FBC860];
    sub_1C1517E9C();
    sub_1C1517ECC();
    swift_allocObject();
    uint64_t v8 = sub_1C1517EBC();
    uint64_t v9 = MEMORY[0x1E4FBC870];
    *(void *)(v7 + 72) = v8;
    *(void *)(v7 + 80) = v9;
    *(unsigned char *)(v7 + 88) = 0;
    uint64_t result = sub_1BFC773DC(&v10, v7 + 16);
    *(unsigned char *)(v7 + 56) = 0;
    a2[3] = v6;
    a2[4] = (uint64_t)&protocol witness table for FeedNativeAdManager;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFC740D0()
{
  uint64_t v0 = sub_1C15154CC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1BFEF4060(MEMORY[0x1E4FBC860]);
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB884D38 != -1) {
    swift_once();
  }
  sub_1C151703C();
  swift_release();
  if (v13 == 1)
  {
    sub_1BFEFFC1C((uint64_t *)&v13, 0xD000000000000022, 0x80000001C16104B0);
    swift_bridgeObjectRelease();
    sub_1C151704C();
    if (qword_1EA194480 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    long long v16 = v13;
    sub_1BFF27ECC();
    uint64_t v4 = sub_1C151FF1C();
    swift_bridgeObjectRelease();
    uint64_t v11 = v4;
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      uint64_t v6 = (uint64_t *)(v11 + 56);
      do
      {
        long long v12 = *(_OWORD *)(v6 - 3);
        uint64_t v8 = *(v6 - 1);
        uint64_t v7 = *v6;
        *(void *)&long long v13 = 0;
        *((void *)&v13 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        *(void *)&long long v16 = 0xD00000000000001ALL;
        *((void *)&v16 + 1) = 0x80000001C16104E0;
        long long v13 = v12;
        uint64_t v14 = v8;
        uint64_t v15 = v7;
        sub_1C151545C();
        sub_1C046D770();
        sub_1C151FE9C();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        swift_bridgeObjectRelease();
        sub_1C151E6BC();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1BFEFFC1C((uint64_t *)&v13, v16, *((uint64_t *)&v16 + 1));
        swift_bridgeObjectRelease();
        v6 += 4;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_1BFC743EC()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 16);
  char v5 = *(unsigned char *)(v0 + 64);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 72);
  int v13 = *(_DWORD *)(v0 + 80);
  char v12 = *(unsigned char *)(v0 + 84);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 72) = 0;
  swift_beginAccess();
  *(void *)(v8 + 16) = v11;
  *(void *)(v8 + 24) = v1;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v2;
  *(void *)(v8 + 48) = v4;
  *(void *)(v8 + 56) = v10;
  *(unsigned char *)(v8 + 64) = v5;
  swift_beginAccess();
  *(void *)(v8 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 84) = v12;
  *(_DWORD *)(v8 + 80) = v13;
  swift_beginAccess();
  *(void *)(v8 + 88) = v7;
  return v8;
}

uint64_t sub_1BFC74580()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC745E0()
{
  unint64_t result = qword_1EB8760E0;
  if (!qword_1EB8760E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8760E0);
  }
  return result;
}

uint64_t sub_1BFC74634()
{
  return swift_release();
}

uint64_t sub_1BFC746CC()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702521203;
      break;
    case 2:
      uint64_t result = 0x676E696C616373;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC7472C(uint64_t *a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v9 = *a1;
  uint64_t v19 = a1[3];
  char v18 = *((unsigned char *)a1 + 32);
  char v20 = *a2;
  *(void *)(v5 + qword_1EB864E70 + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = qword_1EB864E80;
  type metadata accessor for FeedPluginManager.FactoryWrapper();
  swift_retain();
  long long v17 = *(_OWORD *)(a1 + 1);
  *(void *)(v6 + v10) = sub_1C151E30C();
  uint64_t v11 = v6 + qword_1EB864E68;
  *(void *)uint64_t v11 = v9;
  *(_OWORD *)(v11 + 8) = v17;
  *(void *)(v11 + 24) = v19;
  *(unsigned char *)(v11 + 32) = v18;
  *(unsigned char *)(v6 + qword_1EB864E78) = v20;
  *(void *)(v6 + qword_1EB864E60) = a3;
  type metadata accessor for FormatFeedPluginFactory();
  id v12 = a3;
  uint64_t v13 = swift_unknownObjectRetain();
  uint64_t v14 = sub_1C008CFE0(v13, a5, a3);
  swift_unknownObjectRelease();
  *(void *)(v6 + qword_1EB864E58) = v14;
  swift_release();
  uint64_t v15 = sub_1C151A3DC();
  *(void *)(*(void *)(v15 + qword_1EB864E58) + 24) = &protocol witness table for FeedPluginManager<A>;
  swift_unknownObjectWeakAssign();
  return v15;
}

uint64_t (*sub_1BFC748FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))()
{
  return sub_1BFEE0B10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1BFC74938()
{
  uint64_t v1 = 0x6168706C61;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_1BFC74984()
{
  uint64_t v1 = 0x6369676F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656D695465746164;
  }
}

uint64_t sub_1BFC749D4()
{
  uint64_t v1 = 0x65756C6176;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1BFC74A1C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7373616C63;
      break;
    case 2:
      uint64_t result = 0x426F547370696C63;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 4:
      uint64_t result = 7235952;
      break;
    case 5:
      uint64_t result = 0x6162726562627572;
      break;
    case 6:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC74AEC()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x6F756E69746E6F63;
  }
}

uint64_t sub_1BFC74B24()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_1BFC74B54()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x6F69746365726964;
  }
}

uint64_t sub_1BFC74B8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for FeedUserInfo()
{
  return self;
}

double sub_1BFC74BE8@<D0>(_OWORD *a1@<X8>)
{
  sub_1BFD75D70((uint64_t *)v6);
  long long v2 = v6[3];
  a1[2] = v6[2];
  a1[3] = v2;
  long long v3 = v6[5];
  a1[4] = v6[4];
  a1[5] = v3;
  double result = *(double *)v6;
  long long v5 = v6[1];
  *a1 = v6[0];
  a1[1] = v5;
  return result;
}

uint64_t sub_1BFC74C30@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1BFD5DE6C(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1BFC74CEC@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1BFD5CA98(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1BFC74DA8()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 48) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  *uint64_t v4 = v0;
  v4[1] = sub_1C005E6D8;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v2, v5);
}

uint64_t sub_1BFC74EC8(void *a1)
{
  return FeedGroupRepooling.encode(to:)(a1);
}

uint64_t FeedGroupRepooling.encode(to:)(void *a1)
{
  sub_1BFCCCE08(0, &qword_1EB85C620, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCCCDB4();
  sub_1C1520F0C();
  char v11 = v8;
  sub_1BFC7503C();
  sub_1C152078C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BFC7503C()
{
  unint64_t result = qword_1EB85CB18;
  if (!qword_1EB85CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CB18);
  }
  return result;
}

uint64_t sub_1BFC75090(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1BFC750D4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC75134()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC75184()
{
  unint64_t result = qword_1EB887F60;
  if (!qword_1EB887F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887F60);
  }
  return result;
}

uint64_t sub_1BFC751D8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC75228()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC75288()
{
  unint64_t result = qword_1EB8770E0;
  if (!qword_1EB8770E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8770E0);
  }
  return result;
}

uint64_t FeedServiceOptions.Database.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1BFC76340(0, &qword_1EB8634D8, (uint64_t (*)(void))sub_1C0089A4C, (uint64_t)&type metadata for FeedServiceOptions.Database.OfflineCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v42 = v4;
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v37 - v5;
  sub_1BFC76340(0, &qword_1EB8634D0, (uint64_t (*)(void))sub_1C0089B50, (uint64_t)&type metadata for FeedServiceOptions.Database.DefaultCodingKeys, v3);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v46 = (char *)&v37 - v7;
  sub_1BFC76340(0, &qword_1EB8634C8, (uint64_t (*)(void))sub_1C0089C54, (uint64_t)&type metadata for FeedServiceOptions.Database.NoneCodingKeys, v3);
  uint64_t v9 = v8;
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v37 - v10;
  sub_1BFC76340(0, &qword_1EB8634C0, (uint64_t (*)(void))sub_1C0089DD4, (uint64_t)&type metadata for FeedServiceOptions.Database.CodingKeys, v3);
  uint64_t v13 = v12;
  uint64_t v44 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0089DD4();
  long long v16 = v48;
  sub_1C1520EBC();
  if (v16) {
    goto LABEL_7;
  }
  uint64_t v37 = v9;
  uint64_t v38 = v13;
  uint64_t v17 = v45;
  char v18 = v46;
  uint64_t v19 = v47;
  uint64_t v48 = a1;
  char v20 = v15;
  uint64_t v21 = sub_1C152070C();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v27 = sub_1C15201EC();
    swift_allocError();
    uint64_t v29 = v28;
    sub_1C01AC8BC();
    *uint64_t v29 = &type metadata for FeedServiceOptions.Database;
    uint64_t v30 = v38;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v30);
    a1 = v48;
LABEL_7:
    uint64_t v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  int v22 = *(unsigned __int8 *)(v21 + 32);
  if (*(unsigned char *)(v21 + 32))
  {
    if (v22 == 1)
    {
      char v50 = 1;
      sub_1C0089B50();
      uint64_t v23 = v18;
      uint64_t v24 = v38;
      sub_1C15205CC();
      uint64_t v26 = v43;
      uint64_t v25 = v44;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
    }
    else
    {
      char v51 = 2;
      sub_1C0089A4C();
      uint64_t v34 = v19;
      uint64_t v35 = v38;
      sub_1C15205CC();
      uint64_t v26 = v43;
      uint64_t v36 = v44;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v35);
    }
  }
  else
  {
    uint64_t v47 = (char *)v21;
    char v49 = 0;
    sub_1C0089C54();
    uint64_t v33 = v38;
    sub_1C15205CC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v33);
    uint64_t v26 = v43;
  }
  *uint64_t v26 = v22;
  uint64_t v31 = (uint64_t)v48;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

uint64_t FeedServiceOptions.RootCursorSource.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1BFC76340(0, &qword_1EB863480, (uint64_t (*)(void))sub_1C008A858, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.NetworkOnlyCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v70 = (char *)&v55 - v5;
  sub_1BFC76340(0, &qword_1EB8634A0, (uint64_t (*)(void))sub_1C008A448, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseDateIntervalCodingKeys, v3);
  uint64_t v75 = v6;
  uint64_t v66 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v71 = (char *)&v55 - v7;
  sub_1BFC76340(0, &qword_1EB863498, (uint64_t (*)(void))sub_1C008A54C, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseMaxAgeCodingKeys, v3);
  uint64_t v62 = v8;
  uint64_t v65 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v69 = (char *)&v55 - v9;
  sub_1BFC76340(0, &qword_1EB863490, (uint64_t (*)(void))sub_1C008A650, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseCodingKeys, v3);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = (char *)&v55 - v11;
  sub_1BFC76340(0, &qword_1EB863488, (uint64_t (*)(void))sub_1C008A754, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.DatabaseOnlyCodingKeys, v3);
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v67 = (char *)&v55 - v13;
  sub_1BFC76340(0, &qword_1EB863478, (uint64_t (*)(void))sub_1C008A98C, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.CodingKeys, v3);
  uint64_t v73 = *(void *)(v14 - 8);
  uint64_t v74 = v14;
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)&v55 - v15;
  uint64_t v17 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  int v22 = (char *)&v55 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v55 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C008A98C();
  uint64_t v26 = v76;
  sub_1C1520EBC();
  uint64_t v27 = (uint64_t)a1;
  if (v26) {
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  uint64_t v55 = v22;
  uint64_t v57 = 0;
  uint64_t v56 = v19;
  uint64_t v29 = v74;
  uint64_t v28 = v75;
  uint64_t v30 = (char *)v17;
  uint64_t v76 = v27;
  uint64_t v31 = sub_1C152070C();
  uint64_t v32 = (char *)v31;
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v35 = sub_1C15201EC();
    swift_allocError();
    uint64_t v37 = v36;
    sub_1C01AC8BC();
    *uint64_t v37 = v30;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, *MEMORY[0x1E4FBBA70], v35);
    swift_willThrow();
LABEL_14:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v16, v29);
    uint64_t v27 = v76;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v78 = 1;
      sub_1C008A650();
      uint64_t v38 = v68;
      uint64_t v39 = v57;
      sub_1C15205CC();
      if (v39) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v16, v29);
      goto LABEL_17;
    case 2:
      char v79 = 2;
      sub_1C008A54C();
      uint64_t v40 = v69;
      uint64_t v41 = v57;
      sub_1C15205CC();
      if (v41) {
        goto LABEL_14;
      }
      uint64_t v42 = v62;
      sub_1C15206BC();
      uint64_t v43 = v73;
      uint64_t v52 = v51;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v29);
      uint64_t v53 = (uint64_t)v55;
      *uint64_t v55 = v52;
      goto LABEL_18;
    case 3:
      char v80 = 3;
      sub_1C008A448();
      uint64_t v44 = v71;
      uint64_t v45 = v57;
      sub_1C15205CC();
      if (v45) {
        goto LABEL_14;
      }
      uint64_t v69 = v30;
      uint64_t v70 = v32;
      sub_1C151555C();
      sub_1BFC42EC8(&qword_1EB862820, MEMORY[0x1E4F26E60]);
      uint64_t v46 = (uint64_t)v56;
      sub_1C15206EC();
      uint64_t v47 = v73;
      uint64_t v53 = v46;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v29);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      sub_1BFC69940(v53, (uint64_t)v25);
      goto LABEL_19;
    case 4:
      char v81 = 4;
      sub_1C008A858();
      uint64_t v48 = v70;
      uint64_t v49 = v57;
      sub_1C15205CC();
      if (v49) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v16, v29);
      goto LABEL_17;
    default:
      char v77 = 0;
      sub_1C008A754();
      uint64_t v33 = v67;
      uint64_t v34 = v57;
      sub_1C15205CC();
      if (v34) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v16, v29);
LABEL_17:
      swift_storeEnumTagMultiPayload();
LABEL_19:
      uint64_t v54 = v76;
      sub_1BFC69940((uint64_t)v25, v72);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v54);
      break;
  }
  return result;
}

void sub_1BFC76340(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1BFC763A8()
{
  sub_1BFC763DC();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC763DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t destroy for FormatSupplementaryNodeStyle.Selector(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 34) != 255)
  {
    uint64_t v3 = *(unsigned __int16 *)(a1 + 32) | (*(unsigned __int8 *)(a1 + 34) << 16);
    return sub_1BFFA742C(*(void *)(a1 + 24), v3, SBYTE2(v3), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  }
  return result;
}

uint64_t sub_1BFC76480()
{
  return sub_1C15199CC();
}

uint64_t destroy for CoverChannelViewLayout()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t destroy for FormatProcessedColor()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC76654()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC766A4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC76704()
{
  unint64_t result = qword_1EB88E800;
  if (!qword_1EB88E800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E800);
  }
  return result;
}

uint64_t sub_1BFC76758()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFC76798()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC76834()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC76898()
{
  return swift_initClassMetadata2();
}

void *_s8NewsFeed41FormatButtonNodeStateMaskLayoutAttributesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t FeedCursorTracker.markSeen(group:sessionIdentifier:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  unint64_t v67 = a1;
  uint64_t v4 = *(void *)(*(void *)v3 + 80);
  uint64_t v5 = type metadata accessor for FeedCursorTrackerGroup();
  uint64_t v6 = sub_1C151FD8C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v64 = (char *)&v57 - v7;
  uint64_t v8 = sub_1C151631C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v58 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v60 = v4;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v66 = v5;
  uint64_t v63 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v65 = (uint64_t *)((char *)&v57 - v14);
  sub_1C1517E7C();
  uint64_t v15 = (uint64_t *)&v3[*(void *)(*(void *)v3 + 104)];
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v59 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  swift_bridgeObjectRetain();
  unint64_t v17 = v67;
  uint64_t v18 = sub_1C151811C();
  char v20 = sub_1BFF896B4(v18, v19, v16);
  swift_bridgeObjectRelease();
  uint64_t v21 = v3;
  swift_bridgeObjectRelease();
  if (v20) {
    return sub_1C1517E8C();
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v12, v17, AssociatedTypeWitness);
  uint64_t v22 = v62;
  swift_bridgeObjectRetain();
  uint64_t v23 = (uint64_t)v58;
  sub_1C151630C();
  uint64_t v24 = v65;
  sub_1C1277B2C((uint64_t)v12, v61, v22, v23, v65);
  uint64_t v25 = sub_1C151811C();
  uint64_t v27 = v26;
  swift_beginAccess();
  sub_1BFEFFC1C(v69, v25, v27);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1C151811C();
  uint64_t v30 = v29;
  uint64_t v32 = v63;
  uint64_t v31 = v64;
  uint64_t v33 = v24;
  uint64_t v34 = v66;
  (*(void (**)(char *, uint64_t *, uint64_t))(v63 + 16))(v64, v33, v66);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v31, 0, 1, v34);
  v69[0] = v28;
  v69[1] = v30;
  swift_beginAccess();
  sub_1C151E41C();
  sub_1C151E44C();
  swift_endAccess();
  unint64_t v35 = (*(uint64_t (**)(uint64_t))(v59 + 32))(AssociatedTypeWitness);
  unint64_t v36 = v35;
  uint64_t v37 = v32;
  if (!(v35 >> 62))
  {
    uint64_t v38 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v38) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
LABEL_15:
    swift_beginAccess();
    uint64_t v53 = v41[2];
    if (v53)
    {
      uint64_t v54 = v41 + 5;
      do
      {
        uint64_t v55 = *(v54 - 1);
        uint64_t v56 = *v54;
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(v69, v55, v56);
        swift_bridgeObjectRelease();
        v54 += 2;
        --v53;
      }
      while (v53);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    (*(void (**)(uint64_t *, uint64_t))(v37 + 8))(v65, v66);
    return sub_1C1517E8C();
  }
  uint64_t v38 = sub_1C15204BC();
  if (!v38) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v68 = (void *)MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF661B8(0, v38 & ~(v38 >> 63), 0);
  if ((v38 & 0x8000000000000000) == 0)
  {
    uint64_t v64 = v21;
    uint64_t v40 = 0;
    uint64_t v41 = v68;
    unint64_t v67 = v36 & 0xC000000000000001;
    uint64_t v42 = v32;
    unint64_t v43 = v36;
    uint64_t v44 = v38;
    do
    {
      if (v67)
      {
        uint64_t v45 = (void *)MEMORY[0x1C18C7CB0](v40, v36);
      }
      else
      {
        uint64_t v45 = *(void **)(v36 + 8 * v40 + 32);
        swift_unknownObjectRetain();
      }
      id v46 = objc_msgSend(v45, sel_itemID);
      uint64_t v47 = sub_1C151E62C();
      uint64_t v49 = v48;
      swift_unknownObjectRelease();

      uint64_t v68 = v41;
      unint64_t v51 = v41[2];
      unint64_t v50 = v41[3];
      if (v51 >= v50 >> 1)
      {
        sub_1BFF661B8(v50 > 1, v51 + 1, 1);
        uint64_t v41 = v68;
      }
      ++v40;
      v41[2] = v51 + 1;
      uint64_t v52 = &v41[2 * v51];
      v52[4] = v47;
      v52[5] = v49;
      unint64_t v36 = v43;
    }
    while (v44 != v40);
    uint64_t v37 = v42;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC76FF4(char a1)
{
  uint64_t result = 0x756C61566D6F7266;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65756C61566F74;
      break;
    case 2:
      uint64_t result = 0x65756C61567962;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatFeedGroup.personalizingItems.getter()
{
  type metadata accessor for FormatFeedGroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFC770AC(char a1)
{
  if (a1) {
    return 1885433183;
  }
  else {
    return 0x7365756C6176;
  }
}

uint64_t sub_1BFC770D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC77108();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC77108()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC77154(void *a1)
{
  return FormatButtonNodeAction.encode(to:)(a1);
}

unint64_t sub_1BFC7716C()
{
  return sub_1C0785C84(*v0);
}

uint64_t sub_1BFC77174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for GroupLayoutContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1BFDF9734(v1 + v4, v6, v7, a1);
}

uint64_t sub_1BFC7721C()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C040D684;
  }
  else {
    uint64_t v2 = sub_1BFD00230;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t SharingActivityItemFactory.init(commandCenter:shareLinkProvider:shareLinkTextProvider:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4)
{
  *(void *)(v4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BFC773DC(a3, v4 + 32);
  sub_1BFC773DC(a4, v4 + 72);
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 224) = 0u;
  return v4;
}

uint64_t sub_1BFC773DC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *assignWithTake for PuzzleStatsState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1BFC774A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BFC77518()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFC77624()
{
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1C1519A3C();
  swift_release();
  sub_1C1519A4C();
  uint64_t result = swift_release();
  if (v0) {
    return result;
  }
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v3 >> 60 == 15)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  swift_getAssociatedTypeWitness();
  sub_1C151864C();
  return sub_1BFE95878(v2, v3);
}

void *WebEmbedManager.init(resolver:)(long long *a1)
{
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for WebEmbedCache();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC868];
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 24) = v5;
  *(void *)(v3 + 64) = 0;
  *(_OWORD *)(v3 + 32) = xmmword_1C159ED70;
  *(void *)(v3 + 48) = 27;
  *(unsigned char *)(v3 + 56) = 1;
  v1[9] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  *(void *)(v6 + 64) = 0;
  *(void *)(v6 + 40) = 0;
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 32) = 2;
  *(unsigned char *)(v6 + 56) = 0;
  v1[10] = v6;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v5;
  *(void *)(v7 + 64) = 0;
  *(void *)(v7 + 40) = 0;
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 32) = 1;
  *(unsigned char *)(v7 + 56) = 0;
  v1[11] = v7;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v5;
  *(void *)(v8 + 64) = 0;
  *(void *)(v8 + 40) = 0;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 32) = 2;
  *(unsigned char *)(v8 + 56) = 0;
  v1[12] = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v5;
  *(void *)(v9 + 64) = 0;
  *(void *)(v9 + 40) = 0;
  *(void *)(v9 + 48) = 0;
  *(void *)(v9 + 32) = 1;
  *(unsigned char *)(v9 + 56) = 0;
  v1[13] = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v4;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 64) = 0;
  *(void *)(v10 + 40) = 0;
  *(void *)(v10 + 48) = 0;
  *(void *)(v10 + 32) = 2;
  *(unsigned char *)(v10 + 56) = 0;
  v1[14] = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v5;
  *(void *)(v11 + 64) = 0;
  *(void *)(v11 + 40) = 0;
  *(void *)(v11 + 48) = 0;
  *(void *)(v11 + 32) = 2;
  *(unsigned char *)(v11 + 56) = 0;
  v1[15] = v11;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v4;
  *(void *)(v12 + 24) = v5;
  *(void *)(v12 + 64) = 0;
  *(void *)(v12 + 40) = 0;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 32) = 2;
  *(unsigned char *)(v12 + 56) = 0;
  uint64_t v13 = MEMORY[0x1E4FBC870];
  v1[16] = v12;
  v1[17] = v13;
  v1[18] = v4;
  sub_1BFC773DC(a1, (uint64_t)(v1 + 4));
  return v1;
}

id SocialLayerSharedItemCenter.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed27SocialLayerSharedItemCenter_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  sub_1C0092AEC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFD988B4(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  uint64_t v3 = v0;
  sub_1C151FFBC();
  sub_1C00918D8();
  swift_allocObject();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed27SocialLayerSharedItemCenter_lazyHighlightCenter] = sub_1C1518D1C();

  v5.receiver = v3;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1BFC77B18()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC77BA8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC77BF8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC77C58()
{
  unint64_t result = qword_1EB88A260;
  if (!qword_1EB88A260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A260);
  }
  return result;
}

uint64_t destroy for FormatGroupCollection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC77CF0()
{
  uint64_t result = sub_1C151FD8C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

double sub_1BFC77E2C@<D0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFC78050(0, &qword_1EB882710, (uint64_t)&type metadata for FeedEditionConfig.FetchWindow, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C152A660;
  *(void *)(v3 + 32) = &unk_1F1B64E20;
  *(void *)(v3 + 40) = 6;
  *(unsigned char *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 64) = 1;
  *(void *)(v3 + 72) = 20;
  *(unsigned char *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  *(unsigned char *)(v3 + 96) = 1;
  *(void *)(v3 + 104) = &unk_1F1B64F00;
  *(void *)(v3 + 112) = 0;
  *(unsigned char *)(v3 + 120) = 1;
  *(void *)(v3 + 128) = -1;
  *(unsigned char *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 4;
  *(unsigned char *)(v3 + 152) = 0;
  *(void *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 168) = 1;
  *(void *)(v3 + 176) = &unk_1F1B64F60;
  *(void *)(v3 + 184) = 0;
  *(unsigned char *)(v3 + 192) = 1;
  *(void *)(v3 + 200) = -1;
  *(unsigned char *)(v3 + 208) = 0;
  *(void *)(v3 + 216) = 12;
  *(unsigned char *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(unsigned char *)(v3 + 240) = 1;
  *(void *)(v3 + 248) = &unk_1F1B64FC0;
  *(void *)(v3 + 256) = 0;
  *(unsigned char *)(v3 + 264) = 1;
  *(void *)(v3 + 272) = 0;
  *(unsigned char *)(v3 + 280) = 1;
  *(void *)(v3 + 288) = 0;
  *(unsigned char *)(v3 + 296) = 1;
  *(void *)(v3 + 304) = -24;
  *(unsigned char *)(v3 + 312) = 0;
  sub_1BFC78050(0, &qword_1EB882718, (uint64_t)&type metadata for FeedEditionConfig.RepoolInterval, v2);
  uint64_t v4 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v4 + 16) = xmmword_1C1527210;
  *(void *)(v4 + 32) = &unk_1F1B65020;
  *(void *)(v4 + 40) = 205200;
  *(void *)(v4 + 48) = &unk_1F1B65100;
  *(void *)(v4 + 56) = 86400;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void sub_1BFC77FBC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C151FD8C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1BFC78004(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFC78050(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for FeedItemRendererTool()
{
  return self;
}

uint64_t sub_1BFC780C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

uint64_t sub_1BFC78140@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C08AF3BC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1BFC7816C()
{
  if (!qword_1EB884E18)
  {
    sub_1C0077294();
    sub_1C0077390();
    sub_1C007733C();
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884E18);
    }
  }
}

uint64_t sub_1BFC781F0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC7828C()
{
  return sub_1C1520BBC();
}

void sub_1BFC782A4(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  unsigned __int8 v13 = objc_msgSend(a5, sel_respondsToSelector_, sel_fetchedAppConfiguration);
  swift_retain();
  if ((v13 & 1) != 0
    && (id v14 = objc_msgSend(a5, sel_fetchedAppConfiguration)) != 0)
  {
    id v15 = v14;
    swift_release();
    v19[0] = v15;
    a1(v19);
    swift_unknownObjectRelease();
  }
  else if (a6)
  {
    swift_release();
    v19[0] = objc_msgSend(a5, sel_possiblyUnfetchedAppConfiguration);
    a1(v19);
    swift_unknownObjectRelease();
  }
  else
  {
    FCCurrentQoS();
    id v16 = (id)FCDispatchQueueForQualityOfService();
    unint64_t v17 = (void *)swift_allocObject();
    v17[2] = sub_1C03CD68C;
    v17[3] = v12;
    v17[4] = a3;
    v17[5] = a4;
    void v19[4] = sub_1C03CD4D0;
    void v19[5] = v17;
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 1107296256;
    long long v19[2] = sub_1C03CCF04;
    v19[3] = &block_descriptor_21;
    uint64_t v18 = _Block_copy(v19);
    swift_retain();
    swift_release();
    objc_msgSend(a5, sel_fetchAppConfigurationIfNeededWithCompletionQueue_completion_, v16, v18);
    _Block_release(v18);
  }
}

uint64_t sub_1BFC784AC@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEC06E0(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v14[-v3];
  uint64_t v5 = sub_1C151836C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB884820 != -1) {
    swift_once();
  }
  sub_1C151703C();
  swift_release();
  if (v14[15] == 1)
  {
    if (qword_1EB884C08 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB881468);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
    sub_1C151926C();
    uint64_t v11 = sub_1C15187BC();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    sub_1C151925C();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    if (qword_1EB884C08 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB881468);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v13, v6);
  }
}

uint64_t FeedLayoutContext.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FormatContent.Resolved.subgroups.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFC7880C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C151DA7C();
  uint64_t result = sub_1C151814C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFCB6824(0, (unint64_t *)&unk_1EB894950);
    uint64_t result = sub_1C151815C();
    if (v7)
    {
      uint64_t v5 = sub_1C151D9EC();
      swift_allocObject();
      uint64_t result = sub_1C151D9DC();
      uint64_t v6 = MEMORY[0x1E4F7AFA0];
      a2[3] = v5;
      a2[4] = v6;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC7893C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0064054();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatSystemFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB896B90 != -1) {
    swift_once();
  }
  sub_1C151703C();
  swift_release();
  type metadata accessor for FormatDecorationProviderFactory();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v4;
  *(unsigned char *)(result + 32) = 0;
  *(unsigned char *)(result + 33) = v5;
  *(_OWORD *)(result + 40) = 0u;
  *(_OWORD *)(result + 56) = 0u;
  *(_OWORD *)(result + 72) = 0u;
  *(_OWORD *)(result + 88) = 0u;
  *(void *)(result + 104) = 0;
  return result;
}

uint64_t sub_1BFC78A78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFCB6824(0, &qword_1EB895420);
    uint64_t result = sub_1C151819C();
    if (v9)
    {
      uint64_t v6 = type metadata accessor for SportsDataConfigurationService();
      uint64_t v7 = swift_allocObject();
      sub_1C1517DCC();
      swift_allocObject();
      *(void *)(v7 + 64) = sub_1C1517DBC();
      *(void *)(v7 + 16) = v5;
      uint64_t result = sub_1BFC773DC(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F1B95178;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC78BA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895B70);
  uint64_t result = sub_1C151819C();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C00915CC();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      __n128 v7 = MEMORY[0x1F4188790](v6);
      uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for LayeredMediaVariantFactory();
      v21[3] = v12;
      v21[4] = &off_1F1B9F868;
      v21[0] = v11;
      uint64_t v13 = type metadata accessor for LayeredMediaLayerProviderFactory();
      id v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v12);
      __n128 v16 = MEMORY[0x1F4188790](v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      v14[5] = v12;
      v14[6] = &off_1F1B9F868;
      v14[2] = v20;
      v14[7] = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v13;
      a2[4] = &protocol witness table for LayeredMediaLayerProviderFactory;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1BFC78E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  v3[2] = MEMORY[0x1E4FBC870];
  v3[3] = v8;
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA868];
  sub_1BFEE7F7C(0, (unint64_t *)&unk_1EB8903A0, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
  sub_1C1517E9C();
  sub_1C008E358((unint64_t *)&qword_1EB87C6F0, MEMORY[0x1E4FAA868]);
  sub_1BFEE7F7C(0, (unint64_t *)&unk_1EB880C60, v9, MEMORY[0x1E4FBB320]);
  sub_1BFD656C0();
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t v10 = sub_1C1517EBC();
  v3[4] = a1;
  v3[5] = a2;
  v3[6] = a3;
  v3[7] = v10;
  return v3;
}

uint64_t sub_1BFC79030@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatFileReferenceCollection.init(from:)(a1, a2);
}

uint64_t FormatTextLineBreakMode.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v50 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v49 = (char *)&v44 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v48 = (char *)&v44 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)&v44 - v10;
  MEMORY[0x1F4188790](v11);
  id v46 = (char *)&v44 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v45 = (char *)&v44 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v44 - v16;
  uint64_t v51 = *v1;
  uint64_t v52 = a1;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAB0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  v22(v17, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = v55;
  sub_1BFE97CE8((uint64_t)v17, (uint64_t)sub_1C01B158C, 0, v18, v19);
  if (v23) {
    return sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  }
  sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  uint64_t v25 = v52;
  uint64_t v55 = 0;
  switch(v51)
  {
    case 1:
      uint64_t v29 = v52[3];
      uint64_t v51 = v52[4];
      __swift_project_boxed_opaque_existential_1(v52, v29);
      uint64_t v30 = (uint64_t)v46;
      v22(v46, v21, v20);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = v55;
      sub_1BFE97CE8(v30, (uint64_t)sub_1C01B158C, 0, v29, v51);
      uint64_t result = sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
      if (!v31) {
        goto LABEL_18;
      }
      break;
    case 2:
      uint64_t v32 = v52[3];
      uint64_t v51 = v52[4];
      __swift_project_boxed_opaque_existential_1(v52, v32);
      uint64_t v33 = (uint64_t)v47;
      v22(v47, v21, v20);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = v55;
      sub_1BFE97CE8(v33, (uint64_t)sub_1C01B158C, 0, v32, v51);
      uint64_t result = sub_1BFEFEB68(v33, type metadata accessor for FormatVersionRequirement);
      if (!v34) {
        goto LABEL_18;
      }
      break;
    case 3:
      uint64_t v35 = v52[3];
      uint64_t v51 = v52[4];
      __swift_project_boxed_opaque_existential_1(v52, v35);
      uint64_t v36 = (uint64_t)v48;
      v22(v48, v21, v20);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v55;
      sub_1BFE97CE8(v36, (uint64_t)sub_1C01B158C, 0, v35, v51);
      uint64_t result = sub_1BFEFEB68(v36, type metadata accessor for FormatVersionRequirement);
      if (!v37) {
        goto LABEL_18;
      }
      break;
    case 4:
      uint64_t v38 = v52[3];
      uint64_t v51 = v52[4];
      __swift_project_boxed_opaque_existential_1(v52, v38);
      uint64_t v39 = (uint64_t)v49;
      v22(v49, v21, v20);
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v55;
      sub_1BFE97CE8(v39, (uint64_t)sub_1C01B158C, 0, v38, v51);
      uint64_t result = sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
      if (!v40) {
        goto LABEL_18;
      }
      break;
    case 5:
      uint64_t v41 = v52[3];
      uint64_t v51 = v52[4];
      __swift_project_boxed_opaque_existential_1(v52, v41);
      uint64_t v42 = (uint64_t)v50;
      v22(v50, v21, v20);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = v55;
      sub_1BFE97CE8(v42, (uint64_t)sub_1C01B158C, 0, v41, v51);
      uint64_t result = sub_1BFEFEB68(v42, type metadata accessor for FormatVersionRequirement);
      if (!v43) {
        goto LABEL_18;
      }
      break;
    default:
      uint64_t v26 = v52[3];
      uint64_t v51 = v52[4];
      __swift_project_boxed_opaque_existential_1(v52, v26);
      uint64_t v27 = (uint64_t)v45;
      v22(v45, v21, v20);
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = v55;
      sub_1BFE97CE8(v27, (uint64_t)sub_1C01B158C, 0, v26, v51);
      uint64_t result = sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
      if (!v28)
      {
LABEL_18:
        __swift_project_boxed_opaque_existential_1(v25, v25[3]);
        sub_1C1520EEC();
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v53, v54);
        sub_1C1520AFC();
        swift_bridgeObjectRelease();
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      }
      break;
  }
  return result;
}

uint64_t FormatSizeConstraint.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v22 = (char *)&v21 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v21 = (char *)&v21 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  int v24 = *v1;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C151928C();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB93CA98);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v16(v11, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v28;
  sub_1BFE97CE8((uint64_t)v11, (uint64_t)sub_1C01B158C, 0, v12, v13);
  uint64_t result = sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v17)
  {
    uint64_t v19 = v25[3];
    uint64_t v28 = v25[4];
    if (v24)
    {
      __swift_project_boxed_opaque_existential_1(v25, v19);
      uint64_t v20 = (uint64_t)v22;
      v16(v22, v15, v14);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v25, v19);
      uint64_t v20 = (uint64_t)v21;
      v16(v21, v15, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_1BFE97CE8(v20, (uint64_t)sub_1C01B158C, 0, v19, v28);
    sub_1BFEFEB68(v20, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t FormatFlexibleExpression.Direction.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v22 = (char *)&v21 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v21 = (char *)&v21 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  int v24 = *v1;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C151928C();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB93CAB0);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v16(v11, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v28;
  sub_1BFE97CE8((uint64_t)v11, (uint64_t)sub_1C01B158C, 0, v12, v13);
  uint64_t result = sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v17)
  {
    uint64_t v19 = v25[3];
    uint64_t v28 = v25[4];
    if (v24)
    {
      __swift_project_boxed_opaque_existential_1(v25, v19);
      uint64_t v20 = (uint64_t)v22;
      v16(v22, v15, v14);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v25, v19);
      uint64_t v20 = (uint64_t)v21;
      v16(v21, v15, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_1BFE97CE8(v20, (uint64_t)sub_1C01B158C, 0, v19, v28);
    sub_1BFEFEB68(v20, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t FormatFixedColor.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v76 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v75 = (char *)v63 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)v63 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)v63 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)v63 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v71 = (char *)v63 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v70 = (char *)v63 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v69 = (char *)v63 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v68 = (char *)v63 - v20;
  MEMORY[0x1F4188790](v21);
  unint64_t v67 = (char *)v63 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v66 = (char *)v63 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v65 = (char *)v63 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v64 = (char *)v63 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v63 - v30;
  uint64_t v32 = *v1;
  char v77 = a1;
  uint64_t v78 = v32;
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1C151928C();
  uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1EB93CAB0);
  uint64_t v37 = *(void *)(v35 - 8);
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  uint64_t v39 = v37 + 16;
  v38(v31, v36, v35);
  uint64_t v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v79;
  sub_1BFE97CE8((uint64_t)v31, (uint64_t)sub_1C01B158C, 0, v33, v34);
  if (v41) {
    return sub_1BFEFEB68((uint64_t)v31, type metadata accessor for FormatVersionRequirement);
  }
  v63[1] = v39;
  uint64_t v79 = v40;
  sub_1BFEFEB68((uint64_t)v31, type metadata accessor for FormatVersionRequirement);
  uint64_t v43 = v77;
  uint64_t v44 = v36;
  switch(v78)
  {
    case 1:
      uint64_t v45 = v77[3];
      uint64_t v46 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v45);
      uint64_t v47 = (uint64_t)v65;
      v38(v65, v44, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 2:
      uint64_t v48 = v77[3];
      uint64_t v49 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v48);
      uint64_t v47 = (uint64_t)v66;
      v38(v66, v44, v35);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = v47;
      uint64_t v51 = v48;
      uint64_t v52 = v49;
      goto LABEL_12;
    case 3:
      uint64_t v45 = v77[3];
      uint64_t v46 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v45);
      uint64_t v47 = (uint64_t)v67;
      v38(v67, v44, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 4:
      uint64_t v45 = v77[3];
      uint64_t v46 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v45);
      uint64_t v47 = (uint64_t)v68;
      v38(v68, v44, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 5:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v55 = (uint64_t)v69;
      v38(v69, v44, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 6:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v55 = (uint64_t)v70;
      v38(v70, v44, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 7:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v55 = (uint64_t)v71;
      v38(v71, v44, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 8:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v55 = (uint64_t)v72;
      v38(v72, v44, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 9:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v56 = v36;
      uint64_t v55 = (uint64_t)v73;
      v38(v73, v56, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 10:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v57 = v36;
      uint64_t v55 = (uint64_t)v74;
      v38(v74, v57, v35);
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 11:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v58 = v36;
      uint64_t v55 = (uint64_t)v75;
      v38(v75, v58, v35);
      swift_storeEnumTagMultiPayload();
LABEL_20:
      sub_1BFE97CE8(v55, (uint64_t)sub_1C01B158C, 0, v53, v54);
      uint64_t v59 = v43;
      goto LABEL_21;
    case 12:
      uint64_t v60 = v77[3];
      uint64_t v61 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v60);
      uint64_t v62 = v36;
      uint64_t v55 = (uint64_t)v76;
      v38(v76, v62, v35);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v55, (uint64_t)sub_1C01B158C, 0, v60, v61);
      uint64_t v59 = v43;
LABEL_21:
      sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
      uint64_t v43 = v59;
      break;
    default:
      uint64_t v45 = v77[3];
      uint64_t v46 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v45);
      uint64_t v47 = (uint64_t)v64;
      v38(v64, v44, v35);
      swift_storeEnumTagMultiPayload();
LABEL_11:
      uint64_t v50 = v47;
      uint64_t v51 = v45;
      uint64_t v52 = v46;
LABEL_12:
      sub_1BFE97CE8(v50, (uint64_t)sub_1C01B158C, 0, v51, v52);
      sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
      break;
  }
  __swift_project_boxed_opaque_existential_1(v43, v43[3]);
  sub_1C1520EEC();
  char v82 = v78;
  FormatFixedColor.rawValue.getter();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v80, v81);
  sub_1C1520AFC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
}

unint64_t sub_1BFC7AAA0()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7373616C63;
      break;
    case 2:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      unint64_t result = 0x6168706C61;
      break;
    case 4:
      unint64_t result = 0x73736572676F7270;
      break;
    case 5:
      unint64_t result = 0x6C6F436B63617274;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC7AB88()
{
  uint64_t v1 = 0x646F4D646E656C62;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_1BFC7ABDC()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F69736E656D6964;
  }
}

uint64_t sub_1BFC7AC38()
{
  uint64_t v1 = 0x6973736572707865;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_1BFC7AC8C()
{
  uint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F50726F68636E61;
      break;
    case 2:
      uint64_t result = 0x6F6974616D696E61;
      break;
    case 3:
      uint64_t result = 0x65646F4D6E7572;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC7AD28()
{
  uint64_t result = 0x6874646977;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E616C73;
      break;
    case 2:
      uint64_t result = 0x6564617267;
      break;
    case 3:
      uint64_t result = 0x6E6769736564;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatFlexibleExpression::Direction_optional __swiftcall FormatFlexibleExpression.Direction.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatSupplementary::Kind_optional __swiftcall FormatSupplementary.Kind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatSymbolScale_optional __swiftcall FormatSymbolScale.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatResizeAutoMask_optional __swiftcall FormatResizeAutoMask.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC7AF18@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

NewsFeed::FormatIssueCoverTraits_optional __swiftcall FormatIssueCoverTraits.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC7AFD0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (v7)
  {
    uint64_t v3 = v8;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C1517D0C();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v4 = result;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1BFCB6824(0, (unint64_t *)&qword_1EB88C2C8);
      sub_1C151819C();
      type metadata accessor for FormatLayoutViewRouter();
      char v5 = (void *)swift_allocObject();
      v5[2] = v7;
      v5[3] = v3;
      void v5[4] = v4;
      sub_1BFC882D4((uint64_t)v6, (uint64_t)(v5 + 5), &qword_1EB88C2D0, (unint64_t *)&qword_1EB88C2C8, (uint64_t)&protocol descriptor for FormatLayoutViewRouterType);
      return (uint64_t)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1BFC7B124@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatPackageInventory.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1BFC7B17C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, qword_1EB896288);
  uint64_t result = sub_1C151819C();
  if (!v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&qword_1EB8953E0);
  uint64_t result = sub_1C151819C();
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8955C0);
  uint64_t result = sub_1C151819C();
  if (v8)
  {
    uint64_t v5 = type metadata accessor for CategoryViewRenderer();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 176) = 0;
    *(unsigned char *)(v6 + 184) = 1;
    sub_1BFC773DC(&v13, v6 + 16);
    sub_1BFC773DC(&v11, v6 + 56);
    sub_1BFC773DC(&v9, v6 + 96);
    uint64_t result = sub_1BFC773DC(&v7, v6 + 136);
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for CategoryViewRenderer;
    *a2 = v6;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BFC7B378(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (!v15)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C151815C();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C151815C();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C151815C();
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8715B0);
  uint64_t result = sub_1C151819C();
  if (v7)
  {
    type metadata accessor for FeedItemRendererPipelineProcessor(0);
    uint64_t v3 = swift_allocObject();
    uint64_t v4 = v3 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions;
    uint64_t v5 = sub_1C151A9BC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_1BFC773DC(&v14, v3 + 16);
    sub_1BFC773DC(&v12, v3 + 56);
    sub_1BFC773DC(&v10, v3 + 96);
    sub_1BFC773DC(&v8, v3 + 136);
    sub_1BFC773DC(&v6, v3 + 176);
    return v3;
  }
LABEL_11:
  __break(1u);
  return result;
}

void *sub_1BFC7B5FC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A250);
  uint64_t result = (void *)sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A180);
  uint64_t result = (void *)sub_1C151818C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, &qword_1EB890228);
  uint64_t result = (void *)sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    type metadata accessor for FeedTagFactory();
    uint64_t result = (void *)swift_allocObject();
    result[2] = v3;
    result[3] = v4;
    result[4] = v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t FormatShareAttributionNode.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v52 = a2;
  sub_1BFE89214();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v51 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v6 = v5;
  uint64_t v53 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v43 - v7;
  sub_1C08B0608();
  uint64_t v10 = v9;
  uint64_t v54 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08B069C();
  sub_1C085F050(&qword_1EB892230, (void (*)(uint64_t))sub_1C08B069C);
  uint64_t v13 = (void *)v55;
  sub_1C1520EBC();
  long long v14 = v13;
  if (v13)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    uint64_t v29 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  *(void *)&long long v55 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *((void *)v19 - 2);
      uint64_t v23 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v25);
      *((void *)&v43 - 4) = &_s10CodingKeysON_58;
      *((void *)&v43 - 3) = sub_1C08B0720();
      *((void *)&v43 - 2) = sub_1C006DB44();
      *((void *)&v43 - 1) = sub_1C08B0774();
      swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FB14((uint64_t)&unk_1F1B6BC98);
      swift_release_n();
      sub_1C02570B4();
      long long v14 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v24;
      *(void *)(v27 + 8) = v23;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v23, 1);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v10);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_1C07F0DDC((uint64_t)v12, 0, 0, 0, (void (*)(void, __n128))sub_1C08B0608);
  uint64_t v22 = v21;
  long long v58 = xmmword_1C153AB20;
  char v59 = 0;
  sub_1C00687E0();
  sub_1C15206EC();
  long long v48 = xmmword_1C1557FA0;
  long long v58 = xmmword_1C1557FA0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v48;
    char v57 = 0;
    sub_1BFE1CFFC();
    sub_1C15206EC();
    unint64_t v28 = v60;
  }
  else
  {
    unint64_t v28 = 0xB000000000000008;
  }
  long long v58 = xmmword_1C1557FB0;
  char v59 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  *(void *)&long long v48 = v56;
  long long v47 = xmmword_1C1557FD0;
  long long v58 = xmmword_1C1557FD0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v47;
    char v57 = 0;
    sub_1C08B07C8();
    sub_1C15206EC();
    *(void *)&long long v47 = v28;
    uint64_t v31 = v55;
    uint64_t v46 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v31, v6);
  }
  else
  {
    *(void *)&long long v47 = v28;
    uint64_t v46 = MEMORY[0x1E4FBC860];
  }
  long long v55 = xmmword_1C1557FC0;
  long long v58 = xmmword_1C1557FC0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v55;
    char v57 = 0;
    sub_1C15206EC();
    uint64_t v32 = v60;
  }
  else
  {
    uint64_t v32 = 0;
  }
  long long v55 = xmmword_1C1557FE0;
  long long v58 = xmmword_1C1557FE0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v55;
    char v57 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    uint64_t v53 = v20;
    unint64_t v33 = v60;
  }
  else
  {
    uint64_t v53 = v20;
    unint64_t v33 = 0x8000000000000000;
  }
  long long v55 = xmmword_1C1557FF0;
  long long v58 = xmmword_1C1557FF0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v55;
    char v57 = 0;
    sub_1C15206EC();
    char v34 = v60;
  }
  else
  {
    char v34 = 1;
  }
  long long v58 = xmmword_1C1558010;
  char v59 = 0;
  sub_1BFE3CF9C();
  sub_1C152065C();
  *(void *)&long long v55 = a1;
  uint64_t v45 = v56;
  int v44 = BYTE8(v56);
  long long v43 = xmmword_1C1558020;
  long long v58 = xmmword_1C1558020;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v43;
    char v57 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v35 = v50;
    uint64_t v36 = v51;
    sub_1C15206EC();
    *(void *)&long long v43 = v32;
    uint64_t v37 = v36;
    uint64_t v38 = v12;
    uint64_t v39 = sub_1C1517E5C();
    uint64_t v40 = v37;
    uint64_t v32 = v43;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v40, v35);
  }
  else
  {
    uint64_t v38 = v12;
    uint64_t v39 = MEMORY[0x1E4FBC870];
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v10);
  uint64_t v41 = v52;
  uint64_t *v52 = v53;
  v41[1] = v22;
  uint64_t v42 = v48;
  v41[2] = v47;
  v41[3] = v42;
  v41[4] = v46;
  v41[5] = v32;
  v41[6] = v33;
  *((unsigned char *)v41 + 56) = v34;
  v41[8] = v45;
  *((unsigned char *)v41 + 72) = v44;
  v41[10] = v39;
  uint64_t v29 = v55;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_1BFC7C1D4(void *a1)
{
  sub_1BFE89214();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v52 = &v41[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v5 = v4;
  uint64_t v53 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v41[-v6];
  sub_1C08EE6B0();
  uint64_t v9 = v8;
  uint64_t v54 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BA10C();
  sub_1C085F050(&qword_1EB891E00, (void (*)(uint64_t))sub_1C08BA10C);
  uint64_t v13 = (uint64_t)v55;
  sub_1C1520EBC();
  long long v14 = (void *)v13;
  if (v13)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  long long v55 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *((void *)v19 - 2);
      uint64_t v24 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v25);
      sub_1C08BA190();
      sub_1C0079564();
      sub_1C08BA1E4();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FB14((uint64_t)&unk_1F1B6A818);
      swift_release_n();
      sub_1C02570B4();
      long long v14 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v23;
      *(void *)(v27 + 8) = v24;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v24, 1);
      (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v11, v9);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C08EE6B0);
  uint64_t v22 = v21;
  long long v49 = xmmword_1C153AB20;
  long long v58 = xmmword_1C153AB20;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v49;
    char v57 = 0;
    sub_1BFE1CFFC();
    sub_1C15206EC();
    unint64_t v29 = v60;
  }
  else
  {
    unint64_t v29 = 0xB000000000000008;
  }
  long long v58 = xmmword_1C1557FA0;
  char v59 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  *(void *)&long long v49 = v29;
  uint64_t v30 = v56;
  long long v48 = xmmword_1C1557FB0;
  long long v58 = xmmword_1C1557FB0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    uint64_t v47 = v30;
    long long v56 = v48;
    char v57 = 0;
    sub_1C08B07C8();
    sub_1C15206EC();
    uint64_t v46 = v20;
    uint64_t v31 = (uint64_t)v55;
    *(void *)&long long v48 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v31, v5);
    uint64_t v30 = v47;
  }
  else
  {
    uint64_t v46 = v20;
    *(void *)&long long v48 = MEMORY[0x1E4FBC860];
  }
  long long v58 = xmmword_1C1557FD0;
  char v59 = 0;
  uint64_t v53 = sub_1C152069C();
  long long v55 = (unsigned char *)v32;
  sub_1BFE9DEBC(0, &qword_1EB879CA0, (uint64_t)&type metadata for FormatStateViewNodeState, MEMORY[0x1E4FBB320]);
  long long v58 = xmmword_1C1557FC0;
  char v59 = 0;
  sub_1C0064C04();
  sub_1C15206EC();
  uint64_t v47 = v56;
  long long v45 = xmmword_1C1557FE0;
  long long v58 = xmmword_1C1557FE0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v45;
    char v57 = 0;
    sub_1C15206EC();
    uint64_t v33 = v60;
  }
  else
  {
    uint64_t v33 = 0;
  }
  long long v45 = xmmword_1C1557FF0;
  long long v58 = xmmword_1C1557FF0;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v45;
    char v57 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    uint64_t v43 = v33;
    *(void *)&long long v45 = v22;
    unint64_t v34 = v60;
  }
  else
  {
    uint64_t v43 = v33;
    *(void *)&long long v45 = v22;
    unint64_t v34 = 0x8000000000000000;
  }
  long long v44 = xmmword_1C1558010;
  long long v58 = xmmword_1C1558010;
  char v59 = 0;
  if (sub_1C152071C())
  {
    long long v56 = v44;
    char v57 = 0;
    sub_1C15206EC();
    LODWORD(v35) = v60;
  }
  else
  {
    LODWORD(v35) = 1;
  }
  type metadata accessor for FormatAnimationNodeStyle();
  long long v58 = xmmword_1C1558020;
  char v59 = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  uint64_t v36 = v46;
  uint64_t v37 = v56;
  long long v44 = xmmword_1C1558030;
  long long v58 = xmmword_1C1558030;
  char v59 = 0;
  if (sub_1C152071C())
  {
    int v42 = v35;
    uint64_t v46 = v36;
    long long v56 = v44;
    char v57 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v35 = v51;
    uint64_t v38 = v52;
    sub_1C15206EC();
    *(void *)&long long v44 = v37;
    uint64_t v39 = v11;
    uint64_t v40 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v38, v35);
    uint64_t v36 = v46;
    LOBYTE(v35) = v42;
  }
  else
  {
    *(void *)&long long v44 = v37;
    uint64_t v39 = v11;
    uint64_t v40 = MEMORY[0x1E4FBC870];
  }
  (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v39, v9);
  *(void *)&long long v58 = v49;
  *(void *)&long long v56 = v30;
  unint64_t v60 = v34;
  type metadata accessor for FormatStateViewNode();
  swift_allocObject();
  uint64_t KeyPath = FormatStateViewNode.init(identifier:size:resize:adjustments:stateMachineName:states:zIndex:visibility:isUserInteractionEnabled:animation:selectors:)(v36, v45, (uint64_t *)&v58, (uint64_t *)&v56, v48, v53, (uint64_t)v55, v47, v43, (uint64_t *)&v60, v35, v44, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t sub_1BFC7CE20(uint64_t *a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = *a1;
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v49 = (uint64_t)v39 - v7;
  uint64_t v8 = *(void *)(v5 + 80);
  uint64_t v44 = *(void *)(v5 + 88);
  uint64_t v45 = v8;
  uint64_t v9 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)v39 - v11;
  uint64_t v13 = sub_1C151FD8C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)v39 - v15;
  sub_1BFC3BA20();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v17 = MEMORY[0x1E4FBC870];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v17 = *(void *)&v12[*(int *)(v9 + 36)];
    uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    v18(v12, v9);
  }
  uint64_t v19 = v4[10];
  uint64_t v20 = v4[11];
  uint64_t v21 = v4[12];
  uint64_t v22 = v4[13];
  uint64_t v24 = v4[14];
  uint64_t v23 = v4[15];
  uint64_t v26 = v4[16];
  uint64_t v25 = v4[17];
  uint64_t v36 = v26;
  uint64_t v37 = v25;
  uint64_t v35 = v23;
  uint64_t v27 = v50;
  uint64_t v47 = v19;
  uint64_t v48 = v20;
  uint64_t v46 = sub_1BFC80560(v17, (uint64_t)a1, v51);
  swift_bridgeObjectRelease();
  uint64_t v50 = v27;
  if (v27) {
    return v23;
  }
  uint64_t v41 = v25;
  uint64_t v42 = v26;
  uint64_t v40 = v24;
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  uint64_t v43 = v23;
  uint64_t v30 = v46;
  sub_1C151997C();
  uint64_t v31 = v49;
  sub_1C1519BFC();
  swift_release();
  uint64_t v32 = sub_1C151631C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32);
  if (result != 1)
  {
    uint64_t v51 = type metadata accessor for FeedCursorManifest();
    v39[1] = v39;
    uint64_t v52 = v30;
    MEMORY[0x1F4188790](v51);
    v39[-8] = v28;
    v39[-7] = v29;
    v39[-6] = v21;
    v39[-5] = v22;
    uint64_t v35 = v40;
    uint64_t v36 = v43;
    uint64_t v37 = v42;
    uint64_t v38 = v41;
    sub_1BFC6CA08(0, &qword_1EB86B010);
    type metadata accessor for FeedCursorManifestGroupEntry();
    sub_1BFD989C8(&qword_1EB86B018, &qword_1EB86B010);
    uint64_t v34 = sub_1C151E97C();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1C008AFA0(v49, v34);
    swift_bridgeObjectRelease();
    return v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC7D2E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPublisherLogoSizeBinding.init(from:)(a1, a2);
}

uint64_t FormatPublisherLogoSizeBinding.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD7ED4, (uint64_t)&_s10CodingTypeON_52, (uint64_t)&unk_1F1B86F58, a2);
}

unint64_t sub_1BFC7D338()
{
  unint64_t result = qword_1EB8752E8;
  if (!qword_1EB8752E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8752E8);
  }
  return result;
}

uint64_t sub_1BFC7D38C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupTopicDiversityRequirements.init(from:)(a1, a2);
}

uint64_t FeedGroupTopicDiversityRequirements.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFC7D5D8(0, &qword_1EB86B630, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC7D63C();
  sub_1C1520EBC();
  if (!v2)
  {
    char v21 = 0;
    sub_1C15205FC();
    uint64_t v10 = v17;
    char v20 = v18;
    char v21 = 1;
    sub_1C15205FC();
    uint64_t v11 = v17;
    char v19 = v18;
    sub_1BFEBC4B4();
    char v21 = 2;
    sub_1BFE38978((unint64_t *)&qword_1EB87A020);
    sub_1C15205FC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v12 = v17;
    char v13 = v20;
    char v14 = v19;
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v13;
    *(void *)(a2 + 16) = v11;
    *(unsigned char *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFC7D5D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFC7D63C();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupTopicDiversityRequirements.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFC7D63C()
{
  unint64_t result = qword_1EB8654D8;
  if (!qword_1EB8654D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8654D8);
  }
  return result;
}

uint64_t sub_1BFC7D690@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLayeredMediaNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BFC7D6A8(uint64_t a1, void *a2)
{
  sub_1C1516F7C();
  char v3 = sub_1C151701C();
  swift_release();
  if (v3)
  {
    sub_1C1516F7C();
    sub_1C1516F6C();
    swift_release();
    type metadata accessor for AdsAssembly();
    sub_1C002C7B4(&qword_1EA1AA6B8, v4, (void (*)(uint64_t))type metadata accessor for AdsAssembly);
    sub_1C1516FBC();
    swift_release();
    return v8;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1C0063C8C();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      id v6 = objc_msgSend((id)result, sel_possiblyUnfetchedAppConfiguration);
      swift_unknownObjectRelease();
      if (objc_msgSend(v6, sel_respondsToSelector_, sel_feedAdScreenfulsToPrefetch))
      {
        id v7 = objc_msgSend(v6, sel_feedAdScreenfulsToPrefetch);
        swift_unknownObjectRelease();
        return (uint64_t)v7;
      }
      else
      {
        swift_unknownObjectRelease();
        return 3;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1BFC7D814()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC7D874()
{
  unint64_t result = qword_1EB879440;
  if (!qword_1EB879440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879440);
  }
  return result;
}

uint64_t sub_1BFC7D8C8(uint64_t a1)
{
  uint64_t v1 = sub_1C10EBBD0(a1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1BFD43E80(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  sub_1BFD43E80(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1540C60;
  uint64_t v7 = sub_1C10EB050(v1);
  swift_bridgeObjectRelease();
  *(void *)(v6 + 32) = v7;
  uint64_t v8 = sub_1C10EB4C4(v3);
  swift_bridgeObjectRelease();
  *(void *)(v6 + 40) = v8;
  swift_retain();
  sub_1C10EBA70(v5);
  swift_release();
  uint64_t v9 = (void *)sub_1C1518E7C();
  sub_1C0064DB8();
  sub_1C0064D60();
  sub_1C1518FAC();
  swift_bridgeObjectRelease();

  uint64_t v10 = (void *)sub_1C1518E7C();
  uint64_t v11 = sub_1C1518FFC();
  swift_bridgeObjectRelease();
  swift_release();

  *(void *)(v6 + 48) = v11;
  sub_1C151EBEC();
  sub_1C1518FBC();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_1C1518E7C();
  uint64_t v13 = sub_1C1518FFC();
  swift_release();

  return v13;
}

uint64_t sub_1BFC7DAEC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1BFC7DB4C(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    uint64_t v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 6) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C15DEBD0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 6)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

Swift::Void __swiftcall SportsEmbedConfigurationManager.sceneWillEnterForeground()()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v1 != 255)
  {
    if (v1)
    {
      sub_1C093651C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1C1518ECC();
      swift_release();
    }
  }
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v1 != 255)
  {
    if (v1)
    {
      sub_1C093651C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1C1518ECC();
      swift_release();
    }
  }
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v1 != 255)
  {
    if (v1)
    {
      sub_1C093651C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1C1518ECC();
      swift_release();
    }
  }
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v1 != 255)
  {
    if (v1)
    {
      sub_1C093651C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1C1518ECC();
      swift_release();
    }
  }
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v1 != 255)
  {
    if (v1)
    {
      sub_1C093651C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1C1518ECC();
      swift_release();
    }
  }
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v1 != 255)
  {
    if (v1)
    {
      sub_1C093651C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1C1518ECC();
      swift_release();
    }
  }
}

uint64_t sub_1BFC7E074()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC7E110(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v4 + 56);
  uint64_t v7 = sub_1C151631C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))((v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80), v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatSlotTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFC7E2FC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1BFC7E2FC(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatVariableCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC7E36C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BFC7E3A0(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v37 = a3;
  uint64_t v7 = (uint64_t)a1;
  unint64_t v8 = (void *)*a1;
  unint64_t v9 = (void *)*a1;
  uint64_t v10 = sub_1C151631C();
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v8[12];
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v40 = a2;
  sub_1BFC38B58((uint64_t)&v32 - v16);
  if (!v4)
  {
    uint64_t v18 = (*(uint64_t (**)(void))(v9[14] + 24))(v9[11]);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9[15] + 56))(v40, v18, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    swift_release();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    FeedCursorContainer.createdDate.getter(v36, (uint64_t)v12);
    uint64_t v20 = swift_getAssociatedTypeWitness();
    uint64_t v21 = swift_getAssociatedConformanceWitness();
    BOOL v33 = FeedServiceContextType.shouldRefreshRootCursor(createdDate:)((uint64_t)v12, v20, v21);
    uint64_t v22 = v39;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v38 + 8);
    v32(v12, v39);
    uint64_t v38 = *(void *)(v7 + 48);
    sub_1BFFDEB20();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
    uint64_t v24 = v36;
    FeedCursorContainer.createdDate.getter(v36, (uint64_t)v12);
    sub_1BFC50500();
    uint64_t v25 = sub_1C152088C();
    uint64_t v27 = v26;
    v32(v12, v22);
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 64) = sub_1BFE9C558();
    *(void *)(v23 + 32) = v25;
    *(void *)(v23 + 40) = v27;
    CFTimeInterval v28 = CACurrentMediaTime();
    uint64_t v29 = MEMORY[0x1E4FBB460];
    *(void *)(v23 + 96) = MEMORY[0x1E4FBB3D0];
    *(void *)(v23 + 104) = v29;
    *(CFTimeInterval *)(v23 + 72) = (v28 - a4) * 1000.0;
    sub_1C151F38C();
    if (v33)
    {
      uint64_t v30 = (uint64_t *)(v37 + 16);
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      LOBYTE(v41[0]) = 2;
      sub_1C0088B0C();
      sub_1C15184FC();
      swift_beginAccess();
      uint64_t v31 = *v30;
      *uint64_t v30 = v24;
      swift_retain();
      sub_1BFE14324(v31);
      uint64_t v7 = sub_1C0342100(v24, v40);
    }
    else
    {
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      LOBYTE(v41[0]) = 1;
      sub_1C0088B0C();
      sub_1C15184FC();
      type metadata accessor for FeedLocation();
      sub_1C151917C();
      sub_1C0085FE4(v24, v41);
      uint64_t v7 = sub_1C151907C();
    }
    swift_release();
  }
  return v7;
}

uint64_t sub_1BFC7E8AC@<X0>(uint64_t a1@<X0>, void *a2@<X3>, void *a3@<X4>, uint64_t a4@<X8>)
{
  if (a1 < 0) {
    uint64_t v5 = (a1 & 0x7FFFFFFFFFFFFFFFLL) + *a3;
  }
  else {
    uint64_t v5 = a1 + *a2;
  }
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a4, v5, v6);
}

uint64_t FeedCursorContainer.createdDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFC7E8AC(a1, &qword_1EB93C640, &qword_1EB93C2E0, a2);
}

uint64_t sub_1BFC7E944()
{
  uint64_t result = 0x63697274656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C797473;
      break;
    case 2:
      uint64_t result = 0x656D7473756A6461;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC7E9B8()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E656D6574617473;
      break;
    case 2:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ThumbnailProcessorRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  sub_1BFC7EAB0(v0 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border);
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC7EAB0(uint64_t a1)
{
  sub_1BFE45748(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFC7EB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a2;
  uint64_t v70 = *(void **)a1;
  uint64_t v3 = v70[13];
  uint64_t v4 = v70[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(char **)(AssociatedTypeWitness - 8);
  uint64_t v71 = *((void *)v74 + 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v72 = (char *)&v60 - v6;
  swift_getAssociatedTypeWitness();
  uint64_t v75 = v3;
  swift_getAssociatedConformanceWitness();
  uint64_t v73 = type metadata accessor for FeedServiceFetchResult();
  sub_1C151917C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v60 - v10;
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v69 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v60 - v16;
  sub_1BFC3BA20();
  uint64_t v76 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v18 = v77;
    return sub_1BFC94708(v18);
  }
  uint64_t v19 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v20 = v74 + 32;
  uint64_t v68 = (void (*)(char *, char *, uint64_t))*((void *)v74 + 4);
  v68(v17, v11, AssociatedTypeWitness);
  *(void *)&v17[v19] = *(void *)&v11[v19];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  FeedServiceContextType.feedMode.getter(AssociatedTypeWitness, AssociatedConformanceWitness, &v78);
  int v22 = v78;
  uint64_t v23 = v77;
  FeedServiceContextType.feedMode.getter(AssociatedTypeWitness, AssociatedConformanceWitness, v83);
  if (v22) {
    uint64_t v24 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v24 = 0x746C7561666564;
  }
  if (v83[0]) {
    uint64_t v25 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v25 = 0x746C7561666564;
  }
  if (v24 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v18 = v23;
    char v26 = sub_1C1520A9C();
    swift_bridgeObjectRelease_n();
    if ((v26 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v76 + 8))(v17, TupleTypeMetadata2);
      return sub_1BFC94708(v18);
    }
  }
  sub_1BFFDEB20();
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
  uint64_t v29 = a1 + *(void *)(*(void *)a1 + 184);
  char v30 = *(unsigned char *)(v29 + 8);
  unint64_t v67 = v20;
  uint64_t v64 = v4;
  uint64_t v31 = v19;
  if (v30)
  {
    uint64_t v32 = MEMORY[0x1E4FBB5C8];
    *(void *)(v27 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v27 + 64) = v32;
    *(void *)(v27 + 32) = -1;
  }
  else
  {
    double v33 = *(double *)v29;
    CFTimeInterval v34 = CACurrentMediaTime();
    uint64_t v80 = MEMORY[0x1E4FBB3D0];
    uint64_t v81 = MEMORY[0x1E4FBB460];
    *(double *)&long long v78 = (v34 - v33) * 1000.0;
    sub_1BFC773DC(&v78, v28 + 32);
  }
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v36 = v74 + 16;
  uint64_t v37 = (void (*)(char *, char *, uint64_t))*((void *)v74 + 2);
  uint64_t v38 = v69;
  v37(v69, v17, AssociatedTypeWitness);
  uint64_t v65 = &v60;
  uint64_t v39 = *(void *)&v17[v31];
  *(void *)&v38[v35] = v39;
  MEMORY[0x1F4188790](v39);
  uint64_t v40 = v70;
  uint64_t v62 = v70[11];
  uint64_t v41 = v62;
  uint64_t v63 = v70[12];
  uint64_t v42 = v63;
  uint64_t v43 = v64;
  *(&v60 - 8) = v64;
  *(&v60 - 7) = v41;
  uint64_t v44 = v75;
  *(&v60 - 6) = v42;
  *(&v60 - 5) = v44;
  uint64_t v66 = TupleTypeMetadata2;
  uint64_t v46 = v40[14];
  uint64_t v45 = v40[15];
  uint64_t v60 = v46;
  uint64_t v74 = v17;
  uint64_t v61 = v45;
  *(&v60 - 4) = v46;
  *(&v60 - 3) = v45;
  *(&v60 - 2) = (uint64_t)v38;
  swift_retain();
  uint64_t v70 = (void *)sub_1C151932C();
  uint64_t v47 = *(uint64_t **)(v76 + 8);
  v76 += 8;
  uint64_t v65 = v47;
  ((void (*)(char *, uint64_t))v47)(v38, TupleTypeMetadata2);
  uint64_t v48 = v72;
  v37(v72, (char *)v77, AssociatedTypeWitness);
  unint64_t v49 = (*((unsigned __int8 *)v36 + 64) + 64) & ~(unint64_t)*((unsigned __int8 *)v36 + 64);
  uint64_t v50 = (void *)swift_allocObject();
  uint64_t v51 = v62;
  v50[2] = v43;
  v50[3] = v51;
  uint64_t v52 = v63;
  uint64_t v53 = v75;
  v50[4] = v63;
  v50[5] = v53;
  uint64_t v54 = (char *)v50 + v49;
  uint64_t v55 = v60;
  uint64_t v56 = v61;
  v50[6] = v60;
  v50[7] = v56;
  v68(v54, v48, AssociatedTypeWitness);
  char v57 = (void *)sub_1C1518E7C();
  *(void *)&long long v78 = v43;
  *((void *)&v78 + 1) = v51;
  uint64_t v79 = v52;
  uint64_t v80 = v53;
  uint64_t v81 = v55;
  uint64_t v82 = v56;
  type metadata accessor for FeedManager();
  uint64_t v58 = sub_1C151900C();
  swift_release();
  swift_release();

  ((void (*)(char *, uint64_t))v65)(v74, v66);
  return v58;
}

uint64_t sub_1BFC7F298()
{
  uint64_t v1 = 0x656C797473;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702521203;
  }
}

uint64_t sub_1BFC7F2E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedBannerAdViewLayout.Attributes.init(from:)(a1, a2);
}

NewsFeed::FormatGroupPriority_optional __swiftcall FormatGroupPriority.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC7F354(void *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v119 = a2;
  uint64_t v115 = *MEMORY[0x1E4FBC8C8] & *v3;
  sub_1BFEDE21C();
  uint64_t v95 = v5;
  uint64_t v94 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v93 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFDE8FD0(0, &qword_1EB882BA0, MEMORY[0x1E4F7B090], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v89 = (char *)&v84 - v9;
  uint64_t v10 = sub_1C151D1EC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v87 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1C151DBAC();
  uint64_t v91 = *(void *)(v92 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v92);
  uint64_t v88 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v98 = (char *)&v84 - v14;
  sub_1BFDE8FD0(0, (unint64_t *)&qword_1EB8717D8, (uint64_t (*)(uint64_t))sub_1C002D084, v7);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v90 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v96 = (char *)&v84 - v18;
  sub_1C002D084();
  uint64_t v100 = v19;
  uint64_t v99 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  char v97 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1C151D32C();
  uint64_t v103 = *(void *)(v104 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v104);
  v101 = (long long *)((char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v102 = (char *)&v84 - v23;
  uint64_t v107 = sub_1C151D33C();
  uint64_t v106 = *(void *)(v107 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v107);
  uint64_t v85 = (uint64_t)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  v105 = (char *)&v84 - v26;
  sub_1BFDE8FD0(0, &qword_1EB873748, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, v7);
  MEMORY[0x1F4188790](v27 - 8);
  v114 = (char *)&v84 - v28;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  v112 = (char *)&v84 - v30;
  uint64_t v116 = type metadata accessor for FeedBannerAd();
  uint64_t v111 = *(void *)(v116 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v116);
  uint64_t v86 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  v108 = (uint64_t *)((char *)&v84 - v33);
  uint64_t v34 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v36 = swift_getAssociatedConformanceWitness();
  v124[0] = v34;
  v124[1] = AssociatedTypeWitness;
  v124[2] = AssociatedConformanceWitness;
  uint64_t v125 = v36;
  uint64_t v37 = sub_1C151CC9C();
  uint64_t v110 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v84 - v38;
  uint64_t v118 = sub_1C151A31C();
  uint64_t v109 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  v117 = (char *)&v84 - v40;
  id v41 = objc_msgSend(a1, sel_indexPathsForVisibleItems);
  sub_1C151677C();
  uint64_t v42 = sub_1C151EBCC();

  uint64_t v121 = v119;
  LOBYTE(v41) = sub_1BFC3E984((uint64_t (*)(char *))sub_1BFC3F7C4, (uint64_t)v120, v42);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
  {
    uint64_t result = sub_1C151C73C();
    if (result)
    {
      uint64_t v84 = v3;
      sub_1C151B3FC();
      uint64_t v44 = v117;
      sub_1C151CCAC();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v39, v37);
      uint64_t v45 = v112;
      uint64_t v46 = v118;
      sub_1C151A30C();
      uint64_t v47 = (uint64_t)v114;
      (*(void (**)(uint64_t))(*(void *)(v115 + 112) + 8))(AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v45, AssociatedTypeWitness);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v47, 1, v116) == 1)
      {
        (*(void (**)(char *, uint64_t))(v109 + 8))(v44, v46);
        return sub_1C0D8D1A0(v47, &qword_1EB873748, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd);
      }
      else
      {
        uint64_t v48 = v108;
        sub_1C0D8D0E4(v47, (uint64_t)v108);
        unint64_t v49 = v105;
        sub_1C151DB8C();
        uint64_t v50 = v106;
        uint64_t v51 = v107;
        if ((*(unsigned int (**)(char *, uint64_t))(v106 + 88))(v49, v107) == *MEMORY[0x1E4F7A898])
        {
          (*(void (**)(char *, uint64_t))(v50 + 96))(v49, v51);
          uint64_t v52 = v103;
          uint64_t v53 = v102;
          uint64_t v54 = v104;
          (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v49, v104);
          uint64_t v55 = v101;
          (*(void (**)(long long *, char *, uint64_t))(v52 + 16))(v101, v53, v54);
          int v56 = (*(uint64_t (**)(long long *, uint64_t))(v52 + 88))(v55, v54);
          if (v56 == *MEMORY[0x1E4F7A8B0])
          {
            (*(void (**)(long long *, uint64_t))(v52 + 96))(v55, v54);
            sub_1BFC773DC(v55, (uint64_t)v124);
            sub_1BFC773DC((long long *)((char *)v55 + 40), (uint64_t)v123);
            sub_1BFC66384((uint64_t)v123, (uint64_t)v122);
            sub_1C0D8D148();
            uint64_t v57 = (uint64_t)v96;
            uint64_t v58 = v100;
            int v59 = swift_dynamicCast();
            uint64_t v60 = v99;
            uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
            if (v59)
            {
              uint64_t v115 = *(void *)(v99 + 56);
              uint64_t v119 = v99 + 56;
              v61(v57, 0, 1, v58);
              (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v97, v57, v58);
              sub_1C151DB4C();
              uint64_t v62 = v85;
              sub_1BFC66384((uint64_t)v124, v85);
              (*(void (**)(uint64_t, void, uint64_t))(v106 + 104))(v62, *MEMORY[0x1E4F7A8C8], v107);
              sub_1C151DB4C();
              sub_1C151DA9C();
              swift_bridgeObjectRelease();
              sub_1C151DB5C();
              sub_1C151DB4C();
              __swift_project_boxed_opaque_existential_1(v124, v125);
              sub_1C151D5BC();
              uint64_t v63 = sub_1C151DB3C();
              uint64_t v64 = (uint64_t)v89;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v89, 1, 1, v63);
              uint64_t v65 = v97;
              sub_1C151DACC();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1C0D8D1A0(v64, &qword_1EB882BA0, MEMORY[0x1E4F7B090]);
              uint64_t v66 = *v48;
              uint64_t v67 = v48[1];
              uint64_t v68 = v91;
              uint64_t v69 = v88;
              uint64_t v70 = v92;
              (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v98, v92);
              uint64_t v71 = (int *)v116;
              uint64_t v72 = v86;
              *(void *)&v86[*(int *)(v116 + 24)] = qword_1F1B89D98;
              uint64_t v73 = &v72[v71[7]];
              *(void *)uint64_t v73 = 0;
              v73[8] = 1;
              *(_OWORD *)&v72[v71[8]] = xmmword_1C1533700;
              *(void *)uint64_t v72 = v66;
              *((void *)v72 + 1) = v67;
              (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v72[v71[5]], v69, v70);
              uint64_t v74 = v90;
              uint64_t v75 = v100;
              (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v90, v65, v100);
              ((void (*)(char *, void, uint64_t, uint64_t))v115)(v74, 0, 1, v75);
              sub_1BFDE8DCC(&qword_1EB895030, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
              swift_bridgeObjectRetain();
              swift_retain();
              uint64_t v76 = v93;
              sub_1C151D39C();
              sub_1BFDE8FD0(0, &qword_1EB87A5C8, (uint64_t (*)(uint64_t))sub_1BFEDE21C, MEMORY[0x1E4FBBE00]);
              uint64_t v77 = v94;
              unint64_t v78 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
              uint64_t v79 = swift_allocObject();
              *(_OWORD *)(v79 + 16) = xmmword_1C1529AE0;
              uint64_t v80 = v95;
              (*(void (**)(unint64_t, char *, uint64_t))(v77 + 16))(v79 + v78, v76, v95);
              FeedBannerAdIntegrator.integrateBannerAdUpdates(_:)((Swift::OpaquePointer)v79);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v80);
              (*(void (**)(char *, uint64_t))(v68 + 8))(v98, v70);
              (*(void (**)(char *, uint64_t))(v99 + 8))(v97, v100);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v123);
              (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
              sub_1BFF54924((uint64_t)v108);
              (*(void (**)(char *, uint64_t))(v109 + 8))(v117, v118);
            }
            else
            {
              v61(v57, 1, 1, v58);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v123);
              (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
              sub_1BFF54924((uint64_t)v48);
              (*(void (**)(char *, uint64_t))(v109 + 8))(v117, v118);
              sub_1C0D8D1A0(v57, (unint64_t *)&qword_1EB8717D8, (uint64_t (*)(uint64_t))sub_1C002D084);
            }
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
          }
          else
          {
            int v81 = v56;
            int v82 = *MEMORY[0x1E4F7A8A8];
            uint64_t v83 = *(void (**)(char *, uint64_t))(v52 + 8);
            v83(v53, v54);
            sub_1BFF54924((uint64_t)v48);
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v44, v46);
            if (v81 != v82) {
              return ((uint64_t (*)(long long *, uint64_t))v83)(v101, v104);
            }
          }
        }
        else
        {
          sub_1BFF54924((uint64_t)v48);
          (*(void (**)(char *, uint64_t))(v109 + 8))(v44, v46);
          return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v49, v51);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFC80560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v31[2] = a3;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFD98850(0, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v31 - v6;
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v4);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v31 - v9;
  uint64_t v11 = sub_1C151995C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v31 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v31 - v19;
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C008C448();
  v31[1] = sub_1C1519BCC();
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1BFE71F8C(v21);
  swift_bridgeObjectRelease();
  sub_1C0062DB4((uint64_t)v22);
  swift_release();
  sub_1C1519AFC();
  swift_bridgeObjectRelease();
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v23 = sub_1C151631C();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v10, 1, v23);
  if (result != 1)
  {
    void v32[3] = v23;
    v32[4] = MEMORY[0x1E4FAA600];
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
    (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 32))(boxed_opaque_existential_0, v10, v23);
    sub_1C1519AEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    sub_1C1519ADC();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v14, v11);
    v27(v17, v11);
    uint64_t v28 = sub_1C1519C5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
    uint64_t v29 = v32[6];
    uint64_t v30 = sub_1C1519D8C();
    if (!v29) {
      uint64_t v17 = (char *)v30;
    }
    swift_release();
    sub_1BFD987E0((uint64_t)v7, &qword_1EB85AD00, MEMORY[0x1E4FAA6E8]);
    v27(v20, v11);
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

void *sub_1BFC809D0(void *a1)
{
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v54 = v2;
  uint64_t v51 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v56 = (char *)&v45 - v3;
  sub_1BFC4359C();
  uint64_t v55 = v4;
  uint64_t v50 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v53 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v7 = v6;
  uint64_t v52 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08F1854();
  uint64_t v11 = v10;
  uint64_t v57 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v14);
  sub_1C08AEF74();
  sub_1C085F050(&qword_1EB8925E0, (void (*)(uint64_t))sub_1C08AEF74);
  uint64_t v15 = (void *)v58;
  sub_1C1520EBC();
  uint64_t v16 = v15;
  if (v15)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v14;
  }
  unint64_t v49 = v9;
  *(void *)&long long v58 = v7;
  uint64_t v17 = v57;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = sub_1C1520EAC();
  char v19 = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v56;
  if (v19)
  {
    uint64_t v21 = sub_1C152070C();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = (unsigned char *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22) {
          goto LABEL_7;
        }
      }
      uint64_t v27 = *((void *)v23 - 2);
      uint64_t v28 = *((void *)v23 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v29);
      *(void *)&long long v58 = v13;
      *(&v45 - 4) = (uint64_t)&_s10CodingKeysON_63;
      *(&v45 - 3) = sub_1C08AEFF8();
      *(&v45 - 2) = sub_1C0080098();
      *(&v45 - 1) = sub_1C08AF04C();
      swift_getKeyPath();
      swift_retain();
      uint64_t v14 = (void *)sub_1C085FB14((uint64_t)&unk_1F1B87570);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v16 = (void *)swift_allocError();
      *(void *)uint64_t v30 = v27;
      *(void *)(v30 + 8) = v28;
      *(void *)(v30 + 16) = v14;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v27, v28, 1);
      (*(void (**)(void, uint64_t))(v17 + 8))(v58, v11);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v46 = sub_1C07F0DDC((uint64_t)v13, 0, 0, 0, (void (*)(void, __n128))sub_1C08F1854);
  uint64_t v48 = v24;
  long long v47 = xmmword_1C153AB20;
  long long v61 = xmmword_1C153AB20;
  char v62 = 0;
  if (sub_1C152071C())
  {
    long long v59 = v47;
    char v60 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v25 = v49;
    uint64_t v26 = v58;
    sub_1C15206EC();
    uint64_t v32 = sub_1C1517E5C();
    uint64_t v33 = v26;
    uint64_t v34 = v32;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v33);
    uint64_t v35 = v57;
  }
  else
  {
    uint64_t v35 = v17;
    uint64_t v34 = MEMORY[0x1E4FBC870];
  }
  long long v58 = xmmword_1C1557FA0;
  long long v61 = xmmword_1C1557FA0;
  char v62 = 0;
  char v36 = sub_1C152071C();
  uint64_t v37 = v55;
  if (v36)
  {
    uint64_t v57 = v34;
    long long v59 = v58;
    char v60 = 0;
    sub_1C085F050(&qword_1EB884DD8, (void (*)(uint64_t))sub_1BFC4359C);
    uint64_t v38 = v53;
    sub_1C15206EC();
    *(void *)&long long v58 = a1;
    uint64_t v39 = sub_1C1517E5C();
    uint64_t v40 = v37;
    uint64_t v41 = v39;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v40);
    uint64_t v34 = v57;
  }
  else
  {
    *(void *)&long long v58 = a1;
    uint64_t v41 = MEMORY[0x1E4FBC870];
  }
  long long v61 = xmmword_1C1557FB0;
  char v62 = 0;
  sub_1BFCAB4C0();
  uint64_t v42 = v54;
  sub_1C15206EC();
  uint64_t v43 = sub_1C1517E5C();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v42);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  type metadata accessor for FormatResetNode();
  uint64_t v14 = (void *)swift_allocObject();
  swift_beginAccess();
  uint64_t v44 = v48;
  v14[2] = v46;
  void v14[3] = v44;
  swift_beginAccess();
  void v14[4] = v34;
  swift_beginAccess();
  v14[5] = v41;
  swift_beginAccess();
  v14[6] = v43;
  __swift_destroy_boxed_opaque_existential_1(v58);
  return v14;
}

unsigned char *sub_1BFC81264(uint64_t a1)
{
  return sub_1BFC81284(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unsigned char *sub_1BFC81284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v20[-v7];
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v20[-v14];
  sub_1C13661EC(a1, (uint64_t)v20, (uint64_t (*)(void))sub_1BFEFE510);
  sub_1BFEFE510();
  char v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v16)
  {
    v17(v8, 0, 1, a3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v15, v8, a3);
    sub_1C151917C();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v15, a3);
    uint64_t v8 = (unsigned char *)sub_1C151907C();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v15, a3);
  }
  else
  {
    v17(v8, 1, 1, a3);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C0C93B9C();
    swift_allocError();
    *(_OWORD *)uint64_t v18 = xmmword_1C1557FA0;
    *(unsigned char *)(v18 + 16) = 5;
    swift_willThrow();
  }
  return v8;
}

void sub_1BFC81530(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFC8157C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFC815C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFC81614(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC848] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFC81668(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFC816B4(uint64_t a1, uint64_t a2)
{
  sub_1BFEFDFBC(0, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFC81740(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1BFC81768()
{
  return sub_1BFC81798(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1BFC81770()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BFC81798(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BFC817C0(void *a1)
{
  return FormatGroup.encode(to:)(a1);
}

uint64_t sub_1BFC817D8(void *a1)
{
  return FormatDimensionSizing.encode(to:)(a1);
}

uint64_t sub_1BFC817F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  return sub_1C10F1CFC(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

void *assignWithTake for FormatVideoPlayerContent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1BFC8189C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC818FC()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC8194C()
{
  unint64_t result = qword_1EB868158;
  if (!qword_1EB868158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868158);
  }
  return result;
}

uint64_t sub_1BFC819A0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC819F0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC81A50()
{
  unint64_t result = qword_1EB88A4E8;
  if (!qword_1EB88A4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A4E8);
  }
  return result;
}

id sub_1BFC81AA4(uint64_t a1, uint64_t a2)
{
  v24[1] = a2;
  uint64_t v2 = sub_1C15164AC();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC3B15C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C15164BC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151661C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v17 = (void *)sub_1C151E5EC();
  objc_msgSend(v16, sel_setDateFormat_, v17);

  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27B00], v8);
  sub_1C15164CC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = (void *)sub_1C151655C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(v16, sel_setCalendar_, v18);

  sub_1C151668C();
  uint64_t v19 = sub_1C15166BC();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) != 1)
  {
    uint64_t v21 = (void *)sub_1C151669C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  }
  objc_msgSend(v16, sel_setTimeZone_, v21);

  sub_1C151636C();
  uint64_t v22 = (void *)sub_1C15163DC();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  objc_msgSend(v16, sel_setLocale_, v22);

  return v16;
}

uint64_t FeedAdGroupDataProvider.FailureReason.description.getter()
{
  uint64_t result = 0xD000000000000019;
  uint64_t v2 = *(void *)(v0 + 8);
  if (v2)
  {
    if (v2 == 1)
    {
      return 0x2073692064656546;
    }
    else
    {
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      return 0x746E6563616A6441;
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = a2 + 40;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v9 = *(void **)(a2 + 48);
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v9;
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v10;
    swift_bridgeObjectRetain();
    id v12 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 56) = v13;
    *(void *)(a1 + 72) = *(void *)(v7 + 32);
  }
  return a1;
}

uint64_t sub_1BFC82018()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC82068()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC820C8()
{
  unint64_t result = qword_1EB88AEA8;
  if (!qword_1EB88AEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AEA8);
  }
  return result;
}

uint64_t sub_1BFC8211C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC8216C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC821CC()
{
  unint64_t result = qword_1EB88BBF8;
  if (!qword_1EB88BBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BBF8);
  }
  return result;
}

uint64_t destroy for FormatRegex(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1BFC82330(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for FormatRegex(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1BFC82330(0);
  uint64_t v9 = v8;
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v6, v7, v9);
  return a1;
}

void sub_1BFC82330(uint64_t a1)
{
}

void sub_1BFC82364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFC823C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFC8242C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t FeedGroupEmitterCursor.unboxCursor<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1C151FD8C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v25 - v15;
  sub_1C13661EC((uint64_t)v2 + *(void *)(v4 + 168), (uint64_t)&v26, (uint64_t (*)(void))sub_1BFEFE510);
  if (v27)
  {
    sub_1BFF993A8(&v26, v28);
    sub_1BFF6A008((uint64_t)v28, (uint64_t)&v26);
    int v17 = swift_dynamicCast();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    if (v17)
    {
      v18(v9, 0, 1, a2);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v9, a2);
      sub_1C151917C();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v16, a2);
      uint64_t v19 = sub_1C151907C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, a2);
    }
    else
    {
      v18(v9, 1, 1, a2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1BFF6A008((uint64_t)v28, (uint64_t)&v26);
      sub_1C1367A44(0, (unint64_t *)&qword_1EB8714C8, (uint64_t (*)(uint64_t))sub_1BFEFE510, MEMORY[0x1E4FAB088]);
      if (swift_dynamicCast())
      {
        uint64_t v21 = (void *)swift_allocObject();
        v21[2] = *(void *)(v5 + 80);
        v21[3] = a2;
        v21[4] = *(void *)(v5 + 88);
        uint64_t v22 = (void *)sub_1C1518E7C();
        uint64_t v19 = sub_1C1518FEC();
        swift_release();
        swift_release();
      }
      else
      {
        sub_1C151917C();
        sub_1C0C93B9C();
        swift_allocError();
        *(_OWORD *)uint64_t v23 = xmmword_1C1557FA0;
        *(unsigned char *)(v23 + 16) = 5;
        uint64_t v19 = sub_1C151905C();
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    sub_1BFEFDCB0((uint64_t)&v26, (uint64_t (*)(void))sub_1BFEFE510);
    sub_1C151917C();
    sub_1C0C93B9C();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_1C153AB20;
    *(unsigned char *)(v20 + 16) = 5;
    return sub_1C151905C();
  }
  return v19;
}

uint64_t sub_1BFC828E0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC82930()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC82990()
{
  unint64_t result = qword_1EB88ADE0;
  if (!qword_1EB88ADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88ADE0);
  }
  return result;
}

uint64_t sub_1BFC829E4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC82A34()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC82A94()
{
  unint64_t result = qword_1EB8880D0;
  if (!qword_1EB8880D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8880D0);
  }
  return result;
}

Swift::Double __swiftcall Double.millisecondsUntilCurrentMediaTime()()
{
  return (CACurrentMediaTime() - v0) * 1000.0;
}

Swift::Void __swiftcall LocationDetectionManager.sceneWillEnterForeground()()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_1C006F8EC;
  *(void *)(v1 + 24) = v0;
  sub_1C15182FC();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1C0D47CF0;
  *(void *)(v2 + 24) = v1;
  swift_retain_n();
  swift_retain();
  sub_1C15182EC();
  swift_release_n();
  swift_release();
  swift_release();
}

uint64_t sub_1BFC82C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v38 = a7;
  uint64_t v39 = a8;
  uint64_t v40 = a6;
  sub_1BFF35CA0();
  uint64_t v15 = v14;
  uint64_t v41 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v17 = (void *)((char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v19 = v44;
  uint64_t v18 = v45;
  uint64_t v46 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  swift_beginAccess();
  unint64_t v43 = *(void *)(a4 + 32);
  unint64_t v21 = v43;
  swift_bridgeObjectRetain();
  sub_1BFF35EA4(v21);
  uint64_t v22 = v42;
  sub_1BFF30600(a5, v19, v18, v17);
  sub_1BFF322A8(v21);
  if (v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v24 = v18;
    uint64_t v35 = v19;
    char v36 = v17;
    uint64_t v25 = v40;
    uint64_t v37 = KeyPath;
    uint64_t v42 = v15;
    swift_beginAccess();
    swift_retain();
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C12A4C68(v26, (uint64_t)a5);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v28 = (void *)swift_allocObject();
    v34[1] = v27;
    uint64_t v30 = v38;
    uint64_t v29 = v39;
    _OWORD v28[2] = v25;
    v28[3] = v30;
    unsigned char v28[4] = a4;
    v28[5] = v29;
    v28[6] = v35;
    v28[7] = v24;
    v28[8] = a9;
    uint64_t v31 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1BFF54648(0, &qword_1EB884D68, MEMORY[0x1E4FAB4D0]);
    v34[0] = v32;
    sub_1BFF54540(&qword_1EB884D60, &qword_1EB884D68, v31);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v33 = v36;
    sub_1C15173EC();
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v33, v42);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1BFC82FA0()
{
  v0[14] = v0[16];
  sub_1C151ED5C();
  swift_getWitnessTable();
  if (sub_1C151F15C())
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[56] = v1;
    void *v1 = v0;
    v1[1] = sub_1BFC49490;
    uint64_t v2 = v0[54];
    uint64_t v3 = v0[17];
    uint64_t v4 = (void *)v0[15];
    v1[22] = v0[18];
    v1[21] = v3;
    v1[19] = v2;
    v1[20] = v4;
    v1[23] = *v4;
    return MEMORY[0x1F4188298](sub_1BFE610B4, 0, 0);
  }
  else
  {
    uint64_t v6 = v0[15];
    uint64_t v5 = v0[16];
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = FeedCursorContainer.init(cursor:)(v6);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7 | 0x2000000000000000);
  }
}

uint64_t sub_1BFC8327C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC832DC()
{
  unint64_t result = qword_1EB85B2C0;
  if (!qword_1EB85B2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B2C0);
  }
  return result;
}

uint64_t sub_1BFC83330()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC83380()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC833E0()
{
  unint64_t result = qword_1EB88BC08;
  if (!qword_1EB88BC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BC08);
  }
  return result;
}

uint64_t sub_1BFC83434()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC83484()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC834E4()
{
  unint64_t result = qword_1EB8885D8;
  if (!qword_1EB8885D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8885D8);
  }
  return result;
}

uint64_t *sub_1BFC83538(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ~v7;
  unint64_t v9 = *(void *)(v5 + 64);
  unint64_t v10 = v9 + 7;
  if (v9 <= ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v9 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v9 <= 0x10) {
    unint64_t v11 = 16;
  }
  else {
    unint64_t v11 = v9;
  }
  if ((v11 & 0xFFFFFFFFFFFFFFF8) + 48 <= v11) {
    unint64_t v12 = v11;
  }
  else {
    unint64_t v12 = (v11 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if ((v6 & 0x1000F8) != 0
    || (((v6 & 0xF8) + 31) & ~v7)
     + (((((((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    long long v13 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v13 = *v14;
    uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v16;
    uint64_t v17 = ((unint64_t)v15 + 15) & v8;
    uint64_t v18 = ((unint64_t)v16 + 15) & v8;
    unsigned int v19 = *(unsigned __int8 *)(v18 + v12);
    unsigned int v20 = v19 - 7;
    if (v19 >= 7)
    {
      if (v12 <= 3) {
        uint64_t v21 = v12;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *(unsigned __int8 *)v18;
          goto LABEL_21;
        case 2:
          int v22 = *(unsigned __int16 *)v18;
          goto LABEL_21;
        case 3:
          int v22 = *(unsigned __int16 *)v18 | (*(unsigned __int8 *)(v18 + 2) << 16);
          goto LABEL_21;
        case 4:
          int v22 = *(_DWORD *)v18;
LABEL_21:
          int v24 = (v22 | (v20 << (8 * v12))) + 7;
          unsigned int v19 = v22 + 7;
          if (v12 < 4) {
            unsigned int v19 = v24;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v25 = v11 + 1;
    unint64_t v26 = v12 + 1;
    switch(v19)
    {
      case 1u:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
        unint64_t v30 = (v10 + v17) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v31 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v32 = *(void *)(v31 + 24);
        if (v32 < 0xFFFFFFFF)
        {
          long long v40 = *(_OWORD *)(v31 + 16);
          *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
          *(_OWORD *)(v30 + 16) = v40;
        }
        else
        {
          *(void *)(v30 + 24) = v32;
          (**(void (***)(void))(v32 - 8))();
        }
        char v33 = 1;
        goto LABEL_57;
      case 2u:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
        char v33 = 2;
        goto LABEL_57;
      case 3u:
        *(void *)uint64_t v17 = *(void *)v18;
        *(void *)(v17 + 8) = *(void *)(v18 + 8);
        char v34 = 3;
        goto LABEL_34;
      case 4u:
        *(void *)uint64_t v17 = *(void *)v18;
        *(void *)(v17 + 8) = *(void *)(v18 + 8);
        char v34 = 4;
        goto LABEL_34;
      case 5u:
        *(void *)uint64_t v17 = *(void *)v18;
        *(void *)(v17 + 8) = *(void *)(v18 + 8);
        char v34 = 5;
LABEL_34:
        *(unsigned char *)(v17 + v12) = v34;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v35 = *(unsigned __int8 *)(v18 + v11);
        unsigned int v36 = v35 - 3;
        if (v35 >= 3)
        {
          if (v11 <= 3) {
            uint64_t v37 = v11;
          }
          else {
            uint64_t v37 = 4;
          }
          switch(v37)
          {
            case 1:
              int v38 = *(unsigned __int8 *)v18;
              goto LABEL_46;
            case 2:
              int v38 = *(unsigned __int16 *)v18;
              goto LABEL_46;
            case 3:
              int v38 = *(unsigned __int16 *)v18 | (*(unsigned __int8 *)(v18 + 2) << 16);
              goto LABEL_46;
            case 4:
              int v38 = *(_DWORD *)v18;
LABEL_46:
              int v41 = (v38 | (v36 << (8 * v11))) + 3;
              unsigned int v35 = v38 + 3;
              if (v11 < 4) {
                unsigned int v35 = v41;
              }
              break;
            default:
              break;
          }
        }
        if (v35 == 2)
        {
          *(void *)uint64_t v17 = *(void *)v18;
          *(void *)(v17 + 8) = *(void *)(v18 + 8);
          *(unsigned char *)(v17 + v11) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v35 == 1)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
          *(unsigned char *)(v17 + v11) = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
          unint64_t v42 = (v10 + v17) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v43 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v44 = *(void *)(v43 + 24);
          if (v44 < 0xFFFFFFFF)
          {
            long long v45 = *(_OWORD *)(v43 + 16);
            *(_OWORD *)unint64_t v42 = *(_OWORD *)v43;
            *(_OWORD *)(v42 + 16) = v45;
          }
          else
          {
            *(void *)(v42 + 24) = v44;
            (**(void (***)(void))(v44 - 8))();
          }
          *(unsigned char *)(v17 + v11) = 0;
        }
        unint64_t v46 = ((v17 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v47 = ((v18 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v48 = *(void *)(v47 + 24);
        *(void *)(v46 + 24) = v48;
        *(void *)(v46 + 32) = *(void *)(v47 + 32);
        (**(void (***)(void))(v48 - 8))();
        char v33 = 6;
LABEL_57:
        *(unsigned char *)(v17 + v12) = v33;
        break;
      default:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
        unint64_t v27 = (v10 + v17) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v28 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v29 = *(void *)(v28 + 24);
        if (v29 < 0xFFFFFFFF)
        {
          long long v39 = *(_OWORD *)(v28 + 16);
          *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
          *(_OWORD *)(v27 + 16) = v39;
        }
        else
        {
          *(void *)(v27 + 24) = v29;
          (**(void (***)(void))(v29 - 8))();
        }
        *(unsigned char *)(v17 + v12) = 0;
        break;
    }
    unint64_t v49 = (void *)(((v17 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v50 = (void *)(((v18 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v49 = *v50;
    uint64_t v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v51 = *v52;
    uint64_t v53 = (_OWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v54 = (long long *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v55 = *v54;
    long long v56 = v54[1];
    *(_OWORD *)((char *)v53 + 26) = *(long long *)((char *)v54 + 26);
    _OWORD *v53 = v55;
    v53[1] = v56;
    *(void *)(((unint64_t)v53 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v54 + 49) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BFC83B0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1C15198DC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  id v4 = objc_msgSend(self, sel_mainBundle);
  id v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_1C151E62C();
  }
  return sub_1C15198BC();
}

void *sub_1BFC83BF4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  v7(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = *(void *)(v8 + 48);
  uint64_t v13 = sub_1C151631C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v12 + v16;
  uint64_t v18 = (v12 + v16 + v10) & ~v16;
  uint64_t v19 = (v17 + v11) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, v19, v13);
  uint64_t v20 = *(void *)(v15 + 48) + 7;
  uint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  int v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  unint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFC83E08()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC83E68()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC83EB8()
{
  unint64_t result = qword_1EB889A08;
  if (!qword_1EB889A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889A08);
  }
  return result;
}

uint64_t sub_1BFC83F0C()
{
  sub_1C15183EC();
  type metadata accessor for EngagementBannerViewLayoutAttributesFactory();
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1BFC845BC(0, qword_1EB896478);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183FC();
  sub_1C1518AEC();
  return swift_release();
}

uint64_t *FeedCursorTracker.init(snapshot:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = MEMORY[0x1E4FBC870];
  *(uint64_t *)((char *)v1 + *(void *)(v4 + 104)) = MEMORY[0x1E4FBC870];
  *(uint64_t *)((char *)v1 + *(void *)(*v1 + 112)) = v6;
  uint64_t v7 = *(void *)(*v1 + 120);
  type metadata accessor for FeedCursorTrackerGroup();
  *(uint64_t *)((char *)v1 + v7) = sub_1C151E2FC();
  uint64_t v8 = *(void *)(*v1 + 128);
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  *(uint64_t *)((char *)v1 + v8) = sub_1C1517EBC();
  uint64_t v9 = (uint64_t)v2 + *(void *)(*v2 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v9, a1, AssociatedTypeWitness);
  uint64_t v11 = (int *)type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v12 = *(void *)(a1 + v11[9]);
  uint64_t v13 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 104));
  swift_beginAccess();
  *uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a1 + v11[11]);
  uint64_t v15 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 120));
  swift_beginAccess();
  *uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a1 + v11[10]);
  uint64_t v17 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 112));
  swift_beginAccess();
  *uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BFC84350(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC845BC(0, &qword_1EB8804D0);
  uint64_t result = sub_1C151819C();
  if (v22)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC845BC(0, &qword_1EB87C600);
    uint64_t result = sub_1C151819C();
    if (v20)
    {
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
      __n128 v4 = MEMORY[0x1F4188790](v3);
      uint64_t v6 = (void *)((char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
      uint64_t v8 = *v6;
      uint64_t v9 = type metadata accessor for EngagementBannerViewStyler();
      v18[3] = v9;
      v18[4] = &off_1F1BED998;
      v18[0] = v8;
      type metadata accessor for EngagementBannerViewLayoutAttributesFactory();
      uint64_t v10 = (void *)swift_allocObject();
      uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v9);
      __n128 v12 = MEMORY[0x1F4188790](v11);
      uint64_t v14 = (void *)((char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
      uint64_t v16 = *v14;
      v10[5] = v9;
      v10[6] = &off_1F1BED998;
      v10[2] = v16;
      sub_1BFC773DC(&v19, (uint64_t)(v10 + 7));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      return (uint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC845BC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BFC8460C(void *a1)
{
  uint64_t v2 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v2 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A120);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC9DBE8(0, (unint64_t *)&unk_1EB87A1D0);
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v5 = result;
      type metadata accessor for FeedFontManager();
      uint64_t v6 = (void *)swift_allocObject();
      sub_1C1517E9C();
      sub_1C1517ECC();
      swift_allocObject();
      uint64_t v7 = sub_1C1517EBC();
      uint64_t v8 = MEMORY[0x1E4FBC870];
      v6[4] = v7;
      v6[5] = v8;
      v6[2] = v4;
      v6[3] = v5;
      return (uint64_t)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC84768(void *a1)
{
  sub_1BFE89214();
  uint64_t v53 = v2;
  uint64_t v51 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v52 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v5 = v4;
  *(void *)&long long v54 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - v6;
  sub_1C08F6F30();
  uint64_t v9 = v8;
  uint64_t v55 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0896824();
  sub_1C085F050(&qword_1EB891FF0, (void (*)(uint64_t))sub_1C0896824);
  uint64_t v13 = (void *)v56;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  *(void *)&long long v56 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      long long v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = a1;
      uint64_t v25 = *((void *)v19 - 2);
      uint64_t v24 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v26 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v26);
      sub_1C08968A8();
      sub_1C007411C();
      sub_1C08968FC();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v27 = sub_1C085FB14((uint64_t)&unk_1F1B6B218);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v28 = v25;
      *(void *)(v28 + 8) = v24;
      *(void *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v29 = v25;
      a1 = v23;
      sub_1BFE94AD4(v29, v24, 1);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v9);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C08F6F30);
  uint64_t v22 = v21;
  long long v61 = xmmword_1C153AB20;
  char v62 = 0;
  sub_1C006AD7C();
  sub_1C15206EC();
  uint64_t v31 = v57;
  type metadata accessor for FormatLayeredMediaNodeStyle();
  long long v61 = xmmword_1C1557FA0;
  char v62 = 0;
  sub_1C085F050(&qword_1EB88CA20, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle);
  sub_1C152065C();
  uint64_t v50 = v31;
  uint64_t v32 = v57;
  type metadata accessor for FormatAnimationNodeStyle();
  long long v61 = xmmword_1C1557FB0;
  char v62 = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  uint64_t v49 = v32;
  uint64_t v48 = v20;
  uint64_t v33 = v57;
  long long v61 = xmmword_1C1557FD0;
  char v62 = 0;
  sub_1BFE1CFFC();
  sub_1C15206EC();
  uint64_t v47 = v33;
  uint64_t v34 = v57;
  long long v61 = xmmword_1C1557FC0;
  char v62 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  uint64_t v46 = v57;
  long long v45 = xmmword_1C1557FE0;
  long long v61 = xmmword_1C1557FE0;
  char v62 = 0;
  if (sub_1C152071C())
  {
    *(void *)&long long v44 = v34;
    long long v57 = v45;
    char v58 = 0;
    sub_1C08B07C8();
    uint64_t v35 = v56;
    sub_1C15206EC();
    *(void *)&long long v45 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v35, v5);
    uint64_t v34 = v44;
  }
  else
  {
    *(void *)&long long v45 = MEMORY[0x1E4FBC860];
  }
  long long v56 = xmmword_1C1557FF0;
  long long v61 = xmmword_1C1557FF0;
  char v62 = 0;
  if (sub_1C152071C())
  {
    long long v57 = v56;
    char v58 = 0;
    sub_1C15206EC();
    *(void *)&long long v56 = v22;
    uint64_t v36 = v63;
  }
  else
  {
    *(void *)&long long v56 = v22;
    uint64_t v36 = 0;
  }
  long long v54 = xmmword_1C1558010;
  long long v61 = xmmword_1C1558010;
  char v62 = 0;
  if (sub_1C152071C())
  {
    long long v57 = v54;
    char v58 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)&long long v54 = a1;
    unint64_t v37 = v63;
  }
  else
  {
    *(void *)&long long v54 = a1;
    unint64_t v37 = 0x8000000000000000;
  }
  long long v44 = xmmword_1C1558020;
  long long v61 = xmmword_1C1558020;
  char v62 = 0;
  if (sub_1C152071C())
  {
    long long v57 = v44;
    char v58 = 0;
    sub_1C15206EC();
    char v38 = v63;
  }
  else
  {
    char v38 = 1;
  }
  long long v61 = xmmword_1C1558030;
  char v62 = 0;
  sub_1BFE3CF9C();
  sub_1C152065C();
  uint64_t v39 = v36;
  *(void *)&long long v44 = v57;
  int v43 = BYTE8(v57);
  long long v42 = xmmword_1C1558040;
  long long v61 = xmmword_1C1558040;
  char v62 = 0;
  if (sub_1C152071C())
  {
    long long v57 = v42;
    char v58 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    sub_1C15206EC();
    long long v40 = v52;
    uint64_t v41 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v53);
  }
  else
  {
    uint64_t v41 = MEMORY[0x1E4FBC870];
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v9);
  *(void *)&long long v57 = v50;
  uint64_t v63 = v34;
  unint64_t v59 = v37;
  uint64_t v60 = v46;
  *(void *)&long long v61 = v44;
  BYTE8(v61) = v43;
  type metadata accessor for FormatLayeredMediaNode();
  swift_allocObject();
  uint64_t KeyPath = FormatLayeredMediaNode.init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(v48, v56, (uint64_t *)&v57, v49, v47, &v63, &v60, v45, v39, (uint64_t *)&v59, v38, (uint64_t *)&v61, v41);
  __swift_destroy_boxed_opaque_existential_1(v54);
  return KeyPath;
}

unint64_t Blueprint.storedCursorContainer<A>(type:)()
{
  if (qword_1EB886330 != -1) {
    swift_once();
  }
  sub_1C151CC5C();
  if (v5)
  {
    type metadata accessor for FeedCursorToken();
    if (swift_dynamicCast()) {
      uint64_t v0 = v3;
    }
    else {
      uint64_t v0 = 0;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v4);
    uint64_t v0 = 0;
  }
  unint64_t v1 = FeedCursorStoreManager.get<A>(token:)(v0);
  swift_release();
  return v1;
}

uint64_t sub_1BFC85688@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return HeadlineViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1BFC856A0(void *a1)
{
  return FormatCompilerOptions.Newsroom.Environment.encode(to:)(a1);
}

uint64_t sub_1BFC856B8(void *a1)
{
  return sub_1C1245974(a1);
}

uint64_t sub_1BFC856D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = *v3;
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!rawValue_8)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    __break(1u);
    __break(1u);
    return result;
  }
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1BFE9C558();
  *(void *)(v7 + 64) = v10;
  *(void *)(v7 + 32) = rawValue;
  *(void *)(v7 + 40) = rawValue_8;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v25) {
    goto LABEL_15;
  }
  *(void *)(v7 + 96) = v9;
  *(void *)(v7 + 104) = v10;
  *(void *)(v7 + 72) = v24;
  *(void *)(v7 + 80) = v25;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1BFC90444(a1, (void *)a2, a3);
  if (!v4)
  {
    uint64_t v12 = v11;
    rawValuea = (void *)v11;
    type metadata accessor for FeedDatabaseGroup();
    sub_1C151ED5C();
    swift_getWitnessTable();
    if (sub_1C151F15C())
    {
      uint64_t v3 = (uint64_t *)sub_1C151997C();
      sub_1C1519BFC();
      swift_release();
      uint64_t v13 = rawValue_8;
      uint64_t v14 = rawValuea;
      FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v13 - 1));
      switch((char)v24)
      {
        case 1:
          if (*(unsigned char *)(a3 + 56) != 1) {
            goto LABEL_7;
          }
          goto LABEL_10;
        case 2:
        case 3:
        case 4:
LABEL_10:
          swift_bridgeObjectRelease();
          sub_1C0A8CD28();
          swift_allocError();
          *(_OWORD *)uint64_t v21 = xmmword_1C153AB20;
          *(unsigned char *)(v21 + 16) = 7;
          break;
        case 7:
          swift_bridgeObjectRelease();
          sub_1C151997C();
          sub_1C1519BFC();
          swift_release();
          uint64_t v3 = rawValuea;
          sub_1C0A8CD28();
          swift_allocError();
          *(void *)uint64_t v22 = rawValuea;
          *(void *)(v22 + 8) = rawValue_8;
          *(unsigned char *)(v22 + 16) = 0;
          break;
        default:
          goto LABEL_7;
      }
      swift_willThrow();
    }
    else
    {
LABEL_7:
      type metadata accessor for FeedDatabaseCursor();
      uint64_t v15 = swift_allocObject();
      swift_weakInit();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = *(void *)(v23 + 80);
      *(void *)(v16 + 24) = *(void *)(v23 + 88);
      *(_OWORD *)(v16 + 32) = *(_OWORD *)(v23 + 96);
      *(void *)(v16 + 48) = *(void *)(v23 + 112);
      *(_OWORD *)(v16 + 56) = *(_OWORD *)(v23 + 120);
      uint64_t v17 = *(void *)(v23 + 136);
      long long v18 = *(_OWORD *)a2;
      *(_OWORD *)(v16 + 104) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v16 + 88) = v18;
      long long v19 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(v16 + 168) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(v16 + 152) = v19;
      long long v20 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v16 + 136) = *(_OWORD *)(a2 + 48);
      *(void *)(v16 + 72) = v17;
      *(void *)(v16 + 80) = v15;
      *(_OWORD *)(v16 + 120) = v20;
      sub_1BFC717EC(a2);
      sub_1BFC717EC(a2);
      uint64_t v3 = sub_1C008AF24((_OWORD *)a2, v12, (uint64_t)sub_1C008586C, v16);
      swift_release();
      sub_1BFDA5D5C(a2);
    }
  }
  return (uint64_t)v3;
}

uint64_t sub_1BFC85B10(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8955D0);
  uint64_t result = sub_1C151819C();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFCB6824(0, &qword_1EB896A60);
    uint64_t result = sub_1C151819C();
    uint64_t v3 = v20;
    if (v20)
    {
      uint64_t v4 = v21;
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      __n128 v6 = MEMORY[0x1F4188790](v5);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for FormatImageRenderer();
      v19[3] = v11;
      void v19[4] = &off_1F1BEA7A8;
      v19[0] = v10;
      type metadata accessor for FormatVideoPlayerNodeRenderer();
      uint64_t v12 = (void *)swift_allocObject();
      uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v11);
      __n128 v14 = MEMORY[0x1F4188790](v13);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
      uint64_t v18 = *v16;
      v12[5] = v11;
      v12[6] = &off_1F1BEA7A8;
      void v12[2] = v18;
      v12[7] = v3;
      v12[8] = v4;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      return (uint64_t)v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC85D88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A120);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (v9)
  {
    uint64_t v7 = type metadata accessor for FormatImageRenderer();
    uint64_t v8 = (void *)swift_allocObject();
    uint64_t result = sub_1BFC773DC(&v11, (uint64_t)(v8 + 2));
    v8[7] = v6;
    v8[8] = v5;
    v8[9] = v9;
    v8[10] = v10;
    a2[3] = v7;
    a2[4] = &off_1F1BEA7A8;
    *a2 = v8;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

double sub_1BFC85F3C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFC85F84(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BFC85F84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1BFD5DE6C(0, &qword_1EB85E480, (uint64_t (*)(void))sub_1BFC86234, (uint64_t)&type metadata for A6_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC86234();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0019560(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  void v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BFC86234()
{
  unint64_t result = qword_1EB85E3E8;
  if (!qword_1EB85E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E3E8);
  }
  return result;
}

double sub_1BFC86288@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFC862D0(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BFC862D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1BFD5CA98(0, &qword_1EB87A568, (uint64_t (*)(void))sub_1BFC865FC, (uint64_t)&type metadata for A6_V3.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC865FC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0018AB8(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  void v10[3] = v14;
  v10[4] = v15;
  return result;
}

uint64_t sub_1BFC86580(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, &qword_1EB879DF0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFC865FC()
{
  unint64_t result = qword_1EB8798A8;
  if (!qword_1EB8798A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8798A8);
  }
  return result;
}

uint64_t sub_1BFC86650@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB87F4E0);
  uint64_t result = sub_1C151819C();
  if (!v16)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8804C8);
  uint64_t result = sub_1C151819C();
  if (!v14)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&qword_1EB884BD0);
  uint64_t result = sub_1C151819C();
  if (!v12)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB884AB0);
  uint64_t result = sub_1C151819C();
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB893B50);
  uint64_t result = sub_1C151819C();
  if (v8)
  {
    uint64_t v5 = type metadata accessor for ActivityItemsConfigurationFactory();
    uint64_t v6 = swift_allocObject();
    sub_1BFC773DC(&v15, v6 + 16);
    sub_1BFC773DC(&v13, v6 + 56);
    sub_1BFC773DC(&v11, v6 + 96);
    sub_1BFC773DC(&v9, v6 + 136);
    uint64_t result = sub_1BFC773DC(&v7, v6 + 176);
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for ActivityItemsConfigurationFactory;
    *a2 = v6;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BFC86880@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C151815C();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    type metadata accessor for HeadlineViewRenderer();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for AdPresentationDelegateProvider();
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v7 + 24) = 1;
    *(void *)(v6 + 24) = v7;
    sub_1BFC773DC(&v10, v6 + 32);
    uint64_t result = sub_1BFC773DC(&v8, v6 + 72);
    *(void *)(v6 + 112) = v5;
    *a2 = v6;
    a2[1] = (uint64_t)&off_1F1BFEE48;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PuzzleRankProvider()
{
  return self;
}

uint64_t sub_1BFC86A54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A120);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC9DBE8(0, &qword_1EB87A190);
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v6 = result;
      uint64_t v7 = type metadata accessor for AssetHandleFactory();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v5;
      *(void *)(result + 24) = v6;
      a2[3] = v7;
      a2[4] = (uint64_t)&off_1F1C0B4F8;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AssetHandleFactory()
{
  return self;
}

uint64_t sub_1BFC86B64()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFC86BC8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatTextNodeTransform.init(from:)(a1, a2);
}

uint64_t FormatTextNodeTransform.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD7E80, (uint64_t)&_s10CodingTypeON_9, (uint64_t)&unk_1F1B888D0, a2);
}

uint64_t sub_1BFC86C1C(uint64_t a1, uint64_t a2)
{
  return sub_1BFC86C38(a1, a2);
}

uint64_t sub_1BFC86C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 24);
  if (!*(void *)(*(void *)a1 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(*(void *)a2 + 16);
  swift_bridgeObjectRetain();
  sub_1BFEF2D8C(v3, v2);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    type metadata accessor for FeedCursorManifestGroupEntry();
    sub_1C151ECBC();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
LABEL_6:
  swift_bridgeObjectRelease();
  type metadata accessor for FeedCursorManifestGroupEntry();
  sub_1C151ED5C();
  swift_retain();
  sub_1C151ED1C();
  sub_1C151E41C();
  swift_bridgeObjectRetain();
  return sub_1C151E44C();
}

uint64_t sub_1BFC86D88@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return FormatPercentage.init(from:)(a1, a2);
}

uint64_t FormatPercentage.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  sub_1C08A2538();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08A25CC();
  sub_1C085F050(&qword_1EB86CC78, (void (*)(uint64_t))sub_1C08A25CC);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v25;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      long long v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *((void *)v15 - 1);
      uint64_t v25 = (_DWORD *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v19 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v19);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_83;
      *(&v24 - 3) = sub_1C08A2650();
      *(&v24 - 2) = sub_1BFC87108();
      *(&v24 - 1) = sub_1C08A26A4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v20 = sub_1C085FA20((uint64_t)&unk_1F1B86B90);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v21 = (uint64_t)v25;
      *(void *)uint64_t v22 = v25;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = v20;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v21, v18, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  char v28 = 0;
  sub_1C15206CC();
  int v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v12 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC87108()
{
  unint64_t result = qword_1EB865D08;
  if (!qword_1EB865D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865D08);
  }
  return result;
}

uint64_t sub_1BFC8715C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatButtonNodeAction.init(from:)(a1, a2);
}

uint64_t sub_1BFC87174(void *a1)
{
  return FormatItem.encode(to:)(a1);
}

uint64_t sub_1BFC8718C(void *a1)
{
  return FormatImageNode.encode(to:)(a1);
}

uint64_t sub_1BFC871B0(void *a1)
{
  return FormatItemNodeStyle.encode(to:)(a1);
}

uint64_t type metadata accessor for FeedCursorStoreManager()
{
  return self;
}

uint64_t initializeWithCopy for GroupLayoutBindingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1BFC87294(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t sub_1BFC87294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 2:
    case 3:
LABEL_3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC87324()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC87374()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC873D4()
{
  unint64_t result = qword_1EB88BFF0;
  if (!qword_1EB88BFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BFF0);
  }
  return result;
}

uint64_t sub_1BFC87428@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C15178AC();
  if (!v1)
  {
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    uint64_t v11 = v7;
    sub_1C15178DC();
    a1[3] = (uint64_t)&type metadata for GapViewLayout.Attributes;
    uint64_t result = swift_allocObject();
    *a1 = result;
    *(void *)(result + 16) = v8;
    *(void *)(result + 24) = v9;
    *(void *)(result + 32) = v10;
    *(void *)(result + 40) = v11;
    *(_OWORD *)(result + 48) = v12;
    *(void *)(result + 64) = v13;
    *(void *)(result + 72) = v14;
  }
  return result;
}

uint64_t sub_1BFC874F8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC87548()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC875A8()
{
  unint64_t result = qword_1EB88BFE0;
  if (!qword_1EB88BFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BFE0);
  }
  return result;
}

void *_s8NewsFeed20FormatQueryParameterVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BFC8763C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC8768C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC876EC()
{
  unint64_t result = qword_1EB88C180;
  if (!qword_1EB88C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C180);
  }
  return result;
}

uint64_t destroy for GroupLayoutBindingError(uint64_t a1)
{
  return sub_1BFC8777C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t sub_1BFC8777C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 2:
    case 3:
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for FeedGap(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 48);
  if (result >= 0x11)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFC87880()
{
  return swift_initClassMetadata2();
}

uint64_t FeedLayoutStylerFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t destroy for FormatServiceOptions(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  uint64_t v4 = (id *)(a1 + a2[10]);
  uint64_t v5 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {

    uint64_t v6 = (int *)type metadata accessor for FeedContext();
    uint64_t v7 = (char *)v4 + v6[5];
    uint64_t v8 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      uint64_t v9 = &v7[*(int *)(v8 + 20)];
      uint64_t v10 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v4 + v6[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4 + *(int *)(v5 + 20));
  }
  uint64_t v11 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v12 = (char *)v4 + *(int *)(v11 + 40);
  uint64_t v13 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = &v12[*(int *)(v13 + 24)];
    uint64_t v15 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      int v16 = &v14[*(int *)(v15 + 24)];
      uint64_t v17 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v12[*(int *)(v13 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1BFC87C24@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatContentSubgroupCollection.init(from:)(a1, a2);
}

uint64_t sub_1BFC87C3C(void *a1)
{
  return FormatParagraphStyle.encode(to:)(a1);
}

uint64_t sub_1BFC87C54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContent.init(from:)(a1, a2);
}

uint64_t FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:actionSenderHandler:)(uint64_t a1, double *a2, char *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(v10, 0, sizeof(v10));
  return FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(a1, a2, a3, a4, (uint64_t)v10, *(void *)(v8 + 320), a5, a6, a7, a8);
}

uint64_t sub_1BFC87CB0()
{
  uint64_t result = 0x656C797473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F6974616D696E61;
      break;
    case 2:
      uint64_t result = 1702521203;
      break;
    case 3:
      uint64_t result = 0x656D7473756A6461;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC87D40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v32 = a2;
    uint64_t v6 = type metadata accessor for SportsDataServiceEndpoint();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    void v37[3] = v6;
    v37[4] = &off_1F1BEAE80;
    v37[0] = v7;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v8 = result;
      uint64_t v9 = type metadata accessor for SportsDataServiceResource();
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v8;
      uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v6);
      v31[1] = v31;
      uint64_t v12 = *(void *)(v6 - 8);
      uint64_t v13 = *(void *)(v12 + 64);
      __n128 v14 = MEMORY[0x1F4188790](v11);
      unint64_t v15 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
      int v16 = *(void (**)(char *, __n128))(v12 + 16);
      v16((char *)v31 - v15, v14);
      uint64_t v17 = *(void *)((char *)v31 - v15);
      v36[3] = v6;
      v36[4] = &off_1F1BEAE80;
      v36[0] = v17;
      uint64_t v34 = v9;
      uint64_t v35 = &off_1F1C0CFF0;
      v33[0] = v10;
      uint64_t v18 = type metadata accessor for SportsDataServiceRequestBuilder();
      uint64_t v19 = (void *)swift_allocObject();
      uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v6);
      __n128 v21 = MEMORY[0x1F4188790](v20);
      uint64_t v22 = (void *)((char *)v31 - v15);
      v16((char *)v31 - v15, v21);
      uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
      __n128 v24 = MEMORY[0x1F4188790](v23);
      uint64_t v26 = (void *)((char *)v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v27 + 16))(v26, v24);
      uint64_t v28 = *v22;
      uint64_t v29 = *v26;
      void v19[5] = v6;
      void v19[6] = &off_1F1BEAE80;
      long long v19[2] = v28;
      v19[10] = v9;
      v19[11] = &off_1F1C0CFF0;
      v19[7] = v29;
      swift_retain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      swift_release();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      unint64_t v30 = v32;
      void v32[3] = v18;
      v30[4] = &off_1F1B95218;
      *unint64_t v30 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC88088(void *a1, void (*a2)(void), void (*a3)(void))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a2(0);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    a3(0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaLayerRenderableProvider()
{
  return self;
}

uint64_t sub_1BFC88138()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FormatMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC88204@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC88358(0, (unint64_t *)&unk_1EB896270, &qword_1EB8948D8, MEMORY[0x1E4FABF30], MEMORY[0x1E4FBB718]);
  uint64_t result = sub_1C151815C();
  if (v5 != 1) {
    return sub_1BFC882D4((uint64_t)v4, a2, (unint64_t *)&unk_1EB896270, &qword_1EB8948D8, MEMORY[0x1E4FABF30]);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC882D4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1BFC88358(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BFC88358(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFCB6824(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFC883C4@<X0>(id *a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1BFC883F8(a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BFC883F8(id *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  id v3 = objc_msgSend(*a1, sel_identifier);
  if (!v3)
  {
    sub_1C151E62C();
    id v3 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unsigned int v4 = objc_msgSend(v2, sel_isArticleOnReadingList_, v3);

  return v4 ^ 1;
}

uint64_t sub_1BFC88478(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for FeedJournalGroupResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = *(void *)(v6 + 32);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
  uint64_t v11 = *(unsigned __int8 *)(a2 + 192);
  swift_bridgeObjectRetain();
  switch(v11)
  {
    case 1:
      long long v13 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 128, a2 + 128);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 192) = 1;
      break;
    case 2:
      long long v14 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v14;
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 128, a2 + 128);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 192) = 2;
      break;
    case 3:
      long long v15 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 128, a2 + 128);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      char v16 = 3;
      goto LABEL_12;
    case 4:
      uint64_t v17 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v17;
      char v16 = 4;
      goto LABEL_12;
    case 5:
      uint64_t v18 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v18;
      char v16 = 5;
      goto LABEL_12;
    case 6:
      uint64_t v19 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v19;
      char v16 = 6;
LABEL_12:
      *(unsigned char *)(a1 + 192) = v16;
      swift_bridgeObjectRetain();
      break;
    default:
      long long v12 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 128, a2 + 128);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 192) = 0;
      break;
  }
  uint64_t v20 = *(void *)(a2 + 200);
  if (v20)
  {
    *(void *)(a1 + 200) = v20;
    unint64_t v21 = *(void *)(a2 + 208);
    swift_bridgeObjectRetain();
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
    uint64_t v22 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = v21;
    *(void *)(a1 + 216) = v22;
  }
  else
  {
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
  }
  uint64_t v23 = *(void *)(a2 + 232);
  uint64_t v24 = *(void *)(a2 + 240);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v23;
  *(void *)(a1 + 240) = v24;
  swift_retain();
  return a1;
}

uint64_t sub_1BFC887A4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatBindingLayeredMediaExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingLayeredMediaExpression.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = v2;
  uint64_t v27 = a2;
  sub_1C0876E54();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0876EE8();
  sub_1C085F050(&qword_1EB8923E0, (void (*)(uint64_t))sub_1C0876EE8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  long long v13 = v27;
  long long v14 = v9;
  if (v12)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *((void *)v17 - 1);
      uint64_t v27 = (unsigned char *)*((void *)v17 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v21);
      *((void *)&v26 - 4) = &_s10CodingKeysON_183;
      *((void *)&v26 - 3) = sub_1C0876F6C();
      *((void *)&v26 - 2) = sub_1BFC88BA4();
      *((void *)&v26 - 1) = sub_1C0876FC0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v22 = sub_1C085FB14((uint64_t)&unk_1F1B84008);
      swift_release_n();
      sub_1C02570B4();
      id v3 = (void *)swift_allocError();
      uint64_t v23 = (uint64_t)v27;
      *(void *)uint64_t v24 = v27;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = v22;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v20, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC88BF8();
  long long v30 = 0uLL;
  char v31 = 0;
  sub_1C15206EC();
  char v18 = v28;
  long long v26 = xmmword_1C153AB20;
  long long v30 = xmmword_1C153AB20;
  char v31 = 0;
  if (sub_1C152071C())
  {
    long long v28 = v26;
    char v29 = 0;
    sub_1C01FC37C();
    sub_1C15206EC();
    char v19 = v32;
  }
  else
  {
    char v19 = 1;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
  *long long v13 = v18;
  v13[1] = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC88BA4()
{
  unint64_t result = qword_1EB88EE18;
  if (!qword_1EB88EE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88EE18);
  }
  return result;
}

unint64_t sub_1BFC88BF8()
{
  unint64_t result = qword_1EB870E48;
  if (!qword_1EB870E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870E48);
  }
  return result;
}

uint64_t sub_1BFC88C4C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatBindingShareAttributionExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingShareAttributionExpression.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  id v3 = v2;
  long long v26 = a2;
  sub_1C087713C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08771D0();
  sub_1C085F050(&qword_1EB892420, (void (*)(uint64_t))sub_1C08771D0);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  uint64_t v11 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  long long v14 = v9;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *((void *)v17 - 1);
      long long v26 = (char *)*((void *)v17 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v20);
      *((void *)&v25 - 4) = &_s10CodingKeysON_182;
      *((void *)&v25 - 3) = sub_1C0877254();
      *((void *)&v25 - 2) = sub_1BFC89040();
      *((void *)&v25 - 1) = sub_1C08772A8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B84030);
      swift_release_n();
      sub_1C02570B4();
      id v3 = (void *)swift_allocError();
      uint64_t v22 = (uint64_t)v26;
      *(void *)uint64_t v23 = v26;
      *(void *)(v23 + 8) = v19;
      *(void *)(v23 + 16) = v21;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v19, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC89094();
  long long v29 = 0uLL;
  char v30 = 0;
  sub_1C15206EC();
  long long v25 = xmmword_1C153AB20;
  long long v29 = xmmword_1C153AB20;
  char v30 = 0;
  if (sub_1C152071C())
  {
    long long v27 = v25;
    char v28 = 0;
    sub_1C01FC4A8();
    sub_1C15206EC();
    char v18 = v31;
  }
  else
  {
    char v18 = 1;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
  *uint64_t v11 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC89040()
{
  unint64_t result = qword_1EB88F838;
  if (!qword_1EB88F838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88F838);
  }
  return result;
}

unint64_t sub_1BFC89094()
{
  unint64_t result = qword_1EB880890;
  if (!qword_1EB880890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB880890);
  }
  return result;
}

uint64_t sub_1BFC890E8(uint64_t a1, uint64_t a2)
{
  return sub_1BFF809FC(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BFC89108()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC89168()
{
  unint64_t result = qword_1EB874F10;
  if (!qword_1EB874F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874F10);
  }
  return result;
}

uint64_t static FeedGroupDecoration.register(in:)()
{
  return sub_1C151F6DC();
}

uint64_t sub_1BFC8925C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC892AC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC8930C()
{
  unint64_t result = qword_1EB88A2B8;
  if (!qword_1EB88A2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A2B8);
  }
  return result;
}

uint64_t destroy for FormatBindExpression()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC893A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFC893EC()
{
  sub_1BFC5DC24();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FeedBannerAdRequester();
  swift_retain();
  sub_1C1518AFC();
  swift_release();
  sub_1C1517DFC();
  swift_release();
  swift_release();
  sub_1C151DA7C();
  sub_1C1518AFC();
  swift_release();
  sub_1BFC4CE74();
  sub_1C1518AFC();
  return swift_release();
}

uint64_t sub_1BFC89550(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1C1518AFC();
  return swift_release();
}

uint64_t sub_1BFC895A8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C009241C();
  v11[1] = v8;
  char v20 = 0;
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  sub_1BFF2EF38(0, &qword_1EB895EA8, (uint64_t (*)(uint64_t))sub_1C14FA198, MEMORY[0x1E4FBBE00]);
  sub_1C14FA198();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C154B600;
  char v19 = 0;
  sub_1C15171AC();
  char v18 = 1;
  sub_1C15171AC();
  char v17 = 2;
  sub_1C15171AC();
  char v16 = 3;
  sub_1C15171AC();
  char v15 = 4;
  sub_1C15171AC();
  char v14 = 5;
  sub_1C15171AC();
  char v13 = 6;
  sub_1C15171AC();
  char v12 = 7;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  sub_1C008CBA0();
  uint64_t result = sub_1C15171CC();
  qword_1EB896B98 = result;
  return result;
}

void FeedLayoutDebugging<>.setupDebugging(in:reloadBlock:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v34 = a1;
  uint64_t v13 = sub_1C151759C();
  __n128 v14 = MEMORY[0x1F4188790](v13);
  (*(void (**)(char *, void, __n128))(v16 + 104))((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB6B0], v14);
  id v17 = objc_allocWithZone((Class)sub_1C15177EC());
  char v18 = (void *)sub_1C15177DC();
  if (qword_1EB87B0E0 != -1) {
    swift_once();
  }
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v20 = (void *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a5;
  v20[4] = a6;
  v20[5] = v19;
  v20[6] = v18;
  v20[7] = a2;
  v20[8] = a3;
  id v21 = v18;
  swift_retain();
  sub_1C1516F8C();
  swift_release();
  if (v35 != 1) {
    goto LABEL_6;
  }
  id v22 = v21;
  id v23 = objc_msgSend(v7, sel_view);
  if (v23)
  {
    uint64_t v24 = v23;
    objc_msgSend(v23, sel_bounds);
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;

    objc_msgSend(v22, sel_setFrame_, v26, v28, v30, v32);
    objc_msgSend(v22, sel_setAutoresizingMask_, 18);
    id v33 = sub_1C11FA024(v34, v7);
    objc_msgSend(v33, sel_addSubview_, v22);

LABEL_6:
    return;
  }
  __break(1u);
}

uint64_t sub_1BFC89CC4()
{
  type metadata accessor for FeedHeadlineFactory();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FeedIssueFactory();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FeedTagFactory();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FeedWebEmbedFactory();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FeedPuzzleFactory();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FeedPuzzleTypeFactory();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FeedPuzzleStatisticFactory();
  sub_1C1518AFC();
  return swift_release();
}

uint64_t sub_1BFC89E5C()
{
  return sub_1C15199FC();
}

uint64_t destroy for FormatMenuItem(uint64_t *a1)
{
  sub_1C0007E38(*a1, a1[1], a1[2], a1[3]);
  sub_1C0007E9C(a1[4], a1[5], a1[6]);
  return swift_release();
}

uint64_t sub_1BFC89F58()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC89FA8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC8A008()
{
  unint64_t result = qword_1EB88D918;
  if (!qword_1EB88D918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D918);
  }
  return result;
}

uint64_t sub_1BFC8A05C()
{
  uint64_t v1 = *(void **)(v0 + 1728);
  uint64_t v2 = *(void **)(v0 + 1712);

  swift_release_n();
  swift_release();
  uint64_t v3 = *(void *)(v0 + 1776);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t FeedCursorContainer.feedJournal.getter@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    a1 &= ~0x8000000000000000;
    uint64_t v3 = &qword_1EB93C2F0;
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)a1 + 240);
  }
  uint64_t v4 = (uint64_t *)(a1 + *v3);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  return result;
}

uint64_t sub_1BFC8A18C(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    uint64_t v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 13) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C159E750;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 13)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BFC8A4B4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC8A504()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC8A564()
{
  unint64_t result = qword_1EB88BB98;
  if (!qword_1EB88BB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BB98);
  }
  return result;
}

uint64_t sub_1BFC8A5B8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BFC8A70C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x7265696669646F6DLL;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC8A788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  *(unsigned char *)(v5 + 72) = 0;
  if (qword_1EB87AF48 != -1) {
    swift_once();
  }
  *(void *)(v5 + 80) = qword_1EB93C660;
  sub_1C151AE6C();
  swift_retain();
  *(void *)(v5 + 88) = sub_1C151AE5C();
  sub_1BFC66384(a1, v5 + 32);
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  *(void *)(v5 + 96) = a4;
  uint64_t v12 = qword_1EB87B0E0;
  swift_unknownObjectRetain();
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_1C0088C5C(&qword_1EB872810, v13, (void (*)(uint64_t))type metadata accessor for FeedItemRendererTool);
  sub_1C1516FCC();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(unsigned char *)(v6 + 72) = v15;
  return v6;
}

uint64_t destroy for FeedJournalGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + 128;
  switch(*(unsigned char *)(a1 + 192))
  {
    case 0:
    case 1:
    case 2:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_5;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_8;
    case 4:
    case 5:
    case 6:
LABEL_8:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 200)) {
        goto LABEL_9;
      }
      goto LABEL_11;
    default:
LABEL_5:
      if (!*(void *)(a1 + 200)) {
        goto LABEL_11;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 208) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_11:
      return swift_release();
  }
}

BOOL OfflineManager.isOffline.getter()
{
  OfflineManager.state.getter((uint64_t)&v2);
  BOOL v0 = v3 != 0;
  sub_1BFEDF9D8(v2, v3);
  return v0;
}

void *OfflineManager.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v4 = (void *)((char *)v1 + qword_1EA1AA1F8);
  uint64_t v6 = *(void *)((char *)v1 + qword_1EA1AA1F8 + 24);
  uint64_t v5 = *(void *)((char *)v1 + qword_1EA1AA1F8 + 32);
  __swift_project_boxed_opaque_existential_1(v4, v6);
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 8))(v6);
  switch((unint64_t)result)
  {
    case 0uLL:
      *(void *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      return result;
    case 1uLL:
      uint64_t result = (*(void *(**)(_OWORD *__return_ptr))(*(void *)(v3 + 88) + 8))(v10);
      goto LABEL_8;
    case 2uLL:
      uint64_t result = (*(void *(**)(_OWORD *__return_ptr))(*(void *)(v3 + 88) + 16))(v10);
      goto LABEL_8;
    case 3uLL:
      uint64_t result = (*(void *(**)(_OWORD *__return_ptr))(*(void *)(v3 + 88) + 48))(v10);
      goto LABEL_8;
    case 4uLL:
    case 5uLL:
      uint64_t result = (*(void *(**)(_OWORD *__return_ptr))(*(void *)(v3 + 88) + 32))(v10);
      goto LABEL_8;
    case 6uLL:
      uint64_t result = (*(void *(**)(_OWORD *__return_ptr))(*(void *)(v3 + 88) + 40))(v10);
LABEL_8:
      long long v8 = v10[1];
      uint64_t v9 = v11;
      *(_OWORD *)a1 = v10[0];
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = v9;
      *(_OWORD *)(a1 + 40) = v12;
      break;
    default:
      uint64_t result = (void *)sub_1C152040C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1BFC8AC84@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  double v27 = a5;
  double v28 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v27 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  long long v12 = v5;
  if (!v5)
  {
    uint64_t v13 = v29;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v14 = sub_1C1520EAC();
    char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
    uint64_t v16 = swift_bridgeObjectRelease();
    uint64_t v17 = v11;
    if (v15)
    {
      uint64_t v18 = sub_1C152070C();
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        char v20 = (unint64_t *)(v18 + 40);
        while (1)
        {
          unint64_t v21 = *v20;
          if (*v20 >= 4) {
            break;
          }
          v20 += 2;
          if (!--v19) {
            goto LABEL_7;
          }
        }
        uint64_t v23 = *(v20 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1C02570B4();
        long long v12 = (void *)swift_allocError();
        *(void *)uint64_t v24 = v23;
        *(void *)(v24 + 8) = v21;
        *(void *)(v24 + 16) = v13;
        *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1C0257108(v23, v21);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        goto LABEL_12;
      }
LABEL_7:
      uint64_t v16 = swift_bridgeObjectRelease();
    }
    v28(v16);
    long long v31 = 0uLL;
    sub_1C15206EC();
    if ((_BYTE)v32)
    {
      if (v32 != 1)
      {
        sub_1BFE41AFC();
        long long v31 = xmmword_1C152C800;
        sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
        sub_1C15206EC();
        double v26 = v27;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        uint64_t v22 = v32;
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      uint64_t v22 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      uint64_t v22 = 0;
    }
    double v26 = v27;
LABEL_16:
    *double v26 = v22;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_12:
  sub_1C0038728(a1, (uint64_t)v12);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC8B030()
{
  uint64_t v1 = 0x726F6C6F63;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_1BFC8B07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFE450A8(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = &v16[-v12];
  uint64_t v20 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v10 + 104))(&v16[-v12], *MEMORY[0x1E4FAB9E0], v9, v11);
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C10F2768(0, &qword_1EB8712D0, MEMORY[0x1E4FAB6F0]);
  sub_1BFE45238(&qword_1EB8712C8, &qword_1EB8712D0, v14);
  sub_1C151734C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1BFC8B240()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 0x73676E69727473;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatUnderlineStyle_optional __swiftcall FormatUnderlineStyle.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatLineCap_optional __swiftcall FormatLineCap.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC8B38C(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  uint64_t v3 = sub_1C151F55C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151F52C();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1BFE4597C();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  sub_1C151E1CC();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1BFDE8CF4((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  sub_1C006480C(0);
  sub_1BFDE8CF4((unint64_t *)&qword_1EB879FC0, sub_1C006480C);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v3);
  *(void *)(v2 + 40) = sub_1C151F5AC();
  sub_1C0091CD8();
  swift_allocObject();
  *(void *)(v2 + 48) = sub_1C151833C();
  *(void *)(v2 + 56) = MEMORY[0x1E4FBC860];
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  char v12 = 0;
  sub_1C0091574();
  swift_allocObject();
  *(void *)(v2 + 104) = sub_1C1518E9C();
  *(void *)(v2 + 32) = v10;
  *(void *)(v2 + 64) = v11;
  return v2;
}

void sub_1BFC8B664(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFC8B6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1BFC8B6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = a3;
  void v10[3] = a4;
  v10[4] = v9;
  v10[5] = a1;
  v10[6] = a2;
  v12[4] = sub_1C0D8A21C;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1BFC9FC68;
  v12[3] = &block_descriptor_62;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_scheduleLowPriorityBlockForMainThread_, v11);
  _Block_release(v11);
}

unint64_t sub_1BFC8B824(uint64_t a1, uint64_t a2)
{
  return sub_1BFF4BD28(a1, a2);
}

uint64_t destroy for SportsConfigResourceParameter()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFC8B878()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC8B918(uint64_t a1)
{
  sub_1BFC8BAC0();
  sub_1C151932C();
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();
  swift_release();

  uint64_t v3 = (void *)sub_1C1518E7C();
  sub_1C151808C();
  sub_1BFC8BA78((unint64_t *)&qword_1EB879FA0, (void (*)(uint64_t))sub_1BFC8BAC0);
  uint64_t v4 = sub_1C151914C();
  swift_release();

  return v4;
}

uint64_t sub_1BFC8BA78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFC8BAC0()
{
  if (!qword_1EB879F90)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB87A160);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879F90);
    }
  }
}

uint64_t sub_1BFC8BB28()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t destroy for FormatProgressViewNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) != 0) {
    uint64_t result = swift_release();
  }
  if ((~*(void *)(a1 + 32) & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for FeedIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  id v8 = v4;
  swift_bridgeObjectRetain();
  id v9 = v6;
  if (v7 == 1)
  {
    long long v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v7;
    uint64_t v11 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v11;
    uint64_t v13 = *(void **)(a2 + 104);
    uint64_t v12 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v13;
    *(void *)(a1 + 112) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  char v15 = (void *)(a2 + 120);
  unint64_t v16 = *(void *)(a2 + 128);
  if (v16 >= 0x11)
  {
    *(void *)(a1 + 120) = *v15;
    *(void *)(a1 + 128) = v16;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v15;
  }
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t initializeWithCopy for FeedLayoutResult(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFC8BD54()
{
  return 0;
}

uint64_t sub_1BFC8BED4()
{
  uint64_t result = 0x746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C797473;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC8BF4C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0x6369676F6CLL;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC8BFC4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return FormatFileVersionURIReferenceCollection.init(from:)(a1, *(void (***)(char *, uint64_t))(a2 + 16), *(void (***)(char *, uint64_t))(a2 + 24), a3);
}

uint64_t sub_1BFC8BFE4()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7373616C63;
      break;
    case 2:
      uint64_t result = 0x6F50726F68636E61;
      break;
    case 3:
      uint64_t result = 0x6F6974616D696E61;
      break;
    case 4:
      uint64_t result = 0x65646F4D6E7572;
      break;
    case 5:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 6:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC8C0B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLayeredMediaFilter.init(from:)(a1, a2);
}

uint64_t FormatLayeredMediaFilter.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = v2;
  uint64_t v25 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v25;
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      unint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      long long v3 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v17;
      *(void *)(v19 + 16) = &unk_1F1B85FD8;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0896158();
  long long v23 = 0uLL;
  sub_1C15206EC();
  long long v22 = xmmword_1C152C800;
  sub_1BFC8C3F4();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
  uint64_t v21 = v24;
  *(_OWORD *)uint64_t v13 = v23;
  *(void *)(v13 + 16) = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC8C3F4()
{
  unint64_t result = qword_1EB88B558;
  if (!qword_1EB88B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B558);
  }
  return result;
}

uint64_t sub_1BFC8C448@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatTagBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Image.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int v43 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  id v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v43;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      unint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      id v9 = (void *)swift_allocError();
      *(void *)uint64_t v25 = v24;
      *(void *)(v25 + 8) = v18;
      *(void *)(v25 + 16) = &unk_1F1B88538;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v24, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC8CA20();
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  sub_1C15206EC();
  switch((char)v35)
  {
    case 1:
      uint64_t v20 = 0x1000000000000004;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      unsigned int v21 = 1;
      break;
    case 2:
      long long v34 = xmmword_1C152C800;
      sub_1BFC8C9CC();
      sub_1C152065C();
      uint64_t v22 = v37;
      if (v37)
      {
        uint64_t v26 = v10;
        uint64_t v23 = v38;
        uint64_t v20 = v36;
        char v27 = v35;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v5);
        unsigned int v21 = v27 & 1;
      }
      else
      {
        static FormatTagIconStyle.default.getter((uint64_t)&v39);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
        unsigned int v21 = v39;
        uint64_t v20 = v40;
        uint64_t v22 = v41;
        uint64_t v23 = v42;
      }
      break;
    case 3:
      long long v34 = xmmword_1C152C800;
      sub_1BFC8C9CC();
      sub_1C152065C();
      uint64_t v22 = v37;
      if (v37)
      {
        uint64_t v28 = v10;
        uint64_t v23 = v38;
        uint64_t v29 = v36;
        char v30 = v35;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v5);
        unsigned int v21 = v30 & 1;
        uint64_t v20 = v29 | 4;
      }
      else
      {
        static FormatTagIconStyle.default.getter((uint64_t)&v39);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
        unsigned int v21 = v39;
        uint64_t v22 = v41;
        uint64_t v23 = v42;
        uint64_t v20 = v40 | 4;
      }
      break;
    case 4:
      long long v34 = xmmword_1C152C800;
      sub_1BFC8C9CC();
      sub_1C152065C();
      uint64_t v22 = v37;
      if (v37)
      {
        uint64_t v31 = v10;
        uint64_t v23 = v38;
        uint64_t v32 = v36;
        char v33 = v35;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v5);
        unsigned int v21 = v33 & 1;
        uint64_t v20 = v32 | 0x1000000000000000;
      }
      else
      {
        static FormatTagIconStyle.default.getter((uint64_t)&v39);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
        unsigned int v21 = v39;
        uint64_t v22 = v41;
        uint64_t v23 = v42;
        uint64_t v20 = v40 | 0x1000000000000000;
      }
      break;
    default:
      uint64_t v20 = 0x1000000000000004;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      break;
  }
  *uint64_t v11 = v21;
  v11[1] = v20;
  void v11[2] = v22;
  void v11[3] = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC8C9CC()
{
  unint64_t result = qword_1EB87BFB0[0];
  if (!qword_1EB87BFB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB87BFB0);
  }
  return result;
}

unint64_t sub_1BFC8CA20()
{
  unint64_t result = qword_1EB888110;
  if (!qword_1EB888110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888110);
  }
  return result;
}

uint64_t sub_1BFC8CA74@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatIssueCoverBinding.init(from:)(a1, a2);
}

uint64_t FormatIssueCoverBinding.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v3 = v2;
  uint64_t v22 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_13:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v22;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      long long v3 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v16;
      *(void *)(v19 + 16) = &unk_1F1B85E70;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC8CDD0();
  long long v23 = 0uLL;
  sub_1C15206EC();
  char v17 = v24;
  long long v23 = xmmword_1C152C800;
  if (v24) {
    sub_1BFC8CE24();
  }
  else {
    sub_1C08912A8();
  }
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v12 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC8CDD0()
{
  unint64_t result = qword_1EB867448;
  if (!qword_1EB867448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867448);
  }
  return result;
}

unint64_t sub_1BFC8CE24()
{
  unint64_t result = qword_1EB860178;
  if (!qword_1EB860178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860178);
  }
  return result;
}

uint64_t sub_1BFC8CE78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRunMode.init(from:)(a1, a2);
}

uint64_t FormatRunMode.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  id v9 = v2;
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      char v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      id v9 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v18;
      *(void *)(v21 + 16) = &unk_1F1B87688;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC8D378();
  long long v28 = 0uLL;
  sub_1C15206EC();
  switch(v29[0])
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      char v23 = 2;
      int v19 = 1;
      break;
    case 2:
      long long v28 = xmmword_1C152C800;
      sub_1BFC8D324();
      sub_1C152065C();
      if (v30 == 1)
      {
        char v24 = &dword_1EA1A7730;
        swift_beginAccess();
      }
      else
      {
        char v24 = (int *)v29;
      }
      int v19 = *v24;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      char v23 = 0;
      break;
    case 3:
      long long v28 = xmmword_1C152C800;
      sub_1BFC8D324();
      sub_1C152065C();
      if (v30 == 1)
      {
        uint64_t v25 = &dword_1EA1A7730;
        swift_beginAccess();
      }
      else
      {
        uint64_t v25 = (int *)v29;
      }
      int v19 = *v25;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      char v23 = 1;
      break;
    case 4:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      int v19 = 2;
      goto LABEL_18;
    default:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      int v19 = 0;
LABEL_18:
      char v23 = 2;
      break;
  }
  *(_DWORD *)uint64_t v11 = v19;
  *(unsigned char *)(v11 + 4) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC8D324()
{
  unint64_t result = qword_1EB85EAB8;
  if (!qword_1EB85EAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EAB8);
  }
  return result;
}

unint64_t sub_1BFC8D378()
{
  unint64_t result = qword_1EB865A70;
  if (!qword_1EB865A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865A70);
  }
  return result;
}

uint64_t sub_1BFC8D3CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVideoPlayerNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatVideoPlayerNodeBinding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = v2;
  uint64_t v25 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v24[-1] - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v10 = sub_1C1520EAC();
    char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = v25;
    if (v11)
    {
      uint64_t v13 = sub_1C152070C();
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        uint64_t v15 = (unint64_t *)(v13 + 40);
        while (1)
        {
          unint64_t v16 = *v15;
          if (*v15 >= 4) {
            break;
          }
          v15 += 2;
          if (!--v14) {
            goto LABEL_7;
          }
        }
        uint64_t v18 = *(v15 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1C02570B4();
        long long v3 = (void *)swift_allocError();
        *(void *)uint64_t v19 = v18;
        *(void *)(v19 + 8) = v16;
        *(void *)(v19 + 16) = &unk_1F1B88B50;
        *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1C0257108(v18, v16);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        goto LABEL_15;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFC8D7A0();
    v24[0] = 0uLL;
    sub_1C15206EC();
    char v17 = v23;
    if ((_BYTE)v23)
    {
      if (v23 != 1)
      {
        long long v23 = xmmword_1C152C800;
        sub_1BFE2DD44();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v20 = *(void *)&v24[0];
        long long v21 = *(_OWORD *)((char *)v24 + 8);
        goto LABEL_17;
      }
      v24[0] = xmmword_1C152C800;
      sub_1C04623C4();
    }
    else
    {
      v24[0] = xmmword_1C152C800;
      sub_1C007522C();
    }
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v20 = v23;
    long long v21 = 0uLL;
LABEL_17:
    *(void *)uint64_t v12 = v20;
    *(_OWORD *)(v12 + 8) = v21;
    *(unsigned char *)(v12 + 24) = v17;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_15:
  sub_1C0038728(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC8D7A0()
{
  unint64_t result = qword_1EB88D170;
  if (!qword_1EB88D170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D170);
  }
  return result;
}

uint64_t sub_1BFC8D7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for WeakSharedItemManagerObserver();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 24) = a3;
  swift_unknownObjectWeakAssign();
  uint64_t v6 = (void *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  uint64_t v7 = swift_beginAccess();
  MEMORY[0x1C18C66D0](v7);
  if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C151EC8C();
  }
  sub_1C151ECEC();
  sub_1C151EBEC();
  return swift_endAccess();
}

uint64_t type metadata accessor for WeakSharedItemManagerObserver()
{
  return self;
}

void sub_1BFC8D8EC()
{
  sub_1C151FD8C();
  if (v0 <= 0x3F)
  {
    sub_1BFE79E3C(319, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t FeedCursorReference.init(cursorContainer:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EB886330 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v4 = FeedCursorStoreManager.createToken<A>(cursorContainer:)(a1);
  swift_release();
  if (v4) {
    swift_release();
  }
  else {
    uint64_t v4 = a1 | 0x4000000000000000;
  }
  *(void *)(v2 + 16) = v4;
  return v2;
}

uint64_t sub_1BFC8DAD8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BFC8DB2C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1BFC8DB88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAnimationNodeKeyPath.init(from:)(a1, a2);
}

uint64_t FormatAnimationNodeKeyPath.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  id v9 = v2;
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    uint64_t v21 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v21);
  }
  uint64_t v10 = a1[3];
  uint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v11 = sub_1C1520EAC();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v6;
  uint64_t v13 = v32;
  if (v10)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      unint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      id v9 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v17;
      *(void *)(v20 + 16) = &unk_1F1B83B30;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v19, v17);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v5);
      a1 = v27;
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC8DFE8();
  long long v28 = 0uLL;
  sub_1C15206EC();
  char v18 = v31;
  if (v31 == 4)
  {
    sub_1BFEFF3E8(0, &qword_1EA19D6F0, (uint64_t (*)(void))sub_1C04674D4, (uint64_t)&type metadata for FormatSizeEquation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeKeyPathAnimation);
    long long v31 = xmmword_1C152C800;
    sub_1C0871FF4();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v23 = v28;
    long long v24 = v29;
    long long v25 = v30;
  }
  else
  {
    sub_1BFC8E03C();
    long long v31 = xmmword_1C152C800;
    sub_1C085F050(&qword_1EB85F708, (void (*)(uint64_t))sub_1BFC8E03C);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v23 = v28;
    *(void *)&long long v24 = v29;
    long long v25 = 0uLL;
  }
  *(_OWORD *)uint64_t v13 = v23;
  *(_OWORD *)(v13 + 16) = v24;
  *(_OWORD *)(v13 + 32) = v25;
  *(unsigned char *)(v13 + 48) = v18;
  uint64_t v21 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

unint64_t sub_1BFC8DFE8()
{
  unint64_t result = qword_1EB867D80;
  if (!qword_1EB867D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867D80);
  }
  return result;
}

void sub_1BFC8E03C()
{
  if (!qword_1EB85F710[0])
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1C00823AC();
    unint64_t v0 = type metadata accessor for FormatAnimationNodeKeyPathAnimation();
    if (!v1) {
      atomic_store(v0, qword_1EB85F710);
    }
  }
}

void *sub_1BFC8E0D8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = MEMORY[0x1E4FBC870];
  v1[2] = MEMORY[0x1E4FBC870];
  v1[3] = v3;
  v1[4] = v3;
  if (a1)
  {
    sub_1C0091940();
    swift_allocObject();
    swift_retain();
    sub_1C1518B6C();
    swift_allocObject();
    swift_weakInit();
    sub_1C1518B8C();
    swift_release();
    swift_release();
    sub_1C15181DC();
    swift_release();
    swift_release();
  }
  id v4 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v5 = qword_1EB87C338;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v2, sel_debugClearRunModeCache, qword_1EB93C730, 0);

  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1BFC8E268()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BFC8E308()
{
  uint64_t v1 = *((void *)v0 + 60);
  uint64_t v2 = *(void *)(*((void *)v0 + 62) + 40);
  *((void *)v0 + 129) = v2;
  uint64_t v3 = *(void *)(v1 + qword_1EB93C678);
  *((void *)v0 + 130) = v3;
  *((void *)v0 + 58) = v3;
  *((void *)v0 + 131) = type metadata accessor for FeedGroupEmitter();
  *((void *)v0 + 132) = sub_1C151ED5C();
  *((void *)v0 + 133) = swift_getWitnessTable();
  if (sub_1C151F15C())
  {
    uint64_t v4 = *((void *)v0 + 60);
    (*(void (**)(void, uint64_t, uint64_t, void))(*((void *)v0 + 127) + 56))(*((void *)v0 + 69), 1, 1, *((void *)v0 + 66));
    uint64_t v5 = sub_1C151ECBC();
    *((void *)v0 + 148) = v5;
    uint64_t v6 = *(void *)(v4 + qword_1EB93CB78);
    uint64_t v7 = sub_1C041F22C();
    *((void *)v0 + 149) = v7;
    uint64_t v8 = (void *)swift_task_alloc();
    *((void *)v0 + 150) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1C041A574;
    uint64_t v9 = *((void *)v0 + 69);
    double v10 = v0[61];
    uint64_t v11 = *((void *)v0 + 59);
    uint64_t v12 = (uint64_t *)*((void *)v0 + 60);
    return sub_1C041F2C0(v11, v9, 0, v5, v6, v7, v12, v2, v10);
  }
  else
  {
    uint64_t v14 = (void *)swift_task_alloc();
    *((void *)v0 + 134) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1BFC61270;
    uint64_t v15 = *((void *)v0 + 128);
    double v16 = v0[61];
    unint64_t v17 = (uint64_t *)*((void *)v0 + 60);
    return sub_1C041D590(v15, v3, v17, 0, v16);
  }
}

uint64_t sub_1BFC8E54C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8959B0);
  uint64_t result = sub_1C151819C();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1517D0C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1BFD52288((unint64_t *)&qword_1EB871390, 255, MEMORY[0x1E4F4AB68]);
    sub_1C151BBBC();
    swift_allocObject();
    uint64_t v6 = sub_1C151BB9C();
    type metadata accessor for CoverIssueViewRenderer();
    uint64_t v7 = swift_allocObject();
    uint64_t result = sub_1BFC773DC(&v9, v7 + 24);
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 64) = v6;
    *a2 = v7;
    a2[1] = (uint64_t)&off_1F1C36738;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BFC8E74C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1517D0C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1BFD52288((unint64_t *)&qword_1EB871390, 255, MEMORY[0x1E4F4AB68]);
    sub_1C151BBBC();
    swift_allocObject();
    uint64_t v6 = sub_1C151BB9C();
    type metadata accessor for CoverChannelViewRenderer();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    uint64_t result = sub_1BFC773DC(&v9, v7 + 24);
    *(void *)(v7 + 64) = v6;
    *a2 = v7;
    a2[1] = (uint64_t)&off_1F1C26AE0;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BFC8E96C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB871740);
  uint64_t result = sub_1C151819C();
  if (!v14)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895408);
  uint64_t result = sub_1C151819C();
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8716C0);
  uint64_t result = sub_1C151819C();
  if (!v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC60398();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC5175C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for NativeAdService();
    uint64_t v8 = (void *)swift_allocObject();
    v8[19] = MEMORY[0x1E4FBC868];
    sub_1BFC773DC(&v13, (uint64_t)(v8 + 2));
    sub_1BFC773DC(&v11, (uint64_t)(v8 + 7));
    uint64_t result = sub_1BFC773DC(&v9, (uint64_t)(v8 + 12));
    v8[17] = v5;
    v8[18] = v6;
    a2[3] = v7;
    a2[4] = &protocol witness table for NativeAdService;
    *a2 = v8;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BFC8EB64(void *a1)
{
  uint64_t v2 = sub_1C151D5DC();
  MEMORY[0x1F4188790](v2 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB871740);
  uint64_t result = sub_1C151819C();
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8716C0);
  uint64_t result = sub_1C151819C();
  if (!v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC4CE74();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC4730C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1C151D5CC();
    sub_1BFC5DC24();
    swift_allocObject();
    return sub_1C151D55C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BFC8ED40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatGroupBinding.Image.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_17:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    uint64_t v26 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  uint64_t v11 = v7;
  uint64_t v12 = v35;
  uint64_t v13 = a1[3];
  long long v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_8;
        }
      }
      uint64_t v24 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v25 = v24;
      *(void *)(v25 + 8) = v19;
      *(void *)(v25 + 16) = &unk_1F1B85240;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v24, v19);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v10 = v29;
      goto LABEL_17;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFC8F2E4();
  long long v31 = 0uLL;
  sub_1C15206EC();
  switch((char)v30)
  {
    case 1:
      long long v30 = xmmword_1C152C800;
      sub_1BFD92BB4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v20 = 0;
      long long v23 = v31;
      long long v22 = v32;
      char v21 = 32;
      break;
    case 2:
      long long v31 = xmmword_1C152C800;
      sub_1BFD92B0C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v20 = 0;
      long long v22 = 0uLL;
      long long v23 = v30;
      char v21 = 64;
      break;
    case 3:
      long long v30 = xmmword_1C152C800;
      sub_1C017C958();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v20 = 0;
      long long v23 = v31;
      long long v22 = (unsigned __int16)v32;
      char v21 = 96;
      break;
    case 4:
      long long v30 = xmmword_1C152C800;
      sub_1BFD92BB4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v20 = 0;
      long long v23 = v31;
      long long v22 = v32;
      char v21 = 0x80;
      break;
    case 5:
      long long v30 = xmmword_1C152C800;
      sub_1C088A240();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      long long v23 = v31;
      long long v22 = v32;
      uint64_t v20 = v33;
      char v21 = v34 | 0xA0;
      break;
    default:
      long long v31 = xmmword_1C152C800;
      sub_1BFD92AB8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v20 = 0;
      char v21 = 0;
      long long v22 = 0uLL;
      long long v23 = v30;
      break;
  }
  *(_OWORD *)uint64_t v12 = v23;
  *(_OWORD *)(v12 + 16) = v22;
  *(void *)(v12 + 32) = v20;
  *(unsigned char *)(v12 + 40) = v21;
  uint64_t v26 = (uint64_t)v29;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

unint64_t sub_1BFC8F2E4()
{
  unint64_t result = qword_1EB8885F0;
  if (!qword_1EB8885F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8885F0);
  }
  return result;
}

uint64_t sub_1BFC8F338@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageNodeRequestAdjustment.init(from:)(a1, a2);
}

uint64_t FormatImageNodeRequestAdjustment.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v24 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  long long v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v5;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      long long v9 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v16;
      *(void *)(v23 + 16) = &unk_1F1B85AB0;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v16);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC8FDAC();
  long long v25 = 0uLL;
  sub_1C15206EC();
  uint64_t v18 = v27;
  switch((char)v24)
  {
    case 1:
      long long v24 = xmmword_1C152C800;
      sub_1BFE1C834();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      char v20 = 0;
      long long v19 = v25;
      long long v21 = v26;
      break;
    case 2:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 1;
      break;
    case 3:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 2;
      break;
    case 4:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 3;
      break;
    case 5:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 4;
      break;
    case 6:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 5;
      break;
    case 7:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 6;
      break;
    case 8:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 7;
      break;
    case 9:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 8;
      break;
    case 10:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 9;
      break;
    case 11:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 10;
      break;
    case 12:
      sub_1BFE41AFC();
      long long v25 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      *(void *)&long long v19 = v24;
      long long v21 = 0uLL;
      char v20 = 11;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      long long v19 = 0uLL;
      char v20 = 12;
      long long v21 = 0uLL;
      break;
  }
  *(_OWORD *)uint64_t v18 = v19;
  *(_OWORD *)(v18 + 16) = v21;
  *(unsigned char *)(v18 + 32) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC8FDAC()
{
  unint64_t result = qword_1EB88E630;
  if (!qword_1EB88E630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E630);
  }
  return result;
}

uint64_t sub_1BFC8FE00@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatIssueCoverContent.init(from:)(a1, a2);
}

uint64_t FormatIssueCoverContent.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v16;
      *(void *)(v22 + 16) = &unk_1F1B85EC0;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC90214();
  long long v26 = 0uLL;
  sub_1C15206EC();
  if (v25)
  {
    sub_1BFEFF3E8(0, &qword_1EA19DD08, (uint64_t (*)(void))sub_1C08912FC, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    long long v25 = xmmword_1C152C800;
    sub_1C0891350();
    sub_1C15206EC();
    uint64_t v17 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    long long v18 = v26;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v18;
    unint64_t v20 = v19 | 0x8000000000000000;
  }
  else
  {
    long long v26 = xmmword_1C152C800;
    sub_1BFC90268();
    sub_1C15206EC();
    uint64_t v17 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v24 = v25;
    unint64_t v20 = swift_allocObject();
    *(unsigned char *)(v20 + 16) = v24;
  }
  *uint64_t v17 = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC90214()
{
  unint64_t result = qword_1EB867460;
  if (!qword_1EB867460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867460);
  }
  return result;
}

unint64_t sub_1BFC90268()
{
  unint64_t result = qword_1EB860690;
  if (!qword_1EB860690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860690);
  }
  return result;
}

void *_s8NewsFeed20FormatProcessedColorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFC902F8()
{
  BYTE8(v2) = 0;
  *(void *)&long long v2 = *v0;
  sub_1C152036C();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return *(void *)((char *)&v2 + 1);
}

uint64_t sub_1BFC90390()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC903F0()
{
  unint64_t result = qword_1EB875638;
  if (!qword_1EB875638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875638);
  }
  return result;
}

uint64_t sub_1BFC90444(void *a1, void *a2, uint64_t a3)
{
  v29[2] = *a1;
  uint64_t v35 = *(void *)(v3 + 16);
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  unsigned char v29[4] = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
  v29[3] = a2[11];
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v10 = v34;
  if (!v34)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = v33;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1BFE9C558();
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v10;
  v29[1] = *a2;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v14 = v32;
  if (!v32)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = v31;
  *(void *)(v8 + 96) = v12;
  *(void *)(v8 + 104) = v13;
  *(void *)(v8 + 72) = v15;
  *(void *)(v8 + 80) = v14;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1BFC71AF8(a3, (uint64_t)a1, (uint64_t)a2);
  if (v30) {
    return a3;
  }
  uint64_t v17 = v16;
  long long v30 = v29;
  uint64_t v33 = v16;
  MEMORY[0x1F4188790](v16);
  sub_1BFC6CA08(0, &qword_1EB85C318);
  uint64_t v18 = type metadata accessor for FeedDatabaseGroup();
  sub_1BFD989C8(&qword_1EB85C320, &qword_1EB85C318);
  a3 = sub_1C151E97C();
  uint64_t v31 = a3;
  sub_1C151ED5C();
  swift_getWitnessTable();
  sub_1C151F12C();
  if (v33)
  {
    sub_1C008B864();
    swift_release();
  }
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152A660;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v20 = v34;
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  if (!v34) {
    goto LABEL_12;
  }
  uint64_t v22 = v33;
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 64) = v13;
  *(void *)(v19 + 32) = v22;
  *(void *)(v19 + 40) = v20;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v23 = v32;
  if (v32)
  {
    uint64_t v24 = v31;
    *(void *)(v19 + 96) = v21;
    *(void *)(v19 + 104) = v13;
    *(void *)(v19 + 72) = v24;
    *(void *)(v19 + 80) = v23;
    uint64_t v25 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBB550];
    uint64_t v27 = MEMORY[0x1E4FBB5C8];
    *(void *)(v19 + 136) = MEMORY[0x1E4FBB550];
    *(void *)(v19 + 144) = v27;
    *(void *)(v19 + 112) = v25;
    uint64_t v28 = MEMORY[0x1C18C6830](a3, v18);
    *(void *)(v19 + 176) = v26;
    *(void *)(v19 + 184) = v27;
    *(void *)(v19 + 152) = v28;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    return a3;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1BFC90870()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.9, 1.0);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.1, 1.0);
  long long v2 = self;
  id v3 = objc_msgSend(v2, sel_blackColor);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.0, 0.1);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 1.0, 0.1);
  id v6 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  qword_1EB877AB8 = (uint64_t)v0;
  unk_1EB877AC0 = v1;
  qword_1EB877AC8 = (uint64_t)v3;
  unk_1EB877AD0 = v6;
}

uint64_t sub_1BFC90990()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFC909F0()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFC90A40()
{
  unint64_t result = qword_1EB88CB38;
  if (!qword_1EB88CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88CB38);
  }
  return result;
}

uint64_t FormatLayeredMediaFilter.Monochrome.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v32 = (char *)&v29 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - v9;
  sub_1C089636C();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v31 = v1[1];
  uint64_t v29 = v1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C0896240();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C085F050(&qword_1EB892110, (void (*)(uint64_t))sub_1C0896240);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatLayeredMediaFilter.Monochrome, v20, v15, (uint64_t)&type metadata for FormatLayeredMediaFilter.Monochrome, v18, (uint64_t)&type metadata for FormatVersions.StarSkyC, v16, (uint64_t)v13, v19, (uint64_t)&off_1F1C39A28);
  sub_1BFDC11A4(v14);
  if (qword_1EB887650 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAE0);
  uint64_t v23 = *(void (**)(char *))(*(void *)(v21 - 8) + 16);
  uint64_t v33 = v22;
  v23(v10);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06F9DA8(v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  sub_1BFDC11BC(v14);
  if (!v2)
  {
    uint64_t v24 = (uint64_t)v32;
    ((void (*)(char *, uint64_t, uint64_t))v23)(v32, v33, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v31;
    sub_1BFEF683C(v31);
    sub_1C06FA000(v25, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v25);
    uint64_t v26 = (uint64_t)v30;
    ((void (*)(char *, uint64_t, uint64_t))v23)(v30, v33, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v29;
    sub_1BFEF683C(v29);
    sub_1C06FA000(v27, 2, 0, 0, v26, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v27);
  }
  return sub_1BFEFEB68((uint64_t)v13, (uint64_t (*)(void))sub_1C089636C);
}

uint64_t sub_1BFC90EB0()
{
  uint64_t v1 = 0x6F69746172;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1937207154;
  }
}

uint64_t sub_1BFC90EF8()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x726F7463656C6573;
  }
}

uint64_t sub_1BFC90F30()
{
  uint64_t v0 = sub_1C151E16C();
  uint64_t v15 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151E1DC();
  uint64_t v3 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151E17C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCB28], v6);
  uint64_t v10 = (void *)sub_1C151F5BC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  aBlock[4] = sub_1BFC72DF4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_107;
  uint64_t v11 = _Block_copy(aBlock);
  sub_1C151E19C();
  aBlock[7] = MEMORY[0x1E4FBC860];
  sub_1BFDE8E14((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1BFDE8E14((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v5, v2, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v14);
  sub_1C009144C();
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1BFC912D0(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFD0D6E4(0, (unint64_t *)&qword_1EB879D60, MEMORY[0x1E4FBB320]);
  sub_1BFD0CE4C(&qword_1EB85C370, &qword_1EB85B680);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BFC913D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatDecorationCollection.init(from:)(a1, a2);
}

uint64_t FormatDecorationCollection.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_1BFC9188C(0, &qword_1EB85C608, (uint64_t (*)(void))sub_1BFC91838, (uint64_t)&type metadata for FormatDecorationCollection.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC91838();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v12;
    sub_1BFC917A8();
    sub_1BFC918F4(&qword_1EB85C358, &qword_1EB85B668);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatDecorationCollection.encode(to:)(void *a1)
{
  sub_1BFC9188C(0, &qword_1EB85C6B8, (uint64_t (*)(void))sub_1BFC91838, (uint64_t)&type metadata for FormatDecorationCollection.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC91838();
  sub_1C1520F0C();
  void v10[3] = v8;
  sub_1BFC917A8();
  sub_1BFC918F4(&qword_1EB85C350, &qword_1EB85B660);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BFC917A8()
{
  if (!qword_1EB879D50)
  {
    sub_1C0158DBC(255, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879D50);
    }
  }
}

unint64_t sub_1BFC91838()
{
  unint64_t result = qword_1EB85BF98;
  if (!qword_1EB85BF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BF98);
  }
  return result;
}

void sub_1BFC9188C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1BFC918F4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC917A8();
    sub_1BFC91970(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC91970(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC9188C(255, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC919EC()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C151A6FC();
}

id sub_1BFC91A38@<X0>(void *a1@<X8>)
{
  id v4 = *v1;
  a1[3] = sub_1BFF6C3A8();
  a1[4] = sub_1BFC91AC4((unint64_t *)&unk_1EB883210, (void (*)(uint64_t))sub_1BFF6C3A8);
  *a1 = v4;
  return v4;
}

uint64_t sub_1BFC91AC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC91B0C(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v83 = a3;
  uint64_t v84 = a2;
  uint64_t v79 = *(void *)v3;
  uint64_t v81 = *a1;
  uint64_t v87 = *(void *)(v79 + 88);
  uint64_t v80 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v77 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v86 = (char *)&v76 - v7;
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v78 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCD9524();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v89 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v76 - v18;
  __n128 v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v76 - v22;
  uint64_t v92 = v3;
  uint64_t v85 = *((void *)v3 + 4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v76 - v22, v85 + qword_1EB93C2C8, v8, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v23, 0, 1, v8);
  int v82 = a1;
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1BFF97B80((uint64_t)v23, (uint64_t)v14);
  sub_1BFF97B80((uint64_t)v19, v24);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) == 1)
  {
    sub_1BFE545EC((uint64_t)v19, (uint64_t (*)(void))sub_1BFF97C40);
    sub_1BFE545EC((uint64_t)v23, (uint64_t (*)(void))sub_1BFF97C40);
    int v26 = v25(v24, 1, v8);
    uint64_t v27 = v92;
    if (v26 == 1)
    {
      sub_1BFE545EC((uint64_t)v14, (uint64_t (*)(void))sub_1BFF97C40);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1BFF97B80((uint64_t)v14, v89);
  if (v25(v24, 1, v8) == 1)
  {
    sub_1BFE545EC((uint64_t)v19, (uint64_t (*)(void))sub_1BFF97C40);
    sub_1BFE545EC((uint64_t)v23, (uint64_t (*)(void))sub_1BFF97C40);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v89, v8);
    uint64_t v27 = v92;
LABEL_6:
    sub_1BFE545EC((uint64_t)v14, (uint64_t (*)(void))sub_1BFCD9524);
LABEL_14:
    uint64_t v60 = *((void *)v27 + 3);
    uint64_t v61 = swift_retain();
    uint64_t v62 = v88;
    uint64_t v63 = v84(v61);
    if (v62) {
      return swift_release();
    }
    uint64_t v64 = v63;
    uint64_t v92 = (char *)*((void *)v27 + 2);
    uint64_t v89 = *((void *)v27 + 6);
    uint64_t v65 = v77;
    uint64_t v66 = v87;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, &v27[*(void *)(*(void *)v27 + 168)], v87);
    swift_retain();
    swift_retain();
    uint64_t v67 = v82;
    uint64_t v68 = sub_1BFC3B250();
    LODWORD(v88) = v68;
    uint64_t v86 = (char *)&v76;
    uint64_t v69 = *((void *)v27 + 8);
    uint64_t v90 = v67[14];
    MEMORY[0x1F4188790](v68);
    uint64_t v70 = v79;
    *(&v76 - 4) = *(void *)(v79 + 80);
    *(&v76 - 3) = v66;
    *((_OWORD *)&v76 - 1) = *(_OWORD *)(v70 + 96);
    type metadata accessor for FeedDatabaseGroup();
    uint64_t v71 = sub_1C151ED5C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v74 = sub_1C035E7C8((void (*)(char *, char *))sub_1BFD7E77C, (uint64_t)(&v76 - 6), v71, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v73);
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_1BFFB9A98(v74, v69);
    swift_bridgeObjectRelease();
    char v52 = v88 & 1;
    uint64_t v53 = v60;
    uint64_t v54 = v64;
    uint64_t v56 = (uint64_t)v92;
    uint64_t v57 = v89;
    uint64_t v55 = (uint64_t)v65;
    uint64_t v58 = 0;
    uint64_t v59 = v75;
    return sub_1C1084BA8(v53, v54, v56, v57, v55, v58, v52, v59);
  }
  uint64_t v28 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v78, v24, v8);
  sub_1BFC3B55C();
  uint64_t v29 = v89;
  char v30 = sub_1C151E5CC();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v28, v8);
  sub_1BFE545EC((uint64_t)v19, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1BFE545EC((uint64_t)v23, (uint64_t (*)(void))sub_1BFF97C40);
  v31((char *)v29, v8);
  sub_1BFE545EC((uint64_t)v14, (uint64_t (*)(void))sub_1BFF97C40);
  uint64_t v27 = v92;
  if ((v30 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v32 = *((void *)v27 + 2);
  uint64_t v33 = *((void *)v27 + 3);
  uint64_t v34 = *((void *)v27 + 6);
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v86, &v27[*(void *)(*(void *)v27 + 168)], v87);
  uint64_t v35 = *((void *)v27 + 5);
  uint64_t v36 = v82[14];
  uint64_t v37 = type metadata accessor for FeedDatabaseGroup();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = MEMORY[0x1C18C6830](v36, v37);
  uint64_t v39 = v35 + result;
  if (__OFADD__(v35, result))
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v91)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  BOOL v40 = __OFADD__(v39, v90);
  uint64_t v41 = v39 + v90;
  if (v40) {
    goto LABEL_20;
  }
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v91)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  if (__OFADD__(v41, v90)) {
    goto LABEL_21;
  }
  uint64_t v92 = (char *)(v41 + v90);
  uint64_t v42 = sub_1BFC3B250();
  LODWORD(v84) = v42;
  uint64_t v89 = v34;
  uint64_t v90 = v36;
  uint64_t v43 = *((void *)v27 + 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = v33;
  uint64_t v45 = v79;
  uint64_t v46 = v87;
  *(&v76 - 4) = *(void *)(v79 + 80);
  *(&v76 - 3) = v46;
  *((_OWORD *)&v76 - 1) = *(_OWORD *)(v45 + 96);
  uint64_t v47 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v50 = sub_1C035E7C8((void (*)(char *, char *))sub_1BFD7E77C, (uint64_t)(&v76 - 6), v47, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v48, MEMORY[0x1E4FBC278], v49);
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_1BFFB9A98(v50, v43);
  swift_bridgeObjectRelease();
  char v52 = v84 & 1;
  uint64_t v53 = v44;
  uint64_t v54 = v85;
  uint64_t v55 = (uint64_t)v86;
  uint64_t v56 = v32;
  uint64_t v57 = v89;
  uint64_t v58 = (uint64_t)v92;
  uint64_t v59 = v51;
  return sub_1C1084BA8(v53, v54, v56, v57, v55, v58, v52, v59);
}

uint64_t sub_1BFC9242C()
{
  sub_1BFC92484();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFC92484()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 88);

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 128);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitterCachedOutput();
  uint64_t v3 = sub_1C151FD8C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v5 = sub_1C151982C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v7 = sub_1C15197FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t FeedCursorTracker.__deallocating_deinit()
{
  FeedCursorTracker.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedCursorTracker.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1BFC928EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFontAttributes.init(from:)(a1, a2);
}

uint64_t FormatFontAttributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C0884E94();
  uint64_t v7 = v6;
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0884F28();
  sub_1C085F050(&qword_1EB891E80, (void (*)(uint64_t))sub_1C0884F28);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v37;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *((void *)v16 - 1);
      uint64_t v36 = *((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      uint64_t v21 = v12;
      MEMORY[0x1F4188790](v20);
      *(void *)&v32[-32] = &_s10CodingKeysON_145;
      *(void *)&v32[-24] = sub_1C0884FAC();
      *(void *)&v32[-16] = sub_1BFC92DB8();
      *(void *)&v32[-8] = sub_1C0885000();
      swift_getKeyPath();
      swift_retain();
      uint64_t v22 = sub_1C085FB14((uint64_t)&unk_1F1B84EA8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v23 = v36;
      *(void *)uint64_t v24 = v36;
      *(void *)(v24 + 8) = v19;
      *(void *)(v24 + 16) = v22;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v19, 1);
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v13, v7);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC92E60();
  long long v40 = 0uLL;
  char v41 = 0;
  sub_1C152065C();
  char v17 = v38;
  long long v40 = xmmword_1C153AB20;
  char v41 = 0;
  sub_1BFE7E344();
  sub_1C152065C();
  uint64_t v25 = v9;
  uint64_t v26 = v7;
  uint64_t v27 = v38;
  int v28 = v39;
  long long v40 = xmmword_1C1557FA0;
  char v41 = 0;
  uint64_t v29 = sub_1C152064C();
  int v33 = v30;
  uint64_t v34 = v29;
  int v35 = v28;
  uint64_t v36 = v27;
  long long v40 = xmmword_1C1557FB0;
  char v41 = 0;
  sub_1BFC92E0C();
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v25, v26);
  char v31 = v38;
  *(unsigned char *)a2 = v17;
  *(void *)(a2 + 8) = v36;
  *(unsigned char *)(a2 + 16) = v35;
  *(void *)(a2 + 24) = v34;
  *(unsigned char *)(a2 + 32) = v33 & 1;
  *(unsigned char *)(a2 + 33) = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC92DB8()
{
  unint64_t result = qword_1EB889688;
  if (!qword_1EB889688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889688);
  }
  return result;
}

unint64_t sub_1BFC92E0C()
{
  unint64_t result = qword_1EB87E4F0;
  if (!qword_1EB87E4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E4F0);
  }
  return result;
}

unint64_t sub_1BFC92E60()
{
  unint64_t result = qword_1EB87DE30;
  if (!qword_1EB87DE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87DE30);
  }
  return result;
}

uint64_t sub_1BFC92EB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC92EE4();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC92EE4()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17) {
    return 23;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC92F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1C151772C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1C151757C() - 8);
  unint64_t v7 = (*(void *)(v6 + 64)
      + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + v7);
  uint64_t v9 = *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  char v10 = *(unsigned char *)(v1 + 16);
  return sub_1BFDF9690(v10, v8, v9, a1);
}

void sub_1BFC93048(unsigned int *a1, int a2, int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v7 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v7 <= 0x10) {
    unint64_t v7 = 16;
  }
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 48 > v7) {
    unint64_t v7 = (v7 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  size_t v10 = ((v8 + 31) & ~(v8 | 7))
      + (((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (a3 < 0)
  {
    unsigned int v12 = a3 - 2147483646;
    if (v10) {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v11 = 1;
    }
    else {
      int v11 = v13;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_9;
    }
  }
  else
  {
    int v11 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_9:
      switch(v11)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        case 3:
          goto LABEL_36;
        case 4:
          *(unsigned int *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        default:
LABEL_29:
          if (a2) {
LABEL_30:
          }
            *(void *)(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9)
                       + v7
                       + 8) & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v10) {
    int v14 = 1;
  }
  else {
    int v14 = a2 - 0x7FFFFFFF;
  }
  if (v10)
  {
    bzero(a1, v10);
    *a1 = a2 ^ 0x80000000;
  }
  switch(v11)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v14;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v14;
      break;
    case 3:
LABEL_36:
      __break(1u);
      break;
    case 4:
      *(unsigned int *)((char *)a1 + v10) = v14;
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for FormatVideoNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned int v7 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v7 <= 0xFD)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    sub_1BFF046A0(v8, v9, v7);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  if (*(unsigned __int8 *)(a2 + 144) == 254)
  {
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  else
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    swift_retain();
  }
  uint64_t v12 = *(void *)(a2 + 152);
  if ((~v12 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 152) = v12;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

uint64_t sub_1BFC93408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v18[2] = a3;
  uint64_t v19 = a4;
  v18[1] = a2;
  uint64_t v4 = sub_1C151718C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151719C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v11 = (void *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1C1516FEC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC93818();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB278], v12);
  *long long v11 = sub_1C151E62C();
  v11[1] = v16;
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB408], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  uint64_t result = sub_1C15171EC();
  uint64_t *v19 = result;
  return result;
}

uint64_t sub_1BFC93668(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v16 = a5;
  uint64_t v6 = sub_1C151718C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1516FEC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC93818();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *a2, v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAB400], v6);
  uint64_t result = sub_1C15171DC();
  *uint64_t v16 = result;
  return result;
}

void sub_1BFC93818()
{
  if (!qword_1EB896588)
  {
    sub_1C1516FEC();
    sub_1BFC938AC(&qword_1EB896580, MEMORY[0x1E4FAB298]);
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB896588);
    }
  }
}

uint64_t sub_1BFC938AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s8NewsFeed19FormatPropertyValueOwCP_0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (((((unint64_t)*a2 >> 60) & 0x8F | (16 * (*a2 & 7))) ^ 0x7E) >= 0x72) {
    swift_retain();
  }
  *a1 = v3;
  return a1;
}

uint64_t sub_1BFC9393C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_1BFC939F8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1FE2C(0, &qword_1EB87A6B0, (uint64_t (*)(uint64_t))sub_1BFF9544C, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C152C610;
  uint64_t v13 = type metadata accessor for FormatOption();
  uint64_t v96 = swift_allocBox();
  uint64_t v15 = v14;
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1C151928C();
  uint64_t v102 = __swift_project_value_buffer(v16, (uint64_t)qword_1EB93CA98);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v18 = v17 + 16;
  uint64_t v100 = v16;
  v104(v11, v102, v16);
  uint64_t v103 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v105.origin.x = a1;
  v105.origin.y = a2;
  v105.size.width = a3;
  v105.size.height = a4;
  CGFloat MinX = CGRectGetMinX(v105);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  *(CGFloat *)(v20 + 16) = MinX;
  *(void *)(v20 + 24) = v21;
  *uint64_t v15 = 0x586E694D6B73616DLL;
  v15[1] = 0xE800000000000000;
  v15[2] = v20 | 0x3000000000000000;
  v15[3] = 1;
  uint64_t v22 = (uint64_t)v15 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v22);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
  uint64_t v101 = v8;
  v23(v22, 0, 1, v8);
  *(void *)(v12 + 32) = v96;
  uint64_t v96 = swift_allocBox();
  uint64_t v97 = v18;
  uint64_t v25 = v24;
  uint64_t v26 = v102;
  uint64_t v27 = v16;
  int v28 = v104;
  v104(v11, v102, v27);
  swift_storeEnumTagMultiPayload();
  v106.origin.x = a1;
  v106.origin.y = a2;
  v106.size.width = a3;
  v106.size.height = a4;
  CGFloat MinY = CGRectGetMinY(v106);
  uint64_t v30 = swift_allocObject();
  *(CGFloat *)(v30 + 16) = MinY;
  *(void *)(v30 + 24) = MEMORY[0x1E4FBC860];
  void *v25 = 0x596E694D6B73616DLL;
  v25[1] = 0xE800000000000000;
  v25[2] = v30 | 0x3000000000000000;
  v25[3] = 1;
  uint64_t v31 = (uint64_t)v25 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v31);
  v23(v31, 0, 1, v8);
  unint64_t v98 = v23;
  *(void *)(v12 + 40) = v96;
  uint64_t v96 = swift_allocBox();
  int v33 = v32;
  uint64_t v34 = v100;
  v28(v11, v26, v100);
  swift_storeEnumTagMultiPayload();
  v107.origin.x = a1;
  v107.origin.y = a2;
  v107.size.width = a3;
  v107.size.height = a4;
  CGFloat MidX = CGRectGetMidX(v107);
  uint64_t v36 = swift_allocObject();
  *(CGFloat *)(v36 + 16) = MidX;
  *(void *)(v36 + 24) = MEMORY[0x1E4FBC860];
  void *v33 = 0x5864694D6B73616DLL;
  v33[1] = 0xE800000000000000;
  v33[2] = v36 | 0x3000000000000000;
  void v33[3] = 1;
  uint64_t v37 = (uint64_t)v33 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v37);
  uint64_t v38 = v101;
  v23(v37, 0, 1, v101);
  *(void *)(v12 + 48) = v96;
  uint64_t v96 = swift_allocBox();
  long long v40 = v39;
  uint64_t v41 = v102;
  v104(v11, v102, v34);
  swift_storeEnumTagMultiPayload();
  v108.origin.x = a1;
  v108.origin.y = a2;
  v108.size.width = a3;
  v108.size.height = a4;
  CGFloat MidY = CGRectGetMidY(v108);
  uint64_t v43 = swift_allocObject();
  *(CGFloat *)(v43 + 16) = MidY;
  *(void *)(v43 + 24) = MEMORY[0x1E4FBC860];
  *long long v40 = 0x5964694D6B73616DLL;
  v40[1] = 0xE800000000000000;
  v40[2] = v43 | 0x3000000000000000;
  v40[3] = 1;
  uint64_t v44 = (uint64_t)v40 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v44);
  uint64_t v45 = v98;
  uint64_t v99 = v9 + 56;
  v98(v44, 0, 1, v38);
  *(void *)(v12 + 56) = v96;
  uint64_t v96 = swift_allocBox();
  uint64_t v47 = v46;
  uint64_t v48 = v41;
  uint64_t v49 = v100;
  uint64_t v50 = v104;
  v104(v11, v48, v100);
  swift_storeEnumTagMultiPayload();
  v109.origin.x = a1;
  v109.origin.y = a2;
  v109.size.width = a3;
  v109.size.height = a4;
  CGFloat MaxX = CGRectGetMaxX(v109);
  uint64_t v52 = swift_allocObject();
  *(CGFloat *)(v52 + 16) = MaxX;
  *(void *)(v52 + 24) = MEMORY[0x1E4FBC860];
  *uint64_t v47 = 0x5878614D6B73616DLL;
  v47[1] = 0xE800000000000000;
  v47[2] = v52 | 0x3000000000000000;
  v47[3] = 1;
  uint64_t v53 = (uint64_t)v47 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v53);
  v45(v53, 0, 1, v101);
  *(void *)(v12 + 64) = v96;
  uint64_t v54 = (void *)v12;
  uint64_t v96 = swift_allocBox();
  uint64_t v56 = v55;
  uint64_t v57 = v49;
  v50(v11, v102, v49);
  swift_storeEnumTagMultiPayload();
  v110.origin.x = a1;
  v110.origin.y = a2;
  v110.size.width = a3;
  v110.size.height = a4;
  CGFloat MaxY = CGRectGetMaxY(v110);
  uint64_t v59 = swift_allocObject();
  *(CGFloat *)(v59 + 16) = MaxY;
  *(void *)(v59 + 24) = MEMORY[0x1E4FBC860];
  *uint64_t v56 = 0x5978614D6B73616DLL;
  v56[1] = 0xE800000000000000;
  v56[2] = v59 | 0x3000000000000000;
  v56[3] = 1;
  uint64_t v60 = (uint64_t)v56 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v60);
  uint64_t v61 = v101;
  uint64_t v62 = v98;
  v98(v60, 0, 1, v101);
  v54[9] = v96;
  uint64_t v96 = swift_allocBox();
  uint64_t v64 = v63;
  uint64_t v65 = v102;
  v104(v11, v102, v57);
  swift_storeEnumTagMultiPayload();
  v111.origin.x = a1;
  v111.origin.y = a2;
  v111.size.width = a3;
  v111.size.height = a4;
  CGFloat Width = CGRectGetWidth(v111);
  uint64_t v67 = swift_allocObject();
  *(CGFloat *)(v67 + 16) = Width;
  *(void *)(v67 + 24) = MEMORY[0x1E4FBC860];
  *uint64_t v64 = 0x746469576B73616DLL;
  v64[1] = 0xE900000000000068;
  v64[2] = v67 | 0x3000000000000000;
  v64[3] = 1;
  uint64_t v68 = (uint64_t)v64 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v68);
  v62(v68, 0, 1, v61);
  uint64_t v95 = v54;
  v54[10] = v96;
  uint64_t v96 = swift_allocBox();
  uint64_t v70 = v69;
  uint64_t v71 = v100;
  uint64_t v72 = v104;
  v104(v11, v65, v100);
  swift_storeEnumTagMultiPayload();
  v112.origin.x = a1;
  v112.origin.y = a2;
  v112.size.width = a3;
  v112.size.height = a4;
  CGFloat v73 = CGRectGetWidth(v112);
  uint64_t v74 = swift_allocObject();
  *(CGFloat *)(v74 + 16) = v73;
  *(void *)(v74 + 24) = MEMORY[0x1E4FBC860];
  *uint64_t v70 = 0x676965486B73616DLL;
  v70[1] = 0xEA00000000007468;
  v70[2] = v74 | 0x3000000000000000;
  v70[3] = 1;
  uint64_t v75 = (uint64_t)v70 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v75);
  uint64_t v76 = v101;
  v62(v75, 0, 1, v101);
  v54[11] = v96;
  uint64_t v96 = swift_allocBox();
  unint64_t v78 = v77;
  uint64_t v79 = v102;
  v72(v11, v102, v71);
  swift_storeEnumTagMultiPayload();
  sub_1C151F77C();
  uint64_t v81 = v80;
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = v81;
  *(void *)(v82 + 24) = MEMORY[0x1E4FBC860];
  *unint64_t v78 = 0x746E65436B73616DLL;
  v78[1] = 0xEB00000000587265;
  v78[2] = v82 | 0x3000000000000000;
  v78[3] = 1;
  uint64_t v83 = (uint64_t)v78 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v83);
  uint64_t v84 = v76;
  uint64_t v85 = v98;
  v98(v83, 0, 1, v76);
  uint64_t v86 = v95;
  v95[12] = v96;
  uint64_t v87 = swift_allocBox();
  uint64_t v89 = v88;
  v104(v11, v79, v100);
  swift_storeEnumTagMultiPayload();
  sub_1C151F77C();
  uint64_t v91 = v90;
  uint64_t v92 = swift_allocObject();
  *(void *)(v92 + 16) = v91;
  *(void *)(v92 + 24) = MEMORY[0x1E4FBC860];
  void *v89 = 0x746E65436B73616DLL;
  v89[1] = 0xEB00000000597265;
  v89[2] = v92 | 0x3000000000000000;
  v89[3] = 1;
  uint64_t v93 = (uint64_t)v89 + *(int *)(v13 + 28);
  sub_1BFEFE864((uint64_t)v11, v93);
  v85(v93, 0, 1, v84);
  v86[13] = v87;
  return v86;
}

uint64_t destroy for FormatVideoNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) != 0) {
    swift_release();
  }
  uint64_t result = swift_bridgeObjectRelease();
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFD) {
    uint64_t result = sub_1BFF04738(*(void *)(a1 + 40), *(void *)(a1 + 48), v3);
  }
  if (*(unsigned __int8 *)(a1 + 144) != 254) {
    uint64_t result = swift_release();
  }
  if ((~*(void *)(a1 + 152) & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFC94548()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC94598()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC945F8()
{
  unint64_t result = qword_1EB889010;
  if (!qword_1EB889010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889010);
  }
  return result;
}

uint64_t *initializeWithCopy for FormatMenuItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  sub_1C0007DB4(*a2, v5, v6, v7);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  sub_1C0007EEC(v8, v9, v10);
  a1[4] = v8;
  a1[5] = v9;
  uint64_t v11 = a2[7];
  a1[6] = v10;
  a1[7] = v11;
  swift_retain();
  return a1;
}

uint64_t FormatContent.Resolved.tag.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BFC94708(uint64_t a1)
{
  unsigned int v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v54 = a1;
  uint64_t v55 = v4;
  uint64_t v56 = v3[13];
  uint64_t v5 = v3[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = v57;
  uint64_t v8 = *(void *)(v57 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v37 - v9;
  CFTimeInterval v11 = CACurrentMediaTime();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = 0xF000000000000007;
  uint64_t v48 = sub_1C1518CBC();
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  long long v40 = v10;
  v53(v10, a1, AssociatedTypeWitness);
  uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = (v12 + 64) & ~v12;
  uint64_t v49 = v12 | 7;
  uint64_t v43 = v13;
  unint64_t v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = v14 + 8;
  unint64_t v15 = v14;
  unint64_t v41 = v14;
  unint64_t v16 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = v5;
  *((void *)v17 + 2) = v5;
  uint64_t v47 = v3[11];
  *((void *)v17 + 3) = v47;
  uint64_t v45 = v3[12];
  uint64_t v20 = v56;
  uint64_t v19 = v57;
  *((void *)v17 + 4) = v45;
  *((void *)v17 + 5) = v20;
  uint64_t v46 = v3[14];
  *((void *)v17 + 6) = v46;
  uint64_t v44 = v3[15];
  *((void *)v17 + 7) = v44;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v57 = v19 + 32;
  uint64_t v42 = v21;
  uint64_t v22 = v10;
  uint64_t v23 = v38;
  v21(&v17[v13], v22, v38);
  *(CFTimeInterval *)&v17[v15] = v11;
  uint64_t v24 = v39;
  *(void *)&v17[v16] = v39;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedLocation();
  swift_retain();
  uint64_t v25 = (void *)v48;
  sub_1C151931C();

  swift_release();
  uint64_t v26 = v40;
  v53(v40, v54, v23);
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v47;
  v27[2] = v18;
  void v27[3] = v28;
  uint64_t v29 = v56;
  void v27[4] = v45;
  v27[5] = v29;
  uint64_t v30 = (char *)v27 + v43;
  uint64_t v31 = v44;
  v27[6] = v46;
  v27[7] = v31;
  v42(v30, v26, v23);
  *(void *)((char *)v27 + v41) = v24;
  swift_retain();
  uint64_t v32 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();
  swift_release();

  int v33 = (void *)sub_1C1518E7C();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151900C();
  swift_release();

  swift_retain();
  uint64_t v34 = (void *)sub_1C1518E7C();
  uint64_t v35 = sub_1C15190EC();
  swift_release();
  swift_release_n();

  return v35;
}

unint64_t sub_1BFC94BCC()
{
  return sub_1C0774918(*v0);
}

unint64_t sub_1BFC94BD4()
{
  return sub_1C07810F4(*v0);
}

uint64_t sub_1BFC94BDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatArticleOverrides.init(from:)(a1, a2);
}

uint64_t sub_1BFC94BF4(void *a1)
{
  return FormatTypeDefinition.Enum.encode(to:)(a1);
}

uint64_t sub_1BFC94C0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC94C3C();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC94C3C()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12) {
    return 18;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC94C90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC94CC0();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC94CC0()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

void sub_1BFC94D0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_1BFC94D58(uint64_t *a1, _OWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = *v4;
  uint64_t v11 = *a1;
  int v12 = *a3;
  double v13 = CACurrentMediaTime();
  uint64_t result = (void *)sub_1BFC856D8(a1, (uint64_t)a2, a4);
  if (!v5)
  {
    uint64_t v45 = v11;
    int v46 = v12;
    uint64_t v47 = v10;
    uint64_t v15 = v4[2];
    uint64_t v50 = result;
    uint64_t v51 = v15;
    sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v49 = v16;
    uint64_t v17 = swift_allocObject();
    long long v48 = xmmword_1C152C7F0;
    *(_OWORD *)(v17 + 16) = xmmword_1C152C7F0;
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = (void *)swift_release();
    uint64_t v18 = v55;
    if (v55)
    {
      uint64_t v19 = v54;
      *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v20 = sub_1BFE9C558();
      *(void *)(v17 + 64) = v20;
      *(void *)(v17 + 32) = v19;
      *(void *)(v17 + 40) = v18;
      sub_1C151997C();
      sub_1C1519BFC();
      uint64_t result = (void *)swift_release();
      uint64_t v21 = v53;
      if (v53)
      {
        uint64_t v22 = v52;
        *(void *)(v17 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v17 + 104) = v20;
        *(void *)(v17 + 72) = v22;
        *(void *)(v17 + 80) = v21;
        CFTimeInterval v23 = CACurrentMediaTime();
        uint64_t v24 = MEMORY[0x1E4FBB460];
        *(void *)(v17 + 136) = MEMORY[0x1E4FBB3D0];
        *(void *)(v17 + 144) = v24;
        *(CFTimeInterval *)(v17 + 112) = (v23 - v13) * 1000.0;
        sub_1C151F38C();
        sub_1C15197BC();
        uint64_t v25 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v25);
        v43[2] = v6;
        v43[3] = a1;
        uint64_t v26 = v50;
        v43[4] = v50;
        uint64_t v44 = sub_1BFC91B0C(v50, (uint64_t (*)(uint64_t))sub_1C0A8DD10, (uint64_t)v43);
        uint64_t v27 = MEMORY[0x1E4FBB1A0];
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v48;
        sub_1C151997C();
        sub_1C1519BFC();
        uint64_t result = (void *)swift_release();
        uint64_t v29 = v55;
        if (v55)
        {
          uint64_t v30 = v54;
          *(void *)(v28 + 56) = v27;
          *(void *)(v28 + 64) = v20;
          *(void *)(v28 + 32) = v30;
          *(void *)(v28 + 40) = v29;
          sub_1C151997C();
          sub_1C1519BFC();
          uint64_t result = (void *)swift_release();
          uint64_t v31 = v53;
          if (v53)
          {
            uint64_t v32 = v52;
            *(void *)(v28 + 96) = v27;
            *(void *)(v28 + 104) = v20;
            *(void *)(v28 + 72) = v32;
            *(void *)(v28 + 80) = v31;
            int v33 = (uint64_t *)v44;
            uint64_t v34 = sub_1BFC8BD54();
            *(void *)(v28 + 136) = v27;
            *(void *)(v28 + 144) = v20;
            *(void *)(v28 + 112) = v34;
            *(void *)(v28 + 120) = v35;
            sub_1C151F38C();
            sub_1C15197BC();
            swift_bridgeObjectRelease();
            type metadata accessor for FeedDeferredCursor();
            LOBYTE(v54) = v46;
            uint64_t v36 = v6[3];
            uint64_t v37 = swift_allocObject();
            swift_weakInit();
            uint64_t v38 = swift_allocObject();
            uint64_t v39 = v47;
            *(void *)(v38 + 16) = *(void *)(v47 + 112);
            *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 120);
            *(void *)(v38 + 40) = *(void *)(v39 + 136);
            *(void *)(v38 + 48) = v37;
            *(void *)(v38 + 56) = v26;
            *(void *)(v38 + 64) = v33;
            *(void *)(v38 + 72) = a1;
            long long v40 = a2[3];
            *(_OWORD *)(v38 + 112) = a2[2];
            *(_OWORD *)(v38 + 128) = v40;
            long long v41 = a2[5];
            *(_OWORD *)(v38 + 144) = a2[4];
            *(_OWORD *)(v38 + 160) = v41;
            long long v42 = a2[1];
            *(_OWORD *)(v38 + 80) = *a2;
            *(_OWORD *)(v38 + 96) = v42;
            swift_unknownObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1BFC717EC((uint64_t)a2);
            return (void *)sub_1C019BDCC((char *)&v54, (uint64_t)v26, v33, v36, (uint64_t)&unk_1EA1A2FC0, v38);
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1BFC951BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t GroupLayoutBindingKey.description.getter()
{
  if (*(void *)(v0 + 24))
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  sub_1C151E80C();
  return 0x3D657079747BLL;
}

void sub_1BFC95350()
{
  sub_1C151FD8C();
  if (v0 <= 0x3F)
  {
    sub_1BFE79B90(319, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

NewsFeed::FormatCellSelection::CodingType_optional __swiftcall FormatCellSelection.CodingType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatResizeConstraint::Dimension_optional __swiftcall FormatResizeConstraint.Dimension.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatBlendMode_optional __swiftcall FormatBlendMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 16;
  if (v3 < 0x10) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFC95594(void *a1)
{
  return FormatSwitchNodeDefault.encode(to:)(a1);
}

uint64_t sub_1BFC955B8(void *a1, void *a2)
{
  return FormatCommandValue.encode(to:)(a1, a2);
}

uint64_t sub_1BFC955D0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895BA0);
  uint64_t result = sub_1C151819C();
  if (!v26)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895C50);
  uint64_t result = sub_1C151819C();
  if (!v24)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895B80);
  uint64_t result = sub_1C151819C();
  if (!v22)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (v20)
  {
    uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    __n128 v4 = MEMORY[0x1F4188790](v3);
    uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
    uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    __n128 v9 = MEMORY[0x1F4188790](v8);
    uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v12 + 16))(v11, v9);
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    __n128 v14 = MEMORY[0x1F4188790](v13);
    uint64_t v16 = (uint64_t *)((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    uint64_t v18 = sub_1BFC65DE4(*v6, *v11, *v16, &v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return (uint64_t)v18;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BFC9597C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedBannerAdRequester();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPrerollAdRequester();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB894EB8);
  uint64_t result = sub_1C151819C();
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C151DA7C();
  uint64_t result = sub_1C151814C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8715B0);
  uint64_t result = sub_1C151819C();
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC4730C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    type metadata accessor for FeedAdPipelineProcessor();
    uint64_t v7 = (void *)swift_allocObject();
    v7[3] = 0;
    swift_unknownObjectWeakInit();
    v7[4] = v3;
    v7[5] = v4;
    sub_1BFC773DC(&v10, (uint64_t)(v7 + 6));
    v7[11] = v5;
    sub_1BFC773DC(&v8, (uint64_t)(v7 + 12));
    v7[17] = v6;
    return (uint64_t)v7;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BFC95B9C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatItemCollection.init(from:)(a1, a2);
}

uint64_t FormatItemCollection.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1C0038168(0, (unint64_t *)&qword_1EB879D68, MEMORY[0x1E4FBB320]);
    sub_1BFC95D10(&qword_1EB85C388, &qword_1EB85B698);
    sub_1C1520AEC();
    sub_1C0036DBC(v8[6], &v7);
    long long v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC95D10(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0038168(255, (unint64_t *)&qword_1EB879D68, MEMORY[0x1E4FBB320]);
    sub_1BFC95DBC(a2, (void (*)(uint64_t))sub_1C0037C88);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC95DBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFC95E04@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatURLParameterOptionModifier.init(from:)(a1, a2);
}

uint64_t FormatURLParameterOptionModifier.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  CFTimeInterval v23 = a2;
  sub_1C08C4024();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C40B8();
  sub_1C085F050(&qword_1EB892370, (void (*)(uint64_t))sub_1C08C40B8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v23;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v16 = *((void *)v15 - 1);
      CFTimeInterval v23 = (void *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v17 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v17);
      *(&v22 - 4) = (uint64_t)&_s10CodingKeysON_12;
      *(&v22 - 3) = sub_1C08C413C();
      *(&v22 - 2) = sub_1BFCFEE98();
      *(&v22 - 1) = sub_1C08C4190();
      swift_getKeyPath();
      swift_retain();
      uint64_t v18 = sub_1C085FA20((uint64_t)&unk_1F1B889C0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v19 = (uint64_t)v23;
      *(void *)uint64_t v20 = v23;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v18;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v19, v16, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9DEBC(0, &qword_1EB879E38, (uint64_t)&type metadata for FormatQueryParameter, MEMORY[0x1E4FBB320]);
  sub_1BFC961C0();
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  char v26 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v12 = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC961C0()
{
  unint64_t result = qword_1EB879E40;
  if (!qword_1EB879E40)
  {
    sub_1BFE9DEBC(255, &qword_1EB879E38, (uint64_t)&type metadata for FormatQueryParameter, MEMORY[0x1E4FBB320]);
    sub_1C00773E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879E40);
  }
  return result;
}

uint64_t sub_1BFC96254@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatAnimationNodeAnimation.init(from:)(a1, a2);
}

uint64_t FormatAnimationNodeAnimation.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_15:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  uint64_t v29 = a2;
  uint64_t v10 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v30;
  uint64_t v14 = v9;
  if (v12)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_8;
        }
      }
      uint64_t v23 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v18;
      *(void *)(v24 + 16) = &unk_1F1B83AB8;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v18);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
      goto LABEL_15;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFC96764();
  long long v31 = 0uLL;
  sub_1C15206EC();
  if ((_BYTE)v32)
  {
    if (v32 == 1)
    {
      type metadata accessor for FormatAnimationNodeSpringAnimation();
      long long v31 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB85F5A0, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation);
      sub_1C15206EC();
      uint64_t v19 = v29;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
      uint64_t v20 = v32;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      unint64_t v22 = v21 | 0x4000000000000000;
    }
    else
    {
      type metadata accessor for FormatAnimationNodeGroupAnimation();
      long long v31 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA199E28, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeGroupAnimation);
      sub_1C15206EC();
      uint64_t v19 = v29;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
      uint64_t v27 = v32;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      unint64_t v22 = v28 | 0x8000000000000000;
    }
  }
  else
  {
    type metadata accessor for FormatAnimationNodeBasicAnimation();
    long long v31 = xmmword_1C152C800;
    sub_1C085F050(&qword_1EA19D6A8, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeBasicAnimation);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
    uint64_t v25 = v32;
    unint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v25;
    uint64_t v19 = v29;
  }
  unint64_t *v19 = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BFC96764()
{
  unint64_t result = qword_1EB864730;
  if (!qword_1EB864730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864730);
  }
  return result;
}

uint64_t sub_1BFC967B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatLayeredMediaFilter.Monochrome.init(from:)(a1, a2);
}

uint64_t FormatLayeredMediaFilter.Monochrome.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C08961AC();
  uint64_t v7 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0896240();
  sub_1C085F050(&qword_1EB892110, (void (*)(uint64_t))sub_1C0896240);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v32;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *((void *)v16 - 1);
      uint64_t v31 = *((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v19 = swift_bridgeObjectRelease();
      uint64_t v20 = v12;
      MEMORY[0x1F4188790](v19);
      *(&v30 - 4) = (uint64_t)&_s10CodingKeysON_111;
      *(&v30 - 3) = sub_1C08962C4();
      *(&v30 - 2) = sub_1C00301AC();
      *(&v30 - 1) = sub_1C0896318();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B86028);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v22 = v31;
      *(void *)uint64_t v23 = v31;
      *(void *)(v23 + 8) = v18;
      *(void *)(v23 + 16) = v21;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v18, 1);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v7);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE113DC();
  long long v33 = 0uLL;
  char v34 = 0;
  sub_1C152065C();
  uint64_t v17 = v35;
  long long v33 = xmmword_1C153AB20;
  char v34 = 0;
  sub_1BFDFBE94();
  sub_1C152065C();
  uint64_t v24 = v7;
  uint64_t v25 = v12;
  uint64_t v31 = v35;
  long long v33 = xmmword_1C1557FA0;
  char v34 = 0;
  uint64_t v26 = v24;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  uint64_t v28 = v35;
  uint64_t v29 = v31;
  *a2 = v17;
  a2[1] = v29;
  a2[2] = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFC96C38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatVisibility.init(from:)(a1, a2);
}

uint64_t FormatVisibility.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v28 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  char v11 = v31;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v18;
      *(void *)(v21 + 16) = &unk_1F1B81F70;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC970DC();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  sub_1C15206EC();
  switch((char)v28)
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0x8000000000000008;
      break;
    case 2:
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v28 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v23 = v29;
      uint64_t v24 = v30;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v23;
      *(void *)(v19 + 24) = v24;
      break;
    case 3:
      sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB866940, (uint64_t (*)(void))sub_1C04076BC, (uint64_t)&type metadata for FormatVisibility, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v28 = xmmword_1C152C800;
      sub_1C086A524();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v25 = v29;
      uint64_t v26 = v30;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v25;
      *(void *)(v27 + 24) = v26;
      uint64_t v19 = v27 | 0x4000000000000000;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0x8000000000000000;
      break;
  }
  *char v11 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC970DC()
{
  unint64_t result = qword_1EB888130;
  if (!qword_1EB888130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888130);
  }
  return result;
}

uint64_t sub_1BFC97130()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC97190()
{
  unint64_t result = qword_1EB85D150;
  if (!qword_1EB85D150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D150);
  }
  return result;
}

uint64_t sub_1BFC971E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C151812C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    *(void *)(swift_allocObject() + 16) = result;
    sub_1C0091AEC(0, (unint64_t *)&unk_1EB885080, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB0D8]);
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_1C151936C();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAA980], v4);
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E568]), sel_init);
    v15[8] = sub_1BFC39268(0, (unint64_t *)&unk_1EB8901A0);
    v15[9] = sub_1C0063F5C();
    v15[5] = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v10 = type metadata accessor for NetworkEventHandler();
    uint64_t result = sub_1C151814C();
    if (result)
    {
      uint64_t v11 = result;
      v15[3] = v10;
      void v15[4] = sub_1BFD9CA80(qword_1EB889300, (void (*)(uint64_t))type metadata accessor for NetworkEventHandler);
      v15[0] = v11;
      uint64_t v12 = sub_1C151861C();
      swift_allocObject();
      swift_retain();
      uint64_t v13 = sub_1C151860C();
      uint64_t v14 = MEMORY[0x1E4FAAAA8];
      a2[3] = v12;
      a2[4] = v14;
      swift_unknownObjectRelease();
      uint64_t result = swift_release();
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1BFC974CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v25 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v23 = *MEMORY[0x1E4FBC8C8] & *v5;
  uint64_t v6 = v23;
  uint64_t v24 = sub_1C151F55C();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v22 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151F52C();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v21 = *(void *)(v6 + 168);
  unint64_t v20 = sub_1BFE4597C();
  uint64_t v11 = v5;
  sub_1C151E1CC();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1BFDE8DCC((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1BFDE8FD0(0, (unint64_t *)&unk_1EB879FB0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1BFD01258((unint64_t *)&qword_1EB879FC0, (unint64_t *)&unk_1EB879FB0, v12);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v22, *MEMORY[0x1E4FBCC58], v24);
  *(void *)((char *)v5 + v21) = sub_1C151F5AC();
  uint64_t v13 = (void *)MEMORY[0x1E4FBC8C8];
  *((unsigned char *)v11 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v11) + 0xB0)) = 0;
  *(void *)((char *)v11 + *(void *)((*v13 & *v11) + 0xB8)) = MEMORY[0x1E4FBC860];
  uint64_t v14 = v26;
  *(void *)((char *)v11 + *(void *)((*v13 & *v11) + 0x80)) = v25;
  uint64_t v15 = v13;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v23 + 80) - 8) + 16))((char *)v11 + *(void *)((*v13 & *v11) + 0x88), v14);
  uint64_t v16 = v27;
  sub_1BFC66384(v27, (uint64_t)v11 + *(void *)((*v15 & *v11) + 0x90));
  uint64_t v17 = v28;
  sub_1BFC66384(v28, (uint64_t)v11 + *(void *)((*v15 & *v11) + 0x98));
  *(void *)((char *)v11 + *(void *)((*v15 & *v11) + 0xA0)) = v29;
  swift_retain();
  swift_retain();

  v31.receiver = v11;
  v31.super_class = ObjectType;
  id v18 = objc_msgSendSuper2(&v31, sel_init);
  __swift_destroy_boxed_opaque_existential_1(v17);
  __swift_destroy_boxed_opaque_existential_1(v16);
  return v18;
}

uint64_t sub_1BFC97930@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C151804C();
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDA5C3C(0, &qword_1EB896BC8, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  uint64_t result = sub_1C151814C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFCB6824(0, &qword_1EB896BC0);
    uint64_t result = sub_1C151819C();
    if (v10)
    {
      type metadata accessor for LazyAuthTokenStore();
      uint64_t v6 = swift_allocObject();
      sub_1BFCF43F0((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
      sub_1BFDA5D04();
      sub_1BFCF43F0((unint64_t *)&qword_1EB879C40, (void (*)(uint64_t))sub_1BFDA5D04);
      swift_retain();
      sub_1C151FFBC();
      sub_1BFDA5C3C(0, &qword_1EB884FF0, (uint64_t (*)(uint64_t))sub_1BFC6F614, MEMORY[0x1E4FAAFF0]);
      swift_allocObject();
      *(void *)(v6 + 16) = sub_1C1518D1C();
      sub_1C0091A58();
      uint64_t v8 = v7;
      swift_allocObject();
      uint64_t v9 = sub_1C15185EC();
      a2[3] = v8;
      a2[4] = sub_1BFCF43F0((unint64_t *)&unk_1EB884FA8, (void (*)(uint64_t))sub_1C0091A58);
      uint64_t result = swift_release();
      *a2 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t FormatPrefetchResources.tagAssetBindings.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    char v15 = *(unsigned char *)(*(void *)(v1 + 48) + i);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C0063264(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v17 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C0063264((char *)(v16 > 1), v17 + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v17 + 1;
    *(unsigned char *)(v9 + v17 + 32) = v15;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v6) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13)
          {
            int64_t v8 = v12 + 4;
            if (v12 + 4 >= v6) {
              goto LABEL_29;
            }
            unint64_t v13 = *(void *)(v2 + 8 * v8);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v6)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return v9;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

NewsFeed::FormatButtonNodeState_optional __swiftcall FormatButtonNodeState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatContentMode_optional __swiftcall FormatContentMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FormatWebEmbedBinding.Bool.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 10;
  if (v2 < 0xA) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1BFC97F5C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FeedGroupFreezingDisallow.init(from:)(a1, a2);
}

uint64_t FeedGroupFreezingDisallow.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v13 = a2;
  sub_1BFC9811C(0, &qword_1EB85E078, (uint64_t (*)(void))sub_1BFC98184, (uint64_t)&type metadata for FeedGroupFreezingDisallow.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC98184();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v13;
    char v10 = sub_1C15206AC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFC9811C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1BFC98184()
{
  unint64_t result = qword_1EB85CC30;
  if (!qword_1EB85CC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CC30);
  }
  return result;
}

uint64_t FeedAdGroupDataProvider.__deallocating_deinit()
{
  FeedAdGroupDataProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedAdGroupDataProvider.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v2 = sub_1C151CC9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v4 = sub_1C151A79C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v6 = sub_1C151BCEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

char *sub_1BFC9839C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a4;
  uint64_t v42 = a3;
  unint64_t v41 = a2;
  uint64_t v6 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v57 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v4;
  uint64_t v8 = *(void *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C151FD8C();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v52 = (char *)&v41 - v11;
  uint64_t v12 = sub_1C151631C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v15;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v41 - v17;
  uint64_t v53 = (uint64_t)&v41 - v17;
  uint64_t v56 = *(void *)(v8 - 8);
  __n128 v20 = MEMORY[0x1F4188790](v19);
  uint64_t v54 = (uint64_t)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v55 = *(void *)(a1 + 16);
  uint64_t v50 = v22;
  (*(void (**)(__n128))(v23 + 16))(v20);
  uint64_t v49 = *(void *)(a1 + qword_1EB93C600);
  unsigned __int8 v71 = 4;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24(v18, a1 + qword_1EB93C2F8, v12);
  v24(v15, a1 + qword_1EB93C2E0, v12);
  type metadata accessor for FeedGroupEmitter();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v48 = sub_1C151ECBC();
  sub_1C151ED5C();
  swift_getTupleTypeMetadata2();
  sub_1C151ECBC();
  uint64_t v46 = sub_1C151E3BC();
  uint64_t v45 = sub_1C151ECBC();
  uint64_t v44 = sub_1C151ECBC();
  *(void *)&long long v69 = *(void *)(a1 + qword_1EB93C300);
  uint64_t v62 = v8;
  uint64_t v63 = v9;
  uint64_t v64 = v42;
  uint64_t v65 = v43;
  unint64_t v66 = v41;
  type metadata accessor for FeedDeferredCursorGroup();
  uint64_t v25 = sub_1C151ED5C();
  uint64_t v26 = type metadata accessor for FeedCursorGroup();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = sub_1C035E7C8((void (*)(char *, char *))sub_1C00860F8, (uint64_t)v61, v25, v26, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a1 + qword_1EB93C308);
  uint64_t v42 = *(void *)(a1 + qword_1EB93C310);
  swift_bridgeObjectRetain();
  unint64_t v41 = sub_1BFF99224(MEMORY[0x1E4FBC860]);
  uint64_t v30 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitterCachedOutput();
  swift_getTupleTypeMetadata2();
  sub_1C151ECBC();
  uint64_t v31 = sub_1C151E3BC();
  uint64_t v32 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v52, 1, 1, v30);
  uint64_t v33 = v57;
  sub_1C019CC1C(a1 + qword_1EB93C2E8, v57);
  uint64_t v34 = *(void *)(a1 + qword_1EB93C2F0 + 8);
  uint64_t v35 = *(void *)(a1 + qword_1EB93C2F0 + 16);
  *(void *)&long long v69 = *(void *)(a1 + qword_1EB93C2F0);
  *((void *)&v69 + 1) = v34;
  uint64_t v70 = v35;
  uint64_t v67 = 1;
  char v68 = 1;
  uint64_t v36 = *(void *)(a1 + qword_1EB93C328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v40 = v29;
  uint64_t v37 = v54;
  uint64_t v38 = sub_1C1255F7C(v55, v50, v54, v49, &v71, v53, (uint64_t)v51, v48, v46, v45, v44, v43, v40, v42, 0, 0, v41, v31, v32,
          v33,
          &v69,
          (unsigned __int8 **)&v67,
          v36,
          MEMORY[0x1E4FBC860],
          0,
          0);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v32, v59);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v37, v8);
  return v38;
}

uint64_t sub_1BFC98B0C(void *a1)
{
  return FormatSlotItemCountLimit.encode(to:)(a1);
}

uint64_t FormatSlotItemCountLimit.encode(to:)(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v2 - 8);
  v36[0] = (uint64_t)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v36 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v36 - v11;
  uint64_t v13 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v13);
  char v15 = (uint64_t *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v16 - 8);
  id v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  unint64_t v21 = sub_1BFEB6A24();
  sub_1BFEFBD78(v13, v22, v19, v13, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v20, (uint64_t)v18, v21, (uint64_t)&off_1F1C39BA8);
  sub_1BFE80E70(v36[3], (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v24 = v36[0];
      sub_1BFE7FB8C((uint64_t)v15, v36[0], (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C151928C();
      uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93CA08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v6, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C067F65C(2, v24, (uint64_t)v6);
      sub_1BFEFEB68((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
      uint64_t v27 = (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition;
      uint64_t v28 = v24;
    }
    else
    {
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v12, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFC4B44C(0, (uint64_t)v12);
      uint64_t v27 = type metadata accessor for FormatVersionRequirement;
      uint64_t v28 = (uint64_t)v12;
    }
  }
  else
  {
    uint64_t v29 = *v15;
    uint64_t v30 = v15[1];
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C151928C();
    uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v9, v32, v31);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFC5036C(1, v29, v30, (uint64_t)v9);
    uint64_t v27 = type metadata accessor for FormatVersionRequirement;
    uint64_t v28 = (uint64_t)v9;
  }
  sub_1BFEFEB68(v28, v27);
  return sub_1BFEFEB68((uint64_t)v18, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFC99024@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.Compare.init(from:)(a1, a2);
}

uint64_t FormatBindingTextExpressionLogic.Compare.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1C0869B74();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0869C08();
  sub_1C085F050(&qword_1EB892350, (void (*)(uint64_t))sub_1C0869C08);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v28;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v28 = *((void *)v16 - 2);
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_228;
      *(&v28 - 3) = sub_1C0869C8C();
      *(&v28 - 2) = sub_1BFC99420();
      *(&v28 - 1) = sub_1C0869CE0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B81EA8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v24 = v28;
      *(void *)uint64_t v25 = v28;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v12;
  long long v29 = 0uLL;
  char v30 = 0;
  uint64_t v18 = sub_1C152069C();
  uint64_t v20 = v19;
  long long v29 = xmmword_1C153AB20;
  char v30 = 0;
  sub_1BFE23564();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  char v27 = v31;
  *(void *)uint64_t v17 = v18;
  *(void *)(v17 + 8) = v20;
  *(unsigned char *)(v17 + 16) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC99420()
{
  unint64_t result = qword_1EB88E428;
  if (!qword_1EB88E428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E428);
  }
  return result;
}

uint64_t sub_1BFC99474(void *a1)
{
  return FormatShareAttributionNodeBinding.init(from:)(a1);
}

uint64_t FormatShareAttributionNodeBinding.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v1)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v2);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = sub_1C152070C();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = (unint64_t *)(v11 + 40);
      while (1)
      {
        unint64_t v14 = *v13;
        if (*v13 >= 4) {
          break;
        }
        v13 += 2;
        if (!--v12) {
          goto LABEL_7;
        }
      }
      uint64_t v15 = *(v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v2 = (void *)swift_allocError();
      *(void *)uint64_t v16 = v15;
      *(void *)(v16 + 8) = v14;
      *(void *)(v16 + 16) = &unk_1F1B87818;
      *(_OWORD *)(v16 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v15, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC99798();
  long long v18 = 0uLL;
  sub_1C15206EC();
  long long v18 = xmmword_1C152C800;
  sub_1BFC997EC();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC99798()
{
  unint64_t result = qword_1EB88E9E0;
  if (!qword_1EB88E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E9E0);
  }
  return result;
}

unint64_t sub_1BFC997EC()
{
  unint64_t result = qword_1EB87F2B8;
  if (!qword_1EB87F2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87F2B8);
  }
  return result;
}

uint64_t sub_1BFC99840@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatOptionBindingModifier.init(from:)(a1, a2);
}

uint64_t FormatOptionBindingModifier.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  uint64_t v11 = v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  unint64_t v14 = v9;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v18;
      *(void *)(v21 + 16) = &unk_1F1B820D8;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC99BF4();
  long long v25 = 0uLL;
  sub_1C15206EC();
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
    uint64_t v19 = 0;
  }
  else
  {
    long long v25 = xmmword_1C152C800;
    sub_1BFC99BA0();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
    uint64_t v19 = v26;
  }
  *uint64_t v11 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC99BA0()
{
  unint64_t result = qword_1EB879190;
  if (!qword_1EB879190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879190);
  }
  return result;
}

unint64_t sub_1BFC99BF4()
{
  unint64_t result = qword_1EB88CB58;
  if (!qword_1EB88CB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88CB58);
  }
  return result;
}

uint64_t FeedNativeAdRequester.__deallocating_deinit()
{
  FeedNativeAdRequester.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedNativeAdRequester.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v2 = sub_1C151CC9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 160));

  return v0;
}

uint64_t sub_1BFC99DA8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC99DF8()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC99E58()
{
  unint64_t result = qword_1EB872DE8;
  if (!qword_1EB872DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB872DE8);
  }
  return result;
}

uint64_t sub_1BFC99EAC()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC99EFC()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC99F5C()
{
  unint64_t result = qword_1EB879170;
  if (!qword_1EB879170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879170);
  }
  return result;
}

uint64_t sub_1BFC99FB0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC9A000()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC9A060()
{
  unint64_t result = qword_1EB88AF90;
  if (!qword_1EB88AF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AF90);
  }
  return result;
}

uint64_t sub_1BFC9A0B4(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    sub_1C0A8CD28();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_1C1557FD0;
    *(unsigned char *)(v20 + 16) = 7;
    swift_willThrow();
    return a5;
  }
  uint64_t v26 = a7;
  sub_1C151866C();
  swift_allocObject();
  uint64_t v18 = sub_1C1517DBC();
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v27)
  {
    sub_1C1519A3C();
    swift_release();
    sub_1C1519A4C();
    if (v10)
    {
      swift_release();
      swift_release();
      swift_release();
      return a5;
    }
    swift_release();
    sub_1C151997C();
    swift_release();
    swift_release();
    swift_release();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    if (v28 >> 60 != 15)
    {
      sub_1C1518ACC();
      sub_1BFD98ABC(&qword_1EB85AB40, MEMORY[0x1E4FAAD90]);
      sub_1C1517D9C();
      swift_retain();
      sub_1C15186AC();
      swift_release();
      long long v25 = (void *)sub_1C1518CBC();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = a3;
      *(void *)(v21 + 24) = a4;
      *(void *)(v21 + 32) = a5;
      *(void *)(v21 + 40) = a6;
      *(void *)(v21 + 48) = v26;
      *(void *)(v21 + 56) = a8;
      *(void *)(v21 + 64) = a9;
      *(void *)(v21 + 72) = a10;
      long long v22 = a2[3];
      *(_OWORD *)(v21 + 112) = a2[2];
      *(_OWORD *)(v21 + 128) = v22;
      long long v23 = a2[5];
      *(_OWORD *)(v21 + 144) = a2[4];
      *(_OWORD *)(v21 + 160) = v23;
      long long v24 = a2[1];
      *(_OWORD *)(v21 + 80) = *a2;
      *(_OWORD *)(v21 + 96) = v24;
      *(void *)(v21 + 176) = v18;
      sub_1BFC717EC((uint64_t)a2);
      swift_getAssociatedTypeWitness();
      swift_retain();
      a5 = sub_1C1518FFC();
      swift_release();
      swift_release();

      swift_release();
      sub_1BFE95878(v27, v28);
      swift_release();
      swift_release();
      return a5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFC9A480(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, double a5)
{
  *(void *)(v6 + 544) = v5;
  *(double *)(v6 + 536) = a5;
  *(void *)(v6 + 528) = a3;
  *(void *)(v6 + 520) = a1;
  uint64_t v9 = *a3;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0427024(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  *(void *)(v6 + 552) = swift_task_alloc();
  *(void *)(v6 + 560) = *(void *)(v9 + 88);
  uint64_t v11 = *(void *)(v9 + 80);
  *(void *)(v6 + 568) = v11;
  *(void *)(v6 + 576) = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C151FD8C();
  *(void *)(v6 + 584) = v12;
  *(void *)(v6 + 592) = *(void *)(v12 - 8);
  *(void *)(v6 + 600) = swift_task_alloc();
  *(void *)(v6 + 608) = swift_task_alloc();
  *(void *)(v6 + 616) = swift_task_alloc();
  *(void *)(v6 + 624) = swift_task_alloc();
  *(void *)(v6 + 632) = swift_task_alloc();
  *(void *)(v6 + 640) = swift_task_alloc();
  *(void *)(v6 + 648) = swift_task_alloc();
  sub_1C0427024(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v10);
  *(void *)(v6 + 656) = swift_task_alloc();
  *(void *)(v6 + 664) = swift_task_alloc();
  *(void *)(v6 + 672) = swift_task_alloc();
  *(void *)(v6 + 680) = swift_task_alloc();
  *(void *)(v6 + 688) = swift_task_alloc();
  *(void *)(v6 + 696) = swift_task_alloc();
  *(void *)(v6 + 704) = swift_task_alloc();
  *(void *)(v6 + 712) = swift_task_alloc();
  uint64_t v13 = sub_1C151FD8C();
  *(void *)(v6 + 720) = v13;
  *(void *)(v6 + 728) = *(void *)(v13 - 8);
  *(void *)(v6 + 736) = swift_task_alloc();
  *(void *)(v6 + 744) = swift_task_alloc();
  *(void *)(v6 + 752) = swift_task_alloc();
  *(void *)(v6 + 760) = swift_task_alloc();
  uint64_t v14 = sub_1C151631C();
  *(void *)(v6 + 768) = v14;
  *(void *)(v6 + 776) = *(void *)(v14 - 8);
  *(void *)(v6 + 784) = swift_task_alloc();
  *(void *)(v6 + 792) = *(void *)(v11 - 8);
  *(void *)(v6 + 800) = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  *(void *)(v6 + 808) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for FeedCursorGroup();
  *(void *)(v6 + 816) = v15;
  *(void *)(v6 + 824) = *(void *)(v15 - 8);
  *(void *)(v6 + 832) = swift_task_alloc();
  *(void *)(v6 + 840) = swift_task_alloc();
  *(void *)(v6 + 848) = swift_task_alloc();
  *(void *)(v6 + 856) = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v6 + 864) = AssociatedTypeWitness;
  *(void *)(v6 + 872) = swift_getAssociatedConformanceWitness();
  uint64_t v17 = type metadata accessor for FeedGroupEmitterOutput();
  *(void *)(v6 + 880) = v17;
  *(void *)(v6 + 888) = *(void *)(v17 - 8);
  *(void *)(v6 + 896) = swift_task_alloc();
  uint64_t v18 = type metadata accessor for FeedScoredResult();
  *(void *)(v6 + 904) = v18;
  *(void *)(v6 + 912) = *(void *)(v18 - 8);
  *(void *)(v6 + 920) = swift_task_alloc();
  *(void *)(v6 + 928) = swift_task_alloc();
  *(void *)(v6 + 936) = swift_task_alloc();
  *(void *)(v6 + 944) = swift_task_alloc();
  *(void *)(v6 + 952) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v6 + 960) = swift_task_alloc();
  *(void *)(v6 + 968) = swift_task_alloc();
  *(void *)(v6 + 976) = swift_task_alloc();
  *(void *)(v6 + 984) = swift_task_alloc();
  uint64_t v19 = type metadata accessor for FeedChosenEmitterResult();
  *(void *)(v6 + 992) = v19;
  *(void *)(v6 + 1000) = *(void *)(v19 - 8);
  uint64_t v20 = swift_task_alloc();
  *(void *)(v6 + 1008) = v20;
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v6 + 1016) = v21;
  *uint64_t v21 = v6;
  v21[1] = sub_1C0412F78;
  return sub_1C041D590(v20, a2, a3, a4, a5);
}

uint64_t sub_1BFC9AC3C(void *a1, uint64_t a2)
{
  return FormatCompilerPrimitiveProperty.encode(to:)(a1, a2);
}

uint64_t sub_1BFC9AC54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1BFC9AC6C(a1, a2);
}

uint64_t sub_1BFC9AC6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C08E491C();
  uint64_t v7 = v6;
  uint64_t v39 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E49B0();
  sub_1C085F050(&qword_1EB892550, (void (*)(uint64_t))sub_1C08E49B0);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v38 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v39;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *((void *)v16 - 1);
      uint64_t v38 = (void *)*((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = swift_bridgeObjectRelease();
      uint64_t v24 = v12;
      MEMORY[0x1F4188790](v23);
      *((void *)&v35 - 4) = &_s10CodingKeysON_272;
      *((void *)&v35 - 3) = sub_1C08E4A34();
      *((void *)&v35 - 2) = sub_1BFFEF4C4();
      *((void *)&v35 - 1) = sub_1C08E4A88();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B86320);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v26 = (uint64_t)v38;
      *(void *)uint64_t v27 = v38;
      *(void *)(v27 + 8) = v22;
      *(void *)(v27 + 16) = v25;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v22, 1);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v7);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC9B168();
  long long v40 = 0uLL;
  char v41 = 0;
  sub_1C15206EC();
  uint64_t v17 = v7;
  uint64_t v18 = v12;
  long long v19 = v42;
  uint64_t v21 = v43;
  uint64_t v20 = v44;
  long long v40 = xmmword_1C153AB20;
  char v41 = 0;
  sub_1BFC9B1BC();
  sub_1C15206EC();
  long long v35 = v19;
  uint64_t v36 = v21;
  uint64_t v37 = v20;
  long long v28 = v42;
  uint64_t v29 = v43;
  long long v42 = xmmword_1C1557FA0;
  LOBYTE(v43) = 0;
  sub_1BFC9B114();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  uint64_t v31 = v40;
  uint64_t v32 = v38;
  uint64_t v33 = *((void *)&v35 + 1);
  *uint64_t v38 = v35;
  v32[1] = v33;
  uint64_t v34 = v37;
  v32[2] = v36;
  void v32[3] = v34;
  *((_OWORD *)v32 + 2) = v28;
  v32[6] = v29;
  uint64_t v32[7] = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC9B114()
{
  unint64_t result = qword_1EB876C88;
  if (!qword_1EB876C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876C88);
  }
  return result;
}

unint64_t sub_1BFC9B168()
{
  unint64_t result = qword_1EB87E110;
  if (!qword_1EB87E110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E110);
  }
  return result;
}

unint64_t sub_1BFC9B1BC()
{
  unint64_t result = qword_1EB87E108;
  if (!qword_1EB87E108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E108);
  }
  return result;
}

uint64_t sub_1BFC9B210@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBindExpression.init(from:)(a1, a2);
}

uint64_t FormatGroupBindExpression.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  sub_1C0889E08();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0889E9C();
  sub_1C085F050(&qword_1EB892180, (void (*)(uint64_t))sub_1C0889E9C);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)v29;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v29 = *((void *)v16 - 2);
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_132;
      *(&v28 - 3) = sub_1C0889F20();
      *(&v28 - 2) = sub_1BFD1452C();
      *(&v28 - 1) = sub_1C0889F74();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B850D8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v24 = v29;
      *(void *)uint64_t v25 = v29;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v12;
  uint64_t v18 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C0889E08);
  uint64_t v20 = v19;
  uint64_t v27 = sub_1C07F163C((uint64_t)v9, 1, 0, 0, (uint64_t (*)(void))sub_1BFC9B63C, (void (*)(void, __n128))sub_1C0889E08, &qword_1EB87C6C0, (void (*)(uint64_t))sub_1BFC9B63C);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *uint64_t v17 = v18;
  v17[1] = v20;
  v17[2] = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFC9B63C()
{
  if (!qword_1EB87C6C8)
  {
    sub_1C007A284();
    sub_1C007A380();
    sub_1C007A32C();
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C6C8);
    }
  }
}

uint64_t sub_1BFC9B6C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFC9B6F0();
  *a1 = result;
  return result;
}

uint64_t sub_1BFC9B6F0()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFC9B73C(void *a1)
{
  return FormatPropertyDefinition.encode(to:)(a1);
}

uint64_t sub_1BFC9B754(void *a1)
{
  return FormatType.encode(to:)(a1);
}

uint64_t sub_1BFC9B76C()
{
  return sub_1C0743F98(*v0);
}

uint64_t sub_1BFC9B774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v3 - 8);
  char v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v33 = (char *)&v30 - v11;
  uint64_t v12 = (int *)type metadata accessor for FeedCursorTrackerGroup();
  uint64_t v34 = *((void *)v12 - 1);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v32 = *(void *)(a1 + 16);
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v39)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v36 = v38;
  uint64_t v37 = v39;
  swift_getAssociatedConformanceWitness();
  sub_1C151EADC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
    uint64_t v16 = 1;
    uint64_t v18 = v34;
    uint64_t v17 = v35;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v18 + 56))(v17, v16, 1, v12);
  }
  uint64_t v19 = v33;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v33, v8, AssociatedTypeWitness);
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v20 = v39;
  if (!v39) {
    goto LABEL_16;
  }
  *(void *)uint64_t v14 = v38;
  *((void *)v14 + 1) = v20;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v14[v12[9]], v19, AssociatedTypeWitness);
  sub_1C151997C();
  uint64_t v21 = v30;
  sub_1C1519BFC();
  swift_release();
  uint64_t v22 = sub_1C151631C();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
  if (result == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v14[v12[10]], v21, v22);
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v38)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1C1519D3C();
  swift_release();
  uint64_t v24 = v36;
  if (!v36) {
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v14[v12[12]] = v24;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v25 = v39;
  if (v39)
  {
    uint64_t v26 = &v14[v12[13]];
    *(void *)uint64_t v26 = v38;
    *((void *)v26 + 1) = v25;
    sub_1C151997C();
    sub_1C1519BFC();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v33, AssociatedTypeWitness);
    uint64_t v27 = v39;
    if (v39 == 1)
    {
      uint64_t v28 = &v14[v12[11]];
      *(void *)uint64_t v28 = 0;
      *((void *)v28 + 1) = 0;
    }
    else
    {
      uint64_t v29 = &v14[v12[11]];
      *(void *)uint64_t v29 = v38;
      *((void *)v29 + 1) = v27;
    }
    uint64_t v18 = v34;
    uint64_t v17 = v35;
    (*(void (**)(uint64_t, char *, int *))(v34 + 32))(v35, v14, v12);
    uint64_t v16 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v18 + 56))(v17, v16, 1, v12);
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for FormatProgressViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  if ((~v6 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t initializeWithCopy for FormatWebEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    sub_1BFF046A0(v6, v7, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    sub_1BFF046A0(v9, v10, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  return a1;
}

uint64_t sub_1BFC9BF04()
{
  return sub_1C1520E0C();
}

uint64_t destroy for FeedReadStoryCommandContext()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatBindExpression(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BFC9C064(uint64_t a1@<X8>)
{
  uint64_t v35 = *v1;
  uint64_t v4 = *(void *)(v35 + 80);
  uint64_t v40 = sub_1C151FD8C();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v38 = (char *)v31 - v5;
  uint64_t v6 = sub_1C151E20C();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  unsigned int v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v12 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9);
  char v13 = sub_1C151E26C();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    uint64_t v32 = a1;
    uint64_t v33 = v2;
    uint64_t v14 = swift_allocBox();
    uint64_t v16 = v15;
    uint64_t v34 = *(void *)(v4 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v15, 1, 1, v4);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 0;
    v31[1] = v17 + 16;
    dispatch_semaphore_t v18 = dispatch_semaphore_create(0);
    sub_1C1518CEC();
    uint64_t v19 = (void *)swift_allocObject();
    long long v19[2] = v4;
    v19[3] = *(void *)(v35 + 88);
    void v19[4] = v14;
    uint64_t v35 = v14;
    swift_retain();
    uint64_t v20 = (void *)sub_1C1518E7C();
    sub_1C1518FFC();
    swift_release();
    swift_release();

    swift_retain();
    uint64_t v21 = (void *)sub_1C1518E7C();
    sub_1C151903C();
    swift_release();
    swift_release();

    *(void *)(swift_allocObject() + 16) = v18;
    uint64_t v22 = v18;
    uint64_t v23 = (void *)sub_1C1518E7C();
    sub_1C151909C();
    swift_release();
    swift_release();
    swift_release();

    sub_1C151E1EC();
    sub_1C151F63C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
    swift_beginAccess();
    uint64_t v25 = v38;
    uint64_t v24 = v39;
    uint64_t v26 = v16;
    uint64_t v27 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v26, v40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v40);
      swift_beginAccess();
      uint64_t v28 = *(void **)(v17 + 16);
      sub_1C0A8CD28();
      swift_allocError();
      *(void *)uint64_t v29 = v28;
      *(void *)(v29 + 8) = 0;
      *(unsigned char *)(v29 + 16) = 3;
      id v30 = v28;
      swift_willThrow();
      swift_release();
      swift_release();
    }
    else
    {

      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v32, v25, v4);
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BFC9C5F0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC9C650()
{
  unint64_t result = qword_1EB874BB8;
  if (!qword_1EB874BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874BB8);
  }
  return result;
}

char *sub_1BFC9C6A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_readingHistory] = a1;
  uint64_t v5 = v2;
  id v6 = a1;
  id v7 = objc_msgSend(v6, sel_allLikedArticleIDs);
  uint64_t v8 = sub_1C151EFBC();

  *(void *)&v5[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allLikedArticleIDs] = v8;
  id v9 = objc_msgSend(v6, sel_allDislikedArticleIDs);
  uint64_t v10 = sub_1C151EFBC();

  *(void *)&v5[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allDislikedArticleIDs] = v10;
  v16.receiver = v5;
  v16.super_class = ObjectType;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v16, sel_init);
  uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_readingHistory];
  char v13 = v11;
  id v14 = v12;
  objc_msgSend(v14, sel_addObserver_, v13);

  return v13;
}

uint64_t _s8NewsFeed24LocationDetectionManagerC08locationE22DidChangeAuthorizationyySo010CLLocationE0CF_0()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1C006F8EC;
  *(void *)(v2 + 24) = v1;
  sub_1C15182FC();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1C0D47CF0;
  *(void *)(v3 + 24) = v2;
  swift_retain_n();
  swift_retain();
  sub_1C15182EC();
  swift_release_n();
  swift_release();
  swift_release();
  uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC);
  uint64_t v5 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC);
  if (v5)
  {
    uint64_t v6 = swift_retain();
    v5(v6);
    sub_1BFC3E5C0((uint64_t)v5);
    uint64_t v7 = *v4;
  }
  else
  {
    uint64_t v7 = 0;
  }
  *uint64_t v4 = 0;
  v4[1] = 0;
  sub_1BFC3E5C0(v7);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C0D48168;
  *(void *)(v9 + 24) = v8;
  swift_retain_n();
  sub_1C15182EC();
  swift_release_n();
  return swift_release();
}

uint64_t *sub_1BFC9C9D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = (v12 | 7) + v8;
  uint64_t v15 = v12 + 16;
  uint64_t v16 = *(void *)(v10 + 64);
  uint64_t v17 = v16 + v12;
  if (*(_DWORD *)(v10 + 84)) {
    size_t v18 = *(void *)(v10 + 64);
  }
  else {
    size_t v18 = v16 + 1;
  }
  unint64_t v19 = ((((((((v18 + 7 + ((v16 + v12 + ((v16 + v12 + ((v12 + 16) & ~v12)) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v21 = *(void *)(v20 + 64) + v13;
  if (v19 + (v21 & ~v13) <= v19 + (v14 & ~(v12 | 7))) {
    unint64_t v22 = v19 + (v14 & ~(v12 | 7));
  }
  else {
    unint64_t v22 = v19 + (v21 & ~v13);
  }
  uint64_t v23 = v13 | (*(unsigned char *)(v20 + 80) | *(unsigned char *)(v7 + 80));
  if (v23 != 7
    || ((*(_DWORD *)(v20 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v11 + 80)) & 0x100000) != 0
    || (v22 | 1) > 0x18)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    uint64_t v27 = (uint64_t *)(v26 + ((v23 + 16) & ~v23));
    swift_retain();
  }
  else
  {
    uint64_t v64 = v9;
    uint64_t v67 = a1;
    unsigned int v28 = *((unsigned __int8 *)a2 + v22);
    if ((v22 & 0xFFFFFFF8) != 0 && v28 >= 2) {
      unsigned int v28 = *(_DWORD *)a2 + 2;
    }
    size_t __n = v18;
    size_t v65 = v18 + 7;
    unint64_t v66 = v22;
    uint64_t v30 = ~v13;
    uint64_t v31 = ~v12;
    if (v28 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *))(v20 + 16))(v67, a2);
      uint64_t v32 = (void *)(((unint64_t)v67 + v21) & v30);
      uint64_t v33 = (void *)(((unint64_t)a2 + v21) & v30);
      *uint64_t v32 = *v33;
      v32[1] = v33[1];
      unint64_t v34 = ((unint64_t)v32 + v15) & v31;
      unint64_t v35 = ((unint64_t)v33 + v15) & v31;
      uint64_t v36 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v36(v34, v35, v64);
      unint64_t v37 = (v17 + v34) & v31;
      unint64_t v38 = (v17 + v35) & v31;
      v36(v37, v38, v64);
      uint64_t v39 = (void *)((v17 + v37) & v31);
      uint64_t v40 = (const void *)((v17 + v38) & v31);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v40, 1, v64))
      {
        memcpy(v39, v40, __n);
      }
      else
      {
        v36((unint64_t)v39, (unint64_t)v40, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v39, 0, 1, v64);
      }
      uint64_t v50 = (void *)(((unint64_t)v39 + v65) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v51 = (void *)(((unint64_t)v40 + v65) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v50 = *v51;
      uint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v52 = *v53;
      uint64_t v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v54 = *v55;
      *(void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v27 = v67;
      *((unsigned char *)v67 + v66) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v67, a2, v6);
      char v41 = (void *)(((unint64_t)v67 + v14) & v30);
      long long v42 = (void *)(((unint64_t)a2 + v14) & v30);
      *char v41 = *v42;
      v41[1] = v42[1];
      unint64_t v43 = ((unint64_t)v41 + v15) & v31;
      unint64_t v44 = ((unint64_t)v42 + v15) & v31;
      uint64_t v45 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v45(v43, v44, v64);
      unint64_t v46 = (v17 + v43) & v31;
      unint64_t v47 = (v17 + v44) & v31;
      v45(v46, v47, v64);
      uint64_t v48 = (void *)((v17 + v46) & v31);
      uint64_t v49 = (const void *)((v17 + v47) & v31);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v49, 1, v64))
      {
        memcpy(v48, v49, __n);
      }
      else
      {
        v45((unint64_t)v48, (unint64_t)v49, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v64);
      }
      uint64_t v56 = (void *)(((unint64_t)v48 + v65) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v57 = (void *)(((unint64_t)v49 + v65) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v56 = *v57;
      uint64_t v58 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v59 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v58 = *v59;
      uint64_t v60 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v61 = (void *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v60 = *v61;
      *(void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v27 = v67;
      *((unsigned char *)v67 + v66) = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v27;
}

uint64_t initializeWithCopy for FormatContentRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1BFC9CF8C(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t sub_1BFC9CF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return swift_retain();
    case 7:
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 15:
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 16:
LABEL_7:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFC9D058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1C151DBAC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

void *_s8NewsFeed16FeedJournalEntryVwCP_0(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v4 >= 2) {
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t sub_1BFC9D11C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedHeadlineFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedIssueFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedTagFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedWebEmbedFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = result;
  type metadata accessor for FeedCustomItemFactory();
  uint64_t v7 = swift_allocObject();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB894EB0);
  uint64_t result = sub_1C151819C();
  if (!v15)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPuzzleFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = result;
  uint64_t v9 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPuzzleTypeFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPuzzleStatisticFactory();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v11 = result;
    type metadata accessor for FeedModelFactory();
    uint64_t v12 = (void *)swift_allocObject();
    void v12[2] = v9;
    v12[3] = v4;
    v12[4] = v5;
    v12[5] = v6;
    void v12[6] = v13;
    sub_1BFC773DC(&v14, (uint64_t)(v12 + 7));
    v12[12] = v8;
    v12[13] = v10;
    v12[14] = v11;
    return (uint64_t)v12;
  }
LABEL_17:
  __break(1u);
  return result;
}

void FeedLayoutResult.supplementaryAttributes(kind:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 40);
  v3[2] = a1;
  swift_bridgeObjectRetain();
  sub_1BFEA4550((uint64_t (*)(char *))sub_1BFEA48B8, (uint64_t)v3, v2);
}

uint64_t sub_1BFC9D3F8()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D6E6F7269766E65;
  }
}

uint64_t sub_1BFC9D458@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895798);
  uint64_t result = sub_1C151819C();
  if (!v29)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8948D8);
  uint64_t result = sub_1C151815C();
  if (!v27)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewProvider();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895C58);
  uint64_t result = sub_1C151819C();
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewRenderer();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    __n128 v8 = MEMORY[0x1F4188790](v7);
    uint64_t v10 = (void *)((char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    uint64_t v13 = type metadata accessor for IssueCoverViewStyler();
    v23[3] = v13;
    v23[4] = &off_1F1C37A60;
    v23[0] = v12;
    uint64_t v14 = type metadata accessor for IssueCoverViewRenderer();
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v13);
    __n128 v17 = MEMORY[0x1F4188790](v16);
    unint64_t v19 = (void *)((char *)&v23[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v20 + 16))(v19, v17);
    uint64_t v21 = *v19;
    *(void *)(v15 + 80) = v13;
    *(void *)(v15 + 88) = &off_1F1C37A60;
    *(_OWORD *)(v15 + 16) = 0u;
    *(_OWORD *)(v15 + 32) = 0u;
    *(void *)(v15 + 48) = 0;
    *(void *)(v15 + 56) = v21;
    sub_1BFC773DC(&v26, v15 + 96);
    *(void *)(v15 + 136) = v5;
    sub_1BFC773DC(&v24, v15 + 144);
    *(void *)(v15 + 184) = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    a2[3] = v14;
    a2[4] = (uint64_t)&off_1F1B8CE58;
    *a2 = v15;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BFC9D7E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatResize.init(from:)(a1, a2);
}

uint64_t FormatResize.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  long long v24 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v24;
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v17;
      *(void *)(v19 + 16) = &unk_1F1B87598;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC9DB94();
  long long v25 = 0uLL;
  sub_1C15206EC();
  type metadata accessor for FormatResizeAuto();
  long long v25 = xmmword_1C152C800;
  sub_1C085F050(&qword_1EB887F88, (void (*)(uint64_t))type metadata accessor for FormatResizeAuto);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
  uint64_t v21 = v26;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *uint64_t v13 = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FormatResizeAuto()
{
  return self;
}

unint64_t sub_1BFC9DB94()
{
  unint64_t result = qword_1EB887118;
  if (!qword_1EB887118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887118);
  }
  return result;
}

uint64_t sub_1BFC9DBE8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for PaidBundleConfigManager()
{
  return self;
}

uint64_t type metadata accessor for FeedAppConfigManager()
{
  return self;
}

uint64_t sub_1BFC9DC84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMenuTitle.init(from:)(a1, a2);
}

uint64_t FormatMenuTitle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  char v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v16;
      *(void *)(v22 + 16) = &unk_1F1B82FB8;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC9E06C();
  long long v25 = 0uLL;
  sub_1C15206EC();
  if (v24)
  {
    long long v25 = xmmword_1C152C800;
    sub_1BFE3CF48();
    sub_1C15206EC();
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    uint64_t v18 = 0;
    *(void *)&long long v19 = v24;
    uint64_t v20 = 4;
  }
  else
  {
    sub_1BFCFA294();
    long long v24 = xmmword_1C152C800;
    sub_1C085F050(&qword_1EB875B78, (void (*)(uint64_t))sub_1BFCFA294);
    sub_1C15206EC();
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    long long v19 = v25;
    uint64_t v18 = v26;
    uint64_t v20 = v27;
  }
  *(_OWORD *)uint64_t v17 = v19;
  *(void *)(v17 + 16) = v18;
  *(void *)(v17 + 24) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC9E06C()
{
  unint64_t result = qword_1EB887800;
  if (!qword_1EB887800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887800);
  }
  return result;
}

uint64_t sub_1BFC9E0C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMenuImage.init(from:)(a1, a2);
}

uint64_t FormatMenuImage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  char v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v16;
      *(void *)(v21 + 16) = &unk_1F1B862D0;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC9E4A4();
  long long v24 = 0uLL;
  sub_1C15206EC();
  if (v23)
  {
    long long v24 = xmmword_1C152C800;
    sub_1BFD361E4();
    sub_1C15206EC();
    uint64_t v17 = v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    *(void *)&long long v18 = v23;
    uint64_t v19 = 0x2000000000000000;
  }
  else
  {
    sub_1BFCFAA40();
    long long v23 = xmmword_1C152C800;
    sub_1C085F050(&qword_1EB875F90, (void (*)(uint64_t))sub_1BFCFAA40);
    sub_1C15206EC();
    uint64_t v17 = v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    long long v18 = v24;
    uint64_t v19 = v25;
  }
  *(_OWORD *)uint64_t v17 = v18;
  *(void *)(v17 + 16) = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC9E4A4()
{
  unint64_t result = qword_1EB8877F0;
  if (!qword_1EB8877F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8877F0);
  }
  return result;
}

uint64_t sub_1BFC9E4F8@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatVideoPlayerContent.init(from:)(a1, a2);
}

uint64_t FormatVideoPlayerContent.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v31 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  char v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v16;
      *(void *)(v23 + 16) = &unk_1F1B88AB0;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFC9E978();
  long long v28 = 0uLL;
  sub_1C15206EC();
  if (v27)
  {
    long long v27 = xmmword_1C152C800;
    sub_1BFC9E924();
    sub_1C15206EC();
    uint64_t v17 = v31;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    long long v26 = v28;
    uint64_t v18 = v29;
    char v19 = v30;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v26;
    *(void *)(v20 + 32) = v18;
    *(unsigned char *)(v20 + 40) = v19;
    unint64_t v21 = v20 | 0x8000000000000000;
  }
  else
  {
    sub_1BFEFF3E8(0, &qword_1EB87E948, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    long long v27 = xmmword_1C152C800;
    sub_1C007C8E4();
    sub_1C15206EC();
    uint64_t v17 = v31;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    long long v25 = v28;
    unint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v25;
  }
  *uint64_t v17 = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFC9E924()
{
  unint64_t result = qword_1EB8803E0;
  if (!qword_1EB8803E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8803E0);
  }
  return result;
}

unint64_t sub_1BFC9E978()
{
  unint64_t result = qword_1EB88B940;
  if (!qword_1EB88B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B940);
  }
  return result;
}

uint64_t sub_1BFC9E9CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatAnimationNodeKeyPathAnimation.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t FormatAnimationNodeKeyPathAnimation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v61 = a4;
  uint64_t v67 = sub_1C151FD8C();
  uint64_t v70 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v60 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (char *)&v54 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v59 = (char *)&v54 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v66 = (char *)&v54 - v13;
  MEMORY[0x1F4188790](v14);
  char v68 = (char *)&v54 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v72 = a3;
  CGFloat v73 = (char *)&v54 - v17;
  uint64_t v71 = a2;
  uint64_t v18 = _s10CodingKeysOMa_214();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  *(void *)&long long v74 = v18;
  *((void *)&v74 + 1) = WitnessTable;
  uint64_t v64 = v20;
  uint64_t v65 = WitnessTable;
  uint64_t v75 = v20;
  uint64_t v76 = v21;
  uint64_t v63 = v21;
  uint64_t v22 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v23 = sub_1C152072C();
  uint64_t v69 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  long long v25 = (char *)&v54 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  long long v26 = (void *)v77;
  sub_1C1520EBC();
  long long v27 = v26;
  if (v26)
  {
    long long v28 = a1;
    goto LABEL_15;
  }
  uint64_t v56 = v18;
  uint64_t v57 = 0;
  uint64_t v58 = v25;
  uint64_t v77 = v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v29 = sub_1C1520EAC();
  char v30 = Dictionary<>.errorOnUnknownKeys.getter(v29);
  swift_bridgeObjectRelease();
  uint64_t v31 = v70;
  long long v28 = a1;
  if ((v30 & 1) == 0)
  {
LABEL_12:
    long long v74 = 0uLL;
    LOBYTE(v75) = 0;
    uint64_t v43 = v77;
    unint64_t v44 = v58;
    uint64_t v45 = v57;
    sub_1C152065C();
    if (!v45)
    {
      long long v74 = xmmword_1C153AB20;
      LOBYTE(v75) = 0;
      sub_1C152065C();
      long long v74 = xmmword_1C1557FA0;
      LOBYTE(v75) = 0;
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v43);
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      uint64_t v51 = (uint64_t)v59;
      uint64_t v52 = v67;
      v50(v59, v73, v67);
      v50(v62, v68, v52);
      uint64_t v53 = (uint64_t)v60;
      v50(v60, v66, v52);
      sub_1BFC9F0F0(v51, (uint64_t)v62, v53, v61);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v43);
    long long v27 = v45;
LABEL_15:
    sub_1C0038728(v28, (uint64_t)v27);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  uint64_t v32 = sub_1C152070C();
  if (!MEMORY[0x1C18C6870](v32, v22))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v55 = a1;
  uint64_t v33 = 0;
  unint64_t v34 = (char *)(v32 + 48);
  while (1)
  {
    char v35 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v35 & 1) == 0) {
      break;
    }
    uint64_t v37 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      goto LABEL_19;
    }
    uint64_t v39 = *((void *)v34 - 2);
    uint64_t v38 = *((void *)v34 - 1);
    char v40 = *v34;
    *(void *)&long long v74 = v39;
    *((void *)&v74 + 1) = v38;
    LOBYTE(v75) = v40;
    sub_1BFE94AB4(v39, v38, v40);
    uint64_t v41 = sub_1C0D990EC(v22);
    if (v42)
    {
      uint64_t v46 = v42;
      uint64_t v47 = v41;
      swift_bridgeObjectRelease();
      uint64_t v48 = sub_1C0D98F50(v56, v65, v64, v63);
      sub_1C02570B4();
      long long v27 = (void *)swift_allocError();
      *(void *)uint64_t v49 = v47;
      *(void *)(v49 + 8) = v46;
      *(void *)(v49 + 16) = v48;
      *(_OWORD *)(v49 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v74, *((uint64_t *)&v74 + 1), v75);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v77);
      long long v28 = v55;
      goto LABEL_15;
    }
    sub_1BFE94AD4(v39, v38, v40);
    ++v33;
    v34 += 24;
    if (v37 == MEMORY[0x1C18C6870](v32, v22))
    {
      swift_bridgeObjectRelease();
      long long v28 = v55;
      uint64_t v31 = v70;
      goto LABEL_12;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1BFC9F0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v12)((void *)(v8 - 8), a4, a1, v8);
  uint64_t v9 = type metadata accessor for FormatAnimationNodeKeyPathAnimation();
  v12(a4 + *(int *)(v9 + 36), a2, v8);
  uint64_t v10 = a4 + *(int *)(v9 + 40);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v10, a3, v8);
}

uint64_t type metadata accessor for FormatAnimationNodeKeyPathAnimation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s10CodingKeysOMa_214()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFC9F220(void *a1)
{
  return FormatHBoxNode.encode(to:)(a1);
}

uint64_t sub_1BFC9F244(uint64_t a1)
{
  uint64_t v92 = a1;
  uint64_t v93 = 0;
  v94[6] = *MEMORY[0x1E4F143B8];
  uint64_t v81 = *v1;
  swift_beginAccess();
  uint64_t v88 = v1;
  uint64_t v2 = v1[7];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v77 = sub_1C0063020(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v76 = sub_1C0063140(0, v3, 0, v4);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v78 = v2;
  uint64_t v80 = v5;
  if (!v5)
  {
LABEL_30:
    sub_1C006BB84();
    uint64_t v45 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void *)(v45 + 16);
    uint64_t v92 = v45;
    if (v46)
    {
      uint64_t v47 = (unsigned __int8 *)(v45 + 67);
      uint64_t v48 = v77;
      do
      {
        uint64_t v49 = *(void *)(v47 - 35);
        uint64_t v50 = *(void *)(v47 - 27);
        char v51 = *(v47 - 19);
        uint64_t v52 = *(void *)(v47 - 11);
        uint64_t v53 = *(unsigned __int16 *)(v47 - 3) | (*(v47 - 1) << 16);
        LODWORD(v93) = *v47;
        swift_bridgeObjectRetain();
        sub_1BFF9C7FC(v52, v53);
        unint64_t v55 = v48[2];
        unint64_t v54 = v48[3];
        if (v55 >= v54 >> 1) {
          uint64_t v48 = sub_1C0063020((void *)(v54 > 1), v55 + 1, 1, v48);
        }
        v48[2] = v55 + 1;
        uint64_t v56 = &v48[5 * v55];
        v56[4] = v49;
        v56[5] = v50;
        *((unsigned char *)v56 + 48) = v51;
        v56[7] = v52;
        *((unsigned char *)v56 + 66) = BYTE2(v53);
        *((_WORD *)v56 + 32) = v53;
        *((unsigned char *)v56 + 67) = (_BYTE)v93;
        v47 += 48;
        --v46;
      }
      while (v46);
    }
    else
    {
      uint64_t v48 = v77;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v57 = v48[2];
    if (v57)
    {
      uint64_t v58 = v88;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v77 = v48;
      uint64_t v59 = (unsigned __int8 *)v48 + 67;
      do
      {
        int v62 = *(v59 - 19);
        uint64_t v63 = *(void *)(v59 - 11);
        int v64 = *(v59 - 1);
        int v65 = *(unsigned __int16 *)(v59 - 3);
        LODWORD(v92) = *v59;
        swift_beginAccess();
        unint64_t v66 = v58;
        if (v62 == 2) {
          int v62 = *((unsigned __int8 *)v58 + 48);
        }
        LODWORD(v91) = v62;
        uint64_t v67 = v65 | (v64 << 16);
        uint64_t v68 = v58[3];
        uint64_t v90 = v58[2];
        uint64_t v69 = v58[4];
        uint64_t v70 = v58[5];
        uint64_t v89 = v69;
        swift_beginAccess();
        uint64_t v71 = v66[7];
        uint64_t v93 = (void *)v63;
        unsigned int v72 = v67;
        if ((v67 & 0xFFFFFF) >= 0xFF0000)
        {
          uint64_t v63 = v66[8];
          unsigned int v72 = *((unsigned __int16 *)v66 + 36) | (*((unsigned __int8 *)v66 + 74) << 16);
          sub_1BFF9C7FC(v63, v72);
        }
        char v73 = v92;
        if (v92 == 3) {
          char v73 = *((unsigned char *)v66 + 75);
        }
        uint64_t v60 = swift_allocObject();
        uint64_t v88 = v66;
        uint64_t v61 = v60;
        swift_beginAccess();
        *(void *)(v61 + 16) = v90;
        *(void *)(v61 + 24) = v68;
        *(void *)(v61 + 32) = v89;
        *(void *)(v61 + 40) = v70;
        *(unsigned char *)(v61 + 48) = v91;
        swift_beginAccess();
        *(void *)(v61 + 56) = v71;
        *(void *)(v61 + 64) = v63;
        *(unsigned char *)(v61 + 74) = BYTE2(v72);
        *(_WORD *)(v61 + 72) = v72;
        *(unsigned char *)(v61 + 75) = v73;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF9C7FC((uint64_t)v93, v67);
        swift_release();
        v59 += 40;
        uint64_t v58 = (void *)v61;
        --v57;
      }
      while (v57);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v61 = (uint64_t)v88;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v61;
  }
  uint64_t v79 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
LABEL_5:
  if (v6 >= *(void *)(v2 + 16)) {
    goto LABEL_50;
  }
  uint64_t v9 = v79 + 40 * v6;
  uint64_t v11 = *(void *)v9;
  uint64_t v10 = *(void *)(v9 + 8);
  int v83 = *(unsigned __int8 *)(v9 + 16);
  uint64_t v7 = *(void *)(v9 + 24);
  uint64_t v8 = *(unsigned __int16 *)(v9 + 32) | (*(unsigned __int8 *)(v9 + 34) << 16);
  int v84 = *(unsigned __int8 *)(v9 + 35);
  swift_bridgeObjectRetain();
  sub_1BFF9C7FC(v7, v8);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  uint64_t v82 = v11;
  v94[0] = v11;
  v94[1] = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1BFEF53C0(v94);
  swift_bridgeObjectRelease();
  uint64_t v91 = *(void *)(v12 + 16);
  if (!v91)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  unsigned int v87 = v8;
  uint64_t v85 = v7;
  unint64_t v86 = v6;
  unint64_t v13 = 0;
  uint64_t v14 = (uint64_t *)(v12 + 64);
  uint64_t v89 = v10;
  while (1)
  {
    if (v13 >= *(void *)(v12 + 16))
    {
      __break(1u);
LABEL_50:
      __break(1u);
    }
    uint64_t v90 = *(v14 - 2);
    uint64_t v15 = *(v14 - 1);
    uint64_t v16 = *v14;
    char v17 = *(unsigned char *)(v15 + 32);
    unsigned int v18 = v17 & 0x3F;
    unint64_t v19 = (unint64_t)((1 << v17) + 63) >> 6;
    size_t v20 = 8 * v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v18 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v22 = (char *)swift_slowAlloc();
    bzero(v22, v20);
    uint64_t v26 = v19;
    uint64_t v24 = v93;
    uint64_t v25 = sub_1BFEFB09C((uint64_t)v22, v26, v15, v92);
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_52;
    }
    uint64_t v93 = 0;
    MEMORY[0x1C18C9B00](v22, -1, -1);
LABEL_18:
    char v27 = sub_1BFEFAE14(v25, v15);
    swift_release();
    if (v27 & 1) != 0 && (sub_1BFEFB810(v92, v16))
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = v87;
      unsigned int v29 = HIWORD(v87);
      uint64_t v30 = v90;
      if (v90 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v7 = v85;
        sub_1BFF9C7FC(v85, v28);
        uint64_t v38 = v77;
        unint64_t v40 = v77[2];
        unint64_t v39 = v77[3];
        unint64_t v6 = v86;
        if (v40 >= v39 >> 1) {
          uint64_t v38 = sub_1C0063020((void *)(v39 > 1), v40 + 1, 1, v77);
        }
        char v41 = v84;
        char v42 = v83;
        uint64_t v43 = v82;
        v38[2] = v40 + 1;
        uint64_t v77 = v38;
        unint64_t v44 = &v38[5 * v40];
        v44[4] = v43;
        v44[5] = v89;
        *((unsigned char *)v44 + 48) = v42;
        v44[7] = v7;
        *((unsigned char *)v44 + 66) = v29;
        uint64_t v8 = v87;
        *((_WORD *)v44 + 32) = v87;
        *((unsigned char *)v44 + 67) = v41;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = v85;
        sub_1BFF9C7FC(v85, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v76;
        unint64_t v33 = v76[2];
        unint64_t v32 = v76[3];
        unint64_t v6 = v86;
        if (v33 >= v32 >> 1) {
          uint64_t v31 = sub_1C0063140((void *)(v32 > 1), v33 + 1, 1, v76);
        }
        char v34 = v84;
        char v35 = v83;
        uint64_t v36 = v82;
        void v31[2] = v33 + 1;
        uint64_t v76 = v31;
        uint64_t v37 = &v31[6 * v33];
        v37[4] = v36;
        void v37[5] = v89;
        *((unsigned char *)v37 + 48) = v35;
        v37[7] = v7;
        *((unsigned char *)v37 + 66) = v29;
        uint64_t v8 = v87;
        *((_WORD *)v37 + 32) = v87;
        *((unsigned char *)v37 + 67) = v34;
        v37[9] = v30;
      }
      swift_bridgeObjectRelease();
      uint64_t v2 = v78;
LABEL_4:
      ++v6;
      sub_1BFF9C84C(v7, v8);
      if (v6 == v80)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      goto LABEL_5;
    }
    ++v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 += 5;
    if (v91 == v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v78;
      unint64_t v6 = v86;
      uint64_t v7 = v85;
      uint64_t v8 = v87;
      goto LABEL_4;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v22 = (char *)&v75 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v22, v20);
  uint64_t v23 = v19;
  uint64_t v24 = v93;
  uint64_t v25 = sub_1BFEFB09C((uint64_t)v22, v23, v15, v92);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    uint64_t v93 = 0;
    goto LABEL_18;
  }
  swift_willThrow();

  __break(1u);
LABEL_52:

  uint64_t result = MEMORY[0x1C18C9B00](v22, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BFC9FB64()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC9FBB4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC9FC14()
{
  unint64_t result = qword_1EB8887C8;
  if (!qword_1EB8887C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8887C8);
  }
  return result;
}

uint64_t sub_1BFC9FC68(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1BFC9FCAC()
{
  return sub_1BFE6BB68(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), (void (*)(uint64_t, void))sub_1BFE6D3C0);
}

uint64_t sub_1BFC9FCE0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFC9FD30()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFC9FD90()
{
  unint64_t result = qword_1EB88A728;
  if (!qword_1EB88A728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A728);
  }
  return result;
}

void *FeedGroupDecoration.decorationItem.getter@<X0>(uint64_t *a1@<X8>)
{
  switch(*v1 >> 61)
  {
    case 1:
      uint64_t v3 = sub_1C151C09C();
      uint64_t v4 = swift_projectBox();
      uint64_t v5 = MEMORY[0x1E4FAD168];
      goto LABEL_6;
    case 2:
      uint64_t v3 = sub_1C151C5FC();
      uint64_t v4 = swift_projectBox();
      uint64_t v5 = MEMORY[0x1E4FAD590];
      goto LABEL_6;
    case 3:
      uint64_t v3 = sub_1C151BFEC();
      uint64_t v4 = swift_projectBox();
      uint64_t v5 = MEMORY[0x1E4FAD140];
      goto LABEL_6;
    case 4:
      uint64_t v9 = type metadata accessor for FormatMicaSectionDecorationItem();
      uint64_t v10 = swift_projectBox();
      a1[3] = v9;
      a1[4] = sub_1C0BFCE9C();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
      return (void *)sub_1C0AF2564(v10, (uint64_t)boxed_opaque_existential_0);
    case 5:
      return FeedGroupDecoration.decorationItem.getter(a1);
    default:
      uint64_t v3 = sub_1C151BE2C();
      uint64_t v4 = swift_projectBox();
      uint64_t v5 = MEMORY[0x1E4FACE60];
LABEL_6:
      a1[3] = v3;
      a1[4] = v5;
      unint64_t v6 = __swift_allocate_boxed_opaque_existential_0(a1);
      uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
      return (void *)v7(v6, v4, v3);
  }
}

uint64_t sub_1BFC9FFA8(void *a1)
{
  return FormatCompilerProperty.encode(to:)(a1);
}

unint64_t sub_1BFC9FFC0()
{
  return sub_1C075776C(*v0);
}

uint64_t sub_1BFC9FFC8@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1BFCA0064(void *a1)
{
  return FormatTextNodeFormat.Token.encode(to:)(a1);
}

uint64_t sub_1BFCA007C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAnimationNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatAnimationNodeStyle.Selector.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C0872E8C();
  uint64_t v7 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0872F20();
  sub_1C085F050(&qword_1EB86CDD8, (void (*)(uint64_t))sub_1C0872F20);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v36;
  unint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *((void *)v16 - 1);
      uint64_t v35 = *((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = swift_bridgeObjectRelease();
      uint64_t v22 = v12;
      MEMORY[0x1F4188790](v21);
      *(void *)&v31[-32] = &_s10CodingKeysON_198;
      *(void *)&v31[-24] = sub_1C0872FA4();
      *(void *)&v31[-16] = sub_1BFCA0598();
      *(void *)&v31[-8] = sub_1C0872FF8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B83B80);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v24 = v35;
      *(void *)uint64_t v25 = v35;
      *(void *)(v25 + 8) = v20;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v20, 1);
      (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v13, v7);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9420C();
  long long v39 = 0uLL;
  unsigned __int8 v40 = 0;
  sub_1C15206EC();
  long long v17 = v37;
  long long v37 = xmmword_1C153AB20;
  char v38 = 0;
  sub_1BFD476F4();
  sub_1C152065C();
  uint64_t v18 = *((void *)&v39 + 1);
  uint64_t v34 = v17;
  uint64_t v35 = v39;
  int v19 = v40;
  sub_1BFE9DEBC(0, &qword_1EB860C38, (uint64_t)&type metadata for FormatAnimationNodeAnimation, MEMORY[0x1E4FBB320]);
  long long v39 = xmmword_1C1557FA0;
  unsigned __int8 v40 = 0;
  sub_1BFCE852C();
  sub_1C152065C();
  int v32 = v19;
  uint64_t v33 = v18;
  uint64_t v27 = v37;
  long long v39 = xmmword_1C1557FB0;
  unsigned __int8 v40 = 0;
  sub_1BFCE85C0();
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v9, v7);
  int v28 = v37;
  char v29 = BYTE4(v37);
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = *((void *)&v17 + 1);
  uint64_t v30 = v33;
  *(void *)(a2 + 16) = v35;
  *(void *)(a2 + 24) = v30;
  *(unsigned char *)(a2 + 32) = v32;
  *(void *)(a2 + 40) = v27;
  *(unsigned char *)(a2 + 52) = v29;
  *(_DWORD *)(a2 + 48) = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCA0598()
{
  unint64_t result = qword_1EB8675E8;
  if (!qword_1EB8675E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8675E8);
  }
  return result;
}

uint64_t FeedRebuildPolicy.init(appConfigManager:groupLimitKeyPath:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = FCNewsAppConfigurationManager.accessor(for:)(a1, ObjectType);
  swift_unknownObjectRelease();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t FCNewsAppConfigurationManager.accessor(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a2;
  v5[3] = v2;
  void v5[4] = a1;
  sub_1BFCA06D8();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1C151936C();
}

void sub_1BFCA06D8()
{
  if (!qword_1EB862980)
  {
    unint64_t v0 = sub_1C151934C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB862980);
    }
  }
}

uint64_t LocationDetectionManager.addObserver(_:)()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = MEMORY[0x1C18C7CB0](i, v2);
    }
    else
    {
      uint64_t v6 = *(void *)(v2 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v7 = MEMORY[0x1C18C9C60](v6 + 16);
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v10;
LABEL_15:
  uint64_t *v1 = v8;
  swift_bridgeObjectRelease();
  type metadata accessor for LocationDetectionManagerObserverProxy();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t v9 = swift_beginAccess();
  MEMORY[0x1C18C66D0](v9);
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C151EC8C();
  }
  sub_1C151ECEC();
  sub_1C151EBEC();
  return swift_endAccess();
}

uint64_t type metadata accessor for LocationDetectionManagerObserverProxy()
{
  return self;
}

uint64_t sub_1BFCA09D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v59 = sub_1BFD77314;
  uint64_t v58 = sub_1BFD773F8;
  sub_1BFD76F08(0, &qword_1EB864078, &qword_1EB864070, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v60 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v57 = (char *)&v46 - v4;
  unint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFD771FC(0, (unint64_t *)&qword_1EB85AC98, (uint64_t)&qword_1EB85AC90, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD77008);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v55 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)&v46 - v8;
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD76F08(0, &qword_1EB85AC88, &qword_1EB85AC80, MEMORY[0x1E4F27928], sub_1C03029F4);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v52 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = (uint64_t (*)(void, void, void))MEMORY[0x1E4FAA6B0];
  sub_1BFD771FC(0, (unint64_t *)&qword_1EB85ACA8, (uint64_t)&qword_1EB85ACA0, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD76E3C);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v46 - v20;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, v15);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v63 = v25;
  uint64_t v64 = v24 + 56;
  uint64_t v46 = v21;
  v25(v21, 1, 1, v22);
  int v62 = v18;
  v25(v18, 1, 1, v23);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v56 = sub_1C151996C();
  char v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFD76DBC(0, &qword_1EB85AC80, v9, sub_1C03029F4, MEMORY[0x1E4FAA6B0]);
  uint64_t v27 = v26;
  int v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v28(v14, 1, 1, v26);
  v28(v52, 1, 1, v27);
  uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFD76DBC(0, &qword_1EB85ACD8, v9, sub_1C03029F4, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFD76DBC(0, &qword_1EB85AC38, v9, sub_1C03029F4, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v52 = (char *)sub_1C151996C();
  char v29 = v46;
  uint64_t v47 = v23;
  uint64_t v30 = v63;
  v63(v46, 1, 1, v23);
  v30(v62, 1, 1, v23);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v49 = sub_1C151996C();
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85AC90, v54);
  uint64_t v32 = v31;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
  v33(v53, 1, 1, v31);
  v33(v55, 1, 1, v32);
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85ACE8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  unint64_t v55 = (char *)sub_1C151996C();
  uint64_t v35 = v58;
  uint64_t v34 = (uint64_t (*)(uint64_t))v59;
  sub_1BFD76DBC(0, &qword_1EB864070, (uint64_t (*)(uint64_t))v59, v58, v51);
  uint64_t v37 = v36;
  char v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  v38(v57, 1, 1, v36);
  v38(v60, 1, 1, v37);
  sub_1BFD76DBC(0, &qword_1EB8640D0, v34, v35, v50);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76DBC(0, &qword_1EB863FF8, v34, v35, v48);
  swift_allocObject();
  uint64_t v39 = sub_1C151996C();
  uint64_t v40 = v47;
  char v41 = v63;
  v63(v29, 1, 1, v47);
  v41(v62, 1, 1, v40);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t result = sub_1C151996C();
  uint64_t v43 = v61;
  unint64_t v44 = v52;
  *uint64_t v61 = v56;
  v43[1] = (uint64_t)v44;
  uint64_t v45 = v55;
  v43[2] = v49;
  v43[3] = (uint64_t)v45;
  v43[4] = v39;
  v43[5] = result;
  return result;
}

uint64_t sub_1BFCA12D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTagNavigate.init(from:)(a1, a2);
}

uint64_t FormatTagNavigate.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1C0908CDC(0, &qword_1EB884EA0, (void (*)(void))sub_1C00773E4, (void (*)(void))sub_1C0077438);
  uint64_t v4 = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v31 - v5;
  sub_1C08BE81C();
  uint64_t v8 = v7;
  uint64_t v33 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BE8B0();
  sub_1C085F050(&qword_1EB891CA0, (void (*)(uint64_t))sub_1C08BE8B0);
  uint64_t v11 = v34;
  sub_1C1520EBC();
  if (v11)
  {
    uint64_t v12 = v11;
LABEL_3:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v34 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v8;
  uint64_t v16 = v32;
  if (v14)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_9;
        }
      }
      uint64_t v34 = v15;
      uint64_t v22 = *((void *)v19 - 2);
      uint64_t v23 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      uint64_t v25 = v10;
      MEMORY[0x1F4188790](v24);
      *(&v31 - 4) = (uint64_t *)&_s10CodingKeysON_25;
      *(&v31 - 3) = (uint64_t *)sub_1C08BE934();
      *(&v31 - 2) = (uint64_t *)sub_1BFCFDA3C();
      *(&v31 - 1) = (uint64_t *)sub_1C08BE988();
      swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FA20((uint64_t)&unk_1F1B886C8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v22;
      *(void *)(v27 + 8) = v23;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v23, 1);
      (*(void (**)(char *, char *))(v33 + 8))(v25, v34);
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
  }
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  char v40 = 0;
  if (sub_1C152071C())
  {
    sub_1C08704B0();
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    char v37 = 0;
    uint64_t v20 = v34;
    sub_1C15206EC();
    uint64_t v21 = v31;
    uint64_t v28 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v4);
    uint64_t v29 = v33;
  }
  else
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v33;
    uint64_t v21 = v31;
  }
  (*(void (**)(char *, char *))(v29 + 8))(v10, v15);
  *uint64_t v21 = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFCA1778(void *a1)
{
  sub_1BFE89214();
  uint64_t v81 = v2;
  uint64_t v79 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v80 = &v57[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v5 = v4;
  uint64_t v82 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v57[-v6];
  sub_1C08EABC8();
  uint64_t v9 = v8;
  uint64_t v83 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C94A4();
  sub_1C085F050(&qword_1EB891FC0, (void (*)(uint64_t))sub_1C08C94A4);
  uint64_t v13 = (uint64_t)v84;
  sub_1C1520EBC();
  char v14 = (void *)v13;
  if (v13) {
    goto LABEL_10;
  }
  int v84 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  uint64_t v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = v9;
  if (v16)
  {
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = (unsigned char *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = v9;
      uint64_t v25 = v11;
      uint64_t v27 = *((void *)v20 - 2);
      uint64_t v26 = *((void *)v20 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1C08C9528();
      sub_1C0074D30();
      sub_1C08C957C();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v29 = sub_1C085FB14((uint64_t)&unk_1F1B6B0E8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v30 = swift_allocError();
      *(void *)uint64_t v31 = v27;
      *(void *)(v31 + 8) = v26;
      *(void *)(v31 + 16) = v29;
      char v14 = (void *)v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v27, v26, 1);
      (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v25, v24);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C08EABC8);
  uint64_t v23 = v22;
  long long v96 = xmmword_1C153AB20;
  LOBYTE(v97) = 0;
  sub_1BFE1CFFC();
  sub_1C15206EC();
  unint64_t v32 = v90;
  long long v96 = xmmword_1C1557FA0;
  LOBYTE(v97) = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  unint64_t v76 = v32;
  uint64_t v78 = 0;
  uint64_t v34 = v90;
  long long v75 = xmmword_1C1557FB0;
  long long v96 = xmmword_1C1557FB0;
  LOBYTE(v97) = 0;
  char v35 = sub_1C152071C();
  uint64_t v77 = v34;
  if (v35)
  {
    long long v90 = v75;
    LOBYTE(v91) = 0;
    sub_1C08B07C8();
    uint64_t v36 = (uint64_t)v84;
    uint64_t v37 = v5;
    uint64_t KeyPath = (uint64_t)v11;
    uint64_t v38 = (uint64_t)v78;
    sub_1C15206EC();
    uint64_t v78 = (void *)v38;
    if (v38)
    {
      sub_1BFF322A8(v76);
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v11, v17);
      char v14 = v78;
LABEL_10:
      sub_1C0038728(a1, (uint64_t)v14);
      swift_willThrow();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return KeyPath;
    }
    uint64_t v74 = v21;
    *(void *)&long long v75 = a1;
    uint64_t v39 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v36, v37);
  }
  else
  {
    uint64_t v74 = v21;
    *(void *)&long long v75 = a1;
    uint64_t v39 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatVideoPlayerNodeStyle();
  long long v96 = xmmword_1C1557FD0;
  LOBYTE(v97) = 0;
  sub_1C085F050(&qword_1EB88C410, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle);
  uint64_t KeyPath = (uint64_t)v11;
  uint64_t v40 = (uint64_t)v78;
  sub_1C152065C();
  char v14 = (void *)v40;
  if (v40)
  {
    (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v11, v17);
    sub_1BFF322A8(v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    a1 = (void *)v75;
    goto LABEL_10;
  }
  uint64_t v41 = v90;
  type metadata accessor for FormatAnimationNodeStyle();
  long long v96 = xmmword_1C1557FC0;
  LOBYTE(v97) = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  int v84 = (unsigned char *)v41;
  uint64_t v42 = v90;
  long long v96 = xmmword_1C1557FE0;
  LOBYTE(v97) = 0;
  sub_1C006FA30();
  sub_1C15206EC();
  uint64_t v82 = v39;
  uint64_t v43 = v90;
  long long v96 = xmmword_1C1557FF0;
  LOBYTE(v97) = 0;
  sub_1BFE3D1DC();
  sub_1C15206EC();
  uint64_t v78 = (void *)v23;
  uint64_t v44 = v90;
  type metadata accessor for FormatImageNodeStyle();
  long long v96 = xmmword_1C1558010;
  LOBYTE(v97) = 0;
  sub_1C085F050(&qword_1EB889800, (void (*)(uint64_t))type metadata accessor for FormatImageNodeStyle);
  sub_1C152065C();
  uint64_t v73 = v90;
  long long v90 = xmmword_1C1558020;
  LOBYTE(v91) = 0;
  sub_1C00693D8();
  sub_1C152065C();
  long long v66 = v96;
  uint64_t v67 = v97;
  uint64_t v68 = v98;
  uint64_t v69 = v99;
  uint64_t v70 = v100;
  int v71 = v101;
  long long v90 = xmmword_1C1558030;
  LOBYTE(v91) = 0;
  sub_1C0074E5C();
  uint64_t v72 = v17;
  uint64_t v45 = v11;
  sub_1C15206EC();
  long long v63 = v96;
  uint64_t v64 = v97;
  int v65 = v98;
  long long v62 = xmmword_1C1558040;
  long long v96 = xmmword_1C1558040;
  LOBYTE(v97) = 0;
  if (sub_1C152071C())
  {
    long long v90 = v62;
    LOBYTE(v91) = 0;
    sub_1C15206EC();
    uint64_t v46 = v85;
  }
  else
  {
    uint64_t v46 = 0;
  }
  long long v62 = xmmword_1C1558050;
  long long v96 = xmmword_1C1558050;
  LOBYTE(v97) = 0;
  if (sub_1C152071C())
  {
    long long v90 = v62;
    LOBYTE(v91) = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    unint64_t v47 = v85;
  }
  else
  {
    unint64_t v47 = 0x8000000000000000;
  }
  *(void *)&long long v62 = v47;
  long long v61 = xmmword_1C1533150;
  long long v96 = xmmword_1C1533150;
  LOBYTE(v97) = 0;
  if (sub_1C152071C())
  {
    long long v90 = v61;
    LOBYTE(v91) = 0;
    sub_1C15206EC();
    int v48 = v85;
  }
  else
  {
    int v48 = 1;
  }
  LODWORD(v61) = v48;
  long long v96 = xmmword_1C1558060;
  LOBYTE(v97) = 0;
  sub_1BFE3CF9C();
  sub_1C152065C();
  uint64_t v59 = v90;
  int v58 = BYTE8(v90);
  long long v60 = xmmword_1C1558000;
  long long v96 = xmmword_1C1558000;
  LOBYTE(v97) = 0;
  if (sub_1C152071C())
  {
    long long v90 = v60;
    LOBYTE(v91) = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    sub_1C15206EC();
    uint64_t v49 = v81;
    uint64_t v50 = v80;
    uint64_t v51 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v50, v49);
  }
  else
  {
    uint64_t v51 = MEMORY[0x1E4FBC870];
  }
  long long v96 = xmmword_1C1558070;
  LOBYTE(v97) = 0;
  uint64_t v52 = sub_1C152060C();
  uint64_t v81 = v53;
  uint64_t v54 = v52;
  long long v90 = xmmword_1C1558080;
  LOBYTE(v91) = 0;
  sub_1BFFC82FC();
  sub_1C152065C();
  char v55 = v97;
  long long v56 = v96;
  unint64_t v102 = v76;
  uint64_t v94 = v43;
  uint64_t v95 = v77;
  uint64_t v93 = v44;
  long long v96 = v66;
  uint64_t v97 = v67;
  uint64_t v98 = v68;
  uint64_t v99 = v69;
  uint64_t v100 = v70;
  unsigned __int8 v101 = v71;
  long long v90 = v63;
  uint64_t v91 = v64;
  char v92 = v65;
  uint64_t v89 = v62;
  uint64_t v87 = v59;
  char v88 = v58;
  long long v85 = v56;
  char v86 = v55;
  type metadata accessor for FormatVideoPlayerNode();
  swift_allocObject();
  uint64_t KeyPath = FormatVideoPlayerNode.init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(v74, (uint64_t)v78, (uint64_t *)&v102, &v95, v82, (uint64_t)v84, v42, &v94, &v93, v73, &v96, &v90, v46, &v89, v61, &v87, v51, v54, v81,
              (uint64_t *)&v85);
  (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v45, v72);
  __swift_destroy_boxed_opaque_existential_1(v75);
  return KeyPath;
}

uint64_t sub_1BFCA2E90(uint64_t a1, int *a2)
{
  v133 = a2;
  uint64_t v147 = a1;
  uint64_t v120 = sub_1C1517A9C();
  uint64_t v118 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v121 = (char *)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1C151794C();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v119 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t *))((char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v137 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v134 = (unint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCA4380(0, (unint64_t *)&unk_1EB85E330, (uint64_t (*)(void))sub_1BFCA44B0, (uint64_t)&type metadata for A6_V4.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v14 = (uint64_t *)((char *)&v118 - v13);
  uint64_t v148 = a1;
  uint64_t v15 = sub_1C151729C();
  uint64_t v16 = swift_allocBox();
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = *(void (**)(void))(v17 + 104);
  unsigned int v143 = *MEMORY[0x1E4FAB4E8];
  uint64_t v144 = v15;
  uint64_t v141 = v17 + 104;
  v142 = (void (*)(uint64_t, void, uint64_t))v18;
  v18(v19);
  *char v14 = v16;
  uint64_t v21 = v12 + 104;
  uint64_t v20 = *(void (**)(uint64_t *))(v12 + 104);
  unsigned int v140 = *MEMORY[0x1E4FAB940];
  v20(v14);
  uint64_t v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1BFCA442C(0, &qword_1EB85E2E0, MEMORY[0x1E4FAB4D0]);
  uint64_t v24 = v23;
  uint64_t v25 = sub_1BFCA43E8(&qword_1EB85E2D8, &qword_1EB85E2E0, v22);
  uint64_t v136 = v24;
  uint64_t v145 = v25;
  sub_1C151738C();
  uint64_t v26 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  uint64_t v138 = v12 + 8;
  v26(v14, v11);
  uint64_t v27 = v11;
  uint64_t v148 = v147;
  swift_getKeyPath();
  ((void (*)(uint64_t *, void, uint64_t))v20)(v14, *MEMORY[0x1E4FABA28], v11);
  unint64_t v139 = *((void *)v133 + 2);
  if (v139)
  {
    v146 = v20;
    uint64_t v135 = v21;
    uint64_t v131 = (uint64_t)v133
         + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80));
    sub_1BFF1AFA4(v131, v134, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v28 = (char *)v7 + v5[5];
    uint64_t v29 = *MEMORY[0x1E4FAB8C8];
    uint64_t v30 = sub_1C1517A7C();
    uint64_t v31 = *(void *)(v30 - 8);
    unint64_t v32 = *(void (**)(char *, void, uint64_t))(v31 + 104);
    unsigned int v128 = v29;
    uint64_t v127 = v31 + 104;
    uint64_t v125 = v32;
    v32(v28, v29, v30);
    uint64_t v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
    uint64_t v130 = v30;
    uint64_t v129 = v31 + 56;
    v126 = v33;
    v33(v28, 0, 1, v30);
    uint64_t v34 = (void **)MEMORY[0x1E4FB27D0];
    *(void *)uint64_t v7 = 0;
    *(void *)((char *)v7 + v5[6]) = 0;
    char v35 = *v34;
    v133 = v5;
    *(void *)((char *)v7 + v5[7]) = v35;
    uint64_t v36 = qword_1EB87CC48;
    id v124 = v35;
    uint64_t v20 = v7;
    if (v36 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_retain();
  uint64_t v37 = v119;
  sub_1C151709C();
  uint64_t v38 = swift_release();
  __n128 v39 = MEMORY[0x1F4188790](v38);
  uint64_t v40 = v134;
  *(&v118 - 4) = v134;
  *(&v118 - 3) = (uint64_t)v20;
  unint64_t v117 = (unint64_t)v37;
  (*(void (**)(char *, void, uint64_t, __n128))(v118 + 104))(v121, *MEMORY[0x1E4FAB8F8], v120, v39);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v37, v123);
  sub_1BFF1F104((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104(v40, type metadata accessor for HeadlineViewLayout.Context);
  unint64_t v134 = sub_1BFD5DED4();
  unint64_t v117 = v134;
  sub_1C151735C();
  swift_release();
  swift_release();
  v26(v14, v27);
  uint64_t v148 = v147;
  uint64_t v41 = v144;
  uint64_t v42 = swift_allocBox();
  v142(v43, v143, v41);
  *char v14 = v42;
  ((void (*)(uint64_t *, void, uint64_t))v146)(v14, v140, v27);
  sub_1C151738C();
  v26(v14, v27);
  v132 = v26;
  if (v139 >= 2)
  {
    uint64_t v148 = v147;
    swift_getKeyPath();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = 0x4060200000000000;
    *char v14 = v44;
    ((void (*)(uint64_t *, void, uint64_t))v146)(v14, *MEMORY[0x1E4FAB958], v27);
    sub_1BFCA42F0();
    sub_1BFCA4380(0, &qword_1EB85E2F0, (uint64_t (*)(void))sub_1BFCA44B0, (uint64_t)&type metadata for A6_V4.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v46 = *(void *)(v45 - 8);
    unint64_t v47 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1C1529AE0;
    uint64_t v49 = (void *)(v48 + v47);
    uint64_t v26 = v132;
    *uint64_t v49 = 0x4058C00000000000;
    (*(void (**)(void))(v46 + 104))();
    uint64_t v50 = v131 + *(void *)(v137 + 72);
    uint64_t v51 = v133;
    uint64_t v52 = (char *)v20 + v133[5];
    uint64_t v53 = v130;
    v125(v52, v128, v130);
    v126(v52, 0, 1, v53);
    *(void *)uint64_t v20 = 0;
    *(void *)((char *)v20 + v51[6]) = 0;
    uint64_t v54 = v124;
    *(void *)((char *)v20 + v51[7]) = v124;
    double v55 = *MEMORY[0x1E4FB2848];
    double v56 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v57 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v58 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v59 = v54;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v50, (uint64_t)v20, v55, v56, v57, v58);
    sub_1BFF1F104((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    unint64_t v117 = v134;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v26(v14, v27);
  }
  uint64_t v148 = v147;
  uint64_t v60 = v144;
  uint64_t v61 = swift_allocBox();
  v142(v62, v143, v60);
  *char v14 = v61;
  ((void (*)(uint64_t *, void, uint64_t))v146)(v14, v140, v27);
  sub_1C151738C();
  v26(v14, v27);
  if (v139 >= 3)
  {
    uint64_t v148 = v147;
    swift_getKeyPath();
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = 0x4060200000000000;
    *char v14 = v63;
    ((void (*)(uint64_t *, void, uint64_t))v146)(v14, *MEMORY[0x1E4FAB958], v27);
    sub_1BFCA42F0();
    sub_1BFCA4380(0, &qword_1EB85E2F0, (uint64_t (*)(void))sub_1BFCA44B0, (uint64_t)&type metadata for A6_V4.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v65 = *(void *)(v64 - 8);
    unint64_t v66 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1C1529AE0;
    uint64_t v68 = (void *)(v67 + v66);
    uint64_t v26 = v132;
    *uint64_t v68 = 0x4058C00000000000;
    (*(void (**)(void))(v65 + 104))();
    uint64_t v69 = v131 + 2 * *(void *)(v137 + 72);
    uint64_t v70 = v133;
    int v71 = (char *)v20 + v133[5];
    uint64_t v72 = v130;
    v125(v71, v128, v130);
    v126(v71, 0, 1, v72);
    *(void *)uint64_t v20 = 0;
    *(void *)((char *)v20 + v70[6]) = 0;
    uint64_t v73 = v124;
    *(void *)((char *)v20 + v70[7]) = v124;
    double v74 = *MEMORY[0x1E4FB2848];
    double v75 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v76 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v77 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v78 = v73;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v69, (uint64_t)v20, v74, v75, v76, v77);
    sub_1BFF1F104((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    unint64_t v117 = v134;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v26(v14, v27);
  }
  uint64_t v148 = v147;
  uint64_t v79 = v144;
  uint64_t v80 = swift_allocBox();
  v142(v81, v143, v79);
  *char v14 = v80;
  ((void (*)(uint64_t *, void, uint64_t))v146)(v14, v140, v27);
  sub_1C151738C();
  v26(v14, v27);
  if (v139 >= 4)
  {
    uint64_t v148 = v147;
    swift_getKeyPath();
    uint64_t v82 = swift_allocObject();
    *(void *)(v82 + 16) = 0x4060200000000000;
    *char v14 = v82;
    ((void (*)(uint64_t *, void, uint64_t))v146)(v14, *MEMORY[0x1E4FAB958], v27);
    sub_1BFCA42F0();
    sub_1BFCA4380(0, &qword_1EB85E2F0, (uint64_t (*)(void))sub_1BFCA44B0, (uint64_t)&type metadata for A6_V4.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v84 = *(void *)(v83 - 8);
    unint64_t v85 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    uint64_t v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_1C1529AE0;
    uint64_t v87 = (void *)(v86 + v85);
    uint64_t v26 = v132;
    void *v87 = 0x4058C00000000000;
    (*(void (**)(void))(v84 + 104))();
    uint64_t v88 = v131 + 3 * *(void *)(v137 + 72);
    uint64_t v89 = v133;
    long long v90 = (char *)v20 + v133[5];
    uint64_t v91 = v130;
    v125(v90, v128, v130);
    v126(v90, 0, 1, v91);
    *(void *)uint64_t v20 = 0;
    *(void *)((char *)v20 + v89[6]) = 0;
    char v92 = v124;
    *(void *)((char *)v20 + v89[7]) = v124;
    double v93 = *MEMORY[0x1E4FB2848];
    double v94 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v95 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v96 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v97 = v92;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v88, (uint64_t)v20, v93, v94, v95, v96);
    sub_1BFF1F104((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    unint64_t v117 = v134;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v26(v14, v27);
  }
  uint64_t v148 = v147;
  uint64_t v98 = v144;
  uint64_t v99 = swift_allocBox();
  v142(v100, v143, v98);
  *char v14 = v99;
  ((void (*)(uint64_t *, void, uint64_t))v146)(v14, v140, v27);
  sub_1C151738C();
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v26)(v14, v27);
  if (v139 >= 5)
  {
    uint64_t v148 = v147;
    swift_getKeyPath();
    uint64_t v102 = swift_allocObject();
    *(void *)(v102 + 16) = 0x4060200000000000;
    *char v14 = v102;
    ((void (*)(uint64_t *, void, uint64_t))v146)(v14, *MEMORY[0x1E4FAB958], v27);
    sub_1BFCA42F0();
    sub_1BFCA4380(0, &qword_1EB85E2F0, (uint64_t (*)(void))sub_1BFCA44B0, (uint64_t)&type metadata for A6_V4.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v104 = *(void *)(v103 - 8);
    unint64_t v105 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    uint64_t v106 = swift_allocObject();
    *(_OWORD *)(v106 + 16) = xmmword_1C1529AE0;
    *(void *)(v106 + v105) = 0x4058C00000000000;
    (*(void (**)(void))(v104 + 104))();
    uint64_t v107 = v131 + 4 * *(void *)(v137 + 72);
    CGRect v108 = v133;
    CGRect v109 = (char *)v20 + v133[5];
    uint64_t v110 = v130;
    v125(v109, v128, v130);
    v126(v109, 0, 1, v110);
    *(void *)uint64_t v20 = 0;
    *(void *)((char *)v20 + v108[6]) = 0;
    CGRect v111 = v124;
    *(void *)((char *)v20 + v108[7]) = v124;
    double v112 = *MEMORY[0x1E4FB2848];
    double v113 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v114 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v115 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v116 = v111;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v107, (uint64_t)v20, v112, v113, v114, v115);
    sub_1BFF1F104((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    unint64_t v117 = v134;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return ((uint64_t (*)(uint64_t *, uint64_t))v132)(v14, v27);
  }
  return result;
}

void sub_1BFCA42F0()
{
  if (!qword_1EB85E498)
  {
    sub_1BFCA4380(255, &qword_1EB85E2F0, (uint64_t (*)(void))sub_1BFCA44B0, (uint64_t)&type metadata for A6_V4.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E498);
    }
  }
}

void sub_1BFCA4380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1BFCA43E8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFCA442C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFCA442C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A6_V4.Layout;
    v8[1] = &type metadata for A6_V4.Layout.Attributes;
    v8[2] = sub_1BFCA44B0();
    v8[3] = sub_1BFCA4504();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1BFCA44B0()
{
  unint64_t result = qword_1EB85E470;
  if (!qword_1EB85E470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E470);
  }
  return result;
}

unint64_t sub_1BFCA4504()
{
  unint64_t result = qword_1EB85E458;
  if (!qword_1EB85E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E458);
  }
  return result;
}

uint64_t sub_1BFCA4558()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BFCA4580@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FeedGroupFreezing.init(from:)(a1, a2);
}

uint64_t FeedGroupFreezing.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v13 = a2;
  sub_1BFC9811C(0, &qword_1EB85E070, (uint64_t (*)(void))sub_1BFCA47AC, (uint64_t)&type metadata for FeedGroupFreezing.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCA47AC();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    unint64_t v10 = v13;
    char v16 = 0;
    sub_1BFCA4854();
    sub_1C15206EC();
    char v14 = 1;
    sub_1BFCA4800();
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    *unint64_t v10 = (v15 == 2) | v15 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCA47AC()
{
  unint64_t result = qword_1EB85CAF0;
  if (!qword_1EB85CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CAF0);
  }
  return result;
}

unint64_t sub_1BFCA4800()
{
  unint64_t result = qword_1EB85CC48;
  if (!qword_1EB85CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CC48);
  }
  return result;
}

unint64_t sub_1BFCA4854()
{
  unint64_t result = qword_1EB85CB10;
  if (!qword_1EB85CB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CB10);
  }
  return result;
}

uint64_t sub_1BFCA48A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFCA48D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFCA48D8()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFCA492C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFCA495C();
  *a1 = result;
  return result;
}

uint64_t sub_1BFCA495C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

void FeedEditionConfig.fetchWindow(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v108 = sub_1C151653C();
  uint64_t v4 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v107 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1C151654C();
  v133 = *(void (**)(char *, uint64_t))(v106 - 8);
  MEMORY[0x1F4188790](v106);
  unint64_t v105 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1C15164FC();
  v132 = *(char **)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v103 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA444(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  double v113 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v89 = (char *)&v88 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v88 = (char *)&v88 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v102 = (uint64_t)&v88 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v114 = (uint64_t)&v88 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v88 - v19;
  uint64_t v21 = sub_1C151631C();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  unsigned __int8 v101 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v88 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v88 - v28;
  uint64_t v138 = sub_1C15165FC();
  uint64_t v30 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v137 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1C151661C();
  MEMORY[0x1F4188790](v140);
  CGRect v111 = (char *)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v35 = MEMORY[0x1F4188790](v33);
  uint64_t v136 = (char *)&v88 - v36;
  uint64_t v37 = *v2;
  uint64_t v124 = *(void *)(*v2 + 16);
  if (!v124) {
    goto LABEL_39;
  }
  uint64_t v118 = v20;
  uint64_t v119 = v29;
  uint64_t v121 = v21;
  uint64_t v123 = v37 + 32;
  unsigned int v127 = *MEMORY[0x1E4F27C68];
  uint64_t v135 = (char **)(v30 + 104);
  unint64_t v134 = (void (**)(char *, uint64_t))(v30 + 8);
  unint64_t v139 = (void (**)(char *, uint64_t))(v34 + 8);
  unsigned int v126 = *MEMORY[0x1E4F27C10];
  id v116 = (_OWORD *)((char *)v142 + 8);
  double v115 = &v146[16];
  CGRect v109 = v146;
  uint64_t v99 = (void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  unint64_t v117 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  uint64_t v100 = v22;
  double v112 = (void (**)(char *, uint64_t, uint64_t))(v22 + 32);
  unsigned int v98 = *MEMORY[0x1E4F27B68];
  id v97 = (void (**)(char *, void, uint64_t))(v132 + 104);
  unsigned int v96 = *MEMORY[0x1E4F27BA8];
  double v95 = (void (**)(char *, void, uint64_t))((char *)v133 + 104);
  unsigned int v94 = *MEMORY[0x1E4F27B80];
  double v93 = (void (**)(char *, void, uint64_t))(v4 + 104);
  char v92 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v91 = (void (**)(char *, uint64_t))((char *)v133 + 8);
  long long v90 = (void (**)(char *, uint64_t))(v132 + 8);
  swift_bridgeObjectRetain();
  unint64_t v38 = 0;
  uint64_t v141 = a1;
  uint64_t v122 = v37;
  uint64_t v110 = v26;
  uint64_t v120 = (void (**)(char *, uint64_t))(v22 + 8);
  while (1)
  {
    if (v38 >= *(void *)(v37 + 16))
    {
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v39 = v123 + 72 * v38;
    v142[0] = *(_OWORD *)v39;
    long long v40 = *(_OWORD *)(v39 + 16);
    long long v41 = *(_OWORD *)(v39 + 32);
    long long v42 = *(_OWORD *)(v39 + 48);
    char v143 = *(unsigned char *)(v39 + 64);
    v142[3] = v42;
    v142[2] = v41;
    v142[1] = v40;
    uint64_t v43 = *(void *)(*(void *)&v142[0] + 16);
    if (v43) {
      break;
    }
LABEL_5:
    if (++v38 == v124)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v121;
      uint64_t v22 = v100;
LABEL_39:
      uint64_t v79 = v113;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16))(v113, a1, v21, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v79, 0, 1, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v79, 1, v21) == 1)
      {
        uint64_t v80 = 0;
      }
      else
      {
        uint64_t v81 = v22;
        uint64_t v80 = (void *)sub_1C151621C();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v21);
      }
      id v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E380]), sel_initWithStartDate_timeInterval_, v80, 86400.0);

      if (v82) {
        return;
      }
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
  }
  unint64_t v125 = v38;
  uint64_t v44 = swift_bridgeObjectRetain() + 48;
  while (1)
  {
    uint64_t v45 = *(void *)(v44 - 16);
    uint64_t v46 = *(void *)v44;
    int v47 = *(unsigned __int8 *)(v44 + 8);
    uint64_t v129 = *(void *)(v44 + 16);
    int v131 = *(unsigned __int8 *)(v44 + 24);
    uint64_t v128 = *(void *)(v44 + 32);
    int v130 = *(unsigned __int8 *)(v44 + 40);
    int v48 = *(unsigned __int8 *)(v44 - 8);
    uint64_t v49 = v136;
    sub_1C15165BC();
    uint64_t v50 = v137;
    uint64_t v51 = v138;
    v132 = *v135;
    ((void (*)(char *, void, uint64_t))v132)(v137, v127, v138);
    uint64_t v52 = sub_1C151660C();
    v133 = *v134;
    v133(v50, v51);
    uint64_t v53 = *v139;
    (*v139)(v49, v140);
    if (v48 == 1)
    {
      if (v52 < 1) {
        goto LABEL_10;
      }
    }
    else if (v52 < v45)
    {
      goto LABEL_10;
    }
    if (v47)
    {
      if (v52 > 7) {
        goto LABEL_10;
      }
    }
    else if (v46 < v52)
    {
      goto LABEL_10;
    }
    uint64_t v54 = v136;
    sub_1C15165BC();
    double v55 = v137;
    uint64_t v56 = v138;
    ((void (*)(char *, void, uint64_t))v132)(v137, v126, v138);
    uint64_t v57 = sub_1C151660C();
    v133(v55, v56);
    v53(v54, v140);
    if (v131)
    {
      if (v57 < 0) {
        goto LABEL_10;
      }
    }
    else if (v57 < v129)
    {
      goto LABEL_10;
    }
    if (!v130)
    {
      if (v128 >= v57) {
        break;
      }
      goto LABEL_10;
    }
    if (v57 <= 23) {
      break;
    }
LABEL_10:
    v44 += 64;
    if (!--v43)
    {
      a1 = v141;
      sub_1BFCA59C8((uint64_t)v142);
      uint64_t v37 = v122;
LABEL_4:
      unint64_t v38 = v125;
      goto LABEL_5;
    }
  }
  long long v58 = v116[1];
  long long v144 = *v116;
  long long v145 = v58;
  *(_OWORD *)v146 = v116[2];
  *(_OWORD *)&v146[9] = *(long long *)((char *)v116 + 41);
  sub_1BFCA59F4((uint64_t)v115, (uint64_t)v148);
  sub_1BFCA59F4((uint64_t)v148, (uint64_t)&v149);
  if (v150)
  {
    v133 = v53;
    uint64_t v59 = v114;
    uint64_t v60 = v141;
    sub_1C14F16EC((uint64_t)v142, v141, v114);
    sub_1BFCA59F4((uint64_t)v109, (uint64_t)v147);
    sub_1BFCA59F4((uint64_t)v147, (uint64_t)&v151);
    uint64_t v61 = v121;
    uint64_t v62 = v119;
    uint64_t v63 = (uint64_t)v118;
    uint64_t v64 = v110;
    if (v152)
    {
      sub_1BFCB311C(v59, (uint64_t)v118);
      goto LABEL_29;
    }
    v132 = v151;
    sub_1C15165BC();
    uint64_t v69 = v102;
    sub_1BFF97B80(v59, v102);
    uint64_t v70 = v101;
    (*v99)(v101, v60, v61);
    if ((*v117)(v69, 1, v61) == 1)
    {
      (*v112)(v64, (uint64_t)v70, v61);
      sub_1BFF97BE4(v69);
    }
    else
    {
      (*v120)(v70, v61);
      (*v112)(v64, v69, v61);
    }
    int v71 = v103;
    uint64_t v72 = v104;
    (*v97)(v103, v98, v104);
    uint64_t v73 = v105;
    uint64_t v74 = v106;
    (*v95)(v105, v96, v106);
    double v75 = v107;
    uint64_t v76 = v108;
    (*v93)(v107, v94, v108);
    uint64_t v63 = (uint64_t)v118;
    double v77 = v111;
    sub_1C151656C();
    (*v92)(v75, v76);
    (*v91)(v73, v74);
    (*v90)(v71, v72);
    uint64_t v68 = v120;
    (*v120)(v64, v61);
    v133(v77, v140);
    sub_1BFF97BE4(v114);
    uint64_t v62 = v119;
  }
  else
  {
    uint64_t v65 = v136;
    sub_1C15165BC();
    unint64_t v66 = v137;
    uint64_t v67 = v138;
    ((void (*)(char *, void, uint64_t))v132)(v137, v126, v138);
    uint64_t v63 = (uint64_t)v118;
    sub_1C151659C();
    v133(v66, v67);
    v53(v65, v140);
    uint64_t v61 = v121;
    uint64_t v62 = v119;
LABEL_29:
    uint64_t v68 = v120;
  }
  sub_1BFCA59C8((uint64_t)v142);
  unsigned int v78 = (*v117)(v63, 1, v61);
  uint64_t v37 = v122;
  if (v78 == 1)
  {
    sub_1BFF97BE4(v63);
    a1 = v141;
    goto LABEL_4;
  }
  (*v112)(v62, v63, v61);
  a1 = v141;
  if ((sub_1C151623C() & 1) == 0)
  {
    (*v68)(v62, v61);
    goto LABEL_4;
  }
  sub_1BFC3B8A0();
  uint64_t v83 = v100;
  uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
  uint64_t v85 = (uint64_t)v88;
  v84(v88, a1, v61);
  uint64_t v86 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56);
  v86(v85, 0, 1, v61);
  uint64_t v87 = (uint64_t)v89;
  v84(v89, (uint64_t)v62, v61);
  v86(v87, 0, 1, v61);
  if (sub_1BFC5DA98(v85, v87))
  {
    (*v120)(v62, v61);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_48:
  __break(1u);
}

uint64_t sub_1BFCA59C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFCA59F4(uint64_t a1, uint64_t a2)
{
  sub_1BFCA5A7C(0, &qword_1EB87A090, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BFCA5A7C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFCA5AC8(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    unint64_t v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 12) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C157E530;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 12)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BFCA5D88()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BFCA5DB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  uint64_t v4 = sub_1C151C1FC();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1BFCA5E30()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FeedScaling.scale(value:scaleValue:)()
{
  return sub_1C151793C();
}

uint64_t sub_1BFCA5EBC()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCA5F0C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCA5F6C()
{
  unint64_t result = qword_1EB878590;
  if (!qword_1EB878590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878590);
  }
  return result;
}

void *sub_1BFCA5FC0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  int v10 = *(_DWORD *)(v5 + 80);
  if ((v10 & 0x1000F8) != 0 || v9 + 1 > 0x18)
  {
    uint64_t v12 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v12 + ((unsigned __int16)((v10 & 0xF8) + 23) & (unsigned __int16)~(v10 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v13 = a2[v9];
    unsigned int v14 = v13 - 7;
    if (v13 >= 7)
    {
      if (v9 <= 3) {
        uint64_t v15 = v9;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_24;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_24;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_24;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_24:
          int v17 = (v16 | (v14 << (8 * v9))) + 7;
          unsigned int v13 = v16 + 7;
          if (v9 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v18 = v8 + 1;
    switch(v13)
    {
      case 1u:
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        unint64_t v22 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v23 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v24 = *(void *)(v23 + 24);
        if (v24 < 0xFFFFFFFF)
        {
          long long v35 = *(_OWORD *)(v23 + 16);
          *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
          *(_OWORD *)(v22 + 16) = v35;
        }
        else
        {
          *(void *)(v22 + 24) = v24;
          (**(void (***)(void))(v24 - 8))();
        }
        char v25 = 1;
        goto LABEL_61;
      case 2u:
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        char v25 = 2;
        goto LABEL_61;
      case 3u:
        uint64_t v26 = *((void *)a2 + 1);
        *uint64_t v4 = *(void *)a2;
        v4[1] = v26;
        char v27 = 3;
        goto LABEL_36;
      case 4u:
        uint64_t v28 = *((void *)a2 + 1);
        *uint64_t v4 = *(void *)a2;
        v4[1] = v28;
        char v27 = 4;
        goto LABEL_36;
      case 5u:
        uint64_t v29 = *((void *)a2 + 1);
        *uint64_t v4 = *(void *)a2;
        v4[1] = v29;
        char v27 = 5;
LABEL_36:
        *((unsigned char *)v4 + v9) = v27;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v30 = a2[v8];
        unsigned int v31 = v30 - 3;
        if (v30 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v32 = v8;
          }
          else {
            uint64_t v32 = 4;
          }
          switch(v32)
          {
            case 1:
              int v33 = *a2;
              goto LABEL_49;
            case 2:
              int v33 = *(unsigned __int16 *)a2;
              goto LABEL_49;
            case 3:
              int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_49;
            case 4:
              int v33 = *(_DWORD *)a2;
LABEL_49:
              if (v8 < 4) {
                unsigned int v30 = (v33 | (v31 << (8 * v8))) + 3;
              }
              else {
                unsigned int v30 = v33 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v30 == 2)
        {
          uint64_t v36 = *((void *)a2 + 1);
          *uint64_t v4 = *(void *)a2;
          v4[1] = v36;
          *((unsigned char *)v4 + v8) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v30 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
          *((unsigned char *)v4 + v8) = 1;
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
          unint64_t v37 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v38 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v39 = *(void *)(v38 + 24);
          if (v39 < 0xFFFFFFFF)
          {
            long long v40 = *(_OWORD *)(v38 + 16);
            *(_OWORD *)unint64_t v37 = *(_OWORD *)v38;
            *(_OWORD *)(v37 + 16) = v40;
          }
          else
          {
            *(void *)(v37 + 24) = v39;
            (**(void (***)(void))(v39 - 8))();
          }
          *((unsigned char *)v4 + v8) = 0;
        }
        unint64_t v41 = ((unint64_t)v4 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v42 = (unint64_t)&a2[v18 + 7] & 0xFFFFFFFFFFFFFFF8;
        uint64_t v43 = *(void *)(v42 + 24);
        *(void *)(v41 + 24) = v43;
        *(void *)(v41 + 32) = *(void *)(v42 + 32);
        (**(void (***)(void))(v43 - 8))();
        char v25 = 6;
LABEL_61:
        *((unsigned char *)v4 + v9) = v25;
        break;
      default:
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        unint64_t v19 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v20 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v21 = *(void *)(v20 + 24);
        if (v21 < 0xFFFFFFFF)
        {
          long long v34 = *(_OWORD *)(v20 + 16);
          *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
          *(_OWORD *)(v19 + 16) = v34;
        }
        else
        {
          *(void *)(v19 + 24) = v21;
          (**(void (***)(void))(v21 - 8))();
        }
        *((unsigned char *)v4 + v9) = 0;
        break;
    }
  }
  return v4;
}

__n128 FormatPrefetchContext.init(inventory:config:tag:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *a2;
  char v8 = a2[1];
  long long v14 = *(_OWORD *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 8);
  __n128 v12 = *(__n128 *)(a2 + 56);
  long long v13 = *(_OWORD *)(a2 + 40);
  uint64_t v9 = *((void *)a2 + 9);
  sub_1BFCA6510();
  swift_retain();
  uint64_t v10 = sub_1C1517F1C();
  *(void *)a4 = a1;
  *(unsigned char *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 9) = v8;
  *(_OWORD *)(a4 + 16) = v15;
  *(_OWORD *)(a4 + 32) = v14;
  __n128 result = v12;
  *(_OWORD *)(a4 + 48) = v13;
  *(__n128 *)(a4 + 64) = v12;
  *(void *)(a4 + 80) = v9;
  *(void *)(a4 + 88) = a3;
  *(void *)(a4 + 96) = v10;
  return result;
}

void sub_1BFCA6510()
{
  if (!qword_1EB87C700)
  {
    type metadata accessor for FormatContextLayoutOptions();
    unint64_t v0 = sub_1C1517F2C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C700);
    }
  }
}

uint64_t sub_1BFCA6568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = v5 + *(int *)(v7 + 20);
  uint64_t v9 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v5 + *(int *)(v7 + 24);
  if (*(void *)(v10 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v10 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v13 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCA670C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = sub_1BFFFABA8(v3, v4);
  *a2 = -(uint64_t)v6;
  return result;
}

uint64_t FeedGroupBindingOptions.init(formatFeedGroup:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for FormatFeedGroup();
  uint64_t v5 = v4[13];
  uint64_t v6 = a1 + v4[12];
  uint64_t v7 = *(void *)v6;
  int v8 = *(unsigned __int8 *)(v6 + 8);
  uint64_t v9 = v4[15];
  uint64_t v10 = a1 + v4[14];
  uint64_t v11 = *(void *)v10;
  if (v8) {
    uint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v12 = v7;
  }
  char v13 = *(unsigned char *)(v10 + 8);
  if (v12 < 0) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v11;
  }
  if (v12 < 0) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v7;
  }
  if (v12 < 0) {
    char v16 = 1;
  }
  else {
    char v16 = v8;
  }
  BOOL v17 = v12 < v11;
  if (v12 >= v11)
  {
    char v18 = 0;
  }
  else
  {
    uint64_t v11 = 0;
    LOBYTE(v8) = 1;
    char v18 = 1;
  }
  if (v17) {
    uint64_t v7 = 0;
  }
  if (v13) {
    uint64_t v19 = v14;
  }
  else {
    uint64_t v19 = v11;
  }
  if (v13) {
    char v20 = 1;
  }
  else {
    char v20 = v18;
  }
  if (v13) {
    uint64_t v7 = v15;
  }
  uint64_t v29 = v7;
  if (v13) {
    char v21 = v16;
  }
  else {
    char v21 = v8;
  }
  uint64_t v22 = *(void *)(a1 + v5);
  int v23 = *(unsigned __int8 *)(a1 + v5 + 8);
  uint64_t v24 = *(void *)(a1 + v9);
  char v25 = *(unsigned char *)(a1 + v9 + 8);
  uint64_t result = sub_1BFCA68B4(a1);
  if (v23) {
    uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v27 = v22;
  }
  if ((v25 & 1) == 0)
  {
    if (v27 >= v24)
    {
      char v28 = 0;
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  if (v27 < 0)
  {
LABEL_36:
    uint64_t v24 = 0;
    uint64_t v22 = 0;
    char v28 = 1;
    LOBYTE(v23) = 1;
    goto LABEL_38;
  }
  char v28 = 1;
LABEL_38:
  *(void *)a2 = v29;
  *(unsigned char *)(a2 + 8) = v21;
  *(void *)(a2 + 16) = v19;
  *(unsigned char *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v22;
  *(unsigned char *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v24;
  *(unsigned char *)(a2 + 56) = v28;
  return result;
}

uint64_t sub_1BFCA68B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatIssueCoverNodeStyle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v72 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v71 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (char *)&v71 - v10;
  MEMORY[0x1F4188790](v11);
  double v75 = (char *)&v71 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v76 = (char *)&v71 - v14;
  MEMORY[0x1F4188790](v15);
  double v77 = (char *)&v71 - v16;
  MEMORY[0x1F4188790](v17);
  unsigned int v78 = (char *)&v71 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v79 = (void (*)(char *, uint64_t, char *))((char *)&v71 - v20);
  MEMORY[0x1F4188790](v21);
  int v23 = (char *)&v71 - v22;
  sub_1C086A614();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1C086A73C();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1C085F050(&qword_1EB86CE08, (void (*)(uint64_t))sub_1C086A73C);
  sub_1BFEFBD78(v4, v32, v28, v4, v30, (uint64_t)&type metadata for FormatVersions.StarSky, v27, (uint64_t)v26, v31, (uint64_t)&off_1F1C39BA8);
  swift_beginAccess();
  uint64_t v33 = v2[2];
  uint64_t v34 = v2[3];
  uint64_t v80 = v2;
  uint64_t v35 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C151928C();
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CA98);
  uint64_t v38 = *(void *)(v36 - 8);
  unint64_t v39 = *(void (**)(char *))(v38 + 16);
  uint64_t v40 = v38 + 16;
  uint64_t v81 = v37;
  v39(v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v83;
  sub_1C06CC0D4(v33, v34, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1C01B158C, 0);
  if (v41)
  {
    uint64_t v42 = (uint64_t)v26;
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v43 = v80[4];
    uint64_t v44 = v80[5];
    uint64_t v45 = (uint64_t)v79;
    ((void (*)(void, uint64_t, uint64_t))v39)(v79, v81, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v46 = v43;
    uint64_t v42 = (uint64_t)v26;
    sub_1C06B0A48(v46, v44, 1, 0, 0, v45, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v47 = (uint64_t)v78;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v78, v81, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = swift_bridgeObjectRetain();
    sub_1C06CC314(v48, 2, 0, 0);
    uint64_t v49 = (char *)v39;
    uint64_t v83 = v40;
    uint64_t v50 = v81;
    uint64_t v51 = v49;
    sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v52 = (uint64_t)v77;
    unsigned int v78 = (char *)v36;
    uint64_t v79 = (void (*)(char *, uint64_t, char *))v51;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v77, v50, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = swift_bridgeObjectRetain();
    sub_1C06F2E0C(v53, 3, 0, 0, v52, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v52, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    double v55 = v80;
    uint64_t v56 = (uint64_t)v76;
    v79(v76, v81, v78);
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = swift_bridgeObjectRetain();
    sub_1C06F3084(v57, 4, 0, 0, v56, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v58 = v55[9];
    uint64_t v59 = v55[10];
    LOBYTE(v44) = *((unsigned char *)v55 + 88);
    uint64_t v60 = (uint64_t)v75;
    v79(v75, v81, v78);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF6828(v58, v59, v44);
    sub_1C06F32E8(v58, v59, v44, 5, 0, 0, v60, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v60, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68AC(v58, v59, v44);
    sub_1BFE99AAC((uint64_t)(v55 + 12), (uint64_t)v82, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
    uint64_t v61 = (uint64_t)v74;
    v79(v74, v81, v78);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C06F355C((uint64_t)v82, 6, 0, 0, v61, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v62 = (uint64_t)v78;
    double v77 = 0;
    uint64_t v63 = (void (*)(char *, uint64_t, uint64_t))v79;
    unsigned __int8 v64 = *((unsigned char *)v55 + 177);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v65 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CA08);
    uint64_t v66 = (uint64_t)v73;
    v63(v73, v65, v62);
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v77;
    sub_1C06F3890(v64, 7, 0, 0, v66, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
    uint64_t v68 = v81;
    if (!v67)
    {
      swift_beginAccess();
      uint64_t v69 = (uint64_t)v72;
      v63(v72, v68, v62);
      swift_storeEnumTagMultiPayload();
      uint64_t v70 = swift_bridgeObjectRetain();
      sub_1C06CC478(v70, 8, 0, 0);
      sub_1BFEFEB68(v69, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
    }
  }
  return sub_1BFEFEB68(v42, (uint64_t (*)(void))sub_1C086A614);
}

uint64_t sub_1BFCA73A0(void *a1)
{
  return FormatBindExpression.encode(to:)(a1);
}

uint64_t sub_1BFCA73B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCustomFont.init(from:)(a1, a2);
}

uint64_t FormatCustomFont.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C086899C();
  uint64_t v7 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0868A30();
  sub_1C085F050(&qword_1EA19D388, (void (*)(uint64_t))sub_1C0868A30);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v32;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      *(void *)&long long v31 = *((void *)v16 - 2);
      uint64_t v22 = v12;
      uint64_t v23 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      *((void *)&v31 - 4) = &_s10CodingKeysON_233;
      *((void *)&v31 - 3) = sub_1C0868AB4();
      *((void *)&v31 - 2) = sub_1BFFFA9C4();
      *((void *)&v31 - 1) = sub_1C0868B08();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B81910);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v26 = v31;
      *(void *)uint64_t v27 = v31;
      *(void *)(v27 + 8) = v23;
      *(void *)(v27 + 16) = v25;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v23, 1);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v7);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v37 = 0uLL;
  char v38 = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v19 = v18;
  long long v31 = xmmword_1C153AB20;
  long long v37 = xmmword_1C153AB20;
  char v38 = 0;
  double v20 = 16.0;
  if (sub_1C152071C())
  {
    long long v35 = v31;
    char v36 = 0;
    sub_1BFE7E344();
    sub_1C15206EC();
    double v20 = v33;
  }
  long long v31 = xmmword_1C1557FA0;
  long long v37 = xmmword_1C1557FA0;
  char v38 = 0;
  if (sub_1C152071C())
  {
    long long v35 = v31;
    char v36 = 0;
    sub_1BFDEE468();
    sub_1C15206EC();
    uint64_t v28 = v12;
    double v29 = v33;
    __int16 v30 = v34;
  }
  else
  {
    uint64_t v28 = v12;
    double v29 = 0.0;
    __int16 v30 = 3072;
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v7);
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v19;
  *(double *)(a2 + 16) = v20;
  *(double *)(a2 + 24) = v29;
  *(_WORD *)(a2 + 32) = v30;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFCA783C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t FormatVideoPlayerNodeStyle.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v69 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v70 = (char *)&v69 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)&v69 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v73 = (char *)&v69 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v74 = (char *)&v69 - v16;
  MEMORY[0x1F4188790](v17);
  double v75 = (char *)&v69 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v76 = (uint64_t (*)(uint64_t))((char *)&v69 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v69 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v69 - v25;
  sub_1C08C9D84();
  MEMORY[0x1F4188790](v27 - 8);
  double v29 = (char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1[3];
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_1C08C9EAC();
  uint64_t v33 = v32;
  uint64_t v34 = sub_1C085F050(&qword_1EB892250, (void (*)(uint64_t))sub_1C08C9EAC);
  sub_1BFEFBD78(v4, v35, v31, v4, v33, (uint64_t)&type metadata for FormatVersions.StarSkyC, v30, (uint64_t)v29, v34, (uint64_t)&off_1F1C39A28);
  swift_beginAccess();
  uint64_t v36 = v2[2];
  uint64_t v37 = v2[3];
  double v77 = v2;
  uint64_t v38 = qword_1EB887650;
  swift_bridgeObjectRetain();
  if (v38 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_1C151928C();
  uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB93CAE0);
  uint64_t v41 = *(void *)(v39 - 8);
  uint64_t v42 = *(void (**)(char *))(v41 + 16);
  uint64_t v43 = (char *)(v41 + 16);
  uint64_t v78 = v40;
  v42(v26);
  uint64_t v44 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v80;
  sub_1C06CAE18(v36, v37, 0, 0, 0, (uint64_t)v26, (uint64_t)sub_1C01B158C, 0);
  if (v45)
  {
    sub_1BFEFEB68((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v80 = v29;
    uint64_t v46 = v77;
    uint64_t v48 = v77[4];
    uint64_t v47 = v77[5];
    ((void (*)(char *, uint64_t, uint64_t))v42)(v23, v78, v39);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1C06AE380(v48, v47, 1, 0, 0, (uint64_t)v23, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v50 = v76;
    ((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t))v42)(v76, v78, v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = swift_bridgeObjectRetain();
    sub_1C06CB058(v51, 2, 0, 0);
    sub_1BFEFEB68((uint64_t)v50, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v52 = (uint64_t)v75;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v75, v78, v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = swift_bridgeObjectRetain();
    sub_1C06EEC54(v53, 3, 0, 0, v52, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v52, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v54 = v46;
    uint64_t v55 = v46[8];
    uint64_t v56 = (uint64_t)v74;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v74, v78, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF683C(v55);
    sub_1C06EEECC(v55, 4, 0, 0, v56, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v55);
    uint64_t v57 = (uint64_t)v73;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v73, v78, v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = swift_bridgeObjectRetain();
    sub_1C06EF124(v58, 5, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
    uint64_t v76 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v59 = v43;
    uint64_t v60 = v54[10];
    uint64_t v61 = v54[11];
    LOBYTE(v57) = *((unsigned char *)v54 + 96);
    uint64_t v62 = (uint64_t)v72;
    uint64_t v74 = v59;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v72, v78, v39);
    double v75 = (char *)v44;
    swift_storeEnumTagMultiPayload();
    sub_1BFEF6828(v60, v61, v57);
    sub_1C06EF388(v60, v61, v57, 6, 0, 0, v62, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v62, v76);
    sub_1BFEF68AC(v60, v61, v57);
    sub_1BFE99AAC((uint64_t)(v54 + 13), (uint64_t)v79, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
    uint64_t v63 = (uint64_t)v71;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v71, v78, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C06EF5FC((uint64_t)v79, 7, 0, 0, v63, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v64 = v54[24];
    uint64_t v65 = (uint64_t)v70;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v70, v78, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BFDC11A4(v64);
    sub_1C06EF930(v64, 8, 0, 0, v65, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v65, type metadata accessor for FormatVersionRequirement);
    double v29 = v80;
    sub_1BFDC11BC(v64);
    unsigned __int8 v66 = *((unsigned char *)v54 + 200);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v67 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB93CA08);
    uint64_t v68 = (uint64_t)v69;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v69, v67, v39);
    swift_storeEnumTagMultiPayload();
    sub_1C06EFB88(v66, 9, 0, 0, v68, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v68, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v29, (uint64_t (*)(void))sub_1C08C9D84);
}

NewsFeed::FormatAccessibilityTrait_optional __swiftcall FormatAccessibilityTrait.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void sub_1BFCA8508(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    char v5 = (void *)v4;
    if (a1)
    {
      uint64_t v6 = self;
      uint64_t v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1C0061EE0;
      aBlock[5] = v7;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C0061E74;
      aBlock[3] = &block_descriptor_99;
      uint64_t v8 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v6, sel_fetchMostFrequentLocationWithCompletion_, v8);
      _Block_release(v8);
    }
    else
    {
      if (qword_1EB882EE0 != -1) {
        swift_once();
      }
      id v9 = (id)qword_1EB93C808;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_retain();
      sub_1C1518EBC();
      swift_release();
      uint64_t v10 = (void *)aBlock[0];
      if (aBlock[0])
      {
        uint64_t v11 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = 0;
        *(void *)(v12 + 24) = v11;
        swift_retain();
        sub_1C151950C();

        swift_release();
        swift_release();
        char v5 = v10;
      }
    }
  }
}

uint64_t sub_1BFCA8744(void *a1)
{
  return FormatIssueBinding.Text.encode(to:)(a1);
}

uint64_t FormatIssueBinding.Text.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v49 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (char *)&v48 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v48 = (char *)&v48 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v48 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v48 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v48 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v48 - v20;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *v2;
  uint64_t v27 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  unint64_t v28 = sub_1BFEB6A24();
  uint64_t v51 = v24;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatIssueBinding.Text, v29, v27, (uint64_t)&type metadata for FormatIssueBinding.Text, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v26, (uint64_t)v24, v28, (uint64_t)&off_1F1C39B08);
  switch(v25)
  {
    case 1:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v18, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = (uint64_t)v51;
      sub_1BFCA8EB4(1, (uint64_t)v18);
      uint64_t v36 = (uint64_t)v18;
      goto LABEL_24;
    case 2:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1C151928C();
      uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v15, v38, v37);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = (uint64_t)v51;
      sub_1BFCA8EB4(2, (uint64_t)v15);
      uint64_t v36 = (uint64_t)v15;
      goto LABEL_24;
    case 3:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1C151928C();
      uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v12, v40, v39);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = (uint64_t)v51;
      sub_1BFCA8EB4(3, (uint64_t)v12);
      uint64_t v36 = (uint64_t)v12;
      goto LABEL_24;
    case 4:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1C151928C();
      uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EB93CA50);
      uint64_t v21 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v48, v42, v41);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v32 = 4;
      goto LABEL_23;
    case 5:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1C151928C();
      uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1EB93CA50);
      uint64_t v21 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v50, v44, v43);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v32 = 5;
      goto LABEL_23;
    case 6:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1C151928C();
      uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EB93CA50);
      uint64_t v21 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v49, v46, v45);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v32 = 6;
      goto LABEL_23;
    default:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C151928C();
      uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v21, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v32 = 0;
LABEL_23:
      uint64_t v35 = (uint64_t)v51;
      sub_1BFCA8EB4(v32, (uint64_t)v21);
      uint64_t v36 = (uint64_t)v21;
LABEL_24:
      sub_1BFEFEB68(v36, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v35, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t sub_1BFCA8EB4(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F7E9C;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCA9008();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCA9008()
{
  unint64_t result = qword_1EB860190;
  if (!qword_1EB860190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860190);
  }
  return result;
}

uint64_t sub_1BFCA905C(void *a1)
{
  return FormatCustomItemBinding.URL.encode(to:)(a1);
}

uint64_t FormatCustomItemBinding.URL.encode(to:)(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatCustomItemBinding.URL, v11, v8, (uint64_t)&type metadata for FormatCustomItemBinding.URL, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v9, (uint64_t)v7, v10, (uint64_t)&off_1F1C39B48);
  if (qword_1EB887630 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB93CA80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BFCA9270((uint64_t)v4);
  sub_1BFEFEB68((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v7, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCA9270(uint64_t a1)
{
  sub_1BFEFF7D8();
  uint64_t v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  void v11[2] = sub_1C09050B8;
  void v11[3] = v8;
  swift_retain();
  char v9 = sub_1BFEFF114(a1, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCA93B4();
    v11[4] = 0;
    v11[5] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCA93B4()
{
  unint64_t result = qword_1EB8673F8;
  if (!qword_1EB8673F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8673F8);
  }
  return result;
}

uint64_t sub_1BFCA9408()
{
  return sub_1BFCA942C();
}

uint64_t sub_1BFCA942C()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1BFCA9454(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v8 <= v12) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = v8;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(v6 + 64);
  if (!v7) {
    ++v15;
  }
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  if (v11) {
    uint64_t v18 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v17 + 16;
  if (a2 <= v14) {
    goto LABEL_37;
  }
  unint64_t v20 = v18 + ((v19 + ((((v16 + 49) & ~v16) + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v17);
  char v21 = 8 * v20;
  if (v20 <= 3)
  {
    unsigned int v23 = ((a2 - v14 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      int v22 = *(_DWORD *)((char *)a1 + v20);
      if (!v22) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v23 > 0xFF)
    {
      int v22 = *(unsigned __int16 *)((char *)a1 + v20);
      if (!*(unsigned __int16 *)((char *)a1 + v20)) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v23 < 2)
    {
LABEL_37:
      if ((v13 & 0x80000000) == 0)
      {
        unint64_t v27 = *((void *)a1 + 1);
        if (v27 >= 0xFFFFFFFF) {
          LODWORD(v27) = -1;
        }
        return (v27 + 1);
      }
      unint64_t v29 = ((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v16 + 17) & ~v16;
      if (v8 == v14)
      {
        if (v7 >= 2)
        {
          unsigned int v30 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v29, v7, v5);
          goto LABEL_47;
        }
      }
      else if (v11 >= 2)
      {
        unsigned int v30 = (*(uint64_t (**)(unint64_t))(v10 + 48))((v19 + ((v29 + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v17);
LABEL_47:
        if (v30 >= 2) {
          return v30 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v22 = *((unsigned __int8 *)a1 + v20);
  if (!*((unsigned char *)a1 + v20)) {
    goto LABEL_37;
  }
LABEL_27:
  int v24 = (v22 - 1) << v21;
  if (v20 > 3) {
    int v24 = 0;
  }
  if (v20)
  {
    if (v20 <= 3) {
      int v25 = v20;
    }
    else {
      int v25 = 4;
    }
    switch(v25)
    {
      case 2:
        int v26 = *a1;
        break;
      case 3:
        int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)a1;
        break;
      default:
        int v26 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  return v14 + (v26 | v24) + 1;
}

uint64_t Array<A>.articles.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (!*v4)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void sub_1BFCA97F4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v33 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  int v11 = 0;
  uint64_t v12 = *(void *)(sub_1C1518CDC() - 8);
  uint64_t v13 = v12;
  unsigned int v14 = *(_DWORD *)(v12 + 84);
  if (v14) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = 0;
  }
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = *(void *)(v12 + 64);
  if (v10 <= v15) {
    unsigned int v19 = v15;
  }
  else {
    unsigned int v19 = v10;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v9) {
    uint64_t v21 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v22 = v17 + 16;
  if (!v14) {
    ++v18;
  }
  size_t v23 = v18 + ((v17 + 16 + ((((v16 + 49) & ~v16) + v21) & 0xFFFFFFFFFFFFFFF8)) & ~v17);
  if (a3 <= v20) {
    goto LABEL_26;
  }
  if (v23 <= 3)
  {
    unsigned int v24 = ((a3 - v20 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v24))
    {
      int v11 = 4;
      if (v20 >= a2) {
        goto LABEL_34;
      }
      goto LABEL_27;
    }
    if (v24 >= 0x100) {
      int v11 = 2;
    }
    else {
      int v11 = v24 > 1;
    }
LABEL_26:
    if (v20 >= a2) {
      goto LABEL_34;
    }
    goto LABEL_27;
  }
  int v11 = 1;
  if (v20 >= a2)
  {
LABEL_34:
    uint64_t v28 = ~v17;
    switch(v11)
    {
      case 1:
        a1[v23] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      case 2:
        *(_WORD *)&a1[v23] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)&a1[v23] = 0;
        goto LABEL_38;
      default:
LABEL_38:
        if (a2)
        {
LABEL_39:
          if ((v19 & 0x80000000) != 0)
          {
            unint64_t v29 = (((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v16 + 17) & ~v16;
            if (v10 == v20)
            {
              if (v9 >= 2)
              {
                unsigned int v30 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v33 + 56);
                v30(v29, a2 + 1, v9, v7);
              }
            }
            else if (v14 >= 2)
            {
              unint64_t v31 = (v22 + ((v29 + v21) & 0xFFFFFFFFFFFFFFF8)) & v28;
              char v32 = *(void (**)(unint64_t, void))(v13 + 56);
              v32(v31, a2 + 1);
            }
          }
          else if ((a2 & 0x80000000) != 0)
          {
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = a2 - 1;
          }
        }
        break;
    }
    return;
  }
LABEL_27:
  unsigned int v25 = ~v20 + a2;
  if (v23 < 4)
  {
    int v26 = (v25 >> (8 * v23)) + 1;
    if (v23)
    {
      int v27 = v25 & ~(-1 << (8 * v23));
      bzero(a1, v23);
      if (v23 == 3)
      {
        *(_WORD *)a1 = v27;
        a1[2] = BYTE2(v27);
      }
      else if (v23 == 2)
      {
        *(_WORD *)a1 = v27;
      }
      else
      {
        *a1 = v27;
      }
    }
  }
  else
  {
    bzero(a1, v23);
    *(_DWORD *)a1 = v25;
    int v26 = 1;
  }
  switch(v11)
  {
    case 1:
      a1[v23] = v26;
      break;
    case 2:
      *(_WORD *)&a1[v23] = v26;
      break;
    case 3:
LABEL_61:
      __break(1u);
      break;
    case 4:
      *(_DWORD *)&a1[v23] = v26;
      break;
    default:
      return;
  }
}

uint64_t sub_1BFCA9BA4()
{
  return sub_1C1519A0C();
}

uint64_t *LazyFeedGroupEmitterCursor.init(promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1BFCA9C54(a1, a2);
  swift_release();
  return v2;
}

uint64_t *sub_1BFCA9C54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C151804C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = *(void *)(v6 + 80);
  sub_1C151917C();
  sub_1C1518D2C();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  swift_retain();
  sub_1BFDA5AB8();
  v3[2] = sub_1C1518D0C();
  return v3;
}

unint64_t sub_1BFCA9D74()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 1702521203;
      break;
    case 3:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCA9DD8()
{
  uint64_t v0 = sub_1C1519A5C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE8044(0, &qword_1EB864570, MEMORY[0x1E4FBCB80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1C151E18C();
    uint64_t v7 = sub_1C151E1DC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAA638], v0);
    uint64_t v8 = sub_1C1519C8C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1BFCAA024((uint64_t)v6);
    swift_release();
  }
  else
  {
    sub_1BFEB0268(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  return v8;
}

uint64_t sub_1BFCAA024(uint64_t a1)
{
  sub_1BFEE8044(0, &qword_1EB864570, MEMORY[0x1E4FBCB80], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFCAA0B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFCAA0DC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCAA0DC(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB884F58, (void (*)(void))sub_1C006B5A4, (void (*)(void))sub_1C006B5F8);
  uint64_t v3 = v2;
  uint64_t v45 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v41 - v4;
  sub_1C08EDE98();
  uint64_t v7 = v6;
  uint64_t v46 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BBBEC();
  uint64_t KeyPath = v10;
  sub_1C085F050(&qword_1EB8922F0, (void (*)(uint64_t))sub_1C08BBBEC);
  uint64_t v12 = v47;
  sub_1C1520EBC();
  uint64_t v13 = v12;
  if (v12)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v47 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1C1520EAC();
  char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unsigned char *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *((void *)v18 - 2);
      uint64_t v24 = *((void *)v18 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      uint64_t v26 = v7;
      MEMORY[0x1F4188790](v25);
      *(&v41 - 4) = (uint64_t)&_s10CodingKeysON_37;
      *(&v41 - 3) = sub_1C08BBC70();
      *(&v41 - 2) = sub_1BFCAA864();
      *(&v41 - 1) = sub_1C08BBCC4();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v27 = sub_1C085FB14((uint64_t)&unk_1F1B6C018);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v13 = (void *)swift_allocError();
      *(void *)uint64_t v28 = v23;
      *(void *)(v28 + 8) = v24;
      *(void *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v24, 1);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v26);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C08EDE98);
  uint64_t v21 = v20;
  long long v50 = xmmword_1C153AB20;
  char v51 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v30 = v29;
  uint64_t v44 = v22;
  long long v50 = xmmword_1C1557FA0;
  char v51 = 0;
  int v42 = sub_1C152061C();
  long long v43 = xmmword_1C1557FB0;
  long long v50 = xmmword_1C1557FB0;
  char v51 = 0;
  char v31 = sub_1C152071C();
  if (v31)
  {
    uint64_t v41 = v30;
    long long v48 = v43;
    char v49 = 0;
    sub_1C08EDF2C();
    char v32 = v47;
    sub_1C15206EC();
    uint64_t v33 = sub_1C1517E5C();
    uint64_t v34 = v3;
    uint64_t v35 = v33;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v34);
    uint64_t v30 = v41;
  }
  else
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  long long v50 = xmmword_1C1557FD0;
  char v51 = 0;
  sub_1BFD0C460();
  sub_1C152065C();
  uint64_t v47 = (char *)v35;
  uint64_t v45 = v48;
  int v37 = WORD4(v48) | (BYTE10(v48) << 16);
  long long v50 = xmmword_1C1557FC0;
  char v51 = 0;
  sub_1BFCAA810();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v7);
  char v38 = v48;
  type metadata accessor for FormatSupplementaryNodeStyle();
  uint64_t v39 = v30;
  uint64_t KeyPath = swift_allocObject();
  swift_beginAccess();
  *(void *)(KeyPath + 16) = v19;
  *(void *)(KeyPath + 24) = v21;
  *(void *)(KeyPath + 32) = v44;
  *(void *)(KeyPath + 40) = v39;
  *(unsigned char *)(KeyPath + 48) = v42;
  swift_beginAccess();
  uint64_t v40 = v45;
  *(void *)(KeyPath + 56) = v47;
  *(void *)(KeyPath + 64) = v40;
  *(unsigned char *)(KeyPath + 74) = BYTE2(v37);
  *(_WORD *)(KeyPath + 72) = v37;
  *(unsigned char *)(KeyPath + 75) = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

unint64_t sub_1BFCAA810()
{
  unint64_t result = qword_1EB88F770;
  if (!qword_1EB88F770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88F770);
  }
  return result;
}

unint64_t sub_1BFCAA864()
{
  unint64_t result = qword_1EB88D038;
  if (!qword_1EB88D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D038);
  }
  return result;
}

uint64_t FormatProgressViewNodeStyle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v55 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v54 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (char *)&v54 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v58 = (char *)&v54 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v59 = (char *)&v54 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v54 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v54 - v19;
  sub_1C086AB50();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1C086AC78();
  uint64_t v27 = v26;
  uint64_t v28 = sub_1C085F050(&qword_1EB86CE68, (void (*)(uint64_t))sub_1C086AC78);
  sub_1BFEFBD78(v4, v29, v24, v4, v27, (uint64_t)&type metadata for FormatVersions.StarSkyC, v25, (uint64_t)v23, v28, (uint64_t)&off_1F1C39A28);
  swift_beginAccess();
  uint64_t v30 = v2[2];
  uint64_t v31 = v2[3];
  uint64_t v32 = qword_1EB887650;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1C151928C();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CAE0);
  uint64_t v35 = *(void *)(v33 - 8);
  uint64_t v61 = *(void (**)(char *))(v35 + 16);
  uint64_t v62 = v34;
  uint64_t v60 = v35 + 16;
  v61(v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = v63;
  sub_1C06C9EC0(v30, v31, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1C01B158C, 0);
  uint64_t v64 = v23;
  if (v36)
  {
    sub_1BFEFEB68((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v41 = (uint64_t)v64;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v37 = v2[4];
    uint64_t v38 = v2[5];
    ((void (*)(char *, uint64_t, uint64_t))v61)(v17, v62, v33);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1C06AD858(v37, v38, 1, 0, 0, (uint64_t)v17, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v39 = (uint64_t)v59;
    ((void (*)(char *, uint64_t, uint64_t))v61)(v59, v62, v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = swift_bridgeObjectRetain();
    sub_1C06CA100(v40, 2, 0, 0);
    uint64_t v63 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v58;
    uint64_t v44 = (void (*)(char *, uint64_t, uint64_t))v61;
    ((void (*)(char *, uint64_t, uint64_t))v61)(v58, v62, v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = swift_bridgeObjectRetain();
    sub_1C06EB6C4(v45, 3, 0, 0, v43, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v43, v63);
    swift_bridgeObjectRelease();
    uint64_t v46 = v2[8];
    uint64_t v47 = (uint64_t)v57;
    v44(v57, v62, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BFDC11A4(v46);
    sub_1C06EB93C(v46, 4, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BFDC11BC(v46);
    uint64_t v48 = v2[9];
    uint64_t v49 = (uint64_t)v56;
    v44(v56, v62, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BFDC11A4(v48);
    sub_1C06EB93C(v48, 5, 0, 0, v49, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
    sub_1BFDC11BC(v48);
    unsigned __int8 v50 = *((unsigned char *)v2 + 80);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v51 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA08);
    uint64_t v52 = (uint64_t)v55;
    v44(v55, v51, v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = (uint64_t)v64;
    sub_1C06EBB94(v50, 6, 0, 0, v52, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v52, type metadata accessor for FormatVersionRequirement);
    uint64_t v41 = v53;
  }
  return sub_1BFEFEB68(v41, (uint64_t (*)(void))sub_1C086AB50);
}

uint64_t sub_1BFCAB094@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatStateViewNodeState.init(from:)(a1, a2);
}

uint64_t FormatStateViewNodeState.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v4 = sub_1C151635C();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE24040();
  uint64_t v8 = v7;
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCAB408(0, &qword_1EB87A4D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v27 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCAB46C();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v25 = (uint64_t)a1;
  }
  else
  {
    uint64_t v30 = a1;
    uint64_t v14 = v34;
    char v38 = 0;
    uint64_t v15 = v36;
    uint64_t v28 = sub_1C152069C();
    uint64_t v29 = v16;
    char v37 = 1;
    sub_1BFCAB4C0();
    uint64_t v17 = v10;
    sub_1C15206EC();
    uint64_t v19 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v8);
    uint64_t v20 = v6;
    sub_1C151634C();
    uint64_t v21 = sub_1C151633C();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v15);
    uint64_t v24 = v33;
    uint64_t *v33 = v21;
    v24[1] = v23;
    uint64_t v26 = v29;
    uint64_t v25 = (uint64_t)v30;
    _OWORD v24[2] = v28;
    v24[3] = v26;
    v24[4] = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

void sub_1BFCAB408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFCAB46C();
    unint64_t v7 = a3(a1, &type metadata for FormatStateViewNodeState.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFCAB46C()
{
  unint64_t result = qword_1EB8718B8;
  if (!qword_1EB8718B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8718B8);
  }
  return result;
}

unint64_t sub_1BFCAB4C0()
{
  unint64_t result = qword_1EB884850;
  if (!qword_1EB884850)
  {
    sub_1C0908CDC(255, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884850);
  }
  return result;
}

uint64_t sub_1BFCAB550(void *a1)
{
  return FormatTextNodeAlternativeLogic.encode(to:)(a1);
}

uint64_t FormatTextNodeAlternativeLogic.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v44 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v44 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v44 - v13;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *v1;
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  unint64_t v21 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextNodeAlternativeLogic, v22, v19, (uint64_t)&type metadata for FormatTextNodeAlternativeLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v17, v21, (uint64_t)&off_1F1C39B68);
  switch(v18 >> 62)
  {
    case 1uLL:
      uint64_t v30 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      char v31 = *(unsigned char *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1C151928C();
      uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v11, v33, v32);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFCABB74(1, v30, v31, (uint64_t)v11);
      sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
      uint64_t result = sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1BFEFF7D8);
      break;
    case 2uLL:
      uint64_t v34 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v35 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v36 = qword_1EB882D28;
      swift_retain();
      swift_retain();
      if (v36 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1C151928C();
      uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v8, v38, v37);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C0678A48(2, v34, v35, (uint64_t)v8);
      sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      goto LABEL_14;
    case 3uLL:
      uint64_t v39 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v41 = qword_1EB882D28;
      swift_retain();
      swift_retain();
      if (v41 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C151928C();
      uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v5, v43, v42);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C0678A48(3, v39, v40, (uint64_t)v5);
      sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
LABEL_14:
      uint64_t result = swift_release();
      break;
    default:
      uint64_t v23 = *(void *)(v18 + 16);
      uint64_t v24 = *(void *)(v18 + 24);
      uint64_t v25 = *(void *)(v18 + 32);
      uint64_t v26 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1C151928C();
      uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v14, v28, v27);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C06788B0(0, v23, v24, v25, (uint64_t)v14);
      sub_1BFEFEB68((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t sub_1BFCABB74(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC824;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCABD0C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFCABD60();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCABD0C()
{
  unint64_t result = qword_1EB869000[0];
  if (!qword_1EB869000[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB869000);
  }
  return result;
}

unint64_t sub_1BFCABD60()
{
  unint64_t result = qword_1EB85C240;
  if (!qword_1EB85C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C240);
  }
  return result;
}

uint64_t sub_1BFCABDB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBlockExpression.init(from:)(a1, a2);
}

uint64_t FormatBlockExpression.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v25[0] = a2;
  sub_1C08792B8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C087934C();
  sub_1C085F050(&qword_1EB891F30, (void (*)(uint64_t))sub_1C087934C);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)v25[0];
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *((void *)v15 - 1);
      v25[0] = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v20);
      v25[-4] = &_s10CodingKeysON_178;
      v25[-3] = sub_1C08793D0();
      v25[-2] = sub_1BFCAC130();
      v25[-1] = sub_1C0879424();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FA20((uint64_t)&unk_1F1B84170);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v22 = v25[0];
      *(void *)uint64_t v23 = v25[0];
      *(void *)(v23 + 8) = v19;
      *(void *)(v23 + 16) = v21;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v19, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v25[1] = 0;
  v25[2] = 0;
  char v26 = 0;
  uint64_t v16 = sub_1C152069C();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v12 = v16;
  v12[1] = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCAC130()
{
  unint64_t result = qword_1EB889D58;
  if (!qword_1EB889D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889D58);
  }
  return result;
}

uint64_t sub_1BFCAC184@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatFlexibleExpression.init(from:)(a1, a2);
}

uint64_t FormatFlexibleExpression.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  sub_1C0884774();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0884808();
  sub_1C085F050(&qword_1EA19DAD0, (void (*)(uint64_t))sub_1C0884808);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v23;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v16 = *((void *)v15 - 1);
      uint64_t v23 = (unsigned char *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v17 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v17);
      *(&v22 - 4) = (uint64_t)&_s10CodingKeysON_147;
      *(&v22 - 3) = sub_1C088488C();
      *(&v22 - 2) = sub_1BFCAC514();
      *(&v22 - 1) = sub_1C08848E0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v18 = sub_1C085FA20((uint64_t)&unk_1F1B84DB8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v19 = (uint64_t)v23;
      *(void *)uint64_t v20 = v23;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v18;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v19, v16, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCAC568();
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  char v26 = 0;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v12 = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCAC514()
{
  unint64_t result = qword_1EB894648;
  if (!qword_1EB894648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894648);
  }
  return result;
}

unint64_t sub_1BFCAC568()
{
  unint64_t result = qword_1EB878178;
  if (!qword_1EB878178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878178);
  }
  return result;
}

char *sub_1BFCAC5BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_readingHistory] = a1;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_bundleSubscriptionManager] = a2;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_paidAccessChecker] = a3;
  uint64_t v9 = v4;
  id v10 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v11 = objc_msgSend(v10, sel_allLikedArticleIDs);
  uint64_t v12 = sub_1C151EFBC();

  *(void *)&v9[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_allLikedArticleIDs] = v12;
  id v13 = objc_msgSend(v10, sel_allDislikedArticleIDs);
  uint64_t v14 = sub_1C151EFBC();

  *(void *)&v9[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_allDislikedArticleIDs] = v14;
  v20.receiver = v9;
  v20.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v20, sel_init);
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_readingHistory];
  uint64_t v17 = v15;
  id v18 = v16;
  objc_msgSend(v18, sel_addObserver_, v17);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1BFCAC748(uint64_t a1)
{
  uint64_t v99 = a1;
  v101[6] = *MEMORY[0x1E4F143B8];
  uint64_t v90 = *v1;
  swift_beginAccess();
  id v82 = v1;
  uint64_t v2 = v1[11];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v84 = sub_1C0036304(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v83 = sub_1C0063034(0, v3, 0, v4);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v85 = v2;
  uint64_t v89 = v5;
  if (!v5)
  {
LABEL_32:
    sub_1C006BACC();
    uint64_t v47 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void *)(v47 + 16);
    uint64_t v96 = v47;
    if (v48)
    {
      uint64_t v49 = v47 + 40;
      unsigned __int8 v50 = v84;
      do
      {
        uint64_t v51 = *(void *)v49;
        uint64_t v100 = *(char **)(v49 - 8);
        uint64_t v99 = *(void *)(v49 + 8);
        uint64_t v98 = *(void *)(v49 + 16);
        LODWORD(v97) = *(unsigned __int8 *)(v49 + 24);
        uint64_t v52 = *(void *)(v49 + 32);
        uint64_t v53 = *(unsigned __int8 *)(v49 + 44);
        uint64_t v54 = *(unsigned int *)(v49 + 40);
        unint64_t v55 = v50[2];
        unint64_t v56 = v50[3];
        uint64_t v57 = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >= v56 >> 1) {
          unsigned __int8 v50 = sub_1C0036304((void *)(v56 > 1), v55 + 1, 1, v57);
        }
        else {
          unsigned __int8 v50 = v57;
        }
        v50[2] = v55 + 1;
        uint64_t v58 = &v50[7 * v55];
        v58[4] = v100;
        v58[5] = v51;
        uint64_t v59 = v98;
        v58[6] = v99;
        v58[7] = v59;
        *((unsigned char *)v58 + 64) = v97;
        v58[9] = v52;
        *((unsigned char *)v58 + 84) = (v54 | (unint64_t)(v53 << 32)) >> 32;
        *((_DWORD *)v58 + 20) = v54;
        v49 += 64;
        --v48;
      }
      while (v48);
    }
    else
    {
      unsigned __int8 v50 = v84;
    }
    uint64_t v60 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = (char *)v60[2];
    if (v61)
    {
      uint64_t v62 = (uint64_t)v82;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v84 = v60;
      uint64_t v63 = (unsigned int *)(v60 + 10);
      do
      {
        uint64_t v100 = v61;
        uint64_t v65 = v62;
        uint64_t v66 = *((void *)v63 - 4);
        uint64_t v67 = *((void *)v63 - 3);
        int v68 = *((unsigned __int8 *)v63 - 16);
        uint64_t v69 = *((void *)v63 - 1);
        uint64_t v99 = *((unsigned __int8 *)v63 + 4);
        uint64_t v98 = *v63;
        uint64_t v70 = swift_allocObject();
        *(void *)(v70 + 72) = 0;
        swift_beginAccess();
        uint64_t v72 = *(void *)(v65 + 16);
        uint64_t v71 = *(void *)(v65 + 24);
        swift_beginAccess();
        *(void *)(v70 + 16) = v72;
        *(void *)(v70 + 24) = v71;
        uint64_t v97 = v71;
        uint64_t v73 = *(void *)(v65 + 40);
        *(void *)(v70 + 32) = *(void *)(v65 + 32);
        *(void *)(v70 + 40) = v73;
        if (v68 == 1)
        {
          uint64_t v66 = *(void *)(v65 + 48);
          uint64_t v67 = *(void *)(v65 + 56);
          uint64_t v74 = v65;
          char v75 = *(unsigned char *)(v65 + 64);
        }
        else
        {
          uint64_t v74 = v65;
          char v75 = 0;
        }
        *(void *)(v70 + 48) = v66;
        *(void *)(v70 + 56) = v67;
        uint64_t v76 = v69;
        *(unsigned char *)(v70 + 64) = v75;
        if (!v69)
        {
          swift_beginAccess();
          uint64_t v76 = *(void *)(v74 + 72);
          swift_bridgeObjectRetain();
        }
        unint64_t v77 = v98 | (v99 << 32);
        swift_beginAccess();
        *(void *)(v70 + 72) = v76;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (BYTE4(v77) == 255) {
          unint64_t v77 = *(unsigned int *)(v74 + 80) | ((unint64_t)*(unsigned __int8 *)(v74 + 84) << 32);
        }
        *(_DWORD *)(v70 + 80) = v77;
        *(unsigned char *)(v70 + 84) = BYTE4(v77);
        swift_beginAccess();
        uint64_t v64 = *(void *)(v74 + 88);
        swift_bridgeObjectRetain();
        swift_release();
        swift_beginAccess();
        *(void *)(v70 + 88) = v64;
        v63 += 14;
        uint64_t v62 = v70;
        uint64_t v61 = v100 - 1;
      }
      while (v100 != (char *)1);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v70 = (uint64_t)v82;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v70;
  }
  uint64_t v100 = 0;
  uint64_t v87 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
LABEL_5:
  if (v6 >= *(void *)(v2 + 16)) {
    goto LABEL_54;
  }
  uint64_t v7 = v87 + 56 * v6;
  uint64_t v9 = *(void *)v7;
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v91 = *(void *)(v7 + 16);
  uint64_t v92 = *(void *)(v7 + 24);
  int v93 = *(unsigned __int8 *)(v7 + 32);
  uint64_t v10 = *(void *)(v7 + 40);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 52);
  uint64_t v12 = *(unsigned int *)(v7 + 48);
  uint64_t v13 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  uint64_t v96 = v10;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  v101[0] = v9;
  v101[1] = v8;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1BFEF53C0(v101);
  swift_bridgeObjectRelease();
  uint64_t v98 = *(void *)(v14 + 16);
  if (!v98)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  uint64_t v86 = v9;
  uint64_t v94 = v8;
  unint64_t v95 = v6;
  unint64_t v15 = 0;
  unint64_t v88 = v12 | (v11 << 32);
  uint64_t v16 = (uint64_t *)(v14 + 64);
  while (1)
  {
    if (v15 >= *(void *)(v14 + 16))
    {
      __break(1u);
LABEL_54:
      __break(1u);
    }
    uint64_t v97 = *(v16 - 2);
    uint64_t v18 = *(v16 - 1);
    uint64_t v17 = *v16;
    char v19 = *(unsigned char *)(v18 + 32);
    unsigned int v20 = v19 & 0x3F;
    unint64_t v21 = (unint64_t)((1 << v19) + 63) >> 6;
    size_t v22 = 8 * v21;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v20 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v24 = (char *)swift_slowAlloc();
    bzero(v24, v22);
    uint64_t v28 = v21;
    uint64_t v29 = v100;
    uint64_t v27 = sub_1BFEFB09C((uint64_t)v24, v28, v18, v99);
    swift_bridgeObjectRelease();
    uint64_t v80 = &v102;
    uint64_t v100 = v29;
    if (v29) {
      goto LABEL_55;
    }
    MEMORY[0x1C18C9B00](v24, -1, -1);
LABEL_18:
    char v30 = sub_1BFEFAE14(v27, v18);
    swift_release();
    if (v30 & 1) != 0 && (sub_1BFEFB810(v99, v17))
    {
      swift_bridgeObjectRelease();
      unint64_t v31 = HIDWORD(v88);
      uint64_t v32 = v97;
      if (v97 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v41 = v84[2];
        unint64_t v42 = v84[3];
        uint64_t v43 = v94;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2 = v85;
        unint64_t v6 = v95;
        if (v41 >= v42 >> 1) {
          uint64_t v44 = sub_1C0036304((void *)(v42 > 1), v41 + 1, 1, v84);
        }
        else {
          uint64_t v44 = v84;
        }
        v44[2] = v41 + 1;
        uint64_t v84 = v44;
        uint64_t v45 = &v44[7 * v41];
        v45[4] = v86;
        v45[5] = v43;
        uint64_t v46 = v92;
        v45[6] = v91;
        v45[7] = v46;
        *((unsigned char *)v45 + 64) = v93;
        v45[9] = v96;
        *((unsigned char *)v45 + 84) = v31;
        *((_DWORD *)v45 + 20) = v88;
      }
      else
      {
        uint64_t v33 = v94;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v34 = v83;
        unint64_t v36 = v83[2];
        unint64_t v35 = v83[3];
        uint64_t v2 = v85;
        unint64_t v6 = v95;
        if (v36 >= v35 >> 1) {
          uint64_t v34 = sub_1C0063034((void *)(v35 > 1), v36 + 1, 1, v83);
        }
        char v37 = v93;
        uint64_t v38 = v92;
        uint64_t v39 = v91;
        void v34[2] = v36 + 1;
        uint64_t v83 = v34;
        uint64_t v40 = &v34[8 * v36];
        v40[4] = v86;
        v40[5] = v33;
        v40[6] = v39;
        v40[7] = v38;
        *((unsigned char *)v40 + 64) = v37;
        v40[9] = v96;
        *((_DWORD *)v40 + 20) = v88;
        *((unsigned char *)v40 + 84) = v31;
        v40[11] = v32;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v6 == v89)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      goto LABEL_5;
    }
    ++v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 += 5;
    if (v98 == v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v85;
      unint64_t v6 = v95;
      goto LABEL_4;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v24 = (char *)&v81 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v24, v22);
  uint64_t v25 = v21;
  char v26 = v100;
  uint64_t v27 = sub_1BFEFB09C((uint64_t)v24, v25, v18, v99);
  swift_bridgeObjectRelease();
  uint64_t v100 = v26;
  if (!v26) {
    goto LABEL_18;
  }
  uint64_t v79 = v100;
  swift_willThrow();

  __break(1u);
LABEL_55:

  uint64_t result = MEMORY[0x1C18C9B00](v24, -1, -1);
  __break(1u);
  return result;
}

void *initializeWithCopy for FeedGroupEntity.ManifestEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void FCDateRange.init(dateInterval:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1C151552C();
  uint64_t v7 = (void *)sub_1C151621C();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C15154FC();
  uint64_t v9 = (void *)sub_1C151621C();
  v8(v5, v2);
  id v10 = objc_msgSend(v6, sel_initWithEarlierDate_laterDate_, v7, v9);

  if (v10)
  {
    uint64_t v11 = sub_1C151555C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  else
  {
    __break(1u);
  }
}

unint64_t destroy for FormatPercentFillSizing(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFCAD3A0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCAD3F0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCAD450()
{
  unint64_t result = qword_1EB88B528;
  if (!qword_1EB88B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B528);
  }
  return result;
}

uint64_t sub_1BFCAD4A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t destroy for FeedGroupEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t FormatNodeState.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCAD694()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_1BFCAD6EC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v9 = sub_1C151A43C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2 + 16;
  if (a1)
  {
    swift_beginAccess();
    uint64_t v14 = MEMORY[0x1C18C9C60](v13);
    if (v14)
    {
      unint64_t v15 = (void *)v14;
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v17 = Strong;
        uint64_t v26 = a5;
        id v18 = a1;
        if (a4) {
          a4(2);
        }
        __swift_project_boxed_opaque_existential_1((void *)(v17 + 32), *(void *)(v17 + 56));
        sub_1C151A42C();
        char v21 = sub_1C151B9FC();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        if (v21)
        {
          uint64_t v22 = swift_allocObject();
          uint64_t v23 = v26;
          *(void *)(v22 + 16) = a4;
          *(void *)(v22 + 24) = v23;
          id v24 = a1;
          sub_1BFC648F8((uint64_t)a4);
          sub_1C151CD4C();

          swift_release();
          swift_release();
        }
        else
        {
          id v25 = a1;
          sub_1C151CD6C();
          if (a4) {
            a4(4);
          }
          swift_release();
        }
        return;
      }
    }
  }
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x1C18C9C60](v13);
  if (v19)
  {
    unsigned int v20 = (void *)v19;
    sub_1C151CD6C();
  }
  if (a4) {
    a4(3);
  }
}

unint64_t sub_1BFCAD980()
{
  sub_1BFCAE1DC(v0, (uint64_t)&v6);
  uint64_t v1 = (void *)v6;
  switch(v9)
  {
    case 1:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000017;
      UIContentSizeCategory.description.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();

      goto LABEL_16;
    case 2:
    case 3:
    case 4:
    case 5:
      unint64_t v5 = 0;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151EF4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151EF4C();
      sub_1C151E80C();
      goto LABEL_15;
    case 6:
    case 7:
      unint64_t v5 = 0;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_14;
    case 8:
      unint64_t v5 = 0;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 9:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0x6D726F6674616C50;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_13:
      sub_1C151E80C();
      type metadata accessor for UIUserInterfaceIdiom(0);
      sub_1C00FEF80();
LABEL_14:
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 10:
    case 11:
      unint64_t v5 = 0;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C152036C();
      sub_1C151E80C();
      sub_1C00FEF2C();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 12:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000028;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
LABEL_16:
      unint64_t v2 = v5;
      break;
    case 13:
      int8x16_t v3 = vorrq_s8(v7, v8);
      if (*(void *)&vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)) | v6) {
        unint64_t v2 = 0xD000000000000048;
      }
      else {
        unint64_t v2 = 0xD000000000000049;
      }
      break;
    default:
      unint64_t v2 = 0xD00000000000001BLL;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
      break;
  }
  return v2;
}

uint64_t sub_1BFCAE1DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for GroupLayoutFactoryError(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 0xD) {
    unsigned int v3 = *(_DWORD *)a2 + 13;
  }
  switch(v3)
  {
    case 0u:
      long long v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t))(v4 - 8))(a1);
      *(unsigned char *)(a1 + 40) = 0;
      return a1;
    case 1u:
      unint64_t v6 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 1;
      id v7 = v6;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 2;
      return a1;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 3;
      return a1;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 4;
      return a1;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 5;
      return a1;
    case 6u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v9 = 6;
      goto LABEL_13;
    case 7u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v9 = 7;
LABEL_13:
      *(unsigned char *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 8u:
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      char v12 = 8;
      goto LABEL_19;
    case 9u:
      uint64_t v13 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v13;
      char v12 = 9;
      goto LABEL_19;
    case 0xAu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      char v12 = 10;
      goto LABEL_19;
    case 0xBu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      char v12 = 11;
      goto LABEL_19;
    case 0xCu:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      char v12 = 12;
LABEL_19:
      *(unsigned char *)(a1 + 40) = v12;
LABEL_20:
      swift_bridgeObjectRetain();
      break;
    default:
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  return a1;
}

uint64_t sub_1BFCAE3D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCompilerProperty.init(from:)(a1, a2);
}

uint64_t sub_1BFCAE3EC()
{
  uint64_t v1 = 0x726F74617265706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F6974706FLL;
  }
}

uint64_t _s5TeaUI8CommandsC8NewsFeedE6SportsV11ReportScoreV3allSayAA7CommandCyAD0fH7ConcernOGGvgZ_0()
{
  sub_1BFE4F8BC(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1534A50;
  if (qword_1EB885388 != -1) {
    swift_once();
  }
  *(void *)(v0 + 32) = qword_1EB885380;
  uint64_t v1 = qword_1EB8853D0;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  *(void *)(v0 + 40) = qword_1EB8853C8;
  uint64_t v2 = qword_1EB8853F8;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  *(void *)(v0 + 48) = qword_1EB8853F0;
  uint64_t v3 = qword_1EB8853E0;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  *(void *)(v0 + 56) = qword_1EB8853D8;
  uint64_t v4 = qword_1EB8853B8;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  *(void *)(v0 + 64) = qword_1EB8853B0;
  uint64_t v5 = qword_1EB8853A0;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  *(void *)(v0 + 72) = qword_1EB885398;
  sub_1C151EBEC();
  swift_retain();
  return v0;
}

uint64_t sub_1BFCAE64C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFE3AC9C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCAE678@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFE39F70(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCAE6A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMediaTiming.init(from:)(a1, a2);
}

uint64_t FormatMediaTiming.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v51 = a2;
  sub_1C08981C4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0898258();
  sub_1C085F050(&qword_1EB86CCB8, (void (*)(uint64_t))sub_1C0898258);
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v50 = v7;
    uint64_t v10 = v51;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v11 = sub_1C1520EAC();
    char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
    swift_bridgeObjectRelease();
    uint64_t v13 = v9;
    if (v12)
    {
      uint64_t v14 = sub_1C152070C();
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v16 = (unsigned char *)(v14 + 48);
        while (*v16 != 1)
        {
          v16 += 24;
          if (!--v15) {
            goto LABEL_7;
          }
        }
        uint64_t v18 = *((void *)v16 - 2);
        uint64_t v19 = *((void *)v16 - 1);
        swift_bridgeObjectRetain_n();
        uint64_t v20 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v20);
        *(&v36 - 4) = (uint64_t)&_s10CodingKeysON_103;
        *(&v36 - 3) = sub_1C08982DC();
        *(&v36 - 2) = sub_1BFCAF0F0();
        *(&v36 - 1) = sub_1C0898330();
        swift_getKeyPath();
        swift_retain();
        uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B69E90);
        swift_release_n();
        sub_1C02570B4();
        uint64_t v3 = (void *)swift_allocError();
        *(void *)uint64_t v22 = v18;
        *(void *)(v22 + 8) = v19;
        *(void *)(v22 + 16) = v21;
        *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1BFE94AD4(v18, v19, 1);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v6);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFE94094();
    long long v54 = 0uLL;
    LOBYTE(v55) = 0;
    sub_1C152065C();
    uint64_t v17 = v58;
    long long v54 = xmmword_1C153AB20;
    LOBYTE(v55) = 0;
    sub_1C152065C();
    uint64_t v23 = v58;
    long long v54 = xmmword_1C1557FA0;
    LOBYTE(v55) = 0;
    sub_1C152065C();
    uint64_t v49 = v23;
    uint64_t v24 = v58;
    long long v54 = xmmword_1C1557FB0;
    LOBYTE(v55) = 0;
    sub_1C152065C();
    uint64_t v48 = v24;
    uint64_t v25 = v58;
    long long v54 = xmmword_1C1557FD0;
    LOBYTE(v55) = 0;
    sub_1BFCAF09C();
    sub_1C152065C();
    uint64_t v47 = v25;
    LODWORD(v25) = v58;
    long long v54 = xmmword_1C1557FC0;
    LOBYTE(v55) = 0;
    sub_1C152065C();
    int v46 = v25;
    uint64_t v26 = v58;
    long long v54 = xmmword_1C1557FE0;
    LOBYTE(v55) = 0;
    sub_1C152065C();
    uint64_t v45 = v26;
    uint64_t v27 = v58;
    long long v58 = xmmword_1C1557FF0;
    char v59 = 0;
    unint64_t v44 = sub_1BFFC82FC();
    sub_1C152065C();
    uint64_t v43 = v27;
    long long v42 = v54;
    LODWORD(v27) = v55;
    long long v58 = xmmword_1C1558010;
    char v59 = 0;
    sub_1BFCAF048();
    sub_1C152065C();
    int v41 = v27;
    long long v37 = v54;
    uint64_t v38 = v55;
    uint64_t v39 = v56;
    int v40 = v57;
    long long v58 = xmmword_1C1558020;
    char v59 = 0;
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v6);
    char v28 = v55;
    uint64_t v29 = v49;
    *(void *)uint64_t v10 = v17;
    *(void *)(v10 + 8) = v29;
    uint64_t v30 = v47;
    *(void *)(v10 + 16) = v48;
    *(void *)(v10 + 24) = v30;
    *(unsigned char *)(v10 + 32) = v46;
    *(_DWORD *)(v10 + 33) = *(_DWORD *)v60;
    *(_DWORD *)(v10 + 36) = *(_DWORD *)&v60[3];
    uint64_t v31 = v43;
    *(void *)(v10 + 40) = v45;
    *(void *)(v10 + 48) = v31;
    uint64_t v32 = *((void *)&v42 + 1);
    *(void *)(v10 + 56) = v42;
    *(void *)(v10 + 64) = v32;
    *(unsigned char *)(v10 + 72) = v41;
    *(_DWORD *)(v10 + 73) = *(_DWORD *)v53;
    *(_DWORD *)(v10 + 76) = *(_DWORD *)&v53[3];
    uint64_t v33 = *((void *)&v37 + 1);
    *(void *)(v10 + 80) = v37;
    *(void *)(v10 + 88) = v33;
    uint64_t v34 = v39;
    *(void *)(v10 + 96) = v38;
    *(void *)(v10 + 104) = v34;
    *(unsigned char *)(v10 + 112) = v40;
    *(_DWORD *)(v10 + 113) = *(_DWORD *)v52;
    *(_DWORD *)(v10 + 116) = *(_DWORD *)&v52[3];
    *(_OWORD *)(v10 + 120) = v54;
    *(unsigned char *)(v10 + 136) = v28;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_10:
  sub_1C0038728(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCAF048()
{
  unint64_t result = qword_1EB860860;
  if (!qword_1EB860860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860860);
  }
  return result;
}

unint64_t sub_1BFCAF09C()
{
  unint64_t result = qword_1EB85ED20;
  if (!qword_1EB85ED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED20);
  }
  return result;
}

unint64_t sub_1BFCAF0F0()
{
  unint64_t result = qword_1EB865EC8;
  if (!qword_1EB865EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865EC8);
  }
  return result;
}

int *sub_1BFCAF144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v8 = type metadata accessor for FeedCursorTrackerGroup();
  uint64_t v52 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v61 = (uint64_t *)((char *)&v40 - v16);
  uint64_t v66 = MEMORY[0x1E4FBC870];
  uint64_t v67 = MEMORY[0x1E4FBC870];
  unint64_t result = (int *)sub_1C151E2FC();
  uint64_t v65 = result;
  uint64_t v60 = *(void *)(a2 + 16);
  if (v60)
  {
    uint64_t v41 = a1;
    uint64_t v42 = a5;
    unint64_t v18 = 0;
    uint64_t v19 = a2 + 32;
    long long v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v47 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    int v46 = (void (**)(char *, uint64_t *, uint64_t))(v14 + 16);
    uint64_t v45 = (void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    unint64_t v44 = (uint64_t (**)(uint64_t *, uint64_t))(v14 + 8);
    uint64_t v43 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
    uint64_t v59 = a2;
    uint64_t v50 = v8;
    uint64_t v49 = v13;
    uint64_t v48 = a2 + 32;
    while (v18 < *(void *)(a2 + 16))
    {
      uint64_t v20 = (uint64_t *)(v19 + 48 * v18);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      uint64_t v23 = v20[2];
      uint64_t v24 = v20[3];
      uint64_t v25 = v20[4];
      uint64_t v26 = v20[5];
      v68[0] = *v20;
      v68[1] = v22;
      v68[2] = v23;
      v68[3] = v24;
      v68[4] = v25;
      v68[5] = v26;
      uint64_t v27 = v19;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      sub_1BFC9B774((uint64_t)v68, (uint64_t)v13);
      if ((*v58)(v13, 1, v8) == 1)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        unint64_t result = (int *)(*v43)(v13, v52);
        a2 = v59;
        uint64_t v19 = v27;
      }
      else
      {
        uint64_t v54 = v24;
        uint64_t v55 = v23;
        uint64_t v56 = v22;
        uint64_t v57 = v21;
        char v28 = v61;
        (*v47)((char *)v61, v13, v8);
        uint64_t v29 = *v28;
        uint64_t v30 = v28[1];
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(v64, v29, v30);
        swift_bridgeObjectRelease();
        uint64_t v31 = *(uint64_t *)((char *)v28 + *(int *)(v8 + 48));
        uint64_t v32 = *(void *)(v31 + 16);
        if (v32)
        {
          uint64_t v53 = v29;
          swift_bridgeObjectRetain();
          uint64_t v33 = (uint64_t *)(v31 + 40);
          do
          {
            uint64_t v35 = *(v33 - 1);
            uint64_t v34 = *v33;
            swift_bridgeObjectRetain();
            sub_1BFEFFC1C(v64, v35, v34);
            swift_bridgeObjectRelease();
            v33 += 2;
            --v32;
          }
          while (v32);
          swift_bridgeObjectRelease();
          uint64_t v29 = v53;
        }
        uint64_t v36 = v51;
        long long v37 = v61;
        uint64_t v8 = v50;
        (*v46)(v51, v61, v50);
        (*v45)(v36, 0, 1, v8);
        v64[0] = v29;
        v64[1] = v30;
        sub_1C151E41C();
        swift_bridgeObjectRetain();
        sub_1C151E44C();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        unint64_t result = (int *)(*v44)(v37, v8);
        a2 = v59;
        uint64_t v13 = v49;
        uint64_t v19 = v48;
      }
      if (++v18 == v60)
      {
        swift_bridgeObjectRelease();
        a5 = v42;
        a1 = v41;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
    uint64_t v39 = v67;
    unint64_t result = (int *)type metadata accessor for FeedCursorTrackerSnapshot();
    *(void *)(a5 + result[9]) = v39;
    *(void *)(a5 + result[11]) = v65;
    *(void *)(a5 + result[10]) = v66;
  }
  return result;
}

uint64_t sub_1BFCAF798@<X0>(uint64_t a1@<X8>)
{
  sub_1BFCAFEBC(v1, (uint64_t)v45);
  switch(v46)
  {
    case 1:
      uint64_t v6 = v45[0];
      sub_1C1517EFC();
      double v7 = sub_1BFF493E4(*(uint64_t *)&v44[0], v6);
      uint64_t result = swift_release();
      if (!v2)
      {
        uint64_t v8 = swift_allocObject();
        *(double *)(v8 + 16) = v7;
        sub_1BFFC0BF8();
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
        *(void *)(result + 32) = v8;
        *(unsigned char *)(result + 40) = 0;
        *(void *)a1 = result;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v9 = 1;
        goto LABEL_28;
      }
      return result;
    case 2:
      uint64_t v10 = v45[0];
      sub_1C1517EFC();
      double v11 = sub_1BFF493E4(*(uint64_t *)&v44[0], v10);
      uint64_t result = swift_release();
      if (!v2)
      {
        uint64_t v12 = swift_allocObject();
        *(double *)(v12 + 16) = v11;
        sub_1BFFC0BF8();
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
        *(void *)(result + 32) = v12;
        *(unsigned char *)(result + 40) = 0;
        *(void *)a1 = result;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v9 = 2;
        goto LABEL_28;
      }
      return result;
    case 3:
      uint64_t v13 = v45[0];
      sub_1C1517EFC();
      double v14 = sub_1BFF493E4(*(uint64_t *)&v44[0], v13);
      uint64_t result = swift_release();
      if (!v2)
      {
        uint64_t v15 = swift_allocObject();
        *(double *)(v15 + 16) = v14;
        sub_1BFFC0BF8();
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
        *(void *)(result + 32) = v15;
        *(unsigned char *)(result + 40) = 0;
        *(void *)a1 = result;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v9 = 3;
        goto LABEL_28;
      }
      return result;
    case 4:
      uint64_t v16 = v45[0];
      sub_1C1517EFC();
      double v17 = sub_1BFF493E4(*(uint64_t *)&v44[0], v16);
      uint64_t result = swift_release();
      if (!v2)
      {
        uint64_t v18 = swift_allocObject();
        *(double *)(v18 + 16) = v17;
        sub_1BFFC0BF8();
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
        *(void *)(result + 32) = v18;
        *(unsigned char *)(result + 40) = 0;
        *(void *)a1 = result;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v9 = 4;
        goto LABEL_28;
      }
      return result;
    case 5:
      uint64_t v19 = v45[0];
      sub_1C1517EFC();
      double v20 = sub_1BFF493E4(*(uint64_t *)&v44[0], v19);
      uint64_t result = swift_release();
      if (!v2)
      {
        uint64_t v21 = swift_allocObject();
        *(double *)(v21 + 16) = v20;
        sub_1BFFC0BF8();
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
        *(void *)(result + 32) = v21;
        *(unsigned char *)(result + 40) = 0;
        *(void *)a1 = result;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v9 = 5;
        goto LABEL_28;
      }
      return result;
    case 6:
      uint64_t v22 = v45[0];
      sub_1C1517EFC();
      double v23 = sub_1BFF493E4(*(uint64_t *)&v44[0], v22);
      uint64_t result = swift_release();
      if (!v2)
      {
        uint64_t v24 = swift_allocObject();
        *(double *)(v24 + 16) = v23;
        sub_1BFFC0BF8();
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
        *(void *)(result + 32) = v24;
        *(unsigned char *)(result + 40) = 0;
        *(void *)a1 = result;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        char v9 = 6;
        goto LABEL_28;
      }
      return result;
    case 7:
      uint64_t v25 = v45[0];
      sub_1C1517EFC();
      double v26 = sub_1BFF493E4(*(uint64_t *)&v44[0], v25);
      uint64_t result = swift_release();
      if (!v2)
      {
        uint64_t v27 = swift_allocObject();
        *(double *)(v27 + 16) = v26;
        sub_1BFFC0BF8();
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
        *(void *)(result + 32) = v27;
        *(unsigned char *)(result + 40) = 0;
        *(void *)a1 = result;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        *(unsigned char *)(a1 + 32) = 7;
      }
      return result;
    case 8:
      uint64_t v28 = v45[0];
      sub_1C1517EFC();
      double v29 = sub_1BFF493E4(*(uint64_t *)&v44[0], v28);
      if (v2) {
        return swift_release();
      }
      double v30 = v29;
      swift_release();
      uint64_t v31 = swift_allocObject();
      *(double *)(v31 + 16) = v30;
      sub_1BFFC0BF8();
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
      *(void *)(result + 32) = v31;
      *(unsigned char *)(result + 40) = 0;
      *(void *)a1 = result;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      char v9 = 8;
      goto LABEL_28;
    case 9:
      uint64_t v32 = v45[0];
      sub_1C1517EFC();
      double v33 = sub_1BFF493E4(*(uint64_t *)&v44[0], v32);
      if (v2) {
        return swift_release();
      }
      double v34 = v33;
      swift_release();
      uint64_t v35 = swift_allocObject();
      *(double *)(v35 + 16) = v34;
      sub_1BFFC0BF8();
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
      *(void *)(result + 32) = v35;
      *(unsigned char *)(result + 40) = 0;
      *(void *)a1 = result;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      char v9 = 9;
      goto LABEL_28;
    case 10:
      uint64_t v36 = v45[0];
      sub_1C1517EFC();
      double v37 = sub_1BFF493E4(*(uint64_t *)&v44[0], v36);
      if (v2) {
        return swift_release();
      }
      double v38 = v37;
      swift_release();
      uint64_t v39 = swift_allocObject();
      *(double *)(v39 + 16) = v38;
      sub_1BFFC0BF8();
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
      *(void *)(result + 32) = v39;
      *(unsigned char *)(result + 40) = 0;
      *(void *)a1 = result;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      char v9 = 10;
      goto LABEL_28;
    case 11:
      uint64_t v40 = v45[0];
      sub_1C1517EFC();
      double v41 = sub_1BFF493E4(*(uint64_t *)&v44[0], v40);
      if (v2) {
        return swift_release();
      }
      double v42 = v41;
      swift_release();
      uint64_t v43 = swift_allocObject();
      *(double *)(v43 + 16) = v42;
      sub_1BFFC0BF8();
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
      *(void *)(result + 32) = v43;
      *(unsigned char *)(result + 40) = 0;
      *(void *)a1 = result;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      char v9 = 11;
LABEL_28:
      *(unsigned char *)(a1 + 32) = v9;
      return result;
    case 12:
      return sub_1BFCAFEBC(v1, a1);
    default:
      uint64_t result = sub_1BFCAFF18(v45[0], v45[1], v45[2], v45[3], (uint64_t *)v44);
      if (!v2)
      {
        long long v5 = v44[1];
        *(_OWORD *)a1 = v44[0];
        *(_OWORD *)(a1 + 16) = v5;
        *(unsigned char *)(a1 + 32) = 0;
      }
      return result;
  }
}

uint64_t sub_1BFCAFEBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1BFCAFF18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  sub_1C1517EFC();
  double v11 = sub_1BFF493E4(v23, a1);
  uint64_t result = swift_release();
  if (!v5)
  {
    uint64_t v13 = swift_allocObject();
    *(double *)(v13 + 16) = v11;
    sub_1BFFC0BF8();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    *(void *)(v14 + 32) = v13;
    *(unsigned char *)(v14 + 40) = 0;
    sub_1C1517EFC();
    double v15 = sub_1BFF493E4(v23, a2);
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    *(void *)(v17 + 32) = v16;
    *(unsigned char *)(v17 + 40) = 0;
    sub_1C1517EFC();
    double v18 = sub_1BFF493E4(v23, a3);
    swift_release();
    uint64_t v19 = swift_allocObject();
    *(double *)(v19 + 16) = v18;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
    *(void *)(v20 + 32) = v19;
    *(unsigned char *)(v20 + 40) = 0;
    sub_1C1517EFC();
    double v21 = sub_1BFF493E4(v23, a4);
    swift_release();
    uint64_t v22 = swift_allocObject();
    *(double *)(v22 + 16) = v21;
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
    *(void *)(result + 32) = v22;
    *(unsigned char *)(result + 40) = 0;
    *a5 = v14;
    a5[1] = v17;
    a5[2] = v20;
    a5[3] = result;
  }
  return result;
}

uint64_t FeedDeferredCursor.__deallocating_deinit()
{
  FeedDeferredCursor.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedDeferredCursor.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EB93C2F8;
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + qword_1EB93C2E0, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C019CB28(v0 + qword_1EB93C2E8);
  swift_release();
  return v0;
}

uint64_t sub_1BFCB0314(void *a1)
{
  return FormatGroupNodeMaskPath.encode(to:)(a1);
}

uint64_t FormatGroupNodeMaskPath.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  double v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v40 = (char *)&v39 - v6;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v39 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - v11;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v13 - 8);
  double v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)v1;
  uint64_t v43 = *(void *)(v1 + 8);
  uint64_t v44 = v16;
  uint64_t v42 = *(void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 32);
  uint64_t v19 = *(void *)(v1 + 40);
  uint64_t v20 = *(void *)(v1 + 48);
  uint64_t v21 = *(void *)(v1 + 56);
  uint64_t v22 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  unint64_t v25 = sub_1BFEB6A24();
  uint64_t v45 = v15;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatGroupNodeMaskPath, v26, v23, (uint64_t)&type metadata for FormatGroupNodeMaskPath, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v24, (uint64_t)v15, v25, (uint64_t)&off_1F1C39BA8);
  switch(v22)
  {
    case 1:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C151928C();
      uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v9, v32, v31);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v45;
      sub_1C0680A6C(1, v44, (uint64_t)v9);
      uint64_t v30 = (uint64_t)v9;
      break;
    case 2:
      *(void *)&long long v46 = v44;
      *((void *)&v46 + 1) = v43;
      uint64_t v47 = v42;
      uint64_t v48 = v17;
      uint64_t v49 = v18;
      uint64_t v50 = v19;
      uint64_t v51 = v20;
      uint64_t v52 = v21;
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA08);
      uint64_t v35 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v41, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v45;
      sub_1BFCB087C(3, &v46, v35);
      goto LABEL_14;
    case 3:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CA98);
      uint64_t v35 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v40, v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v45;
      sub_1C0731458(2, v35);
LABEL_14:
      uint64_t v30 = v35;
      break;
    default:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1C151928C();
      uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v12, v28, v27);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v45;
      sub_1C06808D4(0, v44, v43, v42, (uint64_t)v12);
      uint64_t v30 = (uint64_t)v12;
      break;
  }
  sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v29, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCB087C(char a1, long long *a2, uint64_t a3)
{
  char v22 = a1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  void v16[2] = sub_1C0902EE4;
  _OWORD v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCB0A1C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAB90C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCB0A1C()
{
  unint64_t result = qword_1EB867430;
  if (!qword_1EB867430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867430);
  }
  return result;
}

uint64_t sub_1BFCB0A70()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCB0AC0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCB0B20()
{
  unint64_t result = qword_1EB88AB10;
  if (!qword_1EB88AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AB10);
  }
  return result;
}

uint64_t destroy for FormatIssueCoverNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD) {
    sub_1BFF04738(*(void *)(a1 + 32), *(void *)(a1 + 40), v2);
  }
  if (*(unsigned __int8 *)(a1 + 136) != 254) {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCB0BEC()
{
  sub_1BFCB14C4(0, &qword_1EB882ED8, (void (*)(uint64_t))type metadata accessor for FormatView);
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 24) = 2003134838;
  *(_OWORD *)(v1 + 56) = xmmword_1C1557FB0;
  *(void *)(v1 + 32) = 0xE400000000000000;
  *(void *)(v1 + 40) = sub_1BFE6BF2C;
  *(void *)(v1 + 48) = 0;
  *(void *)(v0 + 16) = v1;
  sub_1BFCB14C4(0, &qword_1EB8899B8, (void (*)(uint64_t))type metadata accessor for FormatButton);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 0x6E6F74747562;
  *(_OWORD *)(v3 + 56) = xmmword_1C1557FA0;
  *(void *)(v3 + 32) = 0xE600000000000000;
  *(void *)(v3 + 40) = sub_1BFE6C2B8;
  *(void *)(v3 + 48) = 0;
  *(void *)(v0 + 24) = v3;
  sub_1BFCB14C4(0, &qword_1EB8899E0, (void (*)(uint64_t))type metadata accessor for FormatImageView);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = 0x6567616D69;
  *(_OWORD *)(v4 + 56) = xmmword_1C1557FB0;
  *(void *)(v4 + 32) = 0xE500000000000000;
  *(void *)(v4 + 40) = sub_1BFE6BF44;
  *(void *)(v4 + 48) = 0;
  *(void *)(v0 + 32) = v4;
  sub_1BFCB14C4(0, &qword_1EB8899B0, (void (*)(uint64_t))type metadata accessor for FormatLabel);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = 0x6C6562616CLL;
  *(_OWORD *)(v5 + 56) = xmmword_1C1557FB0;
  *(void *)(v5 + 32) = 0xE500000000000000;
  *(void *)(v5 + 40) = sub_1BFE6BF5C;
  *(void *)(v5 + 48) = 0;
  *(void *)(v0 + 40) = v5;
  sub_1BFCB14C4(0, &qword_1EB889A00, (void (*)(uint64_t))type metadata accessor for FormatLayoutView);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = 0x695674756F79616CLL;
  *(_OWORD *)(v6 + 56) = xmmword_1C1557FA0;
  *(void *)(v6 + 32) = 0xEA00000000007765;
  *(void *)(v6 + 40) = sub_1BFE6C288;
  *(void *)(v6 + 48) = 0;
  *(void *)(v0 + 48) = v6;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1557FA0;
  sub_1BFCB14C4(0, &qword_1EB8899F0, (void (*)(uint64_t))type metadata accessor for FormatStateView);
  long long v8 = (void *)swift_allocObject();
  v8[2] = v2;
  v8[3] = 0x6569566574617473;
  void v8[7] = v7;
  v8[8] = 0;
  void v8[4] = 0xE900000000000077;
  v8[5] = sub_1BFE6C2A0;
  v8[6] = 0;
  *(void *)(v0 + 56) = v8;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C153AB20;
  sub_1BFCB14C4(0, &qword_1EB8899D0, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaView);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  strcpy((char *)(v10 + 24), "layeredMedia");
  *(void *)(v10 + 56) = v9;
  *(void *)(v10 + 64) = 0;
  *(unsigned char *)(v10 + 37) = 0;
  *(_WORD *)(v10 + 38) = -5120;
  *(void *)(v10 + 40) = sub_1BFE6D360;
  *(void *)(v10 + 48) = 0;
  *(void *)(v0 + 64) = v10;
  sub_1BFCB14C4(0, &qword_1EB8899F8, (void (*)(uint64_t))type metadata accessor for FormatVideoView);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v2;
  *(void *)(v11 + 24) = 0x6F65646976;
  *(_OWORD *)(v11 + 56) = 0u;
  *(void *)(v11 + 32) = 0xE500000000000000;
  *(void *)(v11 + 40) = sub_1C11F3478;
  *(void *)(v11 + 48) = 0;
  *(void *)(v0 + 72) = v11;
  sub_1BFCB14C4(0, &qword_1EB889998, MEMORY[0x1E4FAD7F0]);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = 1633905005;
  *(_OWORD *)(v12 + 56) = 0u;
  *(void *)(v12 + 32) = 0xE400000000000000;
  *(void *)(v12 + 40) = sub_1C11F3460;
  *(void *)(v12 + 48) = 0;
  *(void *)(v0 + 80) = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C153AB20;
  sub_1BFCB14C4(0, &qword_1EB8899C0, (void (*)(uint64_t))type metadata accessor for FormatProgressBarView);
  char v14 = (void *)swift_allocObject();
  v14[2] = v2;
  void v14[3] = 0x73736572676F7270;
  v14[7] = v13;
  v14[8] = 0;
  void v14[4] = 0xE800000000000000;
  v14[5] = sub_1BFE6D390;
  v14[6] = 0;
  *(void *)(v0 + 88) = v14;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C153AB20;
  sub_1BFCB14C4(0, &qword_1EB8899C8, (void (*)(uint64_t))type metadata accessor for FormatProgressPieView);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v2;
  _OWORD v16[3] = 0x73736572676F7270;
  v16[7] = v15;
  v16[8] = 0;
  void v16[4] = 0xEB00000000656950;
  v16[5] = sub_1BFE6D378;
  v16[6] = 0;
  *(void *)(v0 + 96) = v16;
  sub_1BFCB14C4(0, &qword_1EB8899D8, (void (*)(uint64_t))type metadata accessor for FormatProgressCircleView);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  strcpy((char *)(v17 + 24), "progressCircle");
  *(_OWORD *)(v17 + 56) = 0u;
  *(unsigned char *)(v17 + 39) = -18;
  *(void *)(v17 + 40) = sub_1C11F3448;
  *(void *)(v17 + 48) = 0;
  *(void *)(v0 + 104) = v17;
  sub_1BFCB14C4(0, &qword_1EB8899E8, (void (*)(uint64_t))type metadata accessor for FormatSplitView);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  *(void *)(v18 + 24) = 0x65695674696C7073;
  *(_OWORD *)(v18 + 56) = 0u;
  *(void *)(v18 + 32) = 0xE900000000000077;
  *(void *)(v18 + 40) = sub_1C11F3430;
  *(void *)(v18 + 48) = 0;
  *(void *)(v0 + 112) = v18;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C153AB20;
  sub_1BFCB14C4(0, &qword_1EB8899A0, MEMORY[0x1E4FABCD0]);
  long long v20 = (void *)swift_allocObject();
  v20[2] = v2;
  v20[3] = 0x746E656964617267;
  v20[7] = v19;
  v20[8] = 0;
  v20[4] = 0xE800000000000000;
  v20[5] = sub_1BFE6D3A8;
  v20[6] = 0;
  *(void *)(v0 + 120) = v20;
  sub_1BFCB14C4(0, (unint64_t *)&unk_1EB882AA8, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBanner);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  *(void *)(v21 + 24) = 0x65726F736E6F7073;
  *(_OWORD *)(v21 + 56) = 0u;
  *(void *)(v21 + 32) = 0xEF72656E6E614264;
  *(void *)(v21 + 40) = sub_1C11F3418;
  *(void *)(v21 + 48) = 0;
  *(void *)(v0 + 128) = v21;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C153AB20;
  sub_1BFCB14C4(0, &qword_1EB8899A8, (void (*)(uint64_t))type metadata accessor for IssueCoverView);
  uint64_t v23 = (void *)swift_allocObject();
  void v23[2] = v2;
  v23[3] = 0xD000000000000010;
  v23[7] = v22;
  v23[8] = 0;
  v23[4] = 0x80000001C16380D0;
  void v23[5] = sub_1BFE6CBD0;
  v23[6] = 0;
  *(void *)(v0 + 136) = v23;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C153AB20;
  unint64_t v25 = (void *)swift_allocObject();
  v25[2] = v2;
  void v25[3] = 0xD000000000000017;
  v25[7] = v24;
  v25[8] = 0;
  v25[4] = 0x80000001C16380F0;
  v25[5] = sub_1BFE6CD20;
  v25[6] = 0;
  *(void *)(v0 + 144) = v25;
  *(unsigned char *)(v0 + 152) = 1;
  id v26 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v26, sel_addObserver_selector_name_object_, v0, sel_didReceiveMemoryWarning, *MEMORY[0x1E4FB2650], 0);

  return v0;
}

void sub_1BFCB14C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for FormatLayoutViewPool();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for FormatLayoutViewPool()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFCB1540()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCB15A0()
{
  unint64_t result = qword_1EB8775B8;
  if (!qword_1EB8775B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8775B8);
  }
  return result;
}

uint64_t sub_1BFCB15F4(void *a1, uint64_t a2)
{
  return FormatSwitchValue.encode(to:)(a1, a2);
}

uint64_t sub_1BFCB160C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFCB1638(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCB1638(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0900D1C();
  uint64_t v5 = v4;
  uint64_t v62 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C087254C();
  sub_1C085F050(&qword_1EB86CFA8, (void (*)(uint64_t))sub_1C087254C);
  sub_1C1520EBC();
  if (v1)
  {
LABEL_10:
    sub_1C0038728(a1, v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v2;
  }
  uint64_t v8 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v9 = sub_1C1520EAC();
  LOBYTE(v8) = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v62;
  uint64_t v11 = v7;
  if (v8)
  {
    uint64_t v12 = sub_1C152070C();
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      char v14 = (unsigned char *)(v12 + 48);
      while (*v14 != 1)
      {
        v14 += 24;
        if (!--v13) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *((void *)v14 - 1);
      uint64_t v50 = *((void *)v14 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v19 = swift_bridgeObjectRelease();
      uint64_t v20 = v10;
      MEMORY[0x1F4188790](v19);
      *(&v36 - 4) = (uint64_t)&_s10CodingKeysON_200;
      *(&v36 - 3) = sub_1C08725D0();
      *(&v36 - 2) = sub_1BFCB1FE8();
      *(&v36 - 1) = sub_1C0872624();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B69380);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v2 = swift_allocError();
      uint64_t v22 = v50;
      *(void *)uint64_t v23 = v50;
      *(void *)(v23 + 8) = v18;
      *(void *)(v23 + 16) = v21;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v18, 1);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v5);
      a1 = v51;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCB1F40();
  long long v52 = 0uLL;
  char v53 = 0;
  sub_1C15206EC();
  uint64_t v50 = *((void *)&v56 + 1);
  uint64_t v15 = v56;
  uint64_t v16 = v57;
  uint64_t v17 = v59;
  uint64_t v47 = v58;
  uint64_t v48 = v60;
  int v49 = v61;
  long long v52 = xmmword_1C153AB20;
  char v53 = 0;
  sub_1BFFC82FC();
  sub_1C152065C();
  uint64_t v44 = v15;
  uint64_t v45 = v16;
  uint64_t v46 = v17;
  uint64_t v43 = *((void *)&v56 + 1);
  uint64_t v24 = v56;
  LODWORD(v16) = v57;
  long long v52 = xmmword_1C1557FA0;
  char v53 = 0;
  sub_1C152065C();
  uint64_t v42 = v24;
  int v41 = v16;
  long long v25 = v56;
  LODWORD(v16) = v57;
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v56 = xmmword_1C1557FB0;
  LOBYTE(v57) = 0;
  unint64_t v40 = sub_1BFE94094();
  sub_1C152065C();
  long long v38 = v25;
  int v39 = v16;
  uint64_t v27 = v52;
  long long v56 = xmmword_1C1557FD0;
  LOBYTE(v57) = 0;
  sub_1C152065C();
  LOBYTE(v16) = v49;
  uint64_t v36 = v52;
  uint64_t v37 = v27;
  long long v56 = xmmword_1C1557FC0;
  LOBYTE(v57) = 0;
  sub_1C152065C();
  uint64_t v28 = v52;
  long long v56 = xmmword_1C1557FE0;
  LOBYTE(v57) = 0;
  sub_1C152065C();
  uint64_t v29 = v52;
  long long v54 = xmmword_1C1557FF0;
  char v55 = 0;
  sub_1BFCB1F94();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v5);
  sub_1BFE99AAC((uint64_t)&v56, (uint64_t)&v52, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
  type metadata accessor for FormatAnimationNodeSpringAnimation();
  uint64_t v2 = swift_allocObject();
  uint64_t v30 = v50;
  *(void *)(v2 + 16) = v44;
  *(void *)(v2 + 24) = v30;
  uint64_t v31 = v47;
  *(void *)(v2 + 32) = v45;
  *(void *)(v2 + 40) = v31;
  uint64_t v32 = v48;
  *(void *)(v2 + 48) = v46;
  *(void *)(v2 + 56) = v32;
  *(unsigned char *)(v2 + 64) = v16;
  uint64_t v33 = v43;
  *(void *)(v2 + 72) = v42;
  *(void *)(v2 + 80) = v33;
  *(unsigned char *)(v2 + 88) = v41;
  uint64_t v34 = *((void *)&v38 + 1);
  *(void *)(v2 + 96) = v38;
  *(void *)(v2 + 104) = v34;
  *(unsigned char *)(v2 + 112) = v39;
  uint64_t v35 = v36;
  *(void *)(v2 + 120) = v37;
  *(void *)(v2 + 128) = v35;
  *(void *)(v2 + 136) = v28;
  *(void *)(v2 + 144) = v29;
  sub_1BFE99AAC((uint64_t)&v52, v2 + 152, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v2;
}

uint64_t type metadata accessor for FormatAnimationNodeSpringAnimation()
{
  return self;
}

unint64_t sub_1BFCB1F40()
{
  unint64_t result = qword_1EB8608E0;
  if (!qword_1EB8608E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8608E0);
  }
  return result;
}

unint64_t sub_1BFCB1F94()
{
  unint64_t result = qword_1EB85EAD0;
  if (!qword_1EB85EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EAD0);
  }
  return result;
}

unint64_t sub_1BFCB1FE8()
{
  unint64_t result = qword_1EB864760;
  if (!qword_1EB864760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864760);
  }
  return result;
}

uint64_t FormatGroupNodeStyle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v72 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v72 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (char *)&v72 - v10;
  MEMORY[0x1F4188790](v11);
  char v75 = (char *)&v72 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v76 = (char *)&v72 - v14;
  MEMORY[0x1F4188790](v15);
  unint64_t v77 = (char *)&v72 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))((char *)&v72 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v79 = (uint64_t (*)(uint64_t))((char *)&v72 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v72 - v22;
  sub_1C08659AC();
  MEMORY[0x1F4188790](v24 - 8);
  id v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1C0865AD4();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1C085F050(&qword_1EB891E90, (void (*)(uint64_t))sub_1C0865AD4);
  sub_1BFEFBD78(v4, v32, v27, v4, v30, (uint64_t)&type metadata for FormatVersions.StarSky, v28, (uint64_t)v26, v31, (uint64_t)&off_1F1C39BA8);
  swift_beginAccess();
  uint64_t v33 = v2[2];
  uint64_t v34 = v2[3];
  uint64_t v80 = v2;
  uint64_t v35 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C151928C();
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CA98);
  uint64_t v38 = *(void *)(v36 - 8);
  int v39 = *(void (**)(char *))(v38 + 16);
  unint64_t v40 = (char *)(v38 + 16);
  uint64_t v81 = v37;
  v39(v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v83;
  sub_1C06D1004(v33, v34, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1C01B158C, 0);
  if (v41)
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v55 = (uint64_t)v26;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v42 = v79;
    uint64_t v43 = v80[4];
    uint64_t v44 = v80[5];
    ((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t))v39)(v79, v81, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v45 = v43;
    uint64_t v46 = v26;
    sub_1C06BB200(v45, v44, 1, 0, 0, (uint64_t)v42, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v42, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v47 = v80;
    swift_beginAccess();
    uint64_t v48 = (uint64_t)v78;
    ((void (*)(void, uint64_t, uint64_t))v39)(v78, v81, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = swift_bridgeObjectRetain();
    sub_1C06D1244(v49, 2, 0, 0);
    uint64_t v50 = v36;
    uint64_t v51 = v47;
    uint64_t v52 = v50;
    sub_1BFEFEB68(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t)v77;
    uint64_t v83 = v52;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v77, v81, v52);
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = swift_bridgeObjectRetain();
    sub_1C070BC88(v54, 3, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v76;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v76, v81, v83);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = swift_bridgeObjectRetain();
    sub_1C070BF00(v58, 4, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
    uint64_t v79 = type metadata accessor for FormatVersionRequirement;
    uint64_t v59 = v39;
    sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v60 = v40;
    uint64_t v61 = v51[9];
    uint64_t v62 = v51[10];
    LOBYTE(v44) = *((unsigned char *)v51 + 88);
    uint64_t v63 = (uint64_t)v75;
    uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v59;
    unint64_t v77 = v60;
    ((void (*)(char *, uint64_t, uint64_t))v59)(v75, v81, v83);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF6828(v61, v62, v44);
    sub_1C070C164(v61, v62, v44, 5, 0, 0, v63, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v63, v79);
    sub_1BFEF68AC(v61, v62, v44);
    sub_1BFE99AAC((uint64_t)(v51 + 12), (uint64_t)v82, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
    uint64_t v64 = (uint64_t)v74;
    v78(v74, v81, v83);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C070C3D8((uint64_t)v82, 6, 0, 0, v64, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v65 = (uint64_t)v46;
    LOBYTE(v64) = *((unsigned char *)v51 + 177);
    uint64_t v66 = (uint64_t)v73;
    v78(v73, v81, v83);
    swift_storeEnumTagMultiPayload();
    sub_1C070C70C(v64, 7, 0, 0, v66, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
    uint64_t v67 = v78;
    uint64_t v68 = v83;
    unsigned __int8 v69 = *((unsigned char *)v51 + 178);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v70 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CA08);
    uint64_t v71 = (uint64_t)v72;
    v67(v72, v70, v68);
    swift_storeEnumTagMultiPayload();
    sub_1C070C70C(v69, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v71, type metadata accessor for FormatVersionRequirement);
    uint64_t v55 = v65;
  }
  return sub_1BFEFEB68(v55, (uint64_t (*)(void))sub_1C08659AC);
}

uint64_t sub_1BFCB2A64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedDateRange.init(from:)(a1, a2);
}

uint64_t FeedDateRange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C151631C();
  uint64_t v26 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v27 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCB2E38(0, (unint64_t *)&unk_1EB85C5A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = type metadata accessor for FeedDateRange();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB30C8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v12;
  uint64_t v23 = v6;
  uint64_t v24 = v14;
  char v32 = 0;
  sub_1BFE0D898(&qword_1EB871168);
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  uint64_t v17 = v30;
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v24, v15, v17);
  char v31 = 1;
  uint64_t v18 = (uint64_t)v23;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v16);
  uint64_t v19 = (uint64_t)v24;
  sub_1BFCB311C(v18, (uint64_t)&v24[*(int *)(v22 + 20)]);
  sub_1BFF979B0(v19, v25, (uint64_t (*)(void))type metadata accessor for FeedDateRange);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BFCB3020(v19);
}

void sub_1BFCB2E38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFCB30C8();
    unint64_t v7 = a3(a1, &type metadata for FeedDateRange.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void FCDateRange.init(dateRange:)(uint64_t a1)
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_1C151621C();
  uint64_t v6 = type metadata accessor for FeedDateRange();
  sub_1BFF979B0(a1 + *(int *)(v6 + 20), (uint64_t)v4, (uint64_t (*)(void))sub_1BFF97C40);
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
  {
    uint64_t v9 = (void *)sub_1C151621C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  id v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStartDate_endDate_, v5, v9);

  if (v10) {
    sub_1BFCB3020(a1);
  }
  else {
    __break(1u);
  }
}

uint64_t sub_1BFCB3020(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedDateRange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FeedDateRange()
{
  uint64_t result = qword_1EB85B4C0;
  if (!qword_1EB85B4C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFCB30C8()
{
  unint64_t result = qword_1EB85B4A8;
  if (!qword_1EB85B4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B4A8);
  }
  return result;
}

uint64_t sub_1BFCB311C(uint64_t a1, uint64_t a2)
{
  sub_1BFEE9D14(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1BFCB31B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1BFCB31DC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *sub_1BFCB31DC(void *a1)
{
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v51 = (char *)&v42 - v3;
  sub_1C08EB72C(0, (unint64_t *)&qword_1EB87C780);
  uint64_t v5 = v4;
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - v6;
  sub_1C08FB28C();
  uint64_t v9 = v8;
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0889058();
  sub_1C085F050(&qword_1EB891CD0, (void (*)(uint64_t))sub_1C0889058);
  uint64_t v12 = (uint64_t)v52;
  sub_1C1520EBC();
  uint64_t v13 = (void *)v12;
  if (v12)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v13;
  }
  uint64_t v14 = a1[3];
  uint64_t v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  uint64_t v15 = sub_1C1520EAC();
  LOBYTE(v14) = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v9;
  uint64_t v17 = v51;
  uint64_t v18 = v7;
  if (v14)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v25 = v11;
      uint64_t v26 = v16;
      uint64_t v28 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v29);
      *(&v42 - 4) = (uint64_t)&_s10CodingKeysON_137;
      *(&v42 - 3) = sub_1C08890DC();
      *(&v42 - 2) = sub_1BFCB3940();
      *(&v42 - 1) = sub_1C0889130();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B85038);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v31 = swift_allocError();
      *(void *)uint64_t v32 = v28;
      *(void *)(v32 + 8) = v27;
      *(void *)(v32 + 16) = v30;
      uint64_t v13 = (void *)v31;
      *(_OWORD *)(v32 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v28, v27, 1);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v26);
      a1 = v52;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C08FB28C);
  uint64_t v24 = v23;
  long long v55 = xmmword_1C153AB20;
  char v56 = 0;
  uint64_t v42 = sub_1C152060C();
  uint64_t v45 = v33;
  uint64_t v43 = v22;
  uint64_t v46 = v24;
  long long v44 = xmmword_1C1557FA0;
  long long v55 = xmmword_1C1557FA0;
  char v56 = 0;
  char v34 = sub_1C152071C();
  uint64_t v35 = v50;
  if (v34)
  {
    long long v53 = v44;
    char v54 = 0;
    sub_1C08EB810();
    sub_1C15206EC();
    uint64_t v37 = v48;
    uint64_t v36 = v49;
    *(void *)&long long v44 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v5);
  }
  else
  {
    *(void *)&long long v44 = MEMORY[0x1E4FBC860];
    uint64_t v37 = v48;
    uint64_t v36 = v49;
  }
  long long v55 = xmmword_1C1557FB0;
  char v56 = 0;
  sub_1BFCAB4C0();
  sub_1C15206EC();
  uint64_t v39 = sub_1C1517E5C();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v36);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v16);
  type metadata accessor for FormatGeometryNode();
  uint64_t v13 = (void *)swift_allocObject();
  swift_beginAccess();
  uint64_t v40 = v46;
  v13[2] = v43;
  void v13[3] = v40;
  uint64_t v41 = v45;
  void v13[4] = v42;
  v13[5] = v41;
  swift_beginAccess();
  v13[6] = v44;
  swift_beginAccess();
  void v13[7] = v39;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return v13;
}

uint64_t type metadata accessor for FormatGeometryNode()
{
  return self;
}

unint64_t sub_1BFCB3940()
{
  unint64_t result = qword_1EB8885B0;
  if (!qword_1EB8885B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8885B0);
  }
  return result;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFCB3A60(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  sub_1BFCB3A60(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCB3A60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFD3E320(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFCB3ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1BFEEF3DC(0, &qword_1EB87C838, (uint64_t (*)(uint64_t))sub_1C0025BE4, MEMORY[0x1E4FAD778]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1BFEEF3DC(0, (unint64_t *)&unk_1EB87C890, (uint64_t (*)(uint64_t))sub_1C0025BE4, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD770], v6);
  uint64_t result = sub_1C151C9BC();
  *a4 = result;
  return result;
}

uint64_t sub_1BFCB3C10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = sub_1C151631C();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C1520E9C();
  if (!v2)
  {
    uint64_t v43 = v12;
    long long v44 = v6;
    uint64_t v42 = v9;
    __swift_project_boxed_opaque_existential_1(v46, v46[3]);
    uint64_t v14 = sub_1C1520ABC();
    uint64_t v16 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    if (qword_1EB87B1B8 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_1EB93C668;
    uint64_t v18 = (void *)sub_1C151E5EC();
    uint64_t v19 = &selRef_setSpacing_;
    id v20 = objc_msgSend(v17, sel_dateFromString_, v18);

    uint64_t v21 = v47;
    uint64_t v40 = a1;
    if (v20)
    {
      uint64_t v22 = v44;
      sub_1C15162BC();

      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      uint64_t v24 = (uint64_t)v43;
      v23(v43, v22, v4);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v41(v24, 0, 1, v4);
      uint64_t v25 = v21;
      uint64_t v26 = v4;
      uint64_t v19 = &selRef_setSpacing_;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v24, 1, v4) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = v45;
        uint64_t v28 = v24;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v27, v28, v26);
      }
    }
    else
    {
      uint64_t v24 = (uint64_t)v43;
      uint64_t v26 = v4;
      uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
      v41((uint64_t)v43, 1, 1, v4);
    }
    sub_1BFF97BE4(v24);
    if (qword_1EB85E580 != -1) {
      swift_once();
    }
    uint64_t v29 = (void *)qword_1EB93C268;
    uint64_t v43 = (char *)v14;
    uint64_t v30 = (void *)sub_1C151E5EC();
    id v31 = objc_msgSend(v29, v19[481], v30);

    uint64_t v32 = v44;
    uint64_t v33 = v45;
    uint64_t v34 = (uint64_t)v42;
    if (v31)
    {
      sub_1C15162BC();

      uint64_t v35 = v32;
      uint64_t v36 = v47;
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      v23((char *)v34, v35, v26);
      v41(v34, 0, 1, v26);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v26) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = v33;
        uint64_t v28 = v34;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v27, v28, v26);
      }
    }
    else
    {
      v41((uint64_t)v42, 1, 1, v26);
    }
    sub_1BFF97BE4(v34);
    __swift_project_boxed_opaque_existential_1(v40, v40[3]);
    uint64_t v37 = sub_1C1520E7C();
    sub_1C0CC9E44();
    swift_allocError();
    *uint64_t v38 = v43;
    v38[1] = v16;
    v38[2] = v37;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BFCB40A8(void *a1)
{
  return FormatLineCap.encode(to:)(a1);
}

uint64_t FormatLineCap.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v22 = (char *)&v21 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v21 = (char *)&v21 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  int v24 = *v1;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C151928C();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB93CAB0);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v16(v11, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v28;
  sub_1BFE97CE8((uint64_t)v11, (uint64_t)sub_1C01B158C, 0, v12, v13);
  uint64_t result = sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v17)
  {
    uint64_t v19 = v25[3];
    uint64_t v28 = v25[4];
    if (v24)
    {
      __swift_project_boxed_opaque_existential_1(v25, v19);
      uint64_t v20 = (uint64_t)v22;
      v16(v22, v15, v14);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v25, v19);
      uint64_t v20 = (uint64_t)v21;
      v16(v21, v15, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_1BFE97CE8(v20, (uint64_t)sub_1C01B158C, 0, v19, v28);
    sub_1BFEFEB68(v20, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t sub_1BFCB4544()
{
  sub_1BFCB459C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCB459C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v2 = sub_1C151CC9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v4 = sub_1C151A79C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v6 = sub_1C151BCEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 168);
  uint64_t v8 = sub_1C151D99C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t _s8NewsFeed0B23SectionPositionProviderC07sectionD03for2inSiSS_5TeaUI9BlueprintVyxq_Gt0I10Foundation12IdentifiableRzAG9ModelableR_r0_lF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v11 = sub_1C151AA8C();
  uint64_t v21 = sub_1C151FD8C();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v20 - v17;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  sub_1C151CC9C();
  sub_1C151CCBC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v14, v11);
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C151F18C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v11);
  if (v25) {
    return 0;
  }
  return v24;
}

void *initializeWithCopy for FeedGroupEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BFCB4A94(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7368564;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7368564;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x676E696461656CLL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x676E696C69617274;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6D6F74746F62;
      break;
    case 4:
      uint64_t v5 = 7105633;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x676E696461656CLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x676E696C69617274) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6D6F74746F62;
      goto LABEL_12;
    case 4:
      if (v5 != 7105633) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void *initializeWithCopy for SportsConfigResourceParameter(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FeedGroupEntity.ManifestEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

id sub_1BFCB4C9C(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v5 - 8);
  void v18[3] = type metadata accessor for SocialLayerSharedItemCenter();
  v18[4] = &protocol witness table for SocialLayerSharedItemCenter;
  v18[0] = a1;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock;
  char v7 = a2;
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  *(void *)&a2[v6] = sub_1C1517EBC();
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs;
  *(void *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  uint64_t v9 = MEMORY[0x1E4FBC868];
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID] = MEMORY[0x1E4FBC868];
  sub_1C15161BC();
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers] = MEMORY[0x1E4FBC860];
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID] = v9;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingTask] = 0;
  sub_1BFC66384((uint64_t)v18, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter]);

  v17.receiver = v7;
  v17.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v17, sel_init);
  uint64_t v11 = self;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  aBlock[4] = sub_1C007C554;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_36;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v10;
  swift_release();
  objc_msgSend(v11, sel_scheduleLowPriorityBlockForMainThread_, v13);

  _Block_release(v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v14;
}

uint64_t sub_1BFCB4EEC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C122356C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCB4F50(uint64_t a1, void (*a2)(void, __n128))
{
  uint64_t v3 = sub_1C1518DEC();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0, v5);
  sub_1C1518AFC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4FAB028], v3);
  sub_1C1517E1C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1BFCB5084()
{
  uint64_t result = 0x6E656E6F706D6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F74617265706FLL;
      break;
    case 2:
      uint64_t result = 0x65756C6176;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCB50FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1C151829C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1C151828C();
}

uint64_t FormatPrefetchResources.all.getter()
{
  uint64_t v3 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1BFCB51A0(v1);
  return v3;
}

uint64_t sub_1BFCB51A0(uint64_t a1)
{
  return sub_1BFEB9484(a1, (uint64_t (*)(void))sub_1BFED9EFC, type metadata accessor for FormatResource);
}

uint64_t sub_1BFCB51CC(uint64_t a1)
{
  sub_1BFCB55CC(0, &qword_1EB871368, (uint64_t (*)(void))sub_1BFCB56FC, (uint64_t)&type metadata for GapViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v8 - v5;
  v8[1] = a1;
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAB9E0], v3);
  sub_1BFCB5634(&qword_1EB8711F0, &qword_1EB8711F8, MEMORY[0x1E4FAB4D0]);
  sub_1BFE131FC(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BFCB53DC(uint64_t a1)
{
  sub_1BFCB55CC(0, &qword_1EB871368, (uint64_t (*)(void))sub_1BFCB56FC, (uint64_t)&type metadata for GapViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v9 - v5);
  v9[1] = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x405E000000000000;
  *uint64_t v6 = v7;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FABA08], v3);
  sub_1BFCB5634(&qword_1EB8712D8, &qword_1EB8712E0, MEMORY[0x1E4FAB6F0]);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1BFCB55CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1BFCB5634(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFCB5678(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFCB5678(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for GapViewLayout;
    v8[1] = &type metadata for GapViewLayout.Attributes;
    void v8[2] = sub_1BFCB56FC();
    v8[3] = sub_1BFCB5750();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1BFCB56FC()
{
  unint64_t result = qword_1EB8747E0;
  if (!qword_1EB8747E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8747E0);
  }
  return result;
}

unint64_t sub_1BFCB5750()
{
  unint64_t result = qword_1EB8747C8;
  if (!qword_1EB8747C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8747C8);
  }
  return result;
}

unint64_t sub_1BFCB57A4()
{
  unint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x615272656E726F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCB5860(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFFE4394(0, &qword_1EB879E50, MEMORY[0x1E4FBB320]);
  sub_1BFCCF840((unint64_t *)&qword_1EB86B0F8, &qword_1EB866AF0);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BFCB5964(void *a1)
{
  return FormatSupplementary.Kind.encode(to:)(a1);
}

uint64_t FormatSupplementary.Kind.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v20 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v19[1] = (char *)v19 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v19 - v8;
  int v21 = *v1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB93CAB0);
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = v25;
  sub_1BFE97CE8((uint64_t)v9, (uint64_t)sub_1C01B158C, 0, v10, v11);
  uint64_t result = sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    uint64_t v17 = v22[3];
    uint64_t v25 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v17);
    uint64_t v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BFE97CE8(v18, (uint64_t)sub_1C01B158C, 0, v17, v25);
    sub_1BFEFEB68(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  return result;
}

uint64_t sub_1BFCB5D08(void *a1)
{
  return FormatResizeConstraint.Dimension.encode(to:)(a1);
}

uint64_t FormatResizeConstraint.Dimension.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v20 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v19[1] = (char *)v19 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v19 - v8;
  int v21 = *v1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB93CAB0);
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = v25;
  sub_1BFE97CE8((uint64_t)v9, (uint64_t)sub_1C01B158C, 0, v10, v11);
  uint64_t result = sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    uint64_t v17 = v22[3];
    uint64_t v25 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v17);
    uint64_t v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BFE97CE8(v18, (uint64_t)sub_1C01B158C, 0, v17, v25);
    sub_1BFEFEB68(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  return result;
}

uint64_t sub_1BFCB60B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTagIconStyle.init(from:)(a1, a2);
}

uint64_t FormatTagIconStyle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1C08BE4E0();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BE574();
  sub_1C085F050(&qword_1EB891D20, (void (*)(uint64_t))sub_1C08BE574);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_18:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v27 = v7;
  uint64_t v10 = v28;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if (v12)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *((void *)v15 - 2);
      uint64_t v19 = *((void *)v15 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v20);
      *((void *)&v26 - 4) = &_s10CodingKeysON_26;
      *((void *)&v26 - 3) = sub_1C08BE5F8();
      *((void *)&v26 - 2) = sub_1BFCB65D0();
      *((void *)&v26 - 1) = sub_1C08BE64C();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B886A0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v18;
      *(void *)(v22 + 8) = v19;
      *(void *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
      goto LABEL_18;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v29 = 0uLL;
  char v30 = 0;
  if (sub_1C152071C())
  {
    long long v31 = 0uLL;
    char v32 = 0;
    sub_1C08BE6A0();
    sub_1C15206EC();
    char v16 = v33;
  }
  else
  {
    char v16 = 1;
  }
  long long v26 = xmmword_1C153AB20;
  long long v31 = xmmword_1C153AB20;
  char v32 = 0;
  if (sub_1C152071C())
  {
    long long v29 = v26;
    char v30 = 0;
    sub_1BFE9439C();
    sub_1C15206EC();
    uint64_t v17 = v33;
  }
  else
  {
    if (qword_1EB8826F8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v17 = qword_1EB88FBF8;
    swift_retain();
  }
  sub_1C07F13A4((void (*)(void))sub_1C08BE4E0, (uint64_t *)&v31);
  uint64_t v24 = v31;
  sub_1C07F14F0((uint64_t *)&v31);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
  uint64_t v25 = v31;
  *(unsigned char *)uint64_t v10 = v16;
  *(void *)(v10 + 8) = v17;
  *(void *)(v10 + 16) = v24;
  *(void *)(v10 + 24) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCB65D0()
{
  unint64_t result = qword_1EB888848;
  if (!qword_1EB888848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888848);
  }
  return result;
}

uint64_t sub_1BFCB6624()
{
  sub_1C15183EC();
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB896660);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1BFCB6824(0, &qword_1EB896730);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1C0090478();
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1BFCB6824(0, &qword_1EB896678);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183EC();
  type metadata accessor for FormatLayoutResizingProvider();
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C15183FC();
  sub_1C1518AEC();
  return swift_release();
}

uint64_t sub_1BFCB6824(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BFCB6874()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCB68C4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCB6924()
{
  unint64_t result = qword_1EB866CE8;
  if (!qword_1EB866CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866CE8);
  }
  return result;
}

uint64_t sub_1BFCB6978(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v119 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 48);
  if (v3 == 2) {
    LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v116 = *(void *)(v1 + 32);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 56);
  swift_beginAccess();
  uint64_t v117 = a1;
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v138 = (void *)MEMORY[0x1E4FBC868];
  int64_t v9 = *(void *)(v7 + 16);
  if (__OFADD__(v9, *(void *)(v8 + 16))) {
    goto LABEL_81;
  }
  int64_t v126 = *(void *)(v8 + 16);
  uint64_t v114 = v4;
  char v115 = v3;
  sub_1C006586C();
  uint64_t v120 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E3AC();
  uint64_t v137 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v125 = v6;
  uint64_t v118 = v8;
  if (!v10) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = (char *)(v7 + 67);
  do
  {
    uint64_t v132 = v10;
    uint64_t v12 = *(void *)(v11 - 35);
    uint64_t v13 = *(void *)(v11 - 27);
    char v135 = *(v11 - 19);
    uint64_t v14 = *(void *)(v11 - 11);
    uint64_t v15 = *(unsigned __int16 *)(v11 - 3) | (*(v11 - 1) << 16);
    char v16 = *v11;
    swift_bridgeObjectRetain();
    sub_1BFF9C7FC(v14, v15);
    swift_bridgeObjectRetain();
    sub_1BFF9C7FC(v14, v15);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = sub_1BFEF2D8C(v12, v13);
    uint64_t v20 = v138[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v23 = v18;
    if (v138[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C1071F28();
      }
    }
    else
    {
      sub_1C1060154(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_1BFEF2D8C(v12, v13);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_82;
      }
      unint64_t v19 = v24;
    }
    if (v23)
    {
      uint64_t v26 = v138[7] + 40 * v19;
      uint64_t v128 = *(void *)(v26 + 24);
      uint64_t v27 = *(unsigned __int16 *)(v26 + 32) | (*(unsigned __int8 *)(v26 + 34) << 16);
      swift_bridgeObjectRelease();
      sub_1BFF9C84C(v128, v27);
      *(void *)uint64_t v26 = v12;
      *(void *)(v26 + 8) = v13;
      *(unsigned char *)(v26 + 16) = v135;
      *(void *)(v26 + 24) = v14;
      *(unsigned char *)(v26 + 34) = BYTE2(v15);
      *(_WORD *)(v26 + 32) = v15;
      *(unsigned char *)(v26 + 35) = v16;
    }
    else
    {
      v138[(v19 >> 6) + 8] |= 1 << v19;
      uint64_t v28 = (uint64_t *)(v138[6] + 16 * v19);
      uint64_t *v28 = v12;
      v28[1] = v13;
      uint64_t v29 = v138[7] + 40 * v19;
      *(void *)uint64_t v29 = v12;
      *(void *)(v29 + 8) = v13;
      *(unsigned char *)(v29 + 16) = v135;
      *(void *)(v29 + 24) = v14;
      *(unsigned char *)(v29 + 34) = BYTE2(v15);
      *(_WORD *)(v29 + 32) = v15;
      *(unsigned char *)(v29 + 35) = v16;
      uint64_t v30 = v138[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_77;
      }
      v138[2] = v32;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v33 = v137[2];
    unint64_t v34 = v137[3];
    swift_bridgeObjectRetain();
    if (v33 >= v34 >> 1) {
      uint64_t v137 = sub_1BFEF692C((void *)(v34 > 1), v33 + 1, 1, v137);
    }
    v137[2] = v33 + 1;
    uint64_t v35 = &v137[2 * v33];
    v35[4] = v12;
    v35[5] = v13;
    swift_bridgeObjectRelease();
    sub_1BFF9C84C(v14, v15);
    v11 += 40;
    --v10;
  }
  while (v132 != 1);
  swift_bridgeObjectRelease();
  uint64_t v6 = v125;
  uint64_t v8 = v118;
LABEL_20:
  uint64_t v36 = sub_1BFEF692C(0, v126, 0, MEMORY[0x1E4FBC860]);
  uint64_t v37 = *(void *)(v8 + 16);
  if (!v37) {
    goto LABEL_57;
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = (char *)(v8 + 67);
  while (2)
  {
    uint64_t v42 = *(void *)(v38 - 35);
    uint64_t v43 = *(void *)(v38 - 27);
    char v130 = *(v38 - 19);
    uint64_t v44 = *(void *)(v38 - 11);
    uint64_t v45 = *(unsigned __int16 *)(v38 - 3) | (*(v38 - 1) << 16);
    char v46 = *v38;
    uint64_t v47 = v138[2];
    swift_bridgeObjectRetain();
    sub_1BFF9C7FC(v44, v45);
    uint64_t v136 = v36;
    uint64_t v129 = v44;
    char v133 = v46;
    if (!v47) {
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    unint64_t v48 = sub_1BFEF2D8C(v42, v43);
    if ((v49 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRetain();
      sub_1BFF9C7FC(v44, v45);
      swift_bridgeObjectRetain();
      char v66 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v68 = sub_1BFEF2D8C(v42, v43);
      uint64_t v69 = v138[2];
      BOOL v70 = (v67 & 1) == 0;
      uint64_t v71 = v69 + v70;
      if (__OFADD__(v69, v70)) {
        goto LABEL_76;
      }
      char v72 = v67;
      if (v138[3] >= v71)
      {
        if ((v66 & 1) == 0) {
          sub_1C1071F28();
        }
      }
      else
      {
        sub_1C1060154(v71, v66);
        unint64_t v73 = sub_1BFEF2D8C(v42, v43);
        if ((v72 & 1) != (v74 & 1)) {
          goto LABEL_82;
        }
        unint64_t v68 = v73;
      }
      if (v72)
      {
        uint64_t v75 = v138[7] + 40 * v68;
        uint64_t v76 = *(void *)(v75 + 24);
        uint64_t v77 = *(unsigned __int16 *)(v75 + 32) | (*(unsigned __int8 *)(v75 + 34) << 16);
        swift_bridgeObjectRelease();
        sub_1BFF9C84C(v76, v77);
        *(void *)uint64_t v75 = v42;
        *(void *)(v75 + 8) = v43;
        *(unsigned char *)(v75 + 16) = v130;
        *(void *)(v75 + 24) = v44;
        uint64_t v45 = v45;
        *(unsigned char *)(v75 + 34) = BYTE2(v45);
        *(_WORD *)(v75 + 32) = v45;
        *(unsigned char *)(v75 + 35) = v133;
      }
      else
      {
        v138[(v68 >> 6) + 8] |= 1 << v68;
        uint64_t v78 = (uint64_t *)(v138[6] + 16 * v68);
        *uint64_t v78 = v42;
        v78[1] = v43;
        uint64_t v79 = v138[7] + 40 * v68;
        *(void *)uint64_t v79 = v42;
        *(void *)(v79 + 8) = v43;
        *(unsigned char *)(v79 + 16) = v130;
        *(void *)(v79 + 24) = v44;
        *(unsigned char *)(v79 + 34) = BYTE2(v45);
        *(_WORD *)(v79 + 32) = v45;
        *(unsigned char *)(v79 + 35) = v133;
        uint64_t v80 = v138[2];
        BOOL v31 = __OFADD__(v80, 1);
        uint64_t v81 = v80 + 1;
        if (v31) {
          goto LABEL_78;
        }
        v138[2] = v81;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = v136;
      unint64_t v82 = v136[2];
      unint64_t v83 = v136[3];
      swift_bridgeObjectRetain();
      uint64_t v6 = v125;
      if (v82 >= v83 >> 1) {
        uint64_t v36 = sub_1BFEF692C((void *)(v83 > 1), v82 + 1, 1, v136);
      }
      v36[2] = v82 + 1;
      uint64_t v84 = &v36[2 * v82];
      v84[4] = v42;
      v84[5] = v43;
      swift_bridgeObjectRelease();
      sub_1BFF9C84C(v129, v45);
      goto LABEL_24;
    }
    unsigned int v127 = v45;
    uint64_t v50 = v138[7] + 40 * v48;
    uint64_t v124 = *(void *)v50;
    int v51 = *(unsigned __int8 *)(v50 + 16);
    uint64_t v52 = *(void *)(v50 + 24);
    unsigned __int16 v53 = *(unsigned __int8 *)(v50 + 34);
    uint64_t v54 = *(unsigned __int16 *)(v50 + 32) | (*(unsigned __int8 *)(v50 + 34) << 16);
    int v55 = *(unsigned __int8 *)(v50 + 35);
    uint64_t v122 = *(void *)(v50 + 8);
    swift_bridgeObjectRetain();
    sub_1BFF9C7FC(v52, v54);
    swift_bridgeObjectRelease();
    char v56 = v130;
    if (v51 != 2) {
      char v56 = v51;
    }
    char v121 = v56;
    uint64_t v131 = v52;
    unsigned int v123 = v54;
    if (v53 > 0xFEu)
    {
      LODWORD(v54) = v127;
      sub_1BFF9C7FC(v44, v127);
      uint64_t v52 = v44;
    }
    if (v55 == 3) {
      LOBYTE(v55) = v133;
    }
    swift_bridgeObjectRetain_n();
    sub_1BFF9C7FC(v131, v123);
    char v57 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v59 = sub_1BFEF2D8C(v124, v122);
    uint64_t v60 = v138[2];
    BOOL v61 = (v58 & 1) == 0;
    uint64_t v62 = v60 + v61;
    if (__OFADD__(v60, v61)) {
      goto LABEL_79;
    }
    char v63 = v58;
    if (v138[3] >= v62)
    {
      if ((v57 & 1) == 0) {
        sub_1C1071F28();
      }
    }
    else
    {
      sub_1C1060154(v62, v57);
      unint64_t v64 = sub_1BFEF2D8C(v124, v122);
      if ((v63 & 1) != (v65 & 1)) {
        goto LABEL_82;
      }
      unint64_t v59 = v64;
    }
    if (v63)
    {
      uint64_t v39 = v138[7] + 40 * v59;
      uint64_t v40 = *(void *)(v39 + 24);
      uint64_t v41 = *(unsigned __int16 *)(v39 + 32) | (*(unsigned __int8 *)(v39 + 34) << 16);
      swift_bridgeObjectRelease();
      sub_1BFF9C84C(v40, v41);
      *(void *)uint64_t v39 = v124;
      *(void *)(v39 + 8) = v122;
      *(unsigned char *)(v39 + 16) = v121;
      *(void *)(v39 + 24) = v52;
      *(unsigned char *)(v39 + 34) = BYTE2(v54);
      *(_WORD *)(v39 + 32) = v54;
      *(unsigned char *)(v39 + 35) = v55;
    }
    else
    {
      v138[(v59 >> 6) + 8] |= 1 << v59;
      uint64_t v85 = (uint64_t *)(v138[6] + 16 * v59);
      *uint64_t v85 = v124;
      v85[1] = v122;
      uint64_t v86 = v138[7] + 40 * v59;
      *(void *)uint64_t v86 = v124;
      *(void *)(v86 + 8) = v122;
      *(unsigned char *)(v86 + 16) = v121;
      *(void *)(v86 + 24) = v52;
      *(unsigned char *)(v86 + 34) = BYTE2(v54);
      *(_WORD *)(v86 + 32) = v54;
      *(unsigned char *)(v86 + 35) = v55;
      uint64_t v87 = v138[2];
      BOOL v31 = __OFADD__(v87, 1);
      uint64_t v88 = v87 + 1;
      if (v31) {
        goto LABEL_80;
      }
      v138[2] = v88;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1BFF9C84C(v131, v123);
    swift_bridgeObjectRelease();
    sub_1BFF9C84C(v129, v127);
    uint64_t v6 = v125;
    uint64_t v36 = v136;
LABEL_24:
    v38 += 40;
    if (--v37) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_57:
  swift_bridgeObjectRetain();
  uint64_t v89 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v89);
  uint64_t v90 = v36[2];
  uint64_t v91 = v120;
  if (v90)
  {
    swift_bridgeObjectRetain();
    uint64_t v92 = v36 + 5;
    unint64_t v134 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (v138[2])
      {
        uint64_t v93 = *(v92 - 1);
        uint64_t v94 = *v92;
        swift_bridgeObjectRetain_n();
        unint64_t v95 = sub_1BFEF2D8C(v93, v94);
        if (v96)
        {
          uint64_t v97 = v138[7] + 40 * v95;
          uint64_t v99 = *(void *)v97;
          uint64_t v98 = *(void *)(v97 + 8);
          char v100 = *(unsigned char *)(v97 + 16);
          uint64_t v101 = *(void *)(v97 + 24);
          uint64_t v102 = *(unsigned __int16 *)(v97 + 32) | (*(unsigned __int8 *)(v97 + 34) << 16);
          char v103 = *(unsigned char *)(v97 + 35);
          swift_bridgeObjectRetain();
          sub_1BFF9C7FC(v101, v102);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v134 = sub_1C0063020(0, v134[2] + 1, 1, v134);
          }
          unint64_t v105 = v134[2];
          unint64_t v104 = v134[3];
          if (v105 >= v104 >> 1) {
            unint64_t v134 = sub_1C0063020((void *)(v104 > 1), v105 + 1, 1, v134);
          }
          v134[2] = v105 + 1;
          uint64_t v106 = &v134[5 * v105];
          v106[4] = v99;
          v106[5] = v98;
          *((unsigned char *)v106 + 48) = v100;
          v106[7] = v101;
          *((unsigned char *)v106 + 66) = BYTE2(v102);
          *((_WORD *)v106 + 32) = v102;
          *((unsigned char *)v106 + 67) = v103;
          uint64_t v91 = v120;
          uint64_t v6 = v125;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v92 += 2;
      --v90;
    }
    while (v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v134 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v107 = *(void *)(v119 + 64);
  uint64_t v108 = *(unsigned __int16 *)(v119 + 72) | (*(unsigned __int8 *)(v119 + 74) << 16);
  uint64_t v109 = v107;
  unsigned int v110 = *(unsigned __int16 *)(v119 + 72) | (*(unsigned __int8 *)(v119 + 74) << 16);
  if (*(unsigned __int8 *)(v119 + 74) == 255)
  {
    uint64_t v109 = *(void *)(v117 + 64);
    unsigned int v110 = *(unsigned __int16 *)(v117 + 72) | (*(unsigned __int8 *)(v117 + 74) << 16);
    sub_1BFF9C7FC(v109, v110);
  }
  int v111 = *(unsigned __int8 *)(v119 + 75);
  if (v111 == 3) {
    LOBYTE(v111) = *(unsigned char *)(v117 + 75);
  }
  uint64_t v112 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v112 + 16) = v114;
  *(void *)(v112 + 24) = v91;
  *(void *)(v112 + 32) = v116;
  *(void *)(v112 + 40) = v6;
  *(unsigned char *)(v112 + 48) = v115;
  swift_beginAccess();
  *(void *)(v112 + 56) = v134;
  *(void *)(v112 + 64) = v109;
  *(unsigned char *)(v112 + 74) = BYTE2(v110);
  *(_WORD *)(v112 + 72) = v110;
  *(unsigned char *)(v112 + 75) = v111;
  sub_1BFF9C7FC(v107, v108);
  return v112;
}

uint64_t sub_1BFCB755C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t FeedGroupEmitterOutput.shortDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFE5E738(v2, *(void *)(a1 + 16));
  a2[3] = sub_1C151870C();
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_0(a2);
  return sub_1C15186FC();
}

NewsFeed::FormatSymbolWeight_optional __swiftcall FormatSymbolWeight.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

NewsFeed::FormatTextAlignment_optional __swiftcall FormatTextAlignment.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFCB76F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.init(from:)(a1, a2);
}

uint64_t FormatBindingTextExpressionLogic.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  int64_t v9 = v2;
  if (v2)
  {
LABEL_20:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      int64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v18;
      *(void *)(v24 + 16) = &unk_1F1B81EF8;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      goto LABEL_20;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCB7D94();
  long long v28 = 0uLL;
  sub_1C15206EC();
  switch((char)v27)
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v20 = 0;
      long long v21 = 0uLL;
      unsigned int v22 = 12582912;
      uint64_t v19 = 1;
      goto LABEL_16;
    case 2:
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v27 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      unsigned int v22 = 0;
      uint64_t v20 = *((void *)&v28 + 1);
      uint64_t v19 = v28;
      long long v21 = 0uLL;
      goto LABEL_16;
    case 3:
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v27 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v20 = *((void *)&v28 + 1);
      uint64_t v19 = v28;
      long long v21 = 0uLL;
      unsigned int v22 = 0x200000;
      goto LABEL_16;
    case 4:
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v27 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v20 = *((void *)&v28 + 1);
      uint64_t v19 = v28;
      long long v21 = 0uLL;
      unsigned int v22 = 0x400000;
      goto LABEL_16;
    case 5:
      long long v28 = xmmword_1C152C800;
      sub_1C04045A8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = v27;
      uint64_t v20 = BYTE8(v27);
      long long v21 = 0uLL;
      unsigned int v22 = 6291456;
      goto LABEL_16;
    case 6:
      long long v27 = xmmword_1C152C800;
      sub_1BFCB7DE8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v20 = *((void *)&v28 + 1);
      uint64_t v19 = v28;
      long long v25 = 0uLL;
      long long v21 = v29;
      unsigned int v22 = 0x800000;
      goto LABEL_17;
    case 7:
      long long v27 = xmmword_1C152C800;
      sub_1C04048C4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v20 = *((void *)&v28 + 1);
      uint64_t v19 = v28;
      long long v21 = v29;
      long long v25 = v30;
      unsigned int v22 = v31 | (v32 << 16) | 0xFFA00000;
      goto LABEL_17;
    default:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = 0uLL;
      unsigned int v22 = 12582912;
LABEL_16:
      long long v25 = 0uLL;
LABEL_17:
      *(void *)uint64_t v11 = v19;
      *(void *)(v11 + 8) = v20;
      *(_OWORD *)(v11 + 16) = v21;
      *(_OWORD *)(v11 + 32) = v25;
      *(_WORD *)(v11 + 48) = v22;
      *(unsigned char *)(v11 + 50) = BYTE2(v22);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCB7D94()
{
  unint64_t result = qword_1EB88E420;
  if (!qword_1EB88E420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E420);
  }
  return result;
}

unint64_t sub_1BFCB7DE8()
{
  unint64_t result = qword_1EB87BDA8;
  if (!qword_1EB87BDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87BDA8);
  }
  return result;
}

uint64_t sub_1BFCB7E3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPropertyDefinition.init(from:)(a1, a2);
}

uint64_t sub_1BFCB7E54()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCB7EA4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCB7F04()
{
  unint64_t result = qword_1EB888820;
  if (!qword_1EB888820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888820);
  }
  return result;
}

uint64_t FeedConfigDecoder.init()()
{
  uint64_t v0 = sub_1C1517D7C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1C1517DBC();
  *unint64_t v3 = sub_1BFCB3C10;
  v3[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAA7F8], v0);
  swift_retain();
  sub_1C1517D8C();
  swift_release();
  return v4;
}

uint64_t sub_1BFCB8054()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCB80B4()
{
  unint64_t result = qword_1EB88C840;
  if (!qword_1EB88C840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C840);
  }
  return result;
}

uint64_t (*FeedModel<>.init(model:context:namespace:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11))()
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a9, a1, a6);
  uint64_t v19 = (int *)type metadata accessor for FeedModel();
  sub_1C019CBB8(a2, a9 + v19[13]);
  uint64_t v20 = (void *)(a9 + v19[14]);
  *uint64_t v20 = a3;
  v20[1] = a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9 + v19[15], a5, a7);
  unint64_t result = (uint64_t (*)())swift_allocObject();
  *((void *)result + 2) = a6;
  *((void *)result + 3) = a7;
  *((void *)result + 4) = a8;
  *((void *)result + 5) = a10;
  *((void *)result + 6) = a11;
  unsigned int v22 = (uint64_t (**)())(a9 + v19[16]);
  void *v22 = sub_1BFEE6F94;
  v22[1] = result;
  return result;
}

uint64_t sub_1BFCB8258@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSlotItem.init(from:)(a1, a2);
}

uint64_t sub_1BFCB8270(void *a1)
{
  return FormatTextNode.encode(to:)(a1);
}

uint64_t sub_1BFCB8294(void *a1)
{
  return FormatBindingURLExpressionLogic.encode(to:)(a1);
}

uint64_t FormatBindingURLExpressionLogic.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v33 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v33 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v33 - v13;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  unint64_t v21 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBindingURLExpressionLogic, v22, v19, (uint64_t)&type metadata for FormatBindingURLExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v20, (uint64_t)v17, v21, (uint64_t)&off_1F1C39B48);
  switch(v18)
  {
    case 1:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1C151928C();
      uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v11, v27, v26);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFCB87A0(1, (uint64_t)v11);
      uint64_t v25 = (uint64_t)v11;
      break;
    case 2:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1C151928C();
      uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v8, v29, v28);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFCB87A0(2, (uint64_t)v8);
      uint64_t v25 = (uint64_t)v8;
      break;
    case 3:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C151928C();
      uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v5, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFCB87A0(3, (uint64_t)v5);
      uint64_t v25 = (uint64_t)v5;
      break;
    default:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1C151928C();
      uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v14, v24, v23);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFCB87A0(0, (uint64_t)v14);
      uint64_t v25 = (uint64_t)v14;
      break;
  }
  sub_1BFEFEB68(v25, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCB87A0(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08FEF34;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCB88F4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCB88F4()
{
  unint64_t result = qword_1EB869250;
  if (!qword_1EB869250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869250);
  }
  return result;
}

uint64_t sub_1BFCB8948(void *a1)
{
  return FormatIssueBinding.Image.encode(to:)(a1);
}

uint64_t FormatIssueBinding.Image.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatIssueBinding.Image, v16, v13, (uint64_t)&type metadata for FormatIssueBinding.Image, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39B08);
  if (v12)
  {
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CA50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFCB8C50(1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CA50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFCB8C50(0, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCB8C50(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v14 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F7F44;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCB8DA4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCB8DA4()
{
  unint64_t result = qword_1EB8601A8;
  if (!qword_1EB8601A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8601A8);
  }
  return result;
}

uint64_t sub_1BFCB8DF8(void *a1)
{
  return FormatImageAdjustmentFilter.encode(to:)(a1);
}

uint64_t FormatImageAdjustmentFilter.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v105 = (char *)&v92 - v8;
  MEMORY[0x1F4188790](v9);
  unint64_t v104 = (char *)&v92 - v10;
  MEMORY[0x1F4188790](v11);
  char v103 = (char *)&v92 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v102 = (char *)&v92 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v101 = (char *)&v92 - v16;
  MEMORY[0x1F4188790](v17);
  char v100 = (char *)&v92 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v99 = (char *)&v92 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v98 = (char *)&v92 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v97 = (char *)&v92 - v24;
  MEMORY[0x1F4188790](v25);
  char v96 = (char *)&v92 - v26;
  MEMORY[0x1F4188790](v27);
  unint64_t v95 = (char *)&v92 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v92 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v94 = (char *)&v92 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v93 = (char *)&v92 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v92 = (char *)&v92 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v92 - v39;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)&v92 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v44 = *(double *)v2;
  int v45 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v47 = a1[3];
  uint64_t v46 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v47);
  unint64_t v48 = sub_1BFEB6A24();
  uint64_t v107 = v43;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatImageAdjustmentFilter, v49, v47, (uint64_t)&type metadata for FormatImageAdjustmentFilter, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v46, (uint64_t)v43, v48, (uint64_t)&off_1F1C39AE8);
  if (v45 == 1)
  {
    switch(*(void *)&v44)
    {
      case 1:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v57 = sub_1C151928C();
        uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CAC8);
        uint64_t v59 = (uint64_t)v92;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v92, v58, v57);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v60 = 1;
        goto LABEL_19;
      case 2:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v61 = sub_1C151928C();
        uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CAC8);
        uint64_t v59 = (uint64_t)v93;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v93, v62, v61);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v60 = 2;
        goto LABEL_19;
      case 3:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v63 = sub_1C151928C();
        uint64_t v64 = __swift_project_value_buffer(v63, (uint64_t)qword_1EB93CAC8);
        uint64_t v59 = (uint64_t)v94;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v94, v64, v63);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v60 = 3;
LABEL_19:
        uint64_t v52 = (uint64_t)v107;
        sub_1BFCB9D38(v60, v59);
        uint64_t v53 = v59;
        goto LABEL_60;
      case 4:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v65 = sub_1C151928C();
        uint64_t v66 = __swift_project_value_buffer(v65, (uint64_t)qword_1EB93CAC8);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v31, v66, v65);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 4;
        goto LABEL_56;
      case 5:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v68 = sub_1C151928C();
        uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v95;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v95, v69, v68);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 5;
        goto LABEL_56;
      case 6:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v70 = sub_1C151928C();
        uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v96, v71, v70);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 6;
        goto LABEL_56;
      case 7:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v72 = sub_1C151928C();
        uint64_t v73 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v97;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v97, v73, v72);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 7;
        goto LABEL_56;
      case 8:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_1C151928C();
        uint64_t v75 = __swift_project_value_buffer(v74, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v98;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v98, v75, v74);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 8;
        goto LABEL_56;
      case 9:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v76 = sub_1C151928C();
        uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v99;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v99, v77, v76);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 9;
        goto LABEL_56;
      case 0xALL:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v78 = sub_1C151928C();
        uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v100;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v100, v79, v78);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 10;
        goto LABEL_56;
      case 0xBLL:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v80 = sub_1C151928C();
        uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v101;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v101, v81, v80);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 11;
        goto LABEL_56;
      case 0xCLL:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v82 = sub_1C151928C();
        uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v102;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v102, v83, v82);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 12;
        goto LABEL_56;
      case 0xDLL:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v84 = sub_1C151928C();
        uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v103;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v103, v85, v84);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 13;
        goto LABEL_56;
      case 0xELL:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v86 = sub_1C151928C();
        uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v104;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16))(v104, v87, v86);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 14;
        goto LABEL_56;
      case 0xFLL:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v88 = sub_1C151928C();
        uint64_t v89 = __swift_project_value_buffer(v88, (uint64_t)qword_1EB93CAC8);
        uint64_t v31 = v105;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v105, v89, v88);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        char v67 = 15;
LABEL_56:
        uint64_t v90 = v106;
        uint64_t v52 = (uint64_t)v107;
        sub_1BFCB9D38(v67, (uint64_t)v31);
        if (v90) {
          goto LABEL_57;
        }
        uint64_t v6 = v31;
        break;
      default:
        if (qword_1EB887640 != -1) {
          swift_once();
        }
        uint64_t v50 = sub_1C151928C();
        uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CAC8);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v51, v50);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v52 = (uint64_t)v107;
        sub_1BFCB9D38(0, (uint64_t)v40);
        uint64_t v53 = (uint64_t)v40;
        goto LABEL_60;
    }
LABEL_59:
    uint64_t v53 = (uint64_t)v6;
    goto LABEL_60;
  }
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_1C151928C();
  uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93CA98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v6, v55, v54);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v56 = v106;
  uint64_t v52 = (uint64_t)v107;
  sub_1C067A5A4(16, (uint64_t)v6, v44);
  if (!v56) {
    goto LABEL_59;
  }
  uint64_t v31 = v6;
LABEL_57:
  uint64_t v53 = (uint64_t)v31;
LABEL_60:
  sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v52, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCB9D38(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C0907FB4;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCB9E8C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCB9E8C()
{
  unint64_t result = qword_1EB8681D0;
  if (!qword_1EB8681D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8681D0);
  }
  return result;
}

uint64_t sub_1BFCB9EE0(void *a1)
{
  return FormatDateFormat.encode(to:)(a1);
}

uint64_t FormatDateFormat.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v33 - v7;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v33 - v10;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v18 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v36 = v1[4];
  uint64_t v37 = v17;
  uint64_t v19 = v1[5];
  uint64_t v34 = v15;
  uint64_t v35 = v19;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  unint64_t v22 = sub_1BFEB6A24();
  uint64_t v38 = v14;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatDateFormat, v23, v20, (uint64_t)&type metadata for FormatDateFormat, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v14, v22, (uint64_t)&off_1F1C39B68);
  if (v18 == 1)
  {
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C151928C();
    uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v29, v28);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (uint64_t)v38;
    sub_1BFCBA338(0, (uint64_t)v11);
    uint64_t v27 = (uint64_t)v11;
  }
  else if (v18 == 2)
  {
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1C151928C();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (uint64_t)v38;
    sub_1BFCBA338(1, (uint64_t)v8);
    uint64_t v27 = (uint64_t)v8;
  }
  else
  {
    LOWORD(v39) = v16;
    *((void *)&v39 + 1) = v34;
    uint64_t v40 = v18;
    char v41 = v37;
    uint64_t v42 = v36;
    uint64_t v43 = v35;
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C151928C();
    uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v5, v31, v30);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (uint64_t)v38;
    sub_1C06A0BD8(2, &v39, (uint64_t)v5);
    uint64_t v27 = (uint64_t)v5;
  }
  sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v26, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCBA338(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08FCA9C;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCBA48C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCBA48C()
{
  unint64_t result = qword_1EB864578;
  if (!qword_1EB864578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864578);
  }
  return result;
}

uint64_t sub_1BFCBA4E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatCustomItemDefinition.init(from:)(a1, a2);
}

uint64_t FormatCustomItemDefinition.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  sub_1C08825BC();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0882650();
  sub_1C085F050(&qword_1EB8921E0, (void (*)(uint64_t))sub_1C0882650);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v23;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v16 = *((void *)v15 - 1);
      uint64_t v23 = (void *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v17 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v17);
      *(&v22 - 4) = (uint64_t)&_s10CodingKeysON_154;
      *(&v22 - 3) = sub_1C08826D4();
      *(&v22 - 2) = sub_1BFCBA8A8();
      *(&v22 - 1) = sub_1C0882728();
      swift_getKeyPath();
      swift_retain();
      uint64_t v18 = sub_1C085FA20((uint64_t)&unk_1F1B849E0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v19 = (uint64_t)v23;
      *(void *)uint64_t v20 = v23;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v18;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v19, v16, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE309D0(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
  sub_1BFD10054();
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  char v26 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v12 = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCBA8A8()
{
  unint64_t result = qword_1EB88C1A0[0];
  if (!qword_1EB88C1A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB88C1A0);
  }
  return result;
}

uint64_t sub_1BFCBA8FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindingDateTimeExpressionLogic.init(from:)(a1, a2);
}

uint64_t FormatBindingDateTimeExpressionLogic.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  char v11 = v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v9;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = &unk_1F1B82B30;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCBACE4();
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_1C15206EC();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      uint64_t v19 = 0;
      uint64_t v20 = 12;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      uint64_t v19 = 0;
      uint64_t v20 = 13;
    }
  }
  else
  {
    long long v24 = xmmword_1C152C800;
    sub_1BFCBAC90();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
    uint64_t v20 = v25;
    uint64_t v19 = v26;
  }
  *char v11 = v20;
  v11[1] = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCBAC90()
{
  unint64_t result = qword_1EB88FCC0;
  if (!qword_1EB88FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FCC0);
  }
  return result;
}

unint64_t sub_1BFCBACE4()
{
  unint64_t result = qword_1EB88F1A8;
  if (!qword_1EB88F1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88F1A8);
  }
  return result;
}

uint64_t sub_1BFCBAD38@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatLayeredMediaNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatLayeredMediaNodeBinding.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFCBAD8C(a1, (void (*)(uint64_t))sub_1BFCBB12C, (uint64_t)&_s10CodingTypeON_185, (uint64_t)&unk_1F1B68380, a2);
}

uint64_t sub_1BFCBAD8C@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v28 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v12 = v5;
  if (v5)
  {
LABEL_13:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    uint64_t v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  uint64_t v13 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  uint64_t v15 = swift_bridgeObjectRelease();
  uint64_t v16 = v31;
  uint64_t v17 = v32;
  unint64_t v18 = v11;
  if (v13)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unint64_t *)(v19 + 40);
      while (1)
      {
        unint64_t v22 = *v21;
        if (*v21 >= 4) {
          break;
        }
        v21 += 2;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *(v21 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v25 = v24;
      *(void *)(v25 + 8) = v22;
      *(void *)(v25 + 16) = v30;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v24, v22);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
      a1 = v29;
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v15 = swift_bridgeObjectRelease();
  }
  v17(v15);
  long long v34 = 0uLL;
  sub_1C15206EC();
  char v23 = v35;
  long long v34 = xmmword_1C152C800;
  if (v35) {
    sub_1C0861DF4();
  }
  else {
    sub_1BFCBB0D8();
  }
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  *uint64_t v16 = v23;
  uint64_t v27 = (uint64_t)v29;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_1BFCBB0D8()
{
  unint64_t result = qword_1EB870D68;
  if (!qword_1EB870D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870D68);
  }
  return result;
}

unint64_t sub_1BFCBB12C()
{
  unint64_t result = qword_1EB88D520;
  if (!qword_1EB88D520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D520);
  }
  return result;
}

uint64_t sub_1BFCBB180@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDateTimeBinding.init(from:)(a1, a2);
}

uint64_t FormatDateTimeBinding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_19:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  uint64_t v10 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v11 = sub_1C1520EAC();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v29;
  uint64_t v13 = v9;
  if (v10)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v17;
      *(void *)(v22 + 16) = &unk_1F1B84A80;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      a1 = v26;
      goto LABEL_19;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCBB684();
  v28[0] = 0uLL;
  sub_1C15206EC();
  char v18 = v27;
  switch((char)v27)
  {
    case 1:
      v28[0] = xmmword_1C152C800;
      sub_1C0882DD8();
      goto LABEL_18;
    case 2:
      v28[0] = xmmword_1C152C800;
      sub_1BFCBB630();
      goto LABEL_16;
    case 3:
      v28[0] = xmmword_1C152C800;
      sub_1C0882D84();
      goto LABEL_16;
    case 4:
      v28[0] = xmmword_1C152C800;
      sub_1C03E8610();
      goto LABEL_16;
    case 5:
      v28[0] = xmmword_1C152C800;
      sub_1C0882D30();
LABEL_16:
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v19 = v27;
      goto LABEL_21;
    case 6:
      v28[0] = xmmword_1C152C800;
      sub_1C0882CDC();
LABEL_18:
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v19 = 0;
LABEL_21:
      long long v20 = 0uLL;
      break;
    default:
      long long v27 = xmmword_1C152C800;
      sub_1BFE2DD44();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v19 = *(void *)&v28[0];
      long long v20 = *(_OWORD *)((char *)v28 + 8);
      break;
  }
  uint64_t v23 = (uint64_t)v26;
  *(void *)uint64_t v12 = v19;
  *(_OWORD *)(v12 + 8) = v20;
  *(unsigned char *)(v12 + 24) = v18;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1BFCBB630()
{
  unint64_t result = qword_1EB88A2B0;
  if (!qword_1EB88A2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A2B0);
  }
  return result;
}

unint64_t sub_1BFCBB684()
{
  unint64_t result = qword_1EB88A1A8;
  if (!qword_1EB88A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A1A8);
  }
  return result;
}

uint64_t sub_1BFCBB6D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingDateTimeExpressionLogicCompare.init(from:)(a1, a2);
}

uint64_t FormatBindingDateTimeExpressionLogicCompare.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C086E6DC();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086E770();
  sub_1C085F050(&qword_1EB892430, (void (*)(uint64_t))sub_1C086E770);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_207;
      *(&v24 - 3) = sub_1C086E7F4();
      *(&v24 - 2) = sub_1BFCBBAB4();
      *(&v24 - 1) = sub_1C086E848();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B82B80);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE23564();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C15206EC();
  char v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1BFCBBF20();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  *(unsigned char *)uint64_t v12 = v16;
  *(void *)(v12 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCBBAB4()
{
  unint64_t result = qword_1EB88FCA8;
  if (!qword_1EB88FCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FCA8);
  }
  return result;
}

uint64_t sub_1BFCBBB08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatBindingDateTimeExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingDateTimeExpression.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1C0875D80();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0875E14();
  sub_1C085F050(&qword_1EB892330, (void (*)(uint64_t))sub_1C0875E14);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v28;
  uint64_t v13 = v7;
  uint64_t v14 = v9;
  if (v11)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v28 = (void *)*((void *)v17 - 2);
      uint64_t v19 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v20);
      *((void *)&v27 - 4) = &_s10CodingKeysON_188;
      *((void *)&v27 - 3) = sub_1C0875E98();
      *((void *)&v27 - 2) = sub_1BFCBBFC8();
      *((void *)&v27 - 1) = sub_1C0875EEC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B83EA0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v22 = (uint64_t)v28;
      *(void *)uint64_t v23 = v28;
      *(void *)(v23 + 8) = v19;
      *(void *)(v23 + 16) = v21;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v19, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCBBF20();
  long long v33 = 0uLL;
  char v34 = 0;
  sub_1C15206EC();
  uint64_t v18 = v31;
  long long v27 = xmmword_1C153AB20;
  long long v33 = xmmword_1C153AB20;
  char v34 = 0;
  if (sub_1C152071C())
  {
    long long v31 = v27;
    char v32 = 0;
    sub_1BFCBBF74();
    sub_1C15206EC();
    uint64_t v26 = v29;
    uint64_t v25 = v30;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v26 = 13;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
  *uint64_t v12 = v18;
  v12[1] = v26;
  void v12[2] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCBBF20()
{
  unint64_t result = qword_1EB887470;
  if (!qword_1EB887470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887470);
  }
  return result;
}

unint64_t sub_1BFCBBF74()
{
  unint64_t result = qword_1EB88F1B0;
  if (!qword_1EB88F1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88F1B0);
  }
  return result;
}

unint64_t sub_1BFCBBFC8()
{
  unint64_t result = qword_1EB88DDB8;
  if (!qword_1EB88DDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88DDB8);
  }
  return result;
}

uint64_t sub_1BFCBC01C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatButtonNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatButtonNodeBinding.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_15:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    uint64_t v23 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  uint64_t v11 = v7;
  uint64_t v12 = v26;
  uint64_t v13 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_8;
        }
      }
      uint64_t v21 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v19;
      *(void *)(v22 + 16) = &unk_1F1B842B0;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v19);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v10 = v25;
      goto LABEL_15;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFCBC498();
  long long v27 = 0uLL;
  sub_1C15206EC();
  switch(v28)
  {
    case 1:
      long long v27 = xmmword_1C152C800;
      sub_1C087A2F8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 64;
      break;
    case 2:
      long long v27 = xmmword_1C152C800;
      sub_1C0074AB0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0x80;
      break;
    case 3:
      long long v27 = xmmword_1C152C800;
      sub_1C0079800();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = -64;
      break;
    default:
      long long v27 = xmmword_1C152C800;
      sub_1BFCBC4EC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = v28;
      break;
  }
  *uint64_t v12 = v20;
  uint64_t v23 = (uint64_t)v25;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1BFCBC498()
{
  unint64_t result = qword_1EB88AD20;
  if (!qword_1EB88AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AD20);
  }
  return result;
}

unint64_t sub_1BFCBC4EC()
{
  unint64_t result = qword_1EB87F2C0;
  if (!qword_1EB87F2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87F2C0);
  }
  return result;
}

uint64_t sub_1BFCBC540@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatGroupBinding.Bool.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_20:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    uint64_t v25 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v25);
  }
  uint64_t v11 = v7;
  uint64_t v12 = v32;
  uint64_t v13 = a1[3];
  char v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_8;
        }
      }
      uint64_t v23 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v19;
      *(void *)(v24 + 16) = &unk_1F1B85100;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v19);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v10 = v28;
      goto LABEL_20;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFCBCBE8();
  long long v31 = 0uLL;
  sub_1C15206EC();
  switch((char)v29)
  {
    case 1:
      long long v31 = xmmword_1C152C800;
      sub_1BFCBCC3C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v21 = 0;
      uint64_t v22 = v29;
      char v20 = 32;
      break;
    case 2:
      long long v31 = xmmword_1C152C800;
      sub_1BFDAE8F8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v22 = v29;
      char v21 = 1;
      break;
    case 3:
      long long v31 = xmmword_1C152C800;
      sub_1C04A9F98();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v22 = v29;
      char v21 = 1;
      char v20 = 32;
      break;
    case 4:
      long long v31 = xmmword_1C152C800;
      sub_1C088A0F0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v22 = v29;
      char v21 = 2;
      break;
    case 5:
      long long v31 = xmmword_1C152C800;
      sub_1BFCBCC3C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v22 = v29;
      char v21 = 2;
      char v20 = 32;
      break;
    case 6:
      long long v31 = xmmword_1C152C800;
      sub_1BFDAE850();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v22 = v29;
      char v21 = 3;
      break;
    case 7:
      long long v31 = xmmword_1C152C800;
      sub_1C017E284();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v22 = v29;
      char v20 = v30 | 0x20;
      char v21 = 3;
      break;
    case 8:
      long long v31 = xmmword_1C152C800;
      sub_1C0465CB0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v22 = v29;
      char v21 = 4;
      break;
    default:
      long long v31 = xmmword_1C152C800;
      sub_1BFDAE7FC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      char v21 = 0;
      uint64_t v22 = v29;
      break;
  }
  *(void *)uint64_t v12 = v22;
  *(unsigned char *)(v12 + 8) = v20;
  *(unsigned char *)(v12 + 9) = v21;
  uint64_t v25 = (uint64_t)v28;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

unint64_t sub_1BFCBCBE8()
{
  unint64_t result = qword_1EB8885D0;
  if (!qword_1EB8885D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8885D0);
  }
  return result;
}

unint64_t sub_1BFCBCC3C()
{
  unint64_t result = qword_1EB8754F8;
  if (!qword_1EB8754F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8754F8);
  }
  return result;
}

void *sub_1BFCBCC90(uint64_t a1)
{
  uint64_t v2 = v1;
  v20[1] = *v1;
  char v21 = (void *)a1;
  uint64_t v3 = sub_1C151F55C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151F52C();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1C0062F3C();
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 24) = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)(v9 + 16) = MEMORY[0x1E4FBC860];
  v1[2] = v9;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  sub_1C151E1AC();
  uint64_t v22 = v10;
  sub_1BFCBD2A4((unint64_t *)&unk_1EB87A1A0, 255, MEMORY[0x1E4FBCC10]);
  sub_1C00648A8(0, (unint64_t *)&unk_1EB879FB0, MEMORY[0x1E4FBCC10]);
  sub_1C006453C();
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v3);
  v1[8] = sub_1C151F5AC();
  if (qword_1EB88F330 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1EB88F318;
  uint64_t v12 = unk_1EB88F320;
  uint64_t v13 = (void *)qword_1EB88F328;
  sub_1C0062FC0();
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 40) = 0;
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v12;
  *(void *)(v14 + 32) = v13;
  v2[9] = v14;
  uint64_t v15 = v21;
  sub_1BFC66384((uint64_t)v21, (uint64_t)(v2 + 3));
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_1BFCBD2A4(&qword_1EB88F338, v16, (void (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastoreManager);
  swift_bridgeObjectRetain();
  sub_1BFEF95A8(v12);
  id v17 = v13;
  swift_retain();
  sub_1C151969C();
  swift_release();
  sub_1C15180CC();
  if (sub_1C151809C())
  {
    sub_1C1516EEC();
    swift_allocObject();
    swift_weakInit();
    sub_1BFCBD2A4(&qword_1EB88F340, v18, (void (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastoreManager);
    sub_1C1516FCC();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v2;
}

uint64_t sub_1BFCBD0F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBD13C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBD184(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBD1CC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBD214(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBD25C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBD2A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LiveActivityWebEmbedDatastoreManager()
{
  return self;
}

uint64_t type metadata accessor for FeedScaling()
{
  return self;
}

uint64_t FormatIssueCoverNode.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = *v1;
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v108 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v109 = (uint64_t)&v103 - v10;
  MEMORY[0x1F4188790](v11);
  unsigned int v110 = (char *)&v103 - v12;
  MEMORY[0x1F4188790](v13);
  int v111 = (char *)&v103 - v14;
  MEMORY[0x1F4188790](v15);
  double v113 = (char *)&v103 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v112 = (char *)&v103 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v114 = (char *)&v103 - v20;
  MEMORY[0x1F4188790](v21);
  char v115 = (char *)&v103 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v116 = (char *)&v103 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v117 = (char *)&v103 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v118 = (char *)&v103 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v119 = (char *)&v103 - v30;
  MEMORY[0x1F4188790](v31);
  long long v33 = (char *)&v103 - v32;
  sub_1C0862DB4();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v36 = (char *)&v103 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1[3];
  uint64_t v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  sub_1C0862EDC();
  uint64_t v40 = v39;
  uint64_t v41 = sub_1C085F050(&qword_1EB86CD08, (void (*)(uint64_t))sub_1C0862EDC);
  sub_1BFEFBD78(v6, v42, v38, v6, v40, (uint64_t)&type metadata for FormatVersions.StarSky, v37, (uint64_t)v36, v41, (uint64_t)&off_1F1C39BA8);
  swift_beginAccess();
  uint64_t v43 = v4[2];
  uint64_t v44 = v4[3];
  uint64_t v120 = v4;
  uint64_t v45 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v45 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_1C151928C();
  uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CA98);
  unint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16);
  char v121 = *v48;
  v121(v33, v47, v46);
  uint64_t v49 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = v43;
  uint64_t v51 = v36;
  sub_1C06D08BC(v50, v44, 0, 0, 0, (uint64_t)v33, (uint64_t)sub_1C01B158C, 0);
  if (v3)
  {
    sub_1BFEFEB68((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v61 = (uint64_t)v51;
    return sub_1BFEFEB68(v61, (uint64_t (*)(void))sub_1C0862DB4);
  }
  sub_1BFEFEB68((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v52 = v120;
  unint64_t v53 = v120[4];
  uint64_t v54 = (uint64_t)v119;
  v121(v119, v47, v46);
  swift_storeEnumTagMultiPayload();
  sub_1BFF35EA4(v53);
  sub_1C06BAA0C(v53, 1, 0, 0, v54, (uint64_t)sub_1C01B158C, 0);
  uint64_t v104 = v47;
  uint64_t v105 = v46;
  uint64_t v107 = v49;
  uint64_t v106 = v48;
  sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
  sub_1BFF322A8(v53);
  uint64_t v55 = v52[5];
  uint64_t v56 = qword_1EB887630;
  swift_retain();
  if (v56 != -1) {
    swift_once();
  }
  uint64_t v57 = v105;
  uint64_t v58 = __swift_project_value_buffer(v105, (uint64_t)qword_1EB93CA80);
  uint64_t v59 = (uint64_t)v118;
  char v60 = v121;
  v121(v118, v58, v57);
  swift_storeEnumTagMultiPayload();
  sub_1C070780C(v55, 2, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v63 = v120;
  swift_beginAccess();
  uint64_t v64 = (uint64_t)v117;
  v60(v117, v104, v57);
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = swift_bridgeObjectRetain();
  sub_1C06D0AFC(v65, 3, 0, 0);
  sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v66 = (uint64_t)v116;
  uint64_t v67 = v104;
  v60(v116, v104, v57);
  swift_storeEnumTagMultiPayload();
  uint64_t v68 = swift_retain();
  sub_1C0707A5C(v68, 4, 0, 0, v66, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v69 = (uint64_t)v115;
  v60(v115, v67, v57);
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = swift_retain();
  sub_1C0707CCC(v70, 5, 0, 0, v69, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v69, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v71 = v57;
  uint64_t v72 = v63[9];
  uint64_t v73 = (uint64_t)v114;
  v60(v114, v67, v71);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_1C06BABA4(v72, 6, 0, 0, v73, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v73, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  uint64_t v74 = v63[10];
  uint64_t v75 = (uint64_t)v112;
  v60(v112, v104, v105);
  swift_storeEnumTagMultiPayload();
  if (v74)
  {
    char v76 = sub_1C08380EC(v75, 7, 0, 0, (uint64_t)sub_1C01B158C, 0);
    uint64_t v77 = (uint64_t)v113;
    if (v76)
    {
      long long v129 = xmmword_1C1557FF0;
      char v130 = 0;
      *(void *)&long long v127 = v74;
      sub_1C0862E48();
      sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
      sub_1C1520BAC();
    }
  }
  else
  {
    uint64_t v77 = (uint64_t)v113;
  }
  uint64_t v78 = v104;
  sub_1BFEFEB68(v75, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  unint64_t v79 = v63[11];
  v121((char *)v77, v78, v105);
  swift_storeEnumTagMultiPayload();
  if (v79 != 0x8000000000000000)
  {
    sub_1BFE6FA30(v79);
    if (sub_1C08380EC(v77, 8, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v127 = xmmword_1C1558010;
      char v128 = 0;
      *(void *)&long long v125 = v79;
      sub_1C0862E48();
      sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
      sub_1C009DA10();
      sub_1C1520BAC();
      uint64_t v63 = v120;
    }
    uint64_t v77 = (uint64_t)v113;
  }
  sub_1BFEFEB68(v77, type metadata accessor for FormatVersionRequirement);
  sub_1BFF0056C(v79);
  swift_beginAccess();
  char v80 = *((unsigned char *)v63 + 96);
  if (qword_1EB887650 != -1) {
    swift_once();
  }
  uint64_t v81 = v105;
  uint64_t v82 = __swift_project_value_buffer(v105, (uint64_t)qword_1EB93CAE0);
  uint64_t v83 = (uint64_t)v111;
  v121(v111, v82, v81);
  swift_storeEnumTagMultiPayload();
  if (v80)
  {
    uint64_t v119 = 0;
  }
  else
  {
    char v84 = sub_1C08380EC(v83, 9, 0, 0, (uint64_t)sub_1C01B158C, 0);
    uint64_t v119 = 0;
    if (v84)
    {
      long long v125 = xmmword_1C1558020;
      char v126 = 0;
      LOBYTE(v123) = 0;
      sub_1C0862E48();
      sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
      uint64_t v85 = v119;
      sub_1C1520BAC();
      uint64_t v119 = v85;
      if (v85)
      {
        sub_1BFEFEB68((uint64_t)v111, type metadata accessor for FormatVersionRequirement);
        goto LABEL_8;
      }
    }
    uint64_t v63 = v120;
    uint64_t v83 = (uint64_t)v111;
  }
  sub_1BFEFEB68(v83, type metadata accessor for FormatVersionRequirement);
  uint64_t v86 = v63[13];
  unsigned __int8 v87 = *((unsigned char *)v63 + 112);
  uint64_t v88 = (uint64_t)v110;
  uint64_t v89 = v78;
  uint64_t v90 = v105;
  uint64_t v91 = (void (*)(uint64_t, uint64_t, uint64_t))v121;
  v121(v110, v89, v105);
  swift_storeEnumTagMultiPayload();
  uint64_t v92 = v119;
  sub_1C0707F3C(v86, v87, 10, 0, 0, v88, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v88, type metadata accessor for FormatVersionRequirement);
  if (v92) {
    goto LABEL_8;
  }
  swift_beginAccess();
  uint64_t v93 = v63[15];
  uint64_t v94 = v90;
  v91(v109, v104, v90);
  swift_storeEnumTagMultiPayload();
  uint64_t v95 = *(void *)(v93 + 16);
  swift_bridgeObjectRetain();
  if (v95)
  {
    uint64_t v96 = (uint64_t)v51;
    char v97 = sub_1C08380EC(v109, 11, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v97)
    {
      long long v123 = xmmword_1C1558040;
      char v124 = 0;
      uint64_t v98 = swift_bridgeObjectRetain();
      uint64_t v99 = (char *)sub_1BFE71F8C(v98);
      swift_bridgeObjectRelease();
      uint64_t v122 = v99;
      swift_retain();
      sub_1BFE726FC((uint64_t *)&v122, sub_1BFE72780, sub_1BFE72EAC);
      swift_release();
      uint64_t v119 = v122;
      uint64_t v131 = (uint64_t)v122;
      sub_1C0862E48();
      sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
      uint64_t v100 = MEMORY[0x1E4FBB1A0];
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v100);
      sub_1C1520BAC();
      swift_release();
    }
  }
  else
  {
    uint64_t v96 = (uint64_t)v51;
  }
  sub_1BFEFEB68(v109, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  char v101 = *((unsigned char *)v120 + 128);
  uint64_t v102 = (uint64_t)v108;
  v121(v108, v104, v94);
  swift_storeEnumTagMultiPayload();
  sub_1C06BAD3C(v101, 12, 0, 0, v102, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v102, type metadata accessor for FormatVersionRequirement);
  uint64_t v61 = v96;
  return sub_1BFEFEB68(v61, (uint64_t (*)(void))sub_1C0862DB4);
}

uint64_t sub_1BFCBE638(void *a1, unint64_t *a2, uint64_t a3, void (*a4)(void), void (*a5)(unsigned char *, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, a2);
  uint64_t result = sub_1C151819C();
  if (v11)
  {
    a4(0);
    uint64_t v9 = swift_allocObject();
    a5(v10, v9 + 16);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFCBE6FC(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFFE6A6C(0, (unint64_t *)&qword_1EB879D80, MEMORY[0x1E4FBB320]);
  sub_1BFCCF5D8(&qword_1EB85C3A0, &qword_1EB85B6B0);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BFCBE800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v96 = a1;
  sub_1BFCBF6E8(0, &qword_1EB85ACB8, &qword_1EB85ACB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v95 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v94 = (char *)&v79 - v4;
  sub_1BFCBF6E8(0, &qword_1EB85ACC8, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v92 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v91 = (char *)&v79 - v8;
  sub_1C00910EC();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v85 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v84 = (char *)&v79 - v12;
  sub_1BFEE9F90(0, (unint64_t *)&qword_1EB85AC98, (void (*)(uint64_t))sub_1C009103C);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v83 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v82 = (char *)&v79 - v16;
  sub_1BFEE9F90(0, &qword_1EB85AC88, sub_1C0091160);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v79 - v21;
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  uint64_t v24 = MEMORY[0x1E4FAA770];
  sub_1BFCBF6E8(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v79 - v29;
  uint64_t v88 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCBF698(0, &qword_1EB85ACA0, v23, v24, MEMORY[0x1E4FAA6B0]);
  uint64_t v32 = v31;
  uint64_t v99 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  uint64_t v100 = v34;
  uint64_t v101 = v33 + 56;
  char v97 = v30;
  v34(v30, 1, 1, v31);
  uint64_t v98 = v27;
  v34(v27, 1, 1, v32);
  uint64_t v103 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCBF698(0, &qword_1EB85ACE0, v23, v24, MEMORY[0x1E4FAA6B8]);
  uint64_t v102 = v35;
  swift_allocObject();
  sub_1C1519BDC();
  unsigned __int8 v87 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCBF698(0, &qword_1EB85AC40, v23, v24, MEMORY[0x1E4FAA610]);
  uint64_t v37 = v36;
  swift_allocObject();
  uint64_t v93 = sub_1C151996C();
  sub_1C0091160(0);
  uint64_t v39 = v38;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
  v40(v22, 1, 1, v38);
  v40(v19, 1, 1, v39);
  uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCBF9C4(0, &qword_1EB85ACD8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0091230(0);
  swift_allocObject();
  uint64_t v90 = sub_1C151996C();
  v40(v22, 1, 1, v39);
  v40(v19, 1, 1, v39);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v89 = sub_1C151996C();
  sub_1C009103C();
  uint64_t v43 = v42;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  uint64_t v45 = v82;
  v44(v82, 1, 1, v42);
  uint64_t v46 = v83;
  v44(v83, 1, 1, v43);
  sub_1BFD77090(0, (unint64_t *)&qword_1EB85ACE8, v41);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0091180();
  swift_allocObject();
  uint64_t v86 = sub_1C151996C();
  v44(v45, 1, 1, v43);
  v44(v46, 1, 1, v43);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v83 = (char *)sub_1C151996C();
  uint64_t v47 = v99;
  unint64_t v48 = v100;
  v100(v97, 1, 1, v99);
  v48(v98, 1, 1, v47);
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v81 = v37;
  swift_allocObject();
  uint64_t v82 = (char *)sub_1C151996C();
  sub_1BFCBF758(0, &qword_1EB864040, MEMORY[0x1E4FAA6B0]);
  uint64_t v50 = v49;
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
  uint64_t v52 = v84;
  v51(v84, 1, 1, v49);
  unint64_t v53 = v85;
  v51(v85, 1, 1, v50);
  sub_1BFCBF758(0, &qword_1EB8640B0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCBF758(0, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v80 = sub_1C151996C();
  v51(v52, 1, 1, v50);
  v51(v53, 1, 1, v50);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v85 = (char *)sub_1C151996C();
  uint64_t v54 = MEMORY[0x1E4FBB550];
  uint64_t v55 = MEMORY[0x1E4FAA798];
  uint64_t v56 = v88;
  sub_1BFCBF698(0, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v88);
  uint64_t v58 = v57;
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
  char v60 = v91;
  v59(v91, 1, 1, v57);
  uint64_t v61 = v92;
  v59(v92, 1, 1, v58);
  sub_1BFCBF698(0, &qword_1EB85ACF8, v54, v55, v103);
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v62 = v55;
  uint64_t v63 = v87;
  sub_1BFCBF698(0, (unint64_t *)&unk_1EB85AC58, v54, v62, v87);
  swift_allocObject();
  char v84 = (char *)sub_1C151996C();
  v59(v60, 1, 1, v58);
  v59(v61, 1, 1, v58);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v64 = sub_1C151996C();
  uint64_t v65 = MEMORY[0x1E4FBB390];
  uint64_t v66 = MEMORY[0x1E4FAA780];
  sub_1BFCBF698(0, &qword_1EB85ACB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], v56);
  uint64_t v68 = v67;
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);
  v69(v94, 1, 1, v67);
  v69(v95, 1, 1, v68);
  sub_1BFCBF698(0, &qword_1EB85ACF0, v65, v66, v103);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCBF698(0, &qword_1EB85AC50, v65, v66, v63);
  swift_allocObject();
  uint64_t v70 = sub_1C151996C();
  uint64_t v71 = v99;
  uint64_t v72 = v100;
  v100(v97, 1, 1, v99);
  v72(v98, 1, 1, v71);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t result = sub_1C151996C();
  uint64_t v74 = v96;
  uint64_t v75 = v90;
  uint64_t *v96 = v93;
  v74[1] = v75;
  uint64_t v76 = v86;
  v74[2] = v89;
  v74[3] = v76;
  uint64_t v77 = v82;
  v74[4] = (uint64_t)v83;
  v74[5] = (uint64_t)v77;
  uint64_t v78 = v85;
  v74[6] = v80;
  v74[7] = (uint64_t)v78;
  v74[8] = (uint64_t)v84;
  v74[9] = v64;
  v74[10] = v70;
  v74[11] = result;
  return result;
}

void sub_1BFCBF698(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFCBF6E8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1BFCBF698(255, a3, a4, a5, MEMORY[0x1E4FAA6B0]);
    unint64_t v6 = sub_1C151FD8C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFCBF758(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  if (!*a2)
  {
    sub_1BFCBF8CC(255, (unint64_t *)&unk_1EB8614E8, (uint64_t (*)(void))sub_1BFD98EEC, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E4FAA628]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_1BFCBF934();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFCBF7FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFCBF864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFCBF8CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1BFCBF934()
{
  unint64_t result = qword_1EB864018;
  if (!qword_1EB864018)
  {
    sub_1BFCBF7FC(255, (unint64_t *)&unk_1EB8614E8, (uint64_t (*)(void))sub_1BFD98EEC, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E4FAA628]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864018);
  }
  return result;
}

void sub_1BFCBF9C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C151631C();
    uint64_t v7 = sub_1BFCBFAA8(&qword_1EB85AA40, MEMORY[0x1E4F27928]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFCBFA60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBFAA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCBFAF0(void *a1)
{
  return FormatImageAdjustmentBlend.encode(to:)(a1);
}

uint64_t FormatImageAdjustmentBlend.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v31[-v7 - 8];
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFCF2D74(v1, (uint64_t)v34);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v14 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatImageAdjustmentBlend, v15, v12, (uint64_t)&type metadata for FormatImageAdjustmentBlend, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v13, (uint64_t)v11, v14, (uint64_t)&off_1F1C39AE8);
  sub_1BFCF2D74((uint64_t)v34, (uint64_t)v35);
  if (sub_1C00F5F20((uint64_t)v35) == 1)
  {
    uint64_t v16 = sub_1C00F5F2C((uint64_t)v35);
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    sub_1BFCF2D74((uint64_t)v34, (uint64_t)v31);
    sub_1C00F5F2C((uint64_t)v31);
    uint64_t v19 = qword_1EB887650;
    swift_retain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAE0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFCBFEE0(1, v17, v18, (uint64_t)v5);
    sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
    return sub_1C05DCB94((uint64_t)v34, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFF92710);
  }
  else
  {
    uint64_t v23 = sub_1C00F5F2C((uint64_t)v35);
    long long v24 = *(_OWORD *)(v23 + 112);
    v32[6] = *(_OWORD *)(v23 + 96);
    uint64_t v32[7] = v24;
    char v33 = *(unsigned char *)(v23 + 128);
    long long v25 = *(_OWORD *)(v23 + 48);
    v32[2] = *(_OWORD *)(v23 + 32);
    void v32[3] = v25;
    long long v26 = *(_OWORD *)(v23 + 80);
    v32[4] = *(_OWORD *)(v23 + 64);
    v32[5] = v26;
    long long v27 = *(_OWORD *)(v23 + 16);
    v32[0] = *(_OWORD *)v23;
    v32[1] = v27;
    if (qword_1EB887640 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C151928C();
    uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CAC8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v8, v29, v28);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C067ADC8(0, v32, (uint64_t)v8);
    sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t sub_1BFCBFEE0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F92AC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC00CC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFCC0078();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCC0078()
{
  unint64_t result = qword_1EB8608F8;
  if (!qword_1EB8608F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8608F8);
  }
  return result;
}

unint64_t sub_1BFCC00CC()
{
  unint64_t result = qword_1EB867EA0;
  if (!qword_1EB867EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867EA0);
  }
  return result;
}

uint64_t sub_1BFCC0120()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCC0170()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCC01D0()
{
  unint64_t result = qword_1EB888118;
  if (!qword_1EB888118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888118);
  }
  return result;
}

uint64_t sub_1BFCC0224()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCC0284()
{
  unint64_t result = qword_1EB87E6A8;
  if (!qword_1EB87E6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E6A8);
  }
  return result;
}

uint64_t FormatNodeCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t initializeWithCopy for FormatCustomNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFCC0380()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFCC03C4()
{
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCC0498()
{
  uint64_t result = 0x676E69646E6962;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702521203;
      break;
    case 2:
      uint64_t result = 0x656C797473;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFCC0504()
{
  unint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6168706C61;
      break;
    case 2:
      unint64_t result = 0x73736572676F7270;
      break;
    case 3:
      unint64_t result = 0x6C6F436B63617274;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCC05BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRegex.init(from:)(a1, a2);
}

uint64_t FormatRegex.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  sub_1BFC82330(0);
  uint64_t v5 = v4;
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatRegex();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (void *)((char *)&v16[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    uint64_t v11 = sub_1C1520ABC();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    sub_1C151964C();
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v10 + *(int *)(v8 + 20), v7, v5);
    *uint64_t v10 = v11;
    v10[1] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    sub_1BFCC0818((uint64_t)v10, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FormatRegex()
{
  uint64_t result = qword_1EB886F48;
  if (!qword_1EB886F48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFCC0818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatRegex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFCC087C(void *a1)
{
  return FormatOptionsNodeStatementBinding.encode(to:)(a1);
}

uint64_t FormatOptionsNodeStatementBinding.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v43 = (char *)&v41 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v42 = (char *)&v41 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v41 - v10;
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v41 - v13;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)v1;
  uint64_t v47 = *(void *)(v1 + 8);
  uint64_t v48 = v18;
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v20 = *(void *)(v1 + 32);
  uint64_t v45 = *(void *)(v1 + 16);
  uint64_t v46 = v19;
  uint64_t v21 = *(void *)(v1 + 40);
  unsigned int v22 = *(unsigned __int16 *)(v1 + 48);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  unint64_t v25 = sub_1BFEB6A24();
  uint64_t v51 = v17;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionsNodeStatementBinding, v26, v23, (uint64_t)&type metadata for FormatOptionsNodeStatementBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Sydro, v24, (uint64_t)v17, v25, (uint64_t)&off_1F1C39B28);
  switch(v22 >> 13)
  {
    case 1u:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C151928C();
      uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CA08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v11, v32, v31);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v51;
      sub_1C0675F90(1, v48, (uint64_t)v11);
      uint64_t v30 = (uint64_t)v11;
      break;
    case 2u:
      v49[0] = v48;
      v49[1] = v47;
      v49[2] = v45;
      v49[3] = v46;
      v49[4] = v20;
      v49[5] = v21;
      __int16 v50 = v22 & 0x1FFF;
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA08);
      uint64_t v35 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v42, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v51;
      sub_1BFCC0EC8(2, (uint64_t)v49, v35);
      goto LABEL_17;
    case 3u:
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93C828);
      uint64_t v35 = (uint64_t)v43;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v43, v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v51;
      sub_1C0676124(3, v48, v47, v45, v46, v35);
      goto LABEL_17;
    case 4u:
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1C151928C();
      uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93C828);
      uint64_t v35 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v44, v39, v38);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v51;
      sub_1C06762C0(4, v48, v47, v45, v46, v35);
LABEL_17:
      uint64_t v30 = v35;
      break;
    default:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1C151928C();
      uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CA08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v14, v28, v27);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)v51;
      sub_1C0675DF8(0, v48, v47, (uint64_t)v14);
      uint64_t v30 = (uint64_t)v14;
      break;
  }
  sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v29, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCC0EC8(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C086A198(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F4748;
  void v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC1068();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE1AB4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCC1068()
{
  unint64_t result = qword_1EB869B70;
  if (!qword_1EB869B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869B70);
  }
  return result;
}

uint64_t sub_1BFCC10BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatDateTimeOffset.init(from:)(a1, a2);
}

uint64_t FormatDateTimeOffset.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C0866410();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08664A4();
  sub_1C085F050(&qword_1EB891E70, (void (*)(uint64_t))sub_1C08664A4);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  char v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      long long v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = (void *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = &_s10CodingKeysON_242;
      *(&v24 - 3) = (void *)sub_1C0866528();
      *(&v24 - 2) = (void *)sub_1BFCC14DC();
      *(&v24 - 1) = (void *)sub_1C086657C();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B6DC98);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = (uint64_t)v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BFE94094();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C15206EC();
  uint64_t v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1BFCBBF20();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  *char v12 = v16;
  v12[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCC14DC()
{
  unint64_t result = qword_1EB8895B8;
  if (!qword_1EB8895B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8895B8);
  }
  return result;
}

uint64_t sub_1BFCC1530@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFCC155C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCC155C(void *a1)
{
  sub_1BFE8928C();
  *(void *)&long long v48 = v2;
  uint64_t v46 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v45 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v43 = v4;
  uint64_t v42 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v7 = v6;
  *(void *)&long long v47 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v39 - v8;
  sub_1C090025C();
  uint64_t v11 = v10;
  uint64_t v55 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0874358();
  sub_1C085F050(&qword_1EB891D70, (void (*)(uint64_t))sub_1C0874358);
  long long v15 = (void *)v49;
  sub_1C1520EBC();
  uint64_t v16 = v15;
  if (v15)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v14;
  }
  uint64_t v17 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = sub_1C1520EAC();
  char v19 = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v13;
  if (v19)
  {
    uint64_t v21 = sub_1C152070C();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = (unsigned char *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22) {
          goto LABEL_7;
        }
      }
      uint64_t v29 = *((void *)v23 - 2);
      uint64_t v30 = *((void *)v23 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1C07F7BF0();
      sub_1C02570B4();
      uint64_t v16 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v29;
      *(void *)(v31 + 8) = v30;
      *(void *)(v31 + 16) = v14;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v29, v30, 1);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v11);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = sub_1C07F0DDC((uint64_t)v13, 0, 0, 0, (void (*)(void, __n128))sub_1C090025C);
  *(void *)&long long v49 = v25;
  uint64_t v41 = v24;
  long long v53 = xmmword_1C153AB20;
  char v54 = 0;
  sub_1BFCAB4C0();
  sub_1C15206EC();
  uint64_t v40 = sub_1C1517E5C();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v7);
  long long v47 = xmmword_1C1557FA0;
  long long v53 = xmmword_1C1557FA0;
  char v54 = 0;
  if (sub_1C152071C())
  {
    long long v51 = v47;
    char v52 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    char v26 = v44;
    uint64_t v27 = v43;
    sub_1C15206EC();
    uint64_t v28 = v48;
    *(void *)&long long v47 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
  }
  else
  {
    *(void *)&long long v47 = MEMORY[0x1E4FBC870];
    uint64_t v28 = v48;
  }
  uint64_t v32 = v46;
  uint64_t v33 = v45;
  long long v48 = xmmword_1C1557FB0;
  long long v53 = xmmword_1C1557FB0;
  char v54 = 0;
  if (sub_1C152071C())
  {
    long long v51 = v48;
    char v52 = 0;
    sub_1C085F050(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    sub_1C15206EC();
    uint64_t v35 = v49;
    uint64_t v36 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v28);
    uint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = v49;
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  long long v49 = xmmword_1C1557FD0;
  long long v53 = xmmword_1C1557FD0;
  char v54 = 0;
  if (sub_1C152071C())
  {
    long long v51 = v49;
    char v52 = 0;
    sub_1C15206EC();
    char v38 = v50;
  }
  else
  {
    char v38 = 1;
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v11);
  type metadata accessor for FormatAuxiliaryNode();
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v14 + 16) = v41;
  *(void *)(v14 + 24) = v35;
  swift_beginAccess();
  *(void *)(v14 + 32) = v40;
  swift_beginAccess();
  *(void *)(v14 + 40) = v47;
  swift_beginAccess();
  *(void *)(v14 + 48) = v37;
  swift_beginAccess();
  *(unsigned char *)(v14 + 56) = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v14;
}

uint64_t type metadata accessor for FormatAuxiliaryNode()
{
  return self;
}

unint64_t sub_1BFCC1DF8()
{
  unint64_t result = qword_1EB888A50;
  if (!qword_1EB888A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888A50);
  }
  return result;
}

uint64_t sub_1BFCC1E4C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCC1E9C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCC1EFC()
{
  unint64_t result = qword_1EB877AF8;
  if (!qword_1EB877AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877AF8);
  }
  return result;
}

uint64_t sub_1BFCC1F50(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1C151718C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1C151719C();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  (*(void (**)(unsigned char *, void, __n128))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v12);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB3F8], v7);
  v16[15] = a2;
  sub_1BFCC22F8(0, (unint64_t *)&qword_1EB8979E8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a5 = result;
  return result;
}

uint64_t sub_1BFCC2124(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1C151719C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1C151718C();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  (*(void (**)(unsigned char *, void, __n128))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB400], v12);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB410], v7);
  v16[15] = a2;
  sub_1BFCC22F8(0, (unint64_t *)&qword_1EB8979E8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a5 = result;
  return result;
}

void sub_1BFCC22F8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C151720C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1BFCC2344(void *a1, void *a2)
{
  uint64_t v4 = sub_1C151D74C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C0063C8C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v9 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    *(void *)(swift_allocObject() + 16) = v9;
    uint64_t v12 = sub_1C151D89C();
    uint64_t v13 = MEMORY[0x1E4F7AEA8];
    __swift_allocate_boxed_opaque_existential_0(v11);
    swift_unknownObjectRetain();
    sub_1C151D88C();
    sub_1C151DA4C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *(void *)(swift_allocObject() + 16) = v9;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F7AD88], v4);
    uint64_t v12 = sub_1C151D93C();
    uint64_t v13 = MEMORY[0x1E4F7AF58];
    __swift_allocate_boxed_opaque_existential_0(v11);
    swift_unknownObjectRetain();
    sub_1C151D92C();
    sub_1C151DA4C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    uint64_t v12 = sub_1C151D53C();
    uint64_t v13 = MEMORY[0x1E4F7AC68];
    __swift_allocate_boxed_opaque_existential_0(v11);
    sub_1C151D52C();
    sub_1C151DA4C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    uint64_t v12 = sub_1C151D96C();
    uint64_t v13 = MEMORY[0x1E4F7AF78];
    __swift_allocate_boxed_opaque_existential_0(v11);
    sub_1C151D95C();
    sub_1C151DA4C();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FeedItemTraits.description.getter()
{
  return 91;
}

uint64_t sub_1BFCC26B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFCC2720();
  *a1 = result;
  return result;
}

uint64_t sub_1BFCC26E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFCC2720();
  *a1 = result;
  return result;
}

uint64_t sub_1BFCC2720()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t initializeWithCopy for FormatIssueCoverNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 <= 0xFD)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    sub_1BFF046A0(v7, v8, v6);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    long long v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    long long v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFCC288C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFCC2900()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCC2960()
{
  unint64_t result = qword_1EB874F20;
  if (!qword_1EB874F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874F20);
  }
  return result;
}

char *LocationDetectionManager.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observers] = MEMORY[0x1E4FBC860];
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_locationManager;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1E600]);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observableMostFrequentLocation;
  id v6 = objc_msgSend(self, sel_standardUserDefaults);
  v7._object = (void *)0x80000001C1626690;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  uint64_t v8 = NSUserDefaults.location(forKey:)(v7);

  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E5F8]), sel_initWithValue_, v8);
  *(void *)&v4[v5] = v9;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager__mostFrequentLocation;
  aBlock[0] = 0;
  sub_1C0091510(0, &qword_1EB882B50, (uint64_t (*)(uint64_t))sub_1C0064094, MEMORY[0x1E4FAB060]);
  swift_allocObject();
  *(void *)&v4[v10] = sub_1C1518E9C();
  long long v11 = &v4[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC];
  *(void *)long long v11 = 0;
  *((void *)v11 + 1) = 0;

  v23.receiver = v4;
  v23.super_class = ObjectType;
  uint64_t v12 = (char *)objc_msgSendSuper2(&v23, sel_init);
  uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_locationManager];
  uint64_t v14 = v12;
  objc_msgSend(v13, sel_setDelegate_, v14);
  long long v15 = (void **)&v14[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observableMostFrequentLocation];
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1C0D47734;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0061E74;
  aBlock[3] = &block_descriptor_59;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v16;
  swift_release();
  id v20 = objc_msgSend(v19, sel_observe_, v18);

  _Block_release(v18);
  swift_unknownObjectRelease();

  return v14;
}

void sub_1BFCC2C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  long long v15 = *(void **)(a5 + 16);
  swift_retain();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1BFE71F8C(v16);
  swift_bridgeObjectRelease();
  sub_1BFD430AC((uint64_t)v17);
  swift_release();
  uint64_t v18 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v15, sel_fetchOperationForTagsWithIDs_, v18);

  if (v19)
  {
    objc_msgSend(v19, sel_setQualityOfService_, 25);
    objc_msgSend(v19, sel_setRelativePriority_, 1);
    objc_msgSend(v19, sel_setShouldFailOnMissingObjects_, 1);
    objc_msgSend(v19, sel_setCachePolicy_, a7);
    objc_msgSend(v19, sel_setMaximumCachedAge_, 1.79769313e308);
    objc_msgSend(v19, sel_setCanSendFetchCompletionSynchronously_, a7 == 3);
    id v20 = (void *)swift_allocObject();
    void v20[2] = a3;
    v20[3] = a4;
    v20[4] = a6;
    v20[5] = sub_1BFD35658;
    v20[6] = v14;
    v23[4] = sub_1BFD35698;
    void v23[5] = v20;
    v23[0] = MEMORY[0x1E4F143A8];
    v23[1] = 1107296256;
    void v23[2] = sub_1BFD34E78;
    v23[3] = &block_descriptor_44;
    uint64_t v21 = _Block_copy(v23);
    swift_bridgeObjectRetain();
    id v22 = v19;
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_setFetchCompletionBlock_, v21);
    _Block_release(v21);

    objc_msgSend(v22, sel_start);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BFCC2EC0()
{
  sub_1BFCC2F18();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCC2F18()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v2 = sub_1C151CC9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v4 = sub_1C151A79C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v6 = sub_1C151BCEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BFCC30BC()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1BFCC3104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  v40[0] = a1;
  v40[1] = a5;
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  id v20 = *(void **)(a5 + 16);
  swift_retain();
  id v21 = objc_msgSend(a6, sel_fontURL);
  if (v21)
  {
    id v22 = v21;
    sub_1C1515F1C();

    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) != 1)
    {
      objc_super v23 = (void *)sub_1C1515E9C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      id v24 = objc_msgSend(v20, sel_assetHandleForURL_lifetimeHint_, v23, 1);

      if ((a7 & 1) == 0)
      {
        id v25 = objc_msgSend(v24, sel_filePath);
        if (!v25)
        {
          uint64_t v39 = swift_release();
          ((void (*)(uint64_t))v40[0])(v39);
LABEL_10:

          return;
        }
      }
      id v26 = objc_msgSend(v24, sel_filePath);
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = sub_1C151E62C();
        uint64_t v30 = v29;

        v40[2] = v28;
        v40[3] = v30;
        sub_1BFD43E80(0, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
        swift_allocObject();
        sub_1C151908C();
      }
      else
      {
        MEMORY[0x1F4188790](0);
        v40[-2] = v24;
        sub_1BFD43E80(v31, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
        swift_allocObject();
        sub_1C151911C();
      }
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = a6;
      *(void *)(v32 + 24) = v24;
      id v33 = a6;
      id v34 = v24;
      uint64_t v35 = (void *)sub_1C1518E7C();
      type metadata accessor for FeedFontManager();
      sub_1C151901C();
      swift_release();
      swift_release();

      *(void *)(swift_allocObject() + 16) = v33;
      id v36 = v33;
      uint64_t v37 = (void *)sub_1C1518E7C();
      sub_1C151903C();
      swift_release();
      swift_release();

      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = sub_1C005A48C;
      *(void *)(v38 + 24) = v19;
      id v24 = (id)sub_1C1518E7C();
      sub_1C151909C();

      swift_release();
      swift_release();
      swift_release();
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
  }
  __break(1u);
}

uint64_t FeedItemSorter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCC3620()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFCC3680()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFCC36D0()
{
  unint64_t result = qword_1EB8885F8;
  if (!qword_1EB8885F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8885F8);
  }
  return result;
}

unint64_t sub_1BFCC3724()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x7470697263736564;
      break;
    case 3:
      unint64_t result = 0x736D657469;
      break;
    case 4:
      unint64_t result = 0x726F66736E617274;
      break;
    case 5:
      unint64_t result = 0x69747265706F7270;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatWebEmbedBinding.URL.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1BFCC3864(void *a1)
{
  return FormatRepeatNodeIteration.encode(to:)(a1);
}

uint64_t FormatRepeatNodeIteration.encode(to:)(void *a1)
{
  sub_1BFEFF6C0(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v12 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = *(void *)v1;
  char v8 = *(unsigned char *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  if (v8)
  {
    LOBYTE(v15) = 1;
    long long v14 = 0uLL;
    sub_1BFCC3B90();
    swift_bridgeObjectRetain();
    uint64_t v9 = v13;
    sub_1C152080C();
    if (v9)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
      return sub_1C0042624(v7, 1);
    }
    uint64_t v15 = v7;
    long long v14 = xmmword_1C152C800;
    sub_1BFE1C798();
    sub_1C14C1C94(&qword_1EB85B5A0);
    sub_1C152080C();
    sub_1C0042624(v7, 1);
  }
  else
  {
    LOBYTE(v15) = 0;
    sub_1BFCC3B90();
    long long v14 = 0uLL;
    uint64_t v11 = v13;
    sub_1C152080C();
    if (!v11 && (v7 & 1) == 0)
    {
      LOBYTE(v15) = 0;
      long long v14 = xmmword_1C152C800;
      sub_1BFEFF6C0(0, (unint64_t *)&unk_1EB882D00, (uint64_t (*)(void))sub_1C14C1CD8, (uint64_t)&type metadata for FormatRepeatNodeBindIteration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
      sub_1C14C1D2C(&qword_1EB865790);
      sub_1C152080C();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

unint64_t sub_1BFCC3B90()
{
  unint64_t result = qword_1EB85BF58;
  if (!qword_1EB85BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BF58);
  }
  return result;
}

uint64_t sub_1BFCC3BE4(void *a1)
{
  return FormatItemNodeAction.encode(to:)(a1);
}

uint64_t FormatItemNodeAction.encode(to:)(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v70 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v69 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (char *)&v65 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v67 = (char *)&v65 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v65 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v66 = (char *)&v65 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v65 = (char *)&v65 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v65 - v18;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v65 - v21;
  uint64_t v23 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1F4188790](v23);
  id v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1[3];
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  unint64_t v31 = sub_1BFEB6A24();
  uint64_t v72 = v28;
  sub_1BFEFBD78(v23, v32, v29, v23, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyE, v30, (uint64_t)v28, v31, (uint64_t)&off_1F1C39B88);
  sub_1BFE80E70(v71, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v42 = v70;
      sub_1BFE7FB8C((uint64_t)v25, v70, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1C151928C();
      uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1EB93CAF8);
      uint64_t v45 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v65, v44, v43);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v72;
      sub_1C068A7FC(2, v42, v45);
      sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
      long long v47 = (uint64_t (*)(uint64_t))type metadata accessor for FormatCommandOpenURL;
      goto LABEL_11;
    case 2u:
      char v48 = *v25;
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_1C151928C();
      uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93CAF8);
      uint64_t v42 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v66, v50, v49);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v51 = v48;
      uint64_t v46 = (uint64_t)v72;
      sub_1C068A9D0(3, v51, v42);
      long long v47 = type metadata accessor for FormatVersionRequirement;
LABEL_11:
      char v52 = v47;
      uint64_t v53 = v42;
      goto LABEL_28;
    case 3u:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_1C151928C();
      uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93CAF8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v22, v55, v54);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v72;
      sub_1BFCC45CC(0, (uint64_t)v22);
      char v52 = type metadata accessor for FormatVersionRequirement;
      uint64_t v53 = (uint64_t)v22;
      goto LABEL_28;
    case 4u:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1C151928C();
      uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1EB93CAF8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v12, v57, v56);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v58 = 4;
      goto LABEL_27;
    case 5u:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1C151928C();
      uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1EB93CAF8);
      uint64_t v12 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v67, v60, v59);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v58 = 5;
      goto LABEL_27;
    case 6u:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CA08);
      uint64_t v12 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v68, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v58 = 6;
      goto LABEL_27;
    case 7u:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_1C151928C();
      uint64_t v64 = __swift_project_value_buffer(v63, (uint64_t)qword_1EB93CB10);
      uint64_t v12 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v69, v64, v63);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v58 = 7;
LABEL_27:
      uint64_t v46 = (uint64_t)v72;
      sub_1BFCC45CC(v58, (uint64_t)v12);
      char v52 = type metadata accessor for FormatVersionRequirement;
      uint64_t v53 = (uint64_t)v12;
LABEL_28:
      sub_1BFEFEB68(v53, v52);
      uint64_t result = sub_1BFEFEB68(v46, (uint64_t (*)(void))sub_1BFEFF7D8);
      break;
    default:
      uint64_t v33 = *(void *)v25;
      uint64_t v34 = *((void *)v25 + 1);
      uint64_t v35 = *((void *)v25 + 2);
      unsigned int v36 = v25[24];
      __int16 v37 = v25[25];
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1C151928C();
      uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAF8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v19, v39, v38);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = (uint64_t)v72;
      sub_1C068A658(1, v33, v34, v35, v36 | (v37 << 8), (uint64_t)v19);
      sub_1BFEFEB68((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v40, (uint64_t (*)(void))sub_1BFEFF7D8);
      uint64_t result = sub_1C085F5A4(v33, v34, v35, v36, v37, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
      break;
  }
  return result;
}

uint64_t sub_1BFCC45CC(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F7724;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC4720();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCC4720()
{
  unint64_t result = qword_1EB866AB8;
  if (!qword_1EB866AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866AB8);
  }
  return result;
}

uint64_t sub_1BFCC4774@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFCC47A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCC47A0(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB863C10, (void (*)(void))sub_1C006C4C8, (void (*)(void))sub_1C006C51C);
  uint64_t v3 = v2;
  uint64_t v47 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v42 - v4;
  sub_1C0903C60();
  uint64_t v7 = v6;
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086AC78();
  uint64_t KeyPath = v10;
  sub_1C085F050(&qword_1EB86CE68, (void (*)(uint64_t))sub_1C086AC78);
  uint64_t v12 = v49;
  sub_1C1520EBC();
  uint64_t v13 = v12;
  if (v12)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v49 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1C1520EAC();
  char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unsigned char *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *((void *)v18 - 2);
      uint64_t v25 = *((void *)v18 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v26 = swift_bridgeObjectRelease();
      uint64_t v27 = a1;
      MEMORY[0x1F4188790](v26);
      *(&v42 - 4) = (uint64_t)&_s10CodingKeysON_223;
      *(&v42 - 3) = sub_1C086ACFC();
      *(&v42 - 2) = sub_1C002FFD4();
      *(&v42 - 1) = sub_1C086AD50();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v28 = sub_1C085FB14((uint64_t)&unk_1F1B6BE50);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v13 = (void *)swift_allocError();
      *(void *)uint64_t v29 = v24;
      *(void *)(v29 + 8) = v25;
      *(void *)(v29 + 16) = v28;
      a1 = v27;
      *(_OWORD *)(v29 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v25, 1);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v7);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C0903C60);
  uint64_t v21 = v20;
  uint64_t v46 = a1;
  long long v52 = xmmword_1C153AB20;
  char v53 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v23 = v48;
  uint64_t v31 = v30;
  uint64_t v43 = v22;
  long long v44 = xmmword_1C1557FA0;
  long long v52 = xmmword_1C1557FA0;
  char v53 = 0;
  char v32 = sub_1C152071C();
  if (v32)
  {
    uint64_t v45 = v31;
    long long v50 = v44;
    char v51 = 0;
    sub_1C0903CF4();
    uint64_t v33 = v49;
    sub_1C15206EC();
    *(void *)&long long v44 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v3);
    uint64_t v31 = v45;
  }
  else
  {
    *(void *)&long long v44 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v52 = xmmword_1C1557FB0;
  char v53 = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v45 = v31;
  uint64_t v35 = v50;
  long long v52 = xmmword_1C1557FD0;
  char v53 = 0;
  sub_1BFE113DC();
  uint64_t v36 = v7;
  sub_1C152065C();
  uint64_t v49 = (char *)v50;
  long long v52 = xmmword_1C1557FC0;
  char v53 = 0;
  sub_1C152065C();
  __int16 v37 = v49;
  uint64_t v47 = v35;
  uint64_t v42 = v50;
  long long v52 = xmmword_1C1557FE0;
  char v53 = 0;
  LOBYTE(v35) = sub_1C152061C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v36);
  type metadata accessor for FormatProgressViewNodeStyle();
  uint64_t KeyPath = swift_allocObject();
  swift_beginAccess();
  *(void *)(KeyPath + 16) = v19;
  *(void *)(KeyPath + 24) = v21;
  uint64_t v38 = v45;
  *(void *)(KeyPath + 32) = v43;
  *(void *)(KeyPath + 40) = v38;
  swift_beginAccess();
  uint64_t v39 = (uint64_t)v46;
  uint64_t v40 = v47;
  *(void *)(KeyPath + 48) = v44;
  *(void *)(KeyPath + 56) = v40;
  uint64_t v41 = v42;
  *(void *)(KeyPath + 64) = v37;
  *(void *)(KeyPath + 72) = v41;
  *(unsigned char *)(KeyPath + 80) = v35;
  __swift_destroy_boxed_opaque_existential_1(v39);
  return KeyPath;
}

uint64_t type metadata accessor for FormatProgressViewNodeStyle()
{
  return self;
}

uint64_t sub_1BFCC4FA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBundleImageSize.init(from:)(a1, a2);
}

uint64_t FormatBundleImageSize.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_13:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v26;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v17;
      *(void *)(v22 + 16) = &unk_1F1B82E78;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v17);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCC5384();
  long long v25 = 0uLL;
  sub_1C15206EC();
  char v18 = v24;
  if ((_BYTE)v24 && v24 != 1)
  {
    long long v24 = xmmword_1C152C800;
    sub_1C0467560();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
    uint64_t v19 = *((void *)&v25 + 1);
    uint64_t v20 = v25;
  }
  else
  {
    sub_1BFE41AFC();
    long long v25 = xmmword_1C152C800;
    sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
    uint64_t v19 = 0;
    uint64_t v20 = v24;
  }
  *(void *)uint64_t v12 = v20;
  *(void *)(v12 + 8) = v19;
  *(unsigned char *)(v12 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCC5384()
{
  unint64_t result = qword_1EB889D80;
  if (!qword_1EB889D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889D80);
  }
  return result;
}

uint64_t sub_1BFCC53D8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t *FeedCursorTracker.init(context:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = MEMORY[0x1E4FBC870];
  *(uint64_t *)((char *)v1 + *(void *)(v4 + 104)) = MEMORY[0x1E4FBC870];
  *(uint64_t *)((char *)v1 + *(void *)(*v1 + 112)) = v6;
  uint64_t v7 = *(void *)(*v1 + 120);
  type metadata accessor for FeedCursorTrackerGroup();
  *(uint64_t *)((char *)v1 + v7) = sub_1C151E2FC();
  uint64_t v8 = *(void *)(*v1 + 128);
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  *(uint64_t *)((char *)v1 + v8) = sub_1C1517EBC();
  uint64_t v9 = (uint64_t)v2 + *(void *)(*v2 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v9, a1, AssociatedTypeWitness);
  return v2;
}

uint64_t type metadata accessor for FeedCursorTrackerGroup()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1BFCC56A8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C151850C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1BFCC56F0(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BFC9DBE8(0, a4);
    uint64_t v5 = sub_1C151E33C();
  }
  swift_retain();
  id v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCC579C(uint64_t a1, void *a2)
{
  sub_1BFF0A4E0(0, qword_1EB86B370, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v2 + v7;
  uint64_t v9 = v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  return sub_1BFCC5870(a1, a2, v8, v10, v11);
}

uint64_t sub_1BFCC5870(uint64_t a1, id a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a2)
  {
    id v5 = a2;
LABEL_3:
    sub_1BFF0A4E0(0, qword_1EB86B370, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
    return sub_1C151EDCC();
  }
  char v11 = 0;
  swift_bridgeObjectRetain();
  sub_1BFCC59A4(a4, a1, &v11, a5 & 1);
  swift_bridgeObjectRelease();
  if (*(void *)(a4 + 16) == 1 && v11 == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C02474EC();
    swift_allocError();
    *uint64_t v10 = 5;
    goto LABEL_3;
  }
  sub_1BFF0A4E0(0, qword_1EB86B370, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  return sub_1C151EDDC();
}

uint64_t sub_1BFCC59A4(uint64_t a1, uint64_t a2, unsigned char *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v13 = *v12;
      v16[0] = *(v12 - 1);
      v16[1] = v13;
      swift_bridgeObjectRetain();
      sub_1C0239170(v16, a2, a3, a4 & 1, &v15);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v14 = swift_bridgeObjectRelease();
      if (v15)
      {
        MEMORY[0x1C18C66D0](v14);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v12 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t FormatDecorationItem.__deallocating_deinit()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(unsigned __int16 *)(v0 + 120) | (*(unsigned __int8 *)(v0 + 122) << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF9C84C(v1, v2);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FeedCursorContainer.shortDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 < 0)
  {
    swift_retain();
    FeedDeferredCursor.shortDescription.getter(a2);
  }
  else
  {
    swift_retain();
    FeedCursor.shortDescription.getter(a2);
  }
  return swift_release();
}

uint64_t FeedDeferredCursor.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE5E6D4(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7E0;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  uint64_t v5 = *(void *)(v1 + 24);
  *(void *)(inited + 48) = *(void *)(v1 + 16);
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 1684957547;
  *(void *)(inited + 88) = 0xE400000000000000;
  *(unsigned char *)(inited + 96) = *(unsigned char *)(v1 + qword_1EB93C320);
  *(void *)(inited + 120) = &type metadata for FeedCursorKind;
  *(void *)(inited + 128) = 0xD000000000000011;
  *(void *)(inited + 136) = 0x80000001C16058F0;
  uint64_t v6 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 144) = *(void *)(v1 + qword_1EB93C310);
  *(void *)(inited + 168) = v6;
  *(void *)(inited + 176) = 0xD000000000000012;
  *(void *)(inited + 184) = 0x80000001C1605910;
  uint64_t v7 = *(void *)(v1 + qword_1EB93C300);
  uint64_t v8 = type metadata accessor for FeedDeferredCursorGroup();
  swift_bridgeObjectRetain();
  *(void *)(inited + 192) = MEMORY[0x1C18C6830](v7, v8);
  *(void *)(inited + 216) = v6;
  *(void *)(inited + 224) = 0xD000000000000013;
  *(void *)(inited + 232) = 0x80000001C1605930;
  uint64_t v9 = *(void *)(v1 + qword_1EB93C308);
  uint64_t v10 = type metadata accessor for FeedDatabaseGroup();
  uint64_t v11 = MEMORY[0x1C18C6830](v9, v10);
  *(void *)(inited + 264) = v6;
  *(void *)(inited + 240) = v11;
  sub_1BFF99224(inited);
  a1[3] = sub_1C151870C();
  a1[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_0(a1);
  return sub_1C15186FC();
}

uint64_t sub_1BFCC5EA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatEdgeInsets.init(from:)(a1, a2);
}

uint64_t FormatEdgeInsets.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1C0883750();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08837E4();
  sub_1C085F050(&qword_1EB891BE0, (void (*)(uint64_t))sub_1C08837E4);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v27;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *((void *)v16 - 1);
      uint64_t v27 = (void *)*((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v21);
      *(&v27 - 4) = &_s10CodingKeysON_150;
      *(&v27 - 3) = (void *)sub_1C0883868();
      *(&v27 - 2) = (void *)sub_1BFCC6308();
      *(&v27 - 1) = (void *)sub_1C08838BC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v22 = sub_1C085FB14((uint64_t)&unk_1F1B84C78);
      swift_release_n();
      sub_1C02570B4();
      unint64_t v3 = (void *)swift_allocError();
      uint64_t v23 = (uint64_t)v27;
      *(void *)uint64_t v24 = v27;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = v22;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v20, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE7E344();
  long long v28 = 0uLL;
  char v29 = 0;
  sub_1C15206EC();
  uint64_t v17 = v30;
  long long v28 = xmmword_1C153AB20;
  char v29 = 0;
  sub_1C15206EC();
  uint64_t v18 = v30;
  long long v28 = xmmword_1C1557FA0;
  char v29 = 0;
  sub_1C15206EC();
  uint64_t v19 = v30;
  long long v28 = xmmword_1C1557FB0;
  char v29 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v26 = v30;
  *uint64_t v12 = v17;
  v12[1] = v18;
  void v12[2] = v19;
  v12[3] = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCC6308()
{
  unint64_t result = qword_1EB887CF8;
  if (!qword_1EB887CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887CF8);
  }
  return result;
}

uint64_t destroy for FormatPrefetchContext(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  return swift_release();
}

id Assembly.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR___NEAssembly_assemblies;
  sub_1C00628B0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C152E280;
  uint64_t v4 = type metadata accessor for AdsAssembly();
  uint64_t v5 = swift_allocObject();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = sub_1BFCC6928((unint64_t *)&unk_1EB896E70, (void (*)(uint64_t))type metadata accessor for AdsAssembly);
  *(void *)(v3 + 32) = v5;
  uint64_t v6 = type metadata accessor for CommandAssembly();
  uint64_t v7 = swift_allocObject();
  *(void *)(v3 + 96) = v6;
  *(void *)(v3 + 104) = sub_1BFCC6928(&qword_1EB896F18, (void (*)(uint64_t))type metadata accessor for CommandAssembly);
  *(void *)(v3 + 72) = v7;
  uint64_t v8 = type metadata accessor for DatabaseAssembly();
  uint64_t v9 = swift_allocObject();
  *(void *)(v3 + 136) = v8;
  *(void *)(v3 + 144) = sub_1BFCC6928(&qword_1EB8970D0, (void (*)(uint64_t))type metadata accessor for DatabaseAssembly);
  *(void *)(v3 + 112) = v9;
  uint64_t v10 = type metadata accessor for DiagnosticAssembly();
  uint64_t v11 = swift_allocObject();
  *(void *)(v3 + 176) = v10;
  *(void *)(v3 + 184) = sub_1BFCC6928(&qword_1EB893B10, (void (*)(uint64_t))type metadata accessor for DiagnosticAssembly);
  *(void *)(v3 + 152) = v11;
  uint64_t v12 = type metadata accessor for EngagementAssembly();
  uint64_t v13 = swift_allocObject();
  *(void *)(v3 + 216) = v12;
  *(void *)(v3 + 224) = sub_1BFCC6928(&qword_1EB8971B8, (void (*)(uint64_t))type metadata accessor for EngagementAssembly);
  *(void *)(v3 + 192) = v13;
  uint64_t v14 = type metadata accessor for FactoryAssembly();
  uint64_t v15 = swift_allocObject();
  *(void *)(v3 + 256) = v14;
  *(void *)(v3 + 264) = sub_1BFCC6928(&qword_1EB896F48, (void (*)(uint64_t))type metadata accessor for FactoryAssembly);
  *(void *)(v3 + 232) = v15;
  uint64_t v16 = type metadata accessor for FormatAssembly();
  uint64_t v17 = swift_allocObject();
  *(void *)(v3 + 296) = v16;
  *(void *)(v3 + 304) = sub_1BFCC6928(&qword_1EB896EA8, (void (*)(uint64_t))type metadata accessor for FormatAssembly);
  *(void *)(v3 + 272) = v17;
  uint64_t v18 = type metadata accessor for LayoutAssembly();
  uint64_t v19 = swift_allocObject();
  *(void *)(v3 + 336) = v18;
  *(void *)(v3 + 344) = sub_1BFCC6928(&qword_1EB896EE8, (void (*)(uint64_t))type metadata accessor for LayoutAssembly);
  *(void *)(v3 + 312) = v19;
  uint64_t v20 = type metadata accessor for ManagerAssembly();
  uint64_t v21 = swift_allocObject();
  *(void *)(v3 + 376) = v20;
  *(void *)(v3 + 384) = sub_1BFCC6928(&qword_1EB896F78, (void (*)(uint64_t))type metadata accessor for ManagerAssembly);
  *(void *)(v3 + 352) = v21;
  uint64_t v22 = type metadata accessor for OfflineAssembly();
  uint64_t v23 = swift_allocObject();
  *(void *)(v3 + 416) = v22;
  *(void *)(v3 + 424) = sub_1BFCC6928((unint64_t *)&unk_1EB8813B8, (void (*)(uint64_t))type metadata accessor for OfflineAssembly);
  *(void *)(v3 + 392) = v23;
  uint64_t v24 = type metadata accessor for ServiceAssembly();
  uint64_t v25 = swift_allocObject();
  *(void *)(v3 + 456) = v24;
  *(void *)(v3 + 464) = sub_1BFCC6928(&qword_1EB896FA8, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  *(void *)(v3 + 432) = v25;
  uint64_t v26 = type metadata accessor for RendererAssembly();
  uint64_t v27 = swift_allocObject();
  *(void *)(v3 + 496) = v26;
  *(void *)(v3 + 504) = sub_1BFCC6928((unint64_t *)&unk_1EB897170, (void (*)(uint64_t))type metadata accessor for RendererAssembly);
  *(void *)(v3 + 472) = v27;
  long long v28 = (objc_class *)sub_1C151977C();
  id v29 = objc_allocWithZone(v28);
  uint64_t v30 = v0;
  id v31 = objc_msgSend(v29, sel_init);
  *(void *)(v3 + 536) = v28;
  *(void *)(v3 + 544) = sub_1BFCC6928(&qword_1EB882B58, MEMORY[0x1E4F81D80]);
  *(void *)(v3 + 512) = v31;
  *(void *)&v0[v2] = v3;

  v33.receiver = v30;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

uint64_t sub_1BFCC6928(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCC6970()
{
  return sub_1C1519A1C();
}

uint64_t _s8NewsFeed18FormatCornerRadiusO5ValueVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFCC69F0(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v3 = sub_1C151631C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v39 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v2 + 80);
  uint64_t v5 = *(void *)(v2 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v33 = (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1C151FD8C();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - v14;
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16))(v19, v37, v6, v17);
  uint64_t v36 = sub_1C151ECBC();
  uint64_t v35 = sub_1C151ECBC();
  type metadata accessor for FeedCursorGroup();
  uint64_t v34 = sub_1C151ECBC();
  uint64_t v32 = sub_1C151ECBC();
  uint64_t v31 = sub_1C151ECBC();
  type metadata accessor for FeedDatabaseGroup();
  uint64_t v30 = sub_1C151ECBC();
  uint64_t v29 = sub_1C151ECBC();
  uint64_t v28 = sub_1C151ECBC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v15, 1, 1, v12);
  memset(v43, 0, 32);
  uint64_t v21 = v33;
  sub_1C13661EC(v38, v33, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v41 = 0;
  char v42 = 1;
  char v40 = 0;
  type metadata accessor for FeedCursorTracker();
  (*(void (**)(uint64_t, uint64_t))(v5 + 48))(v6, v5);
  uint64_t v22 = FeedCursorTracker.__allocating_init(context:)((uint64_t)v9);
  type metadata accessor for FeedGroupEmitTaskGap();
  uint64_t v23 = sub_1C02B2F08();
  uint64_t v24 = (uint64_t)v39;
  sub_1C1253844();
  uint64_t v25 = swift_allocObject();
  sub_1C1365B88((uint64_t)v19, v36, v35, v34, v32, v31, v30, v29, v28, (uint64_t)v15, (uint64_t)v43, v21, &v41, &v40, v22, v24, 0, 0, v23,
    MEMORY[0x1E4FBC860]);
  return v25;
}

uint64_t FormatFileReference.url.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v6, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    type metadata accessor for FormatMetadata();
    uint64_t v9 = (uint64_t)&v6[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v10 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
    sub_1BFEBF838(v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    sub_1BFEBE33C();
    uint64_t v13 = (uint64_t)&v6[*(int *)(v12 + 48)];
    uint64_t v14 = sub_1C1515FDC();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v6, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
    return sub_1BFEBF838(v13, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  }
}

uint64_t type metadata accessor for HiddenContentPlacardViewRenderer()
{
  return self;
}

void *sub_1BFCC7104@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1BFCC7130(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *sub_1BFCC7130(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v3 = v2;
  uint64_t v31 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - v4;
  sub_1C08FA33C();
  uint64_t v7 = v6;
  uint64_t v32 = *(v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C088BCBC();
  sub_1C085F050(&qword_1EB891D90, (void (*)(uint64_t))sub_1C088BCBC);
  uint64_t v10 = v33;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_15:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *((void *)v16 - 2);
      uint64_t v19 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v20);
      *((void *)&v29 - 4) = &_s10CodingKeysON_130;
      *((void *)&v29 - 3) = sub_1C088BD40();
      *((void *)&v29 - 2) = sub_1BFCC77CC();
      *((void *)&v29 - 1) = sub_1C088BD94();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B853D0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v11 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v18;
      *(void *)(v22 + 8) = v19;
      *(void *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v18, v19, 1);
      (*(void (**)(char *, void *))(v32 + 8))(v9, v7);
      goto LABEL_15;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  type metadata accessor for FormatGroupNodeMaskStyle();
  sub_1C085F050(&qword_1EB88B450, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskStyle);
  long long v36 = 0uLL;
  char v37 = 0;
  sub_1C152065C();
  uint64_t v17 = v34;
  type metadata accessor for FormatAnimationNodeStyle();
  long long v36 = xmmword_1C153AB20;
  char v37 = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  uint64_t v33 = (void *)v34;
  long long v30 = xmmword_1C1557FA0;
  long long v36 = xmmword_1C1557FA0;
  char v37 = 0;
  char v23 = sub_1C152071C();
  uint64_t v24 = v32;
  if (v23)
  {
    long long v34 = v30;
    char v35 = 0;
    sub_1BFE1CFFC();
    sub_1C15206EC();
    unint64_t v25 = v38;
  }
  else
  {
    unint64_t v25 = 0xB000000000000000;
  }
  *(void *)&long long v30 = v25;
  long long v29 = xmmword_1C1557FB0;
  long long v36 = xmmword_1C1557FB0;
  char v37 = 0;
  if (sub_1C152071C())
  {
    long long v34 = v29;
    char v35 = 0;
    sub_1C08B07C8();
    sub_1C15206EC();
    uint64_t v27 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
  }
  else
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, void *))(v24 + 8))(v9, v7);
  type metadata accessor for FormatGroupNodeMask();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v28 = v33;
  v7[2] = v17;
  v7[3] = v28;
  swift_beginAccess();
  v7[4] = v30;
  swift_beginAccess();
  v7[5] = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_1BFCC77CC()
{
  unint64_t result = qword_1EB888C58;
  if (!qword_1EB888C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888C58);
  }
  return result;
}

unint64_t sub_1BFCC7820()
{
  unint64_t result = 0x69747265706F7270;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73746F6C73;
      break;
    case 2:
      unint64_t result = 0x6D6F6F727377656ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x72656C69706D6F63;
      break;
    case 5:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatGroupNodeMaskStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFFE54B8(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
  swift_bridgeObjectRelease();
  sub_1BFEF8738(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(unsigned char *)(v0 + 216));
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCC7970(void *a1)
{
  return FormatAccessibilityNode.encode(to:)(a1);
}

uint64_t sub_1BFCC7994()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCC79E4()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCC7A44()
{
  unint64_t result = qword_1EB8754D8;
  if (!qword_1EB8754D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8754D8);
  }
  return result;
}

uint64_t sub_1BFCC7A98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB890160);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, &qword_1EB8901E8);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87B080);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB871540);
  uint64_t result = sub_1C151819C();
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&unk_1EB890250);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A180);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = type metadata accessor for ShortcutManager();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v5;
    uint64_t v11[3] = v6;
    uint64_t result = sub_1BFC773DC(&v12, (uint64_t)(v11 + 5));
    v11[4] = v7;
    v11[10] = v8;
    v11[11] = v9;
    a2[3] = v10;
    a2[4] = &protocol witness table for ShortcutManager;
    *a2 = v11;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BFCC7CDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v129 = a4;
  sub_1BFF1FE2C(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v108 - v19;
  uint64_t v128 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v130 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v131 = (uint64_t *)((char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v22 = (double *)a1[2];
  if (v22)
  {
    char v124 = v17;
    long long v125 = v20;
    uint64_t v126 = a5;
    uint64_t v127 = a6;
    uint64_t v122 = a7;
    long long v123 = a8;
    uint64_t v23 = a1[3];
    uint64_t v133 = a1[4];
    unint64_t v24 = a1[5];
    uint64_t v138 = a1[6];
    uint64_t v25 = a1[7];
    uint64_t v135 = a1[8];
    uint64_t v26 = a1[10];
    uint64_t v136 = a1[9];
    uint64_t v27 = a1[11];
    CGFloat v28 = v22[2];
    CGFloat v29 = v22[3];
    CGFloat v30 = v22[4];
    CGFloat v31 = v22[5];
    uint64_t v132 = v23;
    swift_retain();
    swift_retain();
    unint64_t v134 = v24;
    uint64_t v137 = v22;
    sub_1BFE6FA30(v24);
    swift_retain();
    swift_retain();
    swift_retain();
    v144.origin.x = v28;
    v144.origin.y = v29;
    v144.size.width = v30;
    v144.size.height = v31;
    CGRectGetMinX(v144);
    sub_1C151F73C();
    v145.origin.x = v28;
    v145.origin.y = v29;
    v145.size.width = v30;
    v145.size.height = v31;
    CGRectGetMinY(v145);
    sub_1C151F74C();
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    double v39 = v38;
    char v40 = sub_1BFC939F8(v32, v34, v36, v38);
    uint64_t v41 = (char *)sub_1BFF20000((uint64_t)v40);
    swift_bridgeObjectRelease();
    char v42 = (uint64_t *)(*(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    uint64_t v44 = *v42;
    uint64_t v43 = v42[1];
    uint64_t v45 = *(void *)(a3 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = v139;
    uint64_t v47 = sub_1C006F050(v45, (uint64_t)v41, v44, v43);
    if (v46)
    {
      swift_release();
      sub_1BFE6FA4C((uint64_t)v137, v132, v133, v134);
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      return swift_release();
    }
    uint64_t v49 = a3;
    long long v50 = (void *)v47;
    uint64_t v117 = v49;
    unint64_t v139 = v41;
    uint64_t v119 = v27;
    uint64_t v120 = v26;
    uint64_t v121 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v50)
    {
      swift_retain();
      sub_1C0070768(v139, (uint64_t)v141, v33, v35, v37, v39);
      uint64_t v111 = (uint64_t)v50;
      swift_release();
      long long v50 = (void *)v141[0];
      uint64_t v51 = v141[1];
      uint64_t v52 = v141[2];
      uint64_t v53 = v141[3];
      uint64_t v55 = v141[4];
      uint64_t v54 = v141[5];
      uint64_t v56 = v141[6];
      uint64_t v57 = v141[7];
      int v58 = v142;
      uint64_t v59 = v129;
      uint64_t v60 = v128;
      uint64_t v116 = 0;
    }
    else
    {
      uint64_t v111 = 0;
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v55 = 0;
      uint64_t v54 = 0;
      uint64_t v56 = 0;
      uint64_t v57 = 0;
      int v58 = 3;
      uint64_t v116 = 0;
      uint64_t v59 = v129;
      uint64_t v60 = v128;
    }
    uint64_t v118 = v53;
    uint64_t v128 = v57;
    uint64_t v115 = v56;
    uint64_t v129 = v52;
    uint64_t v61 = (uint64_t)v131;
    *uint64_t v131 = v50;
    *(void *)(v61 + 8) = v51;
    *(void *)(v61 + 16) = v52;
    *(void *)(v61 + 24) = v53;
    *(void *)(v61 + 32) = v55;
    *(void *)(v61 + 40) = v54;
    *(void *)(v61 + 48) = v56;
    *(void *)(v61 + 56) = v57;
    *(unsigned char *)(v61 + 64) = v58;
    uint64_t v62 = v54;
    uint64_t v114 = v55;
    swift_storeEnumTagMultiPayload();
    uint64_t v63 = *(void *)(v59 + 24);
    uint64_t v64 = (uint64_t)v125;
    sub_1BFF37794(v61, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v130 + 56))(v64, 0, 1, v60);
    uint64_t v65 = (uint64_t)v124;
    sub_1C0079C08(v64, (uint64_t)v124);
    uint64_t v110 = v63;
    swift_beginAccess();
    LODWORD(v130) = v58;
    uint64_t v112 = v50;
    uint64_t v66 = v50;
    uint64_t v113 = v51;
    uint64_t v67 = v115;
    sub_1C00364B0(v66, v51, v129, v118, v55, v62, v115, v128, v58);
    uint64_t v68 = v127;
    swift_bridgeObjectRetain();
    sub_1BFF3D9D4(v65, v126, v68);
    swift_endAccess();
    sub_1BFF1FAC8(v64, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1C14F754C(v61, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    uint64_t v69 = (uint64_t)v139;
    uint64_t v70 = (uint64_t *)(*(void *)&v139[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory]
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    char v71 = v129;
    uint64_t v72 = *v70;
    uint64_t v73 = v70[1];
    uint64_t v74 = *(void *)(v117 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v75 = v116;
    uint64_t v76 = sub_1BFF416D8(v74, v69, v72, v73);
    if (v75)
    {
      swift_release();
      sub_1C0036570(v112, v113, v71, v118, v114, v62, v67, v128, v130);
      swift_release();
      sub_1BFE6FA4C((uint64_t)v137, v132, v133, v134);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v77 = v76;
    uint64_t v78 = v110;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v109 = v62;
    if (v77 && (swift_beginAccess(), (uint64_t v79 = *(void *)(v77 + 72)) != 0) && *(void *)(v79 + 16))
    {
      uint64_t v80 = *(void *)(v77 + 48);
      uint64_t v81 = *(void *)(v77 + 56);
      int v82 = *(unsigned __int8 *)(v77 + 64);
      swift_retain();
      uint64_t v83 = (uint64_t)v139;
      swift_retain();
      uint64_t v84 = swift_bridgeObjectRetain();
      uint64_t v131 = (void *)sub_1C12A4950(v84, v83);
      swift_bridgeObjectRelease();
      swift_release();
      if (v82) {
        uint64_t v103 = 0;
      }
      else {
        uint64_t v103 = v81;
      }
      if (v82) {
        uint64_t v104 = 0;
      }
      else {
        uint64_t v104 = v80;
      }
      type metadata accessor for FormatAnimationData();
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = v77;
      *(void *)(v105 + 24) = v104;
      *(void *)(v105 + 32) = v103;
      *(unsigned char *)(v105 + 40) = v82;
      *(void *)(v105 + 48) = v131;
      swift_beginAccess();
      swift_retain_n();
      uint64_t v106 = v127;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v143 = *(void *)(v78 + 32);
      *(void *)(v78 + 32) = 0x8000000000000000;
      uint64_t v87 = v126;
      sub_1C0062D34(v105, v126, v106, isUniquelyReferenced_nonNull_native);
      *(void *)(v78 + 32) = v143;
      uint64_t v85 = v105;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release_n();
      uint64_t v86 = v132;
    }
    else
    {
      uint64_t v85 = 0;
      uint64_t v86 = v132;
      uint64_t v87 = v126;
    }
    unsigned int v88 = v130;
    sub_1C151F72C();
    char v93 = 1;
    uint64_t v116 = 0;
    if (v88 < 3)
    {
      uint64_t v94 = v127;
    }
    else
    {
      uint64_t v94 = v127;
      if (!v85)
      {
        v147.origin.x = v89;
        v147.origin.y = v90;
        v147.size.width = v91;
        v147.size.height = v92;
        v146.origin.x = v33;
        v146.origin.y = v35;
        v146.size.width = v37;
        v146.size.height = v39;
        char v93 = !CGRectEqualToRect(v146, v147);
      }
    }
    uint64_t v132 = sub_1BFC5B30C(v93, v87, v94, v111, v77, v33, v35, v37, v39);
    uint64_t v95 = swift_allocObject();
    uint64_t v96 = (uint64_t)v137;
    swift_retain();
    swift_retain();
    uint64_t v97 = v86;
    unint64_t v98 = v134;
    sub_1BFE6FA30(v134);
    sub_1C1517EFC();
    swift_release();
    swift_release();
    swift_release();
    sub_1C0036570(v112, v113, v129, v118, v114, v109, v115, v128, v130);
    swift_release();
    uint64_t v99 = v140;
    *(void *)(v95 + 16) = v96;
    *(void *)(v95 + 24) = v97;
    uint64_t v100 = v133;
    *(void *)(v95 + 32) = v133;
    *(void *)(v95 + 40) = v98;
    *(unsigned char *)(v95 + 48) = v138 & 1;
    uint64_t v101 = v135;
    *(void *)(v95 + 56) = v99;
    *(void *)(v95 + 64) = v101;
    *(unsigned char *)(v95 + 72) = v136;
    uint64_t v102 = v122;
    *(void *)(v95 + 80) = v132;
    *(void *)(v95 + 88) = v102;
    swift_retain();
    uint64_t result = sub_1BFE6FA4C(v96, v97, v100, v98);
    *long long v123 = v95 | 0x1000000000000000;
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFF5470C((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BFCC8AC0()
{
  uint64_t v1 = 6581861;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_1BFCC8B08()
{
  uint64_t result = 0x6567616D69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E656D6E67696C61;
      break;
    case 2:
      uint64_t result = 0x64656C616373;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCC8B7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingURLExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingURLExpression.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C0877760();
  uint64_t v7 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08777F4();
  sub_1C085F050(&qword_1EB8921C0, (void (*)(uint64_t))sub_1C08777F4);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v32;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *((void *)v16 - 1);
      uint64_t v31 = *((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v23 = v12;
      MEMORY[0x1F4188790](v22);
      *((void *)&v30 - 4) = &_s10CodingKeysON_180;
      *((void *)&v30 - 3) = sub_1C0877878();
      *((void *)&v30 - 2) = sub_1BFCC8FD0();
      *((void *)&v30 - 1) = sub_1C08778CC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v24 = sub_1C085FB14((uint64_t)&unk_1F1B840D0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v25 = v31;
      *(void *)uint64_t v26 = v31;
      *(void *)(v26 + 8) = v21;
      *(void *)(v26 + 16) = v24;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v25, v21, 1);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v7);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDBBF7C();
  long long v33 = 0uLL;
  char v34 = 0;
  sub_1C15206EC();
  uint64_t v17 = v7;
  uint64_t v18 = v12;
  long long v19 = v35;
  uint64_t v20 = v36;
  LODWORD(v31) = v37;
  long long v30 = xmmword_1C153AB20;
  long long v35 = xmmword_1C153AB20;
  LOBYTE(v36) = 0;
  if (sub_1C152071C())
  {
    long long v33 = v30;
    char v34 = 0;
    sub_1BFCC9024();
    sub_1C15206EC();
    CGFloat v28 = v13;
    char v29 = v38;
  }
  else
  {
    CGFloat v28 = v13;
    char v29 = 1;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v28, v17);
  *(_OWORD *)a2 = v19;
  *(void *)(a2 + 16) = v20;
  *(unsigned char *)(a2 + 24) = v31;
  *(unsigned char *)(a2 + 25) = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCC8FD0()
{
  unint64_t result = qword_1EB88C000;
  if (!qword_1EB88C000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C000);
  }
  return result;
}

unint64_t sub_1BFCC9024()
{
  unint64_t result = qword_1EB88DDE8[0];
  if (!qword_1EB88DDE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB88DDE8);
  }
  return result;
}

void *sub_1BFCC9078(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v20 = a3;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v21 = sub_1C1517D7C();
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v16 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151F55C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151F52C();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v11 - 8);
  sub_1C1517DCC();
  swift_allocObject();
  a4[3] = sub_1C1517DBC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  sub_1C151E1AC();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1BFD9CA80((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  sub_1C006480C(0);
  sub_1BFD9CA80((unint64_t *)&qword_1EB879FC0, sub_1C006480C);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC58], v6);
  a4[14] = sub_1C151F5AC();
  uint64_t v12 = v18;
  a4[2] = v17;
  sub_1BFC66384(v12, (uint64_t)(a4 + 4));
  uint64_t v13 = v20;
  sub_1BFC66384(v20, (uint64_t)(a4 + 9));
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v16, *MEMORY[0x1E4FAA800], v21);
  swift_unknownObjectRetain();
  sub_1C1517D8C();
  __swift_destroy_boxed_opaque_existential_1(v13);
  __swift_destroy_boxed_opaque_existential_1(v12);
  return a4;
}

id sub_1BFCC9404(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  void (*v21)(void *__return_ptr);
  id v22;
  void v25[5];
  objc_super v26;
  void v27[5];

  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  void v27[3] = type metadata accessor for PuzzleStatsProcessor();
  void v27[4] = &off_1F1C1BF08;
  v27[0] = a6;
  swift_defaultActor_initialize();
  *(void *)(a9 + 304) = 0;
  *(_WORD *)(a9 + 312) = 2048;
  *(void *)(a9 + 152) = a1;
  sub_1BFC66384((uint64_t)a2, a9 + 112);
  sub_1BFC66384(a3, a9 + 160);
  *(void *)(a9 + 240) = a4;
  *(void *)(a9 + 248) = a5;
  sub_1BFC66384((uint64_t)v27, a9 + 200);
  sub_1BFC66384(a7, a9 + 256);
  *(void *)(a9 + 296) = a8;
  v26.receiver = (id)a9;
  v26.super_class = ObjectType;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v18 = a8;
  id v19 = objc_msgSendSuper2(&v26, sel_init);
  uint64_t v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v21 = *(void (**)(void *__return_ptr))(v20 + 80);
  uint64_t v22 = v19;
  v21(v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  objc_msgSend(v18, sel_addObserver_, v22);

  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v22;
}

uint64_t sub_1BFCC95A4()
{
  sub_1C15183EC();
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895448);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895C40);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895B70);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1BFCB6824(0, &qword_1EB894DB0);
  sub_1C1518B0C();
  swift_release();
  swift_release();
  sub_1C15183EC();
  type metadata accessor for FormatLayoutViewFactory();
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C15183FC();
  sub_1C1518AEC();
  swift_release();
  sub_1C15183EC();
  type metadata accessor for FeedModelFactory();
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C15183FC();
  sub_1C1518AEC();
  return swift_release();
}

uint64_t sub_1BFCC9830(void *a1)
{
  return FormatBlendMode.encode(to:)(a1);
}

uint64_t FormatBlendMode.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v81 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v80 = (char *)&v65 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v79 = (char *)&v65 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v78 = (char *)&v65 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v65 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v76 = (char *)&v65 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v75 = (char *)&v65 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v74 = (char *)&v65 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v73 = (char *)&v65 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v72 = (char *)&v65 - v22;
  MEMORY[0x1F4188790](v23);
  char v71 = (char *)&v65 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v70 = (char *)&v65 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v69 = (char *)&v65 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v68 = (char *)&v65 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v67 = (char *)&v65 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v66 = (char *)&v65 - v34;
  MEMORY[0x1F4188790](v35);
  unsigned __int8 v37 = (char *)&v65 - v36;
  uint64_t v38 = *v1;
  int v82 = a1;
  uint64_t v83 = v38;
  uint64_t v40 = a1[3];
  uint64_t v39 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_1C151928C();
  uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EB93CAB0);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
  v43(v37, v42, v41);
  uint64_t v44 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v84;
  sub_1BFE97CE8((uint64_t)v37, (uint64_t)sub_1C01B158C, 0, v40, v39);
  if (v45) {
    return sub_1BFEFEB68((uint64_t)v37, type metadata accessor for FormatVersionRequirement);
  }
  uint64_t v65 = v42;
  uint64_t v84 = v44;
  sub_1BFEFEB68((uint64_t)v37, type metadata accessor for FormatVersionRequirement);
  uint64_t v47 = v82;
  uint64_t v48 = v43;
  switch(v83)
  {
    case 1:
      uint64_t v54 = v82[3];
      uint64_t v55 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v54);
      uint64_t v56 = (uint64_t)v67;
      v48(v67, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 2:
      uint64_t v54 = v82[3];
      uint64_t v55 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v54);
      uint64_t v56 = (uint64_t)v68;
      v48(v68, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 3:
      uint64_t v54 = v82[3];
      uint64_t v55 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v54);
      uint64_t v56 = (uint64_t)v69;
      v48(v69, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 4:
      uint64_t v54 = v82[3];
      uint64_t v55 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v54);
      uint64_t v56 = (uint64_t)v70;
      v48(v70, v65, v41);
      swift_storeEnumTagMultiPayload();
LABEL_11:
      sub_1BFE97CE8(v56, (uint64_t)sub_1C01B158C, 0, v54, v55);
      uint64_t v53 = v56;
      goto LABEL_12;
    case 5:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v71;
      v48(v71, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 6:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v72;
      v48(v72, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 7:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v73;
      v48(v73, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 8:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v74;
      v48(v74, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 9:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v75;
      v48(v75, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 10:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v76;
      v48(v76, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 11:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v77;
      v48(v77, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 12:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v78;
      v48(v78, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 13:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v79;
      v48(v79, v65, v41);
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 14:
      uint64_t v57 = v82[3];
      uint64_t v58 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v57);
      uint64_t v59 = (uint64_t)v80;
      v48(v80, v65, v41);
      swift_storeEnumTagMultiPayload();
LABEL_23:
      sub_1BFE97CE8(v59, (uint64_t)sub_1C01B158C, 0, v57, v58);
      uint64_t v60 = v47;
      uint64_t v61 = v59;
      goto LABEL_24;
    case 15:
      uint64_t v62 = v82[3];
      uint64_t v63 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v62);
      uint64_t v64 = v47;
      uint64_t v61 = (uint64_t)v81;
      v48(v81, v65, v41);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v61, (uint64_t)sub_1C01B158C, 0, v62, v63);
      uint64_t v60 = v64;
LABEL_24:
      sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
      uint64_t v47 = v60;
      break;
    default:
      uint64_t v49 = v82[3];
      long long v50 = v82;
      uint64_t v51 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v49);
      uint64_t v52 = (uint64_t)v66;
      v48(v66, v65, v41);
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v50;
      sub_1BFE97CE8(v52, (uint64_t)sub_1C01B158C, 0, v49, v51);
      uint64_t v53 = v52;
LABEL_12:
      sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
      break;
  }
  __swift_project_boxed_opaque_existential_1(v47, v47[3]);
  sub_1C1520EEC();
  char v87 = v83;
  FormatBlendMode.rawValue.getter();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v85, v86);
  sub_1C1520AFC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
}

uint64_t FormatBlendMode.rawValue.getter()
{
  uint64_t result = 0x6C616D726F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x796C7069746C756DLL;
      break;
    case 2:
      uint64_t result = 0x6E6565726373;
      break;
    case 3:
      uint64_t result = 0x79616C7265766FLL;
      break;
    case 4:
      uint64_t result = 0x6E656B726164;
      break;
    case 5:
      uint64_t result = 0x6E65746867696CLL;
      break;
    case 6:
      uint64_t result = 0x646F44726F6C6F63;
      break;
    case 7:
      uint64_t result = 0x727542726F6C6F63;
      break;
    case 8:
      unsigned int v2 = 1952870259;
      goto LABEL_11;
    case 9:
      unsigned int v2 = 1685217640;
LABEL_11:
      uint64_t result = v2 | 0x6867694C00000000;
      break;
    case 0xA:
      uint64_t result = 0x6E65726566666964;
      break;
    case 0xB:
      uint64_t result = 0x6F6973756C637865;
      break;
    case 0xC:
      uint64_t result = 6649192;
      break;
    case 0xD:
      uint64_t result = 0x6974617275746173;
      break;
    case 0xE:
      uint64_t result = 0x726F6C6F63;
      break;
    case 0xF:
      uint64_t result = 0x69736F6E696D756CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCCA5B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSubgroup.ResolvedContainer.init(from:)(a1, a2);
}

uint64_t FormatContentSubgroup.ResolvedContainer.encode(to:)(void *a1)
{
  sub_1BFCCAD48(0, &qword_1EB86B8D8, (uint64_t (*)(void))sub_1BFCCACF4, (uint64_t)&_s17ResolvedContainerO10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v25 = v3;
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v17 - v4;
  uint64_t v19 = *v1;
  uint64_t v6 = v1[1];
  uint64_t v7 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v22 = v1[2];
  uint64_t v23 = v8;
  uint64_t v10 = v1[6];
  uint64_t v21 = v1[7];
  uint64_t v26 = v1[8];
  uint64_t v27 = v6;
  uint64_t v24 = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCCACF4();
  sub_1C1520F0C();
  if (v9 < 0)
  {
    LOBYTE(v28) = 1;
    char v38 = 0;
    sub_1BFCCAEAC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v20;
    sub_1C152080C();
    if (!v15)
    {
      uint64_t v20 = v9;
      uint64_t v28 = v19;
      uint64_t v29 = v27;
      uint64_t v30 = v22;
      uint64_t v31 = v7;
      uint64_t v32 = v9 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v33 = v23;
      uint64_t v34 = v10;
      uint64_t v35 = v14;
      uint64_t v36 = v26;
      uint64_t v37 = v24;
      char v38 = 1;
      sub_1BFCCAE58();
      sub_1C152080C();
    }
  }
  else
  {
    LOBYTE(v28) = 0;
    char v38 = 0;
    sub_1BFCCAEAC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v11 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = v20;
    sub_1C152080C();
    if (!v13)
    {
      uint64_t v28 = v19;
      uint64_t v29 = v27;
      uint64_t v30 = v22;
      uint64_t v31 = v7;
      uint64_t v32 = v9;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      uint64_t v35 = v12;
      uint64_t v36 = v26;
      uint64_t v37 = v24;
      char v38 = 1;
      sub_1BFCCAE58();
      sub_1C152080C();
    }
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v25);
  return sub_1C0033494();
}

uint64_t FormatContentSubgroup.ResolvedContainer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1BFCCAD48(0, &qword_1EB86B678, (uint64_t (*)(void))sub_1BFCCACF4, (uint64_t)&_s17ResolvedContainerO10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCCACF4();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v20;
    char v29 = 0;
    sub_1BFCCAE04();
    sub_1C15206EC();
    char v29 = 1;
    if (v21)
    {
      sub_1BFCCADB0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v11 = v21;
      uint64_t v12 = v22;
      uint64_t v13 = v23;
      uint64_t v14 = v24;
      long long v15 = v26;
      long long v16 = v27;
      uint64_t v17 = v28;
      unint64_t v18 = v25 | 0x8000000000000000;
    }
    else
    {
      sub_1BFCCADB0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v11 = v21;
      uint64_t v12 = v22;
      uint64_t v13 = v23;
      uint64_t v14 = v24;
      unint64_t v18 = v25;
      long long v15 = v26;
      long long v16 = v27;
      uint64_t v17 = v28;
    }
    *(void *)uint64_t v9 = v11;
    *(void *)(v9 + 8) = v12;
    *(void *)(v9 + 16) = v13;
    *(void *)(v9 + 24) = v14;
    *(void *)(v9 + 32) = v18;
    *(_OWORD *)(v9 + 40) = v15;
    *(_OWORD *)(v9 + 56) = v16;
    *(void *)(v9 + 72) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCCACF4()
{
  unint64_t result = qword_1EB866D10;
  if (!qword_1EB866D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866D10);
  }
  return result;
}

void sub_1BFCCAD48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1BFCCADB0()
{
  unint64_t result = qword_1EB85BCF0;
  if (!qword_1EB85BCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BCF0);
  }
  return result;
}

unint64_t sub_1BFCCAE04()
{
  unint64_t result = qword_1EB866D48;
  if (!qword_1EB866D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866D48);
  }
  return result;
}

unint64_t sub_1BFCCAE58()
{
  unint64_t result = qword_1EB85BCE8;
  if (!qword_1EB85BCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BCE8);
  }
  return result;
}

unint64_t sub_1BFCCAEAC()
{
  unint64_t result = qword_1EB866D30;
  if (!qword_1EB866D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866D30);
  }
  return result;
}

uint64_t sub_1BFCCAF00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotItemCountLimit.init(from:)(a1, a2);
}

uint64_t FormatSlotItemCountLimit.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v37 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v37);
  uint64_t v31 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (long long *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v21 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v21);
  }
  char v29 = v11;
  uint64_t v30 = a1;
  uint64_t v12 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v34;
  long long v16 = v8;
  if (v14)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unint64_t *)(v17 + 40);
      while (1)
      {
        unint64_t v20 = *v19;
        if (*v19 >= 4) {
          break;
        }
        v19 += 2;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v25 = *(v19 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v25;
      *(void *)(v26 + 8) = v20;
      *(void *)(v26 + 16) = &unk_1F1B87A20;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v25, v20);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v15);
      a1 = v30;
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCCB400();
  long long v36 = 0uLL;
  sub_1C15206EC();
  if ((_BYTE)v35)
  {
    if (v35 == 1)
    {
      long long v35 = xmmword_1C152C800;
      sub_1BFCCB454();
      sub_1C15206EC();
      uint64_t v23 = v32;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v15);
      uint64_t v24 = v29;
      *char v29 = v36;
    }
    else
    {
      long long v36 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB876CB8, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
      long long v27 = v31;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v15);
      uint64_t v28 = (uint64_t)v27;
      uint64_t v24 = v29;
      sub_1BFE7FB8C(v28, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v23 = v32;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v15);
    uint64_t v23 = v32;
    uint64_t v24 = v29;
  }
  swift_storeEnumTagMultiPayload();
  sub_1BFE7FB8C((uint64_t)v24, v23, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  uint64_t v21 = (uint64_t)v30;
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

unint64_t sub_1BFCCB400()
{
  unint64_t result = qword_1EB88B6B8;
  if (!qword_1EB88B6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B6B8);
  }
  return result;
}

unint64_t sub_1BFCCB454()
{
  unint64_t result = qword_1EB87E3F8;
  if (!qword_1EB87E3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E3F8);
  }
  return result;
}

uint64_t sub_1BFCCB4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5 = objc_msgSend(self, sel_mainBundle);
  id v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    sub_1C151E62C();
  }
  sub_1BFCCB57C();
  uint64_t result = sub_1C151FD4C();
  *a4 = result;
  return result;
}

unint64_t sub_1BFCCB57C()
{
  unint64_t result = qword_1EB895EA0;
  if (!qword_1EB895EA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB895EA0);
  }
  return result;
}

uint64_t FormatLayoutSizeSnapshot.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCCB5F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSubgroup.init(from:)(a1, a2);
}

uint64_t sub_1BFCCB60C(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v4 + *(int *)(v6 + 24);
  if (*(void *)(v9 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  uint64_t v13 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

void *sub_1BFCCB7C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8978B0);
  unint64_t result = (void *)sub_1C151819C();
  if (!v39)
  {
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A130);
  unint64_t result = (void *)sub_1C151818C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = result;
  id v6 = objc_msgSend(result, sel_networkBehaviorMonitor);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E3D0]), sel_initWithNetworkBehaviorMonitor_, v6);
  unint64_t result = (void *)swift_unknownObjectRelease();
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895420);
  unint64_t result = (void *)sub_1C151819C();
  if (!v36)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB896BB0);
  unint64_t result = (void *)sub_1C151815C();
  if (!v34)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = type metadata accessor for SportsDataServiceRequestFetcher();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_1BFCC9078((uint64_t)v7, (uint64_t)v35, (uint64_t)&v33, v9);

  uint64_t v36 = v8;
  uint64_t v37 = &off_1F1BE5CA0;
  v35[0] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895310);
  unint64_t result = (void *)sub_1C151819C();
  if (!v34)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB897898);
  unint64_t result = (void *)sub_1C151819C();
  if (!v32)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  unint64_t result = (void *)sub_1C151818C();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v11 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB897468);
  unint64_t result = (void *)sub_1C151819C();
  if (v30)
  {
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
    __n128 v13 = MEMORY[0x1F4188790](v12);
    uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
    __n128 v18 = MEMORY[0x1F4188790](v17);
    unint64_t v20 = (uint64_t *)((char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
    uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
    __n128 v23 = MEMORY[0x1F4188790](v22);
    uint64_t v25 = (uint64_t *)((char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
    long long v27 = sub_1BFC660C8(*v15, *v20, &v33, *v25, v11, &v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    unint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    *a2 = v27;
    a2[1] = &off_1F1BEB550;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1BFCCBD3C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCCBD9C()
{
  unint64_t result = qword_1EB8774E8;
  if (!qword_1EB8774E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8774E8);
  }
  return result;
}

uint64_t _s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_38;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_38;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14) {
        goto LABEL_38;
      }
      char v6 = 1;
      unint64_t v3 = 14;
      break;
    default:
      if (v5 < 0xF)
      {
LABEL_38:
        char v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        char v6 = 1;
      }
      else
      {
        char v6 = sub_1C1520A9C();
      }
      sub_1BFE74E64(v4, v5);
      sub_1BFE74E64(v2, v3);
      break;
  }
  sub_1BFF8F648(v2, v3);
  sub_1BFF8F648(v4, v5);
  return v6 & 1;
}

uint64_t sub_1BFCCBFEC(void *a1)
{
  return FormatSystemFont.encode(to:)(a1);
}

uint64_t destroy for FormatButtonNodeStateMaskDataLayoutAttributes()
{
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for FormatColorNotExpression(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_1BFCCC07C()
{
  uint64_t result = 0x756F72676B636162;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65736E4965676465;
      break;
    case 2:
      uint64_t result = 0x615272656E726F63;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCCC10C()
{
  return sub_1C0761490(*v0);
}

uint64_t sub_1BFCCC114(uint64_t a1, uint64_t a2)
{
  sub_1BFF5B7CC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

uint64_t sub_1BFCCC190()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFCCC1F0()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFCCC240()
{
  unint64_t result = qword_1EB875518;
  if (!qword_1EB875518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875518);
  }
  return result;
}

uint64_t FormatDecorationProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCCC348@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FeedCursorGroup();
  uint64_t result = FeedCursorGroup.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FeedCursorGroup.identifier.getter()
{
  return sub_1C151811C();
}

uint64_t sub_1BFCCC468@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFCCC49C(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_1BFCCC49C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  long long v33 = a4;
  v26[0] = a2;
  v26[1] = a3;
  sub_1BFD98850(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  long long v29 = (char *)v26 - v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v26 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v31 = (uint64_t)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v32 = (char *)v26 - v16;
  uint64_t v30 = *a1;
  uint64_t v17 = a1[2];
  uint64_t v27 = a1[1];
  uint64_t v28 = v17;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v37)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v34 = v36;
  uint64_t v35 = v37;
  swift_getAssociatedConformanceWitness();
  sub_1C151EADC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t result = 0;
LABEL_9:
    uint64_t *v33 = result;
    return result;
  }
  uint64_t v19 = v32;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v32, v11, AssociatedTypeWitness);
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v20 = v37;
  if (!v37) {
    goto LABEL_11;
  }
  uint64_t v21 = v36;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v22 = v35;
  uint64_t v23 = (uint64_t)v29;
  if (!v35)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v30 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v31, v19, AssociatedTypeWitness);
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v24 = sub_1C151631C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v27 = v22;
  uint64_t v28 = v21;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v38)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedCursorManifestGroupEntry();
    uint64_t v25 = sub_1C1519D5C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v32, AssociatedTypeWitness);
    uint64_t result = sub_1BFCCC998(v28, v20, v30, v27, v31, v23, v25);
    goto LABEL_9;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedCursorManifestGroupEntry()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFCCC998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  sub_1BFCCCA20(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

void *sub_1BFCCCA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *v7;
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v7[5] = a4;
  uint64_t v12 = (char *)v7 + *(void *)(v11 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v12, a5, AssociatedTypeWitness);
  uint64_t v14 = (char *)v7 + *(void *)(*v7 + 120);
  uint64_t v15 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a6, v15);
  *(void *)((char *)v7 + *(void *)(*v7 + 128)) = a7;
  return v7;
}

uint64_t sub_1BFCCCC04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FeedGroupRepooling.init(from:)(a1, a2);
}

uint64_t FeedGroupRepooling.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1BFCCCE08(0, &qword_1EB85C5A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCCCDB4();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1BFCCCE6C();
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCCCDB4()
{
  unint64_t result = qword_1EB85B100;
  if (!qword_1EB85B100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B100);
  }
  return result;
}

void sub_1BFCCCE08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFCCCDB4();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupRepooling.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFCCCE6C()
{
  unint64_t result = qword_1EB85CB28[0];
  if (!qword_1EB85CB28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB85CB28);
  }
  return result;
}

void sub_1BFCCCEC0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFCCCF10(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1BFCCCEC0(255, a3, a4, a5, MEMORY[0x1E4FAA6B0]);
    unint64_t v6 = sub_1C151FD8C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1BFCCCF80()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCCCFE0()
{
  unint64_t result = qword_1EB8764F8;
  if (!qword_1EB8764F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8764F8);
  }
  return result;
}

unint64_t sub_1BFCCD034()
{
  return sub_1C0782EE4(*v0);
}

uint64_t sub_1BFCCD03C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCommandOpenURL.init(from:)(a1, a2);
}

uint64_t FormatCommandOpenURL.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1F4188790](v36);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v12 = v39;
  sub_1C1520EBC();
  if (!v12)
  {
    uint64_t v39 = 0;
    uint64_t v32 = v11;
    long long v33 = v4;
    uint64_t v13 = v35;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v14 = sub_1C1520EAC();
    char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
    swift_bridgeObjectRelease();
    uint64_t v16 = v6;
    uint64_t v17 = v8;
    if (v15)
    {
      uint64_t v18 = sub_1C152070C();
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v20 = (unint64_t *)(v18 + 40);
        while (1)
        {
          unint64_t v21 = *v20;
          if (*v20 >= 4) {
            break;
          }
          v20 += 2;
          if (!--v19) {
            goto LABEL_7;
          }
        }
        uint64_t v26 = *(v20 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1C02570B4();
        swift_allocError();
        *(void *)uint64_t v27 = v26;
        *(void *)(v27 + 8) = v21;
        *(void *)(v27 + 16) = &unk_1F1B68F08;
        *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1C0257108(v26, v21);
        goto LABEL_12;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFCCD620();
    v38[0] = 0uLL;
    uint64_t v22 = v39;
    sub_1C15206EC();
    if (v22)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v16);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    if (v37 < 2u)
    {
      v38[0] = xmmword_1C152C800;
      sub_1C0257884(&qword_1EB85EAC0, (void (*)(uint64_t))type metadata accessor for FormatAbsoluteURL);
      uint64_t v29 = (uint64_t)v33;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v6);
      uint64_t v30 = v29;
      uint64_t v25 = v32;
      sub_1BFCCD550(v30, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    }
    else
    {
      uint64_t v23 = v34;
      long long v37 = xmmword_1C152C800;
      sub_1BFE2DD44();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v16);
      long long v24 = *(_OWORD *)((char *)v38 + 8);
      uint64_t v25 = v32;
      *uint64_t v32 = *(void *)&v38[0];
      *(_OWORD *)(v25 + 1) = v24;
    }
    swift_storeEnumTagMultiPayload();
    sub_1BFCCD550((uint64_t)v25, v13, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFCCD550(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFCCD5B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1BFCCD620()
{
  unint64_t result = qword_1EB876B28;
  if (!qword_1EB876B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876B28);
  }
  return result;
}

uint64_t FormatItemNodeLayoutAttributes.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCCD6D4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A0F0);
  sub_1C151E78C();
  uint64_t v4 = (void *)sub_1C151814C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1BFCB6824(0, &qword_1EB8715B0);
    *(void *)(swift_allocObject() + 16) = v4;
    id v6 = v4;
    sub_1C151817C();
    swift_release();

    swift_beginAccess();
    sub_1BFCCD8F4((uint64_t)v7, v3 + 16);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1BFCCD840(void *a1)
{
  return sub_1BFCCD85C(a1);
}

uint64_t sub_1BFCCD85C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A0F0);
  sub_1C151E78C();
  sub_1C1517F7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCCD8F4(uint64_t a1, uint64_t a2)
{
  sub_1BFC88358(0, &qword_1EB8715B8, &qword_1EB8715B0, MEMORY[0x1E4FACAA0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BFCCD984(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v133 = a1;
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v128 = *(void *)(v3 - 8);
  uint64_t v129 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v127 = (unint64_t)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v136 = *(void *)(v1 + 48);
  uint64_t v137 = v5;
  int v10 = *(unsigned __int8 *)(v1 + 64);
  *(void *)&long long v150 = v5;
  *((void *)&v150 + 1) = v6;
  uint64_t v151 = v8;
  uint64_t v152 = v7;
  uint64_t v153 = v136;
  uint64_t v154 = v9;
  char v155 = v10;
  sub_1BFCCE844();
  uint64_t v11 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v134 = objc_msgSend(self, sel_animationWithKeyPath_, v11);

  uint64_t v12 = v136;
  uint64_t v13 = v137;
  *(void *)&long long v150 = v137;
  *((void *)&v150 + 1) = v6;
  uint64_t v151 = v8;
  uint64_t v152 = v7;
  uint64_t v153 = v136;
  uint64_t v154 = v9;
  char v155 = v10;
  id v130 = v134;
  uint64_t v131 = v8;
  uint64_t v132 = v6;
  LODWORD(v134) = v10;
  sub_1BFCCE6B0(v13, v6, v8, v7, v12, v9, v10);
  uint64_t v14 = v135;
  sub_1BFC45A78((uint64_t)v145);
  uint64_t v135 = v14;
  if (v14)
  {
    uint64_t v16 = v136;
    uint64_t v15 = v137;
    uint64_t v18 = v131;
    uint64_t v17 = v132;
    uint64_t v19 = v7;
    uint64_t v20 = v9;
LABEL_3:
    sub_1BFCCE780(v15, v17, v18, v19, v16, v20, (char)v134);
    unint64_t v21 = v130;

    return;
  }
  uint64_t v22 = v130;
  uint64_t v125 = v2;
  uint64_t v126 = v7;
  uint64_t v23 = v136;
  sub_1BFCCE780(v137, v132, v131, v7, v136, v9, (char)v134);
  uint64_t v24 = v146;
  uint64_t v25 = v9;
  if (v146)
  {
    uint64_t v26 = __swift_project_boxed_opaque_existential_1(v145, v146);
    uint64_t v27 = *(void *)(v24 - 8);
    __n128 v28 = MEMORY[0x1F4188790](v26);
    uint64_t v30 = (char *)&v122 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v27 + 16))(v30, v28);
    uint64_t v31 = sub_1C1520A7C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v24);
    uint64_t v23 = v136;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  }
  else
  {
    uint64_t v31 = 0;
  }
  objc_msgSend(v22, sel_setFromValue_, v31);

  swift_unknownObjectRelease();
  uint64_t v32 = v137;
  uint64_t v33 = v131;
  uint64_t v34 = v132;
  *(void *)&long long v150 = v137;
  *((void *)&v150 + 1) = v132;
  uint64_t v35 = v126;
  uint64_t v151 = v131;
  uint64_t v152 = v126;
  uint64_t v153 = v23;
  uint64_t v154 = v25;
  char v36 = (char)v134;
  char v155 = (char)v134;
  id v37 = v22;
  sub_1BFCCE6B0(v32, v34, v33, v35, v23, v25, v36);
  uint64_t v38 = v135;
  sub_1BFC458E0((uint64_t)v145);
  uint64_t v135 = v38;
  if (v38)
  {
    sub_1BFCCE780(v32, v34, v33, v35, v23, v25, (char)v134);

    return;
  }
  sub_1BFCCE780(v32, v34, v33, v35, v23, v25, (char)v134);
  uint64_t v39 = v146;
  if (v146)
  {
    uint64_t v40 = __swift_project_boxed_opaque_existential_1(v145, v146);
    uint64_t v41 = *(void *)(v39 - 8);
    __n128 v42 = MEMORY[0x1F4188790](v40);
    uint64_t v44 = (char *)&v122 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v41 + 16))(v44, v42);
    uint64_t v45 = sub_1C1520A7C();
    uint64_t v46 = v132;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v39);
    uint64_t v47 = v131;
    uint64_t v23 = v136;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  }
  else
  {
    uint64_t v47 = v33;
    uint64_t v45 = 0;
    uint64_t v46 = v34;
  }
  objc_msgSend(v37, sel_setToValue_, v45);

  swift_unknownObjectRelease();
  uint64_t v48 = v137;
  *(void *)&long long v150 = v137;
  *((void *)&v150 + 1) = v46;
  uint64_t v49 = v126;
  uint64_t v151 = v47;
  uint64_t v152 = v126;
  uint64_t v153 = v23;
  uint64_t v154 = v25;
  char v50 = (char)v134;
  char v155 = (char)v134;
  id v130 = v37;
  sub_1BFCCE6B0(v48, v46, v47, v49, v23, v25, v50);
  uint64_t v51 = v135;
  sub_1C006E5E4((uint64_t)v145);
  uint64_t v135 = v51;
  uint64_t v15 = v48;
  uint64_t v17 = v46;
  uint64_t v18 = v47;
  uint64_t v19 = v49;
  uint64_t v16 = v23;
  if (v51)
  {
    uint64_t v20 = v25;
    goto LABEL_3;
  }
  uint64_t v124 = v25;
  sub_1BFCCE780(v48, v46, v47, v49, v23, v25, (char)v134);
  uint64_t v52 = v146;
  if (v146)
  {
    uint64_t v53 = __swift_project_boxed_opaque_existential_1(v145, v146);
    uint64_t v54 = *(void *)(v52 - 8);
    __n128 v55 = MEMORY[0x1F4188790](v53);
    uint64_t v57 = (char *)&v122 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v54 + 16))(v57, v55);
    uint64_t v58 = sub_1C1520A7C();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v52);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  }
  else
  {
    uint64_t v58 = 0;
  }
  uint64_t v59 = v130;
  objc_msgSend(v130, sel_setByValue_, v58);

  swift_unknownObjectRelease();
  uint64_t v60 = v125;
  int v61 = *(unsigned __int8 *)(v125 + 88);
  uint64_t v62 = v132;
  if (v61 != 255)
  {
    long long v150 = *(_OWORD *)(v125 + 72);
    LOBYTE(v151) = v61 & 1;
    id v63 = v59;
    sub_1C1517EFC();
    uint64_t v64 = v135;
    char v65 = FormatBoolean.value(contextLayoutOptions:)(v145[0]);
    uint64_t v135 = v64;
    if (v64)
    {
LABEL_22:

LABEL_36:
      swift_release();
      return;
    }
    char v66 = v65;
    swift_release();
    objc_msgSend(v63, sel_setCumulative_, v66 & 1);
  }
  int v67 = *(unsigned __int8 *)(v60 + 112);
  if (v67 != 255)
  {
    long long v150 = *(_OWORD *)(v60 + 96);
    LOBYTE(v151) = v67 & 1;
    id v63 = v130;
    sub_1C1517EFC();
    uint64_t v68 = v135;
    char v69 = FormatBoolean.value(contextLayoutOptions:)(v145[0]);
    uint64_t v135 = v68;
    if (v68) {
      goto LABEL_22;
    }
    char v70 = v69;
    swift_release();
    objc_msgSend(v63, sel_setAdditive_, v70 & 1);
  }
  uint64_t v71 = *(void *)(v60 + 120);
  if (v71)
  {
    sub_1C1517EFC();
    uint64_t v72 = v135;
    double v73 = sub_1BFF493E4(v150, v71);
    uint64_t v135 = v72;
    if (v72) {
      goto LABEL_35;
    }
    double v74 = v73;
    swift_release();
    objc_msgSend(v130, sel_setMass_, v74);
  }
  uint64_t v75 = *(void *)(v60 + 128);
  if (v75)
  {
    sub_1C1517EFC();
    uint64_t v76 = v135;
    double v77 = sub_1BFF493E4(v150, v75);
    uint64_t v135 = v76;
    if (v76) {
      goto LABEL_35;
    }
    double v78 = v77;
    swift_release();
    objc_msgSend(v130, sel_setStiffness_, v78);
  }
  uint64_t v79 = *(void *)(v60 + 136);
  if (!v79) {
    goto LABEL_33;
  }
  sub_1C1517EFC();
  uint64_t v80 = v135;
  double v81 = sub_1BFF493E4(v150, v79);
  uint64_t v135 = v80;
  if (v80)
  {
LABEL_35:

    goto LABEL_36;
  }
  double v82 = v81;
  swift_release();
  objc_msgSend(v130, sel_setDamping_, v82);
LABEL_33:
  uint64_t v83 = *(void *)(v60 + 144);
  if (v83)
  {
    sub_1C1517EFC();
    uint64_t v84 = v135;
    double v85 = sub_1BFF493E4(v150, v83);
    uint64_t v135 = v84;
    if (v84) {
      goto LABEL_35;
    }
    double v86 = v85;
    swift_release();
    objc_msgSend(v130, sel_setInitialVelocity_, v86);
  }
  sub_1BFF197F8(0, &qword_1EB87A6B0, (uint64_t (*)(uint64_t))sub_1BFF9544C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v88 = type metadata accessor for FormatOption();
  uint64_t v123 = swift_allocBox();
  CGFloat v90 = v89;
  uint64_t v91 = v137;
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v92 = sub_1C151928C();
  uint64_t v93 = __swift_project_value_buffer(v92, (uint64_t)qword_1EB93CA98);
  uint64_t v94 = v127;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16))(v127, v93, v92);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  objc_msgSend(v130, sel_settlingDuration);
  uint64_t v96 = v95;
  uint64_t v97 = swift_allocObject();
  *(void *)(v97 + 16) = v96;
  *(void *)(v97 + 24) = MEMORY[0x1E4FBC860];
  void *v90 = 0xD000000000000010;
  v90[1] = 0x80000001C1611A50;
  v90[2] = v97 | 0x3000000000000000;
  v90[3] = 1;
  uint64_t v98 = (uint64_t)v90 + *(int *)(v88 + 28);
  sub_1C0BCFA6C(v94, v98, type metadata accessor for FormatVersionRequirement);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v128 + 56))(v98, 0, 1, v129);
  *(void *)(inited + 32) = v123;
  uint64_t v129 = sub_1BFF20000(inited);
  swift_setDeallocating();
  sub_1BFF9544C();
  swift_arrayDestroy();
  v145[0] = v91;
  v145[1] = v62;
  uint64_t v99 = v131;
  uint64_t v100 = v126;
  v145[2] = v131;
  uint64_t v146 = v126;
  uint64_t v101 = v136;
  uint64_t v102 = v124;
  uint64_t v147 = v136;
  uint64_t v148 = v124;
  char v103 = (char)v134;
  char v149 = (char)v134;
  unint64_t v127 = sub_1BFCCE844();
  uint64_t v128 = v104;
  sub_1C0BCFA6C(v125 + 152, (uint64_t)&v150, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C0BCFA6C((uint64_t)&v150, (uint64_t)v145, (uint64_t (*)(void))sub_1C00F652C);
  uint64_t v138 = v91;
  uint64_t v139 = v62;
  uint64_t v140 = v99;
  uint64_t v141 = v100;
  uint64_t v142 = v101;
  uint64_t v143 = v102;
  char v144 = v103;
  sub_1BFCCE6B0(v91, v62, v99, v100, v101, v102, v103);
  sub_1C00F6940((uint64_t)&v150, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
  uint64_t v105 = v135;
  uint64_t v106 = sub_1BFC4EE54();
  uint64_t v135 = v105;
  if (v105)
  {

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v108 = v137;
    uint64_t v109 = v132;
    uint64_t v110 = v99;
    uint64_t v111 = v100;
LABEL_44:
    sub_1BFCCE780(v108, v109, v110, v111, v101, v102, (char)v134);
    sub_1C00F6940((uint64_t)&v150, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
    return;
  }
  uint64_t v123 = (uint64_t)v106;
  uint64_t v125 = v107;
  uint64_t v112 = v137;
  uint64_t v113 = v132;
  char v114 = (char)v134;
  sub_1BFCCE780(v137, v132, v99, v100, v101, v102, (char)v134);
  uint64_t v138 = v112;
  uint64_t v139 = v113;
  uint64_t v140 = v99;
  uint64_t v141 = v100;
  uint64_t v142 = v101;
  uint64_t v143 = v102;
  char v144 = v114;
  sub_1BFCCE6B0(v112, v113, v99, v100, v101, v102, v114);
  uint64_t v115 = v135;
  uint64_t v116 = sub_1BFC51910();
  uint64_t v118 = v99;
  uint64_t v119 = v100;
  uint64_t v135 = v115;
  if (v115)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFC3E5C0(v123);

    uint64_t v108 = v112;
    uint64_t v109 = v132;
    uint64_t v110 = v118;
    uint64_t v111 = v100;
    goto LABEL_44;
  }
  uint64_t v120 = (uint64_t)v116;
  uint64_t v121 = v117;
  sub_1BFCCE780(v112, v132, v118, v119, v101, v102, (char)v134);
  type metadata accessor for FormatAnimation();
  swift_allocObject();
  sub_1BFC64668(v130, v127, v128, v129, (uint64_t)v145, v123, v125, v120, v121);
}

uint64_t sub_1BFCCE6B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 4:
      sub_1BFDB3920(result);
      sub_1BFDB3920(a3);
      uint64_t result = sub_1BFDB3920(a5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCCE780(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
      sub_1BFDB3960(result);
      sub_1BFDB3960(a3);
      uint64_t result = sub_1BFDB3960(a5);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFCCE844()
{
  unint64_t result = 0x726F66736E617274;
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
    case 2:
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCCE984@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCompilerEnumProperty.init(from:)(a1, a2);
}

uint64_t FormatCompilerEnumProperty.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v63 = (char *)&v49 - v4;
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v62 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C087D454();
  uint64_t v10 = v9;
  uint64_t v64 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C087D4E8();
  sub_1C085F050(&qword_1EB8921D0, (void (*)(uint64_t))sub_1C087D4E8);
  uint64_t v13 = v66;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v66 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = v10;
  uint64_t v18 = v65;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      unint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      *(&v49 - 4) = (uint64_t)&_s10CodingKeysON_162;
      *(&v49 - 3) = sub_1C087D56C();
      *(&v49 - 2) = sub_1BFCCF3A4();
      *(&v49 - 1) = sub_1C087D5C0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v29 = sub_1C085FB14((uint64_t)&unk_1F1B6BB00);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v30 = v26;
      *(void *)(v30 + 8) = v27;
      *(void *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v27, 1);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v12, v17);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = v18;
  long long v71 = 0uLL;
  char v72 = 0;
  uint64_t v23 = sub_1C152069C();
  uint64_t v25 = v24;
  long long v71 = xmmword_1C153AB20;
  char v72 = 0;
  uint64_t v60 = sub_1C152069C();
  uint64_t v61 = v23;
  uint64_t v32 = v31;
  long long v71 = xmmword_1C1557FA0;
  char v72 = 0;
  uint64_t v33 = sub_1C152069C();
  uint64_t v59 = v35;
  uint64_t v57 = v33;
  long long v58 = xmmword_1C1557FB0;
  long long v71 = xmmword_1C1557FB0;
  char v72 = 0;
  char v36 = sub_1C152071C();
  if (v36)
  {
    long long v69 = v58;
    char v70 = 0;
    sub_1C15206EC();
    uint64_t v55 = v67;
    unint64_t v37 = v68;
  }
  else
  {
    uint64_t v55 = 0;
    unint64_t v37 = 0xE000000000000000;
  }
  *(void *)&long long v58 = v37;
  long long v56 = xmmword_1C1557FD0;
  long long v71 = xmmword_1C1557FD0;
  char v72 = 0;
  if (sub_1C152071C())
  {
    long long v69 = v56;
    char v70 = 0;
    sub_1C15206EC();
    *(void *)&long long v56 = v25;
    int v38 = v67;
  }
  else
  {
    *(void *)&long long v56 = v25;
    int v38 = 1;
  }
  int v54 = v38;
  long long v71 = xmmword_1C1557FC0;
  char v72 = 0;
  uint64_t v39 = sub_1C152060C();
  uint64_t v41 = v40;
  uint64_t v52 = v39;
  long long v53 = xmmword_1C1557FE0;
  long long v71 = xmmword_1C1557FE0;
  char v72 = 0;
  if (sub_1C152071C())
  {
    long long v69 = v53;
    char v70 = 0;
    sub_1C15206EC();
    int v42 = v67;
  }
  else
  {
    int v42 = 0;
  }
  int v51 = v42;
  long long v53 = xmmword_1C1557FF0;
  long long v71 = xmmword_1C1557FF0;
  char v72 = 0;
  if (sub_1C152071C())
  {
    uint64_t v49 = v41;
    uint64_t v50 = v32;
    long long v69 = v53;
    char v70 = 0;
    sub_1C085F050(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v43 = v66;
    sub_1C15206EC();
    *(void *)&long long v53 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v6);
    uint64_t v32 = v50;
    uint64_t v41 = v49;
  }
  else
  {
    *(void *)&long long v53 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v71 = xmmword_1C1558010;
  char v72 = 0;
  sub_1C085F050(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  uint64_t v44 = (uint64_t)v63;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v12, v17);
  uint64_t v45 = type metadata accessor for FormatCompilerEnumProperty(0);
  sub_1BFE30878(v44, v22 + *(int *)(v45 + 48), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v46 = v56;
  *(void *)uint64_t v22 = v61;
  *(void *)(v22 + 8) = v46;
  *(void *)(v22 + 16) = v60;
  *(void *)(v22 + 24) = v32;
  uint64_t v47 = v59;
  *(void *)(v22 + 32) = v57;
  *(void *)(v22 + 40) = v47;
  uint64_t v48 = v58;
  *(void *)(v22 + 48) = v55;
  *(void *)(v22 + 56) = v48;
  *(unsigned char *)(v22 + 64) = v54;
  *(void *)(v22 + 72) = v52;
  *(void *)(v22 + 80) = v41;
  *(unsigned char *)(v22 + 88) = v51;
  *(void *)(v22 + 96) = v53;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCCF3A4()
{
  unint64_t result = qword_1EB88C0B8;
  if (!qword_1EB88C0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C0B8);
  }
  return result;
}

NewsFeed::FormatTextNodeAttachmentAlignment_optional __swiftcall FormatTextNodeAttachmentAlignment.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFCCF45C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupCollection.init(from:)(a1, a2);
}

uint64_t FormatGroupCollection.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    sub_1BFFE6A6C(0, (unint64_t *)&qword_1EB879D80, MEMORY[0x1E4FBB320]);
    sub_1BFCCF5D8(&qword_1EB85C3A8, &qword_1EB85B6B8);
    sub_1C1520AEC();
    sub_1BFFE59EC(v10[6], &v8);
    uint64_t v6 = v9;
    long long v7 = v8;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    *(_OWORD *)a2 = v7;
    *(void *)(a2 + 16) = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFCCF5D8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFFE6A6C(255, (unint64_t *)&qword_1EB879D80, MEMORY[0x1E4FBB320]);
    sub_1BFCCF684(a2, (void (*)(uint64_t))sub_1BFFE6334);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCCF684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCCF6CC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatSlotDefinitionCollection.init(from:)(a1, a2);
}

uint64_t FormatSlotDefinitionCollection.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BFFE4394(0, &qword_1EB879E50, MEMORY[0x1E4FBB320]);
    sub_1BFCCF840(&qword_1EB879E58, &qword_1EB876CB8);
    sub_1C1520AEC();
    sub_1BFFE39A4(v8[6], &v7);
    long long v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFCCF840(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFFE4394(255, &qword_1EB879E50, MEMORY[0x1E4FBB320]);
    sub_1BFCCF978(a2, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCCF8EC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE79B2C(255, a2, a3, MEMORY[0x1E4FBB320]);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCCF978(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCCF9C0()
{
  id v1 = objc_msgSend(*v0, sel_filePath);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

uint64_t sub_1BFCCFA28(uint64_t *a1, uint64_t a2, double a3)
{
  *(void *)(v4 + 136) = v3;
  *(double *)(v4 + 128) = a3;
  *(void *)(v4 + 120) = a2;
  uint64_t v6 = *v3;
  long long v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0427024(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  *(void *)(v4 + 144) = swift_task_alloc();
  *(void *)(v4 + 152) = *(void *)(v6 + 88);
  *(void *)(v4 + 160) = *(void *)(v6 + 80);
  *(void *)(v4 + 168) = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 176) = swift_getAssociatedConformanceWitness();
  *(void *)(v4 + 184) = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C151FD8C();
  *(void *)(v4 + 192) = v8;
  *(void *)(v4 + 200) = *(void *)(v8 - 8);
  *(void *)(v4 + 208) = swift_task_alloc();
  sub_1C0427024(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v7);
  *(void *)(v4 + 216) = swift_task_alloc();
  *(void *)(v4 + 224) = swift_task_alloc();
  uint64_t v9 = sub_1C151FD8C();
  *(void *)(v4 + 232) = v9;
  *(void *)(v4 + 240) = *(void *)(v9 - 8);
  *(void *)(v4 + 248) = swift_task_alloc();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 256) = AssociatedTypeWitness;
  *(void *)(v4 + 264) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v4 + 272) = swift_task_alloc();
  *(void *)(v4 + 280) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for FeedServiceFetchResult.Internal();
  *(void *)(v4 + 288) = v11;
  *(void *)(v4 + 296) = *(void *)(v11 - 8);
  *(void *)(v4 + 304) = swift_task_alloc();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = *a1;
  *(void *)(v4 + 312) = v12;
  *(void *)(v4 + 320) = v13;
  return MEMORY[0x1F4188298](sub_1BFE14468, 0, 0);
}

uint64_t FormatOptionConverter.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCCFE5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFCCFE88(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCCFE88(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB884E80, (void (*)(void))sub_1C00780EC, (void (*)(void))sub_1C0078140);
  uint64_t v3 = v2;
  uint64_t v65 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v47 - v4;
  sub_1C0906720();
  uint64_t v7 = v6;
  uint64_t v66 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0865AD4();
  uint64_t KeyPath = v10;
  sub_1C085F050(&qword_1EB891E90, (void (*)(uint64_t))sub_1C0865AD4);
  uint64_t v12 = v67;
  sub_1C1520EBC();
  uint64_t v13 = v12;
  if (v12)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v67 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1C1520EAC();
  char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unsigned char *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *((void *)v18 - 2);
      uint64_t v25 = *((void *)v18 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v26 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v26);
      sub_1C0865B58();
      sub_1C0030254();
      sub_1C0865BAC();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v27 = sub_1C085FB14((uint64_t)&unk_1F1B6AA70);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v28 = swift_allocError();
      *(void *)uint64_t v29 = v24;
      *(void *)(v29 + 8) = v25;
      *(void *)(v29 + 16) = v27;
      *(_OWORD *)(v29 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v30 = v25;
      uint64_t v13 = (void *)v28;
      sub_1BFE94AD4(v24, v30, 1);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v7);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C0906720);
  uint64_t v21 = v20;
  long long v70 = xmmword_1C153AB20;
  LOBYTE(v71) = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v23 = v66;
  uint64_t v64 = v31;
  uint64_t v62 = v22;
  long long v63 = xmmword_1C1557FA0;
  long long v70 = xmmword_1C1557FA0;
  LOBYTE(v71) = 0;
  char v32 = sub_1C152071C();
  if (v32)
  {
    uint64_t v61 = v21;
    long long v68 = v63;
    char v69 = 0;
    sub_1C09067B4();
    uint64_t v33 = v67;
    sub_1C15206EC();
    *(void *)&long long v63 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v3);
    uint64_t v21 = v61;
  }
  else
  {
    *(void *)&long long v63 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v70 = xmmword_1C1557FB0;
  LOBYTE(v71) = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v35 = (char *)v68;
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v70 = xmmword_1C1557FD0;
  LOBYTE(v71) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v67 = v35;
  uint64_t v36 = v68;
  long long v68 = xmmword_1C1557FC0;
  char v69 = 0;
  sub_1BFE9224C();
  sub_1C152065C();
  uint64_t v65 = v36;
  uint64_t v37 = *((void *)&v70 + 1);
  uint64_t v60 = v70;
  LODWORD(v61) = v71;
  long long v68 = xmmword_1C1557FE0;
  char v69 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  uint64_t v59 = v37;
  long long v52 = v70;
  uint64_t v53 = v71;
  uint64_t v54 = v72;
  uint64_t v55 = v73;
  uint64_t v56 = v74;
  uint64_t v57 = v75;
  uint64_t v58 = v76;
  uint64_t v51 = v77;
  uint64_t v50 = v78;
  LODWORD(v37) = v79;
  long long v70 = xmmword_1C1557FF0;
  LOBYTE(v71) = 0;
  int v48 = sub_1C152061C();
  int v49 = v37;
  long long v70 = xmmword_1C1558010;
  LOBYTE(v71) = 0;
  uint64_t v38 = sub_1C152061C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  type metadata accessor for FormatGroupNodeStyle();
  uint64_t KeyPath = swift_allocObject();
  swift_beginAccess();
  *(void *)(KeyPath + 16) = v19;
  *(void *)(KeyPath + 24) = v21;
  uint64_t v39 = v64;
  *(void *)(KeyPath + 32) = v62;
  *(void *)(KeyPath + 40) = v39;
  swift_beginAccess();
  uint64_t v40 = v67;
  *(void *)(KeyPath + 48) = v63;
  *(void *)(KeyPath + 56) = v40;
  uint64_t v41 = v60;
  *(void *)(KeyPath + 64) = v65;
  *(void *)(KeyPath + 72) = v41;
  *(void *)(KeyPath + 80) = v59;
  *(unsigned char *)(KeyPath + 88) = v61;
  uint64_t v42 = *((void *)&v52 + 1);
  *(void *)(KeyPath + 96) = v52;
  *(void *)(KeyPath + 104) = v42;
  uint64_t v43 = v54;
  *(void *)(KeyPath + 112) = v53;
  *(void *)(KeyPath + 120) = v43;
  uint64_t v44 = v56;
  *(void *)(KeyPath + 128) = v55;
  *(void *)(KeyPath + 136) = v44;
  uint64_t v45 = v58;
  *(void *)(KeyPath + 144) = v57;
  *(void *)(KeyPath + 152) = v45;
  uint64_t v46 = v50;
  *(void *)(KeyPath + 160) = v51;
  *(void *)(KeyPath + 168) = v46;
  *(unsigned char *)(KeyPath + 176) = v49;
  *(unsigned char *)(KeyPath + 177) = v48;
  *(unsigned char *)(KeyPath + 178) = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t sub_1BFCD0A14(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  return (*(uint64_t (**)(uint64_t))(v3 + *(int *)(v4 + 28)))(a1);
}

uint64_t sub_1BFCD0A70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1C151D4AC() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  return sub_1BFCD0B18(a1, v2 + ((v6 + 16) & ~v6), v2 + ((*(void *)(v5 + 64) + v6 + ((v6 + 16) & ~v6)) & ~v6), a2);
}

uint64_t sub_1BFCD0B18@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v7 = sub_1C151D4AC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = a1[4];
  uint64_t v23 = a1[3];
  uint64_t v24 = v14;
  uint64_t v25 = __swift_project_boxed_opaque_existential_1(a1, v23);
  v22[1] = sub_1C151D0EC();
  char v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v13, a2, v7);
  v15(v11, a3, v7);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (v16 + 16) & ~v16;
  uint64_t v18 = (v9 + v16 + v17) & ~v16;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v20(v19 + v17, v13, v7);
  v20(v19 + v18, v11, v7);
  sub_1C151D7BC();
  sub_1C151D7FC();
  sub_1C151D87C();
  sub_1C002C724(&qword_1EB894940, MEMORY[0x1E4F7AE10]);
  sub_1C151D7CC();
  swift_release();
  return swift_release();
}

uint64_t sub_1BFCD0D94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatUnderline.init(from:)(a1, a2);
}

uint64_t FormatUnderline.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C08C4324();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C43B8();
  sub_1C085F050(&qword_1EB892610, (void (*)(uint64_t))sub_1C08C43B8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      char v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_11;
      *(&v24 - 3) = sub_1C08C443C();
      *(&v24 - 2) = sub_1BFCD1170();
      *(&v24 - 1) = sub_1C08C4490();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B889E8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCD11C4();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C152065C();
  char v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1BFE113DC();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  *(unsigned char *)uint64_t v12 = v16;
  *(void *)(v12 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCD1170()
{
  unint64_t result = qword_1EB8879F0;
  if (!qword_1EB8879F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8879F0);
  }
  return result;
}

unint64_t sub_1BFCD11C4()
{
  unint64_t result = qword_1EB87F210;
  if (!qword_1EB87F210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87F210);
  }
  return result;
}

uint64_t sub_1BFCD1218@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatQueryParameter.init(from:)(a1, a2);
}

uint64_t FormatQueryParameter.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1C086362C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08636C0();
  sub_1C085F050(&qword_1EB891EE0, (void (*)(uint64_t))sub_1C08636C0);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)v28;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      char v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v28 = *((void *)v16 - 2);
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_254;
      *(&v28 - 3) = sub_1C0863744();
      *(&v28 - 2) = sub_1BFFD972C();
      *(&v28 - 1) = sub_1C0863798();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B691E8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v24 = v28;
      *(void *)uint64_t v25 = v28;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v12;
  long long v29 = 0uLL;
  char v30 = 0;
  uint64_t v18 = sub_1C152069C();
  uint64_t v20 = v19;
  long long v29 = xmmword_1C153AB20;
  char v30 = 0;
  sub_1BFCD1614();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  uint64_t v27 = v31;
  *uint64_t v17 = v18;
  v17[1] = v20;
  v17[2] = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCD1614()
{
  unint64_t result = qword_1EB875430;
  if (!qword_1EB875430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875430);
  }
  return result;
}

uint64_t sub_1BFCD1668@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDateFormat.init(from:)(a1, a2);
}

uint64_t FormatDateFormat.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (!v2)
  {
    uint64_t v10 = v6;
    uint64_t v11 = v31;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v12 = sub_1C1520EAC();
    char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
    swift_bridgeObjectRelease();
    uint64_t v14 = v8;
    if (v13)
    {
      uint64_t v15 = sub_1C152070C();
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        uint64_t v17 = (unint64_t *)(v15 + 40);
        while (1)
        {
          unint64_t v18 = *v17;
          if (*v17 >= 4) {
            break;
          }
          v17 += 2;
          if (!--v16) {
            goto LABEL_7;
          }
        }
        uint64_t v22 = *(v17 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1C02570B4();
        uint64_t v9 = (void *)swift_allocError();
        *(void *)uint64_t v23 = v22;
        *(void *)(v23 + 8) = v18;
        *(void *)(v23 + 16) = &unk_1F1B84A08;
        *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1C0257108(v22, v18);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
        goto LABEL_12;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFCD1A24();
    uint64_t v27 = 0;
    *(void *)&long long v28 = 0;
    sub_1C15206EC();
    if ((_BYTE)v26)
    {
      if (v26 != 1)
      {
        long long v26 = xmmword_1C152C800;
        sub_1C08828A4();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
        long long v21 = v28;
        uint64_t v20 = v29;
        long long v25 = v30;
        uint64_t v19 = (unsigned __int16)v27;
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1533700;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C152C800;
    }
    long long v25 = 0uLL;
LABEL_16:
    *(void *)uint64_t v11 = v19;
    *(_OWORD *)(v11 + 8) = v21;
    *(void *)(v11 + 24) = v20;
    *(_OWORD *)(v11 + 32) = v25;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_12:
  sub_1C0038728(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCD1A24()
{
  unint64_t result = qword_1EB8854C0;
  if (!qword_1EB8854C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8854C0);
  }
  return result;
}

uint64_t sub_1BFCD1A78()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v6 = v0[71];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_1BFCD1C18(_DWORD *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  unint64_t v4 = 8;
  if (((v3 + 7) & 0xFFFFFFFFFFFFFFF8) != 0xFFFFFFFFFFFFFFF8) {
    unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v5 = *((unsigned __int8 *)a1 + v4);
  uint64_t v6 = v4 & 0xFFFFFFF8;
  if (v5 >= 3 && v6 != 0) {
    unsigned int v5 = *a1 + 3;
  }
  if (v5 <= 1) {
    (*(void (**)(_DWORD *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  }
  return swift_release();
}

uint64_t sub_1BFCD1D64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayoutView.blueprintViewportMonitor(_:willDisplayCellWith:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unsigned int v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      if (v7 < 1) {
        goto LABEL_45;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v10 = (id)MEMORY[0x1C18C7CB0](i, v6);
        }
        else {
          id v10 = *(id *)(v6 + 8 * i + 32);
        }
        uint64_t v11 = v10;
        sub_1C151C40C();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = *v12 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(*v12 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(*v12 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (v17)
  {
    unint64_t v22 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v23 = v22 | (v19 << 6);
LABEL_33:
    unint64_t v27 = *(void *)(*(void *)(*(void *)(v13 + 56) + 8 * v23) + 56);
    switch((v27 >> 59) & 0x1E | (v27 >> 2) & 1)
    {
      case 4uLL:
        uint64_t v20 = *(void **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        id v21 = v20;
        FormatLayoutView.blueprintViewportMonitor(_:willDisplayCellWith:)(a1, a2);
        swift_release();

        goto LABEL_14;
      case 0xBuLL:
        long long v28 = *(char **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v29 = *(void *)&v28[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v29) {
          continue;
        }
        uint64_t v30 = *(void *)(v29 + qword_1EB870530);
        goto LABEL_40;
      case 0xCuLL:
        uint64_t v31 = *(char **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v32 = *(void *)&v31[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        uint64_t result = swift_beginAccess();
        int v33 = *(unsigned __int8 *)(v32 + 17);
        *(unsigned char *)(v32 + 17) = 1;
        if ((v33 & 0xFFFFFFC1) == 1) {
          continue;
        }
        swift_retain();
        swift_retain();
        uint64_t v34 = v31;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_14;
      case 0xDuLL:
        long long v28 = *(char **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v35 = *(void *)&v28[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v35) {
          continue;
        }
        uint64_t v30 = *(void *)(v35 + qword_1EB870530);
LABEL_40:
        uint64_t result = swift_beginAccess();
        int v36 = *(unsigned __int8 *)(v30 + 17);
        *(unsigned char *)(v30 + 17) = 1;
        if ((v36 & 0xFFFFFFC1) != 1)
        {
          swift_retain();
          swift_retain();
          uint64_t v37 = v28;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_14:
          uint64_t result = swift_release();
        }
        break;
      default:
        continue;
    }
  }
  int64_t v24 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v24 >= v18) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v14 + 8 * v24);
  ++v19;
  if (v25) {
    goto LABEL_32;
  }
  int64_t v19 = v24 + 1;
  if (v24 + 1 >= v18) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v14 + 8 * v19);
  if (v25) {
    goto LABEL_32;
  }
  int64_t v19 = v24 + 2;
  if (v24 + 2 >= v18) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v14 + 8 * v19);
  if (v25) {
    goto LABEL_32;
  }
  int64_t v19 = v24 + 3;
  if (v24 + 3 >= v18) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v14 + 8 * v19);
  if (v25)
  {
LABEL_32:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v19 << 6);
    goto LABEL_33;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v18) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (v25)
  {
    int64_t v19 = v26;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v19 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v19 >= v18) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v14 + 8 * v19);
    ++v26;
    if (v25) {
      goto LABEL_32;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1BFCD21B0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCD2200()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCD2260()
{
  unint64_t result = qword_1EB88A270;
  if (!qword_1EB88A270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A270);
  }
  return result;
}

uint64_t sub_1BFCD22B4()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7373616C63;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 1752457584;
      break;
    case 4:
      uint64_t result = 0x73726564726F62;
      break;
    case 5:
      uint64_t result = 0x776F64616873;
      break;
    case 6:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCD236C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB895420);
  uint64_t result = sub_1C151819C();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB871438);
  uint64_t result = sub_1C151819C();
  if (v8[3])
  {
    uint64_t v6 = type metadata accessor for WebEmbedDataSourceService();
    swift_allocObject();
    uint64_t v7 = sub_1C093627C(v5, (uint64_t)v9, v8);
    uint64_t result = swift_unknownObjectRelease();
    a2[3] = v6;
    a2[4] = &protocol witness table for WebEmbedDataSourceService;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WebEmbedDataSourceService()
{
  return self;
}

uint64_t sub_1BFCD24F8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFCD2540(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFCD25A4()
{
  if (!qword_1EB884F98)
  {
    sub_1C0065708();
    unint64_t v0 = sub_1C15183DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884F98);
    }
  }
}

uint64_t sub_1BFCD260C()
{
  return sub_1BFCD2624();
}

uint64_t sub_1BFCD2624()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 8))(*(void *)(v0 + 16));
}

unint64_t sub_1BFCD2668()
{
  return sub_1C07587C8(*v0);
}

uint64_t FormatAccessibilityLayoutValue.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCD26A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFCD271C()
{
  uint64_t result = 24945;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E6967617473;
      break;
    case 2:
      uint64_t result = 0x69746375646F7270;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatContentSubgroup.ResolvedContainer.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_1BFEE0A78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BFCD2848@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BFCD2860(char a1)
{
  if (!a1) {
    return 0x6973736572707865;
  }
  if (a1 == 1) {
    return 0x7365756C6176;
  }
  return 1885433183;
}

uint64_t sub_1BFCD28B0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCD2900()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCD2960()
{
  unint64_t result = qword_1EB888530;
  if (!qword_1EB888530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888530);
  }
  return result;
}

uint64_t sub_1BFCD29B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFCD29E0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCD29E0(void *a1)
{
  sub_1BFE89214();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v61 = &v47[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v5 = v4;
  uint64_t v62 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v47[-v6];
  sub_1C0907808();
  uint64_t v9 = v8;
  uint64_t v63 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v47[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0862EDC();
  sub_1C085F050(&qword_1EB86CD08, (void (*)(uint64_t))sub_1C0862EDC);
  uint64_t v13 = v64;
  sub_1C1520EBC();
  uint64_t v14 = (void *)v13;
  if (v13) {
    goto LABEL_12;
  }
  uint64_t v15 = v7;
  uint64_t v64 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t KeyPath = sub_1C1520EAC();
  uint64_t v16 = Dictionary<>.errorOnUnknownKeys.getter(KeyPath);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t KeyPath = v17;
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      int64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v19 - 2);
      uint64_t v25 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v27 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v27);
      sub_1C0862F60();
      sub_1C0030200();
      sub_1C0862FB4();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v28 = sub_1C085FB14((uint64_t)&unk_1F1B68D58);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v29 = swift_allocError();
      *(void *)uint64_t v30 = v26;
      *(void *)(v30 + 8) = v25;
      *(void *)(v30 + 16) = v28;
      uint64_t v14 = (void *)v29;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v25, 1);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v64;
  uint64_t v21 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C0907808);
  uint64_t v14 = (void *)v20;
  if (v20)
  {
LABEL_11:
    (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v11, v9);
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v23 = v21;
  uint64_t v24 = v22;
  long long v70 = xmmword_1C153AB20;
  char v71 = 0;
  sub_1BFE1CFFC();
  sub_1C15206EC();
  uint64_t v64 = v24;
  uint64_t v32 = v65;
  long long v70 = xmmword_1C1557FA0;
  char v71 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  uint64_t v58 = v32;
  uint64_t v56 = v23;
  uint64_t v33 = v65;
  long long v57 = xmmword_1C1557FB0;
  long long v70 = xmmword_1C1557FB0;
  char v71 = 0;
  if (sub_1C152071C())
  {
    uint64_t v55 = v33;
    long long v65 = v57;
    char v66 = 0;
    sub_1C08B07C8();
    sub_1C15206EC();
    uint64_t v34 = v64;
    *(void *)&long long v57 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v15, v5);
    uint64_t v33 = v55;
  }
  else
  {
    *(void *)&long long v57 = MEMORY[0x1E4FBC860];
    uint64_t v34 = v64;
  }
  type metadata accessor for FormatIssueCoverNodeStyle();
  long long v70 = xmmword_1C1557FD0;
  char v71 = 0;
  sub_1C085F050(qword_1EB867938, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle);
  sub_1C152065C();
  uint64_t v35 = v65;
  type metadata accessor for FormatAnimationNodeStyle();
  long long v70 = xmmword_1C1557FC0;
  char v71 = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  uint64_t v64 = v35;
  uint64_t v36 = v65;
  long long v70 = xmmword_1C1557FE0;
  char v71 = 0;
  sub_1BFCD37F0();
  sub_1C15206EC();
  uint64_t v62 = v36;
  uint64_t v55 = v65;
  long long v54 = xmmword_1C1557FF0;
  long long v70 = xmmword_1C1557FF0;
  char v71 = 0;
  if (sub_1C152071C())
  {
    long long v65 = v54;
    char v66 = 0;
    sub_1C15206EC();
    unint64_t v53 = v72;
  }
  else
  {
    unint64_t v53 = 0;
  }
  long long v54 = xmmword_1C1558010;
  long long v70 = xmmword_1C1558010;
  char v71 = 0;
  if (sub_1C152071C())
  {
    long long v65 = v54;
    char v66 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    unint64_t v37 = v72;
  }
  else
  {
    unint64_t v37 = 0x8000000000000000;
  }
  *(void *)&long long v54 = v37;
  long long v52 = xmmword_1C1558020;
  long long v70 = xmmword_1C1558020;
  char v71 = 0;
  if (sub_1C152071C())
  {
    long long v65 = v52;
    char v66 = 0;
    sub_1C15206EC();
    uint64_t v38 = v34;
    int v39 = v72;
  }
  else
  {
    uint64_t v38 = v34;
    int v39 = 1;
  }
  long long v70 = xmmword_1C1558030;
  char v71 = 0;
  sub_1BFE3CF9C();
  sub_1C152065C();
  int v50 = v39;
  *(void *)&long long v52 = a1;
  uint64_t v49 = v65;
  int v48 = BYTE8(v65);
  long long v51 = xmmword_1C1558040;
  long long v70 = xmmword_1C1558040;
  char v71 = 0;
  uint64_t v40 = v11;
  uint64_t v41 = v9;
  uint64_t v42 = v40;
  if (sub_1C152071C())
  {
    long long v65 = v51;
    char v66 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    sub_1C15206EC();
    uint64_t v44 = v60;
    uint64_t v43 = v61;
    uint64_t v45 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v43, v44);
  }
  else
  {
    uint64_t v45 = MEMORY[0x1E4FBC870];
  }
  long long v70 = xmmword_1C1558050;
  char v71 = 0;
  sub_1BFCD3844();
  sub_1C15206EC();
  (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v42, v41);
  char v46 = v65;
  *(void *)&long long v65 = v58;
  unint64_t v72 = v33;
  uint64_t v68 = v54;
  uint64_t v69 = v55;
  *(void *)&long long v70 = v49;
  BYTE8(v70) = v48;
  char v67 = v46;
  type metadata accessor for FormatIssueCoverNode();
  swift_allocObject();
  uint64_t KeyPath = FormatIssueCoverNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(v56, v38, (uint64_t *)&v65, (uint64_t *)&v72, v57, v64, v62, &v69, v53, &v68, v50, (uint64_t *)&v70, v45, &v67);
  __swift_destroy_boxed_opaque_existential_1(v52);
  return KeyPath;
}

unint64_t sub_1BFCD37F0()
{
  unint64_t result = qword_1EB8606A0;
  if (!qword_1EB8606A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8606A0);
  }
  return result;
}

unint64_t sub_1BFCD3844()
{
  unint64_t result = qword_1EB860590;
  if (!qword_1EB860590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860590);
  }
  return result;
}

uint64_t FormatIssueCoverNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13, char *a14)
{
  uint64_t v20 = *a3;
  uint64_t v21 = *a4;
  uint64_t v22 = *a8;
  uint64_t v24 = *a10;
  uint64_t v25 = *a12;
  char v26 = *((unsigned char *)a12 + 8);
  char v27 = *a14;
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = v20;
  *(void *)(v14 + 40) = v21;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = a6;
  *(void *)(v14 + 64) = a7;
  *(void *)(v14 + 72) = v22;
  swift_beginAccess();
  *(void *)(v14 + 80) = a9;
  swift_beginAccess();
  *(void *)(v14 + 88) = v24;
  swift_beginAccess();
  *(unsigned char *)(v14 + 96) = a11;
  *(void *)(v14 + 104) = v25;
  *(unsigned char *)(v14 + 112) = v26;
  swift_beginAccess();
  *(void *)(v14 + 120) = a13;
  *(unsigned char *)(v14 + 128) = v27;
  return v14;
}

uint64_t sub_1BFCD39F0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FeedGroupGroupingRules.init(from:)(a1, a2);
}

uint64_t FeedGroupGroupingRules.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1BFCD4018(0, &qword_1EB86B618, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCD4180();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v36 = 0;
  uint64_t v38 = a2;
  sub_1BFDC6E38();
  LOBYTE(v48) = 0;
  sub_1BFCD3F88(&qword_1EB8866D8, (void (*)(uint64_t))sub_1BFDC6E38);
  sub_1C15205FC();
  if (*(void *)&v43[0])
  {
    uint64_t v33 = *(void *)&v43[0];
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    *(void *)(v11 + 16) = 1000;
    *(void *)(v11 + 24) = v12;
    uint64_t v33 = v11;
  }
  LOBYTE(v48) = 1;
  sub_1C15205FC();
  if (*(void *)&v43[0])
  {
    uint64_t v32 = *(void *)&v43[0];
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 16) = 1000;
    *(void *)(v13 + 24) = v14;
    uint64_t v32 = v13;
  }
  LOBYTE(v48) = 2;
  sub_1C15205FC();
  if (*(void *)&v43[0])
  {
    uint64_t v31 = *(void *)&v43[0];
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = MEMORY[0x1E4FBC860];
    *(void *)(v15 + 16) = 1000;
    *(void *)(v15 + 24) = v16;
    uint64_t v31 = v15;
  }
  LOBYTE(v48) = 3;
  sub_1C15205FC();
  if (*(void *)&v43[0])
  {
    uint64_t v30 = *(void *)&v43[0];
  }
  else
  {
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = MEMORY[0x1E4FBC860];
    *(void *)(v17 + 16) = 1000;
    *(void *)(v17 + 24) = v18;
    uint64_t v30 = v17;
  }
  sub_1C0087D7C();
  LOBYTE(v48) = 4;
  sub_1BFCD3F88(&qword_1EB865350, (void (*)(uint64_t))sub_1C0087D7C);
  sub_1C15205FC();
  uint64_t v19 = *(void *)&v43[0];
  uint64_t v37 = v7;
  if (!*(void *)&v43[0])
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = 0x3FF0000000000000;
    *(unsigned char *)(v19 + 24) = 0;
    *(void *)(v19 + 32) = 1;
    *(unsigned char *)(v19 + 40) = 0;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    *(void *)(v19 + 48) = MEMORY[0x1E4FBC870];
    *(void *)(v19 + 56) = v20;
  }
  sub_1BFDC6EB0();
  LOBYTE(v43[0]) = 5;
  sub_1BFCD3F88(&qword_1EB8866C8, (void (*)(uint64_t))sub_1BFDC6EB0);
  sub_1C15205FC();
  uint64_t v35 = v48;
  sub_1BFCD407C();
  LOBYTE(v43[0]) = 6;
  sub_1BFCD3F88(&qword_1EB862CB0, (void (*)(uint64_t))sub_1BFCD407C);
  sub_1C15205FC();
  uint64_t v34 = v42;
  LOBYTE(v43[0]) = 7;
  sub_1C15205FC();
  uint64_t v21 = v41;
  LOBYTE(v43[0]) = 8;
  sub_1C15205FC();
  uint64_t v22 = v40;
  LOBYTE(v43[0]) = 9;
  sub_1C15205FC();
  sub_1C033E09C(v33, v32, v31, v30, v19, v35, v34, v21, v43, v22, v39);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v6);
  uint64_t v23 = v44;
  uint64_t v24 = v45;
  long long v25 = v43[1];
  long long v26 = v46;
  long long v27 = v47;
  uint64_t v28 = v38;
  *uint64_t v38 = v43[0];
  v28[1] = v25;
  *((void *)v28 + 4) = v23;
  *((void *)v28 + 5) = v24;
  v28[3] = v26;
  unsigned char v28[4] = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFCD3F88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCD3FD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFCD4018(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFCD4180();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupGroupingRules.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFCD407C()
{
  if (!qword_1EB862CB8)
  {
    sub_1C1516D9C();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4FB7810];
    sub_1BFCD41D4(&qword_1EB8628D8, MEMORY[0x1E4FB7810]);
    sub_1BFCD41D4(&qword_1EB8628C8, v0);
    sub_1BFCD41D4(&qword_1EB8628D0, v0);
    unint64_t v1 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB862CB8);
    }
  }
}

unint64_t sub_1BFCD4180()
{
  unint64_t result = qword_1EB865210;
  if (!qword_1EB865210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865210);
  }
  return result;
}

uint64_t sub_1BFCD41D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCD421C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCD4264@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatTypeCollection.init(from:)(a1, a2);
}

uint64_t FormatTypeCollection.encode(to:)(void *a1)
{
  sub_1C12030D0(0, (unint64_t *)&unk_1EB85C690, (uint64_t (*)(void))sub_1BFCD4810, (uint64_t)&type metadata for FormatTypeCollection.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *v1;
  uint64_t v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCD4810();
  sub_1C1520F0C();
  uint64_t v15 = v8;
  char v14 = 0;
  sub_1BFCD4864(0, (unint64_t *)&qword_1EB879D78, MEMORY[0x1E4FBB320]);
  sub_1BFCD48FC(&qword_1EB85C390, &qword_1EB85B6A0);
  uint64_t v9 = v13;
  sub_1C152080C();
  if (!v9)
  {
    uint64_t v15 = v12;
    char v14 = 1;
    sub_1BFCD4770();
    sub_1BFCD4A28();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatTypeCollection.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v14 = a2;
  sub_1C12030D0(0, (unint64_t *)&unk_1EB85C5E8, (uint64_t (*)(void))sub_1BFCD4810, (uint64_t)&type metadata for FormatTypeCollection.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCD4810();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v14;
  sub_1BFCD4864(0, (unint64_t *)&qword_1EB879D78, MEMORY[0x1E4FBB320]);
  char v15 = 0;
  sub_1BFCD48FC(&qword_1EB85C398, &qword_1EB85B6A8);
  sub_1C15206EC();
  uint64_t v11 = v16;
  sub_1BFCD4770();
  char v15 = 1;
  sub_1BFCD4994();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v12 = v16;
  *uint64_t v10 = v11;
  v10[1] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BFCD4770()
{
  if (!qword_1EB85C2D0)
  {
    sub_1C12030D0(255, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C2D0);
    }
  }
}

unint64_t sub_1BFCD4810()
{
  unint64_t result = qword_1EB85BBB0;
  if (!qword_1EB85BBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BBB0);
  }
  return result;
}

void sub_1BFCD4864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C12030D0(255, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFCD48FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFCD4864(255, (unint64_t *)&qword_1EB879D78, MEMORY[0x1E4FBB320]);
    sub_1BFCD4ABC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFCD4994()
{
  unint64_t result = qword_1EB85C2E0;
  if (!qword_1EB85C2E0)
  {
    sub_1BFCD4770();
    sub_1BFCD4ABC(&qword_1EB85B6A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C2E0);
  }
  return result;
}

unint64_t sub_1BFCD4A28()
{
  unint64_t result = qword_1EB85C2D8;
  if (!qword_1EB85C2D8)
  {
    sub_1BFCD4770();
    sub_1BFCD4ABC(&qword_1EB85B6A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C2D8);
  }
  return result;
}

uint64_t sub_1BFCD4ABC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C12030D0(255, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFCD4B38()
{
  sub_1BFCD4B90();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCD4B90()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v2 = sub_1C151CC9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v4 = sub_1C151A79C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v6 = sub_1C151BCEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 184));
  swift_bridgeObjectRelease();
  return v0;
}

void *initializeBufferWithCopyOfBuffer for FormatVideoPlayerContent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_1BFCD4DA0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCD4DF0()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCD4E50()
{
  unint64_t result = qword_1EB88A740;
  if (!qword_1EB88A740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A740);
  }
  return result;
}

void sub_1BFCD4EA4(uint64_t *a1, uint64_t a2, void *a3, void *a4)
{
  id v35 = a4;
  _OWORD v38[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = *(void **)(a2 + 24);
  sub_1C1515E5C();
  char v14 = (void *)sub_1C1515E9C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v36 = 0;
  LODWORD(v13) = objc_msgSend(v13, sel_registerFontWithURL_error_, v14, &v36);

  id v15 = v36;
  if (v13)
  {
    sub_1C151F35C();
    sub_1BFFDEB20();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
    id v17 = a3;
    id v18 = objc_msgSend(v17, sel_description);
    uint64_t v19 = sub_1C151E62C();
    uint64_t v21 = v20;

    *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 64) = sub_1BFE9C558();
    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 40) = v21;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    uint64_t v22 = (void *)sub_1C151FD3C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();

    sub_1C1517E7C();
    swift_beginAccess();
    id v23 = v17;
    id v24 = v35;
    id v25 = v35;
    sub_1BFCD5260(v38, v23, v24);
    swift_endAccess();
    id v26 = v38[1];

    sub_1C1517E8C();
  }
  else
  {
    long long v27 = v15;
    uint64_t v28 = (void *)sub_1C1515D3C();

    swift_willThrow();
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1527210;
    uint64_t v30 = MEMORY[0x1E4FBB1A0];
    *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v31 = sub_1BFE9C558();
    *(void *)(v29 + 64) = v31;
    *(void *)(v29 + 32) = v12;
    *(void *)(v29 + 40) = v11;
    id v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    v38[0] = v28;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    sub_1C152036C();
    id v32 = v36;
    unint64_t v33 = v37;
    *(void *)(v29 + 96) = v30;
    *(void *)(v29 + 104) = v31;
    *(void *)(v29 + 72) = v32;
    *(void *)(v29 + 80) = v33;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    uint64_t v34 = (void *)sub_1C151FD3C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFCD5260(void *a1, void *a2, void *a3)
{
  uint64_t v5 = *v3;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C151FB8C();
  sub_1C1520DCC();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
    uint64_t v9 = *(void *)(v5 + 48) + 16 * v8;
    uint64_t v10 = *(void **)v9;
    id v11 = *(id *)(v9 + 8);
    id v12 = v10;
    char v13 = sub_1C151FB6C();

    if (v13)
    {
LABEL_6:

      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(*v3 + 48) + 16 * v8;
      uint64_t v22 = *(void **)v20;
      uint64_t v21 = *(void **)(v20 + 8);
      *a1 = v22;
      a1[1] = v21;
      id v23 = v21;
      id v24 = v22;
      return 0;
    }
    uint64_t v14 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v14;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      uint64_t v15 = *(void *)(v5 + 48) + 16 * v8;
      uint64_t v16 = *(void **)v15;
      id v17 = *(id *)(v15 + 8);
      id v18 = v16;
      char v19 = sub_1C151FB6C();

      if (v19) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v31 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  id v27 = a3;
  id v28 = a2;
  sub_1BFCD544C((uint64_t)v28, (uint64_t)a3, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v31;
  swift_bridgeObjectRelease();
  *a1 = v28;
  a1[1] = a3;
  return 1;
}

void sub_1BFCD544C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a4 & 1) != 0) {
    goto LABEL_14;
  }
  if (a4)
  {
    sub_1BFC62240();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1C02C7DFC();
      goto LABEL_14;
    }
    sub_1BFC3ED40();
  }
  uint64_t v9 = *v4;
  sub_1C1520DBC();
  sub_1C151FB8C();
  sub_1C1520DCC();
  uint64_t v10 = sub_1C1520E0C();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a3 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
    uint64_t v12 = *(void *)(v9 + 48) + 16 * a3;
    char v13 = *(void **)v12;
    id v14 = *(id *)(v12 + 8);
    id v15 = v13;
    char v16 = sub_1C151FB6C();

    if (v16)
    {
LABEL_13:
      sub_1C1520CEC();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v11;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = *(void *)(v9 + 48) + 16 * a3;
        char v19 = *(void **)v18;
        id v20 = *(id *)(v18 + 8);
        id v21 = v19;
        char v22 = sub_1C151FB6C();

        if (v22) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  id v24 = (void *)(*(void *)(v23 + 48) + 16 * a3);
  *id v24 = a1;
  v24[1] = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
}

NewsFeed::FeedGroupEmitterPriority_optional __swiftcall FeedGroupEmitterPriority.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1BFCD5688@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupNodeMaskPath.init(from:)(a1, a2);
}

uint64_t FormatGroupNodeMaskPath.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v28 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  id v14 = v8;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v26;
      *(void *)(v27 + 8) = v18;
      *(void *)(v27 + 16) = &unk_1F1B821A0;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v26, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCD5B0C();
  long long v29 = 0uLL;
  sub_1C15206EC();
  switch((char)v28)
  {
    case 1:
      long long v29 = xmmword_1C152C800;
      sub_1C086C604();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v22 = 0;
      uint64_t v21 = v28;
      long long v24 = 0uLL;
      char v20 = 1;
      goto LABEL_16;
    case 2:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      long long v24 = 0uLL;
      char v20 = 3;
LABEL_16:
      long long v23 = 0uLL;
      long long v25 = 0uLL;
      break;
    case 3:
      long long v28 = xmmword_1C152C800;
      sub_1BFDD94E8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v22 = *((void *)&v29 + 1);
      uint64_t v21 = v29;
      long long v24 = v30;
      long long v23 = v31;
      char v20 = 2;
      long long v25 = v32;
      break;
    default:
      long long v28 = xmmword_1C152C800;
      sub_1BFE9224C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      char v20 = 0;
      uint64_t v22 = *((void *)&v29 + 1);
      uint64_t v21 = v29;
      long long v23 = 0uLL;
      long long v24 = v30;
      long long v25 = 0uLL;
      break;
  }
  *(void *)uint64_t v11 = v21;
  *(void *)(v11 + 8) = v22;
  *(_OWORD *)(v11 + 16) = v24;
  *(_OWORD *)(v11 + 32) = v23;
  *(_OWORD *)(v11 + 48) = v25;
  *(unsigned char *)(v11 + 64) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCD5B0C()
{
  unint64_t result = qword_1EB88AE20;
  if (!qword_1EB88AE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AE20);
  }
  return result;
}

uint64_t FeedNextCursor.__deallocating_deinit()
{
  swift_release();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCD5BA4(void *a1)
{
  return FormatArticleOverrides.encode(to:)(a1);
}

uint64_t FormatArticleOverrides.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFE0E728(0, &qword_1EB86B8F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE0E6D4();
  sub_1C1520F0C();
  v12[15] = 0;
  sub_1C152074C();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for FormatArticleOverrides();
    v12[14] = 1;
    sub_1C151631C();
    sub_1BFE0D8DC((unint64_t *)&unk_1EB871150, MEMORY[0x1E4F27928]);
    sub_1C152078C();
    v12[13] = *(unsigned char *)(v3 + *(int *)(v10 + 24));
    v12[12] = 2;
    sub_1BFCD5EF0();
    sub_1C152078C();
    v12[11] = 3;
    sub_1C152074C();
    v12[10] = 4;
    type metadata accessor for FormatArticleThumbnail();
    sub_1BFE0D8DC(&qword_1EB867000, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
    sub_1C152078C();
    v12[9] = 5;
    sub_1C1515FDC();
    sub_1BFE0D8DC((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BFCD5EF0()
{
  unint64_t result = qword_1EB866FF8;
  if (!qword_1EB866FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866FF8);
  }
  return result;
}

uint64_t sub_1BFCD5F44(void *a1)
{
  return FormatHeadlineBinding.Command.encode(to:)(a1);
}

uint64_t FormatHeadlineBinding.Command.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v115 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  char v114 = (char *)&v101 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v113 = (char *)&v101 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v112 = (char *)&v101 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v111 = (char *)&v101 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v110 = (char *)&v101 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v109 = (char *)&v101 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v108 = (char *)&v101 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v107 = (char *)&v101 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v106 = (char *)&v101 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v105 = (char *)&v101 - v24;
  MEMORY[0x1F4188790](v25);
  char v103 = (char *)&v101 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v102 = (char *)&v101 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v104 = (char *)&v101 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v101 = (char *)&v101 - v32;
  MEMORY[0x1F4188790](v33);
  id v35 = (char *)&v101 - v34;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v101 - v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v101 - v40;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v44 = (char *)&v101 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *v1;
  uint64_t v47 = a1[3];
  uint64_t v46 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v47);
  unint64_t v48 = sub_1BFEB6A24();
  uint64_t v116 = v44;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatHeadlineBinding.Command, v49, v47, (uint64_t)&type metadata for FormatHeadlineBinding.Command, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v46, (uint64_t)v44, v48, (uint64_t)&off_1F1C39B68);
  switch(v45)
  {
    case 1:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_1C151928C();
      uint64_t v54 = __swift_project_value_buffer(v53, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v38, v54, v53);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = (uint64_t)v116;
      sub_1BFCD6FFC(1, (uint64_t)v38);
      uint64_t v56 = (uint64_t)v38;
      goto LABEL_61;
    case 2:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v35, v58, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = (uint64_t)v116;
      sub_1BFCD6FFC(2, (uint64_t)v35);
      uint64_t v56 = (uint64_t)v35;
      goto LABEL_61;
    case 3:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1C151928C();
      uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1EB93CA98);
      uint64_t v61 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v101, v60, v59);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = (uint64_t)v116;
      sub_1BFCD6FFC(3, v61);
      uint64_t v56 = v61;
      goto LABEL_61;
    case 4:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_1C151928C();
      uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CAB0);
      uint64_t v41 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v104, v63, v62);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 4;
      goto LABEL_60;
    case 5:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_1C151928C();
      uint64_t v65 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CAB0);
      uint64_t v41 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v102, v65, v64);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 5;
      goto LABEL_60;
    case 6:
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1C151928C();
      uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB93CAC8);
      uint64_t v41 = v103;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v103, v67, v66);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 6;
      goto LABEL_60;
    case 7:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_1C151928C();
      uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CA98);
      uint64_t v41 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v105, v69, v68);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 7;
      goto LABEL_60;
    case 8:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1C151928C();
      uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93CA98);
      uint64_t v41 = v106;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v106, v71, v70);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 8;
      goto LABEL_60;
    case 9:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_1C151928C();
      uint64_t v73 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CA98);
      uint64_t v41 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v107, v73, v72);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 9;
      goto LABEL_60;
    case 10:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_1C151928C();
      uint64_t v75 = __swift_project_value_buffer(v74, (uint64_t)qword_1EB93CA98);
      uint64_t v41 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v108, v75, v74);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 10;
      goto LABEL_60;
    case 11:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_1C151928C();
      uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB93CA98);
      uint64_t v41 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v109, v77, v76);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 11;
      goto LABEL_60;
    case 12:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CA98);
      uint64_t v41 = v110;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v110, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 12;
      goto LABEL_60;
    case 13:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_1C151928C();
      uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EB93CA98);
      uint64_t v41 = v111;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v111, v81, v80);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 13;
      goto LABEL_60;
    case 14:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_1C151928C();
      uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EB93CAF8);
      uint64_t v41 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v112, v83, v82);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 16;
      goto LABEL_60;
    case 15:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_1C151928C();
      uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CAF8);
      uint64_t v41 = v113;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v113, v85, v84);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 17;
      goto LABEL_60;
    case 16:
      sub_1BFF05D18();
      uint64_t v41 = v114;
      char v87 = &v114[*(int *)(v86 + 48)];
      uint64_t v88 = &v114[*(int *)(v86 + 64)];
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v89 = sub_1C151928C();
      uint64_t v90 = __swift_project_value_buffer(v89, (uint64_t)qword_1EB93CAE0);
      uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16);
      v91(v41, v90, v89);
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v92 = __swift_project_value_buffer(v89, (uint64_t)qword_1EB93CAF8);
      v91(v87, v92, v89);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v88 = 0;
      *((void *)v88 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      char v52 = 14;
      goto LABEL_60;
    case 17:
      sub_1BFF05D18();
      uint64_t v41 = v115;
      uint64_t v94 = &v115[*(int *)(v93 + 48)];
      uint64_t v95 = &v115[*(int *)(v93 + 64)];
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v96 = sub_1C151928C();
      uint64_t v97 = __swift_project_value_buffer(v96, (uint64_t)qword_1EB93CAE0);
      uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
      v98(v41, v97, v96);
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v99 = __swift_project_value_buffer(v96, (uint64_t)qword_1EB93CAF8);
      v98(v94, v99, v96);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v95 = 0;
      *((void *)v95 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      char v52 = 15;
      goto LABEL_60;
    default:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C151928C();
      uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v41, v51, v50);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v52 = 0;
LABEL_60:
      uint64_t v55 = (uint64_t)v116;
      sub_1BFCD6FFC(v52, (uint64_t)v41);
      uint64_t v56 = (uint64_t)v41;
LABEL_61:
      sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v55, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t sub_1BFCD6FFC(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F9720;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCD7150();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCD7150()
{
  unint64_t result = qword_1EB85BD30;
  if (!qword_1EB85BD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD30);
  }
  return result;
}

uint64_t sub_1BFCD71A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorBlendProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorBlendProcessor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  sub_1C087BBD8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C087BC6C();
  sub_1C085F050(&qword_1EB892170, (void (*)(uint64_t))sub_1C087BC6C);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v26;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v26 = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_169;
      *(&v25 - 3) = sub_1C087BCF0();
      *(&v25 - 2) = sub_1BFCD758C();
      *(&v25 - 1) = sub_1C087BD44();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B844B8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = v26;
      *(void *)uint64_t v21 = v26;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE113DC();
  long long v29 = 0uLL;
  char v30 = 0;
  sub_1C15206EC();
  uint64_t v16 = v27;
  long long v29 = xmmword_1C153AB20;
  char v30 = 0;
  sub_1BFE7E344();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  char v24 = v28;
  *(void *)uint64_t v12 = v16;
  *(void *)(v12 + 8) = v23;
  *(unsigned char *)(v12 + 16) = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCD758C()
{
  unint64_t result = qword_1EB88BAC0;
  if (!qword_1EB88BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BAC0);
  }
  return result;
}

uint64_t sub_1BFCD75E0(void *a1)
{
  return FormatVBoxNode.encode(to:)(a1);
}

void *_s8NewsFeed27FeedReadStoryCommandContextVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFCD7644()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFCD7688()
{
  uint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1752457584;
      break;
    case 2:
      uint64_t result = 0x73726564726F62;
      break;
    case 3:
      uint64_t result = 0x776F64616873;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCD770C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBundleImage.init(from:)(a1, a2);
}

uint64_t FormatBundleImage.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C086D1D4();
  uint64_t v7 = v6;
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086D268();
  sub_1C085F050(&qword_1EB891C50, (void (*)(uint64_t))sub_1C086D268);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v37 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v38;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *((void *)v16 - 1);
      uint64_t v37 = (uint64_t *)*((void *)v16 - 2);
      uint64_t v22 = v12;
      uint64_t v23 = v7;
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      *(&v35 - 4) = (uint64_t)&_s10CodingKeysON_213;
      *(&v35 - 3) = sub_1C086D2EC();
      *(&v35 - 2) = sub_1BFCD7B70();
      *(&v35 - 1) = sub_1C086D340();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B82268);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v26 = (uint64_t)v37;
      *(void *)uint64_t v27 = v37;
      *(void *)(v27 + 8) = v21;
      *(void *)(v27 + 16) = v25;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v21, 1);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v23);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v41 = 0uLL;
  char v42 = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v19 = v18;
  long long v41 = xmmword_1C153AB20;
  char v42 = 0;
  uint64_t v20 = sub_1C152060C();
  uint64_t v29 = v28;
  uint64_t v36 = v20;
  long long v39 = xmmword_1C1557FA0;
  char v40 = 0;
  sub_1BFCD7BC4();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v7);
  char v31 = v42;
  long long v32 = v41;
  uint64_t v34 = v36;
  uint64_t v33 = v37;
  *uint64_t v37 = v17;
  v33[1] = v19;
  v33[2] = v34;
  void v33[3] = v29;
  *((_OWORD *)v33 + 2) = v32;
  *((unsigned char *)v33 + 48) = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCD7B70()
{
  unint64_t result = qword_1EB8882A8;
  if (!qword_1EB8882A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8882A8);
  }
  return result;
}

unint64_t sub_1BFCD7BC4()
{
  unint64_t result = qword_1EB876F08;
  if (!qword_1EB876F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876F08);
  }
  return result;
}

uint64_t sub_1BFCD7C18()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFCD7C78()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFCD7CC8()
{
  unint64_t result = qword_1EB8895A8;
  if (!qword_1EB8895A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8895A8);
  }
  return result;
}

uint64_t sub_1BFCD7D1C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1BFCD7D7C()
{
  return sub_1C151EAEC();
}

unint64_t sub_1BFCD7DCC()
{
  unint64_t result = qword_1EB887240;
  if (!qword_1EB887240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887240);
  }
  return result;
}

uint64_t FormatContent.Resolved.layouts.getter()
{
  type metadata accessor for FormatContent.Resolved();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C0BF1D1C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BFCD7E80@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BFCD7EA4(a1);
}

uint64_t sub_1BFCD7EA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C151D1EC();
  MEMORY[0x1F4188790](v2 - 8);
  v21[2] = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = sub_1C151D33C();
  uint64_t v4 = *(void *)(v21[0] - 8);
  MEMORY[0x1F4188790](v21[0]);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C151DBAC();
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151635C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v14 = sub_1C151633C();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C151DABC();
  (*(void (**)(char *, void, void))(v4 + 104))(v6, *MEMORY[0x1E4F7A8B8], v21[0]);
  swift_bridgeObjectRetain();
  sub_1C151DA9C();
  sub_1C151DB5C();
  uint64_t v17 = qword_1F1B6C988;
  uint64_t v18 = (int *)type metadata accessor for FeedBannerAd();
  *(uint64_t *)((char *)a1 + v18[6]) = v17;
  uint64_t v19 = (char *)a1 + v18[7];
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  *(_OWORD *)((char *)a1 + v18[8]) = xmmword_1C1533700;
  *a1 = v14;
  a1[1] = v16;
  return (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))((char *)a1 + v18[5], v9, v22);
}

uint64_t sub_1BFCD8198(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ReportScoreConcernCommandHandler();
  uint64_t result = sub_1C151818C();
  if (!result) {
    goto LABEL_16;
  }
  unint64_t v3 = _s5TeaUI8CommandsC8NewsFeedE6SportsV11ReportScoreV3allSayAA7CommandCyAD0fH7ConcernOGGvgZ_0();
  unint64_t v4 = v3;
  if (v3 >> 62)
  {
    uint64_t v5 = sub_1C15204BC();
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_4:
      uint64_t result = swift_getObjectType();
      if (v5 >= 1)
      {
        uint64_t v6 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            MEMORY[0x1C18C7CB0](v6, v4);
          }
          else {
            swift_retain();
          }
          ++v6;
          sub_1BFCD8360(qword_1EB88E6A8, (void (*)(uint64_t))type metadata accessor for ReportScoreConcernCommandHandler);
          sub_1C151AD9C();
          swift_release();
        }
        while (v5 != v6);
        swift_release();
        return swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_16:
      __break(1u);
      return result;
    }
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCD8360(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LiveActivityCommandHandler()
{
  return self;
}

uint64_t sub_1BFCD83CC(void *a1)
{
  return FormatOptionBindingModifier.encode(to:)(a1);
}

uint64_t FormatOptionBindingModifier.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionBindingModifier, v16, v13, (uint64_t)&type metadata for FormatOptionBindingModifier, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39AE8);
  if (v12)
  {
    if (qword_1EB887640 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CAC8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFCD86E4(0, v12, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  else
  {
    if (qword_1EB8849D0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C828);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C073008C(1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCD86E4(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0903324;
  void v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCD88CC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFCD8878();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCD8878()
{
  unint64_t result = qword_1EB85C270;
  if (!qword_1EB85C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C270);
  }
  return result;
}

unint64_t sub_1BFCD88CC()
{
  unint64_t result = qword_1EB868218;
  if (!qword_1EB868218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868218);
  }
  return result;
}

void sub_1BFCD8920(void *a1)
{
}

void FormatCellSelection.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - v10;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)v1;
  uint64_t v15 = *(void *)(v1 + 8);
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v36 = *(void *)(v1 + 16);
  uint64_t v37 = v17;
  uint64_t v18 = *(void *)(v1 + 40);
  uint64_t v38 = *(void *)(v1 + 32);
  uint64_t v39 = v18;
  uint64_t v40 = *(void *)(v1 + 48);
  uint64_t v41 = v15;
  int v19 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  unint64_t v22 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatCellSelection, v23, v20, (uint64_t)&type metadata for FormatCellSelection, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v14, v22, (uint64_t)&off_1F1C39B68);
  if (v19)
  {
    if (v19 == 1)
    {
      sub_1C05DC2A4(v16);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1C151928C();
      uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v25, v24);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C073CBA4(1, v16, (uint64_t)v8);
      sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
      sub_1BFF8B764(v16, v41, v36, v37, v38, v39, v40, 1);
    }
    else
    {
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v5, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFCD8E44(2, (uint64_t)v5);
      sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
    }
  }
  else
  {
    uint64_t v26 = v40;
    v42[0] = v16;
    v42[1] = v41;
    uint64_t v28 = v36;
    uint64_t v27 = v37;
    v42[2] = v36;
    v42[3] = v37;
    uint64_t v30 = v38;
    uint64_t v29 = v39;
    v42[4] = v38;
    v42[5] = v39;
    v42[6] = v40;
    sub_1BFF8B7D0(v16, v41, v36, v37, v38, v39, v40, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t))sub_1BFEF683C);
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C151928C();
    uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v11, v32, v31);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFCD8FEC(0, (uint64_t)v42, (uint64_t)v11);
    sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
    sub_1BFF8B764(v16, v41, v28, v27, v30, v29, v26, 0);
  }
}

uint64_t sub_1BFCD8E44(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08FE638;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCD8F98();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCD8F98()
{
  unint64_t result = qword_1EB866870;
  if (!qword_1EB866870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866870);
  }
  return result;
}

uint64_t sub_1BFCD8FEC(char a1, uint64_t a2, uint64_t a3)
{
  v16[63] = a1;
  sub_1BFE99AAC(a2, (uint64_t)v16, &qword_1EB8602A0, (uint64_t)&type metadata for FormatCellSelection.Background);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FE638;
  void v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCD8F98();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFCD919C();
    sub_1C1520B9C();
  }
  return swift_release();
}

unint64_t sub_1BFCD919C()
{
  unint64_t result = qword_1EB866868;
  if (!qword_1EB866868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866868);
  }
  return result;
}

uint64_t sub_1BFCD91F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFCD9220();
  *a1 = result;
  return result;
}

uint64_t sub_1BFCD9220()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFCD926C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCD92CC()
{
  unint64_t result = qword_1EB8740C0;
  if (!qword_1EB8740C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8740C0);
  }
  return result;
}

void destroy for FeedScoredItem(uint64_t a1)
{
  swift_unknownObjectRelease();

  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t static Format.version.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C12E621C(&qword_1EB87BD00, (uint64_t)qword_1EB8799C8, a1);
}

uint64_t sub_1BFCD9388()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void **)(v0 + 40);

  uint64_t v5 = *(void **)(v0 + 64);
  long long v15 = *(void **)(v0 + 56);
  uint64_t v6 = *(void **)(v0 + 72);
  uint64_t v7 = *(void **)(v0 + 80);
  uint64_t v8 = *(void **)(v0 + 88);
  uint64_t v9 = *(void **)(v0 + 96);
  uint64_t v10 = *(void **)(v0 + 104);
  uint64_t v11 = *(void **)(v0 + 112);
  uint64_t v13 = *(void **)(v0 + 120);
  char v12 = *(void **)(v0 + 128);

  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCD945C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BFCD9478(a1);
}

uint64_t sub_1BFCD9478@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FeedCursorStore.WeakWrapper();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t result = sub_1C152023C();
  *a1 = result;
  return result;
}

void sub_1BFCD9524()
{
  if (!qword_1EB85C768)
  {
    sub_1BFF97C40();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB85C768);
    }
  }
}

uint64_t sub_1BFCD9588@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = result;
  if (!a2)
  {
    uint64_t v9 = 0;
    if (a3) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v10 = 0;
    goto LABEL_8;
  }
  uint64_t v13 = result;
  MEMORY[0x1F4188790](result);
  char v12 = &v13;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C01826DC((void (*)(long long *__return_ptr, void *, uint64_t *))sub_1C12AD3C8, (uint64_t)v11, a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    return result;
  }
  if (!a3) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v13 = v6;
  MEMORY[0x1F4188790](result);
  char v12 = &v13;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C01826DC((void (*)(long long *__return_ptr, void *, uint64_t *))sub_1C0064F4C, (uint64_t)v11, a3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    return swift_bridgeObjectRelease();
  }
LABEL_8:
  *a4 = v9;
  a4[1] = v10;
  return result;
}

uint64_t sub_1BFCD96EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D2>, CGFloat a4@<D3>)
{
  uint64_t v43 = a1;
  uint64_t v9 = *v4;
  uint64_t v8 = v4[1];
  CGFloat v10 = 0.0;
  if (v9)
  {
    uint64_t v11 = *(void *)(v9 + 16);
    if (v11)
    {
      uint64_t v39 = a2;
      swift_bridgeObjectRetain_n();
      char v12 = (unsigned __int8 *)(v9 + 64);
      CGFloat v13 = 0.0;
      CGFloat v14 = 0.0;
      do
      {
        uint64_t v15 = *((void *)v12 - 4);
        uint64_t v16 = *((void *)v12 - 3);
        uint64_t v18 = *((void *)v12 - 2);
        uint64_t v17 = *((void *)v12 - 1);
        unsigned __int8 v19 = *v12;
        sub_1BFCD9FD8(v15, v16, v18, v17, *v12);
        sub_1BFCD99AC(v13, v14, a3, a4);
        if (v5)
        {
          sub_1BFCDA05C(v15, v16, v18, v17, v19);
          return swift_bridgeObjectRelease_n();
        }
        CGFloat v13 = v20;
        CGFloat v14 = v21;
        a3 = v22;
        a4 = v23;
        v12 += 40;
        sub_1BFCDA05C(v15, v16, v18, v17, v19);
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease_n();
      a2 = v39;
      if (v8) {
        goto LABEL_9;
      }
      goto LABEL_7;
    }
  }
  CGFloat v13 = 0.0;
  CGFloat v14 = 0.0;
  if (!v8)
  {
LABEL_7:
    CGFloat v24 = 0.0;
    CGFloat v25 = 0.0;
    CGFloat v26 = 0.0;
LABEL_16:
    *(CGFloat *)uint64_t v41 = v10;
    *(CGFloat *)&v41[1] = v24;
    *(CGFloat *)&v41[2] = v25;
    *(CGFloat *)&uint64_t v41[3] = v26;
    BOOL v42 = v8 == 0;
    return sub_1BFC64EC0((uint64_t)v41, a2, v13, v14, a3, a4);
  }
LABEL_9:
  uint64_t v27 = *(void *)(v8 + 16);
  if (!v27)
  {
    CGFloat v10 = 0.0;
    CGFloat v24 = 0.0;
    CGFloat v25 = a3;
    CGFloat v26 = a4;
    goto LABEL_16;
  }
  uint64_t v40 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t v28 = (unsigned __int8 *)(v8 + 64);
  CGFloat v10 = 0.0;
  CGFloat v25 = a3;
  CGFloat v26 = a4;
  CGFloat v24 = 0.0;
  while (1)
  {
    uint64_t v29 = *((void *)v28 - 4);
    uint64_t v30 = *((void *)v28 - 3);
    uint64_t v31 = *((void *)v28 - 2);
    uint64_t v32 = *((void *)v28 - 1);
    unsigned __int8 v33 = *v28;
    sub_1BFCD9FD8(v29, v30, v31, v32, *v28);
    sub_1BFCD99AC(v10, v24, v25, v26);
    if (v5) {
      break;
    }
    CGFloat v10 = v34;
    CGFloat v24 = v35;
    CGFloat v25 = v36;
    CGFloat v26 = v37;
    v28 += 40;
    sub_1BFCDA05C(v29, v30, v31, v32, v33);
    if (!--v27)
    {
      swift_bridgeObjectRelease_n();
      a2 = v40;
      goto LABEL_16;
    }
  }
  sub_1BFCDA05C(v29, v30, v31, v32, v33);
  return swift_bridgeObjectRelease_n();
}

void sub_1BFCD99AC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v6 = *(void *)v4;
  switch(*(unsigned char *)(v4 + 32))
  {
    case 1:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      swift_release();
      if (!v5) {
        sub_1C151F75C();
      }
      return;
    case 2:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      swift_release();
      if (!v5) {
        sub_1C151F76C();
      }
      return;
    case 3:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      swift_release();
      if (!v5)
      {
        v14.origin.x = a1;
        v14.origin.y = a2;
        v14.size.width = a3;
        v14.size.height = a4;
        CGRectGetHeight(v14);
        sub_1C151F7BC();
        v15.origin.x = a1;
        v15.origin.y = a2;
        v15.size.width = a3;
        v15.size.height = a4;
        CGRectGetWidth(v15);
        sub_1C151F7AC();
      }
      return;
    case 4:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      swift_release();
      if (!v5) {
        goto LABEL_11;
      }
      return;
    case 5:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      swift_release();
      if (!v5) {
        goto LABEL_13;
      }
      return;
    case 6:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      swift_release();
      if (!v5)
      {
LABEL_11:
        v16.origin.x = a1;
        v16.origin.y = a2;
        v16.size.width = a3;
        v16.size.height = a4;
        CGRectGetWidth(v16);
        goto LABEL_24;
      }
      return;
    case 7:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      swift_release();
      if (!v5)
      {
LABEL_13:
        v17.origin.x = a1;
        v17.origin.y = a2;
        v17.size.width = a3;
        v17.size.height = a4;
        CGRectGetHeight(v17);
        goto LABEL_30;
      }
      return;
    case 8:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      if (v5) {
        goto LABEL_26;
      }
      swift_release();
      v18.origin.x = a1;
      v18.origin.y = a2;
      v18.size.width = a3;
      v18.size.height = a4;
      CGRectGetWidth(v18);
      goto LABEL_24;
    case 9:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      if (v5) {
        goto LABEL_26;
      }
      swift_release();
      v19.origin.x = a1;
      v19.origin.y = a2;
      v19.size.width = a3;
      v19.size.height = a4;
      CGRectGetHeight(v19);
      goto LABEL_30;
    case 0xA:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      if (v5) {
        goto LABEL_26;
      }
      swift_release();
LABEL_24:
      sub_1C151F7AC();
      return;
    case 0xB:
      sub_1C1517EFC();
      sub_1BFF493E4(v13, v6);
      if (v5)
      {
LABEL_26:
        swift_release();
      }
      else
      {
        swift_release();
LABEL_30:
        sub_1C151F7BC();
      }
      return;
    case 0xC:
      CGRectIntegral(*(CGRect *)&a1);
      return;
    default:
      double v11 = sub_1BFF49274();
      if (!v5) {
        UIEdgeInsetsInsetRect(a1, a2, a3, a4, v11, v12);
      }
      return;
  }
}

uint64_t sub_1BFCD9ED0(uint64_t result, uint64_t a2)
{
  uint64_t v12 = result;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = (unsigned __int8 *)(v4 + 64); ; i += 40)
    {
      uint64_t v7 = *((void *)i - 4);
      uint64_t v8 = *((void *)i - 3);
      uint64_t v9 = *((void *)i - 2);
      uint64_t v10 = *((void *)i - 1);
      unsigned __int8 v11 = *i;
      sub_1BFCD9FD8(v7, v8, v9, v10, *i);
      FormatImageNodeRequestAdjustment.bind(binder:context:)(v12, a2);
      if (v3) {
        break;
      }
      sub_1BFCDA05C(v7, v8, v9, v10, v11);
      if (!--v5) {
        return swift_bridgeObjectRelease_n();
      }
    }
    sub_1BFCDA05C(v7, v8, v9, v10, v11);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BFCD9FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 >= 0xB)
  {
    if (a5) {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFCDA05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 >= 0xB)
  {
    if (a5) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCDA0E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFCDA110(a1, a2, a3, *v3, (unint64_t *)&unk_1EB86BBA8, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFCDA110(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 40);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  CGRect v14 = v12 + 32;
  CGRect v15 = a4 + 32;
  size_t v16 = 40 * v10;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t FormatImageNodeRequestAdjustment.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v7 = result;
  switch(*(unsigned char *)(v2 + 32))
  {
    case 1:
      uint64_t v8 = *(void *)(v5 + 16);
      if (v8)
      {
        uint64_t v46 = *(void *)(v2 + 16);
        uint64_t v57 = *(void *)(v2 + 24);
        swift_bridgeObjectRetain();
        int64_t v9 = (unsigned char *)(v5 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v7, a2);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
            if (v3) {
              break;
            }
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t v11 = v5;
        uint64_t v12 = v4;
        uint64_t v13 = v46;
        uint64_t v14 = v57;
        unsigned __int8 v15 = 1;
        return sub_1BFCDA05C(v11, v12, v13, v14, v15);
      }
      return result;
    case 2:
      uint64_t v16 = *(void *)(v5 + 16);
      if (v16)
      {
        uint64_t v47 = *(void *)(v2 + 16);
        uint64_t v58 = *(void *)(v2 + 24);
        swift_bridgeObjectRetain();
        CGRect v17 = (unsigned char *)(v5 + 40);
        do
        {
          if ((*v17 & 1) == 0)
          {
            uint64_t v18 = *((void *)v17 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v7, a2);
            sub_1BFF49984(v18, 0);
            sub_1BFF49984(v18, 0);
            if (v3) {
              break;
            }
          }
          v17 += 16;
          --v16;
        }
        while (v16);
        uint64_t v11 = v5;
        uint64_t v12 = v4;
        uint64_t v13 = v47;
        uint64_t v14 = v58;
        unsigned __int8 v15 = 2;
        return sub_1BFCDA05C(v11, v12, v13, v14, v15);
      }
      return result;
    case 3:
      uint64_t v19 = *(void *)(v5 + 16);
      if (v19)
      {
        uint64_t v48 = *(void *)(v2 + 16);
        uint64_t v59 = *(void *)(v2 + 24);
        swift_bridgeObjectRetain();
        double v20 = (unsigned char *)(v5 + 40);
        do
        {
          if ((*v20 & 1) == 0)
          {
            uint64_t v21 = *((void *)v20 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v7, a2);
            sub_1BFF49984(v21, 0);
            sub_1BFF49984(v21, 0);
            if (v3) {
              break;
            }
          }
          v20 += 16;
          --v19;
        }
        while (v19);
        uint64_t v11 = v5;
        uint64_t v12 = v4;
        uint64_t v13 = v48;
        uint64_t v14 = v59;
        unsigned __int8 v15 = 3;
        return sub_1BFCDA05C(v11, v12, v13, v14, v15);
      }
      return result;
    case 4:
      uint64_t v22 = *(void *)(v5 + 16);
      if (!v22) {
        return result;
      }
      uint64_t v49 = *(void *)(v2 + 16);
      uint64_t v60 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      double v23 = (unsigned char *)(v5 + 40);
      while (1)
      {
        if ((*v23 & 1) == 0)
        {
          uint64_t v24 = *((void *)v23 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)(v7, a2);
          if (v3)
          {
            sub_1BFF49984(v24, 0);
            sub_1BFF49984(v24, 0);
LABEL_70:
            uint64_t v11 = v5;
            uint64_t v12 = v4;
            uint64_t v13 = v49;
            uint64_t v14 = v60;
            unsigned __int8 v15 = 4;
            return sub_1BFCDA05C(v11, v12, v13, v14, v15);
          }
          sub_1BFF49984(v24, 0);
          sub_1BFF49984(v24, 0);
        }
        v23 += 16;
        if (!--v22) {
          goto LABEL_70;
        }
      }
    case 5:
      uint64_t v25 = *(void *)(v5 + 16);
      if (!v25) {
        return result;
      }
      uint64_t v50 = *(void *)(v2 + 16);
      uint64_t v61 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      CGFloat v26 = (unsigned char *)(v5 + 40);
      while (2)
      {
        if (*v26) {
          goto LABEL_29;
        }
        uint64_t v27 = *((void *)v26 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v7, a2);
        if (!v3)
        {
          sub_1BFF49984(v27, 0);
          sub_1BFF49984(v27, 0);
LABEL_29:
          v26 += 16;
          if (!--v25) {
            goto LABEL_72;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v27, 0);
      sub_1BFF49984(v27, 0);
LABEL_72:
      uint64_t v11 = v5;
      uint64_t v12 = v4;
      uint64_t v13 = v50;
      uint64_t v14 = v61;
      unsigned __int8 v15 = 5;
      return sub_1BFCDA05C(v11, v12, v13, v14, v15);
    case 6:
      uint64_t v28 = *(void *)(v5 + 16);
      if (!v28) {
        return result;
      }
      uint64_t v51 = *(void *)(v2 + 16);
      uint64_t v62 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v29 = (unsigned char *)(v5 + 40);
      while (2)
      {
        if (*v29) {
          goto LABEL_35;
        }
        uint64_t v30 = *((void *)v29 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v7, a2);
        if (!v3)
        {
          sub_1BFF49984(v30, 0);
          sub_1BFF49984(v30, 0);
LABEL_35:
          v29 += 16;
          if (!--v28) {
            goto LABEL_74;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v30, 0);
      sub_1BFF49984(v30, 0);
LABEL_74:
      uint64_t v11 = v5;
      uint64_t v12 = v4;
      uint64_t v13 = v51;
      uint64_t v14 = v62;
      unsigned __int8 v15 = 6;
      return sub_1BFCDA05C(v11, v12, v13, v14, v15);
    case 7:
      uint64_t v31 = *(void *)(v5 + 16);
      if (!v31) {
        return result;
      }
      uint64_t v52 = *(void *)(v2 + 16);
      uint64_t v63 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v32 = (unsigned char *)(v5 + 40);
      while (2)
      {
        if (*v32) {
          goto LABEL_41;
        }
        uint64_t v33 = *((void *)v32 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v7, a2);
        if (!v3)
        {
          sub_1BFF49984(v33, 0);
          sub_1BFF49984(v33, 0);
LABEL_41:
          v32 += 16;
          if (!--v31) {
            goto LABEL_76;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v33, 0);
      sub_1BFF49984(v33, 0);
LABEL_76:
      uint64_t v11 = v5;
      uint64_t v12 = v4;
      uint64_t v13 = v52;
      uint64_t v14 = v63;
      unsigned __int8 v15 = 7;
      return sub_1BFCDA05C(v11, v12, v13, v14, v15);
    case 8:
      uint64_t v34 = *(void *)(v5 + 16);
      if (!v34) {
        return result;
      }
      uint64_t v53 = *(void *)(v2 + 16);
      uint64_t v64 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      double v35 = (unsigned char *)(v5 + 40);
      while (2)
      {
        if (*v35) {
          goto LABEL_47;
        }
        uint64_t v36 = *((void *)v35 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v7, a2);
        if (!v3)
        {
          sub_1BFF49984(v36, 0);
          sub_1BFF49984(v36, 0);
LABEL_47:
          v35 += 16;
          if (!--v34) {
            goto LABEL_78;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v36, 0);
      sub_1BFF49984(v36, 0);
LABEL_78:
      uint64_t v11 = v5;
      uint64_t v12 = v4;
      uint64_t v13 = v53;
      uint64_t v14 = v64;
      unsigned __int8 v15 = 8;
      return sub_1BFCDA05C(v11, v12, v13, v14, v15);
    case 9:
      uint64_t v37 = *(void *)(v5 + 16);
      if (!v37) {
        return result;
      }
      uint64_t v54 = *(void *)(v2 + 16);
      uint64_t v65 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v38 = (unsigned char *)(v5 + 40);
      while (2)
      {
        if (*v38) {
          goto LABEL_53;
        }
        uint64_t v39 = *((void *)v38 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v7, a2);
        if (!v3)
        {
          sub_1BFF49984(v39, 0);
          sub_1BFF49984(v39, 0);
LABEL_53:
          v38 += 16;
          if (!--v37) {
            goto LABEL_80;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v39, 0);
      sub_1BFF49984(v39, 0);
LABEL_80:
      uint64_t v11 = v5;
      uint64_t v12 = v4;
      uint64_t v13 = v54;
      uint64_t v14 = v65;
      unsigned __int8 v15 = 9;
      return sub_1BFCDA05C(v11, v12, v13, v14, v15);
    case 0xA:
      uint64_t v40 = *(void *)(v5 + 16);
      if (!v40) {
        return result;
      }
      uint64_t v55 = *(void *)(v2 + 16);
      uint64_t v66 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v41 = (unsigned char *)(v5 + 40);
      while (2)
      {
        if (*v41) {
          goto LABEL_59;
        }
        uint64_t v42 = *((void *)v41 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v7, a2);
        if (!v3)
        {
          sub_1BFF49984(v42, 0);
          sub_1BFF49984(v42, 0);
LABEL_59:
          v41 += 16;
          if (!--v40) {
            goto LABEL_82;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v42, 0);
      sub_1BFF49984(v42, 0);
LABEL_82:
      uint64_t v11 = v5;
      uint64_t v12 = v4;
      uint64_t v13 = v55;
      uint64_t v14 = v66;
      unsigned __int8 v15 = 10;
      return sub_1BFCDA05C(v11, v12, v13, v14, v15);
    case 0xB:
      uint64_t v43 = *(void *)(v5 + 16);
      if (!v43) {
        return result;
      }
      uint64_t v56 = *(void *)(v2 + 16);
      uint64_t v67 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v44 = (unsigned char *)(v5 + 40);
      break;
    case 0xC:
      return result;
    default:
      return FormatEdgeInsetsEquation.bind(binder:context:)(result, a2);
  }
  while ((*v44 & 1) != 0)
  {
LABEL_65:
    v44 += 16;
    if (!--v43) {
      goto LABEL_84;
    }
  }
  uint64_t v45 = *((void *)v44 - 1);
  swift_retain_n();
  FormatFloat.bind(binder:context:)(v7, a2);
  if (!v3)
  {
    sub_1BFF49984(v45, 0);
    sub_1BFF49984(v45, 0);
    goto LABEL_65;
  }
  sub_1BFF49984(v45, 0);
  sub_1BFF49984(v45, 0);
LABEL_84:
  uint64_t v11 = v5;
  uint64_t v12 = v4;
  uint64_t v13 = v56;
  uint64_t v14 = v67;
  unsigned __int8 v15 = 11;
  return sub_1BFCDA05C(v11, v12, v13, v14, v15);
}

unint64_t sub_1BFCDAA48()
{
  unint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFCDAAC4()
{
  return sub_1C0781364(*v0);
}

unint64_t sub_1BFCDAACC()
{
  unint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6168706C61;
      break;
    case 2:
      unint64_t result = 0x73726564726F62;
      break;
    case 3:
      unint64_t result = 0x615272656E726F63;
      break;
    case 4:
      unint64_t result = 0x776F64616873;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x737469617274;
      break;
    case 7:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCDABA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatLocalization.init(from:)(a1, a2);
}

uint64_t FormatLocalization.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C086916C();
  uint64_t v7 = v6;
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0869200();
  sub_1C085F050(&qword_1EB891CF0, (void (*)(uint64_t))sub_1C0869200);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v35;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      unsigned __int8 v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *((void *)v15 - 1);
      uint64_t v34 = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      uint64_t v21 = v12;
      MEMORY[0x1F4188790](v20);
      *(&v31 - 4) = (uint64_t)&_s10CodingKeysON_231;
      *(&v31 - 3) = sub_1C0869284();
      *(&v31 - 2) = sub_1BFCDB0A8();
      *(&v31 - 1) = sub_1C08692D8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v22 = sub_1C085FB14((uint64_t)&unk_1F1B81D18);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v23 = v34;
      *(void *)uint64_t v24 = v34;
      *(void *)(v24 + 8) = v19;
      *(void *)(v24 + 16) = v22;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v19, 1);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C086916C);
  uint64_t v18 = v17;
  long long v36 = xmmword_1C153AB20;
  char v37 = 0;
  uint64_t v33 = sub_1C152060C();
  uint64_t v34 = v25;
  long long v36 = xmmword_1C1557FA0;
  char v37 = 0;
  uint64_t v31 = sub_1C152060C();
  uint64_t v32 = v26;
  sub_1BFE9DEBC(0, &qword_1EB879ED0, (uint64_t)&type metadata for FormatLocalizationString, MEMORY[0x1E4FBB320]);
  long long v36 = xmmword_1C1557FB0;
  char v37 = 0;
  sub_1BFCDB0FC();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v7);
  uint64_t v28 = v38;
  *a2 = v16;
  a2[1] = v18;
  uint64_t v29 = v34;
  a2[2] = v33;
  a2[3] = v29;
  uint64_t v30 = v32;
  a2[4] = v31;
  a2[5] = v30;
  a2[6] = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCDB0A8()
{
  unint64_t result = qword_1EB8887D8;
  if (!qword_1EB8887D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8887D8);
  }
  return result;
}

unint64_t sub_1BFCDB0FC()
{
  unint64_t result = qword_1EB879ED8;
  if (!qword_1EB879ED8)
  {
    sub_1BFE9DEBC(255, &qword_1EB879ED0, (uint64_t)&type metadata for FormatLocalizationString, MEMORY[0x1E4FBB320]);
    sub_1C007002C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879ED8);
  }
  return result;
}

uint64_t sub_1BFCDB190@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextAdjustmentMetric.init(from:)(a1, a2);
}

uint64_t FormatTextAdjustmentMetric.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1C0863344();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08633D8();
  sub_1C085F050(&qword_1EB892240, (void (*)(uint64_t))sub_1C08633D8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v27;
  uint64_t v13 = v7;
  uint64_t v14 = v9;
  if (v11)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v27 = *((void *)v17 - 2);
      uint64_t v20 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v21);
      *(&v27 - 4) = (uint64_t)&_s10CodingKeysON_255;
      *(&v27 - 3) = sub_1C086345C();
      *(&v27 - 2) = sub_1BFCDB614();
      *(&v27 - 1) = sub_1C08634B0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v22 = sub_1C085FB14((uint64_t)&unk_1F1B69120);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v23 = v27;
      *(void *)uint64_t v24 = v27;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = v22;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v20, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCDB6BC();
  long long v28 = 0uLL;
  char v29 = 0;
  sub_1C15206EC();
  char v18 = v30;
  type metadata accessor for FormatTextNodeStyle();
  long long v28 = xmmword_1C153AB20;
  char v29 = 0;
  sub_1C085F050(&qword_1EB8890A0, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
  sub_1C15206EC();
  uint64_t v25 = v30;
  long long v28 = xmmword_1C1557FA0;
  char v29 = 0;
  sub_1BFCDB668();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  char v26 = v30;
  *(unsigned char *)uint64_t v12 = v18;
  *(void *)(v12 + 8) = v25;
  *(unsigned char *)(v12 + 16) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCDB614()
{
  unint64_t result = qword_1EB88C3B8;
  if (!qword_1EB88C3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C3B8);
  }
  return result;
}

unint64_t sub_1BFCDB668()
{
  unint64_t result = qword_1EB87FFD8;
  if (!qword_1EB87FFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87FFD8);
  }
  return result;
}

unint64_t sub_1BFCDB6BC()
{
  unint64_t result = qword_1EB87E4F8;
  if (!qword_1EB87E4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E4F8);
  }
  return result;
}

uint64_t FeedItemLayoutAttributes.resizingIdentifier.getter()
{
  uint64_t v1 = *v0 >> 60;
  uint64_t v2 = 0;
  if (((1 << v1) & 0x77F) == 0)
  {
    if (v1 == 7)
    {
      sub_1BFE29960();
      uint64_t v2 = *(void *)(*(void *)(*(void *)(swift_projectBox() + *(int *)(v4 + 48))
                                 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                     + 48);
      swift_bridgeObjectRetain();
    }
    else
    {
      return FeedItemLayoutAttributes.resizingIdentifier.getter();
    }
  }
  return v2;
}

uint64_t FeedItemLayoutAttributes.resizingGroupIdentifier.getter()
{
  uint64_t v1 = *v0 >> 60;
  uint64_t v2 = 0;
  if (((1 << v1) & 0x77F) == 0)
  {
    if (v1 == 7)
    {
      sub_1BFE29960();
      uint64_t v2 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v4 + 48)) + 48);
      swift_bridgeObjectRetain();
    }
    else
    {
      return FeedItemLayoutAttributes.resizingGroupIdentifier.getter();
    }
  }
  return v2;
}

uint64_t sub_1BFCDB870(void *a1)
{
  return FormatShine.encode(to:)(a1);
}

uint64_t FormatShine.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v71 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v71 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v71 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v71 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v71 - v15;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v1;
  uint64_t v22 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  unint64_t v23 = sub_1BFEB6A24();
  uint64_t v72 = v19;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatShine, v24, v22, (uint64_t)&type metadata for FormatShine, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v19, v23, (uint64_t)&off_1F1C39B68);
  switch(v20 & 7)
  {
    case 1:
      sub_1BFF05D18();
      long long v36 = &v13[*(int *)(v35 + 48)];
      char v37 = &v13[*(int *)(v35 + 64)];
      uint64_t v38 = qword_1EB882D28;
      swift_retain();
      if (v38 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1C151928C();
      uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB93CAB0);
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
      v41(v13, v40, v39);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v42 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB93C828);
      v41(v36, v42, v39);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)char v37 = 0;
      *((void *)v37 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v72;
      sub_1BFCDC158(1, v20 & 0xFFFFFFFFFFFFFFF8, (uint64_t)v13);
      uint64_t v44 = (uint64_t)v13;
      goto LABEL_27;
    case 2:
      sub_1BFF05D18();
      uint64_t v46 = &v10[*(int *)(v45 + 48)];
      uint64_t v47 = &v10[*(int *)(v45 + 64)];
      uint64_t v48 = qword_1EB882D28;
      swift_retain();
      if (v48 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_1C151928C();
      uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93CAB0);
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
      v51(v10, v50, v49);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v52 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93C828);
      v51(v46, v52, v49);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v47 = 0;
      *((void *)v47 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v72;
      sub_1BFCDC158(2, v20 & 0xFFFFFFFFFFFFFFF8, (uint64_t)v10);
      uint64_t v44 = (uint64_t)v10;
      goto LABEL_27;
    case 3:
      sub_1BFF05D18();
      uint64_t v54 = &v7[*(int *)(v53 + 48)];
      uint64_t v55 = &v7[*(int *)(v53 + 64)];
      uint64_t v56 = qword_1EB882D28;
      swift_retain();
      if (v56 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CAB0);
      uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
      v59(v7, v58, v57);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v60 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93C828);
      v59(v54, v60, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v55 = 0;
      *((void *)v55 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v72;
      sub_1BFCDC158(3, v20 & 0xFFFFFFFFFFFFFFF8, (uint64_t)v7);
      uint64_t v44 = (uint64_t)v7;
      goto LABEL_27;
    case 4:
      sub_1BFF05D18();
      uint64_t v62 = (uint64_t)v71;
      uint64_t v63 = &v71[*(int *)(v61 + 48)];
      uint64_t v64 = &v71[*(int *)(v61 + 64)];
      uint64_t v65 = qword_1EB887638;
      swift_retain();
      if (v65 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1C151928C();
      uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB93CA98);
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
      v68(v62, v67, v66);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v69 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB93C828);
      v68((uint64_t)v63, v69, v66);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v64 = 0;
      *((void *)v64 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v72;
      sub_1BFCDC158(4, v20 & 0xFFFFFFFFFFFFFFF8, v62);
      uint64_t v44 = v62;
LABEL_27:
      sub_1BFEFEB68(v44, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v43, (uint64_t (*)(void))sub_1BFEFF7D8);
      uint64_t v34 = v20;
      break;
    default:
      sub_1BFF05D18();
      char v26 = &v16[*(int *)(v25 + 48)];
      uint64_t v27 = &v16[*(int *)(v25 + 64)];
      uint64_t v28 = qword_1EB882D28;
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C151928C();
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB93CAB0);
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
      v31(v16, v30, v29);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v32 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB93C828);
      v31(v26, v32, v29);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v27 = 0;
      *((void *)v27 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = (uint64_t)v72;
      sub_1BFCDC158(0, v20, (uint64_t)v16);
      sub_1BFEFEB68((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v33, (uint64_t (*)(void))sub_1BFEFF7D8);
      uint64_t v34 = v20;
      break;
  }
  return sub_1BFF7C0EC(v34);
}

uint64_t sub_1BFCDC158(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0EF4;
  void v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCDC2EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCDC2EC()
{
  unint64_t result = qword_1EB865778;
  if (!qword_1EB865778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865778);
  }
  return result;
}

uint64_t sub_1BFCDC340()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCDC390()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCDC3F0()
{
  unint64_t result = qword_1EB88A790;
  if (!qword_1EB88A790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A790);
  }
  return result;
}

char *OfflineManager.init(offlineProvider:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[qword_1EA1AA1F0];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  sub_1BFC66384(a1, (uint64_t)&v1[qword_1EA1AA1F8]);
  v11.receiver = v1;
  v11.super_class = ObjectType;
  uint64_t v5 = (char *)objc_msgSendSuper2(&v11, sel_init);
  uint64_t v6 = *(void *)&v5[qword_1EA1AA1F8 + 24];
  uint64_t v7 = *(void *)&v5[qword_1EA1AA1F8 + 32];
  __swift_project_boxed_opaque_existential_1(&v5[qword_1EA1AA1F8], v6);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = v5;
  v8(v5, v6, v7);

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t sub_1BFCDC520@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFF4B7A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCDC54C(char a1)
{
  if (!a1) {
    return 0x6574617473;
  }
  if (a1 == 1) {
    return 0x65756C6176;
  }
  return 1885433183;
}

void *_s8NewsFeed18FormatSizeEquationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFCDC5CC(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v7 = *(void *)(sub_1C151928C() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = ((v8 | 7) + v6) & ~(v8 | 7);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v12 = (v11 + v8 + ((v11 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  BOOL v13 = *(_DWORD *)(v7 + 84) == 0;
  uint64_t v14 = (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9) & ~v9;
  if (v13) {
    uint64_t v15 = v11 + 1;
  }
  else {
    uint64_t v15 = v11;
  }
  unint64_t v16 = ((((((((v15 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v17 = v16 + v10;
  unint64_t v18 = v16 + v14;
  if (v18 <= v17) {
    unint64_t v18 = v17;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_8;
  }
  unint64_t v21 = v18 + 16;
  unsigned int v22 = a2 - 2147483646;
  if ((v18 + 16) > 3) {
    unsigned int v22 = 2;
  }
  if (v22 >= 0x10000) {
    int v23 = 4;
  }
  else {
    int v23 = 2;
  }
  if (v22 < 0x100) {
    int v24 = 1;
  }
  else {
    int v24 = v23;
  }
  if (v24 == 4)
  {
    int v25 = *(_DWORD *)((char *)a1 + v21);
    if (!v25) {
      goto LABEL_8;
    }
  }
  else if (v24 == 2)
  {
    int v25 = *(unsigned __int16 *)((char *)a1 + v21);
    if (!*(_WORD *)((char *)a1 + v21)) {
      goto LABEL_8;
    }
  }
  else
  {
    int v25 = *((unsigned __int8 *)a1 + v21);
    if (!*((unsigned char *)a1 + v21))
    {
LABEL_8:
      unint64_t v19 = *(void *)(((unint64_t)a1 + v18 + 8) & 0xFFFFFFFFFFFFFFF8);
      if (v19 >= 0xFFFFFFFF) {
        LODWORD(v19) = -1;
      }
      return (v19 + 1);
    }
  }
  int v26 = v25 - 1;
  if (v21 > 3) {
    int v26 = 0;
  }
  if (v21) {
    LODWORD(v21) = *a1;
  }
  return (v21 | v26) ^ 0x80000000;
}

void sub_1BFCDC7A0(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v9 = *(void *)(sub_1C151928C() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = ((v10 | 7) + v8) & ~(v10 | 7);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
  uint64_t v15 = (*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11) & ~v11;
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v16 = v13;
  }
  else {
    uint64_t v16 = v13 + 1;
  }
  unint64_t v17 = ((((((((v16 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v18 = v17 + v12;
  unint64_t v19 = v17 + v15;
  if (v19 <= v18) {
    unint64_t v19 = v18;
  }
  size_t v20 = v19 + 16;
  if (a3 < 0)
  {
    unsigned int v22 = a3 - 2147483646;
    if (v20 > 3) {
      unsigned int v22 = 2;
    }
    if (v22 >= 0x10000) {
      int v23 = 4;
    }
    else {
      int v23 = 2;
    }
    if (v22 < 0x100) {
      int v21 = 1;
    }
    else {
      int v21 = v23;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    int v21 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_8:
      switch(v21)
      {
        case 1:
          *((unsigned char *)a1 + v20) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v20) = 0;
          goto LABEL_31;
        case 3:
          goto LABEL_38;
        case 4:
          *(unsigned int *)((char *)a1 + v20) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        default:
LABEL_31:
          if (a2) {
LABEL_32:
          }
            *(void *)(((unint64_t)a1 + v19 + 8) & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v20 > 3) {
    int v24 = 1;
  }
  else {
    int v24 = a2 - 0x7FFFFFFF;
  }
  if (v19 != -16)
  {
    if (v20 <= 3) {
      unsigned int v25 = 0;
    }
    else {
      unsigned int v25 = a2 ^ 0x80000000;
    }
    bzero(a1, v20);
    *a1 = v25;
  }
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v20) = v24;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v20) = v24;
      break;
    case 3:
LABEL_38:
      __break(1u);
      break;
    case 4:
      *(unsigned int *)((char *)a1 + v20) = v24;
      break;
    default:
      return;
  }
}

uint64_t FormatPackageInventory.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1BFCDCA08@<D0>(uint64_t a1@<X8>)
{
  sub_1BFCDCA4C((uint64_t *)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1BFCDCA4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v52 = sub_1BFD7742C;
  uint64_t v51 = sub_1BFD775B8;
  sub_1BFD76E98(0, &qword_1EB864058, &qword_1EB864050, (uint64_t (*)(uint64_t))sub_1BFD7742C, sub_1BFD775B8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v53 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v50 = (char *)&v41 - v4;
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD76E98(0, &qword_1EB85AC88, &qword_1EB85AC80, MEMORY[0x1E4F27928], sub_1C03029F4);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = (uint64_t (*)(void, void, void))MEMORY[0x1E4FAA6B0];
  sub_1BFD771A0(0, (unint64_t *)&qword_1EB85ACA8, (uint64_t)&qword_1EB85ACA0, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD76E3C);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v41 - v16;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, v11);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  int v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v44 = v21;
  uint64_t v45 = v20 + 56;
  uint64_t v42 = v17;
  v21(v17, 1, 1, v18);
  uint64_t v43 = v14;
  v21(v14, 1, 1, v19);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v22 = sub_1C151996C();
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  uint64_t v49 = v22;
  sub_1BFD76D3C(0, &qword_1EB85AC80, v5, sub_1C03029F4, MEMORY[0x1E4FAA6B0]);
  uint64_t v24 = v23;
  unsigned int v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v25(v10, 1, 1, v23);
  v25(v47, 1, 1, v24);
  uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFD76D3C(0, &qword_1EB85ACD8, v5, sub_1C03029F4, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  int v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFD76D3C(0, &qword_1EB85AC38, v5, sub_1C03029F4, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v47 = (char *)sub_1C151996C();
  uint64_t v27 = v42;
  uint64_t v28 = v44;
  v44(v42, 1, 1, v19);
  uint64_t v29 = v43;
  v28(v43, 1, 1, v19);
  swift_allocObject();
  uint64_t v30 = v29;
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v31 = sub_1C151996C();
  v28(v27, 1, 1, v19);
  v28(v30, 1, 1, v19);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v32 = sub_1C151996C();
  uint64_t v34 = v51;
  uint64_t v33 = (uint64_t (*)(uint64_t))v52;
  sub_1BFD76D3C(0, &qword_1EB864050, (uint64_t (*)(uint64_t))v52, v51, v48);
  uint64_t v36 = v35;
  char v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  v37(v50, 1, 1, v35);
  v37(v53, 1, 1, v36);
  sub_1BFD76D3C(0, &qword_1EB8640C0, v33, v34, v46);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76D3C(0, &qword_1EB863FE8, v33, v34, v26);
  swift_allocObject();
  uint64_t result = sub_1C151996C();
  uint64_t v39 = v54;
  uint64_t v40 = v47;
  uint64_t *v54 = v49;
  v39[1] = (uint64_t)v40;
  void v39[2] = v31;
  v39[3] = v32;
  v39[4] = result;
  return result;
}

uint64_t sub_1BFCDD17C(void *a1)
{
  return FormatHeadlineBinding.Color.encode(to:)(a1);
}

uint64_t FormatHeadlineBinding.Color.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v39 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v39 - v15;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v1;
  uint64_t v22 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  unint64_t v23 = sub_1BFEB6A24();
  uint64_t v40 = v19;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatHeadlineBinding.Color, v24, v22, (uint64_t)&type metadata for FormatHeadlineBinding.Color, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v19, v23, (uint64_t)&off_1F1C39B68);
  switch(v20)
  {
    case 1:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C151928C();
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v13, v30, v29);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1BFCDD794(1, (uint64_t)v13);
      uint64_t v28 = (uint64_t)v13;
      break;
    case 2:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C151928C();
      uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v10, v32, v31);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1BFCDD794(2, (uint64_t)v10);
      uint64_t v28 = (uint64_t)v10;
      break;
    case 3:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v7, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1BFCDD794(3, (uint64_t)v7);
      uint64_t v28 = (uint64_t)v7;
      break;
    case 4:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1C151928C();
      uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1EB93CA98);
      uint64_t v37 = (uint64_t)v39;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v39, v36, v35);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1BFCDD794(4, v37);
      uint64_t v28 = v37;
      break;
    default:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C151928C();
      uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v16, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1BFCDD794(0, (uint64_t)v16);
      uint64_t v28 = (uint64_t)v16;
      break;
  }
  sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v27, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCDD794(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C0904B18;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCDD8E8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCDD8E8()
{
  unint64_t result = qword_1EB866DE8;
  if (!qword_1EB866DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866DE8);
  }
  return result;
}

uint64_t sub_1BFCDD93C(void *a1)
{
  return FormatWebEmbedBinding.Bool.encode(to:)(a1);
}

uint64_t FormatWebEmbedBinding.Bool.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v70 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v69 = (char *)&v64 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)&v64 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v67 = (char *)&v64 - v11;
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v64 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v66 = (char *)&v64 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v65 = (char *)&v64 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v64 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v64 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v64 - v26;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *v2;
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  unint64_t v34 = sub_1BFEB6A24();
  uint64_t v71 = v30;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatWebEmbedBinding.Bool, v35, v32, (uint64_t)&type metadata for FormatWebEmbedBinding.Bool, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v33, (uint64_t)v30, v34, (uint64_t)&off_1F1C39B68);
  switch(v31)
  {
    case 1:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C151928C();
      uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EB93CAF8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v24, v41, v40);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = (uint64_t)v71;
      sub_1BFCDE344(1, (uint64_t)v24);
      uint64_t v39 = (uint64_t)v24;
      break;
    case 2:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C151928C();
      uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CA08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v21, v43, v42);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v71;
      sub_1BFCDE344(2, (uint64_t)v21);
      sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
      uint64_t v45 = v44;
      return sub_1BFEFEB68(v45, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 3:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1C151928C();
      uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CA08);
      uint64_t v48 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v65, v47, v46);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v49 = 3;
      goto LABEL_17;
    case 4:
      if (qword_1EB887628 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C151928C();
      uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CA68);
      uint64_t v48 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v66, v51, v50);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v49 = 4;
LABEL_17:
      uint64_t v38 = (uint64_t)v71;
      sub_1BFCDE344(v49, v48);
      uint64_t v39 = v48;
      break;
    case 5:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_1C151928C();
      uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v14, v53, v52);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v54 = 5;
      goto LABEL_33;
    case 6:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1C151928C();
      uint64_t v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CA80);
      char v14 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v67, v56, v55);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v54 = 6;
      goto LABEL_33;
    case 7:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CA80);
      char v14 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v68, v58, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v54 = 7;
      goto LABEL_33;
    case 8:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1C151928C();
      uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1EB93CA80);
      char v14 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v69, v60, v59);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v54 = 8;
      goto LABEL_33;
    case 9:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CA80);
      char v14 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v70, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v54 = 9;
LABEL_33:
      uint64_t v38 = (uint64_t)v71;
      sub_1BFCDE344(v54, (uint64_t)v14);
      uint64_t v39 = (uint64_t)v14;
      break;
    default:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v27, v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = (uint64_t)v71;
      sub_1BFCDE344(0, (uint64_t)v27);
      uint64_t v39 = (uint64_t)v27;
      break;
  }
  sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
  uint64_t v45 = v38;
  return sub_1BFEFEB68(v45, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFCDE344(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08E9B6C;
  void v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCDE498();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCDE498()
{
  unint64_t result = qword_1EB866FA8;
  if (!qword_1EB866FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866FA8);
  }
  return result;
}

uint64_t sub_1BFCDE4EC(uint64_t a1)
{
  return sub_1BFCDE504(a1);
}

uint64_t sub_1BFCDE504(uint64_t a1)
{
  return sub_1BFCDE544(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_1BFCDE544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v34 = a8;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  sub_1BFF35CA0();
  uint64_t v17 = v16;
  uint64_t v38 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (void *)((char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  swift_beginAccess();
  uint64_t v37 = a4;
  unint64_t v21 = *(void *)(a4 + 32);
  unint64_t v40 = v21;
  sub_1BFF35EA4(v21);
  uint64_t v22 = v39;
  sub_1BFF30600(a5, a2, a3, v19);
  sub_1BFF322A8(v21);
  if (v22) {
    return swift_release();
  }
  v32[5] = KeyPath;
  uint64_t v33 = v19;
  void v32[3] = a2;
  v32[4] = a3;
  uint64_t v39 = v17;
  uint64_t v25 = v36;
  uint64_t v24 = v37;
  swift_beginAccess();
  swift_retain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C12A4C68(v26, (uint64_t)a5);
  v32[0] = a11;
  v32[1] = a9;
  v32[2] = v27;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = v34;
  _OWORD v28[2] = v25;
  v28[3] = v29;
  unsigned char v28[4] = a9;
  v28[5] = a10;
  v28[6] = v32[0];
  v28[7] = v24;
  uint64_t v30 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1BFF54584(0, &qword_1EB884D68, MEMORY[0x1E4FAB4D0]);
  sub_1BFF544B8(&qword_1EB884D60, &qword_1EB884D68, v30);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v31 = v33;
  sub_1C15173CC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v38 + 8))(v31, v39);
}

uint64_t sub_1BFCDE86C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatItemNodeAction.init(from:)(a1, a2);
}

uint64_t FormatItemNodeAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v35);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - v6;
  uint64_t v8 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (long long *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  char v11 = (void *)v42;
  sub_1C1520EBC();
  uint64_t v12 = v11;
  if (v11)
  {
    uint64_t v13 = a1;
LABEL_11:
    sub_1C0038728(v13, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  uint64_t v32 = v4;
  uint64_t v33 = v10;
  uint64_t v42 = v8;
  uint64_t v14 = v36;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = v37;
  uint64_t v13 = a1;
  uint64_t v18 = v7;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      unint64_t v21 = (unint64_t *)(v19 + 40);
      while (1)
      {
        unint64_t v22 = *v21;
        if (*v21 >= 4) {
          break;
        }
        v21 += 2;
        if (!--v20) {
          goto LABEL_8;
        }
      }
      uint64_t v23 = *(v21 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v22;
      *(void *)(v24 + 16) = &unk_1F1B85F10;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v22);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v17);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFCDEE94();
  long long v39 = 0uLL;
  sub_1C15206EC();
  switch((char)v38)
  {
    case 1:
      long long v38 = xmmword_1C152C800;
      sub_1C0402354();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v17);
      uint64_t v26 = v40;
      __int16 v27 = v41;
      uint64_t v28 = v33;
      long long *v33 = v39;
      *((void *)v28 + 2) = v26;
      *((_WORD *)v28 + 12) = v27;
      goto LABEL_18;
    case 2:
      long long v39 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB876B30, (void (*)(uint64_t))type metadata accessor for FormatCommandOpenURL);
      uint64_t v29 = (uint64_t)v32;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v17);
      uint64_t v30 = v29;
      uint64_t v28 = v33;
      sub_1BFE7FB8C(v30, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      goto LABEL_18;
    case 3:
      long long v39 = xmmword_1C152C800;
      sub_1C003F294();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v17);
      uint64_t v28 = v33;
      *(unsigned char *)uint64_t v33 = v38;
LABEL_18:
      uint64_t v31 = v34;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v17);
      uint64_t v28 = v33;
      uint64_t v31 = v34;
      break;
  }
  swift_storeEnumTagMultiPayload();
  sub_1BFE7FB8C((uint64_t)v28, v31, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

unint64_t sub_1BFCDEE94()
{
  unint64_t result = qword_1EB889858;
  if (!qword_1EB889858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889858);
  }
  return result;
}

uint64_t sub_1BFCDEEE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatResizeConstraint.init(from:)(a1, a2);
}

uint64_t FormatResizeConstraint.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1C08AFBAC();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08AFC40();
  sub_1C085F050(&qword_1EB892020, (void (*)(uint64_t))sub_1C08AFC40);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v27;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      char v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v27 = *((void *)v16 - 2);
      uint64_t v18 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v19 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v19);
      *(&v27 - 4) = (uint64_t)&_s10CodingKeysON_61;
      *(&v27 - 3) = sub_1C08AFCC4();
      *(&v27 - 2) = sub_1BFCDF2D8();
      *(&v27 - 1) = sub_1C08AFD18();
      swift_getKeyPath();
      swift_retain();
      uint64_t v20 = sub_1C085FB14((uint64_t)&unk_1F1B87610);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v21 = v27;
      *(void *)uint64_t v22 = v27;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = v20;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v21, v18, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCDF32C();
  long long v28 = 0uLL;
  char v29 = 0;
  sub_1C15206EC();
  char v17 = v30;
  long long v28 = xmmword_1C153AB20;
  char v29 = 0;
  uint64_t v24 = sub_1C152069C();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *(unsigned char *)uint64_t v12 = v17;
  *(void *)(v12 + 8) = v24;
  *(void *)(v12 + 16) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCDF2D8()
{
  unint64_t result = qword_1EB88AAF8;
  if (!qword_1EB88AAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AAF8);
  }
  return result;
}

unint64_t sub_1BFCDF32C()
{
  unint64_t result = qword_1EB877730;
  if (!qword_1EB877730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877730);
  }
  return result;
}

uint64_t sub_1BFCDF380@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPlaceholder.init(from:)(a1, a2);
}

uint64_t FormatPlaceholder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFCDF5C8(0, &qword_1EB87A540, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCDF62C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  char v19 = 1;
  swift_bridgeObjectRetain();
  char v14 = sub_1C152071C();
  if (v14)
  {
    char v18 = 1;
    sub_1C15206EC();
    char v15 = v17;
  }
  else
  {
    char v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1BFCDF5C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFCDF62C();
    unint64_t v7 = a3(a1, &type metadata for FormatPlaceholder.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFCDF62C()
{
  unint64_t result = qword_1EB8758B0;
  if (!qword_1EB8758B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8758B0);
  }
  return result;
}

uint64_t sub_1BFCDF680()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BFCDF6B4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCDF704()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCDF764()
{
  unint64_t result = qword_1EB88A230;
  if (!qword_1EB88A230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A230);
  }
  return result;
}

uint64_t sub_1BFCDF7B8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCDF808()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCDF868()
{
  unint64_t result = qword_1EB886F18;
  if (!qword_1EB886F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886F18);
  }
  return result;
}

NewsFeed::FormatFontTrait_optional __swiftcall FormatFontTrait.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 2;
  switch(v3)
  {
    case 0:
      goto LABEL_3;
    case 1:
      char v5 = 1;
LABEL_3:
      char v6 = v5;
      break;
    case 2:
      break;
    case 3:
      char v6 = 3;
      break;
    case 4:
      char v6 = 4;
      break;
    case 5:
      char v6 = 5;
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    default:
      char v6 = 20;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_1BFCDF9E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatQueryValue.init(from:)(a1, a2);
}

uint64_t FormatQueryValue.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v27;
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v17;
      *(void *)(v19 + 16) = &unk_1F1B82900;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCDFD68();
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_1C15206EC();
  sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
  long long v24 = xmmword_1C152C800;
  sub_1C08662B4();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
  uint64_t v21 = v25;
  uint64_t v22 = v26;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  *(void *)(v23 + 24) = v22;
  *uint64_t v13 = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCDFD68()
{
  unint64_t result = qword_1EB887F68;
  if (!qword_1EB887F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887F68);
  }
  return result;
}

unsigned char *sub_1BFCDFDBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1BFCDFDE8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unsigned char *sub_1BFCDFDE8(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB884F18, (void (*)(void))sub_1C006D6D4, (void (*)(void))sub_1C006D728);
  uint64_t v3 = v2;
  uint64_t v71 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v52[-v4];
  sub_1C08EA7F8();
  uint64_t v7 = v6;
  uint64_t v72 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C9EAC();
  sub_1C085F050(&qword_1EB892250, (void (*)(uint64_t))sub_1C08C9EAC);
  uint64_t v10 = v73;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  uint64_t v73 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *((void *)v16 - 2);
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v23 = v9;
      MEMORY[0x1F4188790](v22);
      sub_1C08C9F30();
      sub_1C0030028();
      sub_1C08C9F84();
      swift_getKeyPath();
      swift_retain();
      uint64_t v24 = sub_1C085FB14((uint64_t)&unk_1F1B6BCF0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v5 = (unsigned char *)swift_allocError();
      *(void *)uint64_t v25 = v20;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v26 = v21;
      uint64_t v11 = v5;
      sub_1BFE94AD4(v20, v26, 1);
      (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v23, v7);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C08EA7F8);
  uint64_t v19 = v18;
  long long v76 = xmmword_1C153AB20;
  LOBYTE(v77) = 0;
  uint64_t v27 = sub_1C152069C();
  uint64_t v70 = v28;
  long long v69 = xmmword_1C1557FA0;
  long long v76 = xmmword_1C1557FA0;
  LOBYTE(v77) = 0;
  char v29 = sub_1C152071C();
  if (v29)
  {
    uint64_t v68 = v19;
    long long v74 = v69;
    char v75 = 0;
    sub_1C08EA88C();
    char v30 = v73;
    sub_1C15206EC();
    uint64_t v67 = v27;
    *(void *)&long long v69 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v30, v3);
    uint64_t v19 = v68;
  }
  else
  {
    uint64_t v67 = v27;
    *(void *)&long long v69 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v76 = xmmword_1C1557FB0;
  LOBYTE(v77) = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v32 = (unsigned char *)v74;
  long long v76 = xmmword_1C1557FD0;
  LOBYTE(v77) = 0;
  sub_1BFE922A0();
  sub_1C152065C();
  uint64_t v73 = v32;
  uint64_t v33 = v74;
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v76 = xmmword_1C1557FC0;
  LOBYTE(v77) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v71 = v33;
  uint64_t v34 = v74;
  long long v74 = xmmword_1C1557FE0;
  char v75 = 0;
  sub_1BFE9224C();
  sub_1C152065C();
  uint64_t v66 = v34;
  long long v65 = v76;
  LODWORD(v34) = v77;
  long long v74 = xmmword_1C1557FF0;
  char v75 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  int v64 = v34;
  long long v57 = v76;
  uint64_t v58 = v77;
  uint64_t v59 = v78;
  uint64_t v60 = v79;
  uint64_t v61 = v80;
  uint64_t v62 = v81;
  uint64_t v35 = v83;
  uint64_t v63 = v82;
  uint64_t v36 = v9;
  uint64_t v37 = v84;
  int v38 = v85;
  long long v76 = xmmword_1C1558010;
  LOBYTE(v77) = 0;
  sub_1BFE113DC();
  sub_1C152065C();
  int v53 = v38;
  uint64_t v54 = v37;
  uint64_t v55 = v35;
  uint64_t v68 = v19;
  uint64_t v39 = v74;
  long long v76 = xmmword_1C1558020;
  LOBYTE(v77) = 0;
  char v40 = sub_1C152061C();
  uint64_t v56 = 0;
  char v41 = v40;
  (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v36, v7);
  type metadata accessor for FormatVideoPlayerNodeStyle();
  uint64_t v5 = (unsigned char *)swift_allocObject();
  swift_beginAccess();
  uint64_t v42 = v68;
  *((void *)v5 + 2) = v17;
  *((void *)v5 + 3) = v42;
  uint64_t v43 = v70;
  *((void *)v5 + 4) = v67;
  *((void *)v5 + 5) = v43;
  swift_beginAccess();
  uint64_t v44 = v73;
  *((void *)v5 + 6) = v69;
  *((void *)v5 + 7) = v44;
  uint64_t v45 = v66;
  *((void *)v5 + 8) = v71;
  *((void *)v5 + 9) = v45;
  uint64_t v46 = *((void *)&v65 + 1);
  *((void *)v5 + 10) = v65;
  *((void *)v5 + 11) = v46;
  v5[96] = v64;
  uint64_t v47 = *((void *)&v57 + 1);
  *((void *)v5 + 13) = v57;
  *((void *)v5 + 14) = v47;
  uint64_t v48 = v59;
  *((void *)v5 + 15) = v58;
  *((void *)v5 + 16) = v48;
  uint64_t v49 = v61;
  *((void *)v5 + 17) = v60;
  *((void *)v5 + 18) = v49;
  uint64_t v50 = v63;
  *((void *)v5 + 19) = v62;
  *((void *)v5 + 20) = v50;
  uint64_t v51 = v54;
  *((void *)v5 + 21) = v55;
  *((void *)v5 + 22) = v51;
  v5[184] = v53;
  *((void *)v5 + 24) = v39;
  v5[200] = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

uint64_t type metadata accessor for FormatVideoPlayerNodeStyle()
{
  return self;
}

uint64_t sub_1BFCE0AA8(void *a1)
{
  return FormatDecorationContent.encode(to:)(a1);
}

uint64_t FormatDecorationContent.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v99 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v98 = (char *)&v94 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v100 = (char *)&v94 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v97 = (char *)&v94 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v96 = (char *)&v94 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v95 = (char *)&v94 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v94 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v94 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v94 - v23;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v28 = *v2;
  uint64_t v29 = a1[3];
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  unint64_t v31 = sub_1BFEB6A24();
  uint64_t v107 = v27;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatDecorationContent, v32, v29, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v30, (uint64_t)v27, v31, (uint64_t)&off_1F1C39B68);
  switch(v28 >> 60)
  {
    case 1uLL:
      long long v39 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v101[0] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v101[1] = v39;
      long long v40 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      v101[2] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      v101[3] = v40;
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1C151928C();
      uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v18, v42, v41);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v107;
      sub_1BFCE16E8(2, v101, (uint64_t)v18);
      goto LABEL_11;
    case 2uLL:
      long long v44 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      v102[4] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      v102[5] = v44;
      long long v45 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      v102[6] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      v102[7] = v45;
      long long v46 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v102[0] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v102[1] = v46;
      long long v47 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      v102[2] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      v102[3] = v47;
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C151928C();
      uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EB93CAF8);
      uint64_t v18 = v95;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v95, v49, v48);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v107;
      sub_1C0680F70(3, v102, (uint64_t)v18);
LABEL_11:
      uint64_t v50 = (uint64_t)v18;
      goto LABEL_34;
    case 3uLL:
      long long v51 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v103 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v104[0] = v51;
      *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x29);
      sub_1C0883360((uint64_t)&v103);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_1C151928C();
      uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)qword_1EB93CAB0);
      uint64_t v54 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v96, v53, v52);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = (uint64_t)v107;
      sub_1C0681120(4, &v103, v54);
      sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v55, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C0883390((uint64_t)&v103);
    case 4uLL:
      long long v57 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      v105[6] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      v105[7] = v57;
      v105[8] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      char v106 = *(unsigned char *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0xA0);
      long long v58 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      v105[2] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      v105[3] = v58;
      long long v59 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      v105[4] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      v105[5] = v59;
      long long v60 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v105[0] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v105[1] = v60;
      sub_1C0445048((uint64_t)v105);
      if (qword_1EB887610 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CA20);
      uint64_t v63 = (uint64_t)v97;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v97, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = (uint64_t)v107;
      sub_1C06812C0(5, v105, v63);
      sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v64, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C05D9AA0((uint64_t)v105);
    case 5uLL:
      uint64_t v65 = *(void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF05D18();
      uint64_t v67 = (uint64_t)v100;
      uint64_t v68 = &v100[*(int *)(v66 + 48)];
      long long v69 = &v100[*(int *)(v66 + 64)];
      sub_1BFF7B774(v65);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1C151928C();
      uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93CA98);
      uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
      v72(v67, v71, v70);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v73 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93C828);
      v72((uint64_t)v68, v73, v70);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)long long v69 = 0;
      *((void *)v69 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v74 = (uint64_t)v107;
      sub_1C0681488(6, v65, v67);
      sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v74, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1BFF7C0EC(v65);
    case 6uLL:
      uint64_t v75 = *(void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v76 = *(void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v77 = qword_1EB887600;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v77 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CA08);
      uint64_t v80 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v98, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v81 = v75;
      uint64_t v82 = (uint64_t)v107;
      sub_1BFC54BCC(7, v81, v76, v80);
      sub_1BFEFEB68(v80, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v82, (uint64_t (*)(void))sub_1BFEFF7D8);
      goto LABEL_29;
    case 7uLL:
      uint64_t v83 = *(void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v84 = *(void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v85 = *(void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v86 = qword_1EB887600;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v86 != -1) {
        swift_once();
      }
      uint64_t v87 = sub_1C151928C();
      uint64_t v88 = __swift_project_value_buffer(v87, (uint64_t)qword_1EB93CA08);
      uint64_t v89 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v99, v88, v87);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v90 = v83;
      uint64_t v91 = (uint64_t)v107;
      sub_1C068161C(8, v90, v84, v85, v89);
      sub_1BFEFEB68(v89, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v91, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
LABEL_29:
      swift_bridgeObjectRelease();
      return swift_release();
    case 8uLL:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v92 = sub_1C151928C();
      uint64_t v93 = __swift_project_value_buffer(v92, (uint64_t)qword_1EB93CA08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16))(v24, v93, v92);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v107;
      sub_1C0731700(0, (uint64_t)v24);
      uint64_t v50 = (uint64_t)v24;
LABEL_34:
      sub_1BFEFEB68(v50, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v43, (uint64_t (*)(void))sub_1BFEFF7D8);
    default:
      uint64_t v33 = *(void *)(v28 + 16);
      uint64_t v34 = qword_1EB882D28;
      swift_retain();
      if (v34 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1C151928C();
      uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v21, v36, v35);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v33;
      uint64_t v38 = (uint64_t)v107;
      sub_1C0680DDC(1, v37, (uint64_t)v21);
      sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v38, (uint64_t (*)(void))sub_1BFEFF7D8);
      return swift_release();
  }
}

uint64_t sub_1BFCE16E8(char a1, long long *a2, uint64_t a3)
{
  char v22 = a1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  uint64_t v16[2] = sub_1C08FC52C;
  _OWORD v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAB90C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCE1888()
{
  unint64_t result = qword_1EB867408;
  if (!qword_1EB867408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867408);
  }
  return result;
}

unint64_t sub_1BFCE18DC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1BFCE1908(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1BFCE1908(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v29 - v7;
  unint64_t v9 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v10 = v33;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v9;
  }
  uint64_t v33 = v4;
  uint64_t v12 = v30;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  unint64_t v9 = (unint64_t)v8;
  if (v14)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      long long v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v11 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v18;
      *(void *)(v21 + 16) = &unk_1F1B86348;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v18);
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v9, v6);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCE1E5C();
  long long v32 = 0uLL;
  sub_1C15206EC();
  uint64_t v19 = (uint64_t)v33;
  switch((char)v31)
  {
    case 1:
      long long v32 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB876B30, (void (*)(uint64_t))type metadata accessor for FormatCommandOpenURL);
      sub_1C15206EC();
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v9, v6);
      unint64_t v9 = swift_allocBox();
      sub_1BFE7FB8C(v19, v22, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      break;
    case 2:
      long long v32 = xmmword_1C152C800;
      sub_1BFDDBFF8();
      sub_1C15206EC();
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v9, v6);
      uint64_t v23 = v31;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v23;
      unint64_t v9 = v24 | 0x4000000000000000;
      break;
    case 3:
      sub_1BFEFF3E8(0, &qword_1EB875B40, (uint64_t (*)(void))sub_1C0077AAC, (uint64_t)&type metadata for FormatMenuItemAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
      long long v31 = xmmword_1C152C800;
      sub_1BFCE1EB0();
      sub_1C15206EC();
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v9, v6);
      uint64_t v27 = *((void *)&v32 + 1);
      uint64_t v26 = v32;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v26;
      *(void *)(v28 + 24) = v27;
      unint64_t v9 = v28 | 0x8000000000000000;
      break;
    default:
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v9, v6);
      unint64_t v9 = 0xC000000000000000;
      break;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1BFCE1E5C()
{
  unint64_t result = qword_1EB889A10;
  if (!qword_1EB889A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889A10);
  }
  return result;
}

unint64_t sub_1BFCE1EB0()
{
  unint64_t result = qword_1EB875B38;
  if (!qword_1EB875B38)
  {
    sub_1BFEFF3E8(255, &qword_1EB875B40, (uint64_t (*)(void))sub_1C0077AAC, (uint64_t)&type metadata for FormatMenuItemAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875B38);
  }
  return result;
}

uint64_t sub_1BFCE1F40()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCE1FA0()
{
  unint64_t result = qword_1EB875420;
  if (!qword_1EB875420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875420);
  }
  return result;
}

uint64_t FeedGroupDebug.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFCE2034()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 48) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  *uint64_t v4 = v0;
  v4[1] = sub_1C005E7F8;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v2, v5);
}

uint64_t sub_1BFCE2154()
{
  if (qword_1EB863AC8 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    if (qword_1EA194BC8 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 1624);
    uint64_t v3 = *(void *)(v0 + 1576);
    char v4 = *(unsigned char *)(v0 + 1784);
    uint64_t v5 = *(void *)(v0 + 1528);
    sub_1BFDF8CDC(&qword_1EA198640, v1, (void (*)(uint64_t))type metadata accessor for PuzzleService);
    sub_1C1516FBC();
    id v6 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, *(double *)(v0 + 1432));
    *(void *)(v0 + 1680) = v6;
    uint64_t v7 = swift_task_alloc();
    *(void *)(v0 + 1688) = v7;
    *(void *)(v7 + 16) = v2;
    *(void *)(v7 + 24) = v5;
    *(void *)(v7 + 32) = v6;
    *(void *)(v7 + 40) = v3;
    *(unsigned char *)(v7 + 48) = v4;
    long long v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 1696) = v8;
    sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
    *long long v8 = v0;
    v8[1] = sub_1C0237F9C;
    return MEMORY[0x1F4188160](v0 + 1480, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v7, v9);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 1624);
    uint64_t v11 = *(void **)(v0 + 1576);
    char v12 = *(unsigned char *)(v0 + 1784);
    uint64_t v13 = *(void *)(v0 + 1528);
    id v14 = objc_msgSend(objc_msgSend(*(id *)(v10 + 160), sel_appConfiguration), sel_puzzlesConfig);
    *(void *)(v0 + 1712) = v14;
    swift_unknownObjectRelease();
    objc_msgSend(v14, sel_recentPuzzlesCacheLifetime);
    double v16 = v15;
    long long v17 = self;
    id v18 = objc_msgSend(v17, sel_cachePolicyWithSoftMaxAge_, v16);
    *(void *)(v0 + 1720) = v18;
    objc_msgSend(v14, sel_puzzlesCacheLifetime);
    id v19 = objc_msgSend(v17, sel_cachePolicyWithSoftMaxAge_);
    *(void *)(v0 + 1728) = v19;
    uint64_t v20 = sub_1BFCE2630(v13);
    uint64_t v22 = v21;
    uint64_t v23 = swift_allocObject();
    *(void *)(v0 + 1736) = v23;
    *(void *)(v23 + 16) = v10;
    *(void *)(v23 + 24) = v20;
    *(unsigned char *)(v23 + 32) = v12;
    *(void *)(v23 + 40) = v18;
    *(void *)(v23 + 48) = v11;
    swift_retain();
    id v24 = v18;
    id v25 = v11;
    swift_retain();
    sub_1BFCE25D8(255, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
    swift_asyncLet_begin();
    uint64_t v26 = swift_allocObject();
    *(void *)(v0 + 1744) = v26;
    *(void *)(v26 + 16) = v10;
    *(void *)(v26 + 24) = v22;
    *(unsigned char *)(v26 + 32) = v12;
    *(void *)(v26 + 40) = v19;
    *(void *)(v26 + 48) = v25;
    swift_retain();
    id v27 = v25;
    id v28 = v19;
    swift_retain();
    swift_asyncLet_begin();
    return MEMORY[0x1F41881E0](v0 + 656, v0 + 1336, sub_1BFC3F148, v0 + 1392);
  }
}

void sub_1BFCE25D8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFC9DBE8(255, a3);
    unint64_t v4 = sub_1C151ED5C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_1BFCE2630(uint64_t a1)
{
  uint64_t v49 = sub_1C151631C();
  uint64_t v3 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  long long v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v39 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  id v14 = *(void **)(v1 + 64);
  long long v46 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  id v47 = v14;
  long long v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v41 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v42 = v10;
  long long v40 = (void (**)(char *, uint64_t))(v3 + 8);
  swift_bridgeObjectRetain();
  uint64_t v39 = a1;
  double v15 = (uint64_t *)(a1 + 40);
  double v16 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v43 = v8;
  long long v44 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v17 = v49;
  uint64_t v50 = v12;
  do
  {
    uint64_t v21 = *(v15 - 1);
    uint64_t v20 = *v15;
    swift_bridgeObjectRetain();
    uint64_t v22 = (void *)sub_1C151E5EC();
    id v23 = objc_msgSend(v47, sel_slowCachedPuzzleForID_, v22, v39);

    if (v23)
    {
      id v24 = objc_msgSend(v23, sel_publishDate);
      if (v24)
      {
        id v25 = v24;
        uint64_t v26 = v42;
        sub_1C15162BC();

        uint64_t v27 = 0;
      }
      else
      {
        uint64_t v27 = 1;
        uint64_t v26 = v42;
      }
      (*v46)(v26, v27, 1, v17);
      uint64_t v28 = (uint64_t)v50;
      sub_1BFF882CC(v26, (uint64_t)v50, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      long long v8 = v43;
    }
    else
    {
      uint64_t v28 = (uint64_t)v50;
      (*v46)((uint64_t)v50, 1, 1, v17);
    }
    sub_1C0236808(v28, (uint64_t)v8, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
    if ((*v45)(v8, 1, v17) == 1)
    {
      sub_1BFF50FC4((uint64_t)v8, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v16 = sub_1BFEF9B68(0, v16[2] + 1, 1, v16);
      }
      unint64_t v30 = v16[2];
      unint64_t v29 = v16[3];
      if (v30 >= v29 >> 1) {
        double v16 = sub_1BFEF9B68((void *)(v29 > 1), v30 + 1, 1, v16);
      }
      uint64_t v16[2] = v30 + 1;
      long long v31 = &v16[2 * v30];
      v31[4] = v21;
      v31[5] = v20;
      swift_unknownObjectRelease();
      uint64_t v17 = v49;
    }
    else
    {
      (*v41)(v48, v8, v17);
      sub_1C151627C();
      if (fabs(v32) >= 86400.0)
      {
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v36 = v44;
        }
        else {
          uint64_t v36 = sub_1BFEF9B68(0, v44[2] + 1, 1, v44);
        }
        unint64_t v34 = v36[2];
        unint64_t v37 = v36[3];
        unint64_t v35 = v34 + 1;
        if (v34 >= v37 >> 1)
        {
          id v18 = sub_1BFEF9B68((void *)(v37 > 1), v34 + 1, 1, v36);
          long long v44 = v18;
        }
        else
        {
          long long v44 = v36;
          id v18 = v36;
        }
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v16 = sub_1BFEF9B68(0, v16[2] + 1, 1, v16);
        }
        unint64_t v34 = v16[2];
        unint64_t v33 = v16[3];
        unint64_t v35 = v34 + 1;
        if (v34 >= v33 >> 1)
        {
          id v18 = sub_1BFEF9B68((void *)(v33 > 1), v34 + 1, 1, v16);
          double v16 = v18;
        }
        else
        {
          id v18 = v16;
        }
      }
      v18[2] = v35;
      id v19 = &v18[2 * v34];
      void v19[4] = v21;
      void v19[5] = v20;
      swift_unknownObjectRelease();
      uint64_t v17 = v49;
      (*v40)(v48, v49);
    }
    v15 += 2;
    sub_1BFF50FC4((uint64_t)v50, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BFCE2B9C(void *a1)
{
  return FormatSymbolWeight.encode(to:)(a1);
}

uint64_t FormatSymbolWeight.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v75 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v74 = (char *)&v65 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v65 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v72 = (char *)&v65 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v71 = (char *)&v65 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v70 = (char *)&v65 - v14;
  MEMORY[0x1F4188790](v15);
  long long v69 = (char *)&v65 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v68 = (char *)&v65 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v67 = (char *)&v65 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v66 = (char *)&v65 - v22;
  MEMORY[0x1F4188790](v23);
  id v25 = (char *)&v65 - v24;
  uint64_t v76 = *v1;
  uint64_t v77 = a1;
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1C151928C();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CAB0);
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  v30(v25, v29, v28);
  uint64_t v31 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v80;
  sub_1BFE97CE8((uint64_t)v25, (uint64_t)sub_1C01B158C, 0, v26, v27);
  if (v32) {
    return sub_1BFEFEB68((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
  }
  uint64_t v80 = v31;
  sub_1BFEFEB68((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
  unint64_t v34 = v30;
  switch(v76)
  {
    case 1:
      uint64_t v38 = v77[3];
      uint64_t v39 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v38);
      uint64_t v40 = (uint64_t)v67;
      v34(v67, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v40, (uint64_t)sub_1C01B158C, 0, v38, v39);
      sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
      break;
    case 2:
      uint64_t v41 = v77[3];
      uint64_t v42 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v41);
      uint64_t v43 = (uint64_t)v68;
      v34(v68, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v43, (uint64_t)sub_1C01B158C, 0, v41, v42);
      sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
      break;
    case 3:
      uint64_t v44 = v77[3];
      uint64_t v45 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v44);
      uint64_t v46 = (uint64_t)v69;
      v34(v69, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v46, (uint64_t)sub_1C01B158C, 0, v44, v45);
      sub_1BFEFEB68(v46, type metadata accessor for FormatVersionRequirement);
      break;
    case 4:
      uint64_t v47 = v77[3];
      uint64_t v48 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v47);
      uint64_t v49 = (uint64_t)v70;
      v34(v70, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v49, (uint64_t)sub_1C01B158C, 0, v47, v48);
      sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
      break;
    case 5:
      uint64_t v50 = v77[3];
      uint64_t v51 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v50);
      uint64_t v52 = (uint64_t)v71;
      v34(v71, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v52, (uint64_t)sub_1C01B158C, 0, v50, v51);
      sub_1BFEFEB68(v52, type metadata accessor for FormatVersionRequirement);
      break;
    case 6:
      uint64_t v53 = v77[3];
      uint64_t v54 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v53);
      uint64_t v55 = (uint64_t)v72;
      v34(v72, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v55, (uint64_t)sub_1C01B158C, 0, v53, v54);
      sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
      break;
    case 7:
      uint64_t v56 = v77[3];
      uint64_t v57 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v56);
      uint64_t v58 = (uint64_t)v73;
      v34(v73, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v58, (uint64_t)sub_1C01B158C, 0, v56, v57);
      sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
      break;
    case 8:
      uint64_t v59 = v77[3];
      uint64_t v60 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v59);
      uint64_t v61 = (uint64_t)v74;
      v34(v74, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v61, (uint64_t)sub_1C01B158C, 0, v59, v60);
      sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
      break;
    case 9:
      uint64_t v62 = v77[3];
      uint64_t v63 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v62);
      uint64_t v64 = (uint64_t)v75;
      v34(v75, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v64, (uint64_t)sub_1C01B158C, 0, v62, v63);
      sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
      break;
    default:
      uint64_t v35 = v77[3];
      uint64_t v36 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v35);
      uint64_t v37 = (uint64_t)v66;
      v30(v66, v29, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v37, (uint64_t)sub_1C01B158C, 0, v35, v36);
      sub_1BFEFEB68(v37, type metadata accessor for FormatVersionRequirement);
      break;
  }
  __swift_project_boxed_opaque_existential_1(v77, v77[3]);
  sub_1C1520EEC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v78, v79);
  sub_1C1520AFC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
}

uint64_t sub_1BFCE3624(void *a1)
{
  return FormatGroupItemKind.encode(to:)(a1);
}

uint64_t FormatGroupItemKind.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v60 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v59 = (char *)&v54 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (char *)&v54 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (char *)&v54 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v56 = (char *)&v54 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v55 = (char *)&v54 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v54 = (char *)&v54 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v61 = *v1;
  uint64_t v62 = a1;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  if (qword_1EB887640 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAC8);
  uint64_t v24 = *(void *)(v22 - 8);
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v26 = v24 + 16;
  v25(v19, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = v65;
  sub_1BFE97CE8((uint64_t)v19, (uint64_t)sub_1C01B158C, 0, v20, v21);
  if (v27) {
    return sub_1BFEFEB68((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
  }
  uint64_t v65 = v26;
  sub_1BFEFEB68((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
  uint64_t v29 = v62;
  switch(v61)
  {
    case 1:
      uint64_t v32 = v62[3];
      uint64_t v61 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v32);
      uint64_t v33 = (uint64_t)v55;
      v25(v55, v23, v22);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v33, (uint64_t)sub_1C01B158C, 0, v32, v61);
      sub_1BFEFEB68(v33, type metadata accessor for FormatVersionRequirement);
      break;
    case 2:
      uint64_t v34 = v62[3];
      uint64_t v35 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v34);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v36 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CA50);
      uint64_t v37 = (uint64_t)v56;
      v25(v56, v36, v22);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v37, (uint64_t)sub_1C01B158C, 0, v34, v35);
      sub_1BFEFEB68(v37, type metadata accessor for FormatVersionRequirement);
      break;
    case 3:
      uint64_t v38 = v62[3];
      uint64_t v39 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v38);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v40 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CA80);
      uint64_t v41 = (uint64_t)v57;
      v25(v57, v40, v22);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v41, (uint64_t)sub_1C01B158C, 0, v38, v39);
      sub_1BFEFEB68(v41, type metadata accessor for FormatVersionRequirement);
      break;
    case 4:
      uint64_t v42 = v62[3];
      uint64_t v43 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v42);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v44 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CA80);
      uint64_t v45 = (uint64_t)v58;
      v25(v58, v44, v22);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v45, (uint64_t)sub_1C01B158C, 0, v42, v43);
      sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
      break;
    case 5:
      uint64_t v46 = v62[3];
      uint64_t v47 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v46);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v48 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CA80);
      uint64_t v49 = (uint64_t)v59;
      v25(v59, v48, v22);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v49, (uint64_t)sub_1C01B158C, 0, v46, v47);
      sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
      break;
    case 6:
      uint64_t v50 = v62[3];
      uint64_t v51 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v50);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v52 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CA80);
      uint64_t v53 = (uint64_t)v60;
      v25(v60, v52, v22);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v53, (uint64_t)sub_1C01B158C, 0, v50, v51);
      sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
      break;
    default:
      uint64_t v30 = v62[3];
      uint64_t v61 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v30);
      uint64_t v31 = (uint64_t)v54;
      v25(v54, v23, v22);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v31, (uint64_t)sub_1C01B158C, 0, v30, v61);
      sub_1BFEFEB68(v31, type metadata accessor for FormatVersionRequirement);
      break;
  }
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  sub_1C1520EEC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v63, v64);
  sub_1C1520AFC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
}

uint64_t sub_1BFCE3F84(void *a1)
{
  return FormatSymbolScale.encode(to:)(a1);
}

uint64_t FormatSymbolScale.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)&v33 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v35 = (char *)&v33 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v33 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)&v33 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v38 = *v1;
  uint64_t v39 = a1;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C151928C();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB93CAB0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v20(v15, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v42;
  sub_1BFE97CE8((uint64_t)v15, (uint64_t)sub_1C01B158C, 0, v16, v17);
  uint64_t result = sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  if (!v21)
  {
    switch(v38)
    {
      case 1:
        uint64_t v25 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v25);
        uint64_t v26 = (uint64_t)v34;
        v20(v34, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v26, (uint64_t)sub_1C01B158C, 0, v25, v42);
        sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
        break;
      case 2:
        uint64_t v27 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v27);
        uint64_t v28 = (uint64_t)v35;
        v20(v35, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v28, (uint64_t)sub_1C01B158C, 0, v27, v42);
        sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
        break;
      case 3:
        uint64_t v29 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v29);
        uint64_t v30 = (uint64_t)v36;
        v20(v36, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v30, (uint64_t)sub_1C01B158C, 0, v29, v42);
        sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
        break;
      case 4:
        uint64_t v31 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v31);
        uint64_t v32 = (uint64_t)v37;
        v20(v37, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v32, (uint64_t)sub_1C01B158C, 0, v31, v42);
        sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
        break;
      default:
        uint64_t v23 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v23);
        uint64_t v24 = (uint64_t)v33;
        v20(v33, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v24, (uint64_t)sub_1C01B158C, 0, v23, v42);
        sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
        break;
    }
    __swift_project_boxed_opaque_existential_1(v39, v39[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  return result;
}

uint64_t sub_1BFCE45CC(void *a1)
{
  return FormatUnderlineStyle.encode(to:)(a1);
}

uint64_t FormatUnderlineStyle.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v64 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v63 = (char *)&v56 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v62 = (char *)&v56 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (char *)&v56 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v60 = (char *)&v56 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v59 = (char *)&v56 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v58 = (char *)&v56 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v57 = (char *)&v56 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v56 - v20;
  uint64_t v65 = *v1;
  uint64_t v66 = a1;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  if (qword_1EB887620 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C151928C();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CA50);
  uint64_t v26 = *(void (**)(void))(*(void *)(v24 - 8) + 16);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v21, v25, v24);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = v69;
  sub_1BFE97CE8((uint64_t)v21, (uint64_t)sub_1C01B158C, 0, v22, v23);
  if (v27)
  {
    uint64_t v28 = (uint64_t)v21;
    return sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    uint64_t v30 = v66;
    uint64_t v69 = 0;
    switch(v65)
    {
      case 1:
        uint64_t v34 = v66[3];
        uint64_t v65 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v34);
        uint64_t v35 = (uint64_t)v58;
        ((void (*)(char *, uint64_t, uint64_t))v26)(v58, v25, v24);
        swift_storeEnumTagMultiPayload();
        uint64_t v36 = v69;
        sub_1BFE97CE8(v35, (uint64_t)sub_1C01B158C, 0, v34, v65);
        uint64_t result = sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
        if (!v36) {
          goto LABEL_25;
        }
        break;
      case 2:
        uint64_t v37 = v66[3];
        uint64_t v65 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v37);
        uint64_t v38 = (uint64_t)v59;
        ((void (*)(char *, uint64_t, uint64_t))v26)(v59, v25, v24);
        swift_storeEnumTagMultiPayload();
        uint64_t v39 = v69;
        sub_1BFE97CE8(v38, (uint64_t)sub_1C01B158C, 0, v37, v65);
        uint64_t result = sub_1BFEFEB68(v38, type metadata accessor for FormatVersionRequirement);
        if (!v39) {
          goto LABEL_25;
        }
        break;
      case 3:
        uint64_t v40 = v66[3];
        uint64_t v65 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v40);
        uint64_t v41 = (uint64_t)v60;
        ((void (*)(char *, uint64_t, uint64_t))v26)(v60, v25, v24);
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = v69;
        sub_1BFE97CE8(v41, (uint64_t)sub_1C01B158C, 0, v40, v65);
        uint64_t result = sub_1BFEFEB68(v41, type metadata accessor for FormatVersionRequirement);
        if (!v42) {
          goto LABEL_25;
        }
        break;
      case 4:
        uint64_t v43 = v66[3];
        uint64_t v65 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v43);
        uint64_t v44 = (uint64_t)v61;
        ((void (*)(char *, uint64_t, uint64_t))v26)(v61, v25, v24);
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = v69;
        sub_1BFE97CE8(v44, (uint64_t)sub_1C01B158C, 0, v43, v65);
        uint64_t result = sub_1BFEFEB68(v44, type metadata accessor for FormatVersionRequirement);
        if (!v45) {
          goto LABEL_25;
        }
        break;
      case 5:
        uint64_t v46 = v66[3];
        uint64_t v65 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v46);
        uint64_t v47 = (uint64_t)v62;
        ((void (*)(char *, uint64_t, uint64_t))v26)(v62, v25, v24);
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = v69;
        sub_1BFE97CE8(v47, (uint64_t)sub_1C01B158C, 0, v46, v65);
        uint64_t result = sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
        if (!v48) {
          goto LABEL_25;
        }
        break;
      case 6:
        uint64_t v49 = v66[3];
        uint64_t v65 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v49);
        uint64_t v50 = (uint64_t)v63;
        ((void (*)(char *, uint64_t, uint64_t))v26)(v63, v25, v24);
        swift_storeEnumTagMultiPayload();
        uint64_t v51 = v69;
        sub_1BFE97CE8(v50, (uint64_t)sub_1C01B158C, 0, v49, v65);
        uint64_t result = sub_1BFEFEB68(v50, type metadata accessor for FormatVersionRequirement);
        if (!v51) {
          goto LABEL_25;
        }
        break;
      case 7:
        uint64_t v53 = v66[3];
        uint64_t v52 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v53);
        uint64_t v54 = (uint64_t)v64;
        v26();
        swift_storeEnumTagMultiPayload();
        uint64_t v55 = v69;
        sub_1BFE97CE8(v54, (uint64_t)sub_1C01B158C, 0, v53, v52);
        if (v55)
        {
          uint64_t v28 = v54;
          return sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
        }
        sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
        goto LABEL_25;
      default:
        uint64_t v31 = v66[3];
        uint64_t v65 = v66[4];
        __swift_project_boxed_opaque_existential_1(v66, v31);
        uint64_t v32 = (uint64_t)v57;
        ((void (*)(char *, uint64_t, uint64_t))v26)(v57, v25, v24);
        swift_storeEnumTagMultiPayload();
        uint64_t v33 = v69;
        sub_1BFE97CE8(v32, (uint64_t)sub_1C01B158C, 0, v31, v65);
        uint64_t result = sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
        if (!v33)
        {
LABEL_25:
          __swift_project_boxed_opaque_existential_1(v30, v30[3]);
          sub_1C1520EEC();
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v67, v68);
          sub_1C1520AFC();
          swift_bridgeObjectRelease();
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1BFCE4EF8(void *a1)
{
  return FormatMenu.encode(to:)(a1);
}

uint64_t FormatMenu.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v33 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (char *)&v33 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v33 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v33 - v12;
  sub_1BFCE55C0();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *v1;
  uint64_t v18 = v1[1];
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1BFCE5B6C();
  sub_1BFEFBB88((uint64_t)&type metadata for FormatMenu.CodingKeys, v21, v19, (uint64_t)&type metadata for FormatVersions.Azden, v20, (uint64_t)&off_1F1C39A68, (uint64_t)v16);
  uint64_t v22 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C151928C();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CA98);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  uint64_t v35 = v24;
  uint64_t v37 = v25;
  ((void (*)(char *))v25)(v13);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BFCE53A8(v17, 0, (uint64_t)v13, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEDA8((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    if (!v18)
    {
      uint64_t v31 = (uint64_t)v34;
      v37(v34, v35, v23);
      swift_storeEnumTagMultiPayload();
      sub_1C0817BE4(v31, 1, (uint64_t)sub_1C128E2B8, 0);
      sub_1BFEFEDA8(v31, type metadata accessor for FormatVersionRequirement);
    }
    uint64_t v26 = qword_1EB8875F8;
    swift_bridgeObjectRetain();
    if (v26 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93C9F0);
    uint64_t v28 = (uint64_t)v36;
    v37(v36, v27, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BFCE565C(v18, 1, v28, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEDA8(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)v33;
    v37(v33, v35, v23);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = swift_bridgeObjectRetain();
    sub_1BFCE53A8(v30, 0, v29, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEDA8(v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEDA8((uint64_t)v16, (uint64_t (*)(void))sub_1BFCE55C0);
}

uint64_t sub_1BFCE53A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a3;
  char v22 = a2;
  sub_1BFCE55C0();
  uint64_t v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v15;
  *(unsigned char *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = v13;
  *(void *)(v15 + 32) = v14;
  if (a1)
  {
    uint64_t v21 = a1;
    MEMORY[0x1F4188790](v15);
    void v19[2] = a4;
    v19[3] = a5;
    void v19[4] = sub_1C08E52F8;
    void v19[5] = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    char v17 = sub_1BFCE5908(v20, a2, (uint64_t)sub_1C090A470, (uint64_t)v19);
    if (!v6 && (v17 & 1) != 0)
    {
      sub_1BFEFF3E8(0, (unint64_t *)&unk_1EB85C638, (uint64_t (*)(void))sub_1BFCE5B6C, (uint64_t)&type metadata for FormatMenu.CodingKeys, MEMORY[0x1E4FBBDE0]);
      sub_1BFCE5ADC();
      sub_1BFE9DEBC(0, &qword_1EB880CE8, (uint64_t)&type metadata for FormatMenuGroupable, MEMORY[0x1E4FBB320]);
      sub_1C08E5360();
      sub_1C1520BAC();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

void sub_1BFCE55C0()
{
  if (!qword_1EB869770)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&unk_1EB85C638, (uint64_t (*)(void))sub_1BFCE5B6C, (uint64_t)&type metadata for FormatMenu.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFCE5ADC();
    unint64_t v0 = type metadata accessor for VersionedKeyedEncodingContainer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB869770);
    }
  }
}

uint64_t sub_1BFCE565C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a3;
  char v22 = a2;
  sub_1BFCE55C0();
  uint64_t v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v15;
  *(unsigned char *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = v13;
  *(void *)(v15 + 32) = v14;
  if (a1)
  {
    uint64_t v21 = a1;
    MEMORY[0x1F4188790](v15);
    void v19[2] = a4;
    v19[3] = a5;
    void v19[4] = sub_1C08E52F8;
    void v19[5] = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    char v17 = sub_1BFCE5908(v20, a2, (uint64_t)sub_1C08659A0, (uint64_t)v19);
    if (!v6 && (v17 & 1) != 0)
    {
      sub_1BFEFF3E8(0, (unint64_t *)&unk_1EB85C638, (uint64_t (*)(void))sub_1BFCE5B6C, (uint64_t)&type metadata for FormatMenu.CodingKeys, MEMORY[0x1E4FBBDE0]);
      sub_1BFCE5ADC();
      sub_1BFE9DEBC(0, &qword_1EB879DA8, (uint64_t)&type metadata for FormatMenuItem, MEMORY[0x1E4FBB320]);
      sub_1BFCE5874();
      sub_1C1520BAC();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

unint64_t sub_1BFCE5874()
{
  unint64_t result = qword_1EB85C3C8;
  if (!qword_1EB85C3C8)
  {
    sub_1BFE9DEBC(255, &qword_1EB879DA8, (uint64_t)&type metadata for FormatMenuItem, MEMORY[0x1E4FBB320]);
    sub_1C0081CEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C3C8);
  }
  return result;
}

uint64_t sub_1BFCE5908(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1BFCE55C0();
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v12;
  *(void *)(v14 + 32) = v13;
  sub_1BFEFF3E8(0, (unint64_t *)&unk_1EB85C638, (uint64_t (*)(void))sub_1BFCE5B6C, (uint64_t)&type metadata for FormatMenu.CodingKeys, MEMORY[0x1E4FBBDE0]);
  sub_1BFCE5ADC();
  swift_retain();
  uint64_t v15 = sub_1C1520B8C();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = a2;
  sub_1BFC66384(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  uint64_t v20 = sub_1C08E5324;
  uint64_t v21 = v16;
  v18[2] = a3;
  void v18[3] = a4;
  v18[4] = sub_1C08E52F8;
  void v18[5] = v14;
  LOBYTE(v15) = sub_1BFEFC050(a1, (uint64_t)sub_1C090A464, (uint64_t)v19, (uint64_t)sub_1C090A470, (uint64_t)v18);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v15 & 1;
}

unint64_t sub_1BFCE5ADC()
{
  unint64_t result = qword_1EB86B878;
  if (!qword_1EB86B878)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&unk_1EB85C638, (uint64_t (*)(void))sub_1BFCE5B6C, (uint64_t)&type metadata for FormatMenu.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B878);
  }
  return result;
}

unint64_t sub_1BFCE5B6C()
{
  unint64_t result = qword_1EB873B48;
  if (!qword_1EB873B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873B48);
  }
  return result;
}

uint64_t sub_1BFCE5BC0()
{
  void (*v22)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  void *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  const char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t);
  uint64_t v79;
  void *v80;
  __n128 v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t);
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  void (*v143)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int16 v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v163 = v0;
  (*(void (**)(void, void, void))(*(void *)(v0 + 416) + 16))(*(void *)(v0 + 424), *(void *)(v0 + 432), *(void *)(v0 + 408));
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    unint64_t v13 = *(void *)(v0 + 440);
    uint64_t v14 = *(uint64_t **)(v0 + 424);
    uint64_t v15 = *v14;
    *(void *)(v0 + 576) = *v14;
    if (v13 >> 60 == 4)
    {
      uint64_t v16 = *(void *)(v0 + 432);
      uint64_t v17 = *(void *)(v0 + 408);
      uint64_t v18 = *(void *)(v0 + 416);
      type metadata accessor for FeedServiceError();
      swift_getWitnessTable();
      swift_allocError();
      *(void *)uint64_t v19 = 1;
      *(void *)(v19 + 8) = 0;
      *(void *)(v19 + 16) = 0;
      *(void *)(v19 + 24) = 0;
      *(unsigned char *)(v19 + 32) = 6;
      swift_willThrow();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
      return v20();
    }
    else
    {
      *(void *)(v0 + 96) = *(void *)(v15 + qword_1EB93C738);
      type metadata accessor for FeedGroupEmitter();
      sub_1C151ED5C();
      swift_getWitnessTable();
      if (sub_1C151F15C())
      {
        *(void *)(v0 + 72) = *(void *)(v0 + 440);
        uint64_t v32 = (uint64_t *)(v0 + 72);
        uint64_t v33 = (void *)swift_task_alloc();
        *(void *)(v0 + 584) = v33;
        char *v33 = v0;
        uint64_t v34 = sub_1C040E8D0;
LABEL_20:
        v33[1] = v34;
        uint64_t v48 = *(void *)(v0 + 432);
        uint64_t v49 = *(double *)(v0 + 136);
        return sub_1BFCCFA28(v32, v48, v49);
      }
      else
      {
        uint64_t v148 = *(void *)(v0 + 304);
        uint64_t v153 = *(void *)(v0 + 296);
        uint64_t v35 = *(void *)(v0 + 248);
        uint64_t v36 = *(void *)(v0 + 256);
        uint64_t v132 = *(void *)(v0 + 312);
        uint64_t v37 = *(void *)(v0 + 224);
        uint64_t v38 = *(void *)(v0 + 200);
        uint64_t v138 = *(void *)(v0 + 216);
        char v144 = *(void *)(v0 + 208);
        uint64_t v124 = *(void *)(v0 + 160);
        (*(void (**)(void))(*(void *)(*(void *)(v0 + 192) - 8) + 56))();
        uint64_t v154 = 7;
        uint64_t v39 = sub_1C151631C();
        uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
        v40(v36, 1, 1, v39);
        v40(v35, 1, 1, v39);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
        uint64_t v41 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v124, 1, 1, v41);
        uint64_t v42 = swift_bridgeObjectRetain();
        FeedJournal.init(entries:)(v42, &v155);
        v160 = v155;
        v161 = v156;
        v162 = v157;
        v158 = 0;
        v159 = 256;
        uint64_t v43 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v132, 0, &v154, v36, v35, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                0,
                0,
                v37,
                v124,
                &v160,
                (uint64_t)&v158,
                0,
                0,
                0);
        *(void *)(v0 + 608) = v43;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v124, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v37, v144);
        uint64_t v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v35, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v36, (unint64_t *)&qword_1EB871180, v44);
        (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v132, v153);
        uint64_t v45 = swift_allocObject();
        *(void *)(v0 + 616) = v45;
        *(void *)(v45 + 16) = v43;
        *(void *)(v0 + 64) = v45 | 0x5000000000000000;
        swift_retain();
        uint64_t v46 = (void *)swift_task_alloc();
        *(void *)(v0 + 624) = v46;
        *uint64_t v46 = v0;
        v46[1] = sub_1C040EB98;
        return sub_1C040D474(v0 + 64);
      }
    }
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 424);
    uint64_t v3 = *(void *)(v0 + 392);
    uint64_t v2 = *(void *)(v0 + 400);
    uint64_t v4 = *(void *)(v0 + 384);
    type metadata accessor for FeedCursor();
    uint64_t v5 = *(void *)(v1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v4);
    *(void *)(v0 + 464) = sub_1BFE16C18();
    char v6 = sub_1BFCE71B0();
    if ((v6 - 1) > 2u)
    {
      char v22 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)(v0 + 344) + 80);
      ((void (*)(uint64_t *__return_ptr, void))v22)(&v160, *(void *)(v0 + 384));
      uint64_t v23 = v160;
      uint64_t v24 = v5 + *(void *)(*(void *)v5 + 232);
      uint64_t v25 = type metadata accessor for FeedContext();
      uint64_t v26 = *(int *)(v25 + 24);
      switch(v23)
      {
        case 1:
          if (*(unsigned char *)(v24 + v26)) {
            goto LABEL_11;
          }
          goto LABEL_19;
        case 2:
          goto LABEL_19;
        case 3:
          goto LABEL_11;
        default:
          if (*(unsigned char *)(v24 + v26))
          {
LABEL_19:
            uint64_t v47 = *(void *)(v0 + 440);
            (*(void (**)(void, void))(*(void *)(v0 + 392) + 8))(*(void *)(v0 + 400), *(void *)(v0 + 384));
            swift_release();
            *(void *)(v0 + 80) = v47;
            uint64_t v32 = (uint64_t *)(v0 + 80);
            uint64_t v33 = (void *)swift_task_alloc();
            *(void *)(v0 + 552) = v33;
            char *v33 = v0;
            uint64_t v34 = sub_1BFC514EC;
            goto LABEL_20;
          }
LABEL_11:
          uint64_t v129 = v24;
          uint64_t v137 = v25;
          uint64_t v152 = v5;
          uint64_t v27 = *(void *)(v0 + 120);
          uint64_t v122 = *(int *)(v25 + 24);
          sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
          uint64_t v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = xmmword_1C152C7E0;
          uint64_t v29 = 0xE600000000000000;
          uint64_t v30 = 0x657669746341;
          uint64_t v31 = v28;
          uint64_t v143 = v22;
          switch(*(unsigned char *)(v27 + 32))
          {
            case 1:
              uint64_t v29 = 0xE400000000000000;
              uint64_t v30 = 1852138835;
              break;
            case 2:
              uint64_t v30 = 0x6E657A6F7246;
              break;
            case 3:
              uint64_t v29 = 0xEB00000000646565;
              uint64_t v30 = 0x4620666F20646E45;
              break;
            case 4:
              uint64_t v30 = 0x646568636143;
              break;
            case 5:
              uint64_t v29 = 0xE800000000000000;
              uint64_t v84 = 0x6C6F6F706552;
              goto LABEL_41;
            case 6:
              uint64_t v29 = 0xE800000000000000;
              uint64_t v84 = 0x646E61707845;
LABEL_41:
              uint64_t v30 = v84 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
              break;
            default:
              break;
          }
          uint64_t v85 = *(void *)(v0 + 384);
          uint64_t v86 = *(void *)(v0 + 368);
          uint64_t v135 = *(void *)(v0 + 360);
          uint64_t v87 = *(void *)(v0 + 344);
          uint64_t v88 = *(void *)(v0 + 352);
          *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
          uint64_t v89 = sub_1BFE9C558();
          *(void *)(v31 + 64) = v89;
          *(void *)(v31 + 32) = v30;
          *(void *)(v31 + 40) = v29;
          uint64_t v90 = sub_1C151811C();
          uint64_t v91 = MEMORY[0x1E4FBB1A0];
          *(void *)(v31 + 96) = MEMORY[0x1E4FBB1A0];
          *(void *)(v31 + 104) = v89;
          *(void *)(v31 + 72) = v90;
          *(void *)(v31 + 80) = v92;
          (*(void (**)(uint64_t, uint64_t))(v87 + 64))(v85, v87);
          *(void *)(v31 + 136) = v91;
          *(void *)(v31 + 144) = v89;
          swift_getAssociatedConformanceWitness();
          sub_1C151EACC();
          (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v86, v88);
          v143(&v160, v85, v87);
          uint64_t v93 = 0xE400000000000000;
          uint64_t v94 = 1684627792;
          switch((char)v160)
          {
            case 1:
              uint64_t v93 = 0xE600000000000000;
              uint64_t v94 = 0x646961706E55;
              break;
            case 2:
              uint64_t v94 = 1752461122;
              break;
            case 3:
              uint64_t v93 = 0xE700000000000000;
              uint64_t v94 = 0x7265687469654ELL;
              break;
            default:
              break;
          }
          uint64_t v136 = *(void *)(v0 + 440);
          uint64_t v95 = *(void *)(v0 + 392);
          uint64_t v115 = *(void *)(v0 + 400);
          long long v150 = *(void *)(v0 + 384);
          uint64_t v113 = *(void *)(v0 + 336);
          uint64_t v96 = *(void *)(v0 + 320);
          uint64_t v117 = v96;
          uint64_t v126 = *(void *)(v0 + 304);
          uint64_t v128 = *(void *)(v0 + 296);
          uint64_t v98 = *(void *)(v0 + 264);
          uint64_t v97 = *(void *)(v0 + 272);
          uint64_t v99 = *(void *)(v0 + 232);
          uint64_t v119 = *(void *)(v0 + 216);
          uint64_t v100 = *(void *)(v0 + 200);
          uint64_t v121 = *(void *)(v0 + 208);
          uint64_t v101 = *(void *)(v0 + 192);
          uint64_t v146 = *(void *)(v0 + 168);
          *(void *)(v31 + 176) = MEMORY[0x1E4FBB1A0];
          *(void *)(v31 + 184) = v89;
          *(void *)(v31 + 152) = v94;
          *(void *)(v31 + 160) = v93;
          uint64_t v102 = *(unsigned char *)(v129 + v122);
          uint64_t v131 = *(void *)(v0 + 152);
          long long v103 = MEMORY[0x1E4FBB3C8];
          *(void *)(v31 + 216) = MEMORY[0x1E4FBB390];
          *(void *)(v31 + 224) = v103;
          *(unsigned char *)(v31 + 192) = v102;
          sub_1C151F38C();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v96, 1, 1, v101);
          *(unsigned char *)(v0 + 649) = 7;
          uint64_t v104 = sub_1C151631C();
          uint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56);
          v105(v97, 1, 1, v104);
          v105(v98, 1, 1, v104);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v99, 1, 1, v100);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v146, 1, 1);
          char v106 = *(void *)(v152 + *(void *)(*(void *)v152 + 240));
          uint64_t v107 = (void *)swift_task_alloc();
          v107[2] = *(void *)(v131 + 80);
          v107[3] = v113;
          v107[4] = v115;
          v107[5] = v152;
          swift_bridgeObjectRetain();
          uint64_t v108 = sub_1C0284200((void (*)(void *__return_ptr, void *))sub_1C04270E4, (uint64_t)v107, v106);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v115, v150);
          FeedJournal.init(entries:)((uint64_t)v108, (void *)(v0 + 40));
          uint64_t v109 = *(void *)(v0 + 48);
          uint64_t v110 = *(void *)(v0 + 56);
          v160 = *(void *)(v0 + 40);
          v161 = v109;
          v162 = v110;
          char v155 = 0;
          LOWORD(v156) = 256;
          uint64_t v141 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v117, 0, (unsigned __int8 *)(v0 + 649), v97, v98, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                   0,
                   0,
                   v99,
                   v146,
                   &v160,
                   (uint64_t)&v155,
                   0,
                   0,
                   0);
          *(void *)(v0 + 512) = v141;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1C04276B8(v146, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v99, v121);
          uint64_t v111 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          sub_1C04276B8(v98, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1C04276B8(v97, (unint64_t *)&qword_1EB871180, v111);
          (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v117, v128);
          *(void *)(v0 + 104) = v136;
          uint64_t v79 = sub_1C151ECBC();
          *(void *)(v0 + 520) = v79;
          uint64_t v112 = (void *)swift_task_alloc();
          *(void *)(v0 + 528) = v112;
          char *v112 = v0;
          v112[1] = sub_1C040E5EC;
          v81.n128_u64[0] = *(void *)(v0 + 136);
          uint64_t v82 = v0 + 104;
          uint64_t v83 = v141;
          break;
      }
    }
    else
    {
      uint64_t v147 = v6;
      uint64_t v7 = *(void *)(v0 + 120);
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1C152C7E0;
      uint64_t v142 = v7;
      uint64_t v9 = *(unsigned __int8 *)(v7 + 32);
      uint64_t v10 = 0x657669746361;
      unint64_t v11 = 0xE600000000000000;
      uint64_t v12 = (void *)v8;
      uint64_t v151 = v5;
      switch(v9)
      {
        case 1:
          uint64_t v10 = 1852138867;
          unint64_t v11 = 0xE400000000000000;
          break;
        case 2:
          uint64_t v10 = 0x6E657A6F7266;
          break;
        case 3:
          unint64_t v11 = 0xE900000000000064;
          uint64_t v10 = 0x656546664F646E65;
          break;
        case 4:
          uint64_t v10 = 0x646568636163;
          break;
        case 5:
          uint64_t v50 = 0x6C6F6F706552;
          goto LABEL_28;
        case 6:
          uint64_t v50 = 0x646E61707845;
LABEL_28:
          uint64_t v10 = v50 & 0xFFFFFFFFFFDFLL | 0x6465000000000020;
          unint64_t v11 = 0xE800000000000000;
          break;
        default:
          break;
      }
      uint64_t v51 = *(void *)(v0 + 384);
      uint64_t v52 = *(void *)(v0 + 352);
      uint64_t v133 = *(void *)(v0 + 376);
      uint64_t v139 = *(void *)(v0 + 360);
      uint64_t v53 = *(void *)(v0 + 344);
      uint64_t v54 = MEMORY[0x1E4FBB1A0];
      *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
      uint64_t v55 = sub_1BFE9C558();
      v12[8] = v55;
      v12[4] = v10;
      v12[5] = v11;
      uint64_t v57 = *(void *)(v142 + 16);
      uint64_t v56 = *(void *)(v142 + 24);
      v12[12] = v54;
      v12[13] = v55;
      v12[9] = v57;
      v12[10] = v56;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C151811C();
      v12[17] = v54;
      v12[18] = v55;
      v12[14] = v58;
      v12[15] = v59;
      (*(void (**)(uint64_t, uint64_t))(v53 + 64))(v51, v53);
      v12[22] = v54;
      v12[23] = v55;
      uint64_t v60 = v55;
      swift_getAssociatedConformanceWitness();
      sub_1C151EACC();
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v133, v52);
      if (v147 == 1)
      {
        uint64_t v63 = 0x80000001C1607210;
        uint64_t v61 = 0xD000000000000010;
      }
      else
      {
        if (v147 == 2)
        {
          uint64_t v61 = 0xD00000000000001CLL;
          uint64_t v62 = "dedupNextAsyncManifestGroups";
        }
        else
        {
          uint64_t v61 = 0xD00000000000001BLL;
          uint64_t v62 = "dedupNextSyncDatabaseGroups";
        }
        uint64_t v63 = (unint64_t)(v62 - 32) | 0x8000000000000000;
      }
      uint64_t v140 = *(void *)(v0 + 440);
      uint64_t v64 = *(void *)(v0 + 400);
      uint64_t v120 = *(void *)(v0 + 392);
      char v149 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 328);
      uint64_t v118 = *(void *)(v0 + 336);
      id v130 = *(void *)(v0 + 304);
      uint64_t v66 = *(void *)(v0 + 288);
      id v134 = *(void *)(v0 + 296);
      uint64_t v67 = *(void *)(v0 + 280);
      CGRect v145 = *(void *)(v0 + 240);
      uint64_t v125 = *(void *)(v0 + 216);
      uint64_t v68 = *(void *)(v0 + 200);
      unint64_t v127 = *(void *)(v0 + 208);
      uint64_t v69 = *(void *)(v0 + 192);
      char v114 = *(void *)(v0 + 176);
      uint64_t v116 = *(void *)(v0 + 152);
      v12[27] = MEMORY[0x1E4FBB1A0];
      v12[28] = v60;
      unsigned char v12[24] = v61;
      v12[25] = v63;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v65, 1, 1, v69);
      *(unsigned char *)(v0 + 648) = 7;
      uint64_t v70 = sub_1C151631C();
      uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
      v71(v66, 1, 1, v70);
      v71(v67, 1, 1, v70);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v145, 1, 1, v68);
      uint64_t v72 = type metadata accessor for FeedContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v114, 1, 1, v72);
      uint64_t v73 = *(void *)(v151 + *(void *)(*(void *)v151 + 240));
      uint64_t v74 = (void *)swift_task_alloc();
      v74[2] = *(void *)(v116 + 80);
      v74[3] = v118;
      v74[4] = v64;
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_1C0284200((void (*)(void *__return_ptr, void *))sub_1C0427104, (uint64_t)v74, v73);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v64, v149);
      FeedJournal.init(entries:)((uint64_t)v75, (void *)(v0 + 16));
      uint64_t v76 = *(void *)(v0 + 24);
      uint64_t v77 = *(void *)(v0 + 32);
      v160 = *(void *)(v0 + 16);
      v161 = v76;
      v162 = v77;
      char v155 = 0;
      LOWORD(v156) = 256;
      uint64_t v123 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v65, 0, (unsigned __int8 *)(v0 + 648), v66, v67, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
               0,
               0,
               v145,
               v114,
               &v160,
               (uint64_t)&v155,
               0,
               0,
               0);
      *(void *)(v0 + 472) = v123;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C04276B8(v114, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v145, v127);
      uint64_t v78 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C04276B8(v67, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C04276B8(v66, (unint64_t *)&qword_1EB871180, v78);
      (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v65, v134);
      *(void *)(v0 + 88) = v140;
      uint64_t v79 = sub_1C151ECBC();
      *(void *)(v0 + 480) = v79;
      uint64_t v80 = (void *)swift_task_alloc();
      *(void *)(v0 + 488) = v80;
      char *v80 = v0;
      v80[1] = sub_1C040E30C;
      v81.n128_u64[0] = *(void *)(v0 + 136);
      uint64_t v82 = v0 + 88;
      uint64_t v83 = v123;
    }
    return sub_1BFE60BA0(v82, v83, v79, v81);
  }
}

uint64_t sub_1BFCE71B0()
{
  uint64_t v1 = v0[2];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1C151811C();
  LOBYTE(v1) = sub_1BFF896B4(v2, v3, v1);
  swift_bridgeObjectRelease();
  if (v1) {
    return 1;
  }
  uint64_t v5 = v0[3];
  uint64_t v6 = sub_1C151811C();
  LOBYTE(v5) = sub_1BFF896B4(v6, v7, v5);
  swift_bridgeObjectRelease();
  if (v5) {
    return 2;
  }
  uint64_t v8 = v0[4];
  uint64_t v9 = sub_1C151811C();
  LOBYTE(v8) = sub_1BFF896B4(v9, v10, v8);
  swift_bridgeObjectRelease();
  if (v8) {
    return 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1BFCE7348@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFontMetricSizing.init(from:)(a1, a2);
}

uint64_t FormatFontMetricSizing.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C08854B8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C088554C();
  sub_1C085F050(&qword_1EB891FD0, (void (*)(uint64_t))sub_1C088554C);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_143;
      *(&v24 - 3) = sub_1C08855D0();
      *(&v24 - 2) = sub_1BFCE776C();
      *(&v24 - 1) = sub_1C0885624();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B84EF8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BFE94094();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C15206EC();
  uint64_t v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1BFD83788();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v23 = v27;
  *(void *)uint64_t v12 = v16;
  *(unsigned char *)(v12 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCE776C()
{
  unint64_t result = qword_1EB88A758;
  if (!qword_1EB88A758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A758);
  }
  return result;
}

uint64_t sub_1BFCE77C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCellSelection.init(from:)(a1, a2);
}

uint64_t FormatCellSelection.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v31;
  uint64_t v13 = v8;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v17;
      *(void *)(v23 + 16) = &unk_1F1B84328;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v17);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCE7BA4();
  long long v27 = 0uLL;
  sub_1C15206EC();
  char v19 = v26;
  if ((_BYTE)v26)
  {
    if (v26 == 1)
    {
      long long v27 = xmmword_1C152C800;
      sub_1C087A634();
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      uint64_t v20 = 0;
      *(void *)&long long v21 = v26;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      uint64_t v20 = 0;
      long long v21 = 0uLL;
    }
    long long v24 = 0uLL;
    long long v25 = 0uLL;
  }
  else
  {
    long long v26 = xmmword_1C152C800;
    sub_1BFCE7BF8();
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
    long long v21 = v27;
    long long v24 = v28;
    long long v25 = v29;
    uint64_t v20 = v30;
  }
  *(_OWORD *)a2 = v21;
  *(_OWORD *)(a2 + 16) = v24;
  *(_OWORD *)(a2 + 32) = v25;
  *(void *)(a2 + 48) = v20;
  *(unsigned char *)(a2 + 56) = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCE7BA4()
{
  unint64_t result = qword_1EB888B40;
  if (!qword_1EB888B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888B40);
  }
  return result;
}

unint64_t sub_1BFCE7BF8()
{
  unint64_t result = qword_1EB876588;
  if (!qword_1EB876588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876588);
  }
  return result;
}

uint64_t sub_1BFCE7C4C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCE7C9C()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCE7CFC()
{
  unint64_t result = qword_1EB8882C0;
  if (!qword_1EB8882C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8882C0);
  }
  return result;
}

uint64_t sub_1BFCE7D50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFE8F894(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

char *sub_1BFCE7D7C@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_1BFCE7DA8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

char *sub_1BFCE7DA8(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB85F2F0, (void (*)(void))sub_1C0071948, (void (*)(void))sub_1C007199C);
  uint64_t v3 = v2;
  uint64_t v49 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v40 - v4;
  sub_1C0900A54();
  uint64_t v7 = v6;
  uint64_t v50 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0872B84();
  sub_1C085F050(&qword_1EB86CDC8, (void (*)(uint64_t))sub_1C0872B84);
  uint64_t v10 = v51;
  sub_1C1520EBC();
  char v11 = v10;
  if (v10)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  uint64_t v51 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v5 = v7;
  uint64_t v14 = v3;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      unint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *((void *)v17 - 2);
      uint64_t v23 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      *((void *)&v40 - 4) = &_s10CodingKeysON_199;
      *((void *)&v40 - 3) = sub_1C0872C08();
      *((void *)&v40 - 2) = sub_1BFCE8614();
      *((void *)&v40 - 1) = sub_1C0872C5C();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B6B5F0);
      swift_release_n();
      sub_1C02570B4();
      char v11 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v22;
      *(void *)(v26 + 8) = v23;
      *(void *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v23, 1);
      (*(void (**)(char *, char *))(v50 + 8))(v9, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C0900A54);
  uint64_t v20 = v19;
  uint64_t v48 = v18;
  long long v54 = xmmword_1C153AB20;
  unsigned __int8 v55 = 0;
  uint64_t v21 = sub_1C152069C();
  uint64_t v28 = v27;
  uint64_t v47 = v21;
  long long v52 = xmmword_1C1557FA0;
  char v53 = 0;
  sub_1BFD476F4();
  sub_1C152065C();
  uint64_t v45 = *((void *)&v54 + 1);
  uint64_t v46 = v54;
  int v44 = v55;
  sub_1BFE9DEBC(0, &qword_1EB860C38, (uint64_t)&type metadata for FormatAnimationNodeAnimation, MEMORY[0x1E4FBB320]);
  long long v54 = xmmword_1C1557FB0;
  unsigned __int8 v55 = 0;
  sub_1BFCE852C();
  sub_1C152065C();
  uint64_t v42 = a1;
  uint64_t v43 = v28;
  uint64_t v30 = v52;
  long long v54 = xmmword_1C1557FD0;
  unsigned __int8 v55 = 0;
  sub_1BFCE85C0();
  sub_1C152065C();
  uint64_t v31 = v5;
  uint64_t v41 = v30;
  uint64_t v32 = BYTE4(v52);
  uint64_t v33 = v52;
  long long v40 = xmmword_1C1557FC0;
  long long v54 = xmmword_1C1557FC0;
  unsigned __int8 v55 = 0;
  char v34 = sub_1C152071C();
  if (v34)
  {
    long long v52 = v40;
    char v53 = 0;
    sub_1C0900AE8();
    uint64_t v35 = v51;
    sub_1C15206EC();
    *(void *)&long long v40 = v31;
    uint64_t v36 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v14);
  }
  else
  {
    *(void *)&long long v40 = v31;
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  uint64_t v37 = v33 | (v32 << 32);
  type metadata accessor for FormatAnimationNodeStyle();
  uint64_t v5 = (char *)swift_allocObject();
  *((void *)v5 + 9) = 0;
  swift_beginAccess();
  *((void *)v5 + 2) = v48;
  *((void *)v5 + 3) = v20;
  uint64_t v38 = v43;
  *((void *)v5 + 4) = v47;
  *((void *)v5 + 5) = v38;
  uint64_t v39 = v45;
  *((void *)v5 + 6) = v46;
  *((void *)v5 + 7) = v39;
  v5[64] = v44;
  swift_beginAccess();
  *((void *)v5 + 9) = v41;
  swift_bridgeObjectRelease();
  v5[84] = BYTE4(v37);
  *((_DWORD *)v5 + 20) = v37;
  swift_beginAccess();
  *((void *)v5 + 11) = v36;
  (*(void (**)(char *, void))(v50 + 8))(v9, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v5;
}

unint64_t sub_1BFCE852C()
{
  unint64_t result = qword_1EB860C48;
  if (!qword_1EB860C48)
  {
    sub_1BFE9DEBC(255, &qword_1EB860C38, (uint64_t)&type metadata for FormatAnimationNodeAnimation, MEMORY[0x1E4FBB320]);
    sub_1C008DFCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860C48);
  }
  return result;
}

unint64_t sub_1BFCE85C0()
{
  unint64_t result = qword_1EB85FD58;
  if (!qword_1EB85FD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FD58);
  }
  return result;
}

unint64_t sub_1BFCE8614()
{
  unint64_t result = qword_1EB8675D0;
  if (!qword_1EB8675D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8675D0);
  }
  return result;
}

uint64_t sub_1BFCE8668()
{
  return sub_1BFCE8694((uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_1BFCE86D4);
}

uint64_t sub_1BFCE8694(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1BFCE86D4()
{
  uint64_t v0 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v1 = sub_1C151FD8C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v6 - v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BFCE8860();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 56))(v4, 1, 1, v0);
    sub_1BFCE898C((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFCE8860()
{
  sub_1C1519BBC();
  sub_1C1519C3C();
  swift_release();
  sub_1C1519BBC();
  sub_1C1519C3C();
  swift_release();
  sub_1C1519BBC();
  sub_1C1519C3C();
  swift_release();
  sub_1C1519BBC();
  sub_1C1519C3C();
  swift_release();
  sub_1C1519BBC();
  sub_1C1519C3C();
  swift_release();
  sub_1C1519BBC();
  sub_1C1519C3C();
  return swift_release();
}

uint64_t sub_1BFCE898C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v2 = sub_1C151FD8C();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - v4, a1, v3);
  swift_retain();
  sub_1C1518ECC();
  return swift_release();
}

uint64_t sub_1BFCE8B08()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCE8B48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFCE8B74(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFCE8B74(void *a1)
{
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v59 = v2;
  MEMORY[0x1F4188790](v2);
  *(void *)&long long v60 = (char *)&v46 - v3;
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v5 = v4;
  uint64_t v57 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v46 - v6;
  sub_1C08F9A2C();
  uint64_t v9 = v8;
  uint64_t v61 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C088D5D4();
  sub_1C085F050(&qword_1EB892530, (void (*)(uint64_t))sub_1C088D5D4);
  uint64_t v13 = (uint64_t)v62;
  sub_1C1520EBC();
  uint64_t v14 = (void *)v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v56 = v7;
  uint64_t v15 = a1[3];
  uint64_t v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v16 = sub_1C1520EAC();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v61;
  uint64_t v18 = v11;
  if (v15)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v27 = *((void *)v21 - 2);
      uint64_t v26 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1C088D658();
      sub_1BFF35EE8();
      sub_1C088D6AC();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v29 = sub_1C085FB14((uint64_t)&unk_1F1B69700);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v30 = v27;
      *(void *)(v30 + 8) = v26;
      *(void *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v27, v26, 1);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v9);
      a1 = v62;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C08F9A2C);
  uint64_t v24 = v23;
  long long v67 = xmmword_1C153AB20;
  char v68 = 0;
  uint64_t v25 = sub_1C152060C();
  uint64_t v33 = v32;
  uint64_t v54 = v25;
  uint64_t v55 = v22;
  long long v67 = xmmword_1C1557FA0;
  char v68 = 0;
  uint64_t v34 = sub_1C152060C();
  uint64_t v36 = v35;
  uint64_t v52 = v34;
  long long v53 = xmmword_1C1557FB0;
  long long v67 = xmmword_1C1557FB0;
  char v68 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v65 = v53;
    char v66 = 0;
    sub_1BFE1CFFC();
    sub_1C15206EC();
    unint64_t v38 = v63;
  }
  else
  {
    unint64_t v38 = 0xB000000000000008;
  }
  *(void *)&long long v53 = v38;
  long long v67 = xmmword_1C1557FD0;
  char v68 = 0;
  sub_1BFF32310();
  sub_1C152065C();
  uint64_t v51 = *((void *)&v65 + 1);
  uint64_t v47 = v65;
  long long v50 = xmmword_1C1557FC0;
  long long v67 = xmmword_1C1557FC0;
  char v68 = 0;
  if (sub_1C152071C())
  {
    long long v65 = v50;
    char v66 = 0;
    sub_1C08B07C8();
    sub_1C15206EC();
    *(void *)&long long v50 = v36;
    uint64_t v49 = v33;
    uint64_t v39 = v56;
    uint64_t v48 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v5);
  }
  else
  {
    *(void *)&long long v50 = v36;
    uint64_t v49 = v33;
    uint64_t v48 = MEMORY[0x1E4FBC860];
  }
  long long v67 = xmmword_1C1557FE0;
  char v68 = 0;
  sub_1BFCAB4C0();
  uint64_t v40 = v59;
  uint64_t v41 = v60;
  sub_1C15206EC();
  uint64_t v57 = v24;
  uint64_t v42 = sub_1C1517E5C();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v41, v40);
  long long v60 = xmmword_1C1557FF0;
  long long v67 = xmmword_1C1557FF0;
  char v68 = 0;
  if (sub_1C152071C())
  {
    long long v65 = v60;
    char v66 = 0;
    sub_1C15206EC();
    char v43 = v63;
  }
  else
  {
    char v43 = 0;
  }
  long long v60 = xmmword_1C1558010;
  long long v67 = xmmword_1C1558010;
  char v68 = 0;
  if (sub_1C152071C())
  {
    long long v65 = v60;
    char v66 = 0;
    sub_1BFFC82FC();
    sub_1C15206EC();
    long long v44 = v63;
    char v45 = v64;
  }
  else
  {
    char v45 = 0;
    long long v44 = 0uLL;
  }
  *(void *)&long long v63 = v53;
  *(void *)&long long v65 = v47;
  *((void *)&v65 + 1) = v51;
  long long v67 = v44;
  char v68 = v45;
  type metadata accessor for FormatHBoxNode();
  swift_allocObject();
  uint64_t KeyPath = FormatHBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)(v55, v57, v54, v49, v52, v50, (uint64_t *)&v63, (uint64_t *)&v65, v48, v42, v43, (uint64_t *)&v67);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return KeyPath;
}

uint64_t sub_1BFCE95BC(char a1)
{
  uint64_t result = 0x646E616D6D6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7365736163;
      break;
    case 2:
      uint64_t result = 0x746C7561666564;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFCE9630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BFCE965C();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1BFCE965C()
{
  sub_1BFCE9B58();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v20 - v4;
  sub_1BFCE9AE4();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v20 - v10;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, MEMORY[0x1E4FAA6B0]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v14(v11, 1, 1, v12);
  v14(v8, 1, 1, v13);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v21 = sub_1C151996C();
  v14(v11, 1, 1, v13);
  v14(v8, 1, 1, v13);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  sub_1C151996C();
  uint64_t v15 = MEMORY[0x1E4F277C0];
  sub_1BFCE9A7C(0, &qword_1EB85AC70, (uint64_t (*)(void))sub_1BFCE9BE8, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAA6B0]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v18(v5, 1, 1, v16);
  v18(v2, 1, 1, v17);
  sub_1BFCE9A7C(0, &qword_1EB85ACD0, (uint64_t (*)(void))sub_1BFCE9BE8, v15, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCE9A7C(0, &qword_1EB85AC30, (uint64_t (*)(void))sub_1BFCE9BE8, v15, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  sub_1C151996C();
  return v21;
}

void sub_1BFCE9A7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFCE9AE4()
{
  if (!qword_1EB85ACA8)
  {
    sub_1BFD76E3C(255, &qword_1EB85ACA0, MEMORY[0x1E4FAA6B0]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85ACA8);
    }
  }
}

void sub_1BFCE9B58()
{
  if (!qword_1EB85AC78)
  {
    sub_1BFCE9A7C(255, &qword_1EB85AC70, (uint64_t (*)(void))sub_1BFCE9BE8, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAA6B0]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85AC78);
    }
  }
}

unint64_t sub_1BFCE9BE8()
{
  unint64_t result = qword_1EB85AA38;
  if (!qword_1EB85AA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AA38);
  }
  return result;
}

uint64_t sub_1BFCE9C3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentBlend.ColorData.init(from:)(a1, a2);
}

uint64_t FormatImageAdjustmentBlend.ColorData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C088E87C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C088E910();
  sub_1C085F050(&qword_1EB8921F0, (void (*)(uint64_t))sub_1C088E910);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_125;
      *(&v24 - 3) = sub_1C088E994();
      *(&v24 - 2) = sub_1BFCEA020();
      *(&v24 - 1) = sub_1C088E9E8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B85970);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE113DC();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C15206EC();
  uint64_t v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1BFCEA074();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v23 = v27;
  *(void *)uint64_t v12 = v16;
  *(unsigned char *)(v12 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCEA020()
{
  unint64_t result = qword_1EB88C270;
  if (!qword_1EB88C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C270);
  }
  return result;
}

unint64_t sub_1BFCEA074()
{
  unint64_t result = qword_1EB87DD88[0];
  if (!qword_1EB87DD88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB87DD88);
  }
  return result;
}

uint64_t sub_1BFCEA0C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatColorAndExpression.init(from:)(a1, a2);
}

uint64_t FormatColorAndExpression.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  long long v25 = a2;
  sub_1C087B50C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C087B5A0();
  sub_1C085F050(&qword_1EB86CDE8, (void (*)(uint64_t))sub_1C087B5A0);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v25;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      long long v25 = (void *)*((void *)v16 - 2);
      uint64_t v18 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v19 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v19);
      *(&v25 - 4) = &_s10CodingKeysON_171;
      *(&v25 - 3) = (void *)sub_1C087B624();
      *(&v25 - 2) = (void *)sub_1BFCEA4D0();
      *(&v25 - 1) = (void *)sub_1C087B678();
      swift_getKeyPath();
      swift_retain();
      uint64_t v20 = sub_1C085FB14((uint64_t)&unk_1F1B84418);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v21 = (uint64_t)v25;
      *(void *)uint64_t v22 = v25;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = v20;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v21, v18, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFD460A0();
  long long v26 = 0uLL;
  char v27 = 0;
  sub_1C15206EC();
  uint64_t v17 = v28;
  long long v26 = xmmword_1C153AB20;
  char v27 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  uint64_t v24 = v28;
  *uint64_t v12 = v17;
  v12[1] = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCEA4D0()
{
  unint64_t result = qword_1EB867600;
  if (!qword_1EB867600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867600);
  }
  return result;
}

uint64_t sub_1BFCEA524@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentBlend.init(from:)(a1, a2);
}

uint64_t FormatImageAdjustmentBlend.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = v6;
  uint64_t v12 = v8;
  uint64_t v13 = v35;
  if (v10)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v17;
      *(void *)(v22 + 16) = &unk_1F1B85920;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v17);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v11);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFCEA97C();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  sub_1C15206EC();
  uint64_t v18 = (void (**)(char *, uint64_t))(v13 + 8);
  if (v34)
  {
    v26[0] = xmmword_1C152C800;
    sub_1BFCEA928();
    sub_1C15206EC();
    uint64_t v19 = v25;
    (*v18)(v12, v11);
    *(void *)&v29[0] = v28;
    BYTE8(v29[0]) = BYTE8(v28);
    sub_1C088E7EC((uint64_t)v29);
    uint64_t v20 = v29;
  }
  else
  {
    long long v28 = xmmword_1C152C800;
    sub_1C088E80C();
    sub_1C15206EC();
    uint64_t v19 = v25;
    (*v18)(v12, v11);
    v26[6] = v29[6];
    v26[7] = v29[7];
    char v27 = v30;
    void v26[2] = v29[2];
    v26[3] = v29[3];
    v26[4] = v29[4];
    v26[5] = v29[5];
    v26[0] = v29[0];
    v26[1] = v29[1];
    sub_1C088E860((uint64_t)v26);
    uint64_t v20 = v26;
  }
  sub_1BFCF2D74((uint64_t)v20, (uint64_t)v31);
  sub_1BFCF2D74((uint64_t)v31, v19);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFCEA928()
{
  unint64_t result = qword_1EB87FFE0;
  if (!qword_1EB87FFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87FFE0);
  }
  return result;
}

unint64_t sub_1BFCEA97C()
{
  unint64_t result = qword_1EB88C268;
  if (!qword_1EB88C268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C268);
  }
  return result;
}

uint64_t initializeWithCopy for Feed(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

uint64_t sub_1BFCEAA20()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFCEAA70()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFCEAAD0()
{
  unint64_t result = qword_1EB88FE78;
  if (!qword_1EB88FE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FE78);
  }
  return result;
}

BOOL sub_1BFCEAB24()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong) {
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_1BFCEAB6C(void *a1)
{
  return FormatStateMachineInput.encode(to:)(a1);
}

uint64_t FormatStateMachineInput.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v30 = (char *)&v29 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)v1;
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v32 = *(void *)(v1 + 16);
  char v14 = *(unsigned char *)(v1 + 32);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  unint64_t v17 = sub_1BFEB6A24();
  uint64_t v31 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatStateMachineInput, v18, v15, (uint64_t)&type metadata for FormatStateMachineInput, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v16, (uint64_t)v10, v17, (uint64_t)&off_1F1C39AE8);
  if (v14)
  {
    if (qword_1EB887640 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C151928C();
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAC8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v5, v20, v19);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = (uint64_t)v31;
    sub_1C067FD54(1, v12, v11, v32 & 1, (uint64_t)v5);
    sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    return sub_1BFEFEB68(v21, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
  else
  {
    uint64_t v23 = qword_1EB887640;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1C151928C();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CAC8);
    uint64_t v26 = (uint64_t)v30;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v30, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = (uint64_t)v31;
    uint64_t v28 = v32;
    sub_1BFCEAF0C(0, v12, v11, v32, v13, v26);
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    sub_1BFEFEB68(v27, (uint64_t (*)(void))sub_1BFEFF7D8);
    return sub_1BFEC41E8(v12, v11, v28, v13, 0);
  }
}

uint64_t sub_1BFCEAF0C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v9 = a1 & 1;
  char v23 = a1 & 1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08EE744;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCEB0D8();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFD18A88(0, &qword_1EB875FC8, (void (*)(void))sub_1C006B830);
    sub_1BFCEB12C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFCEB0D8()
{
  unint64_t result = qword_1EB867530;
  if (!qword_1EB867530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867530);
  }
  return result;
}

unint64_t sub_1BFCEB12C()
{
  unint64_t result = qword_1EB85B9E8;
  if (!qword_1EB85B9E8)
  {
    sub_1BFD18A88(255, &qword_1EB875FC8, (void (*)(void))sub_1C006B830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B9E8);
  }
  return result;
}

uint64_t sub_1BFCEB1B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFE6F78C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_1BFCEB1D0(void *a1)
{
  return FormatMetadata.encode(to:)(a1);
}

uint64_t FormatMetadata.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1C151928C();
  uint64_t v42 = *(char **)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v36 - v6;
  sub_1BFE1E4B8(0, &qword_1EB85E110, (uint64_t (*)(void))sub_1BFE1E690, (uint64_t)&type metadata for FormatMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v36 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE1E690();
  uint64_t v13 = v45;
  sub_1C1520F0C();
  LOBYTE(v47) = 0;
  uint64_t v14 = v44;
  sub_1C152074C();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v40 = v12;
  uint64_t v41 = v9;
  uint64_t v44 = 0;
  uint64_t v38 = v10;
  uint64_t v39 = type metadata accessor for FormatMetadata();
  uint64_t v16 = v13 + *(int *)(v39 + 20);
  long long v18 = v42;
  uint64_t v17 = v43;
  char v37 = (void (*)(char *, uint64_t, uint64_t))*((void *)v42 + 2);
  v37(v7, v16, v43);
  sub_1C151924C();
  v36[1] = sub_1BFEBE3F0(&qword_1EB85C8B8, MEMORY[0x1E4FAB0A8]);
  char v19 = sub_1C151E5CC();
  uint64_t v20 = (void (*)(char *, uint64_t))*((void *)v18 + 1);
  uint64_t v42 = v4;
  v20(v4, v17);
  uint64_t v21 = v7;
  v20(v7, v17);
  if (v19)
  {
    uint64_t v22 = v43;
  }
  else
  {
    LOBYTE(v47) = 2;
    sub_1BFEBE3F0(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
    uint64_t v24 = v40;
    uint64_t v23 = v41;
    uint64_t v22 = v43;
    uint64_t v25 = v44;
    sub_1C152080C();
    uint64_t v44 = v25;
    if (v25) {
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v24, v23);
    }
  }
  uint64_t v26 = v42;
  v37(v21, v45 + *(int *)(v39 + 24), v22);
  sub_1C151923C();
  char v27 = sub_1C151E5CC();
  uint64_t v28 = v26;
  LOBYTE(v26) = v27;
  v20(v28, v22);
  v20(v21, v22);
  if (v26)
  {
    uint64_t v29 = v38;
    char v30 = v40;
    uint64_t v31 = v41;
    uint64_t v32 = v44;
  }
  else
  {
    LOBYTE(v47) = 3;
    sub_1BFEBE3F0(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
    char v30 = v40;
    uint64_t v31 = v41;
    uint64_t v33 = v44;
    sub_1C152080C();
    uint64_t v32 = v33;
    if (v33) {
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v30, v31);
    }
    uint64_t v29 = v38;
  }
  uint64_t v34 = v45;
  uint64_t v35 = (int *)v39;
  LOBYTE(v47) = 1;
  sub_1BFEBE3F0(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
  sub_1C152078C();
  if (!v32)
  {
    if (*(void *)(*(void *)(v34 + v35[8]) + 16))
    {
      uint64_t v47 = *(void *)(v34 + v35[8]);
      char v46 = 4;
      sub_1BFE1E520();
      sub_1BFE1E748(&qword_1EB85C500);
      sub_1C152080C();
      uint64_t v34 = v45;
    }
    if (*(void *)(*(void *)(v34 + v35[9]) + 16))
    {
      uint64_t v47 = *(void *)(v34 + v35[9]);
      char v46 = 5;
      sub_1BFE1E520();
      sub_1BFE1E748(&qword_1EB85C500);
      sub_1C152080C();
      uint64_t v34 = v45;
    }
    if (*(void *)(*(void *)(v34 + v35[10]) + 16))
    {
      uint64_t v47 = *(void *)(v34 + v35[10]);
      char v46 = 6;
      sub_1BFE1E4B8(0, (unint64_t *)&qword_1EB890100, (uint64_t (*)(void))sub_1C0085498, (uint64_t)&type metadata for FeedPlatform, MEMORY[0x1E4FBB510]);
      sub_1BFE1E5EC(&qword_1EB86B3B8, (void (*)(void))sub_1C00854EC);
      sub_1C152080C();
      uint64_t v34 = v45;
    }
    if (*(void *)(*(void *)(v34 + v35[11]) + 16))
    {
      uint64_t v47 = *(void *)(v34 + v35[11]);
      char v46 = 7;
      sub_1BFE1E4B8(0, (unint64_t *)&qword_1EB890100, (uint64_t (*)(void))sub_1C0085498, (uint64_t)&type metadata for FeedPlatform, MEMORY[0x1E4FBB510]);
      sub_1BFE1E5EC(&qword_1EB86B3B8, (void (*)(void))sub_1C00854EC);
      sub_1C152080C();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
}

uint64_t destroy for FormatLayeredMediaNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) != 0) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 <= 0xFD) {
    sub_1BFF04738(*(void *)(a1 + 40), *(void *)(a1 + 48), v2);
  }
  if (*(unsigned __int8 *)(a1 + 144) != 254) {
    swift_release();
  }
  int v3 = *(unsigned __int8 *)(a1 + 168);
  if (v3 != 255) {
    sub_1BFE94AD4(*(void *)(a1 + 152), *(void *)(a1 + 160), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 192);
  if (v4 != 255) {
    sub_1BFE94AD4(*(void *)(a1 + 176), *(void *)(a1 + 184), v4 & 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFCEBA2C(void *a1)
{
  return FormatTextNodeStyle.Selector.encode(to:)(a1);
}

uint64_t sub_1BFCEBA44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVideoPlayerNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatVideoPlayerNodeStyle.Selector.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = v2;
  sub_1C08C9FD8();
  uint64_t v7 = v6;
  uint64_t v56 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08CA06C();
  sub_1C085F050(&qword_1EB892260, (void (*)(uint64_t))sub_1C08CA06C);
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_11:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v56;
  uint64_t v14 = v9;
  uint64_t v10 = a1;
  if (v12)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_8;
        }
      }
      uint64_t v55 = a1;
      uint64_t v19 = *((void *)v17 - 2);
      uint64_t v20 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = swift_bridgeObjectRelease();
      uint64_t v22 = v13;
      MEMORY[0x1F4188790](v21);
      sub_1C08CA0F0();
      sub_1BFCEC41C();
      sub_1C08CA144();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B6BD20);
      swift_release_n();
      sub_1C02570B4();
      int v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v19;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v25 = v20;
      uint64_t v10 = v55;
      sub_1BFE94AD4(v19, v25, 1);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9420C();
  long long v57 = 0uLL;
  LOBYTE(v58) = 0;
  sub_1C15206EC();
  long long v18 = v67;
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v57 = xmmword_1C153AB20;
  LOBYTE(v58) = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v55 = (void *)v18;
  uint64_t v26 = v67;
  long long v57 = xmmword_1C1557FA0;
  LOBYTE(v58) = 0;
  sub_1BFE922A0();
  sub_1C152065C();
  uint64_t v54 = v26;
  uint64_t v27 = v67;
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v57 = xmmword_1C1557FB0;
  LOBYTE(v58) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v28 = v27;
  uint64_t v29 = v67;
  long long v67 = xmmword_1C1557FD0;
  char v68 = 0;
  sub_1BFE9224C();
  sub_1C152065C();
  uint64_t v53 = v29;
  uint64_t v51 = *((void *)&v57 + 1);
  uint64_t v30 = v57;
  int v52 = v58;
  long long v67 = xmmword_1C1557FC0;
  char v68 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  uint64_t v50 = v30;
  long long v43 = v57;
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  uint64_t v46 = v60;
  uint64_t v47 = v61;
  uint64_t v48 = v62;
  uint64_t v49 = v63;
  uint64_t v42 = v64;
  uint64_t v41 = v65;
  LODWORD(v30) = v66;
  long long v57 = xmmword_1C1557FE0;
  LOBYTE(v58) = 0;
  sub_1BFE113DC();
  sub_1C152065C();
  int v40 = v30;
  uint64_t v39 = v67;
  long long v57 = xmmword_1C1557FF0;
  LOBYTE(v58) = 0;
  uint64_t v32 = sub_1C152061C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
  *(void *)a2 = v55;
  *(void *)(a2 + 8) = *((void *)&v18 + 1);
  *(void *)(a2 + 16) = v54;
  *(void *)(a2 + 24) = v28;
  uint64_t v33 = v50;
  *(void *)(a2 + 32) = v53;
  *(void *)(a2 + 40) = v33;
  *(void *)(a2 + 48) = v51;
  *(unsigned char *)(a2 + 56) = v52;
  *(_DWORD *)(a2 + 57) = v67;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)&v67 + 3);
  uint64_t v34 = *((void *)&v43 + 1);
  *(void *)(a2 + 64) = v43;
  *(void *)(a2 + 72) = v34;
  uint64_t v35 = v45;
  *(void *)(a2 + 80) = v44;
  *(void *)(a2 + 88) = v35;
  uint64_t v36 = v47;
  *(void *)(a2 + 96) = v46;
  *(void *)(a2 + 104) = v36;
  uint64_t v37 = v49;
  *(void *)(a2 + 112) = v48;
  *(void *)(a2 + 120) = v37;
  uint64_t v38 = v41;
  *(void *)(a2 + 128) = v42;
  *(void *)(a2 + 136) = v38;
  *(unsigned char *)(a2 + 144) = v40;
  *(_DWORD *)(a2 + 148) = *(_DWORD *)&v69[3];
  *(_DWORD *)(a2 + 145) = *(_DWORD *)v69;
  *(void *)(a2 + 152) = v39;
  *(unsigned char *)(a2 + 160) = v32;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}