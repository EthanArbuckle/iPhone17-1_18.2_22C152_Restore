uint64_t CategoryViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void (*v24)(double, double, double, double);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[21];
  uint64_t v54;

  v3 = type metadata accessor for CategoryViewLayoutOptions();
  v4 = (int *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151792C();
  v8 = v7;
  v10 = v9;
  sub_1C15178FC();
  v12 = v11;
  sub_1C151790C();
  *(void *)&v6[v4[10]] = 0x4030000000000000;
  *(void *)&v6[v4[12]] = 0x4018000000000000;
  *(void *)&v6[v4[13]] = 0x402E000000000000;
  *(void *)&v6[v4[14]] = 0x4024000000000000;
  *(void *)&v6[v4[15]] = 0x4024000000000000;
  *(void *)&v6[v4[11]] = 0;
  v13 = &v6[v4[8]];
  *(void *)v13 = v8;
  *((void *)v13 + 1) = v10;
  v14 = &v6[v4[7]];
  *(void *)v14 = v12;
  v14[8] = 0;
  v15 = &v6[v4[9]];
  *(_OWORD *)v15 = xmmword_1C15B7C80;
  *((_OWORD *)v15 + 1) = xmmword_1C15B7C80;
  sub_1C0F3132C((uint64_t)v6, (uint64_t)v53);
  v16 = v53[0];
  v17 = v53[1];
  v18 = v53[2];
  v19 = v53[3];
  v54 = v53[4];
  v52 = v53[5];
  v51 = v53[6];
  v50 = v53[7];
  v49 = v53[8];
  v48 = v53[9];
  v47 = v53[10];
  v46 = v53[11];
  v45 = v53[12];
  v44 = v53[13];
  v43 = v53[14];
  v42 = v53[15];
  v20 = *(double *)&v53[17];
  v41 = v53[16];
  v21 = *(double *)&v53[18];
  v22 = *(double *)&v53[19];
  v23 = *(double *)&v53[20];
  v24 = (void (*)(double, double, double, double))sub_1C151791C();
  v24(v20, v21, v22, v23);
  if (v1)
  {
    sub_1C0F31868((uint64_t)v6);
    return swift_release();
  }
  else
  {
    v30 = v25;
    v31 = v26;
    v32 = v27;
    v33 = v28;
    sub_1C0F31868((uint64_t)v6);
    result = swift_release();
    *a1 = v16;
    a1[1] = v17;
    a1[2] = v18;
    a1[3] = v19;
    v34 = v52;
    a1[4] = v54;
    a1[5] = v34;
    v35 = v50;
    a1[6] = v51;
    a1[7] = v35;
    v36 = v48;
    a1[8] = v49;
    a1[9] = v36;
    v37 = v46;
    a1[10] = v47;
    a1[11] = v37;
    v38 = v44;
    a1[12] = v45;
    a1[13] = v38;
    v39 = v42;
    a1[14] = v43;
    a1[15] = v39;
    a1[16] = v41;
    a1[17] = v30;
    a1[18] = v31;
    a1[19] = v32;
    a1[20] = v33;
  }
  return result;
}

double sub_1C0F3132C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v3 = v2;
  v6 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  uint64_t v7 = a1 + v6[5];
  uint64_t v8 = *(uint64_t *)v7;
  int v9 = *(unsigned __int8 *)(v7 + 8);
  if (v9)
  {
    if (v9 == 1 && v8 >= 1)
    {
      sub_1C151764C();
      double v11 = v10 / (double)v8;
      if (v11 > 110.0) {
        double v12 = v11;
      }
      else {
        double v12 = 110.0;
      }
    }
    else
    {
      double v12 = 110.0;
    }
  }
  else
  {
    double v12 = *(double *)&v8;
  }
  CGFloat v75 = v12;
  double v13 = *(double *)(a1 + v6[8]);
  double v14 = v13 + v13;
  v15 = (double *)(a1 + v6[7]);
  double v16 = v15[2];
  uint64_t v17 = v2[5];
  uint64_t v18 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v17);
  double v19 = v14 + v16 * (*(double (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  double v20 = *v15;
  uint64_t v21 = v2[5];
  uint64_t v22 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v21);
  double v23 = v19 + v20 * (*(double (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
  uint64_t v24 = v2[5];
  uint64_t v25 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v24);
  v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  objc_msgSend(v26, sel_pointSize);
  double v28 = v27;

  CGFloat v29 = (v23 + v28) * 35.0 / 60.0;
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v74 = a1;
  v31 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v33 = v3[5];
  uint64_t v32 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v33);
  v71 = v6;
  v34 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
  swift_bridgeObjectRetain();
  id v35 = v31;
  uint64_t v36 = v34(v33, v32);
  *(void *)(inited + 64) = sub_1BFF63CD0();
  *(void *)(inited + 40) = v36;
  sub_1BFF991DC(inited);
  id v37 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  v38 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C0F31A54((unint64_t *)&qword_1EB87A1F0, 255, type metadata accessor for Key);
  v39 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v37, sel_initWithString_attributes_, v38, v39);

  sub_1C151F60C();
  CGFloat v42 = v41;
  CGFloat v44 = v43;
  CGFloat v46 = v45;
  CGFloat v67 = v47;
  CGFloat v68 = v45;
  CGFloat v48 = v47;

  v76.origin.CGFloat x = v42;
  v76.origin.CGFloat y = v44;
  v76.size.width = v46;
  v76.size.height = v48;
  CGFloat v49 = v23 + CGRectGetHeight(v76) - v20 - v16;
  v50 = v3 + 2;
  double v51 = *(double *)(v74 + v71[9]);
  uint64_t v52 = v3[5];
  uint64_t v53 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v52);
  v77.origin.CGFloat x = v51 * (*(double (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
  v77.origin.CGFloat y = v49 * 0.5 - v29 * 0.5;
  v77.size.width = v29;
  v77.size.height = v29;
  CGRect v78 = CGRectIntegral(v77);
  CGFloat y = v78.origin.y;
  CGFloat x = v78.origin.x;
  v78.size.width = v29;
  v78.size.height = v29;
  double MaxX = CGRectGetMaxX(v78);
  double v55 = *(double *)(v74 + v71[10]);
  uint64_t v56 = v3[5];
  uint64_t v57 = v3[6];
  __swift_project_boxed_opaque_existential_1(v50, v56);
  double v73 = MaxX + v55 * (*(double (**)(uint64_t, uint64_t))(v57 + 16))(v56, v57);
  v79.origin.CGFloat x = v42;
  v79.origin.CGFloat y = v44;
  v79.size.width = v68;
  v79.size.height = v67;
  CGFloat Height = CGRectGetHeight(v79);
  v59 = (uint64_t *)(v74 + v71[6]);
  uint64_t v72 = *v59;
  CGFloat v65 = v49 * 0.5 - Height * 0.5;
  uint64_t v66 = v59[1];
  v80.origin.CGFloat x = 0.0;
  v80.origin.CGFloat y = 0.0;
  v80.size.width = v75;
  v80.size.height = v49;
  CGFloat v60 = CGRectGetMaxX(v80) + -35.0 + -3.0;
  v61 = (void *)sub_1C151769C();
  objc_msgSend(v61, sel_displayScale);
  uint64_t v63 = v62;

  *(CGFloat *)a2 = v60;
  *(CGFloat *)(a2 + 8) = v49 * 0.5 + -17.5;
  *(int64x2_t *)(a2 + 16) = vdupq_n_s64(0x4041800000000000uLL);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(CGFloat *)(a2 + 48) = v75;
  *(CGFloat *)(a2 + 56) = v49;
  *(CGFloat *)(a2 + 64) = x;
  *(CGFloat *)(a2 + 72) = y;
  *(CGFloat *)(a2 + 80) = v29;
  *(CGFloat *)(a2 + 88) = v29;
  double result = v73;
  *(double *)(a2 + 96) = v73;
  *(CGFloat *)(a2 + 104) = v65;
  *(CGFloat *)(a2 + 112) = v68;
  *(CGFloat *)(a2 + 120) = v67;
  *(void *)(a2 + 128) = v63;
  *(void *)(a2 + 136) = v72;
  *(void *)(a2 + 144) = v66;
  *(CGFloat *)(a2 + 152) = v75;
  *(CGFloat *)(a2 + 160) = v49;
  return result;
}

uint64_t sub_1C0F31868(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CategoryViewLayoutOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CategoryViewLayoutAttributesFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t CategoryViewLayoutAttributesFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

double sub_1C0F3191C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1C0F3093C(a1, a2);
}

uint64_t sub_1C0F31940(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0F31A54(&qword_1EB85EE20, a2, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F3199C()
{
  unint64_t result = qword_1EB85ED40;
  if (!qword_1EB85ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED40);
  }
  return result;
}

uint64_t sub_1C0F319F0@<X0>(void *a1@<X8>)
{
  return CategoryViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)(a1);
}

uint64_t dispatch thunk of CategoryViewLayoutAttributesFactoryType.makeLayoutAttributes(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for CategoryViewLayoutAttributesFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CategoryViewLayoutAttributesFactory);
}

uint64_t dispatch thunk of CategoryViewLayoutAttributesFactory.__allocating_init(styler:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C0F31A54(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatLayeredMediaNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 104);
}

unint64_t FormatLayeredMediaNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 112);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

void FormatLayeredMediaNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = *(void *)(v1 + 128);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0F31B8C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x676E697A69736572;
      break;
    case 5:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 6:
      unint64_t result = 0x696C696269736976;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x656C797473;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0F31D10()
{
  return sub_1C0F31B8C(*v0);
}

uint64_t sub_1C0F31D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0F330DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0F31D40(uint64_t a1)
{
  unint64_t v2 = sub_1C0F32340();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F31D7C(uint64_t a1)
{
  unint64_t v2 = sub_1C0F32340();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.__deallocating_deinit()
{
  FormatLayeredMediaNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0F32B18(0, &qword_1EA1A8FB0, (uint64_t (*)(void))sub_1C0F32340, (uint64_t)&type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F32340();
  sub_1C1520F0C();
  LOBYTE(v13[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    char v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C580(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 96);
    char v14 = 4;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v13[0]) = 5;
    sub_1C15207FC();
    *(void *)&v13[0] = *(void *)(v3 + 112);
    char v14 = 6;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v13[0]) = 7;
    sub_1C15207DC();
    char v11 = *(unsigned char *)(v3 + 136);
    *(void *)&v13[0] = *(void *)(v3 + 128);
    BYTE8(v13[0]) = v11;
    char v14 = 8;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 144);
    char v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C580(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 152);
    char v14 = 10;
    type metadata accessor for FormatLayeredMediaNodeStyle();
    sub_1BFE4C580(&qword_1EB868200, 255, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle);
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 160);
    char v14 = 11;
    sub_1C0F32B18(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C0F32B80(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0F32340()
{
  unint64_t result = qword_1EA1A8FB8;
  if (!qword_1EA1A8FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8FB8);
  }
  return result;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatLayeredMediaNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C0F32B18(0, &qword_1EA1A8FC0, (uint64_t (*)(void))sub_1C0F32340, (uint64_t)&type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F32340();
  uint64_t v17 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v15;
    LOBYTE(v18) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v18) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v18) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v20 = 3;
    sub_1BFE4C580(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v19;
    *(_OWORD *)(v1 + 64) = v18;
    *(_OWORD *)(v1 + 80) = v12;
    char v20 = 4;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 96) = v18;
    LOBYTE(v18) = 5;
    *(void *)(v1 + 104) = sub_1C15206DC();
    char v20 = 6;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 112) = v18;
    LOBYTE(v18) = 7;
    *(unsigned char *)(v1 + 120) = sub_1C15206AC() & 1;
    char v20 = 8;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v13 = BYTE8(v18);
    *(void *)(v1 + 128) = v18;
    *(unsigned char *)(v1 + 136) = v13;
    type metadata accessor for FormatContextLayoutOptions();
    char v20 = 9;
    sub_1BFE4C580(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 144) = v18;
    type metadata accessor for FormatLayeredMediaNodeStyle();
    char v20 = 10;
    sub_1BFE4C580(&qword_1EB88CA20, 255, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 152) = v18;
    sub_1C0F32B18(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v20 = 11;
    sub_1C0F32B80(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v16);
    *(void *)(v1 + 160) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0F32B18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0F32B80(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F32B18(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F32C24(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C580(&qword_1EA1A8FC8, a2, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatLayeredMediaNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C0F32C90(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C580(&qword_1EA1A8FD0, a2, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t sub_1C0F32CD8(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C580(&qword_1EA1A8FD8, a2, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t sub_1C0F32D20(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C580(&qword_1EA1A8FE0, a2, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t sub_1C0F32D68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatLayeredMediaNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0F32DC0(void *a1)
{
  return FormatLayeredMediaNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C0F32DE4(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C580(&qword_1EA1A9000, a2, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatLayeredMediaNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatLayeredMediaNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for FormatLayeredMediaNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F32F9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0F32FD8()
{
  unint64_t result = qword_1EA1A8FE8;
  if (!qword_1EA1A8FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8FE8);
  }
  return result;
}

unint64_t sub_1C0F33030()
{
  unint64_t result = qword_1EA1A8FF0;
  if (!qword_1EA1A8FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8FF0);
  }
  return result;
}

unint64_t sub_1C0F33088()
{
  unint64_t result = qword_1EA1A8FF8;
  if (!qword_1EA1A8FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8FF8);
  }
  return result;
}

uint64_t sub_1C0F330DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1C0F3359C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, char a14, uint64_t *a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = *a7;
  uint64_t v19 = *a13;
  uint64_t v20 = *a15;
  char v21 = *((unsigned char *)a15 + 8);
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(void *)(v17 + 96) = v18;
  *(void *)(v17 + 104) = a8;
  *(void *)(v17 + 112) = v19;
  *(unsigned char *)(v17 + 120) = a14;
  *(void *)(v17 + 128) = v20;
  *(unsigned char *)(v17 + 136) = v21;
  *(void *)(v17 + 144) = a16;
  *(void *)(v17 + 152) = a17;
  if (a17)
  {
    sub_1BFE6FE30(0, (unint64_t *)&qword_1EB87A888, (uint64_t (*)(uint64_t))sub_1C0399F9C, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    uint64_t v23 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v24 = *(void *)(a17 + 64);
    if ((~v24 & 0xF000000000000007) != 0)
    {
      double v27 = &protocol witness table for FormatBackground;
      v26 = &type metadata for FormatBackground;
      uint64_t v25 = *(void *)(a17 + 64);
    }
    else
    {
      uint64_t v25 = 0;
      v26 = 0;
      double v27 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    *(void *)(inited + 32) = v25;
    *(void *)(inited + 56) = v26;
    *(void *)(inited + 64) = v27;
    swift_retain_n();
    swift_retain();
    sub_1BFEF683C(v24);
    uint64_t v28 = sub_1BFE70334(v23);
    swift_setDeallocating();
    sub_1C0399F9C(0);
    swift_arrayDestroy();
    swift_release_n();
  }
  else
  {
    swift_retain();
    uint64_t v28 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v17 + 160) = v28;
  return v17;
}

uint64_t FeedLayoutOrder.description.getter()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x614C206C61656449;
  }
}

NewsFeed::FeedLayoutOrder_optional __swiftcall FeedLayoutOrder.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t FeedLayoutOrder.rawValue.getter()
{
  if (*v0) {
    return 0x69796C7265646E75;
  }
  else {
    return 0x79614C6C61656469;
  }
}

uint64_t sub_1C0F33824(char *a1, char *a2)
{
  return sub_1C1494BFC(*a1, *a2);
}

unint64_t sub_1C0F33834()
{
  unint64_t result = qword_1EA1A9008;
  if (!qword_1EA1A9008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9008);
  }
  return result;
}

uint64_t sub_1C0F33888()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F33920()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F339A4()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedLayoutOrder_optional sub_1C0F33A38(Swift::String *a1)
{
  return FeedLayoutOrder.init(rawValue:)(*a1);
}

void sub_1C0F33A44(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x79614C6C61656469;
  if (*v1) {
    uint64_t v2 = 0x69796C7265646E75;
  }
  unint64_t v3 = 0xEB0000000074756FLL;
  if (*v1) {
    unint64_t v3 = 0xEF6C65646F4D676ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0F33A98(uint64_t a1)
{
  unint64_t v2 = sub_1C0F33CD8();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0F33AEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0F33CD8();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C0F33B48(uint64_t a1)
{
  unint64_t v2 = sub_1C0F33CD8();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C0F33B9C()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x614C206C61656449;
  }
}

unsigned char *storeEnumTagSinglePayload for FeedLayoutOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F33CB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_1C0F33CD8()
{
  unint64_t result = qword_1EA1A9010;
  if (!qword_1EA1A9010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9010);
  }
  return result;
}

uint64_t *sub_1C0F33D2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BFF81F7C();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      unint64_t v10 = (char *)a2 + v8;
      sub_1BFF81FF0();
      uint64_t v12 = v11;
      char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_retain();
      v13(v9, v10, v12);
    }
    else
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C0F33E70(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0F33F6C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BFF81F7C();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      sub_1BFF81FF0();
      uint64_t v10 = v9;
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_retain();
      v11(v7, v8, v10);
    }
    else
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0F33F6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatOptionsNodeStatementContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C0F33FC8(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1BFF81F7C();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1BFF81FF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1C0F3409C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0F33F6C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1BFF81F7C();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      sub_1BFF81FF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0F34180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF834FC(v3, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFF81F7C();
    uint64_t v11 = &v9[*(int *)(v10 + 48)];
    sub_1BFEDDF70(a1, a2, a3);
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
    sub_1BFFF2718(a1, a2, a3);
    return swift_release();
  }
}

uint64_t sub_1C0F342E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0F34180(a1, a2, a3);
}

uint64_t UserNotificationSettingsManager.getSettings()()
{
  swift_retain();
  uint64_t v0 = sub_1C151862C();
  swift_release();
  return v0;
}

uint64_t sub_1C0F34358()
{
  type metadata accessor for UserNotificationSettingsManager();
  uint64_t v0 = swift_allocObject();
  sub_1C0F34B0C();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C1518E9C();
  sub_1C1518E7C();
  sub_1C0F34B80(0, &qword_1EB86F9C0, MEMORY[0x1E4FAAAF0]);
  swift_allocObject();
  uint64_t result = sub_1C151863C();
  *(void *)(v0 + 24) = result;
  off_1EB86FCD8 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static UserNotificationSettingsManager.shared.getter()
{
  if (qword_1EB86F748 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t UserNotificationSettingsManager.cachedSettings.getter()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  return v1;
}

uint64_t sub_1C0F344B8@<X0>(void *a1@<X8>)
{
  swift_retain();
  sub_1C1518EBC();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C0F34508(id *a1)
{
  id v1 = *a1;
  swift_retain();
  sub_1C1518ECC();
  return swift_release();
}

void UserNotificationSettingsManager.cachedSettings.setter(void *a1)
{
  id v1 = a1;
  swift_retain();
  sub_1C1518ECC();
  swift_release();
}

void (*UserNotificationSettingsManager.cachedSettings.modify(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + 16);
  swift_retain();
  v3[5] = sub_1C1518EAC();
  return sub_1C02D459C;
}

uint64_t sub_1C0F34614()
{
  return sub_1C151911C();
}

void sub_1C0F34684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_currentNotificationCenter);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = sub_1BFD35658;
  v8[4] = v4;
  v10[4] = sub_1C0F34CA8;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1BFD34E78;
  v10[3] = &block_descriptor_73;
  uint64_t v9 = _Block_copy(v10);
  swift_release();
  objc_msgSend(v6, sel_getNotificationSettingsWithCompletionHandler_, v9);
  _Block_release(v9);
}

uint64_t sub_1C0F347E8(void *a1, uint64_t a2, uint64_t (*a3)(void *))
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v10 = a1;
    id v5 = a1;
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    swift_release();
  }
  BOOL v6 = objc_msgSend(a1, sel_scheduledDeliverySetting, v10) == (id)2;
  id v7 = (id)NewsCoreUserDefaults();
  uint64_t v8 = (void *)sub_1C151E5EC();
  objc_msgSend(v7, sel_setBool_forKey_, v6, v8);

  return a3(a1);
}

uint64_t UserNotificationSettingsManager.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t UserNotificationSettingsManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall UserNotificationSettingsManager.sceneDidEnterBackground()()
{
  sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
  uint64_t v0 = (void *)sub_1C151FD5C();
  sub_1C151F38C();
  sub_1C15197BC();

  swift_retain();
  sub_1C1518ECC();
  swift_release();
}

uint64_t sub_1C0F349FC()
{
  return sub_1C15187EC();
}

uint64_t sub_1C0F34A28()
{
  sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
  uint64_t v0 = (void *)sub_1C151FD5C();
  sub_1C151F38C();
  sub_1C15197BC();

  swift_retain();
  sub_1C1518ECC();
  return swift_release();
}

uint64_t type metadata accessor for UserNotificationSettingsManager()
{
  return self;
}

uint64_t method lookup function for UserNotificationSettingsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserNotificationSettingsManager);
}

void sub_1C0F34B0C()
{
  if (!qword_1EB86F9D0)
  {
    sub_1C0F34B80(255, &qword_1EB86FD98, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C1518EDC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86F9D0);
    }
  }
}

void sub_1C0F34B80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1BFC39268(255, &qword_1EB86FD90);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C0F34BF0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C0F34BF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F34C30()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0F34C68()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F34CA8(void *a1)
{
  return sub_1C0F347E8(a1, *(void *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24));
}

uint64_t PuzzleStatistic.identifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  type metadata accessor for PuzzleStatistic();
  PuzzleStatisticCategory.statisticType.getter(&v4);
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t PuzzleStatistic.init(puzzleType:statistic:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (uint64_t)a3 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  return sub_1C0F34EE0(a2, v4);
}

uint64_t sub_1C0F34EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStatisticCategory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PuzzleStatistic.puzzleType.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t PuzzleStatistic.statistic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleStatistic();
  return sub_1C0F354AC(v1 + *(int *)(v3 + 20), a1, type metadata accessor for PuzzleStatisticCategory);
}

uint64_t sub_1C0F34F98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatistic.init(from:)(a1, a2);
}

uint64_t PuzzleStatistic.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v23);
  v26 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F37118(0, (unint64_t *)&unk_1EB863F80, (uint64_t (*)(uint64_t))sub_1C0F353BC, MEMORY[0x1E4FAB160]);
  uint64_t v6 = v5;
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v27 = (char *)&v20 - v7;
  sub_1C0F35950(0, &qword_1EA1A9020, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v8;
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F35414();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = a1;
  uint64_t v14 = v13;
  uint64_t v16 = v24;
  uint64_t v15 = v25;
  uint64_t v17 = (uint64_t)v26;
  char v31 = 0;
  sub_1C0F35DEC((unint64_t *)&qword_1EA1A9030);
  sub_1C15206EC();
  uint64_t v18 = v27;
  sub_1C151948C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v6);
  *uint64_t v14 = v29;
  char v30 = 1;
  sub_1C0F35468(&qword_1EA1A9038);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v28);
  sub_1C0F34EE0(v17, (uint64_t)v14 + *(int *)(v11 + 20));
  sub_1C0F354AC((uint64_t)v14, v22, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1BFDA7418((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
}

unint64_t sub_1C0F353BC()
{
  unint64_t result = qword_1EB890220;
  if (!qword_1EB890220)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB890220);
  }
  return result;
}

unint64_t sub_1C0F35414()
{
  unint64_t result = qword_1EA1A9028;
  if (!qword_1EA1A9028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9028);
  }
  return result;
}

uint64_t sub_1C0F35468(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PuzzleStatisticCategory(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F354AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F35514(void *a1)
{
  return PuzzleStatistic.encode(to:)(a1);
}

uint64_t PuzzleStatistic.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151829C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v23 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F37118(0, (unint64_t *)&unk_1EB863F80, (uint64_t (*)(uint64_t))sub_1C0F353BC, MEMORY[0x1E4FAB160]);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - v9;
  sub_1C0F35950(0, (unint64_t *)&unk_1EA1A9040, MEMORY[0x1E4FBBDE0]);
  uint64_t v12 = v11;
  uint64_t v22 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v21 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F35414();
  sub_1C1520F0C();
  v21[1] = v2;
  uint64_t v29 = *v2;
  uint64_t v15 = qword_1EB863C68;
  swift_unknownObjectRetain_n();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB863C48);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v23, v16, v4);
  MEMORY[0x1F4188790](v17);
  v21[-2] = sub_1C0F353BC();
  swift_getKeyPath();
  sub_1C151947C();
  swift_unknownObjectRelease();
  char v28 = 0;
  sub_1C0F35DEC((unint64_t *)&qword_1EA1AD100);
  uint64_t v18 = v24;
  uint64_t v19 = v26;
  sub_1C152080C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v18);
  if (!v19)
  {
    type metadata accessor for PuzzleStatistic();
    char v27 = 1;
    type metadata accessor for PuzzleStatisticCategory(0);
    sub_1C0F35468(&qword_1EA1A9050);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v12);
}

void sub_1C0F35950(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0F35414();
    unint64_t v7 = a3(a1, &type metadata for PuzzleStatistic.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t PuzzleStatistic.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1C0F35A68(char *a1, char *a2)
{
  return sub_1C148EDB4(*a1, *a2);
}

uint64_t sub_1C0F35A74()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F35B00()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F35B78()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F35C00@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0F35C60(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7954656C7A7A7570;
  if (*v1) {
    uint64_t v2 = 0x6974736974617473;
  }
  unint64_t v3 = 0xEA00000000006570;
  if (*v1) {
    unint64_t v3 = 0xE900000000000063;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0F35CA8()
{
  if (*v0) {
    return 0x6974736974617473;
  }
  else {
    return 0x7954656C7A7A7570;
  }
}

uint64_t sub_1C0F35CEC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0F35D50(uint64_t a1)
{
  unint64_t v2 = sub_1C0F35414();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F35D8C(uint64_t a1)
{
  unint64_t v2 = sub_1C0F35414();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0F35DD4()
{
  return 8;
}

void *sub_1C0F35DE0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0F35DEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F37118(255, (unint64_t *)&unk_1EB863F80, (uint64_t (*)(uint64_t))sub_1C0F353BC, MEMORY[0x1E4FAB160]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8NewsFeed15PuzzleStatisticV2eeoiySbAC_ACtFZ_0(id *a1, id *a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v8 = MEMORY[0x1F4188790](v7).n128_u64[0];
  uint64_t v10 = (char *)&v23 - v9;
  id v11 = objc_msgSend(*a1, sel_identifier, v8);
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(*a2, sel_identifier);
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  if (v12 == v16 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    sub_1C0F354AC((uint64_t)a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1C0F354AC((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  }
  else
  {
    char v20 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0F354AC((uint64_t)a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1C0F354AC((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    char v21 = 0;
    if ((v20 & 1) == 0) {
      goto LABEL_9;
    }
  }
  char v21 = _s8NewsFeed23PuzzleStatisticCategoryO2eeoiySbAC_ACtFZ_0((uint64_t)&v10[*(int *)(v4 + 20)], (uint64_t)&v6[*(int *)(v4 + 20)]);
LABEL_9:
  sub_1BFDA7418((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  sub_1BFDA7418((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  return v21 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleStatistic(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    double v8 = (uint64_t *)((char *)a2 + v6);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v16 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v18 = type metadata accessor for PuzzleStreak();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18))
          {
LABEL_27:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v7, v8, *(void *)(*(void *)(v60 - 8) + 64));
            goto LABEL_35;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_36;
          }
          uint64_t v18 = type metadata accessor for PuzzleStreak();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18)) {
            goto LABEL_27;
          }
        }
        uint64_t v68 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v7, v8, v68);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_35:
        swift_storeEnumTagMultiPayload();
LABEL_36:
        uint64_t v69 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v70 = *(int *)(v69 + 20);
        v71 = (char *)v7 + v70;
        uint64_t v72 = (char *)v8 + v70;
        int v73 = swift_getEnumCaseMultiPayload();
        if (v73 == 5)
        {
          uint64_t v74 = type metadata accessor for PuzzleStreak();
          uint64_t v75 = *(void *)(v74 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v72, 1, v74))
          {
LABEL_41:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
            goto LABEL_44;
          }
        }
        else
        {
          if (v73 != 4)
          {
            memcpy(v71, v72, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_45;
          }
          uint64_t v74 = type metadata accessor for PuzzleStreak();
          uint64_t v75 = *(void *)(v74 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v72, 1, v74)) {
            goto LABEL_41;
          }
        }
        uint64_t v77 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v71, v72, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v71, 0, 1, v74);
LABEL_44:
        swift_storeEnumTagMultiPayload();
LABEL_45:
        uint64_t v78 = *(int *)(v69 + 24);
        CGRect v79 = (char *)v7 + v78;
        CGRect v80 = (char *)v8 + v78;
        int v81 = swift_getEnumCaseMultiPayload();
        if (v81 == 5)
        {
          uint64_t v82 = type metadata accessor for PuzzleStreak();
          uint64_t v83 = *(void *)(v82 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v82))
          {
LABEL_50:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
            goto LABEL_53;
          }
        }
        else
        {
          if (v81 != 4)
          {
            memcpy(v79, v80, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_54;
          }
          uint64_t v82 = type metadata accessor for PuzzleStreak();
          uint64_t v83 = *(void *)(v82 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v82)) {
            goto LABEL_50;
          }
        }
        uint64_t v85 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v79, v80, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
        goto LABEL_53;
      case 2u:
        uint64_t v13 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v14 = *((void *)v13 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v14 + 48))(v8, 1, v13))
        {
          sub_1C0F37118(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          uint64_t v29 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v7, v8, v29);
          char v30 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v31 = v30[5];
          uint64_t v32 = (void *)((char *)v7 + v31);
          uint64_t v33 = (void *)((char *)v8 + v31);
          uint64_t v34 = v33[1];
          *uint64_t v32 = *v33;
          v32[1] = v34;
          uint64_t v35 = v30[6];
          uint64_t v36 = (char *)v7 + v35;
          id v37 = (void *)((char *)v8 + v35);
          uint64_t v38 = v37[1];
          *(void *)uint64_t v36 = *v37;
          *((void *)v36 + 1) = v38;
          v39 = v37 + 2;
          unint64_t v40 = v37[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v40 >> 60 == 15)
          {
            *((_OWORD *)v36 + 1) = *(_OWORD *)v39;
          }
          else
          {
            uint64_t v61 = *v39;
            sub_1BFE95820(*v39, v40);
            *((void *)v36 + 2) = v61;
            *((void *)v36 + 3) = v40;
          }
          *(void *)((char *)v7 + v30[7]) = *(void *)((char *)v8 + v30[7]);
          *(void *)((char *)v7 + v30[8]) = *(void *)((char *)v8 + v30[8]);
          *(void *)((char *)v7 + v13[5]) = *(void *)((char *)v8 + v13[5]);
          *(void *)((char *)v7 + v13[6]) = *(void *)((char *)v8 + v13[6]);
          uint64_t v62 = v13[7];
          uint64_t v63 = (void *)((char *)v7 + v62);
          v64 = (void *)((char *)v8 + v62);
          uint64_t v65 = v64[1];
          *uint64_t v63 = *v64;
          v63[1] = v65;
          uint64_t v66 = *(void (**)(void *, void, uint64_t, int *))(v14 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v66(v7, 0, 1, v13);
        }
        goto LABEL_54;
      case 3u:
        uint64_t v20 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v20;
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        char v21 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v22 = v21[6];
        uint64_t v23 = (char *)v7 + v22;
        uint64_t v24 = (char *)v8 + v22;
        uint64_t v25 = type metadata accessor for PuzzleStreak();
        uint64_t v26 = *(void *)(v25 - 8);
        char v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        if (v27(v24, 1, v25))
        {
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v41 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v23, v24, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        uint64_t v42 = v21[7];
        double v43 = (char *)v7 + v42;
        CGFloat v44 = (char *)v8 + v42;
        if (v27((char *)v8 + v42, 1, v25))
        {
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          uint64_t v46 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v43, v44, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v43, 0, 1, v25);
        }
        uint64_t v47 = v21[8];
        CGFloat v48 = (_OWORD *)((char *)v7 + v47);
        CGFloat v49 = (_OWORD *)((char *)v8 + v47);
        long long v50 = v49[1];
        *CGFloat v48 = *v49;
        v48[1] = v50;
        *(_OWORD *)((char *)v48 + 25) = *(_OWORD *)((char *)v49 + 25);
        uint64_t v51 = v21[9];
        uint64_t v52 = (_OWORD *)((char *)v7 + v51);
        uint64_t v53 = (_OWORD *)((char *)v8 + v51);
        *(_OWORD *)((char *)v52 + 25) = *(_OWORD *)((char *)v53 + 25);
        long long v54 = v53[1];
        *uint64_t v52 = *v53;
        v52[1] = v54;
        uint64_t v55 = v21[10];
        uint64_t v56 = (_OWORD *)((char *)v7 + v55);
        uint64_t v57 = (_OWORD *)((char *)v8 + v55);
        long long v58 = v57[1];
        *uint64_t v56 = *v57;
        v56[1] = v58;
        *(_OWORD *)((char *)v56 + 25) = *(_OWORD *)((char *)v57 + 25);
        goto LABEL_54;
      default:
        uint64_t v9 = type metadata accessor for PuzzleStatisticValue(0);
        int v10 = swift_getEnumCaseMultiPayload();
        if (v10 == 5)
        {
          uint64_t v11 = type metadata accessor for PuzzleStreak();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
          {
LABEL_24:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v7, v8, *(void *)(*(void *)(v59 - 8) + 64));
            goto LABEL_53;
          }
        }
        else
        {
          if (v10 != 4)
          {
            memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
            goto LABEL_54;
          }
          uint64_t v11 = type metadata accessor for PuzzleStreak();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11)) {
            goto LABEL_24;
          }
        }
        uint64_t v67 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v7, v8, v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
LABEL_53:
        swift_storeEnumTagMultiPayload();
LABEL_54:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return v5;
}

void sub_1C0F37118(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for PuzzleStatistic(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_12;
    case 1:
      type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        uint64_t v7 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7))
        {
          uint64_t v8 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
        }
      }
      uint64_t v9 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v10 = v4 + *(int *)(v9 + 20);
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 5 || v11 == 4)
      {
        uint64_t v12 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
        {
          uint64_t v13 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v10, v13);
        }
      }
      v4 += *(int *)(v9 + 24);
LABEL_12:
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 5 || result == 4)
      {
        uint64_t v14 = type metadata accessor for PuzzleStreak();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14);
        if (!result) {
          goto LABEL_26;
        }
      }
      return result;
    case 2:
      uint64_t v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v4, 1, v15);
      if (!result)
      {
        uint64_t v16 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v4, v16);
        uint64_t v17 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        uint64_t v18 = v4 + *(int *)(v17 + 24);
        swift_bridgeObjectRelease();
        unint64_t v19 = *(void *)(v18 + 24);
        if (v19 >> 60 != 15) {
          sub_1BFE95664(*(void *)(v18 + 16), v19);
        }
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    case 3:
      uint64_t v20 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v21 = v4 + *(int *)(v20 + 24);
      uint64_t v22 = type metadata accessor for PuzzleStreak();
      uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
      if (!v23(v21, 1, v22))
      {
        uint64_t v24 = sub_1C151555C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v21, v24);
      }
      v4 += *(int *)(v20 + 28);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v4, 1, v22);
      if (result) {
        return result;
      }
LABEL_26:
      uint64_t v25 = sub_1C151555C();
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
      uint64_t result = v26(v4, v25);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for PuzzleStatistic(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        uint64_t v18 = type metadata accessor for PuzzleStreak();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18))
        {
LABEL_11:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v5, v6, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_34;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 4)
        {
          memcpy(v5, v6, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_35;
        }
        uint64_t v18 = type metadata accessor for PuzzleStreak();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18)) {
          goto LABEL_11;
        }
      }
      uint64_t v67 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v5, v6, v67);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v18);
LABEL_34:
      swift_storeEnumTagMultiPayload();
LABEL_35:
      uint64_t v68 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v69 = *(int *)(v68 + 20);
      uint64_t v70 = (char *)v5 + v69;
      v71 = (char *)v6 + v69;
      int v72 = swift_getEnumCaseMultiPayload();
      if (v72 == 5)
      {
        uint64_t v73 = type metadata accessor for PuzzleStreak();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v71, 1, v73))
        {
LABEL_40:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
          goto LABEL_43;
        }
      }
      else
      {
        if (v72 != 4)
        {
          memcpy(v70, v71, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_44;
        }
        uint64_t v73 = type metadata accessor for PuzzleStreak();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v71, 1, v73)) {
          goto LABEL_40;
        }
      }
      uint64_t v76 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v70, v71, v76);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v70, 0, 1, v73);
LABEL_43:
      swift_storeEnumTagMultiPayload();
LABEL_44:
      uint64_t v77 = *(int *)(v68 + 24);
      uint64_t v78 = (char *)v5 + v77;
      CGRect v79 = (char *)v6 + v77;
      int v80 = swift_getEnumCaseMultiPayload();
      if (v80 == 5)
      {
        uint64_t v81 = type metadata accessor for PuzzleStreak();
        uint64_t v82 = *(void *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v79, 1, v81))
        {
LABEL_49:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v78, v79, *(void *)(*(void *)(v83 - 8) + 64));
          goto LABEL_52;
        }
      }
      else
      {
        if (v80 != 4)
        {
          memcpy(v78, v79, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_53;
        }
        uint64_t v81 = type metadata accessor for PuzzleStreak();
        uint64_t v82 = *(void *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v79, 1, v81)) {
          goto LABEL_49;
        }
      }
      uint64_t v84 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v78, v79, v84);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v78, 0, 1, v81);
      goto LABEL_52;
    case 2u:
      uint64_t v12 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v13 + 48))(v6, 1, v12))
      {
        sub_1C0F37118(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
        goto LABEL_24;
      }
      uint64_t v30 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v5, v6, v30);
      uint64_t v31 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v32 = v31[5];
      uint64_t v33 = (void *)((char *)v5 + v32);
      uint64_t v34 = (void *)((char *)v6 + v32);
      uint64_t v35 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v35;
      uint64_t v36 = v31[6];
      id v37 = (char *)v5 + v36;
      uint64_t v38 = (void *)((char *)v6 + v36);
      uint64_t v39 = v38[1];
      *(void *)id v37 = *v38;
      *((void *)v37 + 1) = v39;
      unint64_t v40 = v38 + 2;
      unint64_t v41 = v38[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v41 >> 60 == 15)
      {
        *((_OWORD *)v37 + 1) = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v60 = *v40;
        sub_1BFE95820(*v40, v41);
        *((void *)v37 + 2) = v60;
        *((void *)v37 + 3) = v41;
      }
      *(void *)((char *)v5 + v31[7]) = *(void *)((char *)v6 + v31[7]);
      *(void *)((char *)v5 + v31[8]) = *(void *)((char *)v6 + v31[8]);
      *(void *)((char *)v5 + v12[5]) = *(void *)((char *)v6 + v12[5]);
      *(void *)((char *)v5 + v12[6]) = *(void *)((char *)v6 + v12[6]);
      uint64_t v61 = v12[7];
      uint64_t v62 = (void *)((char *)v5 + v61);
      uint64_t v63 = (void *)((char *)v6 + v61);
      uint64_t v64 = v63[1];
      *uint64_t v62 = *v63;
      v62[1] = v64;
      uint64_t v65 = *(void (**)(void *, void, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v65(v5, 0, 1, v12);
      goto LABEL_53;
    case 3u:
      uint64_t v21 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v21;
      *((unsigned char *)v5 + 16) = *((unsigned char *)v6 + 16);
      uint64_t v22 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v23 = v22[6];
      uint64_t v24 = (char *)v5 + v23;
      uint64_t v25 = (char *)v6 + v23;
      uint64_t v26 = type metadata accessor for PuzzleStreak();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      if (v28(v25, 1, v26))
      {
        sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v42 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v24, v25, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      uint64_t v43 = v22[7];
      CGFloat v44 = (char *)v5 + v43;
      uint64_t v45 = (char *)v6 + v43;
      if (v28((char *)v6 + v43, 1, v26))
      {
        sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        uint64_t v47 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v44, v45, v47);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v44, 0, 1, v26);
      }
      uint64_t v48 = v22[8];
      CGFloat v49 = (_OWORD *)((char *)v5 + v48);
      long long v50 = (_OWORD *)((char *)v6 + v48);
      long long v51 = v50[1];
      *CGFloat v49 = *v50;
      v49[1] = v51;
      *(_OWORD *)((char *)v49 + 25) = *(_OWORD *)((char *)v50 + 25);
      uint64_t v52 = v22[9];
      uint64_t v53 = (_OWORD *)((char *)v5 + v52);
      long long v54 = (_OWORD *)((char *)v6 + v52);
      *(_OWORD *)((char *)v53 + 25) = *(_OWORD *)((char *)v54 + 25);
      long long v55 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v55;
      uint64_t v56 = v22[10];
      uint64_t v57 = (_OWORD *)((char *)v5 + v56);
      long long v58 = (_OWORD *)((char *)v6 + v56);
      long long v59 = v58[1];
      *uint64_t v57 = *v58;
      v57[1] = v59;
      *(_OWORD *)((char *)v57 + 25) = *(_OWORD *)((char *)v58 + 25);
      goto LABEL_53;
    default:
      uint64_t v7 = type metadata accessor for PuzzleStatisticValue(0);
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 5)
      {
        uint64_t v9 = type metadata accessor for PuzzleStreak();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9)) {
          goto LABEL_5;
        }
      }
      else
      {
        if (v8 != 4)
        {
          size_t v15 = *(void *)(*(void *)(v7 - 8) + 64);
LABEL_24:
          memcpy(v5, v6, v15);
          goto LABEL_53;
        }
        uint64_t v9 = type metadata accessor for PuzzleStreak();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
        {
LABEL_5:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_52;
        }
      }
      uint64_t v66 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v5, v6, v66);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
LABEL_52:
      swift_storeEnumTagMultiPayload();
LABEL_53:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void *assignWithCopy for PuzzleStatistic(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    int v8 = (void *)((char *)a2 + v6);
    sub_1BFDA7418((uint64_t)a1 + v6, type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v18 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20))
          {
LABEL_27:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v7, v8, *(void *)(*(void *)(v62 - 8) + 64));
            goto LABEL_35;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
            goto LABEL_36;
          }
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20)) {
            goto LABEL_27;
          }
        }
        uint64_t v69 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v7, v8, v69);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v20);
LABEL_35:
        swift_storeEnumTagMultiPayload();
LABEL_36:
        uint64_t v70 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v71 = *(int *)(v70 + 20);
        int v72 = (char *)v7 + v71;
        uint64_t v73 = (char *)v8 + v71;
        int v74 = swift_getEnumCaseMultiPayload();
        if (v74 == 5)
        {
          uint64_t v75 = type metadata accessor for PuzzleStreak();
          uint64_t v76 = *(void *)(v75 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v73, 1, v75))
          {
LABEL_41:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
            goto LABEL_44;
          }
        }
        else
        {
          if (v74 != 4)
          {
            memcpy(v72, v73, *(void *)(*(void *)(v18 - 8) + 64));
            goto LABEL_45;
          }
          uint64_t v75 = type metadata accessor for PuzzleStreak();
          uint64_t v76 = *(void *)(v75 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v73, 1, v75)) {
            goto LABEL_41;
          }
        }
        uint64_t v78 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v72, v73, v78);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v72, 0, 1, v75);
LABEL_44:
        swift_storeEnumTagMultiPayload();
LABEL_45:
        uint64_t v79 = *(int *)(v70 + 24);
        int v80 = (char *)v7 + v79;
        uint64_t v81 = (char *)v8 + v79;
        int v82 = swift_getEnumCaseMultiPayload();
        if (v82 == 5)
        {
          uint64_t v83 = type metadata accessor for PuzzleStreak();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83))
          {
LABEL_50:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
            goto LABEL_53;
          }
        }
        else
        {
          if (v82 != 4)
          {
            memcpy(v80, v81, *(void *)(*(void *)(v18 - 8) + 64));
            goto LABEL_54;
          }
          uint64_t v83 = type metadata accessor for PuzzleStreak();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83)) {
            goto LABEL_50;
          }
        }
        uint64_t v86 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v80, v81, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
        goto LABEL_53;
      case 2u:
        uint64_t v14 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v15 = *((void *)v14 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v8, 1, v14))
        {
          sub_1C0F37118(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
          goto LABEL_25;
        }
        uint64_t v31 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v7, v8, v31);
        uint64_t v32 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v33 = v32[5];
        uint64_t v34 = (void *)((char *)v7 + v33);
        uint64_t v35 = (void *)((char *)v8 + v33);
        *uint64_t v34 = *v35;
        v34[1] = v35[1];
        uint64_t v36 = v32[6];
        id v37 = (char *)v7 + v36;
        uint64_t v38 = (void *)((char *)v8 + v36);
        *(void *)id v37 = *v38;
        *((void *)v37 + 1) = v38[1];
        uint64_t v39 = v38 + 2;
        unint64_t v40 = v38[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v40 >> 60 == 15)
        {
          *((_OWORD *)v37 + 1) = *(_OWORD *)v39;
        }
        else
        {
          uint64_t v63 = *v39;
          sub_1BFE95820(*v39, v40);
          *((void *)v37 + 2) = v63;
          *((void *)v37 + 3) = v40;
        }
        *(void *)((char *)v7 + v32[7]) = *(void *)((char *)v8 + v32[7]);
        *(void *)((char *)v7 + v32[8]) = *(void *)((char *)v8 + v32[8]);
        *(void *)((char *)v7 + v14[5]) = *(void *)((char *)v8 + v14[5]);
        *(void *)((char *)v7 + v14[6]) = *(void *)((char *)v8 + v14[6]);
        uint64_t v64 = v14[7];
        uint64_t v65 = (void *)((char *)v7 + v64);
        uint64_t v66 = (void *)((char *)v8 + v64);
        *uint64_t v65 = *v66;
        v65[1] = v66[1];
        uint64_t v67 = *(void (**)(void *, void, uint64_t, int *))(v15 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v67(v7, 0, 1, v14);
        goto LABEL_54;
      case 3u:
        *uint64_t v7 = *v8;
        uint64_t v22 = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        v7[1] = v22;
        uint64_t v23 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v24 = v23[6];
        uint64_t v25 = (char *)v7 + v24;
        uint64_t v26 = (char *)v8 + v24;
        uint64_t v27 = type metadata accessor for PuzzleStreak();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        if (v29(v26, 1, v27))
        {
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v41 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v25, v26, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        uint64_t v42 = v23[7];
        uint64_t v43 = (char *)v7 + v42;
        CGFloat v44 = (char *)v8 + v42;
        if (v29((char *)v8 + v42, 1, v27))
        {
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          uint64_t v46 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v43, v44, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v43, 0, 1, v27);
        }
        uint64_t v47 = v23[8];
        uint64_t v48 = (_OWORD *)((char *)v7 + v47);
        CGFloat v49 = (long long *)((char *)v8 + v47);
        long long v50 = *v49;
        long long v51 = v49[1];
        *(_OWORD *)((char *)v48 + 25) = *(long long *)((char *)v49 + 25);
        *uint64_t v48 = v50;
        v48[1] = v51;
        uint64_t v52 = v23[9];
        uint64_t v53 = (_OWORD *)((char *)v7 + v52);
        long long v54 = (long long *)((char *)v8 + v52);
        long long v55 = *v54;
        long long v56 = v54[1];
        *(_OWORD *)((char *)v53 + 25) = *(long long *)((char *)v54 + 25);
        *uint64_t v53 = v55;
        v53[1] = v56;
        uint64_t v57 = v23[10];
        long long v58 = (_OWORD *)((char *)v7 + v57);
        long long v59 = (long long *)((char *)v8 + v57);
        long long v60 = *v59;
        long long v61 = v59[1];
        *(_OWORD *)((char *)v58 + 25) = *(long long *)((char *)v59 + 25);
        *long long v58 = v60;
        v58[1] = v61;
        goto LABEL_54;
      default:
        uint64_t v9 = type metadata accessor for PuzzleStatisticValue(0);
        int v10 = swift_getEnumCaseMultiPayload();
        if (v10 == 5)
        {
          uint64_t v11 = type metadata accessor for PuzzleStreak();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11)) {
            goto LABEL_6;
          }
        }
        else
        {
          if (v10 != 4)
          {
            size_t v17 = *(void *)(*(void *)(v9 - 8) + 64);
LABEL_25:
            memcpy(v7, v8, v17);
            goto LABEL_54;
          }
          uint64_t v11 = type metadata accessor for PuzzleStreak();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
          {
LABEL_6:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
            goto LABEL_53;
          }
        }
        uint64_t v68 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v7, v8, v68);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
LABEL_53:
        swift_storeEnumTagMultiPayload();
LABEL_54:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

void *initializeWithTake for PuzzleStatistic(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        uint64_t v18 = type metadata accessor for PuzzleStreak();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18))
        {
LABEL_25:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v5, v6, *(void *)(*(void *)(v54 - 8) + 64));
          goto LABEL_31;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 4)
        {
          memcpy(v5, v6, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_32;
        }
        uint64_t v18 = type metadata accessor for PuzzleStreak();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18)) {
          goto LABEL_25;
        }
      }
      uint64_t v56 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 32))(v5, v6, v56);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v18);
LABEL_31:
      swift_storeEnumTagMultiPayload();
LABEL_32:
      uint64_t v57 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v58 = *(int *)(v57 + 20);
      long long v59 = (char *)v5 + v58;
      long long v60 = (char *)v6 + v58;
      int v61 = swift_getEnumCaseMultiPayload();
      if (v61 == 5)
      {
        uint64_t v62 = type metadata accessor for PuzzleStreak();
        uint64_t v63 = *(void *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v60, 1, v62))
        {
LABEL_37:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
          goto LABEL_40;
        }
      }
      else
      {
        if (v61 != 4)
        {
          memcpy(v59, v60, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_41;
        }
        uint64_t v62 = type metadata accessor for PuzzleStreak();
        uint64_t v63 = *(void *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v60, 1, v62)) {
          goto LABEL_37;
        }
      }
      uint64_t v65 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v59, v60, v65);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v59, 0, 1, v62);
LABEL_40:
      swift_storeEnumTagMultiPayload();
LABEL_41:
      uint64_t v66 = *(int *)(v57 + 24);
      uint64_t v67 = (char *)v5 + v66;
      uint64_t v6 = (void *)((char *)v6 + v66);
      int v68 = swift_getEnumCaseMultiPayload();
      if (v68 == 5)
      {
        uint64_t v69 = type metadata accessor for PuzzleStreak();
        uint64_t v70 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v70 + 48))(v6, 1, v69))
        {
LABEL_46:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v67, v6, *(void *)(*(void *)(v71 - 8) + 64));
          goto LABEL_50;
        }
      }
      else
      {
        if (v68 != 4)
        {
          size_t v15 = *(void *)(*(void *)(v16 - 8) + 64);
          uint64_t v53 = v67;
          goto LABEL_48;
        }
        uint64_t v69 = type metadata accessor for PuzzleStreak();
        uint64_t v70 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v70 + 48))(v6, 1, v69)) {
          goto LABEL_46;
        }
      }
      uint64_t v72 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v72 - 8) + 32))(v67, v6, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      goto LABEL_50;
    case 2u:
      uint64_t v12 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v13 + 48))(v6, 1, v12))
      {
        sub_1C0F37118(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
        goto LABEL_23;
      }
      uint64_t v29 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(v5, v6, v29);
      uint64_t v30 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      *(_OWORD *)((char *)v5 + v30[5]) = *(_OWORD *)((char *)v6 + v30[5]);
      uint64_t v31 = v30[6];
      uint64_t v32 = (_OWORD *)((char *)v5 + v31);
      uint64_t v33 = (_OWORD *)((char *)v6 + v31);
      long long v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      *(void *)((char *)v5 + v30[7]) = *(void *)((char *)v6 + v30[7]);
      *(void *)((char *)v5 + v30[8]) = *(void *)((char *)v6 + v30[8]);
      *(void *)((char *)v5 + v12[5]) = *(void *)((char *)v6 + v12[5]);
      *(void *)((char *)v5 + v12[6]) = *(void *)((char *)v6 + v12[6]);
      *(_OWORD *)((char *)v5 + v12[7]) = *(_OWORD *)((char *)v6 + v12[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v13 + 56))(v5, 0, 1, v12);
      goto LABEL_51;
    case 3u:
      uint64_t v20 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v20;
      *((unsigned char *)v5 + 16) = *((unsigned char *)v6 + 16);
      uint64_t v21 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v22 = v21[6];
      uint64_t v23 = (char *)v5 + v22;
      uint64_t v24 = (char *)v6 + v22;
      uint64_t v25 = type metadata accessor for PuzzleStreak();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      if (v27(v24, 1, v25))
      {
        sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v35 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v23, v24, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      uint64_t v36 = v21[7];
      id v37 = (char *)v5 + v36;
      uint64_t v38 = (char *)v6 + v36;
      if (v27((char *)v6 + v36, 1, v25))
      {
        sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v40 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      }
      uint64_t v41 = v21[8];
      uint64_t v42 = (_OWORD *)((char *)v5 + v41);
      uint64_t v43 = (_OWORD *)((char *)v6 + v41);
      long long v44 = v43[1];
      *uint64_t v42 = *v43;
      v42[1] = v44;
      *(_OWORD *)((char *)v42 + 25) = *(_OWORD *)((char *)v43 + 25);
      uint64_t v45 = v21[9];
      uint64_t v46 = (_OWORD *)((char *)v5 + v45);
      uint64_t v47 = (_OWORD *)((char *)v6 + v45);
      *(_OWORD *)((char *)v46 + 25) = *(_OWORD *)((char *)v47 + 25);
      long long v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v21[10];
      long long v50 = (_OWORD *)((char *)v5 + v49);
      long long v51 = (_OWORD *)((char *)v6 + v49);
      long long v52 = v51[1];
      _OWORD *v50 = *v51;
      v50[1] = v52;
      *(_OWORD *)((char *)v50 + 25) = *(_OWORD *)((char *)v51 + 25);
      goto LABEL_51;
    default:
      uint64_t v7 = type metadata accessor for PuzzleStatisticValue(0);
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 5)
      {
        uint64_t v9 = type metadata accessor for PuzzleStreak();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9)) {
          goto LABEL_5;
        }
      }
      else
      {
        if (v8 != 4)
        {
          size_t v15 = *(void *)(*(void *)(v7 - 8) + 64);
LABEL_23:
          uint64_t v53 = (char *)v5;
LABEL_48:
          memcpy(v53, v6, v15);
          goto LABEL_51;
        }
        uint64_t v9 = type metadata accessor for PuzzleStreak();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
        {
LABEL_5:
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_50;
        }
      }
      uint64_t v55 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 32))(v5, v6, v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
LABEL_50:
      swift_storeEnumTagMultiPayload();
LABEL_51:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void *assignWithTake for PuzzleStatistic(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    int v8 = (void *)((char *)a2 + v6);
    sub_1BFDA7418((uint64_t)a1 + v6, type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v18 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20))
          {
LABEL_26:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v7, v8, *(void *)(*(void *)(v56 - 8) + 64));
            goto LABEL_32;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
            goto LABEL_33;
          }
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20)) {
            goto LABEL_26;
          }
        }
        uint64_t v58 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 32))(v7, v8, v58);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v20);
LABEL_32:
        swift_storeEnumTagMultiPayload();
LABEL_33:
        uint64_t v59 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v60 = *(int *)(v59 + 20);
        int v61 = (char *)v7 + v60;
        uint64_t v62 = (char *)v8 + v60;
        int v63 = swift_getEnumCaseMultiPayload();
        if (v63 == 5)
        {
          uint64_t v64 = type metadata accessor for PuzzleStreak();
          uint64_t v65 = *(void *)(v64 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v62, 1, v64))
          {
LABEL_38:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
            goto LABEL_41;
          }
        }
        else
        {
          if (v63 != 4)
          {
            memcpy(v61, v62, *(void *)(*(void *)(v18 - 8) + 64));
            goto LABEL_42;
          }
          uint64_t v64 = type metadata accessor for PuzzleStreak();
          uint64_t v65 = *(void *)(v64 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v62, 1, v64)) {
            goto LABEL_38;
          }
        }
        uint64_t v67 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v61, v62, v67);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v61, 0, 1, v64);
LABEL_41:
        swift_storeEnumTagMultiPayload();
LABEL_42:
        uint64_t v68 = *(int *)(v59 + 24);
        uint64_t v69 = (char *)v7 + v68;
        int v8 = (void *)((char *)v8 + v68);
        int v70 = swift_getEnumCaseMultiPayload();
        if (v70 == 5)
        {
          uint64_t v71 = type metadata accessor for PuzzleStreak();
          uint64_t v72 = *(void *)(v71 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v72 + 48))(v8, 1, v71))
          {
LABEL_47:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v69, v8, *(void *)(*(void *)(v73 - 8) + 64));
            goto LABEL_51;
          }
        }
        else
        {
          if (v70 != 4)
          {
            size_t v17 = *(void *)(*(void *)(v18 - 8) + 64);
            uint64_t v55 = v69;
            goto LABEL_49;
          }
          uint64_t v71 = type metadata accessor for PuzzleStreak();
          uint64_t v72 = *(void *)(v71 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v72 + 48))(v8, 1, v71)) {
            goto LABEL_47;
          }
        }
        uint64_t v74 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v74 - 8) + 32))(v69, v8, v74);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
        goto LABEL_51;
      case 2u:
        uint64_t v14 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v15 = *((void *)v14 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v8, 1, v14))
        {
          sub_1C0F37118(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
          goto LABEL_24;
        }
        uint64_t v31 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32))(v7, v8, v31);
        uint64_t v32 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        *(_OWORD *)((char *)v7 + v32[5]) = *(_OWORD *)((char *)v8 + v32[5]);
        uint64_t v33 = v32[6];
        long long v34 = (_OWORD *)((char *)v7 + v33);
        uint64_t v35 = (_OWORD *)((char *)v8 + v33);
        long long v36 = v35[1];
        *long long v34 = *v35;
        v34[1] = v36;
        *(void *)((char *)v7 + v32[7]) = *(void *)((char *)v8 + v32[7]);
        *(void *)((char *)v7 + v32[8]) = *(void *)((char *)v8 + v32[8]);
        *(void *)((char *)v7 + v14[5]) = *(void *)((char *)v8 + v14[5]);
        *(void *)((char *)v7 + v14[6]) = *(void *)((char *)v8 + v14[6]);
        *(_OWORD *)((char *)v7 + v14[7]) = *(_OWORD *)((char *)v8 + v14[7]);
        (*(void (**)(void *, void, uint64_t, int *))(v15 + 56))(v7, 0, 1, v14);
        goto LABEL_52;
      case 3u:
        uint64_t v22 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v22;
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        uint64_t v23 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v24 = v23[6];
        uint64_t v25 = (char *)v7 + v24;
        uint64_t v26 = (char *)v8 + v24;
        uint64_t v27 = type metadata accessor for PuzzleStreak();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        if (v29(v26, 1, v27))
        {
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v37 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v25, v26, v37);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        uint64_t v38 = v23[7];
        uint64_t v39 = (char *)v7 + v38;
        uint64_t v40 = (char *)v8 + v38;
        if (v29((char *)v8 + v38, 1, v27))
        {
          sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v42 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v39, 0, 1, v27);
        }
        uint64_t v43 = v23[8];
        long long v44 = (_OWORD *)((char *)v7 + v43);
        uint64_t v45 = (_OWORD *)((char *)v8 + v43);
        long long v46 = v45[1];
        *long long v44 = *v45;
        v44[1] = v46;
        *(_OWORD *)((char *)v44 + 25) = *(_OWORD *)((char *)v45 + 25);
        uint64_t v47 = v23[9];
        long long v48 = (_OWORD *)((char *)v7 + v47);
        uint64_t v49 = (_OWORD *)((char *)v8 + v47);
        *(_OWORD *)((char *)v48 + 25) = *(_OWORD *)((char *)v49 + 25);
        long long v50 = v49[1];
        *long long v48 = *v49;
        v48[1] = v50;
        uint64_t v51 = v23[10];
        long long v52 = (_OWORD *)((char *)v7 + v51);
        uint64_t v53 = (_OWORD *)((char *)v8 + v51);
        long long v54 = v53[1];
        *long long v52 = *v53;
        v52[1] = v54;
        *(_OWORD *)((char *)v52 + 25) = *(_OWORD *)((char *)v53 + 25);
        goto LABEL_52;
      default:
        uint64_t v9 = type metadata accessor for PuzzleStatisticValue(0);
        int v10 = swift_getEnumCaseMultiPayload();
        if (v10 == 5)
        {
          uint64_t v11 = type metadata accessor for PuzzleStreak();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11)) {
            goto LABEL_6;
          }
        }
        else
        {
          if (v10 != 4)
          {
            size_t v17 = *(void *)(*(void *)(v9 - 8) + 64);
LABEL_24:
            uint64_t v55 = (char *)v7;
LABEL_49:
            memcpy(v55, v8, v17);
            goto LABEL_52;
          }
          uint64_t v11 = type metadata accessor for PuzzleStreak();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
          {
LABEL_6:
            sub_1C0F37118(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
            goto LABEL_51;
          }
        }
        uint64_t v57 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 32))(v7, v8, v57);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
LABEL_51:
        swift_storeEnumTagMultiPayload();
LABEL_52:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F3B6C4);
}

uint64_t sub_1C0F3B6C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PuzzleStatisticCategory(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F3B788);
}

void *sub_1C0F3B788(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PuzzleStatisticCategory(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PuzzleStatistic.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F3B8FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatistic.CodingKeys()
{
  return &type metadata for PuzzleStatistic.CodingKeys;
}

unint64_t sub_1C0F3B938()
{
  unint64_t result = qword_1EA1A9058;
  if (!qword_1EA1A9058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9058);
  }
  return result;
}

unint64_t sub_1C0F3B990()
{
  unint64_t result = qword_1EA1A9060;
  if (!qword_1EA1A9060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9060);
  }
  return result;
}

unint64_t sub_1C0F3B9E8()
{
  unint64_t result = qword_1EA1A9068;
  if (!qword_1EA1A9068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9068);
  }
  return result;
}

uint64_t FormatDecorationProviderFactory.create(content:groupItems:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v6 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDBB6C4(a1, (uint64_t)v8);
  char v9 = *(unsigned char *)(v3 + 33);
  uint64_t v10 = *(void *)(v3 + 40);
  uint64_t v11 = *(void *)(v3 + 64);
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v13 = *(void **)(v3 + 80);
  uint64_t v14 = *(void *)(v3 + 88);
  uint64_t v15 = *(void *)(v3 + 96);
  uint64_t v16 = *(void *)(v3 + 104);
  v24[0] = *(unsigned char *)(v3 + 32);
  v24[1] = v9;
  uint64_t v25 = v10;
  long long v26 = *(_OWORD *)(v3 + 48);
  uint64_t v27 = v11;
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  size_t v17 = *(void **)(v3 + 16);
  uint64_t v18 = *(void *)(v3 + 24);
  swift_bridgeObjectRetain();
  id v19 = v17;
  swift_bridgeObjectRetain();
  sub_1BFF1E730(v12, v13);
  swift_bridgeObjectRetain();
  uint64_t v20 = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BFDBB198((uint64_t)v8, (uint64_t)v19, v24, a3, v20, v18);
}

uint64_t FormatDecorationProviderFactory.deinit()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(v1, v2);
  return v0;
}

uint64_t FormatDecorationProviderFactory.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatDecorationProviderFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatDecorationProviderFactory);
}

uint64_t FeedPuzzleStatistic.init(identifier:puzzleStatistic:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - v12;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  *(_OWORD *)(a4 + 24) = xmmword_1C1538950;
  *(void *)(a4 + 40) = a1;
  *(void *)(a4 + 48) = a2;
  uint64_t v14 = type metadata accessor for FeedPuzzleStatistic();
  sub_1BFFD5824(a3, a4 + *(int *)(v14 + 32), (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  swift_getObjectType();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v25);
  uint64_t v15 = v25;
  uint64_t v16 = a3 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  sub_1BFFD5824(v16, (uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      char v18 = FCPuzzleTypeProviding.puzzleTypeTraits.getter();
      sub_1C0F421C0((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
      if ((v18 & 2) != 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1C0F421C0((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
    }
    uint64_t v19 = 0x80000000000;
    goto LABEL_8;
  }
  sub_1C0F421C0((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
LABEL_7:
  uint64_t v19 = 0x100000000000;
LABEL_8:
  uint64_t v20 = v15 | v19;
  sub_1BFFD5824(v16, (uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
  int v21 = swift_getEnumCaseMultiPayload();
  sub_1C0F421C0((uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
  if (v21 == 2) {
    uint64_t v22 = v20 | 0x1000000000000;
  }
  else {
    uint64_t v22 = v20;
  }
  uint64_t result = sub_1C0F421C0(a3, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  *(void *)a4 = v22;
  return result;
}

uint64_t FeedPuzzleStatistic.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.debugTitle.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.additionalFormatFeedItems.getter()
{
  sub_1BFEB18A0(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32));
  *(void *)(v1 + 56) = &type metadata for FeedPuzzleType;
  *(void *)(v1 + 64) = sub_1C06423C4();
  uint64_t v3 = swift_allocObject();
  *(void *)(v1 + 32) = v3;
  id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 32) = 1;
  *(_OWORD *)(v3 + 40) = xmmword_1C1538940;
  *(void *)(v3 + 56) = v5;
  *(void *)(v3 + 64) = v7;
  *(void *)(v3 + 72) = v2;
  return v1;
}

void FeedPuzzleStatistic.traits.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

void FeedPuzzleStatistic.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedPuzzleStatistic.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t FeedPuzzleStatistic.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPuzzleStatistic.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedPuzzleStatistic.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedPuzzleStatistic.puzzleStatistic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedPuzzleStatistic();
  return sub_1BFFD5824(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1C0F3C148(uint64_t a1)
{
  sub_1BFEB18A0(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  uint64_t v4 = *(void *)(v1 + *(int *)(a1 + 32));
  *(void *)(v3 + 56) = &type metadata for FeedPuzzleType;
  *(void *)(v3 + 64) = sub_1C06423C4();
  uint64_t v5 = swift_allocObject();
  *(void *)(v3 + 32) = v5;
  id v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 1;
  *(_OWORD *)(v5 + 40) = xmmword_1C1538940;
  *(void *)(v5 + 56) = v7;
  *(void *)(v5 + 64) = v9;
  *(void *)(v5 + 72) = v4;
  return v3;
}

uint64_t FeedPuzzleStatistic.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFFD5824(v1, a1, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F3C2BC@<X0>(uint64_t a1@<X8>)
{
  sub_1BFFD5824(v1, a1, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedPuzzleStatistic.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F3C398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C0F4217C(&qword_1EA1A9078);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t FeedPuzzleStatistic.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C151CA3C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_1C0F3C470()
{
  swift_getObjectType();
  id v0 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  sub_1C151E62C();

  uint64_t v1 = FCPuzzleTypeProviding.contentSelectors.getter();
  sub_1BFEEFC20(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C0F3C500()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t _s8NewsFeed0B15PuzzleStatisticV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - v8;
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48))
  {
    sub_1BFFD5824(a1, (uint64_t)&v14 - v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    sub_1BFFD5824(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  }
  else
  {
    char v11 = sub_1C1520A9C();
    sub_1BFFD5824(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    sub_1BFFD5824(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    char v12 = 0;
    if ((v11 & 1) == 0) {
      goto LABEL_9;
    }
  }
  char v12 = _s8NewsFeed15PuzzleStatisticV2eeoiySbAC_ACtFZ_0((id *)&v9[*(int *)(v4 + 32)], (id *)&v6[*(int *)(v4 + 32)]);
LABEL_9:
  sub_1C0F421C0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  sub_1C0F421C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  return v12 & 1;
}

uint64_t sub_1C0F3C6D4(uint64_t a1)
{
  uint64_t result = sub_1C0F4217C(&qword_1EA198E38);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0F3C718()
{
  return sub_1C0F4217C(&qword_1EA1A9070);
}

uint64_t sub_1C0F3C74C()
{
  return sub_1C0F4217C(&qword_1EA198E38);
}

uint64_t sub_1C0F3C780()
{
  return sub_1C0F4217C(&qword_1EA198E30);
}

void *initializeBufferWithCopyOfBuffer for FeedPuzzleStatistic(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2 + 3;
    unint64_t v9 = a2[4];
    if (v9 >= 0x11)
    {
      v4[3] = *v8;
      v4[4] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *(_OWORD *)v8;
    }
    uint64_t v11 = a2[6];
    v4[5] = a2[5];
    v4[6] = v11;
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    *(void *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v15 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v16 = &v13[v15];
    size_t v17 = (void *)(v14 + v15);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v25 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v27 = type metadata accessor for PuzzleStreak();
          uint64_t v28 = *(void *)(v27 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v17, 1, v27))
          {
LABEL_30:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v16, v17, *(void *)(*(void *)(v69 - 8) + 64));
            goto LABEL_38;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(v16, v17, *(void *)(*(void *)(v25 - 8) + 64));
            goto LABEL_39;
          }
          uint64_t v27 = type metadata accessor for PuzzleStreak();
          uint64_t v28 = *(void *)(v27 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v17, 1, v27)) {
            goto LABEL_30;
          }
        }
        uint64_t v77 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(v16, v17, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v16, 0, 1, v27);
LABEL_38:
        swift_storeEnumTagMultiPayload();
LABEL_39:
        uint64_t v78 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v79 = *(int *)(v78 + 20);
        int v80 = &v16[v79];
        uint64_t v81 = (char *)v17 + v79;
        int v82 = swift_getEnumCaseMultiPayload();
        if (v82 == 5)
        {
          uint64_t v83 = type metadata accessor for PuzzleStreak();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83))
          {
LABEL_44:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
            goto LABEL_47;
          }
        }
        else
        {
          if (v82 != 4)
          {
            memcpy(v80, v81, *(void *)(*(void *)(v25 - 8) + 64));
            goto LABEL_48;
          }
          uint64_t v83 = type metadata accessor for PuzzleStreak();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83)) {
            goto LABEL_44;
          }
        }
        uint64_t v86 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v80, v81, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
LABEL_47:
        swift_storeEnumTagMultiPayload();
LABEL_48:
        uint64_t v87 = *(int *)(v78 + 24);
        v88 = &v16[v87];
        v89 = (char *)v17 + v87;
        int v90 = swift_getEnumCaseMultiPayload();
        if (v90 == 5)
        {
          uint64_t v91 = type metadata accessor for PuzzleStreak();
          uint64_t v92 = *(void *)(v91 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v89, 1, v91))
          {
LABEL_53:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v88, v89, *(void *)(*(void *)(v93 - 8) + 64));
            goto LABEL_56;
          }
        }
        else
        {
          if (v90 != 4)
          {
            memcpy(v88, v89, *(void *)(*(void *)(v25 - 8) + 64));
            goto LABEL_57;
          }
          uint64_t v91 = type metadata accessor for PuzzleStreak();
          uint64_t v92 = *(void *)(v91 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v89, 1, v91)) {
            goto LABEL_53;
          }
        }
        uint64_t v94 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v88, v89, v94);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v88, 0, 1, v91);
        goto LABEL_56;
      case 2u:
        uint64_t v22 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v23 = *((void *)v22 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v23 + 48))(v17, 1, v22))
        {
          sub_1BFEB18A0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v38 = sub_1C151631C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v16, v17, v38);
          uint64_t v39 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v40 = v39[5];
          uint64_t v41 = &v16[v40];
          uint64_t v42 = (void *)((char *)v17 + v40);
          uint64_t v43 = v42[1];
          *(void *)uint64_t v41 = *v42;
          *((void *)v41 + 1) = v43;
          uint64_t v44 = v39[6];
          uint64_t v45 = &v16[v44];
          long long v46 = (void *)((char *)v17 + v44);
          uint64_t v47 = v46[1];
          *(void *)uint64_t v45 = *v46;
          *((void *)v45 + 1) = v47;
          long long v48 = v46 + 2;
          unint64_t v49 = v46[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v49 >> 60 == 15)
          {
            *((_OWORD *)v45 + 1) = *(_OWORD *)v48;
          }
          else
          {
            uint64_t v70 = *v48;
            sub_1BFE95820(*v48, v49);
            *((void *)v45 + 2) = v70;
            *((void *)v45 + 3) = v49;
          }
          *(void *)&v16[v39[7]] = *(void *)((char *)v17 + v39[7]);
          *(void *)&v16[v39[8]] = *(void *)((char *)v17 + v39[8]);
          *(void *)&v16[v22[5]] = *(void *)((char *)v17 + v22[5]);
          *(void *)&v16[v22[6]] = *(void *)((char *)v17 + v22[6]);
          uint64_t v71 = v22[7];
          uint64_t v72 = &v16[v71];
          uint64_t v73 = (void *)((char *)v17 + v71);
          uint64_t v74 = v73[1];
          *(void *)uint64_t v72 = *v73;
          *((void *)v72 + 1) = v74;
          uint64_t v75 = *(void (**)(char *, void, uint64_t, int *))(v23 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v75(v16, 0, 1, v22);
        }
        goto LABEL_57;
      case 3u:
        uint64_t v29 = v17[1];
        *(void *)uint64_t v16 = *v17;
        *((void *)v16 + 1) = v29;
        v16[16] = *((unsigned char *)v17 + 16);
        uint64_t v30 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v31 = v30[6];
        uint64_t v32 = &v16[v31];
        uint64_t v33 = (char *)v17 + v31;
        uint64_t v34 = type metadata accessor for PuzzleStreak();
        uint64_t v35 = *(void *)(v34 - 8);
        long long v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
        if (v36(v33, 1, v34))
        {
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          uint64_t v50 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v32, v33, v50);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        uint64_t v51 = v30[7];
        long long v52 = &v16[v51];
        uint64_t v53 = (char *)v17 + v51;
        if (v36((char *)v17 + v51, 1, v34))
        {
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          uint64_t v55 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v52, v53, v55);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v52, 0, 1, v34);
        }
        uint64_t v56 = v30[8];
        uint64_t v57 = &v16[v56];
        uint64_t v58 = (_OWORD *)((char *)v17 + v56);
        long long v59 = v58[1];
        *(_OWORD *)uint64_t v57 = *v58;
        *((_OWORD *)v57 + 1) = v59;
        *(_OWORD *)(v57 + 25) = *(_OWORD *)((char *)v58 + 25);
        uint64_t v60 = v30[9];
        int v61 = &v16[v60];
        uint64_t v62 = (_OWORD *)((char *)v17 + v60);
        *(_OWORD *)(v61 + 25) = *(_OWORD *)((char *)v62 + 25);
        long long v63 = v62[1];
        *(_OWORD *)int v61 = *v62;
        *((_OWORD *)v61 + 1) = v63;
        uint64_t v64 = v30[10];
        uint64_t v65 = &v16[v64];
        uint64_t v66 = (_OWORD *)((char *)v17 + v64);
        long long v67 = v66[1];
        *(_OWORD *)uint64_t v65 = *v66;
        *((_OWORD *)v65 + 1) = v67;
        *(_OWORD *)(v65 + 25) = *(_OWORD *)((char *)v66 + 25);
        goto LABEL_57;
      default:
        uint64_t v18 = type metadata accessor for PuzzleStatisticValue(0);
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 5)
        {
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
          {
LABEL_27:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v16, v17, *(void *)(*(void *)(v68 - 8) + 64));
            goto LABEL_56;
          }
        }
        else
        {
          if (v19 != 4)
          {
            memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
            goto LABEL_57;
          }
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20)) {
            goto LABEL_27;
          }
        }
        uint64_t v76 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v16, v17, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
LABEL_56:
        swift_storeEnumTagMultiPayload();
LABEL_57:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return v4;
}

uint64_t destroy for FeedPuzzleStatistic(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  swift_unknownObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_14;
    case 1:
      type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        uint64_t v8 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
        {
          uint64_t v9 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
        }
      }
      uint64_t v10 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v11 = v5 + *(int *)(v10 + 20);
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 5 || v12 == 4)
      {
        uint64_t v13 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13))
        {
          uint64_t v14 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v11, v14);
        }
      }
      v5 += *(int *)(v10 + 24);
LABEL_14:
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 5 || result == 4)
      {
        uint64_t v15 = type metadata accessor for PuzzleStreak();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v5, 1, v15);
        if (!result) {
          goto LABEL_28;
        }
      }
      return result;
    case 2:
      uint64_t v16 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16);
      if (!result)
      {
        uint64_t v17 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v5, v17);
        uint64_t v18 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        uint64_t v19 = v5 + *(int *)(v18 + 24);
        swift_bridgeObjectRelease();
        unint64_t v20 = *(void *)(v19 + 24);
        if (v20 >> 60 != 15) {
          sub_1BFE95664(*(void *)(v19 + 16), v20);
        }
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    case 3:
      uint64_t v21 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v22 = v5 + *(int *)(v21 + 24);
      uint64_t v23 = type metadata accessor for PuzzleStreak();
      uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
      if (!v24(v22, 1, v23))
      {
        uint64_t v25 = sub_1C151555C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v22, v25);
      }
      v5 += *(int *)(v21 + 28);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v5, 1, v23);
      if (result) {
        return result;
      }
LABEL_28:
      uint64_t v26 = sub_1C151555C();
      uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
      uint64_t result = v27(v5, v26);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (void *)(a2 + 24);
  unint64_t v8 = *(void *)(a2 + 32);
  if (v8 >= 0x11)
  {
    *(void *)(a1 + 24) = *v7;
    *(void *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v13 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v14 = (void *)(v11 + v13);
  uint64_t v15 = (void *)(v12 + v13);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        uint64_t v27 = type metadata accessor for PuzzleStreak();
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v27))
        {
LABEL_14:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v14, v15, *(void *)(*(void *)(v29 - 8) + 64));
          goto LABEL_37;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 4)
        {
          memcpy(v14, v15, *(void *)(*(void *)(v25 - 8) + 64));
          goto LABEL_38;
        }
        uint64_t v27 = type metadata accessor for PuzzleStreak();
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v27)) {
          goto LABEL_14;
        }
      }
      uint64_t v76 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v14, v15, v76);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v14, 0, 1, v27);
LABEL_37:
      swift_storeEnumTagMultiPayload();
LABEL_38:
      uint64_t v77 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v78 = *(int *)(v77 + 20);
      uint64_t v79 = (char *)v14 + v78;
      int v80 = (char *)v15 + v78;
      int v81 = swift_getEnumCaseMultiPayload();
      if (v81 == 5)
      {
        uint64_t v82 = type metadata accessor for PuzzleStreak();
        uint64_t v83 = *(void *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v82))
        {
LABEL_43:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
          goto LABEL_46;
        }
      }
      else
      {
        if (v81 != 4)
        {
          memcpy(v79, v80, *(void *)(*(void *)(v25 - 8) + 64));
          goto LABEL_47;
        }
        uint64_t v82 = type metadata accessor for PuzzleStreak();
        uint64_t v83 = *(void *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v82)) {
          goto LABEL_43;
        }
      }
      uint64_t v85 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v79, v80, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
LABEL_46:
      swift_storeEnumTagMultiPayload();
LABEL_47:
      uint64_t v86 = *(int *)(v77 + 24);
      uint64_t v87 = (char *)v14 + v86;
      v88 = (char *)v15 + v86;
      int v89 = swift_getEnumCaseMultiPayload();
      if (v89 == 5)
      {
        uint64_t v90 = type metadata accessor for PuzzleStreak();
        uint64_t v91 = *(void *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v88, 1, v90))
        {
LABEL_52:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v87, v88, *(void *)(*(void *)(v92 - 8) + 64));
          goto LABEL_55;
        }
      }
      else
      {
        if (v89 != 4)
        {
          memcpy(v87, v88, *(void *)(*(void *)(v25 - 8) + 64));
          goto LABEL_56;
        }
        uint64_t v90 = type metadata accessor for PuzzleStreak();
        uint64_t v91 = *(void *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v88, 1, v90)) {
          goto LABEL_52;
        }
      }
      uint64_t v93 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v87, v88, v93);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v87, 0, 1, v90);
      goto LABEL_55;
    case 2u:
      uint64_t v21 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v22 = *((void *)v21 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v22 + 48))(v15, 1, v21))
      {
        sub_1BFEB18A0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
        goto LABEL_27;
      }
      uint64_t v39 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v14, v15, v39);
      uint64_t v40 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v41 = v40[5];
      uint64_t v42 = (void *)((char *)v14 + v41);
      uint64_t v43 = (void *)((char *)v15 + v41);
      uint64_t v44 = v43[1];
      *uint64_t v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = v40[6];
      long long v46 = (char *)v14 + v45;
      uint64_t v47 = (void *)((char *)v15 + v45);
      uint64_t v48 = v47[1];
      *(void *)long long v46 = *v47;
      *((void *)v46 + 1) = v48;
      unint64_t v49 = v47 + 2;
      unint64_t v50 = v47[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v50 >> 60 == 15)
      {
        *((_OWORD *)v46 + 1) = *(_OWORD *)v49;
      }
      else
      {
        uint64_t v69 = *v49;
        sub_1BFE95820(*v49, v50);
        *((void *)v46 + 2) = v69;
        *((void *)v46 + 3) = v50;
      }
      *(void *)((char *)v14 + v40[7]) = *(void *)((char *)v15 + v40[7]);
      *(void *)((char *)v14 + v40[8]) = *(void *)((char *)v15 + v40[8]);
      *(void *)((char *)v14 + v21[5]) = *(void *)((char *)v15 + v21[5]);
      *(void *)((char *)v14 + v21[6]) = *(void *)((char *)v15 + v21[6]);
      uint64_t v70 = v21[7];
      uint64_t v71 = (void *)((char *)v14 + v70);
      uint64_t v72 = (void *)((char *)v15 + v70);
      uint64_t v73 = v72[1];
      void *v71 = *v72;
      v71[1] = v73;
      uint64_t v74 = *(void (**)(void *, void, uint64_t, int *))(v22 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v74(v14, 0, 1, v21);
      goto LABEL_56;
    case 3u:
      uint64_t v30 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v30;
      *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
      uint64_t v31 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v32 = v31[6];
      uint64_t v33 = (char *)v14 + v32;
      uint64_t v34 = (char *)v15 + v32;
      uint64_t v35 = type metadata accessor for PuzzleStreak();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      if (v37(v34, 1, v35))
      {
        sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v51 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v33, v34, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      uint64_t v52 = v31[7];
      uint64_t v53 = (char *)v14 + v52;
      uint64_t v54 = (char *)v15 + v52;
      if (v37((char *)v15 + v52, 1, v35))
      {
        sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v56 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v53, v54, v56);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v53, 0, 1, v35);
      }
      uint64_t v57 = v31[8];
      uint64_t v58 = (_OWORD *)((char *)v14 + v57);
      long long v59 = (_OWORD *)((char *)v15 + v57);
      long long v60 = v59[1];
      *uint64_t v58 = *v59;
      v58[1] = v60;
      *(_OWORD *)((char *)v58 + 25) = *(_OWORD *)((char *)v59 + 25);
      uint64_t v61 = v31[9];
      uint64_t v62 = (_OWORD *)((char *)v14 + v61);
      long long v63 = (_OWORD *)((char *)v15 + v61);
      *(_OWORD *)((char *)v62 + 25) = *(_OWORD *)((char *)v63 + 25);
      long long v64 = v63[1];
      *uint64_t v62 = *v63;
      v62[1] = v64;
      uint64_t v65 = v31[10];
      uint64_t v66 = (_OWORD *)((char *)v14 + v65);
      long long v67 = (_OWORD *)((char *)v15 + v65);
      long long v68 = v67[1];
      *uint64_t v66 = *v67;
      v66[1] = v68;
      *(_OWORD *)((char *)v66 + 25) = *(_OWORD *)((char *)v67 + 25);
      goto LABEL_56;
    default:
      uint64_t v16 = type metadata accessor for PuzzleStatisticValue(0);
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 5)
      {
        uint64_t v18 = type metadata accessor for PuzzleStreak();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18)) {
          goto LABEL_8;
        }
      }
      else
      {
        if (v17 != 4)
        {
          size_t v24 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_27:
          memcpy(v14, v15, v24);
          goto LABEL_56;
        }
        uint64_t v18 = type metadata accessor for PuzzleStreak();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
        {
LABEL_8:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_55;
        }
      }
      uint64_t v75 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v14, v15, v75);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
LABEL_55:
      swift_storeEnumTagMultiPayload();
LABEL_56:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithCopy for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = (_OWORD *)(a1 + 24);
  unint64_t v8 = (_OWORD *)(a2 + 24);
  unint64_t v9 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) < 0x11uLL)
  {
    if (v9 >= 0x11)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 < 0x11)
  {
    sub_1C01A7564(a1 + 24);
LABEL_6:
    *uint64_t v7 = *v8;
    goto LABEL_8;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v13 = type metadata accessor for PuzzleStatistic();
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(v13 + 20);
    uint64_t v15 = (void *)(v11 + v14);
    uint64_t v16 = (void *)(v12 + v14);
    sub_1C0F421C0((uint64_t)v15, type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v26 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v28 = type metadata accessor for PuzzleStreak();
          uint64_t v29 = *(void *)(v28 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v28))
          {
LABEL_34:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v15, v16, *(void *)(*(void *)(v70 - 8) + 64));
            goto LABEL_42;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v26 - 8) + 64));
            goto LABEL_43;
          }
          uint64_t v28 = type metadata accessor for PuzzleStreak();
          uint64_t v29 = *(void *)(v28 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v28)) {
            goto LABEL_34;
          }
        }
        uint64_t v77 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(v15, v16, v77);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v15, 0, 1, v28);
LABEL_42:
        swift_storeEnumTagMultiPayload();
LABEL_43:
        uint64_t v78 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v79 = *(int *)(v78 + 20);
        int v80 = (char *)v15 + v79;
        int v81 = (char *)v16 + v79;
        int v82 = swift_getEnumCaseMultiPayload();
        if (v82 == 5)
        {
          uint64_t v83 = type metadata accessor for PuzzleStreak();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83))
          {
LABEL_48:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
            goto LABEL_51;
          }
        }
        else
        {
          if (v82 != 4)
          {
            memcpy(v80, v81, *(void *)(*(void *)(v26 - 8) + 64));
            goto LABEL_52;
          }
          uint64_t v83 = type metadata accessor for PuzzleStreak();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83)) {
            goto LABEL_48;
          }
        }
        uint64_t v86 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v80, v81, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
LABEL_51:
        swift_storeEnumTagMultiPayload();
LABEL_52:
        uint64_t v87 = *(int *)(v78 + 24);
        v88 = (char *)v15 + v87;
        int v89 = (char *)v16 + v87;
        int v90 = swift_getEnumCaseMultiPayload();
        if (v90 == 5)
        {
          uint64_t v91 = type metadata accessor for PuzzleStreak();
          uint64_t v92 = *(void *)(v91 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v89, 1, v91))
          {
LABEL_57:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v88, v89, *(void *)(*(void *)(v93 - 8) + 64));
            goto LABEL_60;
          }
        }
        else
        {
          if (v90 != 4)
          {
            memcpy(v88, v89, *(void *)(*(void *)(v26 - 8) + 64));
            goto LABEL_61;
          }
          uint64_t v91 = type metadata accessor for PuzzleStreak();
          uint64_t v92 = *(void *)(v91 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v89, 1, v91)) {
            goto LABEL_57;
          }
        }
        uint64_t v94 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v88, v89, v94);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v88, 0, 1, v91);
        goto LABEL_60;
      case 2u:
        uint64_t v22 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v23 = *((void *)v22 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v23 + 48))(v16, 1, v22))
        {
          sub_1BFEB18A0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
          goto LABEL_32;
        }
        uint64_t v39 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v15, v16, v39);
        uint64_t v40 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v41 = v40[5];
        uint64_t v42 = (void *)((char *)v15 + v41);
        uint64_t v43 = (void *)((char *)v16 + v41);
        *uint64_t v42 = *v43;
        v42[1] = v43[1];
        uint64_t v44 = v40[6];
        uint64_t v45 = (char *)v15 + v44;
        long long v46 = (void *)((char *)v16 + v44);
        *(void *)uint64_t v45 = *v46;
        *((void *)v45 + 1) = v46[1];
        uint64_t v47 = v46 + 2;
        unint64_t v48 = v46[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v48 >> 60 == 15)
        {
          *((_OWORD *)v45 + 1) = *(_OWORD *)v47;
        }
        else
        {
          uint64_t v71 = *v47;
          sub_1BFE95820(*v47, v48);
          *((void *)v45 + 2) = v71;
          *((void *)v45 + 3) = v48;
        }
        *(void *)((char *)v15 + v40[7]) = *(void *)((char *)v16 + v40[7]);
        *(void *)((char *)v15 + v40[8]) = *(void *)((char *)v16 + v40[8]);
        *(void *)((char *)v15 + v22[5]) = *(void *)((char *)v16 + v22[5]);
        *(void *)((char *)v15 + v22[6]) = *(void *)((char *)v16 + v22[6]);
        uint64_t v72 = v22[7];
        uint64_t v73 = (void *)((char *)v15 + v72);
        uint64_t v74 = (void *)((char *)v16 + v72);
        *uint64_t v73 = *v74;
        v73[1] = v74[1];
        uint64_t v75 = *(void (**)(void *, void, uint64_t, int *))(v23 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v75(v15, 0, 1, v22);
        goto LABEL_61;
      case 3u:
        void *v15 = *v16;
        uint64_t v30 = v16[1];
        *((unsigned char *)v15 + 16) = *((unsigned char *)v16 + 16);
        v15[1] = v30;
        uint64_t v31 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v32 = v31[6];
        uint64_t v33 = (char *)v15 + v32;
        uint64_t v34 = (char *)v16 + v32;
        uint64_t v35 = type metadata accessor for PuzzleStreak();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
        if (v37(v34, 1, v35))
        {
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v49 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v33, v34, v49);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        uint64_t v50 = v31[7];
        uint64_t v51 = (char *)v15 + v50;
        uint64_t v52 = (char *)v16 + v50;
        if (v37((char *)v16 + v50, 1, v35))
        {
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          uint64_t v54 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v51, v52, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v51, 0, 1, v35);
        }
        uint64_t v55 = v31[8];
        uint64_t v56 = (_OWORD *)((char *)v15 + v55);
        uint64_t v57 = (long long *)((char *)v16 + v55);
        long long v58 = *v57;
        long long v59 = v57[1];
        *(_OWORD *)((char *)v56 + 25) = *(long long *)((char *)v57 + 25);
        *uint64_t v56 = v58;
        v56[1] = v59;
        uint64_t v60 = v31[9];
        uint64_t v61 = (_OWORD *)((char *)v15 + v60);
        uint64_t v62 = (long long *)((char *)v16 + v60);
        long long v63 = *v62;
        long long v64 = v62[1];
        *(_OWORD *)((char *)v61 + 25) = *(long long *)((char *)v62 + 25);
        _OWORD *v61 = v63;
        v61[1] = v64;
        uint64_t v65 = v31[10];
        uint64_t v66 = (_OWORD *)((char *)v15 + v65);
        long long v67 = (long long *)((char *)v16 + v65);
        long long v68 = *v67;
        long long v69 = v67[1];
        *(_OWORD *)((char *)v66 + 25) = *(long long *)((char *)v67 + 25);
        *uint64_t v66 = v68;
        v66[1] = v69;
        goto LABEL_61;
      default:
        uint64_t v17 = type metadata accessor for PuzzleStatisticValue(0);
        int v18 = swift_getEnumCaseMultiPayload();
        if (v18 == 5)
        {
          uint64_t v19 = type metadata accessor for PuzzleStreak();
          uint64_t v20 = *(void *)(v19 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19)) {
            goto LABEL_13;
          }
        }
        else
        {
          if (v18 != 4)
          {
            size_t v25 = *(void *)(*(void *)(v17 - 8) + 64);
LABEL_32:
            memcpy(v15, v16, v25);
            goto LABEL_61;
          }
          uint64_t v19 = type metadata accessor for PuzzleStreak();
          uint64_t v20 = *(void *)(v19 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
          {
LABEL_13:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
            goto LABEL_60;
          }
        }
        uint64_t v76 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v15, v16, v76);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
LABEL_60:
        swift_storeEnumTagMultiPayload();
LABEL_61:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  uint64_t v8 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  unint64_t v9 = (void *)(v6 + v8);
  uint64_t v10 = (void *)(v7 + v8);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v20 = type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        uint64_t v22 = type metadata accessor for PuzzleStreak();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22))
        {
LABEL_25:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v9, v10, *(void *)(*(void *)(v58 - 8) + 64));
          goto LABEL_31;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 4)
        {
          memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_32;
        }
        uint64_t v22 = type metadata accessor for PuzzleStreak();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22)) {
          goto LABEL_25;
        }
      }
      uint64_t v60 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 32))(v9, v10, v60);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v22);
LABEL_31:
      swift_storeEnumTagMultiPayload();
LABEL_32:
      uint64_t v61 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v62 = *(int *)(v61 + 20);
      long long v63 = (char *)v9 + v62;
      long long v64 = (char *)v10 + v62;
      int v65 = swift_getEnumCaseMultiPayload();
      if (v65 == 5)
      {
        uint64_t v66 = type metadata accessor for PuzzleStreak();
        uint64_t v67 = *(void *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v66))
        {
LABEL_37:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
          goto LABEL_40;
        }
      }
      else
      {
        if (v65 != 4)
        {
          memcpy(v63, v64, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_41;
        }
        uint64_t v66 = type metadata accessor for PuzzleStreak();
        uint64_t v67 = *(void *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v66)) {
          goto LABEL_37;
        }
      }
      uint64_t v69 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v63, v64, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
LABEL_40:
      swift_storeEnumTagMultiPayload();
LABEL_41:
      uint64_t v70 = *(int *)(v61 + 24);
      uint64_t v71 = (char *)v9 + v70;
      uint64_t v10 = (void *)((char *)v10 + v70);
      int v72 = swift_getEnumCaseMultiPayload();
      if (v72 == 5)
      {
        uint64_t v73 = type metadata accessor for PuzzleStreak();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v74 + 48))(v10, 1, v73))
        {
LABEL_46:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v71, v10, *(void *)(*(void *)(v75 - 8) + 64));
          goto LABEL_50;
        }
      }
      else
      {
        if (v72 != 4)
        {
          size_t v19 = *(void *)(*(void *)(v20 - 8) + 64);
          uint64_t v57 = v71;
          goto LABEL_48;
        }
        uint64_t v73 = type metadata accessor for PuzzleStreak();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v74 + 48))(v10, 1, v73)) {
          goto LABEL_46;
        }
      }
      uint64_t v76 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v76 - 8) + 32))(v71, v10, v76);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      goto LABEL_50;
    case 2u:
      uint64_t v16 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v17 = *((void *)v16 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v10, 1, v16))
      {
        sub_1BFEB18A0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
        goto LABEL_23;
      }
      uint64_t v33 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(v9, v10, v33);
      uint64_t v34 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      *(_OWORD *)((char *)v9 + v34[5]) = *(_OWORD *)((char *)v10 + v34[5]);
      uint64_t v35 = v34[6];
      uint64_t v36 = (_OWORD *)((char *)v9 + v35);
      uint64_t v37 = (_OWORD *)((char *)v10 + v35);
      long long v38 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v38;
      *(void *)((char *)v9 + v34[7]) = *(void *)((char *)v10 + v34[7]);
      *(void *)((char *)v9 + v34[8]) = *(void *)((char *)v10 + v34[8]);
      *(void *)((char *)v9 + v16[5]) = *(void *)((char *)v10 + v16[5]);
      *(void *)((char *)v9 + v16[6]) = *(void *)((char *)v10 + v16[6]);
      *(_OWORD *)((char *)v9 + v16[7]) = *(_OWORD *)((char *)v10 + v16[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v9, 0, 1, v16);
      goto LABEL_51;
    case 3u:
      uint64_t v24 = v10[1];
      *unint64_t v9 = *v10;
      v9[1] = v24;
      *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
      size_t v25 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v26 = v25[6];
      uint64_t v27 = (char *)v9 + v26;
      uint64_t v28 = (char *)v10 + v26;
      uint64_t v29 = type metadata accessor for PuzzleStreak();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      if (v31(v28, 1, v29))
      {
        sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v39 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v27, v28, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v40 = v25[7];
      uint64_t v41 = (char *)v9 + v40;
      uint64_t v42 = (char *)v10 + v40;
      if (v31((char *)v10 + v40, 1, v29))
      {
        sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        uint64_t v44 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v41, v42, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v41, 0, 1, v29);
      }
      uint64_t v45 = v25[8];
      long long v46 = (_OWORD *)((char *)v9 + v45);
      uint64_t v47 = (_OWORD *)((char *)v10 + v45);
      long long v48 = v47[1];
      *long long v46 = *v47;
      v46[1] = v48;
      *(_OWORD *)((char *)v46 + 25) = *(_OWORD *)((char *)v47 + 25);
      uint64_t v49 = v25[9];
      uint64_t v50 = (_OWORD *)((char *)v9 + v49);
      uint64_t v51 = (_OWORD *)((char *)v10 + v49);
      *(_OWORD *)((char *)v50 + 25) = *(_OWORD *)((char *)v51 + 25);
      long long v52 = v51[1];
      _OWORD *v50 = *v51;
      v50[1] = v52;
      uint64_t v53 = v25[10];
      uint64_t v54 = (_OWORD *)((char *)v9 + v53);
      uint64_t v55 = (_OWORD *)((char *)v10 + v53);
      long long v56 = v55[1];
      *uint64_t v54 = *v55;
      v54[1] = v56;
      *(_OWORD *)((char *)v54 + 25) = *(_OWORD *)((char *)v55 + 25);
      goto LABEL_51;
    default:
      uint64_t v11 = type metadata accessor for PuzzleStatisticValue(0);
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 5)
      {
        uint64_t v13 = type metadata accessor for PuzzleStreak();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13)) {
          goto LABEL_5;
        }
      }
      else
      {
        if (v12 != 4)
        {
          size_t v19 = *(void *)(*(void *)(v11 - 8) + 64);
LABEL_23:
          uint64_t v57 = (char *)v9;
LABEL_48:
          memcpy(v57, v10, v19);
          goto LABEL_51;
        }
        uint64_t v13 = type metadata accessor for PuzzleStreak();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13))
        {
LABEL_5:
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_50;
        }
      }
      uint64_t v59 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 32))(v9, v10, v59);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
LABEL_50:
      swift_storeEnumTagMultiPayload();
LABEL_51:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithTake for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (_OWORD *)(a1 + 24);
  uint64_t v8 = (_OWORD *)(a2 + 24);
  if (*(void *)(a1 + 32) < 0x11uLL) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 32);
  if (v9 < 0x11)
  {
    sub_1C01A7564((uint64_t)v7);
LABEL_4:
    *uint64_t v7 = *v8;
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)v8;
  *(void *)(a1 + 32) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_unknownObjectRelease();
  uint64_t v14 = type metadata accessor for PuzzleStatistic();
  if (a1 != a2)
  {
    uint64_t v15 = *(int *)(v14 + 20);
    uint64_t v16 = (void *)(v12 + v15);
    uint64_t v17 = (void *)(v13 + v15);
    sub_1C0F421C0(v12 + v15, type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v29 = type metadata accessor for PuzzleStreak();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v17, 1, v29))
          {
LABEL_31:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v16, v17, *(void *)(*(void *)(v65 - 8) + 64));
            goto LABEL_37;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(v16, v17, *(void *)(*(void *)(v27 - 8) + 64));
            goto LABEL_38;
          }
          uint64_t v29 = type metadata accessor for PuzzleStreak();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v17, 1, v29)) {
            goto LABEL_31;
          }
        }
        uint64_t v67 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 32))(v16, v17, v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v16, 0, 1, v29);
LABEL_37:
        swift_storeEnumTagMultiPayload();
LABEL_38:
        uint64_t v68 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v69 = *(int *)(v68 + 20);
        uint64_t v70 = (char *)v16 + v69;
        uint64_t v71 = (char *)v17 + v69;
        int v72 = swift_getEnumCaseMultiPayload();
        if (v72 == 5)
        {
          uint64_t v73 = type metadata accessor for PuzzleStreak();
          uint64_t v74 = *(void *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v71, 1, v73))
          {
LABEL_43:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
            goto LABEL_46;
          }
        }
        else
        {
          if (v72 != 4)
          {
            memcpy(v70, v71, *(void *)(*(void *)(v27 - 8) + 64));
            goto LABEL_47;
          }
          uint64_t v73 = type metadata accessor for PuzzleStreak();
          uint64_t v74 = *(void *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v71, 1, v73)) {
            goto LABEL_43;
          }
        }
        uint64_t v76 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v70, v71, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v70, 0, 1, v73);
LABEL_46:
        swift_storeEnumTagMultiPayload();
LABEL_47:
        uint64_t v77 = *(int *)(v68 + 24);
        uint64_t v78 = (char *)v16 + v77;
        uint64_t v17 = (void *)((char *)v17 + v77);
        int v79 = swift_getEnumCaseMultiPayload();
        if (v79 == 5)
        {
          uint64_t v80 = type metadata accessor for PuzzleStreak();
          uint64_t v81 = *(void *)(v80 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v81 + 48))(v17, 1, v80))
          {
LABEL_52:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v78, v17, *(void *)(*(void *)(v82 - 8) + 64));
            goto LABEL_56;
          }
        }
        else
        {
          if (v79 != 4)
          {
            size_t v26 = *(void *)(*(void *)(v27 - 8) + 64);
            long long v64 = v78;
            goto LABEL_54;
          }
          uint64_t v80 = type metadata accessor for PuzzleStreak();
          uint64_t v81 = *(void *)(v80 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v81 + 48))(v17, 1, v80)) {
            goto LABEL_52;
          }
        }
        uint64_t v83 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v83 - 8) + 32))(v78, v17, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
        goto LABEL_56;
      case 2u:
        uint64_t v23 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v24 = *((void *)v23 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v24 + 48))(v17, 1, v23))
        {
          sub_1BFEB18A0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v26 = *(void *)(*(void *)(v25 - 8) + 64);
          goto LABEL_29;
        }
        uint64_t v40 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 32))(v16, v17, v40);
        uint64_t v41 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        *(_OWORD *)((char *)v16 + v41[5]) = *(_OWORD *)((char *)v17 + v41[5]);
        uint64_t v42 = v41[6];
        uint64_t v43 = (_OWORD *)((char *)v16 + v42);
        uint64_t v44 = (_OWORD *)((char *)v17 + v42);
        long long v45 = v44[1];
        *uint64_t v43 = *v44;
        v43[1] = v45;
        *(void *)((char *)v16 + v41[7]) = *(void *)((char *)v17 + v41[7]);
        *(void *)((char *)v16 + v41[8]) = *(void *)((char *)v17 + v41[8]);
        *(void *)((char *)v16 + v23[5]) = *(void *)((char *)v17 + v23[5]);
        *(void *)((char *)v16 + v23[6]) = *(void *)((char *)v17 + v23[6]);
        *(_OWORD *)((char *)v16 + v23[7]) = *(_OWORD *)((char *)v17 + v23[7]);
        (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v16, 0, 1, v23);
        goto LABEL_57;
      case 3u:
        uint64_t v31 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v31;
        *((unsigned char *)v16 + 16) = *((unsigned char *)v17 + 16);
        uint64_t v32 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v33 = v32[6];
        uint64_t v34 = (char *)v16 + v33;
        uint64_t v35 = (char *)v17 + v33;
        uint64_t v36 = type metadata accessor for PuzzleStreak();
        uint64_t v37 = *(void *)(v36 - 8);
        long long v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
        if (v38(v35, 1, v36))
        {
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v46 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v34, v35, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        uint64_t v47 = v32[7];
        long long v48 = (char *)v16 + v47;
        uint64_t v49 = (char *)v17 + v47;
        if (v38((char *)v17 + v47, 1, v36))
        {
          sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v51 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v48, 0, 1, v36);
        }
        uint64_t v52 = v32[8];
        uint64_t v53 = (_OWORD *)((char *)v16 + v52);
        uint64_t v54 = (_OWORD *)((char *)v17 + v52);
        long long v55 = v54[1];
        *uint64_t v53 = *v54;
        v53[1] = v55;
        *(_OWORD *)((char *)v53 + 25) = *(_OWORD *)((char *)v54 + 25);
        uint64_t v56 = v32[9];
        uint64_t v57 = (_OWORD *)((char *)v16 + v56);
        uint64_t v58 = (_OWORD *)((char *)v17 + v56);
        *(_OWORD *)((char *)v57 + 25) = *(_OWORD *)((char *)v58 + 25);
        long long v59 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v59;
        uint64_t v60 = v32[10];
        uint64_t v61 = (_OWORD *)((char *)v16 + v60);
        uint64_t v62 = (_OWORD *)((char *)v17 + v60);
        long long v63 = v62[1];
        _OWORD *v61 = *v62;
        v61[1] = v63;
        *(_OWORD *)((char *)v61 + 25) = *(_OWORD *)((char *)v62 + 25);
        goto LABEL_57;
      default:
        uint64_t v18 = type metadata accessor for PuzzleStatisticValue(0);
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 5)
        {
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20)) {
            goto LABEL_11;
          }
        }
        else
        {
          if (v19 != 4)
          {
            size_t v26 = *(void *)(*(void *)(v18 - 8) + 64);
LABEL_29:
            long long v64 = (char *)v16;
LABEL_54:
            memcpy(v64, v17, v26);
            goto LABEL_57;
          }
          uint64_t v20 = type metadata accessor for PuzzleStreak();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
          {
LABEL_11:
            sub_1BFEB18A0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
            goto LABEL_56;
          }
        }
        uint64_t v66 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 32))(v16, v17, v66);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
LABEL_56:
        swift_storeEnumTagMultiPayload();
LABEL_57:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F42010);
}

uint64_t sub_1C0F42010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PuzzleStatistic();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F420D4);
}

uint64_t sub_1C0F420D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PuzzleStatistic();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F4217C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FeedPuzzleStatistic();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F421C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0F42224(unint64_t a1, uint64_t a2, char a3)
{
  sub_1C0D03AB4(0);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)&v22 - v8;
  if ((a3 & 1) == 0)
  {
    sub_1C0F426B0(a2, (uint64_t)&v22 - v8);
    uint64_t v13 = type metadata accessor for DebugFormatPackagesDelta();
    int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v9, 1, v13);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    if (v14 == 1)
    {
      sub_1C0F42714((uint64_t)v9, (uint64_t (*)(void))sub_1C0D03AB4);
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_24;
    }
    if (v9[16])
    {
      if (v9[16] != 1)
      {
        a1 = MEMORY[0x1E4FBC860];
        goto LABEL_23;
      }
      a1 = *(void *)&v9[*(int *)(v13 + 20)];
    }
    else
    {
      a1 = *(void *)v9;
    }
    swift_bridgeObjectRetain();
LABEL_23:
    uint64_t result = sub_1C0F42714((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatPackagesDelta);
LABEL_24:
    uint64_t v23 = v15;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C15204BC();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v18) {
        goto LABEL_40;
      }
    }
    if (v18 >= 1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (uint64_t i = 0; i != v18; ++i)
        {
          if (*(unsigned char *)(*(void *)(MEMORY[0x1C18C7CB0](i, a1) + 16)
                        + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) == 5)
          {
            swift_unknownObjectRelease();
          }
          else
          {
            sub_1C152025C();
            sub_1C152029C();
            sub_1C15202AC();
            sub_1C152026C();
          }
        }
      }
      else
      {
        uint64_t v20 = 0;
        uint64_t v21 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
        do
        {
          if (*(unsigned char *)(*(void *)(*(void *)(a1 + 8 * v20 + 32) + 16) + v21) != 5)
          {
            swift_retain();
            sub_1C152025C();
            sub_1C152029C();
            sub_1C15202AC();
            sub_1C152026C();
            uint64_t v21 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
          }
          ++v20;
        }
        while (v18 != v20);
      }
      goto LABEL_40;
    }
    goto LABEL_42;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v10 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    return v23;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_40;
  }
LABEL_4:
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v10; ++j)
      {
        if (*(unsigned char *)(*(void *)(MEMORY[0x1C18C7CB0](j, a1) + 16)
                      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) == 5)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
        }
      }
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v17 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
      do
      {
        if (*(unsigned char *)(*(void *)(*(void *)(a1 + 8 * v16 + 32) + 16) + v17) != 5)
        {
          swift_retain();
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
          uint64_t v17 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
        }
        ++v16;
      }
      while (v10 != v16);
    }
    goto LABEL_40;
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C0F42618()
{
  return 0x69706D6F6365727BLL;
}

uint64_t sub_1C0F426B0(uint64_t a1, uint64_t a2)
{
  sub_1C0D03AB4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F42714(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatCompilerMetadata(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F42840);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCompilerMetadata()
{
  return &type metadata for DebugFormatCompilerMetadata;
}

uint64_t sub_1C0F42878(void *a1, uint64_t a2)
{
  sub_1C0F42E94(0, &qword_1EA1A90A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F42D94();
  sub_1C1520F0C();
  v10[1] = a2;
  sub_1C0F42DE8();
  sub_1C0F42EF8(&qword_1EA1A90B0, (void (*)(void))sub_1C0F42F64);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0F42A08()
{
  return 0x6974704F6E6F736ALL;
}

uint64_t sub_1C0F42A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6974704F6E6F736ALL && a2 == 0xEB00000000736E6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0F42AD8(uint64_t a1)
{
  unint64_t v2 = sub_1C0F42D94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F42B14(uint64_t a1)
{
  unint64_t v2 = sub_1C0F42D94();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C0F42B50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C0F42BC4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0F42B7C(void *a1)
{
  return sub_1C0F42878(a1, *v1);
}

BOOL sub_1C0F42B98(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DFAAC(*a1, *a2);
}

void sub_1C0F42BA4()
{
}

ValueMetadata *type metadata accessor for DebugFormatCodingOptions()
{
  return &type metadata for DebugFormatCodingOptions;
}

void *sub_1C0F42BC4(void *a1)
{
  sub_1C0F42E94(0, &qword_1EA1A9080, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  unint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F42D94();
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C0F42DE8();
    sub_1C0F42EF8(&qword_1EA1A9098, (void (*)(void))sub_1C0F42E40);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v8 = (void *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1C0F42D94()
{
  unint64_t result = qword_1EA1A9088;
  if (!qword_1EA1A9088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9088);
  }
  return result;
}

void sub_1C0F42DE8()
{
  if (!qword_1EA1A9090)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9090);
    }
  }
}

unint64_t sub_1C0F42E40()
{
  unint64_t result = qword_1EA1A90A0;
  if (!qword_1EA1A90A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A90A0);
  }
  return result;
}

void sub_1C0F42E94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0F42D94();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatCodingOptions.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F42EF8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F42DE8();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0F42F64()
{
  unint64_t result = qword_1EA1A90B8;
  if (!qword_1EA1A90B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A90B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatCodingOptions.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0F43054);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCodingOptions.CodingKeys()
{
  return &type metadata for DebugFormatCodingOptions.CodingKeys;
}

unint64_t sub_1C0F43090()
{
  unint64_t result = qword_1EA1A90C0;
  if (!qword_1EA1A90C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A90C0);
  }
  return result;
}

unint64_t sub_1C0F430E8()
{
  unint64_t result = qword_1EA1A90C8;
  if (!qword_1EA1A90C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A90C8);
  }
  return result;
}

unint64_t sub_1C0F43140()
{
  unint64_t result = qword_1EA1A90D0;
  if (!qword_1EA1A90D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A90D0);
  }
  return result;
}

uint64_t destroy for DebugFormatFileTreeItemView()
{
  swift_release();
  return swift_release();
}

void *initializeWithCopy for DebugFormatFileTreeItemView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DebugFormatFileTreeItemView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for DebugFormatFileTreeItemView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFileTreeItemView()
{
  return &type metadata for DebugFormatFileTreeItemView;
}

uint64_t sub_1C0F432D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0F432F4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C151CF6C();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C0F43374()
{
  return sub_1C151CF7C();
}

uint64_t sub_1C0F433E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  sub_1C0F44F30();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = (unint64_t *)(a4 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  if (!(*v16 >> 62))
  {
    if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t v25 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v9);
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_8;
  }
LABEL_3:
  unint64_t v17 = *v16;
  if ((*v16 & 0x8000000000000000) != 0 || (v17 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v18 = (uint64_t)sub_1C00B3D64(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  uint64_t v29 = v9;
  uint64_t v30 = v15;
  uint64_t v31 = v12;
  uint64_t v32 = a5;
  uint64_t v35 = v18;
  sub_1C111947C(&v35);
  swift_bridgeObjectRelease();
  int v19 = (void *)swift_allocObject();
  uint64_t v20 = v33;
  uint64_t v21 = v34;
  v19[2] = a1;
  v19[3] = v21;
  v19[4] = v20;
  v19[5] = a4;
  sub_1C0F44ECC(0, &qword_1EA196790, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, MEMORY[0x1E4FBB320]);
  sub_1C151635C();
  sub_1C0F459E0(0, &qword_1EA1A9128, MEMORY[0x1E4F3D750]);
  sub_1C0F45454();
  sub_1C0F456FC();
  sub_1C0F46374(&qword_1EA1A91F0, (void (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem);
  swift_retain();
  swift_retain();
  uint64_t v22 = v31;
  sub_1C151E13C();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v9 = v29;
  uint64_t v24 = v30;
  v23(v30, v22, v29);
  a5 = v32;
  v23(v32, v24, v9);
  uint64_t v25 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v9);
}

uint64_t sub_1C0F43744@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v65 = a4;
  uint64_t v64 = a2;
  sub_1C0F459E0(0, &qword_1EA1A91F8, MEMORY[0x1E4F3D748]);
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v56 - v12);
  sub_1C0F450FC();
  uint64_t v63 = v14;
  uint64_t v62 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v66 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F45050();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v61 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v56 - v20;
  uint64_t v22 = *a1;
  uint64_t v23 = (void *)(v22 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  if (*v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    type metadata accessor for DebugFormatFileTreeModel();
    sub_1C0F46374((unint64_t *)&qword_1EA1A63D8, (void (*)(uint64_t))type metadata accessor for DebugFormatFileTreeModel);
    swift_retain();
    swift_retain();
    uint64_t v24 = sub_1C151DCBC();
    uint64_t v26 = v25;
    type metadata accessor for DebugFormatFileTreeItem();
    sub_1C0F46374(&qword_1EA1A90D8, (void (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem);
    uint64_t v27 = sub_1C151DCBC();
    *uint64_t v13 = v24;
    v13[1] = v26;
    _OWORD v13[2] = v27;
    v13[3] = v28;
    swift_storeEnumTagMultiPayload();
    sub_1C0F45790();
    sub_1C0F45948();
    return sub_1C151DECC();
  }
  uint64_t v60 = v21;
  v56[0] = v17;
  v56[1] = v11;
  uint64_t v57 = v13;
  uint64_t v58 = a6;
  uint64_t v31 = sub_1C151DDCC();
  uint64_t v32 = v64;
  uint64_t v33 = v65;
  sub_1C0F43E04(a3, v22, (uint64_t *)&v67);
  char v34 = v68[16];
  uint64_t v35 = *(void *)v69;
  long long v36 = *(_OWORD *)&v69[8];
  long long v37 = *(_OWORD *)v70;
  long long v38 = *(_OWORD *)&v70[16];
  long long v40 = v67;
  long long v39 = *(_OWORD *)v68;
  long long v67 = (unint64_t)v31;
  v68[0] = 1;
  *(_OWORD *)&v68[8] = v40;
  *(_OWORD *)uint64_t v69 = v39;
  v69[16] = v34;
  *(void *)uint64_t v70 = v35;
  *(_OWORD *)&v70[8] = v36;
  *(_OWORD *)&v70[24] = v37;
  long long v71 = v38;
  uint64_t v41 = (void *)swift_allocObject();
  v41[2] = v22;
  v41[3] = v32;
  v41[4] = a3;
  v41[5] = v33;
  uint64_t v59 = a3;
  v41[6] = a5;
  sub_1C0F451F4(0, &qword_1EA1A9140, (uint64_t (*)(uint64_t))sub_1C0F45274, sub_1C0F453EC, MEMORY[0x1E4F3ED38]);
  sub_1C0F4558C(&qword_1EA1A9178, &qword_1EA1A9140, (uint64_t (*)(uint64_t))sub_1C0F45274, sub_1C0F453EC);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151E02C();
  swift_release();
  long long v42 = *(_OWORD *)v69;
  LOBYTE(v32) = v69[16];
  uint64_t v43 = *(void *)&v70[8];
  long long v44 = *(_OWORD *)&v70[16];
  uint64_t v45 = *(void *)&v70[32];
  uint64_t v64 = *((void *)&v71 + 1);
  uint64_t v65 = v71;
  swift_release();
  swift_release();
  sub_1C04B5360(v42, *((uint64_t *)&v42 + 1), v32);
  swift_bridgeObjectRelease();
  sub_1C0F45AA0(v43, v44, *((uint64_t *)&v44 + 1), v45, v65, v64);
  if (sub_1C0F45EEC(v22))
  {
    sub_1BFF6B690();
    uint64_t v46 = sub_1C151FA1C();
    uint64_t v47 = MEMORY[0x1C18C5C00](v46);
  }
  else
  {
    *(void *)&long long v67 = sub_1C151E0BC();
    sub_1C0F46148();
    uint64_t v47 = sub_1C151E0DC();
  }
  uint64_t v48 = (uint64_t)v57;
  uint64_t v49 = v56[0];
  uint64_t v50 = v63;
  uint64_t v51 = v62;
  uint64_t v52 = (uint64_t)v61;
  *(void *)&long long v67 = v47;
  swift_retain();
  uint64_t v53 = sub_1C151E11C();
  uint64_t v54 = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v52, v66, v50);
  swift_release();
  *(void *)(v52 + *(int *)(v49 + 36)) = v53;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
  uint64_t v55 = (uint64_t)v60;
  sub_1C0F4626C(v52, (uint64_t)v60, (uint64_t (*)(void))sub_1C0F45050);
  sub_1C0F46204(v55, v48, (uint64_t (*)(void))sub_1C0F45050);
  swift_storeEnumTagMultiPayload();
  sub_1C0F45790();
  sub_1C0F45948();
  sub_1C151DECC();
  return sub_1C0F4619C(v55, (uint64_t (*)(void))sub_1C0F45050);
}

uint64_t sub_1C0F43E04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v76 = a3;
  sub_1C031439C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v73 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v71 = (uint64_t)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F4599C(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1C151E0EC();
  id v12 = sub_1C0F45AF0(a2, a1, (SEL *)&selRef_secondaryLabelColor);
  uint64_t v79 = MEMORY[0x1C18C5C00](v12);
  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
  uint64_t v81 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
  uint64_t v82 = v13;
  sub_1BFF27ECC();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C151DFFC();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t v19 = sub_1C151DF5C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 56);
  uint64_t v69 = v19;
  v67[1] = v20 + 56;
  v68(v11, 1, 1);
  sub_1C151DF7C();
  uint64_t v70 = v11;
  sub_1C0F4619C((uint64_t)v11, (uint64_t (*)(void))sub_1C0F4599C);
  uint64_t v21 = sub_1C151DFBC();
  uint64_t v23 = v22;
  char v25 = v24;
  swift_release();
  sub_1C04B5360(v14, v16, v18);
  swift_bridgeObjectRelease();
  id v26 = sub_1C0F45AF0(a2, v78, (SEL *)&selRef_labelColor);
  uint64_t v81 = MEMORY[0x1C18C5C00](v26);
  uint64_t v72 = sub_1C151DFAC();
  uint64_t v77 = v27;
  uint64_t v78 = v28;
  int v30 = v29;
  sub_1C04B5360(v21, v23, v25 & 1);
  uint64_t v31 = (uint64_t)v73;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C0F46204(a2 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, v31, (uint64_t (*)(void))sub_1C031439C);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v31, 1, v75) == 1)
  {
    uint64_t v32 = (uint64_t (*)(void))sub_1C031439C;
    uint64_t v33 = v31;
LABEL_6:
    sub_1C0F4619C(v33, v32);
    uint64_t v61 = 0;
    uint64_t v60 = 0;
    uint64_t v59 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    goto LABEL_7;
  }
  uint64_t v34 = v71;
  sub_1C0F4626C(v31, v71, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  if (*(unsigned char *)(v34 + 24) != 1)
  {
    uint64_t v32 = (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile;
    uint64_t v33 = v34;
    goto LABEL_6;
  }
  sub_1C151DDDC();
  uint64_t v35 = sub_1C151DFEC();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  sub_1C151DF6C();
  uint64_t v40 = (uint64_t)v70;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v68)(v70, 1, 1, v69);
  sub_1C151DF7C();
  sub_1C0F4619C(v40, (uint64_t (*)(void))sub_1C0F4599C);
  uint64_t v41 = v35;
  uint64_t v73 = (char *)sub_1C151DFBC();
  uint64_t v74 = v42;
  uint64_t v44 = v43;
  LOBYTE(v35) = v45;
  swift_release();
  char v46 = v35 & 1;
  sub_1C04B5360(v41, v37, v39);
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_1C151E0AC();
  LODWORD(v75) = v30;
  uint64_t v81 = v47;
  uint64_t v48 = (uint64_t)v73;
  uint64_t v49 = v44;
  uint64_t v50 = sub_1C151DFAC();
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55 & 1;
  sub_1C04B5360(v48, v49, v46);
  LOBYTE(v30) = v75;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C04B5340(v50, v52, v56);
  swift_bridgeObjectRetain();
  sub_1C0F4619C(v34, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  sub_1C04B5360(v50, v52, v56);
  swift_bridgeObjectRelease();
  uint64_t v57 = v56;
  uint64_t v58 = v54;
  uint64_t v59 = v52;
  uint64_t v60 = v50;
  uint64_t v61 = 1;
LABEL_7:
  uint64_t v62 = v79;
  uint64_t v63 = v76;
  uint64_t v64 = v77;
  *uint64_t v76 = v80;
  v63[1] = v62;
  uint64_t v65 = v72;
  v63[2] = v72;
  v63[3] = v64;
  *((unsigned char *)v63 + 32) = v30 & 1;
  v63[5] = v78;
  v63[6] = 0;
  v63[7] = v61;
  v63[8] = v60;
  v63[9] = v59;
  v63[10] = v57;
  v63[11] = v58;
  swift_retain();
  swift_retain();
  sub_1C04B5340(v65, v64, v30 & 1);
  swift_bridgeObjectRetain();
  sub_1C0F462D4(0, v61, v60, v59, v57, v58);
  sub_1C0F45AA0(0, v61, v60, v59, v57, v58);
  sub_1C04B5360(v65, v64, v30 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F44470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C031439C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F46204(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, (uint64_t)v10, (uint64_t (*)(void))sub_1C031439C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v15 = (uint64_t (*)(void))sub_1C031439C;
    uint64_t v16 = (uint64_t)v10;
  }
  else
  {
    sub_1C0F4626C((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    if (*(unsigned char *)(a3 + 24) == 1)
    {
      sub_1C0F46204((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      memset(v18, 0, 32);
      uint64_t v21 = 0;
      memset(v20, 0, sizeof(v20));
      swift_retain();
      sub_1C017ED10((uint64_t)v7, v18, (uint64_t *)v20, (uint64_t)v19);
      sub_1C0F4626C((uint64_t)v19, (uint64_t)v20, (uint64_t (*)(void))sub_1C017F2CC);
      sub_1C0F4626C((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(void))sub_1C017F2CC);
      swift_retain();
      sub_1C151895C();
      swift_release();
      swift_release();
      v19[0] = 1;
      swift_retain();
      swift_retain();
      sub_1C151895C();
      swift_release();
      swift_release();
    }
    uint64_t v15 = (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile;
    uint64_t v16 = (uint64_t)v14;
  }
  return sub_1C0F4619C(v16, v15);
}

__n128 sub_1C0F44764@<Q0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151DDCC();
  sub_1C0F447F8(a1, (uint64_t)v9);
  char v5 = v10;
  uint64_t v6 = v11;
  long long v8 = v9[0];
  __n128 result = (__n128)v9[1];
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = v8;
  *(__n128 *)(a2 + 40) = result;
  *(unsigned char *)(a2 + 56) = v5;
  *(void *)(a2 + 64) = v6;
  *(unsigned char *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_1C0F447F8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  sub_1C0F4599C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C151E0EC();
  id v7 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v26 = MEMORY[0x1C18C5C00](v7);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  sub_1BFF27ECC();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151DFFC();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t v15 = sub_1C151DF5C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_1C151DF7C();
  sub_1C0F4619C((uint64_t)v6, (uint64_t (*)(void))sub_1C0F4599C);
  uint64_t v16 = sub_1C151DFBC();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  swift_release();
  v20 &= 1u;
  sub_1C04B5360(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v23 = v26;
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v18;
  *(unsigned char *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v22;
  swift_retain();
  swift_retain();
  sub_1C04B5340(v16, v18, v20);
  swift_bridgeObjectRetain();
  sub_1C04B5360(v16, v18, v20);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F44A4C()
{
  return sub_1C151E03C();
}

uint64_t sub_1C0F44A68()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  type metadata accessor for DebugFormatFileTreeItem();
  sub_1C0F46374(&qword_1EA1A90D8, (void (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem);
  sub_1C151DCCC();
  swift_getKeyPath();
  sub_1C151DCDC();
  swift_release();
  swift_release();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  sub_1C0F44C64();
  sub_1C0F44E98(0);
  sub_1C0F454DC();
  sub_1C0F4568C(&qword_1EA1A91B8, sub_1C0F44E98, (void (*)(void))sub_1C0F45644);
  swift_retain();
  swift_retain();
  return sub_1C151DD0C();
}

uint64_t sub_1C0F44C4C@<X0>(char *a1@<X8>)
{
  return sub_1C0F433E8(v1[2], v1[3], v1[4], v1[5], a1);
}

double sub_1C0F44C58@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1C0F44764(*(void *)(v1 + 40), a1).n128_u64[0];
  return result;
}

void sub_1C0F44C64()
{
  if (!qword_1EA1A90E0)
  {
    sub_1C0F451F4(255, &qword_1EA1A90E8, (uint64_t (*)(uint64_t))sub_1C0F44D08, sub_1C0F44E64, MEMORY[0x1E4F3ED38]);
    unint64_t v0 = sub_1C151DD2C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A90E0);
    }
  }
}

void sub_1C0F44D08(uint64_t a1)
{
}

void sub_1C0F44D3C()
{
  if (!qword_1EA1A90F8)
  {
    sub_1C0F44DA4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A90F8);
    }
  }
}

void sub_1C0F44DA4()
{
  if (!qword_1EA1A9100)
  {
    sub_1C0F44E04();
    unint64_t v0 = sub_1C151DD2C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9100);
    }
  }
}

void sub_1C0F44E04()
{
  if (!qword_1EA1A9108)
  {
    unint64_t v0 = sub_1C151DF1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9108);
    }
  }
}

uint64_t sub_1C0F44E64()
{
  return sub_1C0F46374(&qword_1EA1A9110, sub_1C0F44D08);
}

void sub_1C0F44E98(uint64_t a1)
{
}

void sub_1C0F44ECC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0F44F30()
{
  if (!qword_1EA1A9120)
  {
    sub_1C0F44ECC(255, &qword_1EA196790, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, MEMORY[0x1E4FBB320]);
    sub_1C151635C();
    sub_1C0F459E0(255, &qword_1EA1A9128, MEMORY[0x1E4F3D750]);
    sub_1C0F45454();
    sub_1C0F46374((unint64_t *)&qword_1EA1A9198, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C151E14C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9120);
    }
  }
}

void sub_1C0F45050()
{
  if (!qword_1EA1A9130)
  {
    sub_1C0F450FC();
    sub_1C0F451F4(255, (unint64_t *)&qword_1EA1A9180, MEMORY[0x1E4F3DC98], sub_1C0F45420, MEMORY[0x1E4F3D990]);
    unint64_t v0 = sub_1C151DD2C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9130);
    }
  }
}

void sub_1C0F450FC()
{
  if (!qword_1EA1A9138)
  {
    sub_1C0F451F4(255, &qword_1EA1A9140, (uint64_t (*)(uint64_t))sub_1C0F45274, sub_1C0F453EC, MEMORY[0x1E4F3ED38]);
    sub_1C0F4558C(&qword_1EA1A9178, &qword_1EA1A9140, (uint64_t (*)(uint64_t))sub_1C0F45274, sub_1C0F453EC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1A9138);
    }
  }
}

void sub_1C0F451F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C0F45274(uint64_t a1)
{
}

void sub_1C0F452A8()
{
  if (!qword_1EA1A9150)
  {
    sub_1C0F44DA4();
    sub_1C0F44ECC(255, &qword_1EA1A9158, (uint64_t (*)(uint64_t))sub_1C0F45350, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA1A9150);
    }
  }
}

void sub_1C0F45350(uint64_t a1)
{
}

void sub_1C0F45384()
{
  if (!qword_1EA1A9168)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A9168);
    }
  }
}

uint64_t sub_1C0F453EC()
{
  return sub_1C0F46374(&qword_1EA1A9170, sub_1C0F45274);
}

uint64_t sub_1C0F45420()
{
  return sub_1C0F46374(&qword_1EA1A9188, MEMORY[0x1E4F3DC98]);
}

unint64_t sub_1C0F45454()
{
  unint64_t result = qword_1EA1A9190;
  if (!qword_1EA1A9190)
  {
    sub_1C0F44ECC(255, &qword_1EA196790, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9190);
  }
  return result;
}

unint64_t sub_1C0F454DC()
{
  unint64_t result = qword_1EA1A91A0;
  if (!qword_1EA1A91A0)
  {
    sub_1C0F44C64();
    sub_1C0F4558C(&qword_1EA1A91A8, &qword_1EA1A90E8, (uint64_t (*)(uint64_t))sub_1C0F44D08, sub_1C0F44E64);
    sub_1C0F455F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A91A0);
  }
  return result;
}

uint64_t sub_1C0F4558C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F451F4(255, a2, a3, a4, MEMORY[0x1E4F3ED38]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0F455F0()
{
  unint64_t result = qword_1EA1A91B0;
  if (!qword_1EA1A91B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A91B0);
  }
  return result;
}

uint64_t sub_1C0F45644()
{
  return sub_1C0F4568C(&qword_1EA1A91C0, (void (*)(uint64_t))sub_1C0F44F30, (void (*)(void))sub_1C0F456FC);
}

uint64_t sub_1C0F4568C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0F456FC()
{
  unint64_t result = qword_1EA1A91C8;
  if (!qword_1EA1A91C8)
  {
    sub_1C0F459E0(255, &qword_1EA1A9128, MEMORY[0x1E4F3D750]);
    sub_1C0F45790();
    sub_1C0F45948();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A91C8);
  }
  return result;
}

unint64_t sub_1C0F45790()
{
  unint64_t result = qword_1EA1A91D0;
  if (!qword_1EA1A91D0)
  {
    sub_1C0F45050();
    sub_1C0F451F4(255, &qword_1EA1A9140, (uint64_t (*)(uint64_t))sub_1C0F45274, sub_1C0F453EC, MEMORY[0x1E4F3ED38]);
    sub_1C0F4558C(&qword_1EA1A9178, &qword_1EA1A9140, (uint64_t (*)(uint64_t))sub_1C0F45274, sub_1C0F453EC);
    swift_getOpaqueTypeConformance2();
    sub_1C0F458AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A91D0);
  }
  return result;
}

unint64_t sub_1C0F458AC()
{
  unint64_t result = qword_1EA1A91D8;
  if (!qword_1EA1A91D8)
  {
    sub_1C0F451F4(255, (unint64_t *)&qword_1EA1A9180, MEMORY[0x1E4F3DC98], sub_1C0F45420, MEMORY[0x1E4F3D990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A91D8);
  }
  return result;
}

unint64_t sub_1C0F45948()
{
  unint64_t result = qword_1EA1A91E0;
  if (!qword_1EA1A91E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A91E0);
  }
  return result;
}

void sub_1C0F4599C(uint64_t a1)
{
}

uint64_t sub_1C0F459D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0F43744(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_1C0F459E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, ValueMetadata *))
{
  if (!*a2)
  {
    sub_1C0F45050();
    unint64_t v7 = a3(a1, v6, &type metadata for DebugFormatFileTreeItemView);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F45A48()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F45A90()
{
  return sub_1C0F44470(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C0F45AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if (a6)
  {
    sub_1C04B5360(a3, a4, a5 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C0F45AF0(uint64_t a1, uint64_t a2, SEL *a3)
{
  sub_1C031439C();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0F46204(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, (uint64_t)v7, (uint64_t (*)(void))sub_1C031439C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v12 = (uint64_t (*)(void))sub_1C031439C;
    uint64_t v13 = (uint64_t)v7;
LABEL_8:
    sub_1C0F4619C(v13, v12);
    id v21 = [self *a3];
    return v21;
  }
  sub_1C0F4626C((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C151CF6C();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v14 = v33;
  if (!v33)
  {
    uint64_t v12 = (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile;
    uint64_t v13 = (uint64_t)v11;
    goto LABEL_8;
  }
  uint64_t v15 = *(void *)(v33 + 40);
  uint64_t v17 = *v11;
  uint64_t v16 = v11[1];
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C(v17, v16);
    if (v19)
    {
      unint64_t v20 = *(void *)(*(void *)(v15 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v20 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v20 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(v14 + 24);
  if (*(void *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1BFEF2D8C(v17, v16);
    if (v25)
    {
      unint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v26 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v26 = MEMORY[0x1E4FBC860];
  }
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v27)
  {
    uint64_t v29 = self;
    if (v28) {
      id v30 = [v29 *a3];
    }
    else {
      id v30 = objc_msgSend(v29, sel_systemOrangeColor);
    }
  }
  else
  {
    id v30 = objc_msgSend(self, sel_systemGray2Color);
  }
  id v31 = v30;
  swift_release();
  sub_1C0F4619C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  return v31;
}

uint64_t sub_1C0F45EEC(uint64_t a1)
{
  sub_1C031439C();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (uint64_t *)&v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C151CF6C();
  swift_release();
  swift_release();
  swift_release();
  sub_1C0F4626C((uint64_t)v13, (uint64_t)v14, (uint64_t (*)(void))sub_1C017F2CC);
  sub_1C0F4626C((uint64_t)v14, (uint64_t)v15, (uint64_t (*)(void))sub_1C017F2CC);
  if (sub_1C0263AB8((uint64_t)v15) == 1)
  {
    char v5 = 0;
  }
  else
  {
    uint64_t v7 = v15[0];
    uint64_t v6 = v15[1];
    sub_1C0F46204(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, (uint64_t)v4, (uint64_t (*)(void))sub_1C031439C);
    uint64_t v8 = type metadata accessor for DebugFormatCacheFile();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1C0F4619C((uint64_t)v4, (uint64_t (*)(void))sub_1C031439C);
      sub_1C02F6040((uint64_t)v14);
      char v5 = 0;
    }
    else
    {
      uint64_t v10 = *v4;
      uint64_t v9 = v4[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0F4619C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      if (v7 == v10 && v6 == v9) {
        char v5 = 1;
      }
      else {
        char v5 = sub_1C1520A9C();
      }
      swift_bridgeObjectRetain();
      sub_1C02F6040((uint64_t)v14);
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

unint64_t sub_1C0F46148()
{
  unint64_t result = qword_1EA1A9200;
  if (!qword_1EA1A9200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9200);
  }
  return result;
}

uint64_t sub_1C0F4619C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0F46204(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F4626C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F462D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if (a6)
  {
    sub_1C04B5340(a3, a4, a5 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0F4632C()
{
  return sub_1C0F46374(&qword_1EA1A9208, (void (*)(uint64_t))sub_1C0F463BC);
}

uint64_t sub_1C0F46374(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0F463BC()
{
  if (!qword_1EA1A9210)
  {
    sub_1C0F44C64();
    sub_1C0F44E98(255);
    sub_1C0F454DC();
    sub_1C0F4568C(&qword_1EA1A91B8, sub_1C0F44E98, (void (*)(void))sub_1C0F45644);
    unint64_t v0 = sub_1C151DD1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9210);
    }
  }
}

void FeedGroupRepooling.freezing.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FeedGroupRepooling.init(freezing:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t static FeedGroupRepooling.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2)
  {
    if (v3 == 2) {
      return 1;
    }
  }
  else
  {
    BOOL v5 = (v2 & 1) == 0;
    if (v3 != 2 && ((v5 ^ v3) & 1) != 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1C0F464EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676E697A65657266 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0F46584(uint64_t a1)
{
  unint64_t v2 = sub_1BFCCCDB4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F465C0(uint64_t a1)
{
  unint64_t v2 = sub_1BFCCCDB4();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1C0F465FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 != 2)
  {
    BOOL v4 = (v2 & 1) == 0;
    return v3 != 2 && ((v4 ^ v3) & 1) != 0;
  }
  return v3 == 2;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupRepooling.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0F46704);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupRepooling.CodingKeys()
{
  return &type metadata for FeedGroupRepooling.CodingKeys;
}

unint64_t sub_1C0F46740()
{
  unint64_t result = qword_1EA1A9218;
  if (!qword_1EA1A9218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9218);
  }
  return result;
}

BOOL static FormatNotificationsAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatNotificationsAction.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatNotificationsAction.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0F46824()
{
  unint64_t result = qword_1EA1A9220;
  if (!qword_1EA1A9220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9220);
  }
  return result;
}

unint64_t sub_1C0F46878(uint64_t a1)
{
  unint64_t result = sub_1C0F468A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F468A0()
{
  unint64_t result = qword_1EA1A9228;
  if (!qword_1EA1A9228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9228);
  }
  return result;
}

unint64_t sub_1C0F468F4(void *a1)
{
  a1[1] = sub_1C02663B0();
  a1[2] = sub_1C0266408();
  unint64_t result = sub_1C0F46824();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F4692C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatNotificationsAction.init(from:)(a1, a2);
}

uint64_t sub_1C0F46944(void *a1)
{
  return FormatNotificationsAction.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatNotificationsAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F46A28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNotificationsAction()
{
  return &type metadata for FormatNotificationsAction;
}

uint64_t SportsTaxonomyGraphNode.tagId.getter()
{
  uint64_t v1 = 0;
  switch(*v0 >> 62)
  {
    case 1:
    case 2:
      uint64_t v1 = *(void *)(*(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 16);
      swift_bridgeObjectRetain();
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t SportsTaxonomyGraphNode.umcCanonicalId.getter()
{
  uint64_t v1 = 0;
  switch(*v0 >> 62)
  {
    case 1:
    case 2:
      uint64_t v1 = *(void *)(*(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 32);
      swift_bridgeObjectRetain();
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t SportsTaxonomyGraphNode.isHidden.getter()
{
  uint64_t v1 = *v0;
  uint64_t result = 1;
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
    case 2uLL:
      int v3 = (unsigned __int8 *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 48);
      goto LABEL_4;
    case 3uLL:
      int v3 = (unsigned __int8 *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 16);
LABEL_4:
      uint64_t result = *v3;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t SportsTaxonomyGraphNode.sortIfNeeded<A>(tags:sortBy:)()
{
  uint64_t v1 = *v0 >> 62;
  if (v1 >= 2)
  {
    int v2 = (unsigned char *)(v1 == 2
                 ? *(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 49
                 : *(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 17);
    if (*v2 == 1) {
      return swift_bridgeObjectRetain();
    }
  }
  sub_1C151ED5C();
  swift_getWitnessTable();
  return sub_1C151E9FC();
}

uint64_t SportsTaxonomyGraphNode.isChildrenOrderCurated.getter()
{
  uint64_t v1 = *v0 >> 62;
  if (v1 < 2) {
    return 0;
  }
  if (v1 == 2) {
    return *(unsigned __int8 *)(*(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 49);
  }
  return *(unsigned __int8 *)(*(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 17);
}

uint64_t SportsTaxonomyGraphNode.children.getter()
{
  uint64_t result = MEMORY[0x1E4FBC860];
  switch(*v0 >> 62)
  {
    case 1:
      return result;
    default:
      swift_beginAccess();
      uint64_t result = swift_bridgeObjectRetain();
      break;
  }
  return result;
}

uint64_t SportsTaxonomyGraphNode.visibleChildren.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
      return v2;
    case 2uLL:
      uint64_t v10 = *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 56);
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v12; ++i)
        {
          unint64_t v16 = *(void *)(v11 + 8 * i + 32);
          switch(v16 >> 62)
          {
            case 1uLL:
            case 2uLL:
              if ((*(unsigned char *)(*(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 48) & 1) == 0) {
                goto LABEL_24;
              }
              break;
            case 3uLL:
              if ((*(unsigned char *)(*(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 16) & 1) == 0)
              {
LABEL_24:
                swift_retain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1C05F840C(0, *(void *)(v2 + 16) + 1, 1);
                }
                unint64_t v15 = *(void *)(v2 + 16);
                unint64_t v14 = *(void *)(v2 + 24);
                if (v15 >= v14 >> 1) {
                  sub_1C05F840C(v14 > 1, v15 + 1, 1);
                }
                *(void *)(v2 + 16) = v15 + 1;
                *(void *)(v2 + 8 * v15 + 32) = v16;
              }
              break;
            default:
              continue;
          }
        }
        goto LABEL_38;
      }
      break;
    case 3uLL:
      uint64_t v17 = *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_beginAccess();
      uint64_t v18 = *(void *)(v17 + 40);
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        for (uint64_t j = 0; j != v19; ++j)
        {
          unint64_t v23 = *(void *)(v18 + 8 * j + 32);
          switch(v23 >> 62)
          {
            case 1uLL:
            case 2uLL:
              if ((*(unsigned char *)(*(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 48) & 1) == 0) {
                goto LABEL_36;
              }
              break;
            case 3uLL:
              if ((*(unsigned char *)(*(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 16) & 1) == 0)
              {
LABEL_36:
                swift_retain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1C05F840C(0, *(void *)(v2 + 16) + 1, 1);
                }
                unint64_t v22 = *(void *)(v2 + 16);
                unint64_t v21 = *(void *)(v2 + 24);
                if (v22 >= v21 >> 1) {
                  sub_1C05F840C(v21 > 1, v22 + 1, 1);
                }
                *(void *)(v2 + 16) = v22 + 1;
                *(void *)(v2 + 8 * v22 + 32) = v23;
              }
              break;
            default:
              continue;
          }
        }
        goto LABEL_38;
      }
      break;
    default:
      uint64_t v3 = *(void *)(v1 + 16);
      swift_beginAccess();
      uint64_t v4 = *(void *)(v3 + 16);
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        for (uint64_t k = 0; k != v5; ++k)
        {
          unint64_t v9 = *(void *)(v4 + 8 * k + 32);
          switch(v9 >> 62)
          {
            case 1uLL:
            case 2uLL:
              if ((*(unsigned char *)(*(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 48) & 1) == 0) {
                goto LABEL_12;
              }
              break;
            case 3uLL:
              if ((*(unsigned char *)(*(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 16) & 1) == 0)
              {
LABEL_12:
                swift_retain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1C05F840C(0, *(void *)(v2 + 16) + 1, 1);
                }
                unint64_t v8 = *(void *)(v2 + 16);
                unint64_t v7 = *(void *)(v2 + 24);
                if (v8 >= v7 >> 1) {
                  sub_1C05F840C(v7 > 1, v8 + 1, 1);
                }
                *(void *)(v2 + 16) = v8 + 1;
                *(void *)(v2 + 8 * v8 + 32) = v9;
              }
              break;
            default:
              continue;
          }
        }
LABEL_38:
        swift_release();
        swift_bridgeObjectRelease();
      }
      break;
  }
  return v2;
}

void *SportsTaxonomyGraphNode.parents.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
      uint64_t v3 = *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_beginAccess();
      unint64_t v4 = *(void *)(v3 + 56);
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v5 = sub_1C15204BC();
        if (v5) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_retain();
        if (v5)
        {
LABEL_4:
          if (v5 >= 1)
          {
            uint64_t v6 = 0;
            uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
            while (1)
            {
              if ((v4 & 0xC000000000000001) != 0)
              {
                uint64_t v7 = MEMORY[0x1C18C7CB0](v6, v4);
              }
              else
              {
                uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
                swift_retain();
              }
              if (MEMORY[0x1C18C9C60](*(void *)(v7 + 16) + 16))
              {
                type metadata accessor for SportsTaxonomyGraphRootNode();
                swift_unknownObjectRetain();
                uint64_t v8 = swift_dynamicCastClass();
                if (v8)
                {
                  uint64_t v9 = v8;
                  swift_unknownObjectRelease();
                  unint64_t v10 = swift_allocObject();
                  *(void *)(v10 + 16) = v9;
                  swift_release();
LABEL_20:
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v2 = sub_1C0EDFFB0(0, v2[2] + 1, 1, v2);
                  }
                  unint64_t v20 = v2[2];
                  unint64_t v19 = v2[3];
                  if (v20 >= v19 >> 1) {
                    uint64_t v2 = sub_1C0EDFFB0((void *)(v19 > 1), v20 + 1, 1, v2);
                  }
                  v2[2] = v20 + 1;
                  v2[v20 + 4] = v10;
                  goto LABEL_7;
                }
                type metadata accessor for SportsTaxonomyGraphEntityNode();
                uint64_t v11 = swift_dynamicCastClass();
                if (v11)
                {
                  uint64_t v12 = v11;
                  swift_unknownObjectRelease();
                  uint64_t v13 = swift_allocObject();
                  *(void *)(v13 + 16) = v12;
                  swift_release();
                  unint64_t v10 = v13 | 0x8000000000000000;
                  goto LABEL_20;
                }
                type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
                uint64_t v14 = swift_dynamicCastClass();
                swift_unknownObjectRelease();
                if (v14)
                {
                  uint64_t v15 = swift_allocObject();
                  *(void *)(v15 + 16) = v14;
                  swift_release();
                  unint64_t v10 = v15 | 0x4000000000000000;
                  goto LABEL_20;
                }
                type metadata accessor for SportsTaxonomyGraphSectionNode();
                uint64_t v16 = swift_dynamicCastClass();
                if (v16)
                {
                  uint64_t v17 = v16;
                  uint64_t v18 = swift_allocObject();
                  *(void *)(v18 + 16) = v17;
                  swift_release();
                  unint64_t v10 = v18 | 0xC000000000000000;
                  goto LABEL_20;
                }
                swift_release();
                swift_unknownObjectRelease();
              }
              else
              {
                swift_release();
              }
LABEL_7:
              if (v5 == ++v6) {
                goto LABEL_80;
              }
            }
          }
          __break(1u);
          goto LABEL_83;
        }
      }
      goto LABEL_79;
    case 2uLL:
      uint64_t v21 = *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_beginAccess();
      unint64_t v22 = *(void *)(v21 + 64);
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v23 = sub_1C15204BC();
        if (v23) {
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_retain();
        if (v23)
        {
LABEL_28:
          if (v23 < 1)
          {
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          uint64_t v24 = 0;
          uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
          while (1)
          {
            if ((v22 & 0xC000000000000001) != 0)
            {
              uint64_t v25 = MEMORY[0x1C18C7CB0](v24, v22);
            }
            else
            {
              uint64_t v25 = *(void *)(v22 + 8 * v24 + 32);
              swift_retain();
            }
            if (MEMORY[0x1C18C9C60](*(void *)(v25 + 16) + 16))
            {
              type metadata accessor for SportsTaxonomyGraphRootNode();
              swift_unknownObjectRetain();
              uint64_t v26 = swift_dynamicCastClass();
              if (v26)
              {
                uint64_t v27 = v26;
                swift_unknownObjectRelease();
                unint64_t v28 = swift_allocObject();
                *(void *)(v28 + 16) = v27;
                swift_release();
LABEL_44:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v2 = sub_1C0EDFFB0(0, v2[2] + 1, 1, v2);
                }
                unint64_t v38 = v2[2];
                unint64_t v37 = v2[3];
                if (v38 >= v37 >> 1) {
                  uint64_t v2 = sub_1C0EDFFB0((void *)(v37 > 1), v38 + 1, 1, v2);
                }
                v2[2] = v38 + 1;
                v2[v38 + 4] = v28;
                goto LABEL_31;
              }
              type metadata accessor for SportsTaxonomyGraphEntityNode();
              uint64_t v29 = swift_dynamicCastClass();
              if (v29)
              {
                uint64_t v30 = v29;
                swift_unknownObjectRelease();
                uint64_t v31 = swift_allocObject();
                *(void *)(v31 + 16) = v30;
                swift_release();
                unint64_t v28 = v31 | 0x8000000000000000;
                goto LABEL_44;
              }
              type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
              uint64_t v32 = swift_dynamicCastClass();
              swift_unknownObjectRelease();
              if (v32)
              {
                uint64_t v33 = swift_allocObject();
                *(void *)(v33 + 16) = v32;
                swift_release();
                unint64_t v28 = v33 | 0x4000000000000000;
                goto LABEL_44;
              }
              type metadata accessor for SportsTaxonomyGraphSectionNode();
              uint64_t v34 = swift_dynamicCastClass();
              if (v34)
              {
                uint64_t v35 = v34;
                uint64_t v36 = swift_allocObject();
                *(void *)(v36 + 16) = v35;
                swift_release();
                unint64_t v28 = v36 | 0xC000000000000000;
                goto LABEL_44;
              }
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
LABEL_31:
            if (v23 == ++v24) {
              goto LABEL_80;
            }
          }
        }
      }
      goto LABEL_79;
    case 3uLL:
      uint64_t v39 = *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_beginAccess();
      unint64_t v40 = *(void *)(v39 + 48);
      if (v40 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v41 = sub_1C15204BC();
        if (v41) {
          goto LABEL_52;
        }
      }
      else
      {
        uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_retain();
        if (v41)
        {
LABEL_52:
          if (v41 < 1)
          {
LABEL_84:
            __break(1u);
            JUMPOUT(0x1C0F479B8);
          }
          uint64_t v42 = 0;
          uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
          while (1)
          {
            if ((v40 & 0xC000000000000001) != 0)
            {
              uint64_t v43 = MEMORY[0x1C18C7CB0](v42, v40);
            }
            else
            {
              uint64_t v43 = *(void *)(v40 + 8 * v42 + 32);
              swift_retain();
            }
            if (MEMORY[0x1C18C9C60](*(void *)(v43 + 16) + 16))
            {
              type metadata accessor for SportsTaxonomyGraphRootNode();
              swift_unknownObjectRetain();
              uint64_t v44 = swift_dynamicCastClass();
              if (v44)
              {
                uint64_t v45 = v44;
                swift_unknownObjectRelease();
                unint64_t v46 = swift_allocObject();
                *(void *)(v46 + 16) = v45;
                swift_release();
LABEL_68:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v2 = sub_1C0EDFFB0(0, v2[2] + 1, 1, v2);
                }
                unint64_t v56 = v2[2];
                unint64_t v55 = v2[3];
                if (v56 >= v55 >> 1) {
                  uint64_t v2 = sub_1C0EDFFB0((void *)(v55 > 1), v56 + 1, 1, v2);
                }
                v2[2] = v56 + 1;
                v2[v56 + 4] = v46;
                goto LABEL_55;
              }
              type metadata accessor for SportsTaxonomyGraphEntityNode();
              uint64_t v47 = swift_dynamicCastClass();
              if (v47)
              {
                uint64_t v48 = v47;
                swift_unknownObjectRelease();
                uint64_t v49 = swift_allocObject();
                *(void *)(v49 + 16) = v48;
                swift_release();
                unint64_t v46 = v49 | 0x8000000000000000;
                goto LABEL_68;
              }
              type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
              uint64_t v50 = swift_dynamicCastClass();
              swift_unknownObjectRelease();
              if (v50)
              {
                uint64_t v51 = swift_allocObject();
                *(void *)(v51 + 16) = v50;
                swift_release();
                unint64_t v46 = v51 | 0x4000000000000000;
                goto LABEL_68;
              }
              type metadata accessor for SportsTaxonomyGraphSectionNode();
              uint64_t v52 = swift_dynamicCastClass();
              if (v52)
              {
                uint64_t v53 = v52;
                uint64_t v54 = swift_allocObject();
                *(void *)(v54 + 16) = v53;
                swift_release();
                unint64_t v46 = v54 | 0xC000000000000000;
                goto LABEL_68;
              }
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
LABEL_55:
            if (v41 == ++v42) {
              goto LABEL_80;
            }
          }
        }
      }
LABEL_79:
      uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
LABEL_80:
      swift_bridgeObjectRelease_n();
      swift_release();
      return v2;
    default:
      return v2;
  }
}

void *SportsTaxonomyGraphNode.flattenChildren()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
      goto LABEL_6;
    case 2uLL:
      uint64_t v3 = (uint64_t *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 56);
      goto LABEL_5;
    case 3uLL:
      uint64_t v3 = (uint64_t *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 40);
      goto LABEL_5;
    default:
      uint64_t v3 = (uint64_t *)(*(void *)(v1 + 16) + 16);
LABEL_5:
      swift_beginAccess();
      uint64_t v2 = *v3;
      swift_bridgeObjectRetain();
LABEL_6:
      uint64_t v4 = *(void *)(v2 + 16);
      if (v4)
      {
        uint64_t v5 = 0;
        while (2)
        {
          unint64_t v8 = *(void *)(v2 + 8 * v5++ + 32);
          switch(v8 >> 62)
          {
            case 1uLL:
            case 2uLL:
              uint64_t v9 = (unsigned char *)(*(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 48);
              goto LABEL_12;
            case 3uLL:
              uint64_t v9 = (unsigned char *)(*(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 16);
LABEL_12:
              if (*v9 == 1) {
                goto LABEL_8;
              }
              unint64_t v10 = v14;
              swift_retain_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v10 = sub_1C0EDFFB0(0, v14[2] + 1, 1, v14);
              }
              unint64_t v12 = v10[2];
              unint64_t v11 = v10[3];
              if (v12 >= v11 >> 1) {
                unint64_t v10 = sub_1C0EDFFB0((void *)(v11 > 1), v12 + 1, 1, v10);
              }
              void v10[2] = v12 + 1;
              v10[v12 + 4] = v8;
              swift_release();
              uint64_t v14 = v10;
              if (v4 == v5) {
                goto LABEL_18;
              }
              continue;
            default:
LABEL_8:
              uint64_t v6 = swift_retain();
              uint64_t v7 = SportsTaxonomyGraphNode.flattenChildren()(v6);
              sub_1C1047660(v7);
              swift_release();
              if (v4 != v5) {
                continue;
              }
LABEL_18:
              swift_bridgeObjectRelease();
              uint64_t result = v14;
              break;
          }
          break;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        return (void *)MEMORY[0x1E4FBC860];
      }
      return result;
  }
}

void *SportsTaxonomyGraphNode.flattenAllChildren()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
      goto LABEL_6;
    case 2uLL:
      uint64_t v3 = (uint64_t *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 56);
      goto LABEL_5;
    case 3uLL:
      uint64_t v3 = (uint64_t *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 40);
      goto LABEL_5;
    default:
      uint64_t v3 = (uint64_t *)(*(void *)(v1 + 16) + 16);
LABEL_5:
      swift_beginAccess();
      uint64_t v2 = *v3;
      swift_bridgeObjectRetain();
LABEL_6:
      uint64_t v4 = *(void *)(v2 + 16);
      if (v4)
      {
        uint64_t v5 = 0;
        while (2)
        {
          unint64_t v7 = *(void *)(v2 + 8 * v5 + 32);
          unint64_t v8 = v13;
          swift_retain_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v8 = sub_1C0EDFFB0(0, v13[2] + 1, 1, v13);
          }
          unint64_t v10 = v8[2];
          unint64_t v9 = v8[3];
          if (v10 >= v9 >> 1) {
            unint64_t v8 = sub_1C0EDFFB0((void *)(v9 > 1), v10 + 1, 1, v8);
          }
          ++v5;
          v8[2] = v10 + 1;
          v8[v10 + 4] = v7;
          uint64_t v13 = v8;
          switch(v7 >> 62)
          {
            case 1uLL:
            case 2uLL:
              unint64_t v11 = (unsigned char *)(*(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 48);
              goto LABEL_17;
            case 3uLL:
              unint64_t v11 = (unsigned char *)(*(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 16);
LABEL_17:
              if (*v11 != 1) {
                goto LABEL_9;
              }
              goto LABEL_8;
            default:
LABEL_8:
              uint64_t v6 = SportsTaxonomyGraphNode.flattenAllChildren()();
              sub_1C1047660(v6);
LABEL_9:
              swift_release();
              if (v4 != v5) {
                continue;
              }
              swift_bridgeObjectRelease();
              uint64_t result = v8;
              break;
          }
          break;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        return (void *)MEMORY[0x1E4FBC860];
      }
      return result;
  }
}

void *SportsTaxonomyGraphNode.childrenTagIds()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
      goto LABEL_6;
    case 2uLL:
      uint64_t v3 = (uint64_t *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 56);
      goto LABEL_5;
    case 3uLL:
      uint64_t v3 = (uint64_t *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) + 40);
      goto LABEL_5;
    default:
      uint64_t v3 = (uint64_t *)(*(void *)(v1 + 16) + 16);
LABEL_5:
      swift_beginAccess();
      uint64_t v2 = *v3;
      swift_bridgeObjectRetain();
LABEL_6:
      uint64_t v4 = *(void *)(v2 + 16);
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = 0;
        uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          unint64_t v8 = *(void *)(v2 + 8 * v5 + 32);
          switch(v8 >> 62)
          {
            case 1uLL:
            case 2uLL:
              uint64_t v9 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v10 = *(void *)(v9 + 24);
              uint64_t v11 = *(void *)(v9 + 16);
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v6 = sub_1BFEF9B68(0, v6[2] + 1, 1, v6);
              }
              unint64_t v13 = v6[2];
              unint64_t v12 = v6[3];
              if (v13 >= v12 >> 1) {
                uint64_t v6 = sub_1BFEF9B68((void *)(v12 > 1), v13 + 1, 1, v6);
              }
              v6[2] = v13 + 1;
              unint64_t v7 = &v6[2 * v13];
              v7[4] = v11;
              v7[5] = v10;
              break;
            default:
              break;
          }
          ++v5;
        }
        while (v4 != v5);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      return v6;
  }
}

void *sub_1C0F47FBC(void *result)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 62)
  {
    case 1uLL:
      uint64_t v3 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v10[0] = *result;
      type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
      swift_allocObject();
      swift_retain();
      swift_retain();
      sub_1C03EBEF8(v10);
      uint64_t v4 = swift_beginAccess();
      MEMORY[0x1C18C66D0](v4);
      uint64_t v5 = *(void *)(v3 + 56);
      goto LABEL_5;
    case 2uLL:
      uint64_t v6 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v10[0] = *result;
      type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
      swift_allocObject();
      swift_retain();
      swift_retain();
      sub_1C03EBEF8(v10);
      uint64_t v7 = swift_beginAccess();
      MEMORY[0x1C18C66D0](v7);
      uint64_t v5 = *(void *)(v6 + 64);
      goto LABEL_5;
    case 3uLL:
      uint64_t v8 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v10[0] = *result;
      type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
      swift_allocObject();
      swift_retain();
      swift_retain();
      sub_1C03EBEF8(v10);
      uint64_t v9 = swift_beginAccess();
      MEMORY[0x1C18C66D0](v9);
      uint64_t v5 = *(void *)(v8 + 48);
LABEL_5:
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_endAccess();
      uint64_t result = (void *)swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0F4819C()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphNode()
{
  return &type metadata for SportsTaxonomyGraphNode;
}

uint64_t OpenTextFileCommandHandler.__allocating_init(attachmentResolver:sceneProvider:)(long long *a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1BFC773DC(a1, v4 + 16);
  sub_1BFC773DC(a2, v4 + 56);
  return v4;
}

uint64_t OpenTextFileCommandHandler.init(attachmentResolver:sceneProvider:)(long long *a1, long long *a2)
{
  sub_1BFC773DC(a1, v2 + 16);
  sub_1BFC773DC(a2, v2 + 56);
  return v2;
}

void OpenTextFileCommandHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t OpenTextFileCommandHandler.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t OpenTextFileCommandHandler.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

void sub_1C0F482E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
}

void sub_1C0F48310(uint64_t a1)
{
  uint64_t v93 = sub_1C151CDCC();
  uint64_t v3 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v92 = &v81[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1C151635C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v81[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1C151A95C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  v99 = (uint64_t *)&v81[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  v98 = (uint64_t *)&v81[-v13];
  MEMORY[0x1F4188790](v14);
  v100 = (uint64_t *)&v81[-v15];
  MEMORY[0x1F4188790](v16);
  v110 = &v81[-v17];
  MEMORY[0x1F4188790](v18);
  v107 = &v81[-v19];
  uint64_t v89 = type metadata accessor for DebugTaxtAttachementList();
  MEMORY[0x1F4188790](v89);
  int v90 = &v81[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 56), *(void *)(v1 + 80));
  uint64_t v21 = (void *)sub_1C151AE2C();
  if (v21)
  {
    unint64_t v22 = v21;
    id v23 = objc_msgSend(v21, sel_rootViewController);

    if (v23)
    {
      id v86 = (id)sub_1C151F49C();

      int64_t v24 = *(void *)(a1 + 16);
      uint64_t v25 = MEMORY[0x1E4FBC860];
      if (v24)
      {
        uint64_t v84 = v8;
        uint64_t v85 = v5;
        uint64_t v111 = MEMORY[0x1E4FBC860];
        sub_1C05F843C(0, v24, 0);
        unint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16);
        uint64_t v27 = v10 + 16;
        uint64_t v26 = v28;
        uint64_t v29 = a1 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
        uint64_t v96 = *(void *)(v27 + 56);
        v109 = (uint64_t (**)(uint64_t *, uint64_t))(v27 + 72);
        int v108 = *MEMORY[0x1E4FAC140];
        int v103 = *MEMORY[0x1E4FAC128];
        int v95 = *MEMORY[0x1E4FAC130];
        int v94 = *MEMORY[0x1E4FAC120];
        int v91 = *MEMORY[0x1E4FAC118];
        uint64_t v83 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
        v102 = (void (**)(unsigned char *, uint64_t))(v27 - 8);
        uint64_t v30 = (void (**)(uint64_t *, uint64_t))(v27 + 80);
        int v82 = *MEMORY[0x1E4FAC138];
        v88 = (void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16);
        uint64_t v87 = (void (**)(unsigned char *, uint64_t))(v3 + 8);
        uint64_t v97 = v27;
        v101 = v28;
        while (1)
        {
          uint64_t v31 = v107;
          v26(v107, v29, v9);
          uint64_t v32 = v110;
          v26(v110, (uint64_t)v31, v9);
          uint64_t v33 = v100;
          v26(v100, (uint64_t)v32, v9);
          uint64_t v34 = *v109;
          int v35 = (*v109)(v33, v9);
          if (v35 == v108)
          {
            (*v30)(v33, v9);
            uint64_t v37 = *(void *)(*v33 + 16);
            uint64_t v36 = *(void *)(*v33 + 24);
            goto LABEL_9;
          }
          if (v35 == v103)
          {
            (*v30)(v33, v9);
            uint64_t v37 = *(void *)(*v33 + 56);
            uint64_t v36 = *(void *)(*v33 + 64);
            goto LABEL_9;
          }
          if (v35 == v95) {
            break;
          }
          if (v35 == v94)
          {
            (*v30)(v33, v9);
            uint64_t v37 = *(void *)(*v33 + 32);
            uint64_t v36 = *(void *)(*v33 + 40);
LABEL_9:
            uint64_t v106 = v37;
LABEL_10:
            uint64_t v105 = v36;
            swift_bridgeObjectRetain();
            swift_release();
            goto LABEL_11;
          }
          if (v35 == v91)
          {
            (*v102)(v33, v9);
            long long v67 = v84;
            sub_1C151634C();
            uint64_t v68 = sub_1C151633C();
            uint64_t v105 = v69;
            uint64_t v106 = v68;
            (*v83)(v67, v85);
          }
          else
          {
            uint64_t v71 = v84;
            sub_1C151634C();
            uint64_t v72 = sub_1C151633C();
            uint64_t v105 = v73;
            uint64_t v106 = v72;
            (*v83)(v71, v85);
            (*v102)(v33, v9);
          }
LABEL_11:
          unint64_t v38 = v98;
          v26(v98, (uint64_t)v110, v9);
          int v39 = v34(v38, v9);
          if (v39 == v108)
          {
            (*v30)(v38, v9);
            uint64_t v40 = *v38;
            uint64_t v41 = *(void *)(v40 + 16);
            unint64_t v42 = *(void *)(v40 + 24);
            goto LABEL_15;
          }
          if (v39 == v103)
          {
            (*v30)(v38, v9);
            uint64_t v43 = *v38;
            uint64_t v41 = *(void *)(v43 + 56);
            unint64_t v42 = *(void *)(v43 + 64);
            goto LABEL_15;
          }
          if (v39 == v95)
          {
            (*v30)(v38, v9);
            sub_1C0F48F94();
            uint64_t v58 = v57;
            uint64_t v59 = swift_projectBox();
            uint64_t v60 = *(int *)(v58 + 48);
            uint64_t v26 = v101;
            uint64_t v61 = (uint64_t *)(v59 + v60);
            unint64_t v42 = v61[1];
            uint64_t v104 = *v61;
            goto LABEL_16;
          }
          if (v39 == v94)
          {
            (*v30)(v38, v9);
            uint64_t v66 = *v38;
            uint64_t v41 = *(void *)(v66 + 32);
            unint64_t v42 = *(void *)(v66 + 40);
LABEL_15:
            uint64_t v104 = v41;
LABEL_16:
            swift_bridgeObjectRetain();
            swift_release();
            goto LABEL_17;
          }
          if (v39 == v91)
          {
            (*v102)(v38, v9);
            unint64_t v42 = 0xE500000000000000;
            uint64_t v104 = 0x6567616D69;
          }
          else
          {
            if (v39 == v82)
            {
              (*v30)(v38, v9);
              uint64_t v74 = *v38;
              uint64_t v41 = *(void *)(v74 + 24);
              unint64_t v42 = *(void *)(v74 + 32);
              goto LABEL_15;
            }
            (*v102)(v38, v9);
            uint64_t v104 = 0;
            unint64_t v42 = 0xE000000000000000;
          }
LABEL_17:
          uint64_t v44 = v99;
          v26(v99, (uint64_t)v110, v9);
          int v45 = v34(v44, v9);
          if (v45 != v108)
          {
            if (v45 == v103)
            {
              (*v30)(v44, v9);
              uint64_t v49 = *v44;
              uint64_t v47 = *(void *)(v49 + 56);
              unint64_t v48 = *(void *)(v49 + 64);
              goto LABEL_21;
            }
            if (v45 == v95)
            {
              (*v30)(v44, v9);
              sub_1C0F48F94();
              uint64_t v62 = swift_projectBox();
              uint64_t v63 = v92;
              uint64_t v64 = v93;
              (*v88)(v92, v62, v93);
              uint64_t v47 = sub_1C151CDBC();
              unint64_t v48 = v65;
              (*v87)(v63, v64);
              goto LABEL_22;
            }
            if (v45 != v94)
            {
              if (v45 == v91)
              {
                (*v102)(v44, v9);
                unint64_t v48 = 0xEA0000000000746FLL;
                uint64_t v47 = 0x68736E6565726373;
                goto LABEL_23;
              }
              if (v45 != v82)
              {
                (*v102)(v44, v9);
                uint64_t v47 = 0;
                unint64_t v48 = 0xE000000000000000;
                goto LABEL_23;
              }
              (*v30)(v44, v9);
              uint64_t v70 = *v44;
              uint64_t v47 = *(void *)(v70 + 24);
              unint64_t v48 = *(void *)(v70 + 32);
              goto LABEL_21;
            }
          }
          (*v30)(v44, v9);
          uint64_t v46 = *v44;
          uint64_t v47 = *(void *)(v46 + 16);
          unint64_t v48 = *(void *)(v46 + 24);
LABEL_21:
          swift_bridgeObjectRetain();
LABEL_22:
          swift_release();
LABEL_23:
          uint64_t v50 = *v102;
          (*v102)(v110, v9);
          v50(v107, v9);
          uint64_t v25 = v111;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F843C(0, *(void *)(v25 + 16) + 1, 1);
            uint64_t v25 = v111;
          }
          unint64_t v52 = *(void *)(v25 + 16);
          unint64_t v51 = *(void *)(v25 + 24);
          if (v52 >= v51 >> 1)
          {
            sub_1C05F843C(v51 > 1, v52 + 1, 1);
            uint64_t v25 = v111;
          }
          *(void *)(v25 + 16) = v52 + 1;
          uint64_t v53 = (void *)(v25 + 48 * v52);
          uint64_t v54 = v105;
          v53[4] = v106;
          v53[5] = v54;
          v53[6] = v104;
          v53[7] = v42;
          v53[8] = v47;
          v53[9] = v48;
          v29 += v96;
          --v24;
          uint64_t v26 = v101;
          if (!v24) {
            goto LABEL_53;
          }
        }
        (*v30)(v33, v9);
        sub_1C0F48F94();
        unint64_t v56 = (uint64_t *)(swift_projectBox() + *(int *)(v55 + 48));
        uint64_t v36 = v56[1];
        uint64_t v106 = *v56;
        goto LABEL_10;
      }
LABEL_53:
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v76 = v90;
      *(void *)&v90[*(int *)(v89 + 20)] = KeyPath;
      sub_1C0F48E80();
      swift_storeEnumTagMultiPayload();
      *uint64_t v76 = v25;
      sub_1C0F48ED8();
      id v78 = objc_allocWithZone(v77);
      uint64_t v79 = (void *)sub_1C151DDEC();
      id v80 = v86;
      objc_msgSend(v86, sel_presentViewController_animated_completion_, v79, 1, 0);
    }
  }
}

uint64_t type metadata accessor for OpenTextFileCommandHandler()
{
  return self;
}

uint64_t method lookup function for OpenTextFileCommandHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OpenTextFileCommandHandler);
}

uint64_t dispatch thunk of OpenTextFileCommandHandler.__allocating_init(attachmentResolver:sceneProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0F48E5C()
{
  return sub_1C151DD9C();
}

void sub_1C0F48E80()
{
  if (!qword_1EA1A9230)
  {
    sub_1C151DC7C();
    unint64_t v0 = sub_1C151DC3C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9230);
    }
  }
}

void sub_1C0F48ED8()
{
  if (!qword_1EA1A9238)
  {
    type metadata accessor for DebugTaxtAttachementList();
    sub_1C0F48F3C();
    unint64_t v0 = sub_1C151DDFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9238);
    }
  }
}

unint64_t sub_1C0F48F3C()
{
  unint64_t result = qword_1EA1A9240;
  if (!qword_1EA1A9240)
  {
    type metadata accessor for DebugTaxtAttachementList();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9240);
  }
  return result;
}

void sub_1C0F48F94()
{
  if (!qword_1EB894600)
  {
    sub_1C151CDCC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB894600);
    }
  }
}

uint64_t sub_1C0F49000(uint64_t a1)
{
  type metadata accessor for FormatDerivedDataOption();
  uint64_t v3 = swift_allocBox();
  sub_1C0F4AFFC(a1, v4, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
  uint64_t v5 = *(void **)(v1 + 48);
  uint64_t v6 = v5[2];
  if (v6)
  {
    unint64_t v7 = v5[v6 + 3];
    swift_retain();
    char v8 = sub_1C0387D88(v7, v3 | 0x1000000000000000);
    swift_release();
    if (v8) {
      return swift_release();
    }
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1C0EE23FC(0, v5[2] + 1, 1, v5);
  }
  unint64_t v11 = v5[2];
  unint64_t v10 = v5[3];
  if (v11 >= v10 >> 1) {
    uint64_t v5 = sub_1C0EE23FC((void *)(v10 > 1), v11 + 1, 1, v5);
  }
  v5[2] = v11 + 1;
  v5[v11 + 4] = v3 | 0x1000000000000000;
  uint64_t result = swift_release();
  *(void *)(v1 + 48) = v5;
  return result;
}

uint64_t sub_1C0F4912C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_release();
}

uint64_t sub_1C0F49174()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v19 = v2;
  uint64_t v20 = v1;
  uint64_t v18 = v1;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(v2 + 32);
    sub_1BFFAF7A4((uint64_t)&v20);
    sub_1BFFAF7A4((uint64_t)&v19);
    while (1)
    {
      unint64_t v11 = *v4++;
      unint64_t v10 = v11;
      unint64_t v12 = v11 >> 60;
      if (v11 >> 60 == 2)
      {
        uint64_t v5 = (_OWORD *)(v10 & 0xFFFFFFFFFFFFFFFLL);
        long long v6 = v5[3];
        long long v25 = v5[2];
        long long v26 = v6;
        long long v7 = v5[5];
        long long v27 = v5[4];
        long long v28 = v7;
        uint64_t v8 = swift_retain();
        uint64_t v9 = sub_1C0F49174(v8);
        sub_1C1048070(v9);
      }
      else
      {
        if (v12) {
          goto LABEL_5;
        }
        long long v13 = *(_OWORD *)(v10 + 32);
        long long v21 = *(_OWORD *)(v10 + 16);
        long long v22 = v13;
        long long v14 = *(_OWORD *)(v10 + 64);
        long long v23 = *(_OWORD *)(v10 + 48);
        long long v24 = v14;
        uint64_t v15 = swift_retain();
        uint64_t v16 = sub_1C0F49174(v15);
        sub_1C1048070(v16);
      }
      swift_release();
LABEL_5:
      if (!--v3)
      {
        sub_1BFCA59C8((uint64_t)&v19);
        return v18;
      }
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F49260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  unint64_t v10 = v9 | 0x3000000000000000;
  unint64_t v11 = *(void **)(v4 + 48);
  uint64_t v12 = v11[2];
  if (v12)
  {
    unint64_t v13 = v11[v12 + 3];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C0387D88(v13, v10);
    swift_release();
    if (v14) {
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v11 = sub_1C0EE23FC(0, v11[2] + 1, 1, v11);
  }
  unint64_t v17 = v11[2];
  unint64_t v16 = v11[3];
  if (v17 >= v16 >> 1) {
    unint64_t v11 = sub_1C0EE23FC((void *)(v16 > 1), v17 + 1, 1, v11);
  }
  v11[2] = v17 + 1;
  v11[v17 + 4] = v10;
  uint64_t result = swift_release();
  *(void *)(v4 + 48) = v11;
  return result;
}

uint64_t sub_1C0F493B4(unint64_t a1)
{
  if ((a1 >> 60) <= 7 && ((1 << (a1 >> 60)) & 0xE5) != 0) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9
    || (unint64_t v10 = *(void *)(v8 + 8 * v9 + 24),
        swift_retain(),
        swift_retain(),
        LOBYTE(v10) = sub_1C0387D88(v10, a1),
        swift_release(),
        uint64_t result = swift_release(),
        (v10 & 1) == 0))
  {
LABEL_5:
    uint64_t v4 = *(void **)(v1 + 48);
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C0EE23FC(0, v4[2] + 1, 1, v4);
      uint64_t v4 = (void *)result;
    }
    unint64_t v7 = v4[2];
    unint64_t v6 = v4[3];
    if (v7 >= v6 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C0EE23FC((void *)(v6 > 1), v7 + 1, 1, v4);
      uint64_t v4 = (void *)result;
    }
    v4[2] = v7 + 1;
    v4[v7 + 4] = a1;
    *(void *)(v1 + 48) = v4;
  }
  return result;
}

void sub_1C0F494D0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v31 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v31);
  uint64_t v28 = (uint64_t)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v27 = (uint64_t)v25 - v7;
  uint64_t v8 = type metadata accessor for FormatOption() - 8;
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (void *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v30 = *(void *)(v9 + 72);
    v25[1] = a1;
    swift_bridgeObjectRetain();
    long long v26 = v11;
    while (1)
    {
      uint64_t v14 = swift_allocBox();
      uint64_t v16 = v15;
      sub_1C0F4AFFC(v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1C0C49248(v11, v16);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_deallocBox();
        return;
      }
      unint64_t v17 = *(void **)(v1 + 48);
      uint64_t v18 = v17[2];
      if (!v18 || v17[v18 + 3] >> 60 != 1) {
        goto LABEL_10;
      }
      uint64_t v29 = 0;
      uint64_t v19 = swift_projectBox();
      uint64_t v20 = v27;
      sub_1C0F4AFFC(v19, v27, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      uint64_t v21 = v28;
      sub_1C0F4AFFC(v16, v28, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      swift_retain();
      swift_retain();
      BOOL v22 = sub_1C0C4C6E0(v20, v21);
      sub_1C0387D2C(v21);
      sub_1C0387D2C(v20);
      swift_release();
      swift_release();
      if (!v22) {
        break;
      }
      swift_release();
      uint64_t v3 = v29;
      unint64_t v11 = v26;
LABEL_4:
      v13 += v30;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    unint64_t v17 = *(void **)(v1 + 48);
    uint64_t v3 = v29;
    unint64_t v11 = v26;
LABEL_10:
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_1C0EE23FC(0, v17[2] + 1, 1, v17);
    }
    unint64_t v24 = v17[2];
    unint64_t v23 = v17[3];
    if (v24 >= v23 >> 1) {
      unint64_t v17 = sub_1C0EE23FC((void *)(v23 > 1), v24 + 1, 1, v17);
    }
    v17[2] = v24 + 1;
    v17[v24 + 4] = v14 | 0x1000000000000000;
    swift_release();
    *(void *)(v1 + 48) = v17;
    goto LABEL_4;
  }
}

uint64_t sub_1C0F497F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, void *a8)
{
  return sub_1C0F49EA4(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(long long *))sub_1C05C1FB8);
}

uint64_t sub_1C0F49824(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8)
{
  *(void *)&long long v65 = a4;
  *((void *)&v65 + 1) = a5;
  uint64_t v67 = 0;
  long long v66 = 0uLL;
  unsigned int v68 = 0;
  unsigned __int16 v69 = 0x2000;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v70 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v71 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C0FFC888((unint64_t)&v65, a8);
  if (v8)
  {
    sub_1C017F59C(v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, v68 | ((unint64_t)v69 << 32));
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (a6 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C15204BC();
    uint64_t v53 = a7;
    if (v16) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v53 = a7;
    if (v16)
    {
LABEL_5:
      unsigned int v48 = a3;
      a3 = 0;
      unint64_t v57 = a6 & 0xC000000000000001;
      uint64_t v50 = a6 & 0xFFFFFFFFFFFFFF8;
      unint64_t v49 = a6 + 32;
      uint64_t v54 = a1;
      unint64_t v52 = a6;
      uint64_t v55 = a2;
      while (1)
      {
        if (v57)
        {
          a7 = (void *)MEMORY[0x1C18C7CB0](a3, a6);
          BOOL v17 = __OFADD__(a3++, 1);
          if (v17) {
            goto LABEL_29;
          }
        }
        else
        {
          if (a3 >= *(void *)(v50 + 16))
          {
            __break(1u);
            goto LABEL_41;
          }
          a7 = *(void **)(v49 + 8 * a3);
          swift_retain();
          BOOL v17 = __OFADD__(a3++, 1);
          if (v17)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
        }
        uint64_t v61 = 0;
        long long v59 = 0u;
        long long v60 = 0u;
        int v62 = 0;
        __int16 v63 = -512;
        *(void *)&long long v64 = v15;
        *((void *)&v64 + 1) = v15;
        swift_beginAccess();
        uint64_t v18 = a7[4];
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19)
        {
          unint64_t v56 = a7;
          unint64_t v51 = a3;
          swift_bridgeObjectRetain_n();
          uint64_t v20 = (_OWORD *)(v18 + 56);
          do
          {
            uint64_t v21 = *((void *)v20 - 3);
            uint64_t v22 = *((void *)v20 - 1);
            if (v22)
            {
              uint64_t v23 = *((void *)v20 - 2);
              long long v58 = *v20;
              unint64_t v24 = (void *)*((void *)&v64 + 1);
              swift_retain();
              swift_bridgeObjectRetain_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v24 = sub_1C0EE2410(0, v24[2] + 1, 1, v24);
              }
              unint64_t v26 = v24[2];
              unint64_t v25 = v24[3];
              if (v26 >= v25 >> 1) {
                unint64_t v24 = sub_1C0EE2410((void *)(v25 > 1), v26 + 1, 1, v24);
              }
              v24[2] = v26 + 1;
              uint64_t v27 = &v24[4 * v26];
              v27[4] = v23;
              v27[5] = v22;
              *((_OWORD *)v27 + 3) = v58;
              *((void *)&v64 + 1) = v24;
            }
            else
            {
              swift_retain();
            }
            uint64_t v72 = v21;
            swift_retain();
            sub_1C05B4E6C(&v59);
            uint64_t v20 = (_OWORD *)((char *)v20 + 40);
            swift_release_n();
            swift_bridgeObjectRelease();
            --v19;
          }
          while (v19);
          swift_bridgeObjectRelease_n();
          a3 = v51;
          a6 = v52;
          a7 = v56;
        }
        uint64_t v28 = swift_allocObject();
        uint64_t v29 = a7[3];
        uint64_t v30 = v61;
        int v31 = v62;
        __int16 v32 = v63;
        *(void *)(v28 + 16) = a7[2];
        *(void *)(v28 + 24) = v29;
        long long v33 = v60;
        *(_OWORD *)(v28 + 32) = v59;
        *(_OWORD *)(v28 + 48) = v33;
        *(void *)(v28 + 64) = v30;
        *(_WORD *)(v28 + 76) = v32;
        *(_DWORD *)(v28 + 72) = v31;
        *(_OWORD *)(v28 + 80) = v64;
        a7 = v70;
        swift_bridgeObjectRetain();
        swift_retain();
        a2 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a7 = sub_1C0EE23FC(0, a7[2] + 1, 1, a7);
        }
        unint64_t v35 = a7[2];
        unint64_t v34 = a7[3];
        if (v35 >= v34 >> 1) {
          a7 = sub_1C0EE23FC((void *)(v34 > 1), v35 + 1, 1, a7);
        }
        a7[2] = v35 + 1;
        a7[v35 + 4] = v28 | 0x2000000000000000;
        swift_release();
        swift_release();
        uint64_t v70 = a7;
        a1 = v54;
        uint64_t v15 = MEMORY[0x1E4FBC860];
        if (a3 == v16)
        {
          swift_bridgeObjectRelease();
          a3 = v48;
          goto LABEL_32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  a7 = v70;
LABEL_32:
  a6 = swift_allocObject();
  *(void *)(a6 + 16) = a1;
  *(void *)(a6 + 24) = a2;
  *(unsigned char *)(a6 + 32) = a3;
  uint64_t v15 = 0x5000000000000000;
  sub_1C02CE324(a1, a2, a3);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_41:
  }
    a7 = sub_1C0EE23FC(0, a7[2] + 1, 1, a7);
  unint64_t v38 = a7[2];
  unint64_t v37 = a7[3];
  if (v38 >= v37 >> 1) {
    a7 = sub_1C0EE23FC((void *)(v37 > 1), v38 + 1, 1, a7);
  }
  a7[2] = v38 + 1;
  a7[v38 + 4] = a6 | v15;
  swift_release();
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v67;
  unsigned int v41 = v68;
  unsigned __int16 v42 = v69;
  uint64_t v43 = v71;
  long long v44 = v66;
  *(_OWORD *)(v39 + 16) = v65;
  *(_OWORD *)(v39 + 32) = v44;
  *(void *)(v39 + 48) = v40;
  *(_WORD *)(v39 + 60) = v42;
  *(_DWORD *)(v39 + 56) = v41;
  *(void *)(v39 + 64) = a7;
  *(void *)(v39 + 72) = v43;
  int v45 = (void *)v53[6];
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v45 = sub_1C0EE23FC(0, v45[2] + 1, 1, v45);
  }
  unint64_t v47 = v45[2];
  unint64_t v46 = v45[3];
  if (v47 >= v46 >> 1) {
    int v45 = sub_1C0EE23FC((void *)(v46 > 1), v47 + 1, 1, v45);
  }
  v45[2] = v47 + 1;
  v45[v47 + 4] = v39;
  swift_release();
  uint64_t result = swift_release();
  v53[6] = v45;
  return result;
}

uint64_t sub_1C0F49E70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, void *a8)
{
  return sub_1C0F49EA4(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(long long *))sub_1C05B08F4);
}

uint64_t sub_1C0F49EA4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, void *a8, void (*a9)(long long *))
{
  *(void *)&long long v72 = a4;
  *((void *)&v72 + 1) = a5;
  uint64_t v74 = 0;
  long long v73 = 0uLL;
  unsigned int v75 = 0;
  unsigned __int16 v76 = 0x2000;
  Class v77 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v78 = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  uint64_t v15 = a8[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0F494D0(v15);
  if (v9)
  {
    swift_bridgeObjectRelease();
    sub_1C017F59C(v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, v75 | ((unint64_t)v76 << 32));
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = a6;
    unint64_t v17 = a7;
    unint64_t v64 = a1;
    uint64_t v62 = a2;
    swift_bridgeObjectRelease();
    uint64_t v18 = a8;
    a9(&v72);
    unint64_t v20 = v16;
    if (v16 >> 62)
    {
LABEL_39:
      swift_bridgeObjectRetain();
      unint64_t v20 = v16;
      uint64_t v21 = sub_1C15204BC();
    }
    else
    {
      uint64_t v21 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v22 = v62;
    unint64_t v16 = v64;
    unint64_t v23 = v17;
    if (v21)
    {
      unint64_t v17 = 0;
      unint64_t v60 = v20;
      unint64_t v61 = v20 & 0xC000000000000001;
      unint64_t v56 = v20 + 32;
      uint64_t v57 = v20 & 0xFFFFFFFFFFFFFF8;
      unsigned int v59 = a3;
      uint64_t v58 = v21;
      while (1)
      {
        if (v61)
        {
          a3 = MEMORY[0x1C18C7CB0](v17, v20);
        }
        else
        {
          if (v17 >= *(void *)(v57 + 16))
          {
            __break(1u);
            goto LABEL_41;
          }
          a3 = *(void *)(v56 + 8 * v17);
          swift_retain();
        }
        if (__OFADD__(v17++, 1))
        {
          __break(1u);
          goto LABEL_39;
        }
        uint64_t v68 = 0;
        long long v66 = 0u;
        long long v67 = 0u;
        int v69 = 0;
        __int16 v70 = -512;
        *(void *)&long long v71 = MEMORY[0x1E4FBC860];
        *((void *)&v71 + 1) = MEMORY[0x1E4FBC860];
        swift_beginAccess();
        uint64_t v25 = *(void *)(a3 + 32);
        uint64_t v26 = *(void *)(v25 + 16);
        if (v26)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v27 = (_OWORD *)(v25 + 56);
          do
          {
            uint64_t v28 = *((void *)v27 - 3);
            uint64_t v29 = *((void *)v27 - 1);
            if (v29)
            {
              uint64_t v30 = *((void *)v27 - 2);
              long long v65 = *v27;
              int v31 = (void *)*((void *)&v71 + 1);
              swift_retain();
              swift_bridgeObjectRetain_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                int v31 = sub_1C0EE2410(0, v31[2] + 1, 1, v31);
              }
              unint64_t v33 = v31[2];
              unint64_t v32 = v31[3];
              if (v33 >= v32 >> 1) {
                int v31 = sub_1C0EE2410((void *)(v32 > 1), v33 + 1, 1, v31);
              }
              v31[2] = v33 + 1;
              unint64_t v34 = &v31[4 * v33];
              v34[4] = v30;
              v34[5] = v29;
              *((_OWORD *)v34 + 3) = v65;
              *((void *)&v71 + 1) = v31;
              unint64_t v16 = v64;
            }
            else
            {
              swift_retain();
            }
            uint64_t v79 = v28;
            swift_retain();
            sub_1C05B4E6C(&v66);
            uint64_t v27 = (_OWORD *)((char *)v27 + 40);
            swift_release_n();
            swift_bridgeObjectRelease();
            --v26;
          }
          while (v26);
          swift_bridgeObjectRelease_n();
        }
        uint64_t v35 = swift_allocObject();
        uint64_t v36 = *(void *)(a3 + 24);
        uint64_t v37 = v68;
        int v38 = v69;
        __int16 v39 = v70;
        *(void *)(v35 + 16) = *(void *)(a3 + 16);
        *(void *)(v35 + 24) = v36;
        long long v40 = v67;
        *(_OWORD *)(v35 + 32) = v66;
        *(_OWORD *)(v35 + 48) = v40;
        *(void *)(v35 + 64) = v37;
        *(_WORD *)(v35 + 76) = v39;
        *(_DWORD *)(v35 + 72) = v38;
        *(_OWORD *)(v35 + 80) = v71;
        uint64_t v18 = v77;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v21 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_1C0EE23FC(0, v18[2] + 1, 1, v18);
        }
        unint64_t v42 = v18[2];
        unint64_t v41 = v18[3];
        if (v42 >= v41 >> 1) {
          uint64_t v18 = sub_1C0EE23FC((void *)(v41 > 1), v42 + 1, 1, v18);
        }
        v18[2] = v42 + 1;
        v18[v42 + 4] = v35 | 0x2000000000000000;
        swift_release();
        swift_release();
        Class v77 = v18;
        uint64_t v22 = v62;
        unint64_t v23 = a7;
        unint64_t v20 = v60;
        a3 = v59;
        if (v17 == v58)
        {
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v77;
LABEL_30:
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v16;
    *(void *)(v21 + 24) = v22;
    *(unsigned char *)(v21 + 32) = a3;
    uint64_t v43 = v22;
    uint64_t v22 = 0x5000000000000000;
    sub_1C02CE324(v16, v43, a3);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_41:
    }
      uint64_t v18 = sub_1C0EE23FC(0, v18[2] + 1, 1, v18);
    uint64_t v44 = v21 | v22;
    unint64_t v46 = v18[2];
    unint64_t v45 = v18[3];
    if (v46 >= v45 >> 1) {
      uint64_t v18 = sub_1C0EE23FC((void *)(v45 > 1), v46 + 1, 1, v18);
    }
    v18[2] = v46 + 1;
    v18[v46 + 4] = v44;
    swift_release();
    uint64_t v47 = swift_allocObject();
    uint64_t v48 = v74;
    unsigned int v49 = v75;
    unsigned __int16 v50 = v76;
    uint64_t v51 = v78;
    long long v52 = v73;
    *(_OWORD *)(v47 + 16) = v72;
    *(_OWORD *)(v47 + 32) = v52;
    *(void *)(v47 + 48) = v48;
    *(_WORD *)(v47 + 60) = v50;
    *(_DWORD *)(v47 + 56) = v49;
    *(void *)(v47 + 64) = v18;
    *(void *)(v47 + 72) = v51;
    uint64_t v53 = *(void **)(v23 + 48);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v53 = sub_1C0EE23FC(0, v53[2] + 1, 1, v53);
    }
    unint64_t v55 = v53[2];
    unint64_t v54 = v53[3];
    if (v55 >= v54 >> 1) {
      uint64_t v53 = sub_1C0EE23FC((void *)(v54 > 1), v55 + 1, 1, v53);
    }
    v53[2] = v55 + 1;
    v53[v55 + 4] = v47;
    swift_release();
    uint64_t result = swift_release();
    *(void *)(v23 + 48) = v53;
  }
  return result;
}

uint64_t sub_1C0F4A550(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = *(void **)(v1 + 56);
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C0EE2410(0, v6[2] + 1, 1, v6);
    uint64_t v6 = (void *)result;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C0EE2410((void *)(v8 > 1), v9 + 1, 1, v6);
    uint64_t v6 = (void *)result;
  }
  v6[2] = v9 + 1;
  uint64_t v10 = &v6[4 * v9];
  v10[4] = v3;
  v10[5] = v2;
  void v10[6] = v4;
  v10[7] = v5;
  *(void *)(v1 + 56) = v6;
  return result;
}

uint64_t sub_1C0F4A608(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  unint64_t v6 = v5 | 0x4000000000000000;
  uint64_t v7 = *(void **)(v2 + 48);
  uint64_t v8 = v7[2];
  if (v8)
  {
    unint64_t v9 = v7[v8 + 3];
    swift_retain();
    swift_bridgeObjectRetain();
    char v10 = sub_1C0387D88(v9, v6);
    swift_release();
    if (v10) {
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_1C0EE23FC(0, v7[2] + 1, 1, v7);
  }
  unint64_t v13 = v7[2];
  unint64_t v12 = v7[3];
  if (v13 >= v12 >> 1) {
    uint64_t v7 = sub_1C0EE23FC((void *)(v12 > 1), v13 + 1, 1, v7);
  }
  v7[2] = v13 + 1;
  v7[v13 + 4] = v6;
  uint64_t result = swift_release();
  *(void *)(v2 + 48) = v7;
  return result;
}

uint64_t sub_1C0F4A738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BFF896B4(a1, a2, *a3))
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    *unint64_t v13 = a1;
    v13[1] = a2;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  sub_1BFEFFC1C(&v25, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(v5 + 48);
  uint64_t v26 = result;
  uint64_t v15 = *(void *)(result + 16);
  if (!v15)
  {
LABEL_14:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 24) = -1;
    return result;
  }
  unint64_t v16 = (unint64_t *)(result + 32);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v17 = *v16++;
    if (v17 >> 60 == 1) {
      break;
    }
LABEL_5:
    if (!--v15)
    {
      uint64_t result = sub_1BFCA59C8((uint64_t)&v26);
      goto LABEL_14;
    }
  }
  uint64_t v18 = swift_projectBox();
  sub_1C0F4AFFC(v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
  BOOL v19 = *(void *)v12 == a1 && *((void *)v12 + 1) == a2;
  if (!v19 && (sub_1C1520A9C() & 1) == 0)
  {
    sub_1C0387D2C((uint64_t)v12);
    goto LABEL_5;
  }
  swift_retain();
  sub_1BFCA59C8((uint64_t)&v26);
  uint64_t v20 = *((void *)v12 + 2);
  uint64_t v21 = *((void *)v12 + 3);
  uint64_t v22 = *((void *)v12 + 4);
  char v23 = v12[40];
  sub_1C0387CE0(v20, v21, v22, v23);
  sub_1C0387D2C((uint64_t)v12);
  uint64_t result = swift_release();
  *(void *)a4 = v20;
  *(void *)(a4 + 8) = v21;
  *(void *)(a4 + 16) = v22;
  *(unsigned char *)(a4 + 24) = v23;
  return result;
}

uint64_t sub_1C0F4A94C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0F4C81C(0, &qword_1EA1A9280, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F4C720();
  sub_1C1520F0C();
  sub_1C0F4C880(v3, (uint64_t)v14);
  sub_1C0F4C880((uint64_t)v14, (uint64_t)v13);
  char v12 = 0;
  sub_1C0F4C908();
  sub_1C152078C();
  if (!v2)
  {
    v13[0] = *(void *)(v3 + 48);
    char v12 = 1;
    sub_1C0D78CF4(0, &qword_1EA1A9260, (uint64_t)&type metadata for FormatDerivedDataInstruction, MEMORY[0x1E4FBB320]);
    sub_1C0F4C95C(&qword_1EA1A9298, (void (*)(void))sub_1C0F4C9EC);
    sub_1C152080C();
    v13[0] = *(void *)(v3 + 56);
    char v12 = 2;
    sub_1C0D78CF4(0, &qword_1EA1A3BC0, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBB320]);
    sub_1C0F4CA40(&qword_1EA1A92A8, (void (*)(void))sub_1C0F4CAD0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0F4ABF8()
{
  uint64_t v1 = 0x7463757274736E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x4D656372756F735FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65706F6373;
  }
}

uint64_t sub_1C0F4AC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0F4CD30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0F4AC88(uint64_t a1)
{
  unint64_t v2 = sub_1C0F4C720();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F4ACC4(uint64_t a1)
{
  unint64_t v2 = sub_1C0F4C720();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0F4AD00@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0F4C268(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1C0F4AD44(void *a1)
{
  return sub_1C0F4A94C(a1);
}

uint64_t sub_1C0F4AD80(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1C0F4AE44((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1C0F4ADCC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F4AE0C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F4AE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  unint64_t v8 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
  uint64_t v9 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  unint64_t v14 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL)
  {
    if (((v14 >> 41) & 0x7F) != 0x7F)
    {
      v25[0] = *(void *)a1;
      v25[1] = v4;
      void v25[2] = v6;
      v25[3] = v5;
      v25[4] = v7;
      int v26 = v8;
      __int16 v27 = WORD2(v8);
      v28[0] = v9;
      v28[1] = v10;
      v28[2] = v12;
      v28[3] = v11;
      v28[4] = v13;
      int v29 = v14;
      __int16 v30 = WORD2(v14);
      if (sub_1C14C3B50((uint64_t)v25, (uint64_t)v28)) {
        goto LABEL_7;
      }
      return 0;
    }
LABEL_5:
    uint64_t v15 = *(void *)a2;
    uint64_t v23 = *(void *)a1;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v16 = *(void *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 16);
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t v19 = *(void *)(a2 + 32);
    sub_1C017F510(*(void *)a1, v4, v6, v5, v7, v8);
    sub_1C017F510(v15, v16, v17, v18, v19, v14);
    sub_1C017F59C(v23, v24, v6, v5, v7, v8);
    sub_1C017F59C(v15, v16, v17, v18, v19, v14);
    return 0;
  }
  if (((v14 >> 41) & 0x7F) != 0x7F) {
    goto LABEL_5;
  }
LABEL_7:
  if ((sub_1C00DEFC4(*(void **)(a1 + 48), *(void **)(a2 + 48)) & 1) == 0) {
    return 0;
  }
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a2 + 56);
  return sub_1C00DEBB4(v20, v21);
}

uint64_t sub_1C0F4AFFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F4B064()
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(v0 + 76) >> 9 <= 0x7EuLL) {
    sub_1C017F5B0(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int16 *)(v0 + 76) << 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F4B0D4()
{
  sub_1C015FB90(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1C0F4B110()
{
  if (*(unsigned __int16 *)(v0 + 60) >> 9 <= 0x7EuLL) {
    sub_1C017F5B0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int16 *)(v0 + 60) << 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F4B178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F4BC24(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1C01771C8);
}

uint64_t sub_1C0F4B1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  unsigned int v27 = 0;
  unsigned __int16 v28 = -512;
  int v29 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1C0C395B8((unint64_t)&v24, a3);
  if (v3)
  {
    sub_1C017F59C(v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, v27 | ((unint64_t)v28 << 32));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    swift_beginAccess();
    char v9 = *(unsigned char *)(a1 + 48);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v7;
    *(unsigned char *)(v10 + 32) = v9;
    uint64_t v11 = v10 | 0x6000000000000000;
    uint64_t v12 = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1C0EE23FC(0, v12[2] + 1, 1, v12);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      uint64_t v12 = sub_1C0EE23FC((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    v12[2] = v14 + 1;
    v12[v14 + 4] = v11;
    swift_release();
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v26;
    unsigned int v17 = v27;
    unsigned __int16 v18 = v28;
    uint64_t v19 = v30;
    long long v20 = v25;
    *(_OWORD *)(v15 + 16) = v24;
    *(_OWORD *)(v15 + 32) = v20;
    *(void *)(v15 + 48) = v16;
    *(_WORD *)(v15 + 60) = v18;
    *(_DWORD *)(v15 + 56) = v17;
    *(void *)(v15 + 64) = v12;
    *(void *)(v15 + 72) = v19;
    uint64_t v21 = *(void **)(a2 + 48);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v21 = sub_1C0EE23FC(0, v21[2] + 1, 1, v21);
    }
    unint64_t v23 = v21[2];
    unint64_t v22 = v21[3];
    if (v23 >= v22 >> 1) {
      uint64_t v21 = sub_1C0EE23FC((void *)(v22 > 1), v23 + 1, 1, v21);
    }
    void v21[2] = v23 + 1;
    v21[v23 + 4] = v15;
    uint64_t result = swift_release();
    *(void *)(a2 + 48) = v21;
  }
  return result;
}

uint64_t sub_1C0F4B3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F4BC24(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1C108ACB4);
}

uint64_t sub_1C0F4B418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F4BC24(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1C12577C4);
}

uint64_t sub_1C0F4B444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F4BC24(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1C09F670C);
}

uint64_t sub_1C0F4B470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C0F4BB5C(a1, (uint64_t)&v65);
  uint64_t v7 = v66;
  uint64_t v8 = v67;
  uint64_t v9 = v68;
  uint64_t v10 = v69;
  uint64_t v48 = v65;
  uint64_t v56 = v65;
  uint64_t v57 = v66;
  uint64_t v58 = v67;
  uint64_t v59 = v68;
  uint64_t v60 = v69;
  uint64_t v51 = v71;
  unsigned __int16 v62 = v71;
  uint64_t v63 = MEMORY[0x1E4FBC860];
  unint64_t v64 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v49 = v70;
  unsigned int v61 = v70;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v45 = v10;
    uint64_t v46 = v8;
    uint64_t v47 = v7;
    swift_bridgeObjectRetain();
    sub_1C0F4BBB8(a1);
    swift_bridgeObjectRetain();
    unint64_t v13 = (_OWORD *)(v11 + 56);
    while (1)
    {
      uint64_t v14 = *((void *)v13 - 3);
      uint64_t v15 = *((void *)v13 - 1);
      if (v15)
      {
        uint64_t v16 = *((void *)v13 - 2);
        long long v54 = *v13;
        unsigned int v17 = v64;
        swift_retain();
        swift_bridgeObjectRetain_n();
        uint64_t v55 = v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v17 = sub_1C0EE2410(0, v17[2] + 1, 1, v17);
        }
        unint64_t v19 = v17[2];
        unint64_t v18 = v17[3];
        if (v19 >= v18 >> 1) {
          unsigned int v17 = sub_1C0EE2410((void *)(v18 > 1), v19 + 1, 1, v17);
        }
        v17[2] = v19 + 1;
        long long v20 = &v17[4 * v19];
        v20[4] = v16;
        v20[5] = v15;
        *((_OWORD *)v20 + 3) = v54;
        unint64_t v64 = v17;
        uint64_t v4 = v55;
      }
      else
      {
        swift_retain();
      }
      uint64_t v72 = v14;
      swift_retain();
      sub_1C05B4E6C(&v56);
      if (v4) {
        break;
      }
      unint64_t v13 = (_OWORD *)((char *)v13 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v8 = v46;
        uint64_t v7 = v47;
        uint64_t v10 = v45;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v21 = v56;
    uint64_t v22 = v57;
    uint64_t v23 = v58;
    uint64_t v24 = v59;
    uint64_t v25 = v60;
    unint64_t v26 = v61 | ((unint64_t)v62 << 32);
    goto LABEL_18;
  }
  sub_1C0F4BBB8(a1);
LABEL_15:
  unint64_t v27 = v49 | (v51 << 32);
  if ((v27 >> 45) - 1 < 5 || v27 >> 45 == 6 && v27 == 0xC00000000000 && v48 == 1 && !(v8 | v7 | v9 | v10))
  {
    uint64_t v28 = swift_bridgeObjectRetain();
    char v29 = sub_1C0386968(v28);
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      uint64_t v21 = v56;
      uint64_t v22 = v57;
      uint64_t v23 = v58;
      uint64_t v24 = v59;
      uint64_t v25 = v60;
      unint64_t v26 = v61 | ((unint64_t)v62 << 32);
LABEL_18:
      sub_1C017F59C(v21, v22, v23, v24, v25, v26);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v56;
  uint64_t v33 = v57;
  uint64_t v34 = v58;
  uint64_t v35 = v59;
  uint64_t v36 = v60;
  unsigned __int16 v37 = v62;
  unsigned int v38 = v61;
  unint64_t v39 = v61 | ((unint64_t)v62 << 32);
  uint64_t v40 = v63;
  unint64_t v41 = v64;
  *(void *)(v31 + 16) = v56;
  *(void *)(v31 + 24) = v33;
  *(void *)(v31 + 32) = v34;
  *(void *)(v31 + 40) = v35;
  *(void *)(v31 + 48) = v36;
  *(_WORD *)(v31 + 60) = v37;
  *(_DWORD *)(v31 + 56) = v38;
  *(void *)(v31 + 64) = v40;
  *(void *)(v31 + 72) = v41;
  unint64_t v42 = *(void **)(a2 + 48);
  unint64_t v50 = v39;
  uint64_t v52 = v32;
  sub_1C017F510(v32, v33, v34, v35, v36, v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v42 = sub_1C0EE23FC(0, v42[2] + 1, 1, v42);
  }
  unint64_t v44 = v42[2];
  unint64_t v43 = v42[3];
  if (v44 >= v43 >> 1) {
    unint64_t v42 = sub_1C0EE23FC((void *)(v43 > 1), v44 + 1, 1, v42);
  }
  v42[2] = v44 + 1;
  v42[v44 + 4] = v31;
  swift_release();
  sub_1C017F59C(v52, v33, v34, v35, v36, v50);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 48) = v42;
  return result;
}

uint64_t sub_1C0F4B89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0F4BB5C(a1, (uint64_t)&v45);
  uint64_t v5 = v45;
  uint64_t v6 = v46;
  uint64_t v8 = v47;
  uint64_t v7 = v48;
  uint64_t v9 = v49;
  uint64_t v10 = v51;
  uint64_t v11 = v50;
  uint64_t v36 = v45;
  uint64_t v37 = v46;
  uint64_t v38 = v47;
  uint64_t v39 = v48;
  uint64_t v40 = v49;
  unsigned __int16 v42 = v51;
  unsigned int v41 = v50;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1C0F4BBB8(a1);
  uint64_t v12 = v52;
  sub_1C14521F4((uint64_t)&v36, a3);
  if (v12)
  {
    sub_1C017F59C(v36, v37, v38, v39, v40, v41 | ((unint64_t)v42 << 32));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = 0;
    unint64_t v14 = v11 | (v10 << 32);
    uint64_t v15 = (v14 >> 45) & 7;
    if (((v15 - 1) < 5
       || v15 == 6 && (v14 & 0xFFFFFFFFFFFFLL) == 0xC00000000000 && v5 == 1 && !(v8 | v6 | v7 | v9))
      && (uint64_t v16 = swift_bridgeObjectRetain(), v17 = sub_1C0386968(v16), swift_bridgeObjectRelease(), (v17 & 1) == 0))
    {
      sub_1C017F59C(v5, v6, v8, v7, v9, v14);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = swift_allocObject();
      uint64_t v19 = v36;
      uint64_t v20 = v37;
      uint64_t v21 = v38;
      uint64_t v22 = v39;
      uint64_t v23 = v40;
      unsigned __int16 v24 = v42;
      unsigned int v25 = v41;
      unint64_t v26 = v41 | ((unint64_t)v42 << 32);
      uint64_t v27 = v43;
      uint64_t v28 = v44;
      *(void *)(v18 + 16) = v36;
      *(void *)(v18 + 24) = v20;
      *(void *)(v18 + 32) = v21;
      *(void *)(v18 + 40) = v22;
      *(void *)(v18 + 48) = v23;
      *(_WORD *)(v18 + 60) = v24;
      *(_DWORD *)(v18 + 56) = v25;
      *(void *)(v18 + 64) = v27;
      *(void *)(v18 + 72) = v28;
      char v29 = *(void **)(a2 + 48);
      uint64_t v33 = v20;
      uint64_t v34 = v19;
      unint64_t v32 = v26;
      sub_1C017F510(v19, v20, v21, v22, v23, v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v29 = sub_1C0EE23FC(0, v29[2] + 1, 1, v29);
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        char v29 = sub_1C0EE23FC((void *)(v30 > 1), v31 + 1, 1, v29);
      }
      v29[2] = v31 + 1;
      v29[v31 + 4] = v18;
      swift_release();
      sub_1C017F59C(v34, v33, v21, v22, v23, v32);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(a2 + 48) = v29;
    }
  }
  return result;
}

uint64_t sub_1C0F4BB5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0F4BBB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0F4BBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F4BC24(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1C13DC47C);
}

uint64_t sub_1C0F4BC24(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v52 = a4;
  sub_1C0F4BB5C(a1, (uint64_t)&v45);
  uint64_t v6 = v45;
  uint64_t v7 = v46;
  uint64_t v8 = v47;
  uint64_t v9 = v48;
  uint64_t v10 = v49;
  uint64_t v11 = v51;
  uint64_t v12 = v50;
  uint64_t v36 = v45;
  uint64_t v37 = v46;
  uint64_t v38 = v47;
  uint64_t v39 = v48;
  uint64_t v40 = v49;
  unsigned __int16 v42 = v51;
  unsigned int v41 = v50;
  uint64_t v43 = (void (*)(uint64_t *, uint64_t))MEMORY[0x1E4FBC860];
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1C0F4BBB8(a1);
  v52(&v36, a3);
  if (v34
    || ((unint64_t v14 = v12 | (v11 << 32), (v14 >> 45) - 1 < 5)
     || v14 >> 45 == 6 && v14 == 0xC00000000000 && v6 == 1 && !(v8 | v7 | v9 | v10))
    && (v15 = swift_bridgeObjectRetain(), char v16 = sub_1C0386968(v15), swift_bridgeObjectRelease(), (v16 & 1) == 0))
  {
    sub_1C017F59C(v36, v37, v38, v39, v40, v41 | ((unint64_t)v42 << 32));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = v36;
    uint64_t v19 = v37;
    uint64_t v20 = v38;
    uint64_t v21 = v39;
    uint64_t v22 = v40;
    unsigned __int16 v23 = v42;
    unsigned int v24 = v41;
    unint64_t v25 = v41 | ((unint64_t)v42 << 32);
    unint64_t v26 = v43;
    uint64_t v27 = v44;
    *(void *)(v17 + 16) = v36;
    *(void *)(v17 + 24) = v19;
    *(void *)(v17 + 32) = v20;
    *(void *)(v17 + 40) = v21;
    *(void *)(v17 + 48) = v22;
    *(_WORD *)(v17 + 60) = v23;
    *(_DWORD *)(v17 + 56) = v24;
    *(void *)(v17 + 64) = v26;
    *(void *)(v17 + 72) = v27;
    uint64_t v28 = *(void **)(a2 + 48);
    uint64_t v35 = v18;
    unint64_t v31 = v25;
    uint64_t v32 = v19;
    sub_1C017F510(v18, v19, v20, v21, v22, v25);
    uint64_t v52 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_1C0EE23FC(0, v28[2] + 1, 1, v28);
    }
    unint64_t v30 = v28[2];
    unint64_t v29 = v28[3];
    if (v30 >= v29 >> 1) {
      uint64_t v28 = sub_1C0EE23FC((void *)(v29 > 1), v30 + 1, 1, v28);
    }
    v28[2] = v30 + 1;
    v28[v30 + 4] = v17;
    swift_release();
    sub_1C017F59C(v35, v32, v20, v21, v22, v31);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a2 + 48) = v28;
  }
  return result;
}

uint64_t sub_1C0F4BEC4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for FormatDerivedData(uint64_t a1)
{
  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL) {
    sub_1C017F5B0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDerivedData(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int16 *)(a2 + 44) >> 9 <= 0x7EuLL)
  {
    unint64_t v5 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    sub_1C017F524(*(void *)a2, v7, v8, v9, v10, v5);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(_WORD *)(a1 + 44) = WORD2(v5);
    *(_DWORD *)(a1 + 40) = v5;
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  }
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDerivedData(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = *((unsigned int *)a2 + 10) | ((unint64_t)*((unsigned __int16 *)a2 + 22) << 32);
  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL)
  {
    if (((v4 >> 41) & 0x7F) == 0x7F)
    {
      sub_1C030EAFC(a1);
      long long v7 = *(_OWORD *)((char *)a2 + 30);
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 30) = v7;
    }
    else
    {
      uint64_t v14 = *a2;
      uint64_t v15 = a2[1];
      uint64_t v16 = a2[2];
      uint64_t v17 = a2[3];
      uint64_t v18 = a2[4];
      sub_1C017F524(*a2, v15, v16, v17, v18, v4);
      uint64_t v19 = *(void *)a1;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = *(void *)(a1 + 16);
      uint64_t v22 = *(void *)(a1 + 24);
      uint64_t v23 = *(void *)(a1 + 32);
      unint64_t v24 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v15;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = v18;
      *(_DWORD *)(a1 + 40) = v4;
      *(_WORD *)(a1 + 44) = WORD2(v4);
      sub_1C017F5B0(v19, v20, v21, v22, v23, v24);
    }
  }
  else if (((v4 >> 41) & 0x7F) == 0x7F)
  {
    long long v5 = *(_OWORD *)a2;
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 30) = *(_OWORD *)((char *)a2 + 30);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    uint64_t v9 = *a2;
    uint64_t v10 = a2[1];
    uint64_t v11 = a2[2];
    uint64_t v12 = a2[3];
    uint64_t v13 = a2[4];
    sub_1C017F524(*a2, v10, v11, v12, v13, v4);
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v11;
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v13;
    *(_WORD *)(a1 + 44) = WORD2(v4);
    *(_DWORD *)(a1 + 40) = v4;
  }
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDerivedData(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL)
  {
    unint64_t v4 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
    if (((v4 >> 41) & 0x7F) != 0x7F)
    {
      unint64_t v6 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
      uint64_t v7 = *(void *)(a2 + 32);
      uint64_t v8 = *(void *)a1;
      uint64_t v9 = *(void *)(a1 + 8);
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v12 = *(void *)(a1 + 32);
      long long v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      *(void *)(a1 + 32) = v7;
      *(_DWORD *)(a1 + 40) = v4;
      *(_WORD *)(a1 + 44) = WORD2(v4);
      sub_1C017F5B0(v8, v9, v10, v11, v12, v6);
      goto LABEL_6;
    }
    sub_1C030EAFC(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedData()
{
  return &type metadata for FormatDerivedData;
}

uint64_t sub_1C0F4C268@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0F4C81C(0, &qword_1EA1A9248, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F4C720();
  sub_1C1520EBC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v38 = 0;
    sub_1C0F4C774();
    sub_1C152065C();
    unint64_t v24 = a2;
    uint64_t v10 = v33;
    uint64_t v29 = v32;
    uint64_t v30 = v31;
    uint64_t v11 = v34;
    uint64_t v28 = v35;
    unint64_t v12 = v36 | ((unint64_t)v37 << 32);
    sub_1C0D78CF4(0, &qword_1EA1A9260, (uint64_t)&type metadata for FormatDerivedDataInstruction, MEMORY[0x1E4FBB320]);
    char v38 = 1;
    uint64_t v26 = v11;
    uint64_t v27 = v10;
    unint64_t v25 = v12;
    sub_1C017F510(v30, v29, v10, v11, v28, v12);
    sub_1C0F4C95C(&qword_1EA1A9268, (void (*)(void))sub_1C0F4C7C8);
    sub_1C15206EC();
    uint64_t v13 = v29;
    uint64_t v14 = v30;
    uint64_t v15 = v31;
    sub_1C0D78CF4(0, &qword_1EA1A3BC0, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBB320]);
    char v38 = 2;
    sub_1C0F4CA40(&qword_1EA1A9278, (void (*)(void))sub_1BFEB3CF0);
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v23 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = v26;
    uint64_t v16 = v27;
    uint64_t v18 = v28;
    unint64_t v19 = v25;
    sub_1C017F510(v14, v13, v27, v26, v28, v25);
    sub_1C017F59C(v14, v13, v16, v17, v18, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1C017F59C(v14, v13, v16, v17, v18, v19);
    uint64_t v20 = v23;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = v24;
    *unint64_t v24 = v14;
    v22[1] = v13;
    v22[2] = v16;
    v22[3] = v17;
    v22[4] = v18;
    *((_WORD *)v22 + 22) = WORD2(v19);
    *((_DWORD *)v22 + 10) = v19;
    v22[6] = v15;
    v22[7] = v20;
  }
  return result;
}

unint64_t sub_1C0F4C720()
{
  unint64_t result = qword_1EA1A9250;
  if (!qword_1EA1A9250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9250);
  }
  return result;
}

unint64_t sub_1C0F4C774()
{
  unint64_t result = qword_1EA1A9258;
  if (!qword_1EA1A9258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9258);
  }
  return result;
}

unint64_t sub_1C0F4C7C8()
{
  unint64_t result = qword_1EA1A9270;
  if (!qword_1EA1A9270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9270);
  }
  return result;
}

void sub_1C0F4C81C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0F4C720();
    unint64_t v7 = a3(a1, &type metadata for FormatDerivedData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F4C880(uint64_t a1, uint64_t a2)
{
  sub_1C0D78CF4(0, &qword_1EA1A9288, (uint64_t)&type metadata for FormatDerivedDataScope, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0F4C908()
{
  unint64_t result = qword_1EA1A9290;
  if (!qword_1EA1A9290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9290);
  }
  return result;
}

uint64_t sub_1C0F4C95C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0D78CF4(255, &qword_1EA1A9260, (uint64_t)&type metadata for FormatDerivedDataInstruction, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0F4C9EC()
{
  unint64_t result = qword_1EA1A92A0;
  if (!qword_1EA1A92A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A92A0);
  }
  return result;
}

uint64_t sub_1C0F4CA40(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0D78CF4(255, &qword_1EA1A3BC0, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0F4CAD0()
{
  unint64_t result = qword_1EA1A92B0;
  if (!qword_1EA1A92B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A92B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F4CBF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedData.CodingKeys()
{
  return &type metadata for FormatDerivedData.CodingKeys;
}

unint64_t sub_1C0F4CC2C()
{
  unint64_t result = qword_1EA1A92B8;
  if (!qword_1EA1A92B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A92B8);
  }
  return result;
}

unint64_t sub_1C0F4CC84()
{
  unint64_t result = qword_1EA1A92C0;
  if (!qword_1EA1A92C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A92C0);
  }
  return result;
}

unint64_t sub_1C0F4CCDC()
{
  unint64_t result = qword_1EA1A92C8;
  if (!qword_1EA1A92C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A92C8);
  }
  return result;
}

uint64_t sub_1C0F4CD30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65706F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463757274736E69 && a2 == 0xEC000000736E6F69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D656372756F735FLL && a2 == 0xEB00000000737061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

ValueMetadata *type metadata accessor for FormatDerivedDataResult()
{
  return &type metadata for FormatDerivedDataResult;
}

uint64_t sub_1C0F4CEC0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  int v3 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    goto LABEL_32;
  }
  uint64_t v5 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  unsigned __int16 v42 = v2;
  uint64_t v40 = v5;
  uint64_t v41 = v4;
  while (1)
  {
    int v7 = *(unsigned __int8 *)(v5 + v6);
    if (v7 != 10)
    {
      if (*(void *)(v2[5] + 16))
      {
        swift_bridgeObjectRelease();
        type metadata accessor for FormatDerivedDataError();
        sub_1C00DAB28();
        swift_allocError();
        uint64_t v38 = v37;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        *(unsigned char *)uint64_t v38 = v7;
        *(void *)(v38 + 8) = 0xD00000000000001BLL;
        *(void *)(v38 + 16) = 0x80000001C162F7B0;
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
      goto LABEL_4;
    }
    uint64_t v8 = v2[3];
    uint64_t v54 = v8;
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9) {
      break;
    }
LABEL_4:
    if (++v6 == v4)
    {
      swift_bridgeObjectRelease();
      int v3 = a2;
LABEL_32:
      uint64_t v33 = *v2;
      uint64_t v52 = v2[1];
      uint64_t v53 = v33;
      uint64_t v34 = v2[2];
      uint64_t v50 = v2[3];
      uint64_t v51 = v34;
      uint64_t v35 = v2[4];
      uint64_t v48 = v2[5];
      uint64_t v49 = v35;
      sub_1BFFAF7A4((uint64_t)&v53);
      sub_1BFFAF7A4((uint64_t)&v52);
      sub_1BFFAF7A4((uint64_t)&v51);
      sub_1BFFAF7A4((uint64_t)&v50);
      sub_1BFFAF7A4((uint64_t)&v49);
      uint64_t result = sub_1BFFAF7A4((uint64_t)&v48);
      long long v36 = *((_OWORD *)v2 + 1);
      _OWORD *v3 = *(_OWORD *)v2;
      v3[1] = v36;
      v3[2] = *((_OWORD *)v2 + 2);
      return result;
    }
  }
  uint64_t v43 = v6;
  uint64_t v10 = v8 + 32;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v44 = v10;
  uint64_t v45 = v9;
  while (1)
  {
    unint64_t v12 = (uint64_t *)(v10 + 88 * v11);
    if (*((unsigned char *)v12 + 16) != 1) {
      goto LABEL_9;
    }
    uint64_t v13 = v12[1];
    uint64_t v15 = v12[3];
    uint64_t v14 = v12[4];
    unsigned __int8 v16 = *((unsigned char *)v12 + 40);
    uint64_t v46 = *v12;
    uint64_t v17 = v12[10];
    if (!*(void *)(v17 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1C015F808(v15, v14, v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C015F808(v15, v14, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v18 = sub_1C1520E0C();
    uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v20 = v18 & ~v19;
    uint64_t v21 = v17 + 56;
    if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      break;
    }
    uint64_t v22 = *(void *)(v17 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v20);
    BOOL v24 = *v23 == v46 && v23[1] == v13;
    if (!v24 && (sub_1C1520A9C() & 1) == 0)
    {
      uint64_t v25 = ~v19;
      unint64_t v26 = (v20 + 1) & v25;
      if (((*(void *)(v21 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        break;
      }
      while (1)
      {
        uint64_t v27 = (void *)(v22 + 16 * v26);
        BOOL v28 = *v27 == v46 && v27[1] == v13;
        if (v28 || (sub_1C1520A9C() & 1) != 0) {
          break;
        }
        unint64_t v26 = (v26 + 1) & v25;
        if (((*(void *)(v21 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
          goto LABEL_29;
        }
      }
    }
    swift_bridgeObjectRelease_n();
    sub_1C015FB90(v15, v14, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v44;
    uint64_t v9 = v45;
LABEL_9:
    if (++v11 == v9)
    {
      sub_1BFCA59C8((uint64_t)&v54);
      BOOL v2 = v42;
      uint64_t v5 = v40;
      uint64_t v4 = v41;
      uint64_t v6 = v43;
      goto LABEL_4;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
LABEL_30:
  sub_1BFCA59C8((uint64_t)&v54);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatDerivedDataError();
  sub_1C00DAB28();
  swift_allocError();
  uint64_t v30 = v29;
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v47 = sub_1C00B152C(v31);
  swift_bridgeObjectRelease();
  *uint64_t v30 = v46;
  v30[1] = v13;
  v30[2] = v47;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1C015FB90(v15, v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F4D530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v37 = a3;
  uint64_t v46 = a4;
  uint64_t v9 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (unint64_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v34 = (uint64_t)&v33 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v19 = *(void *)(a5 + 8);
  unsigned __int8 v20 = *(unsigned char *)(a5 + 16);
  uint64_t v21 = *(void *)(a5 + 56);
  uint64_t v40 = *(void *)a5;
  uint64_t v18 = v40;
  uint64_t v41 = v19;
  unsigned __int8 v42 = v20;
  long long v43 = *(_OWORD *)(a5 + 24);
  long long v44 = *(_OWORD *)(a5 + 40);
  uint64_t v22 = v43;
  uint64_t v45 = v21;
  swift_bridgeObjectRetain();
  sub_1C015F808(v18, v19, v20);
  uint64_t v35 = v11;
  uint64_t v23 = v11;
  uint64_t v24 = a1;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a2;
  uint64_t v28 = v37;
  uint64_t v29 = v39;
  sub_1C0D8AA28(v25, v27, v37, v38, v23);
  if (v29)
  {
    sub_1C015FB90(v18, v19, v20);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)uint64_t v17 = v22;
    *((void *)v17 + 1) = v24;
    *((void *)v17 + 2) = v26;
    *((void *)v17 + 3) = v28;
    *((void *)v17 + 4) = v46;
    *((void *)v17 + 5) = v18;
    *((void *)v17 + 6) = v19;
    v17[56] = v20;
    sub_1C0F4D77C((uint64_t)v35, (uint64_t)&v17[*(int *)(v33 + 28)]);
    uint64_t v31 = v36;
    sub_1C0F4D7E0((uint64_t)v17, v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v34;
    sub_1C02B6F90(v34, v31);
    sub_1C0F4D9A0(v32);
    return sub_1C0F4D9A0((uint64_t)v17);
  }
}

uint64_t sub_1C0F4D77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F4D7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F4D844(void *a1, long long *a2, uint64_t a3)
{
  long long v6 = a2[3];
  v16[2] = a2[2];
  v16[3] = v6;
  long long v7 = a2[1];
  v16[0] = *a2;
  v16[1] = v7;
  if (*(void *)(*a1 + 16))
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1BFEF3808(v8);
  }
  if (*(void *)(a1[1] + 16))
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1BFEF3808(v9);
  }
  uint64_t result = a1[2];
  if (*(void *)(result + 16))
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t result = sub_1C111C2EC(v11);
  }
  if (*(void *)(a1[5] + 16))
  {
    sub_1C09102F0((uint64_t)v16);
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C090EEB4(v12, (uint64_t)v16);
    sub_1C0910368((uint64_t)v16);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C10486F4(v13);
  }
  if (*(void *)(a1[4] + 16))
  {
    sub_1C09102F0((uint64_t)v16);
    swift_retain();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C090EA50(v14, v16, a3);
    swift_release();
    sub_1C0910368((uint64_t)v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v3)
    {
      sub_1C111D278(v15);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C0F4D9A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataResultValidation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6)
  {
    unsigned int v2 = a2 + 10;
    if (a2 + 10 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 10;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 10;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0F4DAA8);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 10;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 0xA;
  unsigned int v9 = v7 - 10;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataResultValidation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 10;
  if (a3 + 10 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF6) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v7 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C0F4DB90);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t sub_1C0F4DBB8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0xA) {
    return v1 - 9;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1C0F4DBCC(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 9;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataResultValidation()
{
  return &type metadata for FormatDerivedDataResultValidation;
}

ValueMetadata *type metadata accessor for M18_V1()
{
  return &type metadata for M18_V1;
}

uint64_t sub_1C0F4DBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a2;
  sub_1C0F54294(0, (unint64_t *)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  unsigned int v5 = (char *)&v59 - v4;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v68 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
    int64_t v46 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v46) {
      goto LABEL_35;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = v7 - 1;
  uint64_t v9 = 32;
  uint64_t v10 = &selRef_setSpacing_;
  while (1)
  {
    long long v11 = *(_OWORD *)(a1 + v9 + 112);
    long long v66 = *(_OWORD *)(a1 + v9 + 96);
    v67[0] = v11;
    *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)(a1 + v9 + 121);
    long long v12 = *(_OWORD *)(a1 + v9 + 48);
    long long v62 = *(_OWORD *)(a1 + v9 + 32);
    long long v63 = v12;
    long long v13 = *(_OWORD *)(a1 + v9 + 80);
    long long v64 = *(_OWORD *)(a1 + v9 + 64);
    long long v65 = v13;
    long long v14 = *(_OWORD *)(a1 + v9 + 16);
    long long v60 = *(_OWORD *)(a1 + v9);
    long long v61 = v14;
    uint64_t v15 = (void *)v60;
    int v16 = v64;
    sub_1C0187FB0((uint64_t)&v60);
    id v17 = [v15 v10[109]];
    uint64_t v18 = v17;
    if (v16 != 1) {
      break;
    }
    if (!v17) {
      goto LABEL_22;
    }
    id v19 = v15;
    objc_msgSend(v19, sel_coverImageAspectRatio);
    id v20 = v18;
    id v21 = objc_msgSend(v19, sel_layeredCoverJSON);
    if (!v21)
    {

LABEL_14:
      __int16 v30 = qword_1F1B66930;
      if (!qword_1F1B66930) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    uint64_t v22 = v21;
    sub_1C151E62C();

    swift_bridgeObjectRetain();
    sub_1C151545C();
    uint64_t v23 = sub_1C15154CC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 0, 1, v23);
    LOBYTE(v22) = sub_1C151823C();
    swift_bridgeObjectRelease();
    sub_1C0F53EB4((uint64_t)v5, (uint64_t)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0F54294);
    if (v22)
    {

      swift_bridgeObjectRelease();
      uint64_t v10 = &selRef_setSpacing_;
      goto LABEL_14;
    }
    id v31 = v19;
    objc_msgSend(v31, sel_layeredCoverAspectRatio);
    swift_bridgeObjectRelease();

    __int16 v32 = qword_1F1B66960[0];
    if ((qword_1F1B66960[0] & ~qword_1F1B66958) == 0) {
      __int16 v32 = 0;
    }
    __int16 v30 = v32 | qword_1F1B66958;
    uint64_t v10 = &selRef_setSpacing_;
LABEL_21:
    if ((v30 & 0x1000) != 0) {
      goto LABEL_28;
    }
LABEL_22:
    sub_1C01880A4((uint64_t)&v60);
    if (!v8) {
      goto LABEL_34;
    }
LABEL_33:
    v9 += 144;
    --v8;
  }
  if (v17)
  {
    id v24 = v15;
    objc_msgSend(v24, sel_coverImageAspectRatio);
    id v25 = v18;
    id v26 = objc_msgSend(v24, sel_layeredCoverJSON);
    if (v26)
    {
      uint64_t v27 = v26;
      sub_1C151E62C();

      swift_bridgeObjectRetain();
      sub_1C151545C();
      uint64_t v28 = sub_1C15154CC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v5, 0, 1, v28);
      LOBYTE(v27) = sub_1C151823C();
      swift_bridgeObjectRelease();
      sub_1C0F53EB4((uint64_t)v5, (uint64_t)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0F54294);
      if (v27)
      {

        swift_bridgeObjectRelease();
        uint64_t v10 = &selRef_setSpacing_;
        goto LABEL_17;
      }
      id v33 = v24;
      objc_msgSend(v33, sel_layeredCoverAspectRatio);
      swift_bridgeObjectRelease();

      int v34 = qword_1F1B669B8[0];
      if ((qword_1F1B669B8[0] & ~qword_1F1B669B0) == 0) {
        int v34 = 0;
      }
      int v29 = v34 | qword_1F1B669B0;
      uint64_t v10 = &selRef_setSpacing_;
    }
    else
    {

LABEL_17:
      int v29 = qword_1F1B66988;
    }
  }
  else
  {
    int v29 = 0;
  }
  if (((qword_1F1B669E0 | v29) & 0x1000) == 0) {
    goto LABEL_22;
  }
LABEL_28:
  uint64_t v35 = v68;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C05F6B88(0, *(void *)(v35 + 16) + 1, 1);
    uint64_t v35 = v68;
  }
  unint64_t v37 = *(void *)(v35 + 16);
  unint64_t v36 = *(void *)(v35 + 24);
  if (v37 >= v36 >> 1)
  {
    sub_1C05F6B88(v36 > 1, v37 + 1, 1);
    uint64_t v35 = v68;
  }
  *(void *)(v35 + 16) = v37 + 1;
  uint64_t v38 = (_OWORD *)(v35 + 144 * v37);
  v38[2] = v60;
  long long v39 = v61;
  long long v40 = v62;
  long long v41 = v64;
  v38[5] = v63;
  v38[6] = v41;
  v38[3] = v39;
  v38[4] = v40;
  long long v42 = v65;
  long long v43 = v66;
  long long v44 = v67[0];
  *(_OWORD *)((char *)v38 + 153) = *(_OWORD *)((char *)v67 + 9);
  v38[8] = v43;
  v38[9] = v44;
  v38[7] = v42;
  if (v8) {
    goto LABEL_33;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v45 = v68;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  int64_t v46 = *(void *)(v68 + 16);
  if (!v46)
  {
LABEL_41:
    uint64_t result = swift_release();
    uint64_t v47 = MEMORY[0x1E4FBC860];
    goto LABEL_42;
  }
LABEL_35:
  *(void *)&long long v60 = v6;
  sub_1BFF661B8(0, v46, 0);
  uint64_t v47 = v60;
  uint64_t v48 = (uint64_t *)(v45 + 48);
  do
  {
    uint64_t v50 = *(v48 - 1);
    uint64_t v49 = *v48;
    *(void *)&long long v60 = v47;
    unint64_t v51 = *(void *)(v47 + 16);
    unint64_t v52 = *(void *)(v47 + 24);
    swift_bridgeObjectRetain();
    if (v51 >= v52 >> 1)
    {
      sub_1BFF661B8(v52 > 1, v51 + 1, 1);
      uint64_t v47 = v60;
    }
    *(void *)(v47 + 16) = v51 + 1;
    uint64_t v53 = v47 + 16 * v51;
    *(void *)(v53 + 32) = v50;
    *(void *)(v53 + 40) = v49;
    v48 += 18;
    --v46;
  }
  while (v46);
  uint64_t result = swift_release();
LABEL_42:
  uint64_t v55 = *(void *)(v47 + 16);
  if (v55 <= v59)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  else
  {
    if ((v59 & 0x8000000000000000) == 0)
    {
      uint64_t v56 = sub_1C06052CC(v47 + 32, v59, (2 * v55) | 1);
      swift_bridgeObjectRelease();
      uint64_t v57 = swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C0F5158C(v57, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v58;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0F4E258(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = a1;
    uint64_t v4 = sub_1C15204BC();
    if (v4)
    {
LABEL_3:
      unint64_t v5 = 0;
      unint64_t v6 = v2 & 0xC000000000000001;
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFFF8;
      do
      {
        if (v6)
        {
          MEMORY[0x1C18C7CB0](v5, v2);
          unint64_t v8 = v5 + 1;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_19;
          }
          swift_retain();
          unint64_t v8 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        int v9 = qword_1F1B668D8[0];
        if ((qword_1F1B668D8[0] & ~qword_1F1B668D0) == 0) {
          int v9 = 0;
        }
        if (((v9 | qword_1F1B668D0) & 0x1000) != 0)
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
          uint64_t v2 = a1;
        }
        else
        {
          swift_release();
        }
        ++v5;
      }
      while (v8 != v4);
      swift_bridgeObjectRelease();
      uint64_t v10 = v26;
      if ((v26 & 0x8000000000000000) == 0) {
        goto LABEL_22;
      }
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
LABEL_22:
  if ((v10 & 0x4000000000000000) != 0)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();
    swift_release();
    if (!v11) {
      goto LABEL_34;
    }
    goto LABEL_24;
  }
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
LABEL_34:
    uint64_t result = swift_release();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    goto LABEL_35;
  }
LABEL_24:
  uint64_t v27 = v3;
  uint64_t result = sub_1BFF661B8(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v27;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      MEMORY[0x1C18C7CB0](v13, v10);
    }
    else {
      swift_retain();
    }
    sub_1C151A0CC();
    sub_1C0F53E6C((unint64_t *)&qword_1EB85F338, MEMORY[0x1E4FABC38]);
    uint64_t v15 = sub_1C151811C();
    uint64_t v17 = v16;
    swift_release();
    unint64_t v19 = *(void *)(v27 + 16);
    unint64_t v18 = *(void *)(v27 + 24);
    if (v19 >= v18 >> 1) {
      sub_1BFF661B8(v18 > 1, v19 + 1, 1);
    }
    ++v13;
    *(void *)(v27 + 16) = v19 + 1;
    uint64_t v20 = v27 + 16 * v19;
    *(void *)(v20 + 32) = v15;
    *(void *)(v20 + 40) = v17;
  }
  while (v11 != v13);
  uint64_t result = swift_release();
  uint64_t v2 = a1;
LABEL_35:
  uint64_t v21 = *(void *)(v14 + 16);
  if (v21 <= a2)
  {
    swift_bridgeObjectRetain();
    goto LABEL_39;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = sub_1C06052CC(v14 + 32, a2, (2 * v21) | 1);
    swift_bridgeObjectRelease();
    unint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C0F51838(v23, v22);
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C0F4E5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&long long v25 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = v3 + 32;
    uint64_t v7 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1C024A070(v6, (uint64_t)v53);
      if ((byte_1F1B66AE1 & 0x10) != 0)
      {
        sub_1C063FFF4((uint64_t)v53, (uint64_t)&v43);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7838(0, *(void *)(v7 + 16) + 1, 1);
        }
        uint64_t v7 = v25;
        unint64_t v9 = *(void *)(v25 + 16);
        unint64_t v8 = *(void *)(v25 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1C05F7838(v8 > 1, v9 + 1, 1);
          uint64_t v7 = v25;
        }
        *(void *)(v7 + 16) = v9 + 1;
        sub_1C063FFF4((uint64_t)&v43, v7 + 288 * v9 + 32);
      }
      else
      {
        sub_1C024A288((uint64_t)v53);
      }
      v6 += 288;
      --v5;
    }
    while (v5);
    uint64_t v10 = v25;
  }
  else
  {
    uint64_t v10 = v4;
  }
  swift_bridgeObjectRelease();
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v42 = v4;
    sub_1BFF661B8(0, v11, 0);
    uint64_t v12 = v10 + 32;
    while (1)
    {
      sub_1C024A070(v12, (uint64_t)v53);
      sub_1C024A070((uint64_t)v53, (uint64_t)&v43);
      if (v52)
      {
        if (v52 != 1)
        {
          long long v31 = v49;
          *(_OWORD *)__int16 v32 = *(_OWORD *)v50;
          *(_OWORD *)&v32[16] = *(_OWORD *)&v50[16];
          char v33 = v51[0];
          long long v27 = v45;
          long long v28 = v46;
          long long v29 = v47;
          long long v30 = v48;
          long long v25 = v43;
          long long v26 = v44;
          uint64_t v14 = *((void *)&v43 + 1);
          uint64_t v13 = v43;
          swift_bridgeObjectRetain();
          sub_1BFEA4290((uint64_t)&v25);
          goto LABEL_21;
        }
        long long v40 = v49;
        v41[0] = *(_OWORD *)v50;
        *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)&v50[9];
        long long v36 = v45;
        long long v37 = v46;
        long long v38 = v47;
        long long v39 = v48;
        long long v34 = v43;
        long long v35 = v44;
        sub_1C0181C7C((uint64_t)v51, (uint64_t)&v25);
        sub_1C01B3B54((uint64_t)&v25);
        uint64_t v13 = *((void *)&v34 + 1);
        uint64_t v14 = v35;
        swift_bridgeObjectRetain();
        uint64_t v15 = &v34;
      }
      else
      {
        long long v25 = v43;
        long long v26 = v44;
        long long v31 = v49;
        *(_OWORD *)__int16 v32 = *(_OWORD *)v50;
        *(_OWORD *)&v32[9] = *(_OWORD *)&v50[9];
        long long v27 = v45;
        long long v28 = v46;
        long long v29 = v47;
        long long v30 = v48;
        uint64_t v13 = *((void *)&v43 + 1);
        uint64_t v14 = v44;
        swift_bridgeObjectRetain();
        uint64_t v15 = &v25;
      }
      sub_1C01880A4((uint64_t)v15);
LABEL_21:
      sub_1C024A288((uint64_t)v53);
      uint64_t v16 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v42;
      }
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BFF661B8(v17 > 1, v18 + 1, 1);
        uint64_t v16 = v42;
      }
      *(void *)(v16 + 16) = v18 + 1;
      uint64_t v19 = v16 + 16 * v18;
      *(void *)(v19 + 32) = v13;
      *(void *)(v19 + 40) = v14;
      v12 += 288;
      if (!--v11)
      {
        uint64_t result = swift_release();
        goto LABEL_28;
      }
    }
  }
  uint64_t result = swift_release();
  uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_28:
  uint64_t v21 = *(void *)(v16 + 16);
  if (v21 <= a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v3;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = sub_1C06052CC(v16 + 32, a2, (2 * v21) | 1);
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C0F51CE0(v23, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0F4E934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v37 = a1;
  long long v46 = a3;
  uint64_t v39 = sub_1C151635C();
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v41 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  long long v62 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = type metadata accessor for GroupLayoutContext();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  unint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v35[-v11];
  long long v45 = &v35[-v11];
  char v13 = *v3;
  int v36 = *v3;
  uint64_t v14 = (void *)*((void *)v3 + 1);
  unsigned __int8 v15 = v3[16];
  long long v60 = &type metadata for M18_V1;
  unint64_t v16 = sub_1C0185BAC();
  unint64_t v61 = v16;
  LOBYTE(v58) = v13;
  *((void *)&v58 + 1) = v14;
  unsigned __int8 v59 = v15;
  sub_1BFF1ED18(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v14, v15);
  uint64_t v17 = v37;
  uint64_t v42 = sub_1C0F5397C(0, 0, 0, 0, 0);
  sub_1BFF1ED18(v17, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1BFF1ED18(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v14, v15);
  sub_1C151634C();
  uint64_t v18 = sub_1C151633C();
  uint64_t v20 = v19;
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v6, v39);
  uint64_t v56 = &type metadata for M18_V1;
  unint64_t v57 = v16;
  v53[0] = v36;
  uint64_t v54 = v14;
  LOBYTE(v16) = v15;
  unsigned __int8 v55 = v15;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v14;
  uint64_t v23 = v14;
  LOBYTE(v14) = v16;
  sub_1BFFFC7A0(v22, v16);
  uint64_t v51 = sub_1C1520FAC();
  uint64_t v52 = v24;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 45;
  unint64_t v48 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v25 = sub_1C151FEBC();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v25;
  *(void *)(v21 + 24) = v27;
  long long v28 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *long long v28 = v18;
  v28[1] = v20;
  sub_1BFC66384((uint64_t)v53, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF23A3C((uint64_t)v62, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v29, 0, 1, v44);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF23A3C((uint64_t)v9, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v30, 0, 1, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFFFC630(v23, v14);
  long long v31 = (int *)type metadata accessor for M18_V1.Bound();
  __int16 v32 = v46;
  v46[3] = (uint64_t)v31;
  v32[4] = sub_1C0F53E6C(&qword_1EA1A92E0, (void (*)(uint64_t))type metadata accessor for M18_V1.Bound);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
  sub_1BFC773DC(&v58, (uint64_t)boxed_opaque_existential_0);
  uint64_t result = sub_1BFF23A3C((uint64_t)v45, (uint64_t)boxed_opaque_existential_0 + v31[5], (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[6]) = v42;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[7]) = v21;
  return result;
}

double sub_1C0F4EE7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for M18_V1.Bound();
  uint64_t v5 = *(void *)(v2 + *(int *)(v4 + 24));
  uint64_t v20 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C0184C94((void (*)(_OWORD *__return_ptr, uint64_t))sub_1C0F55670, (uint64_t)v19, v5);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1C0F4F2AC(v6, v2 + *(int *)(v4 + 20));
  uint64_t v7 = sub_1C1517BFC();
  v16[1] = v16;
  *(_OWORD *)uint64_t v17 = v22;
  uint64_t v8 = v23;
  uint64_t v9 = v24;
  uint64_t v21 = v25;
  *(void *)&long long v22 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1BFEFDF24(0, &qword_1EB85EF28, (uint64_t)&type metadata for CategoryViewLayout.Context, MEMORY[0x1E4FBB320]);
  v16[0] = v11;
  sub_1BFEFDF24(0, (unint64_t *)&qword_1EB85EF48, (uint64_t)&type metadata for CategoryViewLayoutAttributes, v10);
  sub_1C0F55698((unint64_t *)&qword_1EB85EF30, &qword_1EB85EF28, (uint64_t)&type metadata for CategoryViewLayout.Context);
  sub_1C0F55698((unint64_t *)&qword_1EB85E738, (unint64_t *)&qword_1EB85EF48, (uint64_t)&type metadata for CategoryViewLayoutAttributes);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = v12;
  sub_1BFEFDF24(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v10);
  sub_1C0F55698((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  sub_1BFEB0FD4();
  uint64_t v13 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = v17[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v17;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v15;
  return result;
}

uint64_t sub_1C0F4F160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for M18_V1.Bound();
  uint64_t v7 = *(void *)(a2 + *(int *)(v6 + 28));
  sub_1C0249E84(a1, (uint64_t)(a3 + 1));
  uint64_t v8 = a2 + *(int *)(v6 + 20);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v10 = *(void *)(*(void *)(v8 + *(int *)(v9 + 40)) + 16);
  double v11 = *(double *)(v8 + *(int *)(v9 + 32));
  sub_1BFC66384(v10 + 16, (uint64_t)v20);
  sub_1BFC66384(v10 + 56, (uint64_t)v19);
  double v12 = v11 * *(double *)(v10 + 96);
  sub_1BFC773DC(v20, (uint64_t)v17);
  sub_1BFC773DC(v19, (uint64_t)v18);
  *(double *)&v18[5] = v12;
  sub_1BFC66384((uint64_t)v18, (uint64_t)v16);
  uint64_t v13 = type metadata accessor for CategoryViewStyler();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0x4030000000000000;
  sub_1BFC773DC(v16, v14 + 24);
  a3[23] = v13;
  a3[24] = &off_1F1BA3FE0;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  a3[20] = v14;
  *a3 = v7;
  return result;
}

uint64_t sub_1C0F4F2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a1;
  sub_1BFEFDF24(0, &qword_1EB85EF28, (uint64_t)&type metadata for CategoryViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1C0F55698((unint64_t *)&qword_1EB86BEA8, &qword_1EB85EF28, (uint64_t)&type metadata for CategoryViewLayout.Context);
  uint64_t v8 = sub_1C151F0BC();
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v10 = a2 + *(int *)(v9 + 24);
  char v11 = *(unsigned char *)(v10 + 20);
  char v12 = *(unsigned char *)(v10 + 21);
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a2 + *(int *)(v9 + 40)) + 24) + 16);
  uint64_t v14 = *MEMORY[0x1E4FAB6D8];
  uint64_t v15 = sub_1C151759C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v7, v14, v15);
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v19 = v8;
  uint64_t v20 = v13;
  char v21 = v11;
  char v22 = v12;
  sub_1C0F5593C(0, (unint64_t *)&unk_1EB85E4B0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  swift_retain();
  uint64_t v16 = sub_1C1517BEC();
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C0F4F500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  long long v54 = *((_OWORD *)a3 + 2);
  long long v55 = *((_OWORD *)a3 + 3);
  long long v56 = *((_OWORD *)a3 + 4);
  long long v57 = *((_OWORD *)a3 + 5);
  long long v52 = *(_OWORD *)a3;
  long long v53 = *((_OWORD *)a3 + 1);
  CGFloat v11 = a3[12];
  CGFloat v10 = a3[13];
  CGFloat v12 = a3[14];
  CGFloat v13 = a3[15];
  uint64_t v14 = *((void *)a3 + 16);
  double v15 = a3[17];
  double v16 = a3[18];
  CGFloat v17 = a3[19];
  CGFloat v51 = v13;
  if (*(void *)(a4 + 16) - 2 <= a1)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    CGFloat v25 = a3[19];
    double v26 = a3[20];
  }
  else
  {
    v58.origin.CGFloat x = a3[17];
    v58.origin.double y = a3[18];
    v58.size.width = a3[19];
    double rect = a3[20];
    double y = v58.origin.y;
    v58.size.height = rect;
    double MinX = CGRectGetMinX(v58);
    v59.origin.CGFloat x = v11;
    v59.origin.double y = v10;
    v59.size.width = v12;
    v59.size.height = v13;
    double v19 = MinX + CGRectGetMinX(v59);
    uint64_t v47 = v14;
    double v46 = v10;
    double v20 = v15;
    double v21 = y;
    CGFloat v22 = v17;
    double v23 = rect;
    if (a1)
    {
      CGRectGetMinX(*(CGRect *)&v20);
      v61.origin.CGFloat x = v15;
      v61.origin.double y = y;
      v61.size.width = v17;
      v61.size.height = rect;
      CGRectGetWidth(v61);
    }
    else
    {
      CGRectGetWidth(*(CGRect *)&v20);
      v60.origin.CGFloat x = v11;
      v60.origin.double y = v10;
      v60.size.width = v12;
      v60.size.height = v13;
      CGRectGetMinX(v60);
    }
    CGFloat v25 = v17;
    double v27 = v17;
    double v26 = rect;
    MEMORY[0x1C18C72C0](v19, v15, y, v27, rect);
    double v49 = v15;
    v62.origin.CGFloat x = v15;
    v62.origin.double y = y;
    v62.size.width = v25;
    v62.size.height = rect;
    CGRectGetMaxY(v62);
    sub_1C151F79C();
    sub_1C151F7AC();
    type metadata accessor for M18_V1.Bound();
    sub_1C15176EC();
    sub_1C151F7BC();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    sub_1C0F54294(0, &qword_1EB87A630, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, MEMORY[0x1E4FBBE00]);
    uint64_t v36 = *(void *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8);
    unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    uint64_t v38 = (void *)(v24 + v37);
    void *v38 = v29;
    v38[1] = v31;
    v38[2] = v33;
    v38[3] = v35;
    double v15 = v49;
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = v47;
    CGFloat v10 = v46;
    double v16 = y;
  }
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = swift_allocObject();
  sub_1C0F557B4(a2, v40 + 16);
  *(_OWORD *)(v40 + 248) = v54;
  *(_OWORD *)(v40 + 264) = v55;
  *(_OWORD *)(v40 + 280) = v56;
  *(_OWORD *)(v40 + 296) = v57;
  *(_OWORD *)(v40 + 216) = v52;
  *(_OWORD *)(v40 + 232) = v53;
  *(CGFloat *)(v40 + 312) = v11;
  *(CGFloat *)(v40 + 320) = v10;
  *(CGFloat *)(v40 + 328) = v12;
  *(CGFloat *)(v40 + 336) = v51;
  *(void *)(v40 + 344) = v14;
  *(double *)(v40 + 352) = v15;
  *(double *)(v40 + 360) = v16;
  *(CGFloat *)(v40 + 368) = v25;
  *(double *)(v40 + 376) = v26;
  uint64_t v41 = a5 + *(int *)(type metadata accessor for M18_V1.Bound() + 20);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v43 = *(void *)(v41 + *(int *)(result + 28));
  BOOL v44 = __OFADD__(v43, a1);
  uint64_t v45 = v43 + a1;
  if (v44)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v40 + 384) = v45;
    *(void *)(v39 + 16) = v40 | 0x8000000000000000;
    *(void *)(v39 + 24) = v24;
    *a6 = v39 | 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1C0F4F8F4(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  CGFloat v12 = (uint64_t *)&v16[-v11];
  uint64_t v20 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 18;
  *CGFloat v12 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FABA10], v9);
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  __int16 v19 = a4 & 0x101;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0F5593C(0, &qword_1EB85E7E8, MEMORY[0x1E4FAB6F0]);
  sub_1C0F558F8((unint64_t *)&qword_1EB85E7E0, &qword_1EB85E7E8, v14);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C0F4FB00(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v42 = a4;
  uint64_t v51 = a2;
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (void *)((char *)v39 - v9);
  uint64_t v52 = a1;
  uint64_t v11 = sub_1C151729C();
  uint64_t v12 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FAB4E8], v11);
  *uint64_t v10 = v12;
  uint64_t v14 = v8 + 104;
  double v15 = *(void (**)(uint64_t *, void, uint64_t))(v8 + 104);
  v15(v10, *MEMORY[0x1E4FAB940], v7);
  double v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C0F558F8((unint64_t *)&qword_1EB85E7C0, &qword_1EB85E7C8, v17);
  sub_1C151738C();
  double v23 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  uint64_t v22 = v8 + 8;
  double v21 = v23;
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v23)(v10, v7);
  if (*(void *)(v51 + 16))
  {
    uint64_t v46 = *(void *)(v51 + 16);
    unsigned int v45 = *MEMORY[0x1E4FABA28];
    unsigned int v25 = *MEMORY[0x1E4FAB638];
    int v43 = v42 & 1;
    unsigned int v44 = v25;
    unsigned int v42 = (v42 >> 8) & 1;
    swift_bridgeObjectRetain();
    uint64_t v41 = v15;
    uint64_t v26 = 0;
    long long v40 = xmmword_1C1529AE0;
    v39[0] = v20;
    v39[1] = v19;
    uint64_t v49 = v7;
    uint64_t v50 = v22;
    uint64_t v47 = v21;
    uint64_t v48 = v14;
    do
    {
      uint64_t v27 = *(void *)(v51 + 8 * v26++ + 32);
      uint64_t v52 = a1;
      v41(v10, v45, v7);
      sub_1C0F559C0();
      sub_1C0F55BEC(0, &qword_1EB85E7D0, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FAB678]);
      uint64_t v28 = a1;
      uint64_t v30 = v29;
      uint64_t v31 = a3;
      uint64_t v32 = *(void *)(v29 - 8);
      uint64_t v33 = v10;
      unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v40;
      uint64_t v36 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v32 + 104))(v35 + v34, v44, v30);
      a3 = v31;
      MEMORY[0x1F4188790](v36);
      v39[-4] = v31;
      v39[-3] = v27;
      swift_bridgeObjectRetain();
      uint64_t v38 = v39[0];
      a1 = v28;
      uint64_t v7 = v49;
      sub_1C151731C();
      unint64_t v37 = v47;
      swift_bridgeObjectRelease();
      uint64_t v10 = v33;
      v37(v33, v7);
      swift_bridgeObjectRelease();
    }
    while (v46 != v26);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0F4FF68(uint64_t a1, uint64_t (*a2)(uint64_t *, void, uint64_t), uint64_t a3, unsigned int a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v29 - v11);
  uint64_t v39 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 6;
  *uint64_t v12 = v13;
  uint64_t v14 = *(void (**)(void))(v10 + 104);
  unsigned int v30 = *MEMORY[0x1E4FABA10];
  uint64_t v29 = (uint64_t (*)(uint64_t *, void, uint64_t))v14;
  v14(v12);
  uint64_t v35 = a2;
  uint64_t v36 = (uint64_t (*)(void, void, void))a2;
  uint64_t v37 = a3;
  int v32 = a4 & 1;
  __int16 v38 = a4 & 0x101;
  int v31 = (a4 >> 8) & 1;
  double v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C0F558F8((unint64_t *)&qword_1EB85E7C0, &qword_1EB85E7C8, v15);
  uint64_t v28 = v18;
  uint64_t v33 = v17;
  sub_1C151734C();
  uint64_t v19 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  uint64_t result = v19(v12, v9);
  unint64_t v34 = (uint64_t (*)(uint64_t *, void, uint64_t))a3;
  unint64_t v21 = *(void *)(a3 + 16);
  if (v21 >= 2)
  {
    uint64_t v39 = a1;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 6;
    *uint64_t v12 = v22;
    uint64_t v23 = v29(v12, v30, v9);
    MEMORY[0x1F4188790](v23);
    uint64_t v24 = v34;
    *(&v29 - 4) = v35;
    *(&v29 - 3) = v24;
    uint64_t v28 = v18;
    sub_1C151734C();
    uint64_t result = v19(v12, v9);
    if (v21 != 2)
    {
      uint64_t v39 = a1;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = 6;
      *uint64_t v12 = v25;
      uint64_t v26 = v29(v12, v30, v9);
      MEMORY[0x1F4188790](v26);
      uint64_t v27 = v34;
      *(&v29 - 4) = v35;
      *(&v29 - 3) = v27;
      uint64_t v28 = v18;
      sub_1C151734C();
      return v19(v12, v9);
    }
  }
  return result;
}

uint64_t sub_1C0F5035C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v17 = *MEMORY[0x1E4FAB9E0];
  uint64_t v24 = v14;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v26 = v13;
  uint64_t result = v18(v16, v17, v13);
  uint64_t v29 = a2;
  if (*(void *)(a3 + 16))
  {
    sub_1C0249E84(a3 + 40, (uint64_t)v28);
    __int16 v27 = a4 & 0x101;
    sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    uint64_t v23 = v9;
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    sub_1C0F55CA8();
    sub_1C0F53E6C(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    uint64_t v20 = v25;
    sub_1C15175AC();
    unint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0F558F8((unint64_t *)&qword_1EB85E7C0, &qword_1EB85E7C8, v21);
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0F5072C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v17 = *MEMORY[0x1E4FAB9E0];
  uint64_t v24 = v14;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v26 = v13;
  uint64_t result = v18(v16, v17, v13);
  uint64_t v29 = a2;
  if (*(void *)(a3 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1C0249E84(a3 + 240, (uint64_t)v28);
    __int16 v27 = a4 & 0x101;
    sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    uint64_t v23 = v9;
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    sub_1C0F55CA8();
    sub_1C0F53E6C(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    uint64_t v20 = v25;
    sub_1C15175AC();
    unint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0F558F8((unint64_t *)&qword_1EB85E7C0, &qword_1EB85E7C8, v21);
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v26);
  }
  return result;
}

uint64_t sub_1C0F50B00(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v17 = *MEMORY[0x1E4FAB9E0];
  uint64_t v24 = v14;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v26 = v13;
  uint64_t result = v18(v16, v17, v13);
  uint64_t v29 = a2;
  if (*(void *)(a3 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1C0249E84(a3 + 440, (uint64_t)v28);
    __int16 v27 = a4 & 0x101;
    sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    uint64_t v23 = v9;
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    sub_1C0F55CA8();
    sub_1C0F53E6C(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    uint64_t v20 = v25;
    sub_1C15175AC();
    unint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0F558F8((unint64_t *)&qword_1EB85E7C0, &qword_1EB85E7C8, v21);
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v26);
  }
  return result;
}

uint64_t sub_1C0F50ED4(uint64_t a1)
{
  return sub_1C0234A8C(*(void *)(v1 + *(int *)(a1 + 24)));
}

uint64_t sub_1C0F50EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0F4E934(a1, a2, a3);
}

uint64_t sub_1C0F50EFC()
{
  return sub_1C12BC388();
}

unint64_t sub_1C0F50F0C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0F50F3C();
  unint64_t result = sub_1C0F50F90();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F50F3C()
{
  unint64_t result = qword_1EA1A92D0;
  if (!qword_1EA1A92D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A92D0);
  }
  return result;
}

unint64_t sub_1C0F50F90()
{
  unint64_t result = qword_1EA1A92D8;
  if (!qword_1EA1A92D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A92D8);
  }
  return result;
}

uint64_t sub_1C0F50FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FeedHeadline(0) - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v29 - v10);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    uint64_t v29 = v2;
    uint64_t v13 = 0;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v33 = a1 + v32;
    uint64_t v35 = a2 + 56;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v30 = v14;
    int v31 = v7;
    while (1)
    {
      sub_1BFF1ED18(v33 + v14 * v13, (uint64_t)v11, type metadata accessor for FeedHeadline);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_21;
      }
      uint64_t v17 = *v11;
      uint64_t v16 = v11[1];
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v18 = sub_1C1520E0C();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v35 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v21 = *(void *)(a2 + 48);
      uint64_t v22 = (void *)(v21 + 16 * v20);
      BOOL v23 = *v22 == v17 && v22[1] == v16;
      if (!v23 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1C0F54C54((uint64_t)v11, type metadata accessor for FeedHeadline);
      uint64_t v14 = v30;
      uint64_t v7 = v31;
LABEL_4:
      if (++v13 == v34) {
        return v36;
      }
    }
    uint64_t v24 = ~v19;
    while (1)
    {
      unint64_t v20 = (v20 + 1) & v24;
      if (((*(void *)(v35 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        break;
      }
      uint64_t v25 = (void *)(v21 + 16 * v20);
      BOOL v26 = *v25 == v17 && v25[1] == v16;
      if (v26 || (sub_1C1520A9C() & 1) != 0) {
        goto LABEL_3;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v14 = v30;
    uint64_t v7 = v31;
LABEL_21:
    sub_1BFF23A3C((uint64_t)v11, (uint64_t)v7, type metadata accessor for FeedHeadline);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1BFFFCFC0(0, *(void *)(v15 + 16) + 1, 1);
    }
    uint64_t v15 = v36;
    unint64_t v28 = *(void *)(v36 + 16);
    unint64_t v27 = *(void *)(v36 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1BFFFCFC0(v27 > 1, v28 + 1, 1);
      uint64_t v15 = v36;
    }
    *(void *)(v15 + 16) = v28 + 1;
    sub_1BFF23A3C((uint64_t)v7, v15 + v32 + v28 * v14, type metadata accessor for FeedHeadline);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1C0F5130C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FeedHeadline(0) - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v29 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v24 - v9);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v28 = *(void *)(a1 + 16);
  if (v28)
  {
    uint64_t v24 = v2;
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = *(void *)(v8 + 72);
    uint64_t v27 = a1 + v13;
    unint64_t v25 = v13;
    uint64_t v26 = v13 + a2 + 8;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1BFF1ED18(v27 + v14 * v12, (uint64_t)v10, type metadata accessor for FeedHeadline);
      uint64_t v16 = a2;
      uint64_t v17 = *(void *)(a2 + 16);
      if (v17)
      {
        uint64_t v18 = *v10;
        uint64_t v19 = v10[1];
        unint64_t v20 = (void *)v26;
        while (1)
        {
          BOOL v21 = *(v20 - 1) == v18 && *v20 == v19;
          if (v21 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
          unint64_t v20 = (void *)((char *)v20 + v14);
          if (!--v17) {
            goto LABEL_13;
          }
        }
        sub_1C0F54C54((uint64_t)v10, type metadata accessor for FeedHeadline);
      }
      else
      {
LABEL_13:
        sub_1BFF23A3C((uint64_t)v10, v29, type metadata accessor for FeedHeadline);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1BFFFCFC0(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v30;
        unint64_t v23 = *(void *)(v30 + 16);
        unint64_t v22 = *(void *)(v30 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_1BFFFCFC0(v22 > 1, v23 + 1, 1);
          uint64_t v15 = v30;
        }
        *(void *)(v15 + 16) = v23 + 1;
        sub_1BFF23A3C(v29, v15 + v25 + v23 * v14, type metadata accessor for FeedHeadline);
      }
      ++v12;
      a2 = v16;
    }
    while (v12 != v28);
    return v30;
  }
  return result;
}

uint64_t sub_1C0F5158C(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v34 = result + 32;
  uint64_t v45 = a2 + 56;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v4;
    }
    unint64_t v35 = v5;
    while (1)
    {
      if (v4 == v35)
      {
        __break(1u);
        return result;
      }
      uint64_t v6 = (long long *)(v34 + 144 * v4);
      long long v7 = v6[7];
      long long v42 = v6[6];
      v43[0] = v7;
      *(_OWORD *)((char *)v43 + 9) = *(long long *)((char *)v6 + 121);
      long long v8 = v6[3];
      long long v38 = v6[2];
      long long v39 = v8;
      long long v9 = v6[5];
      long long v40 = v6[4];
      long long v41 = v9;
      long long v10 = v6[1];
      long long v36 = *v6;
      long long v37 = v10;
      ++v4;
      if (!*(void *)(a2 + 16)) {
        break;
      }
      uint64_t v12 = *((void *)&v36 + 1);
      uint64_t v11 = v37;
      sub_1C1520DBC();
      sub_1C0187FB0((uint64_t)&v36);
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v13 = sub_1C1520E0C();
      uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v15 = v13 & ~v14;
      if (((*(void *)(v45 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v16 = *(void *)(a2 + 48);
      uint64_t v17 = (void *)(v16 + 16 * v15);
      if ((*v17 != v12 || v17[1] != v11) && (sub_1C1520A9C() & 1) == 0)
      {
        uint64_t v18 = ~v14;
        for (unint64_t i = v15 + 1; ; unint64_t i = v20 + 1)
        {
          uint64_t v20 = i & v18;
          if (((*(void *)(v45 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0) {
            break;
          }
          BOOL v21 = (void *)(v16 + 16 * v20);
          BOOL v22 = *v21 == v12 && v21[1] == v11;
          if (v22 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_7;
          }
        }
LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C01880A4((uint64_t)&v36);
      if (v4 == v2) {
        return v33;
      }
    }
    sub_1C0187FB0((uint64_t)&v36);
LABEL_24:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = v33;
    uint64_t v44 = v33;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C05F6B88(0, *(void *)(v33 + 16) + 1, 1);
      uint64_t v23 = v44;
    }
    unint64_t v25 = *(void *)(v23 + 16);
    unint64_t v24 = *(void *)(v23 + 24);
    if (v25 >= v24 >> 1)
    {
      uint64_t result = sub_1C05F6B88(v24 > 1, v25 + 1, 1);
      uint64_t v23 = v44;
    }
    *(void *)(v23 + 16) = v25 + 1;
    uint64_t v33 = v23;
    uint64_t v26 = (_OWORD *)(v23 + 144 * v25);
    v26[2] = v36;
    long long v27 = v37;
    long long v28 = v38;
    long long v29 = v40;
    v26[5] = v39;
    v26[6] = v29;
    v26[3] = v27;
    v26[4] = v28;
    long long v30 = v41;
    long long v31 = v42;
    long long v32 = v43[0];
    *(_OWORD *)((char *)v26 + 153) = *(_OWORD *)((char *)v43 + 9);
    v26[8] = v31;
    v26[9] = v32;
    v26[7] = v30;
  }
  while (v4 != v2);
  return v33;
}

uint64_t sub_1C0F51838(unint64_t a1, uint64_t a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v3 = sub_1C15204BC();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1C18C7CB0](i, a1);
          unint64_t v5 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_13:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_16;
          }
          swift_retain();
          unint64_t v5 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_13;
          }
        }
        sub_1C151A0CC();
        sub_1C0F53E6C((unint64_t *)&qword_1EB85F338, MEMORY[0x1E4FABC38]);
        uint64_t v6 = sub_1C151811C();
        char v8 = sub_1BFF896B4(v6, v7, a2);
        swift_bridgeObjectRelease();
        if (v8)
        {
          swift_release();
        }
        else
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
        }
        if (v5 == v3) {
          return v11;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0F519F0(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_33:
    uint64_t v3 = sub_1C15204BC();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      unint64_t v4 = 0;
      uint64_t v19 = v2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v20 = v2 & 0xC000000000000001;
      uint64_t v18 = v2;
      uint64_t v17 = v3;
      while (1)
      {
        if (v20)
        {
          MEMORY[0x1C18C7CB0](v4, v2);
          BOOL v5 = __OFADD__(v4, 1);
          unint64_t v6 = v4 + 1;
          if (v5) {
            goto LABEL_32;
          }
        }
        else
        {
          if (v4 >= *(void *)(v19 + 16)) {
            goto LABEL_31;
          }
          swift_retain();
          BOOL v5 = __OFADD__(v4, 1);
          unint64_t v6 = v4 + 1;
          if (v5)
          {
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        unint64_t v21 = v6;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v7 = sub_1C15204BC();
          if (v7)
          {
LABEL_11:
            uint64_t v8 = 4;
            do
            {
              uint64_t v9 = v8 - 4;
              if ((a2 & 0xC000000000000001) != 0)
              {
                uint64_t v2 = MEMORY[0x1C18C7CB0](v8 - 4, a2);
                uint64_t v10 = v8 - 3;
                if (__OFADD__(v9, 1)) {
                  goto LABEL_30;
                }
              }
              else
              {
                uint64_t v2 = *(void *)(a2 + 8 * v8);
                swift_retain();
                uint64_t v10 = v8 - 3;
                if (__OFADD__(v9, 1))
                {
LABEL_30:
                  __break(1u);
LABEL_31:
                  __break(1u);
                  goto LABEL_32;
                }
              }
              sub_1C151A0CC();
              sub_1C0F53E6C((unint64_t *)&qword_1EB85F338, MEMORY[0x1E4FABC38]);
              uint64_t v11 = sub_1C151811C();
              uint64_t v13 = v12;
              if (v11 == sub_1C151811C() && v13 == v14)
              {
                swift_release();
                swift_bridgeObjectRelease_n();
LABEL_23:
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_5;
              }
              char v15 = sub_1C1520A9C();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v15) {
                goto LABEL_23;
              }
              ++v8;
            }
            while (v10 != v7);
          }
        }
        else
        {
          uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v7) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
        sub_1C152025C();
        sub_1C152029C();
        sub_1C15202AC();
        sub_1C152026C();
LABEL_5:
        uint64_t v2 = v18;
        unint64_t v4 = v21;
        if (v21 == v17) {
          return v23;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0F51CE0(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v53 = MEMORY[0x1E4FBC860];
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v4 = a2;
    uint64_t v5 = 0;
    uint64_t v23 = a1 + 32;
    uint64_t v54 = a2 + 56;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_1C024A070(v23 + 288 * v5, (uint64_t)v52);
      sub_1C024A070((uint64_t)v52, (uint64_t)&v42);
      if (v51)
      {
        if (v51 != 1)
        {
          long long v31 = v48;
          *(_OWORD *)long long v32 = v49[0];
          *(_OWORD *)&v32[16] = v49[1];
          char v33 = v50[0];
          long long v27 = v44;
          long long v28 = v45;
          long long v29 = v46;
          long long v30 = v47;
          long long v25 = v42;
          long long v26 = v43;
          uint64_t v8 = *((void *)&v42 + 1);
          uint64_t v7 = v42;
          swift_bridgeObjectRetain();
          sub_1BFEA4290((uint64_t)&v25);
          goto LABEL_11;
        }
        long long v40 = v48;
        v41[0] = v49[0];
        *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v49 + 9);
        long long v36 = v44;
        long long v37 = v45;
        long long v38 = v46;
        long long v39 = v47;
        long long v34 = v42;
        long long v35 = v43;
        sub_1C0181C7C((uint64_t)v50, (uint64_t)&v25);
        sub_1C01B3B54((uint64_t)&v25);
        uint64_t v7 = *((void *)&v34 + 1);
        uint64_t v8 = v35;
        swift_bridgeObjectRetain();
        uint64_t v9 = &v34;
      }
      else
      {
        long long v25 = v42;
        long long v26 = v43;
        long long v31 = v48;
        *(_OWORD *)long long v32 = v49[0];
        *(_OWORD *)&v32[9] = *(_OWORD *)((char *)v49 + 9);
        long long v27 = v44;
        long long v28 = v45;
        long long v29 = v46;
        long long v30 = v47;
        uint64_t v7 = *((void *)&v42 + 1);
        uint64_t v8 = v43;
        swift_bridgeObjectRetain();
        uint64_t v9 = &v25;
      }
      sub_1C01880A4((uint64_t)v9);
LABEL_11:
      uint64_t v10 = v4;
      if (!*(void *)(v4 + 16)) {
        goto LABEL_24;
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t v11 = sub_1C1520E0C();
      uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v13 = v11 & ~v12;
      if (((*(void *)(v54 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(v4 + 48);
      char v15 = (void *)(v14 + 16 * v13);
      if ((*v15 != v7 || v15[1] != v8) && (sub_1C1520A9C() & 1) == 0)
      {
        uint64_t v16 = ~v12;
        for (unint64_t i = v13 + 1; ; unint64_t i = v18 + 1)
        {
          uint64_t v18 = i & v16;
          if (((*(void *)(v54 + (((i & v16) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v16)) & 1) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v14 + 16 * v18);
          BOOL v20 = *v19 == v7 && v19[1] == v8;
          if (v20 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_3;
          }
        }
LABEL_24:
        swift_bridgeObjectRelease();
        sub_1C063FFF4((uint64_t)v52, (uint64_t)&v42);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7838(0, *(void *)(v6 + 16) + 1, 1);
        }
        uint64_t v6 = v53;
        unint64_t v22 = *(void *)(v53 + 16);
        unint64_t v21 = *(void *)(v53 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1C05F7838(v21 > 1, v22 + 1, 1);
          uint64_t v6 = v53;
        }
        *(void *)(v6 + 16) = v22 + 1;
        sub_1C063FFF4((uint64_t)&v42, v6 + 288 * v22 + 32);
        goto LABEL_4;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1C024A288((uint64_t)v52);
LABEL_4:
      ++v5;
      uint64_t v4 = v10;
      if (v5 == v24) {
        return v53;
      }
    }
  }
  return result;
}

uint64_t sub_1C0F52028(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v52 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    uint64_t v4 = a2;
    uint64_t v5 = 0;
    uint64_t v20 = a1 + 32;
    uint64_t v19 = a2 + 32;
    uint64_t v53 = &v49;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v23 = v6;
      sub_1C024A070(v20 + 288 * v5, (uint64_t)v51);
      uint64_t v7 = *(void *)(v4 + 16);
      if (v7) {
        break;
      }
LABEL_25:
      sub_1C063FFF4((uint64_t)v51, (uint64_t)&v41);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C05F7838(0, *(void *)(v23 + 16) + 1, 1);
      }
      uint64_t v6 = v52;
      unint64_t v18 = *(void *)(v52 + 16);
      unint64_t v17 = *(void *)(v52 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1C05F7838(v17 > 1, v18 + 1, 1);
        uint64_t v6 = v52;
      }
      *(void *)(v6 + 16) = v18 + 1;
      sub_1C063FFF4((uint64_t)&v41, v6 + 288 * v18 + 32);
      uint64_t v4 = a2;
LABEL_5:
      if (++v5 == v21) {
        return v52;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = v19;
    while (1)
    {
      sub_1C024A070(v8, (uint64_t)&v41);
      if (!v50) {
        break;
      }
      if (v50 == 1)
      {
        long long v39 = v47;
        v40[0] = v48[0];
        *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v48 + 9);
        long long v35 = v43;
        long long v36 = v44;
        long long v37 = v45;
        long long v38 = v46;
        long long v33 = v41;
        long long v34 = v42;
        sub_1C0181C7C((uint64_t)v53, (uint64_t)&v24);
        sub_1C01B3B54((uint64_t)&v24);
        uint64_t v10 = *((void *)&v33 + 1);
        uint64_t v9 = v34;
        swift_bridgeObjectRetain();
        uint64_t v11 = &v33;
LABEL_12:
        sub_1C01880A4((uint64_t)v11);
        goto LABEL_14;
      }
      long long v30 = v47;
      *(_OWORD *)long long v31 = v48[0];
      *(_OWORD *)&v31[16] = v48[1];
      char v32 = v49;
      long long v26 = v43;
      long long v27 = v44;
      long long v28 = v45;
      long long v29 = v46;
      long long v24 = v41;
      long long v25 = v42;
      uint64_t v9 = *((void *)&v41 + 1);
      uint64_t v10 = v41;
      swift_bridgeObjectRetain();
      sub_1BFEA4290((uint64_t)&v24);
LABEL_14:
      sub_1C024A070((uint64_t)v51, (uint64_t)&v41);
      if (!v50)
      {
        long long v24 = v41;
        long long v25 = v42;
        long long v30 = v47;
        *(_OWORD *)long long v31 = v48[0];
        *(_OWORD *)&v31[9] = *(_OWORD *)((char *)v48 + 9);
        long long v26 = v43;
        long long v27 = v44;
        long long v28 = v45;
        long long v29 = v46;
        uint64_t v13 = *((void *)&v41 + 1);
        uint64_t v12 = v42;
        swift_bridgeObjectRetain();
        uint64_t v14 = &v24;
LABEL_18:
        sub_1C01880A4((uint64_t)v14);
        if (v10 != v13) {
          goto LABEL_22;
        }
        goto LABEL_21;
      }
      if (v50 == 1)
      {
        long long v39 = v47;
        v40[0] = v48[0];
        *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v48 + 9);
        long long v35 = v43;
        long long v36 = v44;
        long long v37 = v45;
        long long v38 = v46;
        long long v33 = v41;
        long long v34 = v42;
        sub_1C0181C7C((uint64_t)v53, (uint64_t)&v24);
        sub_1C01B3B54((uint64_t)&v24);
        uint64_t v13 = *((void *)&v33 + 1);
        uint64_t v12 = v34;
        swift_bridgeObjectRetain();
        uint64_t v14 = &v33;
        goto LABEL_18;
      }
      long long v30 = v47;
      *(_OWORD *)long long v31 = v48[0];
      *(_OWORD *)&v31[16] = v48[1];
      char v32 = v49;
      long long v26 = v43;
      long long v27 = v44;
      long long v28 = v45;
      long long v29 = v46;
      long long v24 = v41;
      long long v25 = v42;
      uint64_t v12 = *((void *)&v41 + 1);
      uint64_t v15 = v41;
      swift_bridgeObjectRetain();
      sub_1BFEA4290((uint64_t)&v24);
      if (v10 != v15) {
        goto LABEL_22;
      }
LABEL_21:
      if (v9 == v12)
      {
        uint64_t v4 = a2;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_4:
        uint64_t v6 = v23;
        swift_bridgeObjectRelease();
        sub_1C024A288((uint64_t)v51);
        goto LABEL_5;
      }
LABEL_22:
      char v16 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16)
      {
        uint64_t v4 = a2;
        goto LABEL_4;
      }
      v8 += 288;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    long long v24 = v41;
    long long v25 = v42;
    long long v30 = v47;
    *(_OWORD *)long long v31 = v48[0];
    *(_OWORD *)&v31[9] = *(_OWORD *)((char *)v48 + 9);
    long long v26 = v43;
    long long v27 = v44;
    long long v28 = v45;
    long long v29 = v46;
    uint64_t v10 = *((void *)&v41 + 1);
    uint64_t v9 = v42;
    swift_bridgeObjectRetain();
    uint64_t v11 = &v24;
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1C0F52408(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 32;
    uint64_t v15 = (void *)(a2 + 40);
    do
    {
      sub_1C0249E84(v6 + 152 * v5, (uint64_t)v26);
      uint64_t v7 = *(void *)(a2 + 16);
      if (v7)
      {
        long long v8 = v26[0];
        uint64_t v9 = v15;
        while (1)
        {
          BOOL v10 = *(v9 - 1) == (void)v8 && *v9 == *((void *)&v8 + 1);
          if (v10 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
          v9 += 19;
          if (!--v7) {
            goto LABEL_13;
          }
        }
        sub_1C0249FA4((uint64_t)v26);
      }
      else
      {
LABEL_13:
        long long v22 = v26[6];
        long long v23 = v26[7];
        long long v24 = v26[8];
        uint64_t v25 = v27;
        long long v18 = v26[2];
        long long v19 = v26[3];
        long long v20 = v26[4];
        long long v21 = v26[5];
        long long v16 = v26[0];
        long long v17 = v26[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7858(0, *(void *)(v2 + 16) + 1, 1);
        }
        uint64_t v2 = v28;
        unint64_t v12 = *(void *)(v28 + 16);
        unint64_t v11 = *(void *)(v28 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1C05F7858(v11 > 1, v12 + 1, 1);
          uint64_t v2 = v28;
        }
        *(void *)(v2 + 16) = v12 + 1;
        uint64_t v13 = v2 + 152 * v12;
        *(_OWORD *)(v13 + 128) = v22;
        *(_OWORD *)(v13 + 144) = v23;
        *(_OWORD *)(v13 + 160) = v24;
        *(void *)(v13 + 176) = v25;
        *(_OWORD *)(v13 + 64) = v18;
        *(_OWORD *)(v13 + 80) = v19;
        *(_OWORD *)(v13 + 96) = v20;
        *(_OWORD *)(v13 + 112) = v21;
        *(_OWORD *)(v13 + 32) = v16;
        *(_OWORD *)(v13 + 48) = v17;
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return v2;
}

uint64_t sub_1C0F525B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  uint64_t v47 = a4;
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)&v39 - v15;
  uint64_t v17 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v18 = *(void *)&v5[*(int *)(v17 + 56)];
  if (!*(void *)(v18 + 16)) {
    goto LABEL_24;
  }
  uint64_t v45 = v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1BFEA34E4(0x6461654864656546, 0xEC000000656E696CLL, a1, a2);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v44 = a3;
  uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1BFFFCC60(v21);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = a1;
  int v42 = a5;
  long long v43 = v6;
  long long v23 = (void *)MEMORY[0x1E4FBC860];
  v48[0] = MEMORY[0x1E4FBC860];
  uint64_t v24 = *(void *)(v22 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (v24)
  {
    uint64_t v40 = a2;
    unint64_t v26 = 0;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    while (v26 < *(void *)(v22 + 16))
    {
      unint64_t v28 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v29 = *(void *)(v12 + 72);
      sub_1BFF1ED18(v22 + v28 + v29 * v26, (uint64_t)v16, type metadata accessor for FeedHeadline);
      if ((v47 & ~*((void *)v16 + 4)) != 0)
      {
        uint64_t result = sub_1C0F54C54((uint64_t)v16, type metadata accessor for FeedHeadline);
      }
      else
      {
        sub_1BFF23A3C((uint64_t)v16, v46, type metadata accessor for FeedHeadline);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1BFFFCFC0(0, *(void *)(v27 + 16) + 1, 1);
        }
        uint64_t v27 = v48[0];
        unint64_t v31 = *(void *)(v48[0] + 16);
        unint64_t v30 = *(void *)(v48[0] + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1BFFFCFC0(v30 > 1, v31 + 1, 1);
          uint64_t v27 = v48[0];
        }
        *(void *)(v27 + 16) = v31 + 1;
        uint64_t result = sub_1BFF23A3C(v46, v27 + v28 + v31 * v29, type metadata accessor for FeedHeadline);
      }
      if (v24 == ++v26)
      {
        long long v23 = (void *)v48[0];
        a2 = v40;
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
  char v32 = v43;
  if (v44 && (*v43 & 1) == 0)
  {
    swift_retain();
    uint64_t v33 = sub_1C002D218(v23);
    swift_release();
    uint64_t result = swift_release();
    long long v23 = (void *)v33;
  }
  uint64_t v34 = *(void *)&v32[*(int *)(v45 + 72)];
  uint64_t v35 = *(void *)&v32[*(int *)(v45 + 76)];
  if (!__OFSUB__(v34, v35))
  {
    uint64_t v36 = sub_1C001F454((uint64_t)v23, v34 - v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1C0F5130C(v22, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    strcpy((char *)v48, "FeedHeadline");
    BYTE5(v48[1]) = 0;
    HIWORD(v48[1]) = -5120;
    _OWORD v48[2] = v41;
    v48[3] = a2;
    if (v42)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = v22;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v38 = sub_1BFDF899C(v37);
    swift_bridgeObjectRelease();
    sub_1BFEA6AC8(v48, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v36;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C0F52A38(unint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  LOBYTE(v7) = a5;
  uint64_t v12 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v13 = *(void *)&v5[*(int *)(v12 + 56)];
  if (!*(void *)(v13 + 16)) {
    goto LABEL_23;
  }
  uint64_t v14 = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1BFEA34E4(0x6F4D6E6967756C50, 0xEB000000006C6564, a1, (uint64_t)a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(*(void *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = sub_1C13F4FB8(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v33 = v6;
  v35[0] = MEMORY[0x1E4FBC860];
  unint64_t v19 = v18 & 0xFFFFFFFFFFFFFF8;
  if (v18 >> 62) {
    goto LABEL_36;
  }
  uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v31 = a1;
  char v32 = v7;
  if (v20)
  {
    unint64_t v34 = v19;
    unint64_t v30 = a2;
    a1 = 0;
    unint64_t v19 = v18 & 0xC000000000000001;
    a2 = &qword_1F1B66900;
    while (1)
    {
      if (v19)
      {
        MEMORY[0x1C18C7CB0](a1, v18);
        unint64_t v7 = a1 + 1;
        if (__OFADD__(a1, 1)) {
          goto LABEL_34;
        }
      }
      else
      {
        if (a1 >= *(void *)(v34 + 16)) {
          goto LABEL_35;
        }
        swift_retain();
        unint64_t v7 = a1 + 1;
        if (__OFADD__(a1, 1))
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_1C15204BC();
          goto LABEL_6;
        }
      }
      uint64_t v21 = unk_1F1B66908;
      if ((unk_1F1B66908 & ~qword_1F1B66900) == 0) {
        uint64_t v21 = 0;
      }
      if ((a4 & ~(v21 | qword_1F1B66900)) != 0)
      {
        swift_release();
      }
      else
      {
        sub_1C152025C();
        sub_1C152029C();
        sub_1C15202AC();
        sub_1C152026C();
      }
      ++a1;
      if (v7 == v20)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v23 = v35[0];
        a2 = v30;
        goto LABEL_27;
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_27:
  if (a3 && (*v33 & 1) == 0)
  {
    swift_retain();
    uint64_t v25 = sub_1C062680C(v23);
    swift_release();
    uint64_t result = swift_release();
    uint64_t v23 = v25;
  }
  uint64_t v26 = *(void *)&v33[*(int *)(v14 + 72)];
  uint64_t v27 = *(void *)&v33[*(int *)(v14 + 76)];
  if (!__OFSUB__(v26, v27))
  {
    unint64_t v24 = sub_1C0F4E258(v23, v26 - v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1C0F519F0(v18, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35[0] = 0x6F4D6E6967756C50;
    v35[1] = 0xEB000000006C6564;
    v35[2] = v31;
    v35[3] = (uint64_t)a2;
    swift_bridgeObjectRelease();
    if (v32) {
      unint64_t v28 = v18;
    }
    uint64_t v29 = sub_1C0234728(v28);
    swift_bridgeObjectRelease();
    sub_1BFEA6AC8(v35, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0F52E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  sub_1C0F54294(0, (unint64_t *)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v69 - v13;
  uint64_t v15 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v16 = *(void *)&v5[*(int *)(v15 + 56)];
  if (!*(void *)(v16 + 16)) {
    goto LABEL_47;
  }
  uint64_t v17 = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1BFEA34E4(0x7573734964656546, 0xE900000000000065, a1, a2);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v73 = v17;
  uint64_t v74 = a3;
  uint64_t v72 = a1;
  uint64_t v20 = *(void *)(*(void *)(v16 + 56) + 8 * v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1C13F3ACC(v20);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_47:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  int v71 = a5;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v84 = MEMORY[0x1E4FBC860];
  uint64_t v24 = *(void *)(v21 + 16);
  if (v24)
  {
    uint64_t v69 = v6;
    uint64_t v70 = a2;
    swift_bridgeObjectRetain();
    unint64_t v25 = 0;
    uint64_t v75 = v24 - 1;
    uint64_t v26 = 32;
    while (1)
    {
      long long v76 = *(_OWORD *)(v21 + v26);
      long long v27 = *(_OWORD *)(v21 + v26 + 16);
      long long v28 = *(_OWORD *)(v21 + v26 + 32);
      long long v29 = *(_OWORD *)(v21 + v26 + 64);
      long long v79 = *(_OWORD *)(v21 + v26 + 48);
      long long v80 = v29;
      long long v77 = v27;
      long long v78 = v28;
      long long v30 = *(_OWORD *)(v21 + v26 + 80);
      long long v31 = *(_OWORD *)(v21 + v26 + 96);
      long long v32 = *(_OWORD *)(v21 + v26 + 112);
      *(_OWORD *)((char *)v83 + 9) = *(_OWORD *)(v21 + v26 + 121);
      long long v82 = v31;
      v83[0] = v32;
      long long v81 = v30;
      uint64_t v33 = (void *)v76;
      int v34 = v29;
      sub_1C0187FB0((uint64_t)&v76);
      id v35 = objc_msgSend(v33, sel_coverImageAssetHandle);
      uint64_t v36 = v35;
      if (v34 != 1)
      {
        if (v35)
        {
          id v42 = v33;
          objc_msgSend(v42, sel_coverImageAspectRatio);
          id v43 = v36;
          id v44 = objc_msgSend(v42, sel_layeredCoverJSON);
          if (v44)
          {
            uint64_t v45 = v44;
            sub_1C151E62C();

            swift_bridgeObjectRetain();
            sub_1C151545C();
            uint64_t v46 = sub_1C15154CC();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v14, 0, 1, v46);
            LOBYTE(v45) = sub_1C151823C();
            swift_bridgeObjectRelease();
            sub_1C0F53EB4((uint64_t)v14, (uint64_t)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0F54294);
            if (v45)
            {

              swift_bridgeObjectRelease();
              goto LABEL_21;
            }
            id v51 = v42;
            objc_msgSend(v51, sel_layeredCoverAspectRatio);
            swift_bridgeObjectRelease();

            uint64_t v52 = unk_1F1B66A90;
            if ((unk_1F1B66A90 & ~qword_1F1B66A88) == 0) {
              uint64_t v52 = 0;
            }
            uint64_t v47 = v52 | qword_1F1B66A88;
          }
          else
          {

LABEL_21:
            uint64_t v47 = qword_1F1B66A60;
          }
        }
        else
        {
          uint64_t v47 = 0;
        }
        uint64_t v48 = qword_1F1B66AB8 | v47;
        goto LABEL_29;
      }
      if (!v35) {
        goto LABEL_18;
      }
      id v37 = v33;
      objc_msgSend(v37, sel_coverImageAspectRatio);
      id v38 = v36;
      id v39 = objc_msgSend(v37, sel_layeredCoverJSON);
      if (v39)
      {
        uint64_t v40 = v39;
        sub_1C151E62C();

        swift_bridgeObjectRetain();
        sub_1C151545C();
        uint64_t v41 = sub_1C15154CC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v14, 0, 1, v41);
        LOBYTE(v40) = sub_1C151823C();
        swift_bridgeObjectRelease();
        sub_1C0F53EB4((uint64_t)v14, (uint64_t)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0F54294);
        if ((v40 & 1) == 0)
        {
          id v49 = v37;
          objc_msgSend(v49, sel_layeredCoverAspectRatio);
          swift_bridgeObjectRelease();

          uint64_t v50 = unk_1F1B66A38;
          if ((unk_1F1B66A38 & ~qword_1F1B66A30) == 0) {
            uint64_t v50 = 0;
          }
          uint64_t v48 = v50 | qword_1F1B66A30;
          goto LABEL_29;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      uint64_t v48 = qword_1F1B66A08;
      if (!qword_1F1B66A08)
      {
LABEL_18:
        if (a4) {
          goto LABEL_19;
        }
        goto LABEL_30;
      }
LABEL_29:
      if ((a4 & ~v48) != 0)
      {
LABEL_19:
        uint64_t result = sub_1C01880A4((uint64_t)&v76);
        goto LABEL_35;
      }
LABEL_30:
      uint64_t v53 = v84;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1C05F6B88(0, *(void *)(v53 + 16) + 1, 1);
        uint64_t v53 = v84;
      }
      unint64_t v55 = *(void *)(v53 + 16);
      unint64_t v54 = *(void *)(v53 + 24);
      if (v55 >= v54 >> 1)
      {
        uint64_t result = sub_1C05F6B88(v54 > 1, v55 + 1, 1);
        uint64_t v53 = v84;
      }
      *(void *)(v53 + 16) = v55 + 1;
      long long v56 = (_OWORD *)(v53 + 144 * v55);
      void v56[2] = v76;
      long long v57 = v77;
      long long v58 = v78;
      long long v59 = v80;
      v56[5] = v79;
      v56[6] = v59;
      v56[3] = v57;
      v56[4] = v58;
      long long v60 = v81;
      long long v61 = v82;
      long long v62 = v83[0];
      *(_OWORD *)((char *)v56 + 153) = *(_OWORD *)((char *)v83 + 9);
      v56[8] = v61;
      v56[9] = v62;
      v56[7] = v60;
LABEL_35:
      if (v75 == v25)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v23 = v84;
        a2 = v70;
        uint64_t v6 = v69;
        break;
      }
      ++v25;
      v26 += 144;
      if (v25 >= *(void *)(v21 + 16))
      {
        __break(1u);
        goto LABEL_52;
      }
    }
  }
  if (v74 && (*v6 & 1) == 0)
  {
    swift_retain();
    uint64_t v63 = sub_1C06245CC(v23);
    swift_release();
    uint64_t result = swift_release();
    uint64_t v23 = v63;
  }
  uint64_t v64 = *(void *)&v6[*(int *)(v73 + 72)];
  uint64_t v65 = *(void *)&v6[*(int *)(v73 + 76)];
  if (!__OFSUB__(v64, v65))
  {
    uint64_t v66 = sub_1C0F4DBFC(v23, v64 - v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1C0E6CA14(v21, v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v76 = 0x7573734964656546;
    *((void *)&v76 + 1) = 0xE900000000000065;
    *(void *)&long long v77 = v72;
    *((void *)&v77 + 1) = a2;
    if (v71)
    {
      swift_bridgeObjectRelease();
      uint64_t v67 = v21;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v68 = sub_1C02345C4(v67);
    swift_bridgeObjectRelease();
    sub_1BFEA6AC8((uint64_t *)&v76, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v66;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1C0F535C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v13 = *(void *)&v5[*(int *)(v12 + 56)];
  if (!*(void *)(v13 + 16)) {
    goto LABEL_26;
  }
  uint64_t v14 = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1BFEA34E4(0x6174614364656546, 0xEF6D657449676F6CLL, a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(*(void *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1C13F50B4(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = a3;
  uint64_t v35 = v14;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v38 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(v18 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (v20)
  {
    uint64_t v33 = a1;
    unint64_t v22 = 0;
    uint64_t v23 = v18 + 32;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v22 >= *(void *)(v18 + 16))
      {
        __break(1u);
        goto LABEL_31;
      }
      sub_1C024A070(v23, (uint64_t)v37);
      if (qword_1F1B66B08)
      {
        if ((a4 & ~qword_1F1B66B08) == 0)
        {
LABEL_12:
          sub_1C063FFF4((uint64_t)v37, (uint64_t)v36);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C05F7838(0, *(void *)(v24 + 16) + 1, 1);
          }
          uint64_t v24 = v38;
          unint64_t v26 = *(void *)(v38 + 16);
          unint64_t v25 = *(void *)(v38 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_1C05F7838(v25 > 1, v26 + 1, 1);
            uint64_t v24 = v38;
          }
          *(void *)(v24 + 16) = v26 + 1;
          uint64_t result = sub_1C063FFF4((uint64_t)v36, v24 + 288 * v26 + 32);
          goto LABEL_8;
        }
      }
      else if (!a4)
      {
        goto LABEL_12;
      }
      uint64_t result = sub_1C024A288((uint64_t)v37);
LABEL_8:
      ++v22;
      v23 += 288;
      if (v20 == v22)
      {
        uint64_t v19 = v38;
        a1 = v33;
        break;
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v34 && (*v6 & 1) == 0)
  {
    swift_retain();
    uint64_t v27 = sub_1C0626A30(v19);
    swift_release();
    uint64_t result = swift_release();
    uint64_t v19 = v27;
  }
  uint64_t v28 = *(void *)&v6[*(int *)(v35 + 72)];
  uint64_t v29 = *(void *)&v6[*(int *)(v35 + 76)];
  if (!__OFSUB__(v28, v29))
  {
    uint64_t v30 = sub_1C0F4E5B0(v19, v28 - v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C0F52028(v18, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37[0] = 0x6174614364656546;
    v37[1] = 0xEF6D657449676F6CLL;
    v37[2] = a1;
    v37[3] = a2;
    swift_bridgeObjectRelease();
    if (a5) {
      uint64_t v31 = v18;
    }
    uint64_t v32 = sub_1C0234964(v31);
    swift_bridgeObjectRelease();
    sub_1BFEA6AC8(v37, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v30;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C0F5397C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v13 = *(void *)&v5[*(int *)(v12 + 56)];
  if (!*(void *)(v13 + 16)) {
    goto LABEL_20;
  }
  uint64_t v14 = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1BFEA34E4(0x6574614364656546, 0xEC00000079726F67, a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(*(void *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1C13F5258(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v40 = v6;
  uint64_t v41 = a3;
  uint64_t v38 = a2;
  uint64_t v39 = v14;
  char v37 = a5;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v62 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(v18 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (v20)
  {
    unint64_t v22 = 0;
    uint64_t v23 = v18 + 32;
    while (v22 < *(void *)(v18 + 16))
    {
      sub_1C0249E84(v23, (uint64_t)&v52);
      if ((a4 & 0xFFFFFFFFFFFBFFFFLL) != 0)
      {
        uint64_t result = sub_1C0249FA4((uint64_t)&v52);
      }
      else
      {
        long long v48 = v58;
        long long v49 = v59;
        long long v50 = v60;
        uint64_t v51 = v61;
        long long v44 = v54;
        long long v45 = v55;
        long long v46 = v56;
        long long v47 = v57;
        long long v42 = v52;
        long long v43 = v53;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = sub_1C05F7858(0, *(void *)(v19 + 16) + 1, 1);
        }
        uint64_t v19 = v62;
        unint64_t v25 = *(void *)(v62 + 16);
        unint64_t v24 = *(void *)(v62 + 24);
        if (v25 >= v24 >> 1)
        {
          uint64_t result = sub_1C05F7858(v24 > 1, v25 + 1, 1);
          uint64_t v19 = v62;
        }
        *(void *)(v19 + 16) = v25 + 1;
        uint64_t v26 = v19 + 152 * v25;
        *(_OWORD *)(v26 + 128) = v48;
        *(_OWORD *)(v26 + 144) = v49;
        *(_OWORD *)(v26 + 160) = v50;
        *(void *)(v26 + 176) = v51;
        *(_OWORD *)(v26 + 64) = v44;
        *(_OWORD *)(v26 + 80) = v45;
        *(_OWORD *)(v26 + 96) = v46;
        *(_OWORD *)(v26 + 112) = v47;
        *(_OWORD *)(v26 + 32) = v42;
        *(_OWORD *)(v26 + 48) = v43;
      }
      ++v22;
      v23 += 152;
      if (v20 == v22) {
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_16:
  uint64_t result = swift_bridgeObjectRelease();
  if (v41)
  {
    uint64_t v27 = v39;
    uint64_t v28 = v40;
    if ((*v40 & 1) == 0)
    {
      swift_retain();
      uint64_t v29 = sub_1C0626D18(v19);
      swift_release();
      uint64_t result = swift_release();
      uint64_t v19 = v29;
    }
  }
  else
  {
    uint64_t v27 = v39;
    uint64_t v28 = v40;
  }
  uint64_t v30 = *(void *)&v28[*(int *)(v27 + 72)];
  uint64_t v31 = *(void *)&v28[*(int *)(v27 + 76)];
  uint64_t v32 = v30 - v31;
  if (!__OFSUB__(v30, v31))
  {
    uint64_t v33 = *(void *)(v19 + 16);
    swift_bridgeObjectRetain();
    if (v33)
    {
      uint64_t v34 = v19 + 32;
      do
      {
        sub_1C0249E84(v34, (uint64_t)&v52);
        sub_1C0F53EB4((uint64_t)&v52, (uint64_t)&qword_1EB862D30, (uint64_t)&type metadata for FeedCategory, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEFDF24);
        v34 += 152;
        --v33;
      }
      while (v33);
    }
    uint64_t v61 = 0;
    long long v59 = 0u;
    long long v60 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v52 = 0u;
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C0F53EB4((uint64_t)&v52, (uint64_t)&qword_1EB862D30, (uint64_t)&type metadata for FeedCategory, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEFDF24);
    if (v32 < 0) {
      goto LABEL_34;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C0F52408(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    strcpy((char *)&v52, "FeedCategory");
    BYTE13(v52) = 0;
    HIWORD(v52) = -5120;
    *(void *)&long long v53 = a1;
    *((void *)&v53 + 1) = v38;
    swift_bridgeObjectRelease();
    if (v37) {
      uint64_t v35 = v18;
    }
    uint64_t v36 = sub_1C0234A8C(v35);
    swift_bridgeObjectRelease();
    sub_1BFEA6AC8((uint64_t *)&v52, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for M18_V1.Bound()
{
  uint64_t result = qword_1EA1A92E8;
  if (!qword_1EA1A92E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0F53E6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F53EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C0F53F14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v26 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v31 = a3;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v13 = v12[5];
    uint64_t v14 = v9 + v13;
    uint64_t v15 = v10 + v13;
    uint64_t v16 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v12[6];
    uint64_t v18 = v9 + v17;
    uint64_t v19 = v10 + v17;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)(v10 + v17);
    *(unsigned char *)(v18 + 16) = *(unsigned char *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    *(unsigned char *)(v18 + 19) = *(unsigned char *)(v10 + v17 + 19);
    *(_DWORD *)(v18 + 20) = *(_DWORD *)(v10 + v17 + 20);
    unint64_t v20 = *(void *)(v10 + v17 + 24);
    if (v20 >= 2) {
      unint64_t v20 = swift_bridgeObjectRetain();
    }
    *(void *)(v18 + 24) = v20;
    uint64_t v30 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v21 = *(int *)(v30 + 36);
    __dst = (void *)(v18 + v21);
    unint64_t v22 = (const void *)(v19 + v21);
    uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1C0F54294(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v27 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(__dst, v22, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    *(void *)(v18 + *(int *)(v30 + 40)) = *(void *)(v19 + *(int *)(v30 + 40));
    *(void *)(v9 + v12[7]) = *(void *)(v10 + v12[7]);
    *(void *)(v9 + v12[8]) = *(void *)(v10 + v12[8]);
    *(unsigned char *)(v9 + v12[9]) = *(unsigned char *)(v10 + v12[9]);
    *(void *)(v9 + v12[10]) = *(void *)(v10 + v12[10]);
    *(unsigned char *)(v9 + v12[11]) = *(unsigned char *)(v10 + v12[11]);
    *(void *)(v9 + v12[12]) = *(void *)(v10 + v12[12]);
    uint64_t v28 = *(int *)(v31 + 28);
    *(void *)(v4 + *(int *)(v31 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v31 + 24));
    *(void *)(v4 + v28) = *(uint64_t *)((char *)a2 + v28);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

void sub_1C0F54294(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0F542F8(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v4 + *(int *)(v6 + 24);
  if (*(void *)(v9 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C0F54498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  unint64_t v19 = *(void *)(v9 + v16 + 24);
  if (v19 >= 2) {
    unint64_t v19 = swift_bridgeObjectRetain();
  }
  *(void *)(v17 + 24) = v19;
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v20 + 36);
  __dst = (void *)(v17 + v21);
  unint64_t v22 = (const void *)(v18 + v21);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1C0F54294(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v22, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(void *)(v17 + *(int *)(v20 + 40)) = *(void *)(v18 + *(int *)(v20 + 40));
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  uint64_t v27 = *(int *)(v30 + 28);
  *(void *)(a1 + *(int *)(v30 + 24)) = *(void *)(v31 + *(int *)(v30 + 24));
  *(void *)(a1 + v27) = *(void *)(v31 + v27);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *sub_1C0F547CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v40 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v35 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  long long v18 = *(_OWORD *)&v8[v15];
  unsigned char v16[16] = v8[v15 + 16];
  *(_OWORD *)uint64_t v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  unint64_t v19 = (unint64_t *)&v7[v15 + 24];
  unint64_t v20 = *(void *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *unint64_t v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0F54C54((uint64_t)(v16 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v19 = *((void *)v17 + 3);
    }
  }
  else
  {
    *unint64_t v19 = v20;
    if (v20 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v37 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v37 + 36);
  uint64_t v22 = (uint64_t)&v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v36 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v36, v23, v32);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v36, 0, 1, v24);
      goto LABEL_16;
    }
    sub_1C0F54294(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  else
  {
    if (!v27)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v36, v23, v33);
      goto LABEL_16;
    }
    sub_1C0F54C54(v36, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0F54294(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  memcpy(v30, v23, v29);
LABEL_16:
  *(void *)&v16[*(int *)(v37 + 40)] = *(void *)&v17[*(int *)(v37 + 40)];
  *(void *)&v7[v35[7]] = *(void *)&v8[v35[7]];
  *(void *)&v7[v35[8]] = *(void *)&v8[v35[8]];
  v7[v35[9]] = v8[v35[9]];
  *(void *)&v7[v35[10]] = *(void *)&v8[v35[10]];
  swift_retain();
  swift_release();
  v7[v35[11]] = v8[v35[11]];
  *(void *)&v7[v35[12]] = *(void *)&v8[v35[12]];
  swift_retain();
  swift_release();
  *(uint64_t *)((char *)v40 + *(int *)(v38 + 24)) = *(uint64_t *)((char *)v39 + *(int *)(v38 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v40 + *(int *)(v38 + 28)) = *(uint64_t *)((char *)v39 + *(int *)(v38 + 28));
  swift_retain();
  swift_release();
  return v40;
}

uint64_t sub_1C0F54C54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0F54CB4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v11 = v10[5];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(void *)(v16 + 24) = *(void *)(v8 + v15 + 24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v18 = *(int *)(v26 + 36);
  __dst = (void *)(v16 + v18);
  unint64_t v19 = (const void *)(v17 + v18);
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1C0F54294(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(__dst, v19, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(void *)(v16 + *(int *)(v26 + 40)) = *(void *)(v17 + *(int *)(v26 + 40));
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  *(void *)(v7 + v10[8]) = *(void *)(v8 + v10[8]);
  *(unsigned char *)(v7 + v10[9]) = *(unsigned char *)(v8 + v10[9]);
  *(void *)(v7 + v10[10]) = *(void *)(v8 + v10[10]);
  *(unsigned char *)(v7 + v10[11]) = *(unsigned char *)(v8 + v10[11]);
  *(void *)(v7 + v10[12]) = *(void *)(v8 + v10[12]);
  uint64_t v24 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  return a1;
}

uint64_t sub_1C0F54F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v35 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v38 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 18) = *(unsigned char *)(v9 + v16 + 18);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(unsigned char *)(v17 + 20) = *(unsigned char *)(v9 + v16 + 20);
  *(unsigned char *)(v17 + 21) = *(unsigned char *)(v9 + v16 + 21);
  *(unsigned char *)(v17 + 22) = *(unsigned char *)(v9 + v16 + 22);
  *(unsigned char *)(v17 + 23) = *(unsigned char *)(v9 + v16 + 23);
  unint64_t v19 = (unint64_t *)(v8 + v16 + 24);
  unint64_t v20 = *(void *)(v9 + v16 + 24);
  if (*v19 < 2) {
    goto LABEL_4;
  }
  if (v20 < 2)
  {
    sub_1C0F54C54((uint64_t)v19, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v20 = *(void *)(v18 + 24);
LABEL_4:
    *unint64_t v19 = v20;
    goto LABEL_6;
  }
  *unint64_t v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v37 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v37 + 36);
  uint64_t v22 = v17 + v21;
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v36 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v36, v23, v32);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v36, 0, 1, v24);
      goto LABEL_14;
    }
    sub_1C0F54294(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  else
  {
    if (!v27)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v33 - 8) + 40))(v36, v23, v33);
      goto LABEL_14;
    }
    sub_1C0F54C54(v36, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0F54294(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  memcpy(v30, v23, v29);
LABEL_14:
  *(void *)(v17 + *(int *)(v37 + 40)) = *(void *)(v18 + *(int *)(v37 + 40));
  *(void *)(v8 + v38[7]) = *(void *)(v9 + v38[7]);
  *(void *)(v8 + v38[8]) = *(void *)(v9 + v38[8]);
  *(unsigned char *)(v8 + v38[9]) = *(unsigned char *)(v9 + v38[9]);
  *(void *)(v8 + v38[10]) = *(void *)(v9 + v38[10]);
  swift_release();
  *(unsigned char *)(v8 + v38[11]) = *(unsigned char *)(v9 + v38[11]);
  *(void *)(v8 + v38[12]) = *(void *)(v9 + v38[12]);
  swift_release();
  *(void *)(v35 + *(int *)(v39 + 24)) = *(void *)(v40 + *(int *)(v39 + 24));
  swift_bridgeObjectRelease();
  *(void *)(v35 + *(int *)(v39 + 28)) = *(void *)(v40 + *(int *)(v39 + 28));
  swift_release();
  return v35;
}

uint64_t sub_1C0F553E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F553F8);
}

uint64_t sub_1C0F553F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0F554A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F554BC);
}

uint64_t sub_1C0F554BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F55564()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0F55618(uint64_t a1)
{
  uint64_t result = sub_1C0F53E6C(&qword_1EA1A92F8, (void (*)(uint64_t))type metadata accessor for M18_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F55670@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F4F160(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0F55690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, unint64_t *a4@<X8>)
{
  return sub_1C0F4F500(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1C0F55698(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEFDF24(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F556F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F55734()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  }
  if (v0[15]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  }
  if (v0[20]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 22));
  return swift_deallocObject();
}

uint64_t sub_1C0F557B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0F55810(uint64_t a1)
{
  return sub_1C0F55AB0(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F4F8F4);
}

unint64_t sub_1C0F55828()
{
  unint64_t result = qword_1EB85E5F0;
  if (!qword_1EB85E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E5F0);
  }
  return result;
}

unint64_t sub_1C0F5587C()
{
  unint64_t result = qword_1EB85EB10;
  if (!qword_1EB85EB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EB10);
  }
  return result;
}

uint64_t sub_1C0F558D0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F558E0(uint64_t a1)
{
  return sub_1C0F55AB0(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F4FB00);
}

uint64_t sub_1C0F558F8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F5593C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0F5593C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for CategoryViewLayout;
    v8[1] = &type metadata for CategoryViewLayout.Attributes;
    v8[2] = sub_1C0F55828();
    v8[3] = sub_1C0F5587C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0F559C0()
{
  if (!qword_1EB85EFF0)
  {
    sub_1C0F55BEC(255, &qword_1EB85E7D0, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85EFF0);
    }
  }
}

uint64_t sub_1C0F55A50(uint64_t a1)
{
  return sub_1C0F55AB0(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F4FF68);
}

uint64_t sub_1C0F55A68(uint64_t a1)
{
  return sub_1C0F55AB0(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F5035C);
}

uint64_t sub_1C0F55A80(uint64_t a1)
{
  return sub_1C0F55AB0(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F50B00);
}

uint64_t sub_1C0F55A98(uint64_t a1)
{
  return sub_1C0F55AB0(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F5072C);
}

uint64_t sub_1C0F55AB0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  if (*(unsigned char *)(v2 + 33)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

void sub_1C0F55AD8()
{
  if (!qword_1EB85E7D8)
  {
    sub_1C0F55BEC(255, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    sub_1C0F55CA8();
    sub_1C0F53E6C(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    unint64_t v0 = sub_1C15175BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E7D8);
    }
  }
}

void sub_1C0F55BEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0F55C54()
{
  unint64_t result = qword_1EB85E6E8;
  if (!qword_1EB85E6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E6E8);
  }
  return result;
}

unint64_t sub_1C0F55CA8()
{
  unint64_t result = qword_1EB85E7F0;
  if (!qword_1EB85E7F0)
  {
    sub_1C0F55BEC(255, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E7F0);
  }
  return result;
}

void sub_1C0F55D38(void *a1, void *a2, char a3, double a4, double a5, double a6, double a7)
{
  uint64_t v15 = *MEMORY[0x1E4FBC8C8] & *a2;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 48))(&v32, v16, v17);
  if (v32 < 2)
  {
    uint64_t v19 = v7[10];
    uint64_t v18 = v7[11];
    __swift_project_boxed_opaque_existential_1(v7 + 7, v19);
    (*(void (**)(void *, void *, void, void, void, uint64_t, uint64_t, double, double, double, double))(v18 + 16))(a1, a2, a3 & 1, *(void *)(v15 + *MEMORY[0x1E4FAC3C0]), *(void *)(v15 + *MEMORY[0x1E4FAC3C0] + 8), v19, v18, a4, a5, a6, a7);
    return;
  }
  if (v32 == 2)
  {
    uint64_t v20 = v7[15];
    uint64_t v21 = v7[16];
    __swift_project_boxed_opaque_existential_1(v7 + 12, v20);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 176))(v20, v21) & 1) == 0) {
      return;
    }
    uint64_t v22 = sub_1C151AFCC();
    uint64_t v23 = (void *)v22;
    v24.n128_u64[0] = v7[17];
    uint64_t v25 = a3 & 1;
    goto LABEL_9;
  }
  sub_1C0A63304(v32);
  uint64_t v26 = v7[5];
  uint64_t v27 = v7[6];
  __swift_project_boxed_opaque_existential_1(v7 + 2, v26);
  uint64_t v28 = a3 & 1;
  (*(void (**)(void *, void *, uint64_t, void, void, uint64_t, uint64_t, double, double, double, double))(v27 + 16))(a1, a2, v28, *(void *)(v15 + *MEMORY[0x1E4FAC3C0]), *(void *)(v15 + *MEMORY[0x1E4FAC3C0] + 8), v26, v27, a4, a5, a6, a7);
  uint64_t v29 = v7[15];
  uint64_t v30 = v7[16];
  __swift_project_boxed_opaque_existential_1(v7 + 12, v29);
  char v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 176))(v29, v30);
  if (v31)
  {
    uint64_t v22 = sub_1C151AFCC();
    uint64_t v23 = (void *)v22;
    v24.n128_u64[0] = v7[17];
    uint64_t v25 = v28;
LABEL_9:
    sub_1C0DF7540(v22, v25, v24);
  }
}

uint64_t sub_1C0F55F84()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

void sub_1C0F55FCC(void *a1, void *a2, char a3, double a4, double a5, double a6, double a7)
{
}

unint64_t FormatPatternPositionRelative.rawValue.getter()
{
  unint64_t result = 2003134838;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6566615377656976;
      break;
    case 2:
      unint64_t result = 0x656E6961746E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0F56090@<X0>(double *a1@<X8>)
{
  uint64_t v3 = *(unsigned __int8 *)v1;
  double v5 = v1[1];
  double v4 = v1[2];
  int v6 = *((unsigned __int8 *)v1 + 24);
  type metadata accessor for FormatDecorationContext();
  sub_1C151767C();
  switch(v3)
  {
    case 1:
      double v14 = v5;
      if (v6) {
        double v14 = -0.0;
      }
      double v15 = v14 + v8;
      if (v6) {
        double v16 = -0.0;
      }
      else {
        double v16 = v4;
      }
      *a1 = v15;
      a1[1] = v16 + v7;
      goto LABEL_22;
    case 2:
      if (v6)
      {
        uint64_t v10 = sub_1C151BF8C();
        (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
      }
      else
      {
        *a1 = v5;
        a1[1] = v4;
LABEL_19:
        uint64_t v17 = *MEMORY[0x1E4FAD0B8];
        uint64_t v18 = sub_1C151BF8C();
        uint64_t v19 = *(void *)(v18 - 8);
        (*(void (**)(double *, uint64_t, uint64_t))(v19 + 104))(a1, v17, v18);
        (*(void (**)(double *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
      }
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAD120];
LABEL_24:
      uint64_t v24 = *v20;
      uint64_t v25 = sub_1C151BFCC();
      uint64_t v26 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);
      return v26(a1, v24, v25);
    case 3:
      double v11 = v5;
      if (v6) {
        double v11 = -0.0;
      }
      double v12 = v11 + v8;
      if (v6) {
        double v13 = -0.0;
      }
      else {
        double v13 = v4;
      }
      *a1 = v12;
      a1[1] = v13 + v7;
      goto LABEL_19;
    default:
      if (v6)
      {
        uint64_t v9 = sub_1C151BF8C();
        (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
      }
      else
      {
        *a1 = v5;
        a1[1] = v4;
LABEL_22:
        uint64_t v21 = *MEMORY[0x1E4FAD0B8];
        uint64_t v22 = sub_1C151BF8C();
        uint64_t v23 = *(void *)(v22 - 8);
        (*(void (**)(double *, uint64_t, uint64_t))(v23 + 104))(a1, v21, v22);
        (*(void (**)(double *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
      }
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAD118];
      goto LABEL_24;
  }
}

void FormatPatternPosition.relative.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

__n128 FormatPatternPosition.adjustment.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 24);
  __n128 result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t sub_1C0F5639C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPatternPosition.init(from:)(a1, a2);
}

uint64_t sub_1C0F563B4(void *a1)
{
  return FormatPatternPosition.encode(to:)(a1);
}

NewsFeed::FormatPatternPositionRelative_optional __swiftcall FormatPatternPositionRelative.init(rawValue:)(Swift::String rawValue)
{
  unsigned __int8 v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C0F5642C(unsigned __int8 *a1, char *a2)
{
  return sub_1C147BF8C(*a1, *a2);
}

uint64_t sub_1C0F56438()
{
  return sub_1C015ECBC();
}

uint64_t sub_1C0F56440()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F56514()
{
  return sub_1C044CF8C();
}

NewsFeed::FormatPatternPositionRelative_optional sub_1C0F5651C(Swift::String *a1)
{
  return FormatPatternPositionRelative.init(rawValue:)(*a1);
}

void sub_1C0F56528(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 2003134838;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000061657241;
      uint64_t v3 = 0x6566615377656976;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "containerView");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000015;
      *(void *)(a1 + 8) = 0x80000001C1601C20;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0F565D4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0F56634(void *a1)
{
  return FormatPatternPositionRelative.encode(to:)(a1);
}

BOOL static FormatPatternPositionAdjustment.== infix(_:_:)(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t sub_1C0F56668@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatPatternPositionAdjustment.init(from:)(a1, a2);
}

uint64_t sub_1C0F56680(void *a1)
{
  return FormatPatternPositionAdjustment.encode(to:)(a1);
}

BOOL sub_1C0F56698(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

BOOL _s8NewsFeed21FormatPatternPositionV2eeoiySbAC_ACtFZ_0(double *a1, uint64_t a2)
{
  uint64_t v2 = 2003134838;
  uint64_t v3 = *(unsigned __int8 *)a1;
  double v4 = a1[1];
  double v5 = a1[2];
  unsigned __int8 v6 = *((unsigned char *)a1 + 24);
  double v7 = *(double *)(a2 + 8);
  double v8 = *(double *)(a2 + 16);
  unint64_t v9 = 0xE400000000000000;
  char v10 = *(unsigned char *)(a2 + 24);
  unint64_t v11 = 2003134838;
  switch(v3)
  {
    case 1:
      unint64_t v11 = 0x6566615377656976;
      unint64_t v9 = 0xEC00000061657241;
      break;
    case 2:
      unint64_t v11 = 0x656E6961746E6F63;
      unint64_t v9 = 0xED00007765695672;
      break;
    case 3:
      unint64_t v9 = 0x80000001C1601C20;
      unint64_t v11 = 0xD000000000000015;
      break;
    default:
      break;
  }
  unint64_t v12 = 0xE400000000000000;
  switch(*(unsigned char *)a2)
  {
    case 1:
      unint64_t v12 = 0xEC00000061657241;
      if (v11 == 0x6566615377656976) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 2:
      uint64_t v2 = 0x656E6961746E6F63;
      unint64_t v12 = 0xED00007765695672;
      goto LABEL_9;
    case 3:
      unint64_t v12 = 0x80000001C1601C20;
      if (v11 != 0xD000000000000015) {
        goto LABEL_13;
      }
      goto LABEL_10;
    default:
LABEL_9:
      if (v11 != v2) {
        goto LABEL_13;
      }
LABEL_10:
      if (v9 == v12)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_13:
        char v13 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v13 & 1) == 0) {
          return result;
        }
      }
      if ((v6 & 1) == 0) {
        return (v10 & 1) == 0 && v4 == v7 && v5 == v8;
      }
      return (v10 & 1) != 0;
  }
}

unint64_t sub_1C0F568BC(uint64_t a1)
{
  unint64_t result = sub_1C0F568E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F568E4()
{
  unint64_t result = qword_1EA1A9300;
  if (!qword_1EA1A9300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9300);
  }
  return result;
}

uint64_t sub_1C0F56938(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F56C74(a1, a2, a3, (uint64_t (*)(void))sub_1C08A1D5C, (uint64_t (*)(void))sub_1C08F40C4, (uint64_t (*)(void))sub_1C0F56978);
}

unint64_t sub_1C0F56978()
{
  unint64_t result = qword_1EA1A9308;
  if (!qword_1EA1A9308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9308);
  }
  return result;
}

unint64_t sub_1C0F569D0()
{
  unint64_t result = qword_1EA1A9310;
  if (!qword_1EA1A9310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9310);
  }
  return result;
}

unint64_t sub_1C0F56A24(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0F56A54();
  unint64_t result = sub_1C0F56AA8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F56A54()
{
  unint64_t result = qword_1EA1A9318;
  if (!qword_1EA1A9318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9318);
  }
  return result;
}

unint64_t sub_1C0F56AA8()
{
  unint64_t result = qword_1EB85D988;
  if (!qword_1EB85D988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D988);
  }
  return result;
}

unint64_t sub_1C0F56AFC(uint64_t a1)
{
  unint64_t result = sub_1C0F56B24();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F56B24()
{
  unint64_t result = qword_1EA1A9320;
  if (!qword_1EA1A9320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9320);
  }
  return result;
}

uint64_t sub_1C0F56B78(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F56C74(a1, a2, a3, (uint64_t (*)(void))sub_1C08A226C, (uint64_t (*)(void))sub_1C08F3F20, (uint64_t (*)(void))sub_1C0F569D0);
}

unint64_t sub_1C0F56BB8(uint64_t a1)
{
  unint64_t result = sub_1C0F56BE0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F56BE0()
{
  unint64_t result = qword_1EA1A9328;
  if (!qword_1EA1A9328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9328);
  }
  return result;
}

uint64_t sub_1C0F56C34(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0F56C74(a1, a2, a3, (uint64_t (*)(void))sub_1C08A22C0, (uint64_t (*)(void))sub_1C08F3E20, (uint64_t (*)(void))sub_1C0F56CC8);
}

uint64_t sub_1C0F56C74(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F56CC8()
{
  unint64_t result = qword_1EA1A9330;
  if (!qword_1EA1A9330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9330);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatPatternPosition(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[25]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatPatternPosition()
{
  return &type metadata for FormatPatternPosition;
}

unsigned char *storeEnumTagSinglePayload for FormatPatternPositionRelative(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F56E3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternPositionRelative()
{
  return &type metadata for FormatPatternPositionRelative;
}

ValueMetadata *type metadata accessor for FormatPatternPositionAdjustment()
{
  return &type metadata for FormatPatternPositionAdjustment;
}

uint64_t sub_1C0F56E8C(void *a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C005C864(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = MEMORY[0x1F4188790](v12).n128_u64[0];
  double v15 = (char *)v29 - v14;
  id v16 = objc_msgSend(a1, sel_contentURL, v13);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v15, 1, 1, v5);
    goto LABEL_7;
  }
  uint64_t v17 = v16;
  v29[1] = v4;
  id v30 = a1;
  sub_1C1515F1C();

  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v18(v15, v8, v5);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v19(v15, 0, 1, v5);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v20(v15, 1, v5) == 1)
  {
LABEL_7:
    uint64_t v23 = (uint64_t)v15;
    goto LABEL_8;
  }
  sub_1C002F608((uint64_t)v15);
  id v21 = objc_msgSend(v30, sel_routeURL);
  if (v21)
  {
    uint64_t v22 = v21;
    sub_1C1515F1C();

    v18(v11, v8, v5);
    v19(v11, 0, 1, v5);
    if (v20(v11, 1, v5) != 1)
    {
      uint64_t v23 = (uint64_t)v11;
LABEL_8:
      sub_1C002F608(v23);
      return 0;
    }
  }
  else
  {
    v19(v11, 1, 1, v5);
  }
  sub_1C002F608((uint64_t)v11);
  if (qword_1EB87C920 != -1) {
    swift_once();
  }
  swift_retain();
  id v25 = v30;
  swift_unknownObjectRetain();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v27 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB870050 != -1) {
    swift_once();
  }
  id v28 = (id)qword_1EB870040;
  sub_1C151B39C();
  id v31 = v25;
  sub_1C151A9FC();
  swift_allocObject();
  return sub_1C151A9EC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE12openInSafari8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C005C864(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = MEMORY[0x1F4188790](v13).n128_u64[0];
  id v16 = (char *)&v35 - v15;
  id v17 = objc_msgSend(a1, sel_contentURL, v14);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v16, 1, 1, v6);
    goto LABEL_7;
  }
  uint64_t v18 = v17;
  uint64_t v36 = v3;
  uint64_t v37 = v2;
  uint64_t v38 = v5;
  id v39 = a1;
  sub_1C1515F1C();

  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v19(v16, v9, v6);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v20(v16, 0, 1, v6);
  id v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v21(v16, 1, v6) == 1)
  {
LABEL_7:
    uint64_t v24 = (uint64_t)v16;
    goto LABEL_8;
  }
  sub_1C002F608((uint64_t)v16);
  id v22 = objc_msgSend(v39, sel_routeURL);
  if (v22)
  {
    uint64_t v23 = v22;
    sub_1C1515F1C();

    v19(v12, v9, v6);
    v20(v12, 0, 1, v6);
    if (v21(v12, 1, v6) != 1)
    {
      uint64_t v24 = (uint64_t)v12;
LABEL_8:
      sub_1C002F608(v24);
      return 0;
    }
  }
  else
  {
    v20(v12, 1, 1, v6);
  }
  sub_1C002F608((uint64_t)v12);
  if (qword_1EB87C920 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v27 = self;
  swift_retain();
  id v28 = v39;
  swift_unknownObjectRetain();
  id v29 = objc_msgSend(v27, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v31 = v37;
  id v30 = v38;
  uint64_t v32 = v36;
  if (qword_1EB870050 != -1) {
    swift_once();
  }
  uint64_t v33 = (void *)qword_1EB870040;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v30, *MEMORY[0x1E4FAC3E0], v31);
  id v40 = v28;
  sub_1C151A81C();
  swift_allocObject();
  id v34 = v33;
  return sub_1C151A7FC();
}

uint64_t FormatLayoutValue.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v60 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v12 = sub_1C152070C();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1C0F58A6C();
    long long v63 = 0uLL;
    sub_1C15206EC();
    switch((char)v62)
    {
      case 1:
        type metadata accessor for FormatViewNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA19A818, (void (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v21 = v62;
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v21;
        *a2 = v22 | 4;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 2:
        type metadata accessor for FormatWebEmbedNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9380, (void (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v23 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v23;
        unint64_t v25 = 0x1000000000000004;
        goto LABEL_33;
      case 3:
        type metadata accessor for FormatTextNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9378, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v26 = v62;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v26;
        *a2 = v27 | 0x2000000000000000;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 4:
        type metadata accessor for FormatImageNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EB88DFE8, (void (*)(uint64_t))type metadata accessor for FormatImageNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v28 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v28;
        unint64_t v25 = 0x2000000000000004;
        goto LABEL_33;
      case 5:
        type metadata accessor for FormatSupplementaryNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A35C8, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v29 = v62;
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v29;
        *a2 = v30 | 0x3000000000000000;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 6:
        type metadata accessor for FormatButtonNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA19D0A0, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v31 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v31;
        unint64_t v25 = 0x3000000000000004;
        goto LABEL_33;
      case 7:
        type metadata accessor for FormatFrameNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9370, (void (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v32 = v62;
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v32;
        *a2 = v33 | 0x4000000000000000;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 8:
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        *a2 = 0xA000000000000004;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 9:
        type metadata accessor for FormatStateViewNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A1D30, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v34 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v34;
        unint64_t v25 = 0x4000000000000004;
        goto LABEL_33;
      case 10:
        type metadata accessor for FormatCustomNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9368, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v35 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v35;
        unint64_t v25 = 0x5000000000000000;
        goto LABEL_33;
      case 11:
        long long v62 = xmmword_1C152C800;
        sub_1C0F58AF8();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v55 = swift_allocObject();
        long long v56 = v70;
        *(_OWORD *)(v55 + 112) = v69;
        *(_OWORD *)(v55 + 128) = v56;
        *(void *)(v55 + 144) = v71;
        long long v57 = v66;
        *(_OWORD *)(v55 + 48) = v65;
        *(_OWORD *)(v55 + 64) = v57;
        long long v58 = v68;
        *(_OWORD *)(v55 + 80) = v67;
        *(_OWORD *)(v55 + 96) = v58;
        long long v59 = v64;
        *(_OWORD *)(v55 + 16) = v63;
        *(_OWORD *)(v55 + 32) = v59;
        *a2 = v55 | 0x5000000000000004;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 12:
        type metadata accessor for FormatMicaNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9358, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v36 = v62;
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v36;
        *a2 = v37 | 0x6000000000000000;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 13:
        type metadata accessor for FormatLayeredMediaNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A8FD0, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v38 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v38;
        unint64_t v25 = 0x6000000000000004;
        goto LABEL_33;
      case 14:
        type metadata accessor for FormatVideoNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9350, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v39 = v62;
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = v39;
        *a2 = v40 | 0x7000000000000000;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 15:
        type metadata accessor for FormatIssueCoverNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA198BA8, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v41 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v41;
        unint64_t v25 = 0x7000000000000004;
        goto LABEL_33;
      case 16:
        long long v62 = xmmword_1C152C800;
        sub_1C0F58BB4();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        long long v60 = v63;
        long long v42 = v64;
        char v43 = v65;
        uint64_t v44 = *((void *)&v65 + 1);
        uint64_t v45 = v66;
        char v46 = BYTE8(v66);
        uint64_t v61 = *((void *)&v67 + 1);
        uint64_t v72 = v67;
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = v60;
        *(_OWORD *)(v47 + 32) = v42;
        *(unsigned char *)(v47 + 48) = v43;
        *(void *)(v47 + 56) = v44;
        *(void *)(v47 + 64) = v45;
        *(unsigned char *)(v47 + 72) = v46;
        uint64_t v48 = v61;
        *(void *)(v47 + 80) = v72;
        *(void *)(v47 + 88) = v48;
        *a2 = v47 | 0x1000000000000000;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 17:
        type metadata accessor for FormatShareAttributionNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A7658, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v49 = v62;
        uint64_t v50 = swift_allocObject();
        *(void *)(v50 + 16) = v49;
        *a2 = v50 | 0x8000000000000000;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      case 18:
        type metadata accessor for FormatVideoPlayerNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9348, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v51 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v51;
        unint64_t v25 = 0x8000000000000004;
        goto LABEL_33;
      case 19:
        type metadata accessor for FormatProgressViewLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A8468, (void (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v52 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v52;
        unint64_t v25 = 0x9000000000000000;
        goto LABEL_33;
      case 20:
        type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A9340, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v53 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v53;
        unint64_t v25 = 0x9000000000000004;
        goto LABEL_33;
      case 21:
        type metadata accessor for FormatSponsoredBannerLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A6C18, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v54 = v62;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v54;
        unint64_t v25 = 0xA000000000000000;
LABEL_33:
        *a2 = v24 | v25;
        break;
      default:
        type metadata accessor for FormatItemNodeLayoutAttributes();
        long long v63 = xmmword_1C152C800;
        sub_1C0F5B008(&qword_1EA1A5ED0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutAttributes);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v16 = v62;
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v16;
        *a2 = v17;
        break;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  double v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    unint64_t v15 = *v14;
    if (*v14 >= 4) {
      break;
    }
    v14 += 2;
    if (!--v13) {
      goto LABEL_7;
    }
  }
  uint64_t v18 = *(v14 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C02570B4();
  swift_allocError();
  *(void *)uint64_t v19 = v18;
  *(void *)(v19 + 8) = v15;
  *(void *)(v19 + 16) = &unk_1F1B89200;
  *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
  swift_willThrow();
  sub_1C0257108(v18, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C0F58A6C()
{
  unint64_t result = qword_1EA1A9338;
  if (!qword_1EA1A9338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9338);
  }
  return result;
}

uint64_t sub_1C0F58AC0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1C0F58AF8()
{
  unint64_t result = qword_1EA1A9360;
  if (!qword_1EA1A9360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9360);
  }
  return result;
}

uint64_t sub_1C0F58B4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0F58BB4()
{
  unint64_t result = qword_1EA1A9388;
  if (!qword_1EA1A9388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9388);
  }
  return result;
}

uint64_t sub_1C0F58C08()
{
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 40));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t FormatLayoutValue.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v69 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - v7;
  unint64_t v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  switch((v9 >> 59) & 0x1E | (v9 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 1;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v13;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatViewNodeLayoutAttributes();
      char v11 = &qword_1EA19A820;
      uint64_t v12 = type metadata accessor for FormatViewNodeLayoutAttributes;
      break;
    case 2uLL:
      uint64_t v14 = v9 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v15 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v16 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      unint64_t v17 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v46 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v45 = *(unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      uint64_t v18 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      uint64_t v44 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
      int v43 = *(unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x48);
      uint64_t v20 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
      uint64_t v19 = *(void *)(v14 + 88);
      LOBYTE(v51) = 16;
      long long v60 = 0uLL;
      swift_retain();
      uint64_t v47 = v15;
      swift_retain();
      unint64_t v48 = v17;
      sub_1BFE6FA30(v17);
      sub_1C0F59CF4();
      uint64_t v49 = v18;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C152080C();
      if (!v3)
      {
        *(void *)&long long v60 = v47;
        *((void *)&v60 + 1) = v16;
        *(void *)&long long v61 = v46;
        *((void *)&v61 + 1) = v48;
        LOBYTE(v62) = v45;
        *((void *)&v62 + 1) = v49;
        *(void *)&long long v63 = v44;
        BYTE8(v63) = v43;
        *(void *)&long long v64 = v20;
        *((void *)&v64 + 1) = v19;
        long long v51 = xmmword_1C152C800;
        sub_1C0F59D9C();
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v8, v6);
      swift_release();
      swift_release();
      sub_1BFF0056C(v48);
      swift_release();
      swift_release();
      return swift_release();
    case 3uLL:
      uint64_t v21 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 2;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v21;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatWebEmbedNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A93D8;
      uint64_t v12 = type metadata accessor for FormatWebEmbedNodeLayoutAttributes;
      break;
    case 4uLL:
      uint64_t v22 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 3;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v22;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatTextNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A93D0;
      uint64_t v12 = type metadata accessor for FormatTextNodeLayoutAttributes;
      break;
    case 5uLL:
      uint64_t v23 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 4;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v23;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatImageNodeLayoutAttributes();
      char v11 = &qword_1EB88DFE0;
      uint64_t v12 = type metadata accessor for FormatImageNodeLayoutAttributes;
      break;
    case 6uLL:
      uint64_t v24 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 5;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v24;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatSupplementaryNodeLayoutAttributes();
      char v11 = &qword_1EA1A35D0;
      uint64_t v12 = type metadata accessor for FormatSupplementaryNodeLayoutAttributes;
      break;
    case 7uLL:
      uint64_t v25 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 6;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v25;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatButtonNodeLayoutAttributes();
      char v11 = &qword_1EA19D0A8;
      uint64_t v12 = type metadata accessor for FormatButtonNodeLayoutAttributes;
      break;
    case 8uLL:
      uint64_t v26 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 7;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v26;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatFrameNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A93C8;
      uint64_t v12 = type metadata accessor for FormatFrameNodeLayoutAttributes;
      break;
    case 9uLL:
      uint64_t v27 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 9;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v27;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatStateViewNodeLayoutAttributes();
      char v11 = &qword_1EA1A1D38;
      uint64_t v12 = type metadata accessor for FormatStateViewNodeLayoutAttributes;
      break;
    case 0xAuLL:
      uint64_t v28 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 10;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v28;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatCustomNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A93C0;
      uint64_t v12 = type metadata accessor for FormatCustomNodeLayoutAttributes;
      break;
    case 0xBuLL:
      long long v29 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x70);
      long long v65 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
      long long v66 = v29;
      long long v67 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x80);
      uint64_t v68 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x90);
      long long v30 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      long long v61 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      long long v62 = v30;
      long long v31 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
      long long v63 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
      long long v64 = v31;
      long long v60 = *(_OWORD *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v50) = 11;
      long long v51 = 0uLL;
      sub_1C04987F0((uint64_t)&v60);
      sub_1C0F59CF4();
      sub_1C152080C();
      if (!v2)
      {
        long long v57 = v66;
        long long v58 = v67;
        uint64_t v59 = v68;
        long long v53 = v62;
        long long v54 = v63;
        long long v55 = v64;
        long long v56 = v65;
        long long v51 = v60;
        long long v52 = v61;
        long long v50 = xmmword_1C152C800;
        sub_1C0F59D48();
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v8, v6);
      return sub_1C049887C((uint64_t)&v60);
    case 0xCuLL:
      uint64_t v33 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 12;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v33;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatMicaNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A93B0;
      uint64_t v12 = type metadata accessor for FormatMicaNodeLayoutAttributes;
      break;
    case 0xDuLL:
      uint64_t v34 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 13;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v34;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatLayeredMediaNodeLayoutAttributes();
      char v11 = &qword_1EA1A8FD8;
      uint64_t v12 = type metadata accessor for FormatLayeredMediaNodeLayoutAttributes;
      break;
    case 0xEuLL:
      uint64_t v35 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 14;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v35;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatVideoNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A93A8;
      uint64_t v12 = type metadata accessor for FormatVideoNodeLayoutAttributes;
      break;
    case 0xFuLL:
      uint64_t v36 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 15;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v36;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatIssueCoverNodeLayoutAttributes();
      char v11 = &qword_1EA198BB0;
      uint64_t v12 = type metadata accessor for FormatIssueCoverNodeLayoutAttributes;
      break;
    case 0x10uLL:
      uint64_t v37 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 17;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v37;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatShareAttributionNodeLayoutAttributes();
      char v11 = &qword_1EA1A7660;
      uint64_t v12 = type metadata accessor for FormatShareAttributionNodeLayoutAttributes;
      break;
    case 0x11uLL:
      uint64_t v38 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 18;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v38;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatVideoPlayerNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A93A0;
      uint64_t v12 = type metadata accessor for FormatVideoPlayerNodeLayoutAttributes;
      break;
    case 0x12uLL:
      uint64_t v39 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 19;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v39;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatProgressViewLayoutAttributes();
      char v11 = &qword_1EA1A8470;
      uint64_t v12 = type metadata accessor for FormatProgressViewLayoutAttributes;
      break;
    case 0x13uLL:
      uint64_t v40 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 20;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v40;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes();
      char v11 = (unint64_t *)&unk_1EA1A9398;
      uint64_t v12 = type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes;
      break;
    case 0x14uLL:
      uint64_t v41 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      LOBYTE(v51) = 21;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v41;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatSponsoredBannerLayoutAttributes();
      char v11 = &qword_1EA1A6C20;
      uint64_t v12 = type metadata accessor for FormatSponsoredBannerLayoutAttributes;
      break;
    case 0x15uLL:
      LOBYTE(v51) = 8;
      sub_1C0F59CF4();
      long long v60 = 0uLL;
      sub_1C152080C();
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v8, v6);
    default:
      uint64_t v10 = *(void *)(v9 + 16);
      LOBYTE(v51) = 0;
      long long v60 = 0uLL;
      sub_1C0F59CF4();
      swift_retain();
      sub_1C152080C();
      if (v2) {
        goto LABEL_47;
      }
      *(void *)&long long v51 = v10;
      long long v60 = xmmword_1C152C800;
      type metadata accessor for FormatItemNodeLayoutAttributes();
      char v11 = &qword_1EA1A5ED8;
      uint64_t v12 = type metadata accessor for FormatItemNodeLayoutAttributes;
      break;
  }
  sub_1C0F5B008(v11, (void (*)(uint64_t))v12);
  sub_1C152080C();
LABEL_47:
  (*(void (**)(char *, uint64_t))(v69 + 8))(v8, v6);
  return swift_release();
}

unint64_t sub_1C0F59CF4()
{
  unint64_t result = qword_1EA1A9390;
  if (!qword_1EA1A9390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9390);
  }
  return result;
}

unint64_t sub_1C0F59D48()
{
  unint64_t result = qword_1EA1A93B8;
  if (!qword_1EA1A93B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A93B8);
  }
  return result;
}

unint64_t sub_1C0F59D9C()
{
  unint64_t result = qword_1EA1A93E0;
  if (!qword_1EA1A93E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A93E0);
  }
  return result;
}

unint64_t sub_1C0F59DF0(char a1)
{
  unint64_t result = 1835365481;
  switch(a1)
  {
    case 1:
      unint64_t result = 2003134838;
      break;
    case 2:
      unint64_t result = 0x6465626D45626577;
      break;
    case 3:
      unint64_t result = 1954047348;
      break;
    case 4:
      unint64_t result = 0x6567616D69;
      break;
    case 5:
      unint64_t result = 0x656D656C70707573;
      break;
    case 6:
      unint64_t result = 0x6E6F74747562;
      break;
    case 7:
      unint64_t result = 0x656D617266;
      break;
    case 8:
      unint64_t result = 0x6E6564646968;
      break;
    case 9:
      unint64_t result = 0x6569566574617473;
      break;
    case 10:
      unint64_t result = 0x6D6F74737563;
      break;
    case 11:
      unint64_t result = 0x63697274654D6461;
      break;
    case 12:
      unint64_t result = 1633905005;
      break;
    case 13:
      unint64_t result = 0x4D6465726579616CLL;
      break;
    case 14:
      unint64_t result = 0x6F65646976;
      break;
    case 15:
      unint64_t result = 0x766F436575737369;
      break;
    case 16:
      unint64_t result = 0x70756F7267;
      break;
    case 17:
      unint64_t result = 0xD000000000000010;
      break;
    case 18:
      unint64_t result = 0x616C506F65646976;
      break;
    case 19:
      unint64_t result = 0x73736572676F7270;
      break;
    case 20:
      unint64_t result = 0x6D45656C7A7A7570;
      break;
    case 21:
      unint64_t result = 0x65726F736E6F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0F5A080(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C0F59DF0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0F59DF0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0F5A10C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0F59DF0(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0F5A170()
{
  sub_1C0F59DF0(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F5A1C4()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0F59DF0(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0F5A224@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F5B2F0();
  *a1 = result;
  return result;
}

unint64_t sub_1C0F5A254@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0F59DF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0F5A280()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0F5A2E0()
{
  return sub_1C151EAEC();
}

void FormatLayoutValue.flipRightToLeft(bounds:)(void *a1@<X8>)
{
  unint64_t v3 = *v1;
  switch((*v1 >> 59) & 0x1E | (*v1 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v6 = swift_allocObject();
      type metadata accessor for FormatViewNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA19A848, (void (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v3 = v6 | 4;
      goto LABEL_24;
    case 2uLL:
      uint64_t v7 = swift_allocObject();
      FormatGroupNodeLayoutAttributes.flipRightToLeft(bounds:)(v7 + 16);
      unint64_t v3 = v7 | 0x1000000000000000;
      goto LABEL_24;
    case 3uLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatWebEmbedNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A9428, (void (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x1000000000000004;
      goto LABEL_23;
    case 4uLL:
      uint64_t v10 = swift_allocObject();
      type metadata accessor for FormatTextNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A9420, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v3 = v10 | 0x2000000000000000;
      goto LABEL_24;
    case 5uLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatImageNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EB88DFD8, (void (*)(uint64_t))type metadata accessor for FormatImageNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x2000000000000004;
      goto LABEL_23;
    case 6uLL:
      uint64_t v11 = swift_allocObject();
      swift_retain();
      uint64_t v12 = FormatSupplementaryNodeLayoutAttributes.flipRightToLeft(bounds:)();
      swift_release();
      *(void *)(v11 + 16) = v12;
      unint64_t v3 = v11 | 0x3000000000000000;
      goto LABEL_24;
    case 7uLL:
      uint64_t v8 = swift_allocObject();
      swift_retain();
      uint64_t v13 = FormatButtonNodeLayoutAttributes.flipRightToLeft(bounds:)();
      swift_release();
      *(void *)(v8 + 16) = v13;
      unint64_t v9 = 0x3000000000000004;
      goto LABEL_23;
    case 8uLL:
      uint64_t v14 = swift_allocObject();
      type metadata accessor for FormatFrameNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A9418, (void (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v3 = v14 | 0x4000000000000000;
      goto LABEL_24;
    case 9uLL:
      uint64_t v8 = swift_allocObject();
      swift_retain();
      uint64_t v15 = FormatStateViewNodeLayoutAttributes.flipRightToLeft(bounds:)();
      swift_release();
      *(void *)(v8 + 16) = v15;
      unint64_t v9 = 0x4000000000000004;
      goto LABEL_23;
    case 0xAuLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatCustomNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A9410, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x5000000000000000;
      goto LABEL_23;
    case 0xBuLL:
      uint64_t v8 = swift_allocObject();
      sub_1C0F5AFB4();
      sub_1C151798C();
      unint64_t v9 = 0x5000000000000004;
      goto LABEL_23;
    case 0xCuLL:
      uint64_t v16 = swift_allocObject();
      type metadata accessor for FormatMicaNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A9400, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v3 = v16 | 0x6000000000000000;
      goto LABEL_24;
    case 0xDuLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatLayeredMediaNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A9000, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x6000000000000004;
      goto LABEL_23;
    case 0xEuLL:
      uint64_t v17 = swift_allocObject();
      type metadata accessor for FormatVideoNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A93F8, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v3 = v17 | 0x7000000000000000;
      goto LABEL_24;
    case 0xFuLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatIssueCoverNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA198BD8, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x7000000000000004;
      goto LABEL_23;
    case 0x10uLL:
      uint64_t v18 = swift_allocObject();
      type metadata accessor for FormatShareAttributionNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A7688, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v3 = v18 | 0x8000000000000000;
      goto LABEL_24;
    case 0x11uLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatVideoPlayerNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A93F0, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x8000000000000004;
      goto LABEL_23;
    case 0x12uLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatProgressViewLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A8498, (void (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x9000000000000000;
      goto LABEL_23;
    case 0x13uLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A93E8, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0x9000000000000004;
      goto LABEL_23;
    case 0x14uLL:
      uint64_t v8 = swift_allocObject();
      type metadata accessor for FormatSponsoredBannerLayoutAttributes();
      sub_1C0F5B008(&qword_1EA1A6C48, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
      sub_1C151798C();
      unint64_t v9 = 0xA000000000000000;
LABEL_23:
      unint64_t v3 = v8 | v9;
      goto LABEL_24;
    case 0x15uLL:
LABEL_24:
      *a1 = v3;
      break;
    default:
      uint64_t v4 = swift_allocObject();
      swift_retain();
      uint64_t v5 = FormatItemNodeLayoutAttributes.flipRightToLeft(bounds:)();
      swift_release();
      *(void *)(v4 + 16) = v5;
      *a1 = v4;
      break;
  }
}

unint64_t sub_1C0F5AFB4()
{
  unint64_t result = qword_1EA1A9408;
  if (!qword_1EA1A9408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9408);
  }
  return result;
}

uint64_t sub_1C0F5B008(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F5B050@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatLayoutValue.init(from:)(a1, a2);
}

uint64_t sub_1C0F5B068(void *a1)
{
  return FormatLayoutValue.encode(to:)(a1);
}

uint64_t sub_1C0F5B0E0(void *a1)
{
  unsigned int v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x14) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 21;
  }
}

unint64_t *sub_1C0F5B104(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x15) {
    *uint64_t result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    *uint64_t result = (8 * (a2 - 21)) | 0xA000000000000004;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatLayoutValue.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F5B20CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutValue.CodingType()
{
  return &type metadata for FormatLayoutValue.CodingType;
}

unint64_t sub_1C0F5B248()
{
  unint64_t result = qword_1EA1A9430;
  if (!qword_1EA1A9430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9430);
  }
  return result;
}

unint64_t sub_1C0F5B29C()
{
  unint64_t result = qword_1EA1A9438;
  if (!qword_1EA1A9438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9438);
  }
  return result;
}

uint64_t sub_1C0F5B2F0()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16) {
    return 22;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0F5B344()
{
  uint64_t result = type metadata accessor for FeedCursorTrackerSnapshot();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1C0F5B430(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)a1 + 80);
  uint64_t v9 = *(void *)(*(void *)a1 + 88);
  uint64_t v10 = (char *)type metadata accessor for DebugJournalSection();
  v30[1] = sub_1C151E30C();
  swift_retain();
  id v11 = a4;
  sub_1C14740D0(a1, v11, v31);
  swift_release();

  sub_1C151ED5C();
  sub_1C151ED1C();
  v30[0] = 0;
  v31[0].n128_u64[0] = *(void *)(a1 + *(void *)(*(void *)a1 + 240));
  uint64_t v20 = v30;
  uint64_t v21 = a3;
  uint64_t v22 = a2;
  id v23 = v11;
  uint64_t v24 = a1;
  v18[2] = v8;
  v18[3] = v9;
  v18[4] = sub_1C0F63A58;
  v18[5] = &v19;
  sub_1C0F63A88();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C0F63B44(&qword_1EA1A9510, (void (*)(uint64_t))sub_1C0F63A88);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C119B3EC((void (*)(char *, char *))sub_1C0F63A70, (uint64_t)v18, v13, v10, MEMORY[0x1E4FBC248], v14, MEMORY[0x1E4FBC278], v15);
  swift_bridgeObjectRelease();
  v31[0].n128_u64[0] = v16;
  swift_getWitnessTable();
  sub_1C151ED0C();
  swift_retain();
  sub_1C1474318(a1, v11, (uint64_t)v31);
  swift_release();
  __n128 v27 = v31[2];
  __n128 v28 = v31[3];
  uint64_t v29 = v32;
  __n128 v25 = v31[0];
  __n128 v26 = v31[1];
  sub_1C151ED1C();
  return v30[0];
}

uint64_t sub_1C0F5B684(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)a1 + 80);
  uint64_t v9 = *(void *)(*(void *)a1 + 88);
  uint64_t v10 = (char *)type metadata accessor for DebugJournalSection();
  v30[1] = sub_1C151E30C();
  swift_retain();
  id v11 = a4;
  sub_1C14745B4(a1, v11, v31);
  swift_release();

  sub_1C151ED5C();
  sub_1C151ED1C();
  v30[0] = 0;
  v31[0].n128_u64[0] = *(void *)(a1 + qword_1EB93C2F0);
  uint64_t v20 = v30;
  uint64_t v21 = a3;
  uint64_t v22 = a2;
  id v23 = v11;
  uint64_t v24 = a1;
  v18[2] = v8;
  v18[3] = v9;
  v18[4] = sub_1C0F63E18;
  v18[5] = &v19;
  sub_1C0F63A88();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C0F63B44(&qword_1EA1A9510, (void (*)(uint64_t))sub_1C0F63A88);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C119B3EC((void (*)(char *, char *))sub_1C0F63A70, (uint64_t)v18, v13, v10, MEMORY[0x1E4FBC248], v14, MEMORY[0x1E4FBC278], v15);
  swift_bridgeObjectRelease();
  v31[0].n128_u64[0] = v16;
  swift_getWitnessTable();
  sub_1C151ED0C();
  swift_retain();
  sub_1C1474674(a1, v11, (uint64_t)v31);
  swift_release();
  __n128 v27 = v31[2];
  __n128 v28 = v31[3];
  uint64_t v29 = v32;
  __n128 v25 = v31[0];
  __n128 v26 = v31[1];
  sub_1C151ED1C();
  return v30[0];
}

void sub_1C0F5B8D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C0F62DB8();
}

void sub_1C0F5B8F8()
{
  unint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  id v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v35 = *MEMORY[0x1E4FBC8C8] & *v0;
  v36.receiver = v0;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, sel_viewDidLoad);
  id v4 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v5 = (void *)sub_1C151E5EC();
  objc_msgSend(v4, sel_setTitle_, v5);

  unsigned int v6 = *(void **)((char *)v1 + *(void *)((*v3 & *v1) + 0xC0));
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_secondaryLabelColor);
  objc_msgSend(v6, sel_setTextColor_, v8);

  id v9 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
  objc_msgSend(v6, sel_setFont_, v9);

  uint64_t v10 = (void *)sub_1C151E5EC();
  id v11 = self;
  id v12 = objc_msgSend(v11, sel_systemImageNamed_, v10);

  if (v12)
  {
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithImage_style_target_action_, v12, 2, sub_1C1520A7C(), sel_doDismiss);
    swift_unknownObjectRelease();

    id v14 = objc_msgSend(v7, sel_systemGrayColor);
    objc_msgSend(v13, sel_setTintColor_, v14);

    id v15 = objc_msgSend(v1, sel_navigationItem);
    sub_1C0F63D40(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C15320E0;
    *(void *)(v16 + 32) = v13;
    sub_1C151EBEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    id v34 = v13;
    uint64_t v17 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setRightBarButtonItems_, v17);

    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C1534A50;
    char v19 = (void *)sub_1C151E5EC();
    id v20 = objc_msgSend(v11, sel_systemImageNamed_, v19);

    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithImage_style_target_action_, v20, 0, sub_1C1520A7C(), sel_doSettingsWithSender_);
    swift_unknownObjectRelease();

    *(void *)(v18 + 32) = v21;
    *(void *)(v18 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(void *)(v18 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v6);
    *(void *)(v18 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    uint64_t v22 = (void *)sub_1C151E5EC();
    id v23 = objc_msgSend(v11, sel_systemImageNamed_, v22);

    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithImage_style_target_action_, v23, 0, sub_1C1520A7C(), sel_doScrollToUserEnteredSection);
    swift_unknownObjectRelease();

    *(void *)(v18 + 64) = v24;
    __n128 v25 = (void *)sub_1C151E5EC();
    id v26 = objc_msgSend(v11, sel_systemImageNamed_, v25);

    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    __n128 v28 = (void *)swift_allocObject();
    v28[2] = *(void *)(v35 + 80);
    v28[3] = *(void *)(v35 + 88);
    v28[4] = v27;
    id v29 = objc_allocWithZone((Class)sub_1C151BBEC());
    *(void *)(v18 + 72) = sub_1C151BBDC();
    sub_1C151EBEC();
    long long v30 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setToolbarItems_, v30);

    long long v31 = *(void **)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x80));
    objc_msgSend(v31, sel_setDelegate_, v1);
    objc_msgSend(v31, sel_setDataSource_, v1);
    objc_msgSend(v31, sel_setAlwaysBounceVertical_, 1);
    type metadata accessor for DebugJournalTableViewCell();
    sub_1C151F26C();
    type metadata accessor for DebugJournalHeaderView();
    sub_1C151F25C();
    id v32 = objc_msgSend(v1, sel_view);
    if (v32)
    {
      uint64_t v33 = v32;
      objc_msgSend(v32, sel_addSubview_, v31);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C0F5BFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFC39268(0, &qword_1EA1A2120);
  sub_1C0F63D40(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C15320F0;
  sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a2;
  v7[3] = a3;
  _OWORD v7[4] = a1;
  swift_retain();
  *(void *)(v6 + 32) = sub_1C151FBBC();
  id v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  void v8[4] = a1;
  swift_retain();
  *(void *)(v6 + 40) = sub_1C151FBBC();
  sub_1C151EBEC();
  return sub_1C151F8AC();
}

id sub_1C0F5C1B4()
{
  unint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  swift_beginAccess();
  uint64_t v5 = v0;
  type metadata accessor for DebugJournalSection();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v2 = sub_1C152023C();
  id v3 = (void *)((char *)v5 + *(void *)((*v1 & *v5) + 0x70));
  swift_beginAccess();
  uint64_t *v3 = v2;
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)((char *)v5 + *(void *)((*v1 & *v5) + 0x80)), sel_reloadData);
}

void sub_1C0F5C334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C18C9C60](v6);
  if (v7)
  {
    id v8 = (void *)v7;
    swift_retain();

    sub_1C1086E30(a5);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C18C9C60](v6);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    sub_1C0F5C1B4();
  }
}

void sub_1C0F5C400(void *a1)
{
  id v1 = a1;
  sub_1C0F5B8F8();
}

void sub_1C0F5C448(char a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v3, sel_setToolbarHidden_animated_, 0, 0);
  }
}

void sub_1C0F5C4C8(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1C0F5C448(a3);
}

id sub_1C0F5C51C()
{
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_viewWillLayoutSubviews);
  id v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *(void **)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80));
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    id v4 = result;
    objc_msgSend(result, sel_bounds);
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    return objc_msgSend(*(id *)((char *)v0 + *(void *)((*v1 & *v0) + 0xC0)), sel_sizeToFit);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0F5C62C(void *a1)
{
  id v1 = a1;
  sub_1C0F5C51C();
}

uint64_t sub_1C0F5C674(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = sub_1C0F62EFC();

  return v6;
}

uint64_t sub_1C0F5C6C0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = sub_1C0F62FC0();

  return v6;
}

id sub_1C0F5C714(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v1;
  sub_1C151676C();
  swift_beginAccess();
  id v5 = *(void **)(v4 + 80);
  uint64_t v6 = *(void **)(v4 + 88);
  type metadata accessor for DebugJournalSection();
  sub_1C151ED8C();
  uint64_t v222 = v255[3];
  uint64_t v223 = v255[1];
  id v227 = (id)v255[5];
  uint64_t v224 = v255[8];
  swift_endAccess();
  sub_1C151675C();
  uint64_t v221 = v255[4];
  uint64_t v226 = type metadata accessor for DebugJournalItem();
  sub_1C151ED8C();
  type metadata accessor for DebugJournalTableViewCell();
  id v216 = a1;
  double v7 = (char *)sub_1C151F24C();
  id v8 = objc_msgSend(v7, sel_textLabel);
  if (v8)
  {
    id v9 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
    objc_msgSend(v8, sel_setFont_, v9);
  }
  id v10 = objc_msgSend(v7, sel_textLabel);
  if (v10)
  {
    double v11 = v10;
    id v12 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v11, sel_setTextColor_, v12);
  }
  id v220 = v5;
  id v13 = objc_msgSend(v7, sel_detailTextLabel);
  if (v13)
  {
    id v14 = v13;
    id v15 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v14, sel_setTextColor_, v15);
  }
  id v16 = objc_msgSend(v7, sel_detailTextLabel);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
    objc_msgSend(v17, sel_setFont_, v18);
  }
  id v19 = objc_msgSend(v7, sel_detailTextLabel);
  if (v19)
  {
    id v20 = v19;
    objc_msgSend(v19, sel_setNumberOfLines_, 0);
  }
  objc_msgSend(v7, sel_setSelectionStyle_, 0);
  objc_msgSend(v7, sel_setAccessoryType_, 0);
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_stripView;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_stripView], sel_setBackgroundColor_, v227);
  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_activityIndicatorView;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_activityIndicatorView], sel_setHidden_, 1);
  objc_msgSend(v7, sel_setIndentationLevel_, 0);
  v225 = v7;
  objc_msgSend(v7, sel_setIndentationWidth_, 16.0);
  uint64_t v23 = *(void *)(v226 - 8);
  (*(void (**)(long long *, void *))(v23 + 16))(&v250, v255);
  switch(v254)
  {
    case 1:
      uint64_t v219 = v23;
      long long v29 = v250;
      id v25 = v225;
      id v30 = objc_msgSend(v225, sel_textLabel);
      if (v30)
      {
        long long v31 = v30;
        *(void *)&long long v239 = 0x2820746F6C53;
        *((void *)&v239 + 1) = 0xE600000000000000;
        *(void *)&v234[0] = v29;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        id v32 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v31, sel_setText_, v32);
      }
      id v33 = objc_msgSend(v225, sel_detailTextLabel);
      id v34 = v227;
      if (!v33) {
        goto LABEL_61;
      }
      uint64_t v35 = v33;
      *(void *)&long long v239 = *((void *)&v29 + 1);
      MEMORY[0x1F4188790](v33);
      id v209 = v220;
      v210 = v6;
      type metadata accessor for FeedGroupEmitter();
      uint64_t v36 = sub_1C151ED5C();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v38 = MEMORY[0x1E4FBB1A0];
      uint64_t v40 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0F63D20, (uint64_t)v208, v36, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v39);
      swift_bridgeObjectRelease();
      id v25 = v225;
      *(void *)&long long v239 = v40;
      sub_1C0F63D40(0, (unint64_t *)&qword_1EB879F20, v38, MEMORY[0x1E4FBB320]);
      sub_1BFD98A0C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v38);
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      uint64_t v41 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_setText_, v41);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_22;
    case 2:
      uint64_t v219 = v23;
      uint64_t v42 = v250;
      id v25 = v225;
      id v43 = objc_msgSend(v225, sel_textLabel);
      if (v43)
      {
        uint64_t v44 = v43;
        int v45 = (void *)sub_1C151E5EC();
        objc_msgSend(v44, sel_setText_, v45);
      }
      id v46 = objc_msgSend(v225, sel_detailTextLabel);
      id v34 = v227;
      if (!v46)
      {
LABEL_61:
        (*(void (**)(void *, uint64_t))(v219 + 8))(v255, v226);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return v25;
      }
      uint64_t v47 = v46;
      *(void *)&long long v239 = v42;
      MEMORY[0x1F4188790](v46);
      id v209 = v220;
      v210 = v6;
      type metadata accessor for FeedGroupEmitter();
      uint64_t v48 = sub_1C151ED5C();
      uint64_t v49 = swift_getWitnessTable();
      uint64_t v50 = MEMORY[0x1E4FBB1A0];
      uint64_t v52 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0F63EC8, (uint64_t)v208, v48, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v49, MEMORY[0x1E4FBC278], v51);
      swift_bridgeObjectRelease();
      id v25 = v225;
      *(void *)&long long v239 = v52;
      sub_1C0F63D40(0, (unint64_t *)&qword_1EB879F20, v50, MEMORY[0x1E4FBB320]);
      sub_1BFD98A0C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v50);
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      uint64_t v41 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v47, sel_setText_, v41);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_22:
LABEL_90:
      swift_release();
      goto LABEL_91;
    case 3:
      uint64_t v53 = v23;
      sub_1BFC773DC(v251, (uint64_t)&v239);
      id v25 = v225;
      id v54 = objc_msgSend(v225, sel_textLabel);
      if (v54)
      {
        long long v55 = v54;
        long long v56 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v55, sel_setText_, v56);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v124 = objc_msgSend(v225, sel_detailTextLabel);
      if (v124)
      {
        v125 = v124;
        __swift_project_boxed_opaque_existential_1(&v239, *((uint64_t *)&v240 + 1));
        sub_1C152088C();
        v126 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v125, sel_setText_, v126);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        (*(void (**)(void *, uint64_t))(v53 + 8))(v255, v226);
      }
      else
      {
        (*(void (**)(void *, uint64_t))(v53 + 8))(v255, v226);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
      return v25;
    case 4:
      uint64_t v57 = v250;
      id v58 = objc_msgSend(v225, sel_textLabel);
      id v59 = v227;
      id v218 = v6;
      uint64_t v60 = v57;
      if (v58)
      {
        long long v61 = v58;
        v144 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v61, sel_setText_, v144);
      }
      uint64_t v219 = v23;
      uint64_t v145 = qword_1EB93C680;
      *(void *)&long long v239 = *(void *)(v57 + qword_1EB93C680);
      MEMORY[0x1F4188790](v58);
      id v209 = v2;
      uint64_t v146 = type metadata accessor for FeedCursorGroup();
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v147 = sub_1C152023C();
      id v25 = v225;
      v148 = (char *)objc_msgSend(v225, sel_detailTextLabel);
      if (v148)
      {
        id v216 = 0;
        v217 = v148;
        uint64_t v149 = v147;
        *(void *)&long long v239 = 0;
        *((void *)&v239 + 1) = 0xE000000000000000;
        sub_1C15200FC();
        if (qword_1EB85E570 != -1) {
          swift_once();
        }
        v150 = (void *)qword_1EB85B1D8;
        v151 = (void *)sub_1C151621C();
        id v152 = objc_msgSend(v150, sel_stringFromDate_, v151);

        sub_1C151E62C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        MEMORY[0x1C18C6830](*(void *)(v60 + v145), v146);
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        MEMORY[0x1C18C6830](v149, v146);
        swift_bridgeObjectRelease();
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v153 = type metadata accessor for FeedGroupEmitter();
        sub_1C151ED5C();
        nullsub_1();
        sub_1C151E3DC();
        swift_bridgeObjectRetain();
        swift_getWitnessTable();
        sub_1C151E9CC();
        uint64_t v154 = MEMORY[0x1C18C6830]();
        swift_bridgeObjectRelease();
        *(void *)&v234[0] = v154;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        *(void *)&v234[0] = MEMORY[0x1C18C6830](*(void *)(v60 + qword_1EB93C678), v153);
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v155 = *(void *)(v60 + qword_1EB93C740);
        uint64_t v156 = type metadata accessor for FeedDatabaseGroup();
        *(void *)&v234[0] = MEMORY[0x1C18C6830](v155, v156);
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        v157 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v217, sel_setText_, v157);

        id v59 = v227;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v225, sel_setAccessoryType_, 4);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_89;
    case 5:
      uint64_t v62 = v23;
      swift_release();
      id v25 = v225;
      id v63 = objc_msgSend(v225, sel_textLabel);
      if (v63)
      {
        long long v64 = v63;
        long long v65 = (void *)sub_1C151E5EC();
        objc_msgSend(v64, sel_setText_, v65);
      }
      id v66 = objc_msgSend(v225, sel_detailTextLabel);
      id v67 = v227;
      if (v66)
      {
        uint64_t v68 = v66;
        uint64_t v69 = (void *)sub_1C151E5EC();
        objc_msgSend(v68, sel_setText_, v69);
      }
      id v70 = objc_msgSend(v225, sel_textLabel);
      if (v70)
      {
        uint64_t v71 = v70;
        id v72 = objc_msgSend(self, sel_systemBlueColor);
        objc_msgSend(v71, sel_setTextColor_, v72);
      }
      id v73 = objc_msgSend(v225, sel_textLabel);
      if (v73)
      {
        uint64_t v74 = v73;
        id v75 = objc_msgSend(self, sel_systemFontOfSize_, 17.0);
        objc_msgSend(v74, sel_setFont_, v75);
      }
      objc_msgSend(v225, sel_setSelectionStyle_, 3);
      objc_msgSend(v225, sel_setAccessoryType_, 0);
      goto LABEL_43;
    case 6:
      uint64_t v219 = v23;
      uint64_t v76 = v250;
      id v77 = objc_msgSend(v225, sel_textLabel);
      if (v77)
      {
        long long v78 = v77;
        *(void *)&long long v239 = 0;
        *((void *)&v239 + 1) = 0xE000000000000000;
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        v158 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v78, sel_setText_, v158);
      }
      v217 = (char *)qword_1EB93C300;
      *(void *)&long long v239 = *(void *)(v76 + qword_1EB93C300);
      MEMORY[0x1F4188790](v77);
      id v209 = v2;
      uint64_t v159 = type metadata accessor for FeedDeferredCursorGroup();
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v160 = sub_1C152023C();
      id v25 = v225;
      id v161 = objc_msgSend(v225, sel_detailTextLabel);
      if (v161)
      {
        id v216 = v161;
        id v218 = v6;
        *(void *)&long long v239 = 0;
        *((void *)&v239 + 1) = 0xE000000000000000;
        sub_1C15200FC();
        if (qword_1EB85E570 != -1) {
          swift_once();
        }
        v162 = (void *)qword_1EB85B1D8;
        v163 = (void *)sub_1C151621C();
        id v164 = objc_msgSend(v162, sel_stringFromDate_, v163);

        uint64_t v165 = sub_1C151E62C();
        uint64_t v167 = v166;
        swift_bridgeObjectRelease();

        *(void *)&long long v239 = v165;
        *((void *)&v239 + 1) = v167;
        sub_1C151E80C();
        MEMORY[0x1C18C6830](*(void *)&v217[v76], v159);
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v168 = MEMORY[0x1C18C6830](v160, v159);
        swift_bridgeObjectRelease();
        *(void *)&v234[0] = v168;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v169 = *(void *)(v76 + qword_1EB93C308);
        uint64_t v170 = type metadata accessor for FeedDatabaseGroup();
        *(void *)&v234[0] = MEMORY[0x1C18C6830](v169, v170);
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        v171 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v216, sel_setText_, v171);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v225, sel_setAccessoryType_, 4);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_89:
      swift_release();
      goto LABEL_90;
    case 7:
      uint64_t v62 = v23;
      id v79 = objc_msgSend(v225, sel_textLabel);
      if (v79)
      {
        long long v80 = v79;
        objc_msgSend(v79, sel_setText_, 0);
      }
      id v81 = objc_msgSend(v225, sel_detailTextLabel);
      id v67 = v227;
      if (v81)
      {
        long long v82 = v81;
        objc_msgSend(v81, sel_setText_, 0);
      }
      id v25 = v225;
      objc_msgSend(v225, sel_setAccessoryType_, 0);
      uint64_t v83 = *(void **)&v225[v22];
      objc_msgSend(v83, (SEL)&selRef_defaultQualityImage, 0);
      objc_msgSend(v83, sel_startAnimating);
LABEL_43:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(void *, uint64_t))(v62 + 8))(v255, v226);
      return v25;
    default:
      uint64_t v219 = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = v253;
      v247[4] = v251[11];
      v247[5] = v251[12];
      long long v248 = v251[13];
      uint64_t v249 = v252;
      v247[0] = v251[7];
      v247[1] = v251[8];
      v247[2] = v251[9];
      v247[3] = v251[10];
      long long v243 = v251[3];
      long long v244 = v251[4];
      long long v245 = v251[5];
      long long v246 = v251[6];
      long long v239 = v250;
      long long v240 = v251[0];
      long long v241 = v251[1];
      long long v242 = v251[2];
      id v25 = v225;
      objc_msgSend(v225, sel_setIndentationLevel_, v253);
      id v26 = *(id *)&v225[v21];
      id v27 = v227;
      if (v24 == 1) {
        id v28 = objc_msgSend(v227, sel_colorWithAlphaComponent_, 0.5);
      }
      else {
        id v28 = v227;
      }
      uint64_t v84 = v28;
      objc_msgSend(v26, sel_setBackgroundColor_, v28);

      sub_1BFD7EBD0((uint64_t)v247, (uint64_t)v234);
      if (v235 < 3u)
      {
        sub_1BFC773DC(v234, (uint64_t)v236);
        uint64_t v98 = v237;
        uint64_t v97 = v238;
        __swift_project_boxed_opaque_existential_1(v236, v237);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v97 + 8) + 8) + 16))(v98);
        sub_1C0F637D4(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
        uint64_t v214 = v99;
        uint64_t v100 = swift_allocObject();
        v101 = (void **)MEMORY[0x1E4FB0700];
        long long v215 = xmmword_1C1529AE0;
        *(_OWORD *)(v100 + 16) = xmmword_1C1529AE0;
        v102 = *v101;
        *(void *)(v100 + 32) = *v101;
        int v103 = self;
        v217 = v102;
        id v218 = v103;
        id v104 = objc_msgSend(v103, sel_labelColor);
        uint64_t v213 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
        *(void *)(v100 + 64) = v213;
        *(void *)(v100 + 40) = v104;
        sub_1BFF991DC(v100);
        id v105 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
        uint64_t v106 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        uint64_t v108 = v107;
        uint64_t v109 = sub_1C0F63B44((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
        v110 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v220 = objc_msgSend(v105, sel_initWithString_attributes_, v106, v110);

        unint64_t v111 = sub_1C136C974();
        unint64_t v112 = v111;
        uint64_t v211 = v109;
        uint64_t v212 = v108;
        if (v111 >> 62)
        {
          uint64_t v113 = sub_1C15204BC();
          if (v113) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v113 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v113)
          {
LABEL_55:
            id v114 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
            v115 = (void *)sub_1C151E5EC();
            id v116 = objc_msgSend(v114, sel_initWithString_, v115, v211, v212);

            objc_msgSend(v220, sel_insertAttributedString_atIndex_, v116, 0);
            sub_1BFC39268(0, (unint64_t *)&unk_1EB87A260);
            uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
            if (v113 < 1)
            {
              __break(1u);
              JUMPOUT(0x1C0F5EF5CLL);
            }
            v118 = (void *)ObjCClassFromMetadata;
            uint64_t v119 = 0;
            do
            {
              if ((v112 & 0xC000000000000001) != 0) {
                id v120 = (id)MEMORY[0x1C18C7CB0](v119, v112);
              }
              else {
                id v120 = *(id *)(v112 + 8 * v119 + 32);
              }
              v121 = v120;
              ++v119;
              id v122 = objc_msgSend(v118, sel_attributedStringWithAttachment_, v120);
              id v123 = objc_msgSend(v218, sel_systemGrayColor);
              objc_msgSend(v122, sel_addAttribute_value_range_, v217, v123, 0, 1);

              objc_msgSend(v220, sel_insertAttributedString_atIndex_, v122, 0);
            }
            while (v113 != v119);
          }
        }
        swift_bridgeObjectRelease();
        id v25 = v225;
        id v176 = objc_msgSend(v225, sel_textLabel);
        if (v176)
        {
          v177 = v176;
          objc_msgSend(v176, sel_setAttributedText_, v220);
        }
        *(void *)&v234[0] = 0;
        *((void *)&v234[0] + 1) = 0xE000000000000000;
        sub_1C15200FC();
        uint64_t v179 = v237;
        uint64_t v178 = v238;
        __swift_project_boxed_opaque_existential_1(v236, v237);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v178 + 8) + 8) + 24))(v179);
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        if (qword_1EA194C88 != -1) {
          swift_once();
        }
        v180 = (void *)qword_1EA2B5690;
        v181 = (void *)sub_1C1517D2C();
        id v182 = objc_msgSend(v180, sel_stringForObjectValue_, v181);

        if (v182)
        {
          sub_1C151E62C();
        }
        else
        {
          sub_1C151EF4C();
        }
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v184 = v237;
        uint64_t v183 = v238;
        __swift_project_boxed_opaque_existential_1(v236, v237);
        (*(void (**)(uint64_t))(*(void *)(v183 + 8) + 64))(v184);
        v185 = (void *)qword_1EA2B5690;
        v186 = (void *)sub_1C1517D2C();
        id v187 = objc_msgSend(v185, sel_stringForObjectValue_, v186);

        if (v187)
        {
          sub_1C151E62C();
        }
        else
        {
          sub_1C151EF4C();
        }
        id v188 = v218;
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v189 = swift_allocObject();
        *(_OWORD *)(v189 + 16) = v215;
        v190 = v217;
        *(void *)(v189 + 32) = v217;
        v191 = v190;
        id v192 = objc_msgSend(v188, sel_secondaryLabelColor);
        *(void *)(v189 + 64) = v213;
        *(void *)(v189 + 40) = v192;
        sub_1BFF991DC(v189);
        id v193 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
        v194 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        v195 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        v217 = (char *)objc_msgSend(v193, sel_initWithString_attributes_, v194, v195);

        sub_1BFEE7CC4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0);
        uint64_t v196 = swift_allocObject();
        *(_OWORD *)(v196 + 16) = v215;
        uint64_t v197 = v248;
        uint64_t v198 = MEMORY[0x1E4FBB460];
        *(void *)(v196 + 56) = MEMORY[0x1E4FBB3D0];
        *(void *)(v196 + 64) = v198;
        *(void *)(v196 + 32) = v197;
        sub_1C151E66C();
        uint64_t v199 = swift_allocObject();
        *(_OWORD *)(v199 + 16) = v215;
        *(void *)(v199 + 32) = v191;
        v200 = v191;
        id v201 = objc_msgSend(v216, sel_tintColor);
        *(void *)(v199 + 64) = v213;
        if (!v201) {
          id v201 = objc_msgSend(v218, sel_systemBlueColor);
        }
        *(void *)(v199 + 40) = v201;
        sub_1BFF991DC(v199);
        id v202 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        v203 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        v204 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v205 = objc_msgSend(v202, sel_initWithString_attributes_, v203, v204);

        objc_msgSend(v217, sel_appendAttributedString_, v205);
        id v206 = objc_msgSend(v25, sel_detailTextLabel);
        if (v206)
        {
          v207 = v206;
          objc_msgSend(v206, sel_setAttributedText_, v217);
        }
        objc_msgSend(v25, sel_setSelectionStyle_, 3, v211, v212);
        objc_msgSend(v25, sel_setAccessoryType_, 1);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1C0392E3C((uint64_t)&v239);
        (*(void (**)(void *, uint64_t))(v219 + 8))(v255, v226);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v236);
        return v25;
      }
      if (v235 - 4 >= 3)
      {
        sub_1BFC773DC(v234, (uint64_t)v231);
        id v130 = objc_msgSend(v225, sel_textLabel);
        if (v130)
        {
          v131 = v130;
          uint64_t v133 = v232;
          uint64_t v132 = v233;
          __swift_project_boxed_opaque_existential_1(v231, v232);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v132 + 8) + 8) + 16))(v133);
          v134 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v131, sel_setText_, v134);
        }
        id v135 = objc_msgSend(v225, sel_textLabel);
        if (v135)
        {
          v136 = v135;
          id v137 = objc_msgSend(self, sel_systemGray2Color);
          objc_msgSend(v136, sel_setTextColor_, v137);
        }
        id v138 = objc_msgSend(v225, sel_detailTextLabel);
        if (v138)
        {
          v139 = v138;
          uint64_t v229 = 0;
          unint64_t v230 = 0xE000000000000000;
          FeedJournalGroupResult.kind.getter(&v228);
          sub_1C035E6B0();
          sub_1C151E80C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151E80C();
          sub_1BFEE7CC4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0);
          uint64_t v140 = swift_allocObject();
          *(_OWORD *)(v140 + 16) = xmmword_1C1529AE0;
          uint64_t v141 = v248;
          uint64_t v142 = MEMORY[0x1E4FBB460];
          *(void *)(v140 + 56) = MEMORY[0x1E4FBB3D0];
          *(void *)(v140 + 64) = v142;
          *(void *)(v140 + 32) = v141;
          sub_1C151E66C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          v143 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v139, sel_setText_, v143);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v173 = objc_msgSend(v25, sel_detailTextLabel);
        if (v173)
        {
          v174 = v173;
          id v175 = objc_msgSend(self, sel_systemGray2Color);
          objc_msgSend(v174, sel_setTextColor_, v175);
        }
        objc_msgSend(v25, sel_setSelectionStyle_, 3);
        objc_msgSend(v25, sel_setAccessoryType_, 1);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1C0392E3C((uint64_t)&v239);
        (*(void (**)(void *, uint64_t))(v219 + 8))(v255, v226);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v231);
      }
      else
      {
        id v85 = objc_msgSend(v225, sel_textLabel);
        if (v85)
        {
          id v86 = v85;
          (*((void (**)(void))&v248 + 1))();
          uint64_t v87 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v86, sel_setText_, v87);
        }
        id v88 = objc_msgSend(v225, sel_textLabel);
        if (v88)
        {
          uint64_t v89 = v88;
          id v90 = objc_msgSend(self, sel_systemGray2Color);
          objc_msgSend(v89, sel_setTextColor_, v90);
        }
        id v91 = objc_msgSend(v225, sel_detailTextLabel);
        if (v91)
        {
          uint64_t v92 = v91;
          *(void *)&v234[0] = 0;
          *((void *)&v234[0] + 1) = 0xE000000000000000;
          FeedJournalGroupResult.kind.getter((char *)v231);
          sub_1C035E6B0();
          sub_1C151E80C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151E80C();
          sub_1BFEE7CC4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0);
          uint64_t v93 = swift_allocObject();
          *(_OWORD *)(v93 + 16) = xmmword_1C1529AE0;
          uint64_t v94 = v248;
          uint64_t v95 = MEMORY[0x1E4FBB460];
          *(void *)(v93 + 56) = MEMORY[0x1E4FBB3D0];
          *(void *)(v93 + 64) = v95;
          *(void *)(v93 + 32) = v94;
          sub_1C151E66C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v96 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v92, sel_setText_, v96);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v127 = objc_msgSend(v25, sel_detailTextLabel);
        if (v127)
        {
          v128 = v127;
          id v129 = objc_msgSend(self, sel_systemGray2Color);
          objc_msgSend(v128, sel_setTextColor_, v129);
        }
        objc_msgSend(v25, sel_setSelectionStyle_, 3);
        objc_msgSend(v25, sel_setAccessoryType_, 1);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1C0392E3C((uint64_t)&v239);
LABEL_91:
        (*(void (**)(void *, uint64_t))(v219 + 8))(v255, v226);
      }
      return v25;
  }
}

uint64_t sub_1C0F5EFB4@<X0>(void *a1@<X8>)
{
  sub_1BFCA4558();
  sub_1C151E80C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 547520738;
  a1[1] = 0xA400000000000000;
  return result;
}

uint64_t sub_1C0F5F020(uint64_t a1, void *a2, uint64_t (*a3)(void, void, void), uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = a3(0, *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x50), *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x58));
  uint64_t v6 = a4(v5);
  id v8 = v7;
  type metadata accessor for FeedCursorTrackerSnapshot();
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  LOBYTE(v6) = FeedCursorTrackerSnapshot.contains(identifier:)(v9);
  swift_bridgeObjectRelease();
  return v6 & 1;
}

id sub_1C0F5F114(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C151677C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151672C();
  id v9 = a3;
  id v10 = a1;
  id v11 = sub_1C0F5C714(v9);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

char *sub_1C0F5F228()
{
  id v1 = v0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v0;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 88);
  type metadata accessor for DebugJournalSection();
  sub_1C151ED8C();
  long long v46 = v41;
  long long v47 = v42;
  unint64_t v48 = v43;
  long long v44 = v39;
  long long v45 = v40;
  swift_endAccess();
  type metadata accessor for DebugJournalHeaderView();
  uint64_t v6 = (char *)sub_1C151F23C();
  id v7 = objc_msgSend(v6, sel_textLabel);
  if (v7)
  {
    id v8 = v7;
    id v9 = (void *)sub_1C151E5EC();
    objc_msgSend(v8, sel_setText_, v9);
  }
  uint64_t v10 = sub_1C151F07C();
  id v12 = (void *)((char *)v1 + *(void *)((*v2 & *v1) + 0x88));
  if (v10 == *v12 && v11 == v12[1])
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_12;
    }
  }
  id v15 = objc_msgSend(v6, sel_textLabel);
  if (v15)
  {
    id v16 = v15;
    sub_1C151E80C();
    uint64_t v17 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setText_, v17, 545626338, 0xA400000000000000);
  }
LABEL_12:
  uint64_t v18 = *(void *)((char *)v1 + *(void *)((*v2 & *v1) + 0xB8));
  unint64_t v19 = v48;
  uint64_t v20 = sub_1C0CEA3E8(v48);
  uint64_t v22 = v21;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v18 + 16);
  if (*(void *)(v23 + 16) && (unint64_t v24 = sub_1BFEF2D8C(v20, v22), (v25 & 1) != 0))
  {
    int v26 = *(unsigned __int8 *)(*(void *)(v23 + 56) + v24);
    swift_endAccess();
    swift_bridgeObjectRelease();
    id v27 = *(void **)&v6[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel];
    if (v26 != 1)
    {
      char v28 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    id v27 = *(void **)&v6[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel];
  }
  char v28 = 1;
LABEL_18:
  id v29 = v27;
  id v30 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setText_, v30);

  uint64_t v31 = OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel;
  id v32 = (void *)sub_1C151A49C();
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v34 = swift_allocObject();
  long long v35 = v44;
  *(_OWORD *)(v34 + 56) = v45;
  long long v36 = v47;
  *(_OWORD *)(v34 + 72) = v46;
  *(_OWORD *)(v34 + 88) = v36;
  *(void *)(v34 + 16) = v4;
  *(void *)(v34 + 24) = v5;
  *(void *)(v34 + 32) = v33;
  *(void *)(v34 + 104) = v48;
  *(_OWORD *)(v34 + 40) = v35;
  *(unsigned char *)(v34 + 112) = v28;
  sub_1C0F63988((uint64_t)&v44);

  swift_release();
  id v37 = *(id *)&v6[v31];
  if (((1 << (v19 >> 61)) & 0xDE) != 0) {
    objc_msgSend(v37, sel_setHidden_, 1);
  }
  else {
    objc_msgSend(v37, sel_setHidden_, 0);
  }
  sub_1C0F639F0((uint64_t)&v44);

  return v6;
}

void sub_1C0F5F680(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = (void *)MEMORY[0x1C18C9C60](v5);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)((char *)v6 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v6) + 0xB8));
    swift_retain();

    uint64_t v9 = sub_1C0CEA3E8(*(void *)(a2 + 64));
    uint64_t v11 = v10;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *(void *)(v8 + 16);
    *(void *)(v8 + 16) = 0x8000000000000000;
    sub_1C1069744((a3 & 1) == 0, v9, v11, isUniquelyReferenced_nonNull_native);
    *(void *)(v8 + 16) = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1C18C9C60](v5);
  if (v13)
  {
    char v14 = (void *)v13;
    sub_1C0F5C1B4();
  }
}

char *sub_1C0F5F7E0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = sub_1C0F5F228();

  return v6;
}

double sub_1C0F5F848()
{
  return 40.0;
}

uint64_t sub_1C0F5F854(void *a1)
{
  uint64_t v2 = v1;
  sub_1C151676C();
  swift_beginAccess();
  type metadata accessor for DebugJournalSection();
  sub_1C151ED8C();
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C151675C();
  uint64_t v3 = type metadata accessor for DebugJournalItem();
  sub_1C151ED8C();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(long long *, unsigned char *, uint64_t))(v4 + 16))(&v27, v45, v3);
  switch(v44)
  {
    case 1:
    case 2:
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v45, v3);
      return swift_bridgeObjectRelease();
    case 3:
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v45, v3);
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    case 4:
    case 6:
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v45, v3);
      return swift_release();
    case 5:
      long long v18 = v27;
      uint64_t v19 = v28;
      uint64_t v20 = (void *)sub_1C151670C();
      objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v20, 1);

      sub_1C0F5FD28(v18, *((uint64_t *)&v18 + 1), v19);
      swift_release();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v45, v3);
    case 7:
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v45, v3);
    default:
      v25[12] = v39;
      v25[13] = v40;
      v25[14] = v41;
      uint64_t v6 = v43;
      uint64_t v26 = v42;
      v25[8] = v35;
      v25[9] = v36;
      v25[10] = v37;
      v25[11] = v38;
      v25[4] = v31;
      void v25[5] = v32;
      v25[6] = v33;
      v25[7] = v34;
      v25[0] = v27;
      v25[1] = v28;
      void v25[2] = v29;
      v25[3] = v30;
      id v7 = (void *)sub_1C151670C();
      objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v7, 1);

      uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
      uint64_t v9 = *(void **)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x90));
      uint64_t v10 = *(void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x98));
      sub_1BFC66384((uint64_t)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xA0), (uint64_t)v24);
      sub_1BFC66384((uint64_t)v2 + *(void *)((*v8 & *v2) + 0xA8), (uint64_t)v23);
      uint64_t v11 = (void *)((char *)v2 + *(void *)((*v8 & *v2) + 0xB0));
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      sub_1BFE60390((uint64_t)v25, (uint64_t)v22);
      objc_allocWithZone((Class)type metadata accessor for DebugJournalGroupViewController());
      id v14 = v9;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v15 = sub_1C03E76B0(v14, v10, v24, (uint64_t)v23, v13, v12, (uint64_t)v22, v6);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      id v16 = objc_msgSend(v2, sel_navigationController);
      if (v16)
      {
        id v17 = v16;
        objc_msgSend(v16, sel_showViewController_sender_, v15, v2);

        id v15 = v17;
      }

      sub_1C0392E3C((uint64_t)v25);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v45, v3);
  }
}

uint64_t sub_1C0F5FD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  sub_1C0F637D4(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v24 - v10;
  uint64_t v12 = (uint64_t *)&v4[*(void *)(v8 + 120)];
  swift_beginAccess();
  v24[2] = *v12;
  uint64_t v13 = type metadata accessor for DebugJournalSection();
  uint64_t v14 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0F63838, a1, v14, v13, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
  swift_bridgeObjectRelease();
  *uint64_t v12 = v17;
  swift_bridgeObjectRelease();
  sub_1C0F5C1B4();
  uint64_t v18 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  sub_1C151EE6C();
  swift_retain();
  uint64_t v19 = v4;
  uint64_t v20 = sub_1C151EE5C();
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = MEMORY[0x1E4FBCFD8];
  void v21[2] = v20;
  v21[3] = v22;
  v21[4] = a1;
  v21[5] = v19;
  v21[6] = a2;
  v21[7] = a3;
  sub_1C0C833AC((uint64_t)v11, (uint64_t)&unk_1EA1A94E8, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_1C0F5FFAC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1C0F6049C(a1, a2, a3, a4, (void (*)(id, char *))sub_1C0F5F854);
}

uint64_t sub_1C0F5FFC4(void *a1)
{
  id v19 = a1;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = sub_1C151677C();
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x1F4188790](v3);
  id v15 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151676C();
  id v5 = (void *)((char *)v1 + *(void *)((*v2 & *v1) + 0x70));
  swift_beginAccess();
  uint64_t v18 = type metadata accessor for DebugJournalSection();
  sub_1C151ED8C();
  uint64_t v6 = (void *)v24[3];
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C151675C();
  uint64_t v7 = type metadata accessor for DebugJournalItem();
  sub_1C151ED8C();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v23, v26, v7);
  switch(v25)
  {
    case 1:
    case 2:
    case 5:
      uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
      v9(v26, v7);
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v9)(v23, v7);
      break;
    case 3:
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v26, v7);
      swift_bridgeObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      break;
    case 4:
    case 6:
      uint64_t v11 = (void *)sub_1C151670C();
      id v12 = v19;
      objc_msgSend(v19, sel_deselectRowAtIndexPath_animated_, v11, 1);

      uint64_t v20 = *v5;
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_1C151F10C();
      swift_bridgeObjectRelease();
      if (v22 != 1)
      {
        uint64_t v13 = v15;
        MEMORY[0x1C18BE280](0, v21);
        uint64_t v14 = (void *)sub_1C151670C();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v17);
        objc_msgSend(v12, sel_scrollToRowAtIndexPath_atScrollPosition_animated_, v14, 1, 1);

        swift_release();
        goto LABEL_8;
      }
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v26, v7);
      uint64_t result = swift_release();
      break;
    case 7:
LABEL_8:
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v26, v7);
      break;
    default:
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v26, v7);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C0392E3C((uint64_t)v23);
      break;
  }
  return result;
}

uint64_t sub_1C0F60484(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1C0F6049C(a1, a2, a3, a4, (void (*)(id, char *))sub_1C0F5FFC4);
}

uint64_t sub_1C0F6049C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8 = sub_1C151677C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151672C();
  id v12 = a3;
  id v13 = a1;
  a5(v12, v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1C0F605A8()
{
  id v1 = objc_msgSend(v0, sel_presentingViewController);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_1C0F60618(void *a1)
{
  id v1 = a1;
  sub_1C0F605A8();
}

void sub_1C0F60660()
{
  id v1 = v0;
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v3 = sub_1C151677C();
  uint64_t v13 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)((char *)v1 + *(void *)(v2 + 112));
  swift_beginAccess();
  uint64_t v19 = *v6;
  uint64_t v14 = v1;
  type metadata accessor for DebugJournalSection();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151F10C();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    uint64_t v7 = v15;
    swift_beginAccess();
    uint64_t v12 = v7;
    sub_1C151ED8C();
    uint64_t v8 = v17;
    uint64_t v9 = v18;
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v19 = v8;
    type metadata accessor for DebugJournalItem();
    sub_1C151ED5C();
    swift_getWitnessTable();
    LOBYTE(v7) = sub_1C151F15C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      uint64_t v10 = *(void **)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x80));
      MEMORY[0x1C18BE280](0, v12);
      uint64_t v11 = (void *)sub_1C151670C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
      objc_msgSend(v10, sel_scrollToRowAtIndexPath_atScrollPosition_animated_, v11, 1, objc_msgSend(self, sel_areAnimationsEnabled));
    }
  }
}

uint64_t sub_1C0F6097C(void *a1, void *a2)
{
  uint64_t v2 = (void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x88));
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C() & 1;
  }
}

void sub_1C0F609FC(void *a1)
{
  id v1 = a1;
  sub_1C0F60660();
}

void sub_1C0F60A44(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C0F630F0();
}

uint64_t sub_1C0F60AA4(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0xB8));
  uint64_t v4 = sub_1C0CEA3E8(v2);
  uint64_t v6 = v5;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1BFEF2D8C(v4, v6), (v9 & 1) != 0)) {
    unsigned int v10 = *(unsigned __int8 *)(*(void *)(v7 + 56) + v8);
  }
  else {
    unsigned int v10 = 1;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  if ((v2 >> 61) > 5 || ((1 << (v2 >> 61)) & 0x31) == 0) {
    return v10;
  }
  else {
    return 1;
  }
}

void sub_1C0F60BBC(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 64);
  if (v5 >> 61 == 4 && (v5 & 0x1FFFFFFFFFFFFFFFLL) == a2)
  {
    id v14 = v4;
    sub_1C14747B0(v14, v17);

    __n128 v15 = v17[3];
    a3[2] = v17[2];
    a3[3] = v15;
    a3[4].n128_u64[0] = v18;
    __n128 v16 = v17[1];
    *a3 = v17[0];
    a3[1] = v16;
  }
  else
  {
    unsigned __int8 v7 = *(unsigned char *)(a1 + 56);
    unint64_t v8 = *(void *)(a1 + 48);
    unint64_t v10 = *(void *)(a1 + 24);
    unint64_t v9 = *(void *)(a1 + 32);
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v12 = *(void *)(a1 + 16);
    a3->n128_u64[0] = *(void *)a1;
    a3->n128_u64[1] = v11;
    a3[1].n128_u64[0] = v12;
    a3[1].n128_u64[1] = v10;
    a3[2].n128_u64[0] = v9;
    a3[2].n128_u64[1] = (unint64_t)v4;
    a3[3].n128_u64[0] = v8;
    a3[3].n128_u8[8] = v7;
    a3[4].n128_u64[0] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v4;
    swift_retain();
  }
}

uint64_t sub_1C0F60CD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[11] = *a4;
  sub_1C151EE6C();
  v7[12] = sub_1C151EE5C();
  uint64_t v9 = sub_1C151EDBC();
  v7[13] = v9;
  v7[14] = v8;
  return MEMORY[0x1F4188298](sub_1C0F60D94, v9, v8);
}

uint64_t sub_1C0F60D94()
{
  sub_1C1518CEC();
  uint64_t v1 = v0[4];
  v0[15] = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  uint64_t v3 = type metadata accessor for FeedCursor();
  uint64_t v4 = sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  v0[17] = v4;
  void *v2 = v0;
  v2[1] = sub_1C0F60E94;
  uint64_t v5 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v0 + 5, v1, v3, v4, v5);
}

uint64_t sub_1C0F60E94()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v5 = sub_1C0F61078;
  }
  else {
    uint64_t v5 = sub_1C0F60FEC;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C0F60FEC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = (unint64_t *)v0[10];
  swift_release();
  sub_1C0F611E4(v0[5], v1, v2);
  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C0F61078()
{
  uint64_t v1 = (void *)v0[18];
  swift_release();
  sub_1C151F36C();
  sub_1BFEE7CC4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0);
  uint64_t v2 = swift_allocObject();
  v0[2] = 0;
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  v0[3] = 0xE000000000000000;
  v0[6] = v1;
  sub_1C152036C();
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1BFE9C558();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
  uint64_t v5 = (void *)sub_1C151FD3C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_1C0F611E4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3;
  id v77 = a3;
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v6 = (void *)(*MEMORY[0x1E4FBC8C8] & *v3);
  uint64_t v7 = v6[10];
  uint64_t v8 = v6[11];
  uint64_t v9 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (uint64_t *)((char *)v63 - v11);
  id v13 = (void *)((char *)v4 + v6[15]);
  swift_beginAccess();
  v86[0].n128_u64[0] = *v13;
  uint64_t v78 = v7;
  uint64_t v79 = v8;
  uint64_t v70 = v8;
  uint64_t v71 = v7;
  id v14 = (id)type metadata accessor for DebugJournalSection();
  uint64_t v15 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  v63[1] = v15;
  uint64_t v16 = sub_1C152023C();
  long long v64 = v13;
  *id v13 = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)((*v5 & *v4) + 0x68);
  long long v65 = v4;
  unint64_t v18 = (*(uint64_t (**)(void *, char *, uint64_t))(v10 + 16))(v12, (char *)v4 + v17, v9);
  if (qword_1EA1949A8 != -1) {
    goto LABEL_46;
  }
  while (1)
  {
    uint64_t v19 = qword_1EA1A9440;
    if ((unint64_t)qword_1EA1A9440 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C15204BC();
      unint64_t v18 = swift_bridgeObjectRelease();
      uint64_t v21 = v67;
      if (!v20)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        id v22 = (id)MEMORY[0x1C18C7CB0](v18, v19);
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((qword_1EA1A9440 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v21 = v67;
      if (!v20) {
        goto LABEL_48;
      }
    }
    if (v21 == 0x8000000000000000 && v20 == -1) {
      goto LABEL_53;
    }
    unint64_t v18 = v21 % v20;
    if ((v19 & 0xC000000000000001) != 0) {
      goto LABEL_49;
    }
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1C15204BC();
      unint64_t v51 = swift_bridgeObjectRelease();
      if (v52) {
        goto LABEL_32;
      }
      goto LABEL_55;
    }
    if (v18 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_51;
    }
    id v22 = *(id *)(v19 + 8 * v18 + 32);
LABEL_10:
    uint64_t v23 = v22;
    v63[0] = sub_1C0F5B430(v66, (uint64_t)v12, (uint64_t)v77, v22);
    unint64_t v25 = v24;

    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    v81.n128_u64[0] = v25;
    uint64_t v19 = (uint64_t)v64;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1C151ED0C();
    swift_endAccess();
    if (!MEMORY[0x1C18C6870](v25, v14)) {
      break;
    }
    uint64_t v10 = 0;
    id v77 = (unint64_t *)(*(void *)((char *)v65 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v65) + 0xB8)) + 16);
    uint64_t v26 = (uint64_t *)(v25 + 56);
    unint64_t v68 = v25;
    id v69 = v14;
    while (1)
    {
      char v28 = sub_1C151ECDC();
      sub_1C151EC7C();
      if ((v28 & 1) == 0) {
        break;
      }
      if (__OFADD__(v10, 1)) {
        goto LABEL_43;
      }
      uint64_t v73 = v10;
      uint64_t v76 = v10 + 1;
      uint64_t v29 = *(v26 - 2);
      uint64_t v30 = *v26;
      uint64_t v31 = v26[1];
      uint64_t v10 = v26[2];
      unint64_t v32 = v26[5];
      unint64_t v12 = (void *)sub_1C0CEA3E8(v32);
      uint64_t v34 = v33;
      long long v35 = v77;
      swift_beginAccess();
      uint64_t v72 = v32 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v75 = v29;
      swift_bridgeObjectRetain();
      uint64_t v74 = v30;
      uint64_t v9 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = (id)v10;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v81.n128_u64[0] = *v35;
      unint64_t v37 = v81.n128_u64[0];
      *long long v35 = 0x8000000000000000;
      unint64_t v39 = sub_1BFEF2D8C((uint64_t)v12, v34);
      uint64_t v40 = *(void *)(v37 + 16);
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        goto LABEL_44;
      }
      uint64_t v10 = v38;
      if (*(void *)(v37 + 24) >= v42)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          long long v45 = (void *)v81.n128_u64[0];
          if (v38) {
            goto LABEL_12;
          }
        }
        else
        {
          sub_1C1073728();
          long long v45 = (void *)v81.n128_u64[0];
          if (v10) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        sub_1C10627FC(v42, isUniquelyReferenced_nonNull_native);
        unint64_t v43 = sub_1BFEF2D8C((uint64_t)v12, v34);
        if ((v10 & 1) != (v44 & 1)) {
          goto LABEL_62;
        }
        unint64_t v39 = v43;
        long long v45 = (void *)v81.n128_u64[0];
        if (v10)
        {
LABEL_12:
          *(unsigned char *)(v45[7] + v39) = 1;
          goto LABEL_13;
        }
      }
      v45[(v39 >> 6) + 8] |= 1 << v39;
      long long v46 = (void *)(v45[6] + 16 * v39);
      *long long v46 = v12;
      v46[1] = v34;
      *(unsigned char *)(v45[7] + v39) = 1;
      uint64_t v47 = v45[2];
      BOOL v48 = __OFADD__(v47, 1);
      uint64_t v49 = v47 + 1;
      if (v48) {
        goto LABEL_45;
      }
      v45[2] = v49;
      swift_bridgeObjectRetain();
LABEL_13:
      uint64_t v19 = *v77;
      *id v77 = (unint64_t)v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = v69;
      uint64_t v27 = MEMORY[0x1C18C6870](v68, v69);
      uint64_t v10 = v73 + 1;
      v26 += 9;
      if (v76 == v27) {
        goto LABEL_27;
      }
    }
    sub_1C152016C();
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    unint64_t v18 = swift_once();
  }
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v20 = v67 + 1;
  unint64_t v12 = v65;
  if (__OFADD__(v67, 1)) {
    goto LABEL_52;
  }
  uint64_t v50 = (void *)(v66 + *(void *)(*(void *)v66 + 272));
  swift_beginAccess();
  if (!*v50) {
    goto LABEL_39;
  }
  unint64_t v51 = sub_1C1252B58();
  if (!v51) {
    goto LABEL_39;
  }
  uint64_t v19 = qword_1EA1A9440;
  if ((unint64_t)qword_1EA1A9440 >> 62) {
    goto LABEL_54;
  }
  uint64_t v52 = *(void *)((qword_1EA1A9440 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v52)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
LABEL_32:
  if (v20 == 0x8000000000000000 && v52 == -1) {
    goto LABEL_59;
  }
  unint64_t v51 = v20 % v52;
  if ((v19 & 0xC000000000000001) == 0)
  {
    if ((v51 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v51 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v53 = *(id *)(v19 + 8 * v51 + 32);
      goto LABEL_38;
    }
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_56:
  id v53 = (id)MEMORY[0x1C18C7CB0](v51, v19);
LABEL_38:
  id v54 = v53;
  uint64_t v55 = swift_retain();
  sub_1C147445C(v55, v54, v20, v63[0], v86);
  swift_release();

  __n128 v83 = v86[2];
  __n128 v84 = v86[3];
  uint64_t v85 = v87;
  __n128 v81 = v86[0];
  __n128 v82 = v86[1];
  swift_beginAccess();
  sub_1C0F63988((uint64_t)v86);
  sub_1C151ED1C();
  swift_endAccess();
  swift_release();
  sub_1C0F639F0((uint64_t)v86);
LABEL_39:
  sub_1C0F5C1B4();
  long long v56 = *(void **)((char *)v12 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v12) + 0xC0));
  uint64_t v80 = v20;
  v81.n128_u64[0] = sub_1C152088C();
  v81.n128_u64[1] = v57;
  sub_1C151E80C();
  id v58 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_setText_, v58);

  id v59 = objc_msgSend(v12, sel_view);
  if (!v59) {
    goto LABEL_60;
  }
  uint64_t v60 = v59;
  objc_msgSend(v59, sel_setNeedsLayout);

  id v61 = objc_msgSend(v12, sel_view);
  if (v61)
  {
    uint64_t v62 = v61;
    objc_msgSend(v61, sel_layoutIfNeeded);

    return;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  sub_1C1520CFC();
  __break(1u);
}

void sub_1C0F61AB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  sub_1C0F636F0();
}

void sub_1C0F61B24(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  swift_release();
  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x68);
  uint64_t v4 = type metadata accessor for FeedCursorTrackerSnapshot();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(void *)((*v2 & *a1) + 0xA0));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(void *)((*v2 & *a1) + 0xA8));
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = *(void **)((char *)a1 + *(void *)((*v2 & *a1) + 0xC0));
}

uint64_t type metadata accessor for DebugJournalViewController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0F61DB4()
{
  sub_1C0F63D40(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C159C060;
  uint64_t v1 = self;
  *(void *)(v0 + 32) = objc_msgSend(v1, sel_systemPinkColor);
  *(void *)(v0 + 40) = objc_msgSend(v1, sel_systemBlueColor);
  *(void *)(v0 + 48) = objc_msgSend(v1, sel_systemGreenColor);
  *(void *)(v0 + 56) = objc_msgSend(v1, sel_systemTealColor);
  *(void *)(v0 + 64) = objc_msgSend(v1, sel_systemYellowColor);
  *(void *)(v0 + 72) = objc_msgSend(v1, sel_systemRedColor);
  *(void *)(v0 + 80) = objc_msgSend(v1, sel_systemOrangeColor);
  *(void *)(v0 + 88) = objc_msgSend(v1, sel_systemPurpleColor);
  *(void *)(v0 + 96) = objc_msgSend(v1, sel_systemIndigoColor);
  uint64_t result = sub_1C151EBEC();
  qword_1EA1A9440 = v0;
  return result;
}

__n128 sub_1C0F61F44@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void (*a8)(_OWORD *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t)@<X7>, uint64_t a9@<X8>)
{
  uint64_t v15 = *a2;
  unint64_t v16 = a2[1];
  uint64_t v17 = a2[2];
  uint64_t v18 = sub_1C0F62038(*a2, v16, a3, a4);
  uint64_t v20 = v19 & 1;
  v24[0] = v15;
  v24[1] = v16;
  v24[2] = v17;
  swift_bridgeObjectRetain();
  sub_1BFE60260(v16);
  id v21 = a6;
  swift_retain();
  a8(v25, v24, v18, v20, a1, a5, v21, a7);
  long long v22 = v25[3];
  *(_OWORD *)(a9 + 32) = v25[2];
  *(_OWORD *)(a9 + 48) = v22;
  *(void *)(a9 + 64) = v26;
  __n128 result = (__n128)v25[1];
  *(_OWORD *)a9 = v25[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

uint64_t sub_1C0F62038(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    JUMPOUT(0x1C0F62114);
  }
  sub_1BFE60390(a1 + 32, (uint64_t)v11);
  sub_1BFD7EBD0((uint64_t)&v12, (uint64_t)v10);
  sub_1BFE60270((uint64_t)v11);
  switch(v10[64])
  {
    case 3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      return 0;
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      return 0;
    default:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      uint64_t v6 = *a3;
      uint64_t result = *a3 + a4;
      if (__OFADD__(*a3, a4)) {
        goto LABEL_11;
      }
      BOOL v8 = __OFADD__(v6, 1);
      uint64_t v9 = v6 + 1;
      if (v8) {
        goto LABEL_12;
      }
      *a3 = v9;
      return result;
  }
}

uint64_t sub_1C0F62130(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v16 = *MEMORY[0x1E4FBC8C8] & *v10;
  uint64_t v17 = *(void *)(v16 + 0x80);
  id v18 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  char v19 = v10;
  *(void *)((char *)v10 + v17) = objc_msgSend(v18, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = *(void *)((*v15 & *v19) + 0xB8);
  type metadata accessor for DebugJournalSectionStateManager();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v92 = v20;
  *(void *)((char *)v19 + v20) = v21;
  uint64_t v84 = *(void *)((*v15 & *v19) + 0xC0);
  *(void *)((char *)v19 + v84) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)((char *)v19 + *(void *)((*v15 & *v19) + 0x90)) = a1;
  uint64_t v22 = a2;
  *(void *)((char *)v19 + *(void *)((*v15 & *v19) + 0x98)) = a2;
  uint64_t v87 = a3;
  sub_1BFC66384(a3, (uint64_t)v19 + *(void *)((*v15 & *v19) + 0xA0));
  uint64_t v86 = a4;
  sub_1BFC66384(a4, (uint64_t)v19 + *(void *)((*v15 & *v19) + 0xA8));
  uint64_t v23 = (void *)((char *)v19 + *(void *)((*v15 & *v19) + 0xB0));
  *uint64_t v23 = a5;
  v23[1] = a6;
  *(void *)((char *)v19 + *(void *)((*v15 & *v19) + 0x60)) = a7;
  unint64_t v24 = (char *)v19 + *(void *)((*v15 & *v19) + 0x68);
  uint64_t v25 = *(void *)(v16 + 88);
  uint64_t v26 = type metadata accessor for FeedCursorTrackerSnapshot();
  uint64_t v27 = a8;
  (*(void (**)(char *))(*(void *)(v26 - 8) + 16))(v24);
  uint64_t v93 = v19;
  char v28 = (void *)((char *)v19 + *(void *)((*v15 & *v19) + 0x88));
  *char v28 = a9;
  v28[1] = a10;
  uint64_t v29 = a7 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t isUniquelyReferenced_nonNull_native = type metadata accessor for DebugJournalSection();
  swift_retain_n();
  id v83 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v100 = sub_1C151E30C();
  if (a7 < 0)
  {
    unint64_t v32 = 0;
    uint64_t v25 = 0;
LABEL_35:
    uint64_t v52 = qword_1EA1949A8;
    swift_retain_n();
    if (v52 == -1)
    {
LABEL_36:
      uint64_t v53 = v25;
      uint64_t v47 = qword_1EA1A9440;
      if ((unint64_t)qword_1EA1A9440 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v54) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v54 = *(void *)((qword_1EA1A9440 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v54)
        {
LABEL_38:
          if (v53 == 0x8000000000000000 && v54 == -1) {
            goto LABEL_78;
          }
          unint64_t v55 = v53 % v54;
          if ((v47 & 0xC000000000000001) == 0)
          {
            if ((v55 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_76:
              __break(1u);
              goto LABEL_77;
            }
            if (v55 >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_77:
              __break(1u);
LABEL_78:
              sub_1BFE14324(a7);
              __break(1u);
LABEL_79:
              swift_bridgeObjectRetain();
              uint64_t v25 = sub_1C15204BC();
              unint64_t v46 = swift_bridgeObjectRelease();
              if (v25) {
                goto LABEL_27;
              }
              goto LABEL_80;
            }
            id v56 = *(id *)(v47 + 8 * v55 + 32);
LABEL_44:
            unint64_t v57 = v56;
            sub_1C0F5B684(v29, v27, v32, v56);
            unint64_t v59 = v58;

            v101[0].n128_u64[0] = v59;
            sub_1C151ED5C();
            swift_getWitnessTable();
            uint64_t v47 = (uint64_t)&v100;
            sub_1C151ED0C();
            sub_1BFE14324(a7);
            swift_release_n();
            uint64_t v25 = v53 + 1;
            if (!__OFADD__(v53, 1))
            {
              uint64_t v82 = 0xF000000000000007;
              goto LABEL_46;
            }
            goto LABEL_76;
          }
LABEL_74:
          id v56 = (id)MEMORY[0x1C18C7CB0](v55, v47);
          goto LABEL_44;
        }
      }
      unint64_t v55 = sub_1BFE14324(a7);
      __break(1u);
      goto LABEL_74;
    }
LABEL_71:
    swift_once();
    goto LABEL_36;
  }
  uint64_t v31 = 0;
  unint64_t v32 = 0;
  uint64_t v22 = 0xF000000000000007;
  while (1)
  {
    uint64_t v33 = qword_1EA1949A8;
    swift_retain_n();
    if (v33 != -1) {
      swift_once();
    }
    uint64_t v29 = qword_1EA1A9440;
    if ((unint64_t)qword_1EA1A9440 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v34) {
        goto LABEL_65;
      }
    }
    else
    {
      uint64_t v34 = *(void *)((qword_1EA1A9440 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v34) {
        goto LABEL_65;
      }
    }
    unint64_t v35 = v31 % v34;
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v36 = (id)MEMORY[0x1C18C7CB0](v35, v29);
    }
    else
    {
      if ((v35 & 0x8000000000000000) != 0) {
        goto LABEL_66;
      }
      if (v35 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_68;
      }
      id v36 = *(id *)(v29 + 8 * v35 + 32);
    }
    unint64_t v37 = v36;
    uint64_t v25 = sub_1C0F5B430(a7, a8, v32, v36);
    unint64_t v39 = v38;

    v101[0].n128_u64[0] = v39;
    uint64_t v29 = sub_1C151ED5C();
    swift_getWitnessTable();
    sub_1C151ED0C();
    sub_1BFE14324(a7);
    BOOL v40 = __OFADD__(v32, v25);
    v32 += v25;
    if (v40) {
      goto LABEL_67;
    }
    BOOL v41 = (uint64_t *)(a7 + *(void *)(*(void *)a7 + 272));
    swift_beginAccess();
    uint64_t v42 = *v41;
    if (v42) {
      unint64_t v43 = FeedNextCursor.syncCursor.getter();
    }
    else {
      unint64_t v43 = 0;
    }
    unint64_t v44 = FeedCursorContainer.init(optionalCursor:)(v43);
    uint64_t v25 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if ((~v44 & 0xF000000000000007) == 0) {
      break;
    }
    unint64_t v45 = v44;
    swift_release_n();
    ++v31;
    a7 = v45;
    if ((v45 & 0x8000000000000000) != 0)
    {
      uint64_t v51 = v45;
      uint64_t v29 = v45 & 0x7FFFFFFFFFFFFFFFLL;
      a7 = v51;
      goto LABEL_35;
    }
  }
  uint64_t v82 = v44;
  if (!v42 || (unint64_t v46 = sub_1C1252B58()) == 0)
  {
LABEL_34:
    swift_release_n();
LABEL_46:
    uint64_t v81 = v25;
    uint64_t v60 = v100;
    id v61 = (void *)MEMORY[0x1E4FBC8C8];
    *(void *)((char *)v93 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v93) + 0x78)) = v100;
    *(void *)((char *)v93 + *(void *)((*v61 & *v93) + 0x70)) = v60;
    swift_bridgeObjectRetain_n();
    if (!MEMORY[0x1C18C6870](v60, isUniquelyReferenced_nonNull_native))
    {
LABEL_62:
      swift_bridgeObjectRelease();
      uint64_t v76 = *(void **)((char *)v93 + v84);
      uint64_t v99 = v81;
      id v77 = v76;
      sub_1C152088C();
      sub_1C151E80C();
      uint64_t v78 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v77, sel_setText_, v78);

      v98.receiver = v93;
      v98.super_class = ObjectType;
      id v79 = objc_msgSendSuper2(&v98, sel_initWithNibName_bundle_, 0, 0);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      sub_1BFE14324(v82);
      __swift_destroy_boxed_opaque_existential_1(v86);
      __swift_destroy_boxed_opaque_existential_1(v87);
      return (uint64_t)v79;
    }
    uint64_t v29 = 0;
    uint64_t v25 = v60 + 56;
    uint64_t v90 = v60;
    uint64_t v91 = isUniquelyReferenced_nonNull_native;
    while (1)
    {
      sub_1C151EC7C();
      if (__OFADD__(v29, 1))
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        sub_1BFE14324(a7);
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      uint64_t v97 = v29 + 1;
      uint64_t v62 = *(void **)(v25 + 16);
      uint64_t v63 = *(void *)((char *)v93 + v92);
      a7 = sub_1C0CEA3E8(*(void *)(v25 + 40));
      uint64_t v27 = v64;
      swift_beginAccess();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = v62;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v99 = *(void *)(v63 + 16);
      uint64_t v65 = v99;
      *(void *)(v63 + 16) = 0x8000000000000000;
      unint64_t v32 = sub_1BFEF2D8C(a7, v27);
      uint64_t v67 = *(void *)(v65 + 16);
      BOOL v68 = (v66 & 1) == 0;
      uint64_t v69 = v67 + v68;
      if (__OFADD__(v67, v68)) {
        goto LABEL_64;
      }
      char v70 = v66;
      if (*(void *)(v65 + 24) >= v69)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t isUniquelyReferenced_nonNull_native = v99;
          if (v66) {
            goto LABEL_48;
          }
        }
        else
        {
          sub_1C1073728();
          uint64_t isUniquelyReferenced_nonNull_native = v99;
          if (v70) {
            goto LABEL_48;
          }
        }
      }
      else
      {
        sub_1C10627FC(v69, isUniquelyReferenced_nonNull_native);
        unint64_t v71 = sub_1BFEF2D8C(a7, v27);
        if ((v70 & 1) != (v72 & 1)) {
          goto LABEL_85;
        }
        unint64_t v32 = v71;
        uint64_t isUniquelyReferenced_nonNull_native = v99;
        if (v70)
        {
LABEL_48:
          *(unsigned char *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + v32) = 1;
          goto LABEL_49;
        }
      }
      *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v73 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v32);
      *uint64_t v73 = a7;
      v73[1] = v27;
      *(unsigned char *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + v32) = 1;
      uint64_t v74 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
      BOOL v40 = __OFADD__(v74, 1);
      uint64_t v75 = v74 + 1;
      if (v40) {
        goto LABEL_70;
      }
      *(void *)(isUniquelyReferenced_nonNull_native + 16) = v75;
      swift_bridgeObjectRetain();
LABEL_49:
      *(void *)(v63 + 16) = isUniquelyReferenced_nonNull_native;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t isUniquelyReferenced_nonNull_native = v91;
      v25 += 72;
      ++v29;
      if (v97 == MEMORY[0x1C18C6870](v90, v91)) {
        goto LABEL_62;
      }
    }
  }
  uint64_t v22 = v31 + 1;
  uint64_t v47 = qword_1EA1A9440;
  if ((unint64_t)qword_1EA1A9440 >> 62) {
    goto LABEL_79;
  }
  uint64_t v25 = *(void *)((qword_1EA1A9440 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v25)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    id v48 = (id)MEMORY[0x1C18C7CB0](v46, v47);
LABEL_33:
    uint64_t v49 = v48;
    uint64_t v50 = swift_retain();
    sub_1C147445C(v50, v49, v25, v32, v101);
    swift_release();

    sub_1C0F63988((uint64_t)v101);
    sub_1C151ED1C();
    swift_release();
    sub_1C0F639F0((uint64_t)v101);
    goto LABEL_34;
  }
LABEL_27:
  if (v22 == 0x8000000000000000 && v25 == -1) {
    goto LABEL_84;
  }
  unint64_t v46 = v22 % v25;
  uint64_t v25 = v22;
  if ((v47 & 0xC000000000000001) != 0) {
    goto LABEL_81;
  }
  if ((v46 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v46 < *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v48 = *(id *)(v47 + 8 * v46 + 32);
    goto LABEL_33;
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0F62D1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v18 = objc_allocWithZone(v10);
  return sub_1C0F62130(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1C0F62DB8()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80);
  *(void *)((char *)v0 + v2) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = *(void *)((*v1 & *v0) + 0xB8);
  type metadata accessor for DebugJournalSectionStateManager();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = MEMORY[0x1E4FBC868];
  *(void *)((char *)v0 + v3) = v4;
  uint64_t v5 = *(void *)((*v1 & *v0) + 0xC0);
  *(void *)((char *)v0 + v5) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0F62EFC()
{
  swift_beginAccess();
  uint64_t v0 = type metadata accessor for DebugJournalSection();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = MEMORY[0x1C18C6830](v1, v0);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C0F62FC0()
{
  swift_beginAccess();
  type metadata accessor for DebugJournalSection();
  sub_1C151ED8C();
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v0 = type metadata accessor for DebugJournalItem();
  uint64_t v1 = MEMORY[0x1C18C6830](v3, v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C0F630F0()
{
  sub_1C0F63720(0, (unint64_t *)&unk_1EA1A52F0, MEMORY[0x1E4FAB398]);
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v27 - v2;
  uint64_t v4 = sub_1C151707C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F637D4(0, (unint64_t *)&unk_1EA1A5340, MEMORY[0x1E4FAB3E8], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = *(void *)(sub_1C151717C() - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  uint64_t v36 = v9;
  uint64_t v37 = 0x206E6F6973726556;
  unint64_t v38 = 0xE800000000000000;
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  v27[0] = v38;
  v27[1] = v37;
  sub_1BFEE7CC4(0, (unint64_t *)&qword_1EA19C8C0, (unint64_t *)&qword_1EA1A5350);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C152C7F0;
  sub_1C0F63720(0, (unint64_t *)&unk_1EA1A53E0, MEMORY[0x1E4FAB3C0]);
  uint64_t v12 = v11;
  if (qword_1EB85E7A0 != -1) {
    swift_once();
  }
  id v13 = *(void (**)(void))(v5 + 104);
  unsigned int v35 = *MEMORY[0x1E4FAB2F0];
  uint64_t v34 = (void (*)(char *, void, uint64_t))v13;
  v13(v7);
  uint64_t v14 = *MEMORY[0x1E4FAB390];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  uint64_t v31 = v1 + 104;
  uint64_t v32 = v4;
  uint64_t v16 = v28;
  uint64_t v33 = v15;
  v15(v3, v14, v28);
  swift_retain();
  uint64_t v17 = v3;
  uint64_t v18 = sub_1C151713C();
  *(void *)(v10 + 56) = v12;
  unint64_t v19 = sub_1C0C7BA1C();
  *(void *)(v10 + 64) = v19;
  *(void *)(v10 + 32) = v18;
  if (qword_1EB85E7A8 != -1) {
    swift_once();
  }
  v34(v7, v35, v32);
  v33(v17, v14, v16);
  swift_retain();
  uint64_t v20 = sub_1C151713C();
  *(void *)(v10 + 96) = v12;
  *(void *)(v10 + 104) = v19;
  *(void *)(v10 + 72) = v20;
  if (qword_1EA1944D0 != -1) {
    swift_once();
  }
  v34(v7, v35, v32);
  v33(v17, v14, v16);
  swift_retain();
  uint64_t v21 = sub_1C151713C();
  *(void *)(v10 + 136) = v12;
  *(void *)(v10 + 144) = v19;
  *(void *)(v10 + 112) = v21;
  sub_1C151716C();
  uint64_t v22 = sub_1C151B38C();
  swift_allocObject();
  uint64_t v23 = sub_1C151B37C();
  uint64_t v39 = v22;
  uint64_t v40 = MEMORY[0x1E4FAC6C0];
  uint64_t v37 = v23;
  id v24 = objc_allocWithZone((Class)sub_1C151B81C());
  uint64_t v25 = (void *)sub_1C151B80C();
  id v26 = objc_msgSend(objc_allocWithZone((Class)sub_1C151C02C()), sel_initWithRootViewController_, v25);

  objc_msgSend(v30, sel_presentViewController_animated_completion_, v26, 1, 0);
}

void sub_1C0F636F0()
{
}

void sub_1C0F63720(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0F6377C(void *a1)
{
  return sub_1C0F6097C(a1, *(void **)(v1 + 16)) & 1;
}

BOOL sub_1C0F6379C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 64);
  BOOL v4 = v2 >> 61 == 6;
  uint64_t v3 = v2 & 0x1FFFFFFFFFFFFFFFLL;
  return v4 && v3 == v1;
}

BOOL sub_1C0F637B8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 64);
  BOOL v4 = v2 >> 61 == 1;
  uint64_t v3 = v2 & 0x1FFFFFFFFFFFFFFFLL;
  return v4 && v3 == v1;
}

void sub_1C0F637D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0F63838(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  sub_1C0F60BBC(a1, v2, a2);
}

uint64_t sub_1C0F63858()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0F638A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1BFC542F4;
  return sub_1C0F60CD0(a1, v4, v5, v6, v7, v9, v8);
}

BOOL sub_1C0F63974(uint64_t a1)
{
  return *(void *)(a1 + 64) != 0xE000000000000000;
}

uint64_t sub_1C0F63988(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1C0F639F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

double sub_1C0F63A58@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0F63E30(a1, a2, (void (*)(_OWORD *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t))sub_1C1474D38, a3);
}

double sub_1C0F63A70@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_1C0F63E58(a1, a2).n128_u64[0];
  return result;
}

void sub_1C0F63A88()
{
  if (!qword_1EA1A94F8)
  {
    sub_1C0F63D40(255, &qword_1EB86B020, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E4FBB320]);
    sub_1BFD98A0C(&qword_1EA1A9508, &qword_1EB86B020, (uint64_t)&type metadata for FeedJournalEntry);
    unint64_t v0 = sub_1C152048C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A94F8);
    }
  }
}

uint64_t sub_1C0F63B44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F63B8C(uint64_t a1)
{
  return sub_1C0F60AA4(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1C0F63BAC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0F63BE4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1C0F63C48()
{
  sub_1C0F5F680(*(void *)(v0 + 32), v0 + 40, *(unsigned char *)(v0 + 112));
}

uint64_t sub_1C0F63C5C(uint64_t a1)
{
  return sub_1C0F5F020(a1, *(void **)(v1 + 16), (uint64_t (*)(void, void, void))type metadata accessor for FeedDeferredCursorGroup, (uint64_t (*)(uint64_t))sub_1C135E0D4) & 1;
}

uint64_t sub_1C0F63CA4(uint64_t a1)
{
  return sub_1C0F5F020(a1, *(void **)(v1 + 16), (uint64_t (*)(void, void, void))type metadata accessor for FeedCursorGroup, (uint64_t (*)(uint64_t))FeedCursorGroup.identifier.getter) & 1;
}

BOOL sub_1C0F63CEC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  return v1 >= FeedCursor.nextSlotIndex.getter();
}

uint64_t sub_1C0F63D20@<X0>(void *a1@<X8>)
{
  return sub_1C0F5EFB4(a1);
}

void sub_1C0F63D40(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0F63D8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F63DC4()
{
  return sub_1C0F5BFD4(v0[4], v0[2], v0[3]);
}

void sub_1C0F63DD0(uint64_t a1)
{
  sub_1C0F5C334(a1, v1[4], v1[2], v1[3], 0);
}

void sub_1C0F63DF4(uint64_t a1)
{
  sub_1C0F5C334(a1, v1[4], v1[2], v1[3], 1);
}

double sub_1C0F63E18@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0F63E30(a1, a2, (void (*)(_OWORD *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t))sub_1C1474EB8, a3);
}

double sub_1C0F63E30@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void (*a3)(_OWORD *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  *(void *)&double result = sub_1C0F61F44(a1, a2, (void *)v4[2], v4[3], v4[4], (void *)v4[5], v4[6], a3, a4).n128_u64[0];
  return result;
}

__n128 sub_1C0F63E58@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr, void, void *))(v2 + 32))(v6, *a1, a1 + 1);
  long long v4 = v6[3];
  *(_OWORD *)(a2 + 32) = v6[2];
  *(_OWORD *)(a2 + 48) = v4;
  *(void *)(a2 + 64) = v7;
  __n128 result = (__n128)v6[1];
  *(_OWORD *)a2 = v6[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1C0F63EC8@<X0>(void *a1@<X8>)
{
  return sub_1C0F63D20(a1);
}

uint64_t FormatKeyPlayerDataVisualization.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatKeyPlayerDataVisualization.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatKeyPlayerDataVisualization.eventIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatKeyPlayerDataVisualization.tagIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatKeyPlayerDataVisualization.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatKeyPlayerDataVisualization.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatKeyPlayerDataVisualization.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatKeyPlayerDataVisualization.properties.modify())()
{
  return j__swift_endAccess;
}

void *FormatKeyPlayerDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

void *FormatKeyPlayerDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  _OWORD v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1C0F64204()
{
  uint64_t result = 0x656449746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E656449676174;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0F642B4(uint64_t a1)
{
  unint64_t v2 = sub_1C0F646AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F642F0(uint64_t a1)
{
  unint64_t v2 = sub_1C0F646AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatKeyPlayerDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatKeyPlayerDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatKeyPlayerDataVisualization.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0F64D5C(0, &qword_1EA1A9518, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F646AC();
  sub_1C1520F0C();
  char v16 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v16 = 1;
    sub_1C15207CC();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 48);
    if (*(void *)(v11 + 16))
    {
      char v17 = 2;
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      uint64_t v15 = v12;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1C0F64CE8();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v13 = *(void *)(v3 + 56);
    if (*(void *)(v13 + 16))
    {
      char v17 = 3;
      uint64_t v15 = (void *)v13;
      sub_1C0F64CE8();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0F646AC()
{
  unint64_t result = qword_1EA1A9520;
  if (!qword_1EA1A9520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9520);
  }
  return result;
}

uint64_t FormatKeyPlayerDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatKeyPlayerDataVisualization.init(from:)(a1);
  return v2;
}

void *FormatKeyPlayerDataVisualization.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  BOOL v41 = v2;
  uint64_t v42 = v5;
  sub_1C00FC8DC();
  uint64_t v40 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F64D5C(0, &qword_1EA1A9530, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v39 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F646AC();
  char v16 = v41;
  sub_1C1520EBC();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v17 = v11;
    BOOL v41 = a1;
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    char v48 = 0;
    uint64_t v20 = v15;
    v3[2] = sub_1C152069C();
    v3[3] = v21;
    char v47 = 1;
    v3[4] = sub_1C152069C();
    v3[5] = v23;
    char v46 = 2;
    char v24 = sub_1C152071C();
    if (v24)
    {
      char v43 = 2;
      sub_1C0F64DC0(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
      uint64_t v25 = v9;
      sub_1C15206EC();
      uint64_t v26 = v19;
      uint64_t v35 = v25;
      uint64_t v15 = v20;
      uint64_t v27 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v35);
    }
    else
    {
      uint64_t v27 = MEMORY[0x1E4FBC870];
      uint64_t v26 = v19;
    }
    v3[6] = v27;
    char v45 = 3;
    uint64_t v28 = v15;
    if (sub_1C152071C())
    {
      char v44 = 3;
      sub_1C0F64DC0(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
      unint64_t v29 = v38;
      sub_1C15206EC();
      id v30 = v28;
      uint64_t v31 = sub_1C1517E5C();
      uint64_t v32 = v26;
      uint64_t v33 = v31;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v32);
      uint64_t v34 = v18;
      a1 = v41;
    }
    else
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      uint64_t v34 = v18;
      a1 = v41;
      id v30 = v15;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v13);
    v3[7] = v33;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void *sub_1C0F64C60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatKeyPlayerDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0F64CB8(void *a1)
{
  return FormatKeyPlayerDataVisualization.encode(to:)(a1);
}

uint64_t sub_1C0F64CDC(void **a1, void **a2)
{
  return static FormatKeyPlayerDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1C0F64CE8()
{
  unint64_t result = qword_1EA1A9528;
  if (!qword_1EA1A9528)
  {
    sub_1C0F64D5C(255, &qword_1EA1A9518, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9528);
  }
  return result;
}

void sub_1C0F64D5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0F646AC();
    unint64_t v7 = a3(a1, &type metadata for FormatKeyPlayerDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F64DC0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F64E08(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0F64DC0(&qword_1EA19CD08, a2, (void (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization);
  a1[2] = sub_1C0F64DC0(&qword_1EA19CD38, v3, (void (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization);
  uint64_t result = sub_1C0F64DC0(&qword_1EA1A9538, v4, (void (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatKeyPlayerDataVisualization()
{
  return self;
}

uint64_t sub_1C0F64ED8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F64F28@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatKeyPlayerDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatKeyPlayerDataVisualization);
}

uint64_t dispatch thunk of FormatKeyPlayerDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatKeyPlayerDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for FormatKeyPlayerDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F65098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatKeyPlayerDataVisualization.CodingKeys()
{
  return &type metadata for FormatKeyPlayerDataVisualization.CodingKeys;
}

unint64_t sub_1C0F650D4()
{
  unint64_t result = qword_1EA1A9540;
  if (!qword_1EA1A9540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9540);
  }
  return result;
}

unint64_t sub_1C0F6512C()
{
  unint64_t result = qword_1EA1A9548;
  if (!qword_1EA1A9548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9548);
  }
  return result;
}

unint64_t sub_1C0F65184()
{
  unint64_t result = qword_1EA1A9550;
  if (!qword_1EA1A9550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9550);
  }
  return result;
}

unint64_t FormatContentSizeCategoryValue.rawValue.getter()
{
  unint64_t result = 0x616D536172747865;
  switch(*v0)
  {
    case 1:
      unint64_t result = 29560;
      break;
    case 2:
      unint64_t result = 0x6C6C616D73;
      break;
    case 3:
      unint64_t result = 115;
      break;
    case 4:
      unint64_t result = 0x6D756964656DLL;
      break;
    case 5:
      unint64_t result = 109;
      break;
    case 6:
      unint64_t result = 0x656772616CLL;
      break;
    case 7:
      unint64_t result = 108;
      break;
    case 8:
      unint64_t result = 0x72614C6172747865;
      break;
    case 9:
      unint64_t result = 27768;
      break;
    case 0xA:
      unint64_t result = 0x7478456172747865;
      break;
    case 0xB:
      unint64_t result = 7108728;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xD:
      unint64_t result = 1819834488;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xF:
      unint64_t result = 7174241;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x11:
      unint64_t result = 7108705;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x13:
      unint64_t result = 1819834465;
      break;
    case 0x14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0x15:
      unint64_t result = 0x6C78787861;
      break;
    case 0x16:
      unint64_t result = 0xD000000000000021;
      break;
    case 0x17:
      unint64_t result = 0x6C7878787861;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatContentSizeCategoryValue_optional __swiftcall FormatContentSizeCategoryValue.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 6;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      char v5 = 1;
      goto LABEL_7;
    case 2:
      char v5 = 2;
      goto LABEL_7;
    case 3:
      char v5 = 3;
      goto LABEL_7;
    case 4:
      char v5 = 4;
      goto LABEL_7;
    case 5:
      char v5 = 5;
LABEL_7:
      char v6 = v5;
      break;
    case 6:
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    default:
      char v6 = 24;
      break;
  }
  char *v2 = v6;
  return result;
}

unint64_t sub_1C0F655FC()
{
  unint64_t result = qword_1EB892978;
  if (!qword_1EB892978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB892978);
  }
  return result;
}

uint64_t sub_1C0F65650()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F656B8()
{
  FormatContentSizeCategoryValue.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F6571C()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatContentSizeCategoryValue_optional sub_1C0F65780(Swift::String *a1)
{
  return FormatContentSizeCategoryValue.init(rawValue:)(*a1);
}

unint64_t sub_1C0F6578C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatContentSizeCategoryValue.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0F657B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147B754(*a1, *a2);
}

unint64_t sub_1C0F657C0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0F657F0();
  unint64_t result = sub_1C0F65844();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F657F0()
{
  unint64_t result = qword_1EA1A9558;
  if (!qword_1EA1A9558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9558);
  }
  return result;
}

unint64_t sub_1C0F65844()
{
  unint64_t result = qword_1EB884B88;
  if (!qword_1EB884B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884B88);
  }
  return result;
}

unint64_t sub_1C0F65898(uint64_t a1)
{
  unint64_t result = sub_1C08E57F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F658C0(void *a1)
{
  a1[1] = sub_1C0F658F8();
  a1[2] = sub_1C0F6594C();
  unint64_t result = sub_1C0F655FC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F658F8()
{
  unint64_t result = qword_1EB882B08;
  if (!qword_1EB882B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB882B08);
  }
  return result;
}

unint64_t sub_1C0F6594C()
{
  unint64_t result = qword_1EB884B80;
  if (!qword_1EB884B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884B80);
  }
  return result;
}

uint64_t sub_1C0F659A0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0F65A00(void *a1)
{
  return FormatContentSizeCategoryValue.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatContentSizeCategoryValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *unint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F65AE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategoryValue()
{
  return &type metadata for FormatContentSizeCategoryValue;
}

uint64_t sub_1C0F65B1C(char *a1)
{
  return **((void **)&unk_1E6417F98 + *a1);
}

uint64_t FeedPuzzle.init(puzzle:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = xmmword_1C158A1D0;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = a1;
  *(void *)(a2 + 64) = 0;
  *(unsigned char *)(a2 + 72) = 3;
  sub_1C0F66784((uint64_t)v15, a2 + 88, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1C0F66784((uint64_t)v13, a2 + 128, &qword_1EB891A10, (unint64_t *)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  sub_1C0F66784((uint64_t)v11, a2 + 168, &qword_1EB893CD0, &qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
  *(void *)(a2 + 80) = MEMORY[0x1E4FBC870];
  uint64_t v8 = (void *)swift_unknownObjectRetain();
  sub_1C0F66808(v8, &v10);
  swift_unknownObjectRelease();
  sub_1C0A08864((uint64_t)v11, &qword_1EB893CD0, &qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
  sub_1C0A08864((uint64_t)v13, &qword_1EB891A10, (unint64_t *)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  uint64_t result = sub_1C0A08864((uint64_t)v15, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  *(void *)a2 = v10;
  return result;
}

uint64_t FeedPuzzle.userHasAccess.getter()
{
  char v1 = 0;
  switch(*(unsigned char *)(v0 + 72))
  {
    case 2:
      swift_bridgeObjectRelease();
      char v1 = 0;
      break;
    case 3:
      return v1 & 1;
    default:
      char v2 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      char v1 = v2 ^ 1;
      break;
  }
  return v1 & 1;
}

uint64_t FeedPuzzle.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedPuzzle.debugTitle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_title);
  if (!v1) {
    return 0;
  }
  char v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

uint64_t FeedPuzzle.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedPuzzle.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPuzzle.additionalFormatFeedItems.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_puzzleType);
  id v2 = objc_msgSend(v1, sel_identifier);
  uint64_t v3 = sub_1C151E62C();
  uint64_t v5 = v4;

  sub_1BFE4D23C(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  *(void *)(v6 + 56) = &type metadata for FeedPuzzleType;
  *(void *)(v6 + 64) = sub_1C06423C4();
  uint64_t v7 = swift_allocObject();
  *(void *)(v6 + 32) = v7;
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  *(unsigned char *)(v7 + 32) = 1;
  *(_OWORD *)(v7 + 40) = xmmword_1C1538940;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v5;
  *(void *)(v7 + 72) = v1;
  uint64_t v16 = v6;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 56) = &type metadata for FeedTag;
  *(void *)(inited + 64) = sub_1BFEA44FC();
  uint64_t v9 = swift_allocObject();
  *(void *)(inited + 32) = v9;
  sub_1BFF7FF04(0, 0xDuLL);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BFF7FF04(0, 0xDuLL);
  swift_bridgeObjectRetain();
  id v10 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  *(_OWORD *)(v9 + 96) = xmmword_1C152C800;
  *(_OWORD *)(v9 + 112) = 0u;
  *(_OWORD *)(v9 + 128) = 0u;
  *(_OWORD *)(v9 + 144) = 0u;
  *(unsigned char *)(v9 + 160) = 0;
  *(void *)(v9 + 16) = v11;
  *(void *)(v9 + 24) = v13;
  *(void *)(v9 + 32) = v1;
  *(unsigned char *)(v9 + 40) = 0;
  *(void *)(v9 + 64) = 0;
  *(void *)(v9 + 72) = 0xE000000000000000;
  *(void *)(v9 + 48) = 0;
  *(unsigned char *)(v9 + 56) = 0;
  uint64_t v14 = MEMORY[0x1E4FBC870];
  *(void *)(v9 + 80) = 0;
  *(void *)(v9 + 88) = v14;
  sub_1BFEEFC20(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEACADC(inited);
  sub_1BFEEFC20(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t PuzzleAccessLevel.rawValue.getter()
{
  uint64_t v1 = 0x6563634165657266;
  if (*v0 != 1) {
    uint64_t v1 = 0x7373656363416F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6563634164696170;
  }
}

NewsFeed::PuzzleAccessLevel_optional __swiftcall PuzzleAccessLevel.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C0F66164(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148C7FC(*a1, *a2);
}

uint64_t sub_1C0F66170()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F66214()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F662A4()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleAccessLevel_optional sub_1C0F66344(Swift::String *a1)
{
  return PuzzleAccessLevel.init(rawValue:)(*a1);
}

void sub_1C0F66350(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007373;
  int v3 = *v1;
  uint64_t v4 = 0x6563634165657266;
  unint64_t v5 = 0xE800000000000000;
  if (v3 == 1) {
    unint64_t v5 = 0xEA00000000007373;
  }
  else {
    uint64_t v4 = 0x7373656363416F6ELL;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x6563634164696170;
  }
  if (!v6) {
    unint64_t v2 = v5;
  }
  *a1 = v7;
  a1[1] = v2;
}

uint64_t sub_1C0F663B0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0F66410()
{
  return sub_1C151EAEC();
}

void FeedPuzzle.traits.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

void FeedPuzzle.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedPuzzle.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t FeedPuzzle.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPuzzle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedPuzzle.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedPuzzle.puzzle.getter()
{
  return swift_unknownObjectRetain();
}

void *FeedPuzzle.puzzleHistoryItem.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void FeedPuzzle.accessState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

uint64_t FeedPuzzle.additionalContextMenuOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedPuzzle.puzzleImageShareAttributeProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0F66784(v1 + 88, a1, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
}

uint64_t FeedPuzzle.puzzleRankProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0F66784(v1 + 128, a1, &qword_1EB891A10, (unint64_t *)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
}

uint64_t FeedPuzzle.puzzleDifficultyDescriptionProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0F66784(v1 + 168, a1, &qword_1EB893CD0, &qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
}

uint64_t FeedPuzzle.init(identifier:puzzle:puzzleHistoryItem:accessState:puzzleImageShareAttributeProvider:puzzleRankProvider:puzzleDifficultyDescriptionProvider:additionalContextMenuOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v15 = *a5;
  *(void *)(a9 + 8) = 0;
  *(unsigned char *)(a9 + 16) = 1;
  *(_OWORD *)(a9 + 24) = xmmword_1C158A1D0;
  *(void *)(a9 + 40) = a1;
  *(void *)(a9 + 48) = a2;
  *(void *)(a9 + 56) = a3;
  *(void *)(a9 + 64) = a4;
  *(unsigned char *)(a9 + 72) = v15;
  sub_1C0F66784(a6, a9 + 88, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1C0F66784(a7, a9 + 128, &qword_1EB891A10, (unint64_t *)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  sub_1C0F66784(a8, a9 + 168, &qword_1EB893CD0, &qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
  *(void *)(a9 + 80) = a10;
  id v16 = a4;
  char v17 = (void *)swift_unknownObjectRetain();
  sub_1C0F66808(v17, &v19);
  swift_unknownObjectRelease();

  sub_1C0A08864(a8, &qword_1EB893CD0, &qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
  sub_1C0A08864(a7, &qword_1EB891A10, (unint64_t *)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  uint64_t result = sub_1C0A08864(a6, &qword_1EB881460, (unint64_t *)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  *(void *)a9 = v19;
  return result;
}

uint64_t sub_1C0F66784(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1BFE4D23C(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1C0F66808(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = qword_1F1B65348;
  swift_getObjectType();
  id v5 = objc_msgSend(a1, sel_puzzleType);
  swift_getObjectType();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v22);
  swift_unknownObjectRelease();
  uint64_t v6 = v22;
  if ((v22 & ~v4) == 0) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = v6 | v4;
  if ((FCPuzzleProviding.puzzleTypeTraits.getter() & 4) != 0)
  {
    id v8 = objc_msgSend(a1, sel_teaserClue);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C151E62C();
      unint64_t v12 = v11;

      swift_bridgeObjectRelease();
      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
      }
      BOOL v14 = v13 == 0;
      uint64_t v15 = (v7 >> 41) & 1;
      if (v14) {
        LODWORD(v15) = 1;
      }
      if (!v15) {
        v7 |= 0x20000000000uLL;
      }
    }
  }
  id v16 = objc_msgSend(a1, sel_thumbnailSmallImageAssetHandle);

  uint64_t v17 = (v7 >> 2) & 1;
  if (!v16) {
    LODWORD(v17) = 1;
  }
  if (v17) {
    unint64_t v18 = v7;
  }
  else {
    unint64_t v18 = v7 | 4;
  }
  id v19 = objc_msgSend(a1, sel_thumbnailLargeImageAssetHandle);

  uint64_t v20 = (v18 >> 42) & 1;
  if (!v19) {
    LODWORD(v20) = 1;
  }
  if (v20) {
    uint64_t v21 = v18;
  }
  else {
    uint64_t v21 = v18 | 0x40000000000;
  }
  *a2 = v21;
}

uint64_t sub_1C0F6697C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_title);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

uint64_t FeedPuzzle.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C01F09C0(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F66A34@<X0>(uint64_t a1@<X8>)
{
  sub_1C01F09C0(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeedPuzzle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t FeedPuzzle.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F66B04(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0F67A5C();
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t FeedPuzzle.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  uint64_t v13 = (char *)&v23 - v12;
  BOOL v14 = *(void **)(v1 + 56);
  id v15 = objc_msgSend(v14, sel_identifier, v11);
  if (!v15)
  {
    sub_1C151E62C();
    id v15 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v16 = objc_msgSend(self, sel_nss_NewsURLForPuzzleID_, v15);

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  sub_1C1515F1C();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v5, v9, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_8:
    sub_1C002F608((uint64_t)v5);
    uint64_t v20 = sub_1C151CA3C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
  }
  v17(v13, v5, v6);
  sub_1C1515E9C();
  id v18 = objc_msgSend(v14, sel_title);
  if (v18)
  {
    id v19 = v18;
    sub_1C151E62C();
  }
  sub_1C151CA2C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  uint64_t v22 = sub_1C151CA3C();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a1, 0, 1, v22);
}

uint64_t FeedPuzzle.isInTeaserMode.getter()
{
  return (*(unsigned __int8 *)(v0 + 5) >> 1) & 1;
}

void *sub_1C0F66E90()
{
  id v16 = (void *)MEMORY[0x1E4FBC860];
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_puzzleType);
  swift_getObjectType();
  uint64_t v2 = FCPuzzleTypeProviding.contentSelectors.getter();
  swift_unknownObjectRelease();
  sub_1BFEF95B8(v2);
  if (*(unsigned __int8 *)(v0 + 72) - 2 >= 2)
  {
    if (*(unsigned char *)(v0 + 72))
    {
      uint64_t v3 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1BFEF9B68(0, v16[2] + 1, 1, v16);
      }
      unint64_t v13 = v3[2];
      unint64_t v12 = v3[3];
      if (v13 >= v12 >> 1) {
        uint64_t v3 = sub_1BFEF9B68((void *)(v12 > 1), v13 + 1, 1, v3);
      }
      v3[2] = v13 + 1;
      BOOL v14 = &v3[2 * v13];
      void v14[4] = 0xD000000000000019;
      uint64_t v7 = v14 + 4;
      uint64_t v8 = "puzzle-access-free-access";
    }
    else
    {
      uint64_t v3 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1BFEF9B68(0, v16[2] + 1, 1, v16);
      }
      unint64_t v10 = v3[2];
      unint64_t v9 = v3[3];
      if (v10 >= v9 >> 1) {
        uint64_t v3 = sub_1BFEF9B68((void *)(v9 > 1), v10 + 1, 1, v3);
      }
      v3[2] = v10 + 1;
      double v11 = &v3[2 * v10];
      v11[4] = 0xD000000000000019;
      uint64_t v7 = v11 + 4;
      uint64_t v8 = "puzzle-access-paid-access";
    }
  }
  else
  {
    uint64_t v3 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1BFEF9B68(0, v16[2] + 1, 1, v16);
    }
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_1BFEF9B68((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    v3[2] = v5 + 1;
    uint64_t v6 = &v3[2 * v5];
    _OWORD v6[4] = 0xD000000000000017;
    uint64_t v7 = v6 + 4;
    uint64_t v8 = "puzzle-access-no-access";
  }
  v7[1] = (unint64_t)(v8 - 32) | 0x8000000000000000;
  return v3;
}

uint64_t sub_1C0F670B0()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F67100()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

unint64_t sub_1C0F67170()
{
  unint64_t result = qword_1EA1A9560;
  if (!qword_1EA1A9560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9560);
  }
  return result;
}

unint64_t sub_1C0F671C8()
{
  unint64_t result = qword_1EA1A9570;
  if (!qword_1EA1A9570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9570);
  }
  return result;
}

unint64_t sub_1C0F6721C(uint64_t a1)
{
  unint64_t result = sub_1C028A21C();
  *(void *)(a1 + 16) = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for PuzzleAccessLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F6731CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessLevel()
{
  return &type metadata for PuzzleAccessLevel;
}

uint64_t destroy for FeedPuzzle(uint64_t a1)
{
  if (*(void *)(a1 + 32) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112)) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  if (*(void *)(a1 + 152)) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  }
  if (*(void *)(a1 + 192))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  }
  return result;
}

uint64_t initializeWithCopy for FeedPuzzle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  if (v6 >= 0x11)
  {
    *(void *)(a1 + 24) = *v5;
    *(void *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  }
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v10 = v8;
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v9;
    *(void *)(a1 + 120) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 88, a2 + 88, v9);
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
  }
  unint64_t v13 = (_OWORD *)(a1 + 128);
  BOOL v14 = (_OWORD *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 152);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = v15;
    *(void *)(a1 + 160) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 144);
    *unint64_t v13 = *v14;
    *(_OWORD *)(a1 + 144) = v17;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
  }
  id v18 = (_OWORD *)(a1 + 168);
  id v19 = (_OWORD *)(a2 + 168);
  uint64_t v20 = *(void *)(a2 + 192);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = v20;
    *(void *)(a1 + 200) = v21;
    (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v18, v19);
  }
  else
  {
    long long v22 = *(_OWORD *)(a2 + 184);
    *id v18 = *v19;
    *(_OWORD *)(a1 + 184) = v22;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
  }
  return a1;
}

uint64_t assignWithCopy for FeedPuzzle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (_OWORD *)(a1 + 24);
  unint64_t v6 = (_OWORD *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) < 0x11uLL)
  {
    if (v7 >= 0x11)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 < 0x11)
  {
    sub_1C01A7564(a1 + 24);
LABEL_6:
    *uint64_t v5 = *v6;
    goto LABEL_8;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v8 = *(void **)(a1 + 64);
  uint64_t v9 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v9;
  id v10 = v9;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v11)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  else if (v11)
  {
    *(void *)(a1 + 112) = v11;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 88, a2 + 88);
    goto LABEL_15;
  }
  long long v12 = *(_OWORD *)(a2 + 88);
  long long v13 = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 88) = v12;
  *(_OWORD *)(a1 + 104) = v13;
LABEL_15:
  uint64_t v14 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v14)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
      goto LABEL_22;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  }
  else if (v14)
  {
    *(void *)(a1 + 152) = v14;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 128, a2 + 128);
    goto LABEL_22;
  }
  long long v15 = *(_OWORD *)(a2 + 128);
  long long v16 = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v15;
  *(_OWORD *)(a1 + 144) = v16;
LABEL_22:
  uint64_t v17 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192))
  {
    if (v17)
    {
      *(void *)(a1 + 192) = v17;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 168, a2 + 168);
      return a1;
    }
LABEL_28:
    long long v18 = *(_OWORD *)(a2 + 168);
    long long v19 = *(_OWORD *)(a2 + 184);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(_OWORD *)(a1 + 168) = v18;
    *(_OWORD *)(a1 + 184) = v19;
    return a1;
  }
  if (!v17)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 168);
    goto LABEL_28;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 168), (uint64_t *)(a2 + 168));
  return a1;
}

uint64_t assignWithTake for FeedPuzzle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a1 + 24);
  unint64_t v6 = (_OWORD *)(a2 + 24);
  if (*(void *)(a1 + 32) < 0x11uLL) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 32);
  if (v7 < 0x11)
  {
    sub_1C01A7564((uint64_t)v5);
LABEL_4:
    *uint64_t v5 = *v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRelease();
  uint64_t v9 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  long long v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  if (*(void *)(a1 + 152)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  }
  long long v11 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v11;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  if (*(void *)(a1 + 192)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  }
  long long v12 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v12;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPuzzle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPuzzle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_1C0F67A5C()
{
  unint64_t result = qword_1EA1A9578;
  if (!qword_1EA1A9578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9578);
  }
  return result;
}

unint64_t sub_1C0F67AB0()
{
  unint64_t result = qword_1EA1A9580;
  if (!qword_1EA1A9580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9580);
  }
  return result;
}

uint64_t sub_1C0F67B08()
{
  if (qword_1EA194508 != -1) {
    swift_once();
  }
  sub_1C0F68374();
  sub_1C1516FBC();
  if (qword_1EA194510 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0x2F2F3A70747468;
}

uint64_t sub_1C0F67C9C()
{
  uint64_t v1 = sub_1C151526C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2EB08(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v34 - v6;
  uint64_t v8 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    sub_1BFF2EB08(0, (unint64_t *)&qword_1EA1A8C80, (uint64_t (*)(uint64_t))sub_1BFF97D54, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    id v15 = (id)v14;
    return sub_1C151906C();
  }
  uint64_t v36 = (char *)&v34 - v12;
  uint64_t v37 = v13;
  unint64_t v17 = *(void *)(v0 + 24);
  switch(v17 >> 62)
  {
    case 1uLL:
      uint64_t v35 = v8;
      char v24 = v4;
      uint64_t v25 = v2;
      uint64_t v26 = v1;
      uint64_t v27 = (int)v14;
      uint64_t v28 = v14 >> 32;
      goto LABEL_9;
    case 2uLL:
      uint64_t v35 = v8;
      char v24 = v4;
      uint64_t v25 = v2;
      uint64_t v26 = v1;
      uint64_t v27 = *(void *)(v14 + 16);
      uint64_t v28 = *(void *)(v14 + 24);
LABEL_9:
      sub_1BFE95820(v14, v17);
      BOOL v29 = v27 == v28;
      uint64_t v1 = v26;
      uint64_t v2 = v25;
      uint64_t v4 = v24;
      uint64_t v8 = v35;
      if (!v29) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v17 & 0xFF000000000000) == 0)
      {
LABEL_11:
        sub_1BFF2EB08(0, (unint64_t *)&qword_1EA1A8C80, (uint64_t (*)(uint64_t))sub_1BFF97D54, MEMORY[0x1E4FAB088]);
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        swift_allocObject();
        uint64_t v23 = sub_1C151908C();
        goto LABEL_12;
      }
LABEL_5:
      sub_1C0F67B08();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v18 = v37;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v7, 1, v8) == 1)
      {
        sub_1C002F608((uint64_t)v7);
        uint64_t v19 = sub_1C0F67B08();
        uint64_t v21 = v20;
        sub_1C0F68320();
        swift_allocError();
        *long long v22 = v19;
        v22[1] = v21;
        sub_1BFF2EB08(0, (unint64_t *)&qword_1EA1A8C80, (uint64_t (*)(uint64_t))sub_1BFF97D54, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v23 = sub_1C151906C();
LABEL_12:
        uint64_t v30 = v23;
        sub_1C0C48560((id)v14, v17, 0);
        return v30;
      }
      uint64_t v31 = v36;
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v36, v7, v8);
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v10, v31, v8);
      sub_1C151522C();
      sub_1C15151DC();
      sub_1BFE95820(v14, v17);
      sub_1C151524C();
      sub_1C151525C();
      id v32 = objc_msgSend(self, sel_sharedSession);
      sub_1C1518E6C();

      uint64_t v33 = (void *)sub_1C1518E7C();
      sub_1BFF97D54();
      uint64_t v30 = sub_1C1518FFC();
      swift_release();

      sub_1C0C48560((id)v14, v17, 0);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v36, v8);
      return v30;
  }
}

uint64_t sub_1C0F68224@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C151E68C();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C151E67C();
  uint64_t result = sub_1C151E64C();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for DebugFormatCodeYAMLLoader()
{
  return self;
}

uint64_t sub_1C0F682EC()
{
  return 1280131417;
}

uint64_t sub_1C0F682FC()
{
  return sub_1C0F67C9C();
}

unint64_t sub_1C0F68320()
{
  unint64_t result = qword_1EA1A9590;
  if (!qword_1EA1A9590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9590);
  }
  return result;
}

unint64_t sub_1C0F68374()
{
  unint64_t result = qword_1EA1A9598;
  if (!qword_1EA1A9598)
  {
    type metadata accessor for DebugFormatCodeYAMLLoader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9598);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCodeYAMLLoader.Errors()
{
  return &type metadata for DebugFormatCodeYAMLLoader.Errors;
}

uint64_t FormatStandingDataVisualization.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStandingDataVisualization.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStandingDataVisualization.query.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStandingDataVisualization.tagIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStandingDataVisualization.query.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStandingDataVisualization.query.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatStandingDataVisualization.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStandingDataVisualization.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatStandingDataVisualization.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStandingDataVisualization.properties.modify())()
{
  return j__swift_endAccess;
}

void *FormatStandingDataVisualization.__allocating_init(tagIdentifier:query:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  swift_beginAccess();
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

void *FormatStandingDataVisualization.init(tagIdentifier:query:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  swift_beginAccess();
  _OWORD v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1C0F687F0()
{
  uint64_t result = 0x746E656449676174;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7972657571;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0F68890(uint64_t a1)
{
  unint64_t v2 = sub_1C0233BCC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F688CC(uint64_t a1)
{
  unint64_t v2 = sub_1C0233BCC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatStandingDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatStandingDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatStandingDataVisualization.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0F69320(0, &qword_1EA1985B8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0233BCC();
  sub_1C1520F0C();
  char v18 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v10 = v3[4];
    unint64_t v11 = v3[5];
    swift_bridgeObjectRetain();
    sub_1C0232240(v10, v11, 1);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v13 = v3[6];
    if (*(void *)(v13 + 16))
    {
      char v19 = 2;
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_1BFE71F8C(v13);
      swift_bridgeObjectRelease();
      unint64_t v17 = v14;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v17);
      swift_release();
      uint64_t v16 = (uint64_t)v17;
      sub_1C0F692AC();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v15 = v3[7];
    if (*(void *)(v15 + 16))
    {
      char v19 = 3;
      unint64_t v17 = (void *)v15;
      sub_1C0F692AC();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatStandingDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatStandingDataVisualization.init(from:)(a1);
  return v2;
}

void *FormatStandingDataVisualization.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  BOOL v41 = v2;
  uint64_t v42 = v5;
  sub_1C00FC8DC();
  uint64_t v39 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F69320(0, &qword_1EA1A95A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0233BCC();
  uint64_t v16 = v41;
  sub_1C1520EBC();
  if (v16)
  {
    swift_deallocPartialClassInstance();
    uint64_t v18 = (uint64_t)a1;
  }
  else
  {
    uint64_t v35 = v11;
    uint64_t v17 = v40;
    LOBYTE(v43) = 0;
    v1[2] = sub_1C152069C();
    v1[3] = v20;
    uint64_t v21 = v15;
    char v46 = 1;
    char v22 = sub_1C152071C();
    uint64_t v23 = v17;
    BOOL v41 = v21;
    if (v22)
    {
      char v45 = 1;
      sub_1C15206EC();
      char v24 = a1;
      uint64_t v25 = v43;
      unint64_t v26 = v44;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      char v24 = a1;
    }
    v3[4] = v25;
    v3[5] = v26;
    LOBYTE(v43) = 2;
    if (sub_1C152071C())
    {
      uint64_t v34 = v24;
      char v46 = 2;
      sub_1C0F69384(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
      uint64_t v27 = v35;
      sub_1C15206EC();
      uint64_t v28 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v9);
      char v24 = v34;
    }
    else
    {
      uint64_t v28 = MEMORY[0x1E4FBC870];
    }
    v3[6] = v28;
    LOBYTE(v43) = 3;
    if (sub_1C152071C())
    {
      BOOL v29 = v24;
      char v46 = 3;
      sub_1C0F69384(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
      uint64_t v30 = v38;
      uint64_t v31 = v39;
      sub_1C15206EC();
      uint64_t v32 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v31);
      char v24 = v29;
    }
    else
    {
      uint64_t v32 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v41, v13);
    v3[7] = v32;
    uint64_t v18 = (uint64_t)v24;
  }
  __swift_destroy_boxed_opaque_existential_1(v18);
  return v3;
}

void *sub_1C0F69224@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatStandingDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0F6927C(void *a1)
{
  return FormatStandingDataVisualization.encode(to:)(a1);
}

uint64_t sub_1C0F692A0(void **a1, void **a2)
{
  return static FormatStandingDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1C0F692AC()
{
  unint64_t result = qword_1EA1985C8;
  if (!qword_1EA1985C8)
  {
    sub_1C0F69320(255, &qword_1EA1985B8, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1985C8);
  }
  return result;
}

void sub_1C0F69320(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0233BCC();
    unint64_t v7 = a3(a1, &type metadata for FormatStandingDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F69384(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F693CC(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0F69384(&qword_1EA19CD30, a2, (void (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization);
  a1[2] = sub_1C0F69384((unint64_t *)&unk_1EA19CD60, v3, (void (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization);
  uint64_t result = sub_1C0F69384(&qword_1EA1A95A8, v4, (void (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatStandingDataVisualization()
{
  return self;
}

uint64_t sub_1C0F6949C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F694EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F6953C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatStandingDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatStandingDataVisualization);
}

uint64_t dispatch thunk of FormatStandingDataVisualization.__allocating_init(tagIdentifier:query:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatStandingDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for FormatStandingDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F696ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStandingDataVisualization.CodingKeys()
{
  return &type metadata for FormatStandingDataVisualization.CodingKeys;
}

unint64_t sub_1C0F696E8()
{
  unint64_t result = qword_1EA1A95B0;
  if (!qword_1EA1A95B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A95B0);
  }
  return result;
}

unint64_t sub_1C0F69740()
{
  unint64_t result = qword_1EA1A95B8;
  if (!qword_1EA1A95B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A95B8);
  }
  return result;
}

unint64_t sub_1C0F69798()
{
  unint64_t result = qword_1EA1A95C0;
  if (!qword_1EA1A95C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A95C0);
  }
  return result;
}

void FeedItemFilterTagMatcher.createApplicator()(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  if (*((unsigned char *)v1 + 24))
  {
    if (*((unsigned char *)v1 + 24) == 1)
    {
      *a1 = sub_1C0F69D80;
      a1[1] = v3;
      swift_retain();
    }
    else
    {
      if (v1[1] | v1[2] | v3)
      {
        if (v3 == 1 && *(_OWORD *)(v1 + 1) == 0)
        {
          unsigned int v6 = sub_1C0F699F8;
        }
        else if (v3 == 2 && *(_OWORD *)(v1 + 1) == 0)
        {
          unsigned int v6 = sub_1C0F69A28;
        }
        else if (v3 == 3 && *(_OWORD *)(v1 + 1) == 0)
        {
          unsigned int v6 = sub_1BFE31C54;
        }
        else
        {
          unsigned int v6 = sub_1BFE31C5C;
        }
      }
      else
      {
        unsigned int v6 = sub_1C0F699BC;
      }
      *a1 = v6;
      a1[1] = 0;
    }
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    *a1 = sub_1C0D0ABDC;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C0F69948(id *a1, uint64_t a2)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  LOBYTE(a2) = sub_1BFF896B4(v4, v6, a2);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

id sub_1C0F699BC(void *a1)
{
  return objc_msgSend(self, sel_isTagAllowed_, *a1);
}

BOOL sub_1C0F699F8()
{
  uint64_t ObjectType = swift_getObjectType();
  return FCTagProviding.isSection.getter(ObjectType);
}

id sub_1C0F69A28()
{
  uint64_t v0 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v0) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_supergroupKnobs);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_isEligible);

  return v3;
}

uint64_t FeedItemFilterTagMatcher.debugName(for:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_name);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedItemFilterTagMatcher.description.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  if (*((unsigned char *)v0 + 24))
  {
    if (*((unsigned char *)v0 + 24) == 1)
    {
      swift_beginAccess();
      uint64_t v4 = *(void *)(v2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = v3 | v1;
      if (v3 | v1 | v2)
      {
        if (v2 == 1 && v5 == 0)
        {
          return 0x6974636553207349;
        }
        else if (v2 != 2 || v5)
        {
          if (v2 == 3 && v5 == 0) {
            return 0x737961776C41;
          }
          else {
            return 0x726576654ELL;
          }
        }
        else
        {
          return 0xD000000000000016;
        }
      }
      else
      {
        return 0x776F6C6C41207349;
      }
    }
  }
  else
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    return 0xD000000000000018;
  }
  return v4;
}

uint64_t sub_1C0F69CE4(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_name);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t sub_1C0F69D40(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  return (*(uint64_t (**)(uint64_t *))(a2 + 32))(&v3) & 1;
}

uint64_t sub_1C0F69D80(uint64_t *a1)
{
  uint64_t v3 = *a1;
  return (*(uint64_t (**)(uint64_t *))(v1 + 32))(&v3) & 1;
}

uint64_t sub_1C0F69DC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0F69DF8(uint64_t a1)
{
  unint64_t result = sub_1C0F69E20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F69E20()
{
  unint64_t result = qword_1EA1A95C8;
  if (!qword_1EA1A95C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A95C8);
  }
  return result;
}

uint64_t destroy for FeedItemFilterTagMatcher(uint64_t a1)
{
  return sub_1C0D095F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FeedItemFilterTagMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0D09720(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FeedItemFilterTagMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0D09720(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C0D095F8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FeedItemFilterTagMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C0D095F8(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FeedItemFilterTagMatcher()
{
  return &type metadata for FeedItemFilterTagMatcher;
}

ValueMetadata *type metadata accessor for M12_V1()
{
  return &type metadata for M12_V1;
}

uint64_t sub_1C0F69FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v37 = a1;
  char v46 = a3;
  uint64_t v39 = sub_1C151635C();
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v41 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v62 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = type metadata accessor for GroupLayoutContext();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v35[-v11];
  char v45 = &v35[-v11];
  char v13 = *v3;
  int v36 = *v3;
  uint64_t v14 = (void *)*((void *)v3 + 1);
  unsigned __int8 v15 = v3[16];
  uint64_t v60 = &type metadata for M12_V1;
  unint64_t v16 = sub_1C0185C00();
  unint64_t v61 = v16;
  LOBYTE(v58) = v13;
  *((void *)&v58 + 1) = v14;
  unsigned __int8 v59 = v15;
  sub_1BFF1EC48(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v14, v15);
  uint64_t v17 = v37;
  uint64_t v42 = sub_1C0F5397C(0, 0, 0, 0, 0);
  sub_1BFF1EC48(v17, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1BFF1EC48(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v14, v15);
  sub_1C151634C();
  uint64_t v18 = sub_1C151633C();
  uint64_t v20 = v19;
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v6, v39);
  id v56 = &type metadata for M12_V1;
  unint64_t v57 = v16;
  v53[0] = v36;
  uint64_t v54 = v14;
  LOBYTE(v16) = v15;
  unsigned __int8 v55 = v15;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  char v22 = v14;
  uint64_t v23 = v14;
  LOBYTE(v14) = v16;
  sub_1BFFFC7A0(v22, v16);
  uint64_t v51 = sub_1C1520FAC();
  uint64_t v52 = v24;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 45;
  unint64_t v48 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v25 = sub_1C151FEBC();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v25;
  *(void *)(v21 + 24) = v27;
  uint64_t v28 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *uint64_t v28 = v18;
  v28[1] = v20;
  sub_1BFC66384((uint64_t)v53, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v62, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v29, 0, 1, v44);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v9, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v30, 0, 1, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFFFC630(v23, v14);
  uint64_t v31 = (int *)type metadata accessor for M12_V1.Bound();
  uint64_t v32 = v46;
  v46[3] = (uint64_t)v31;
  v32[4] = sub_1C0F6D540(&qword_1EB86BDF0, (void (*)(uint64_t))type metadata accessor for M12_V1.Bound);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
  sub_1BFC773DC(&v58, (uint64_t)boxed_opaque_existential_0);
  uint64_t result = sub_1BFF2389C((uint64_t)v45, (uint64_t)boxed_opaque_existential_0 + v31[5], (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[6]) = v42;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[7]) = v21;
  return result;
}

double sub_1C0F6A510@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for M12_V1.Bound();
  uint64_t v5 = *(void *)(v2 + *(int *)(v4 + 24));
  uint64_t v16 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C0184C94((void (*)(_OWORD *__return_ptr, uint64_t))sub_1C0F6D588, (uint64_t)v15, v5);
  swift_bridgeObjectRelease();
  sub_1C0F6A8B4(v6, v2 + *(int *)(v4 + 20));
  uint64_t v7 = sub_1C1517BFC();
  long long v14 = v18;
  uint64_t v8 = v19;
  uint64_t v9 = v20;
  uint64_t v17 = v21;
  *(void *)&long long v18 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1BFC6CA08(0, &qword_1EB85EF28);
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB85EF48);
  sub_1C0F6D5B0();
  sub_1C0F6D618();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v18 = v10;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  uint64_t v11 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 8) = v14;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v13;
  return result;
}

uint64_t sub_1C0F6A768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for M12_V1.Bound();
  uint64_t v7 = *(void *)(a2 + *(int *)(v6 + 28));
  sub_1C0249E84(a1, (uint64_t)(a3 + 1));
  uint64_t v8 = a2 + *(int *)(v6 + 20);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v10 = *(void *)(*(void *)(v8 + *(int *)(v9 + 40)) + 16);
  double v11 = *(double *)(v8 + *(int *)(v9 + 32));
  sub_1BFC66384(v10 + 16, (uint64_t)v20);
  sub_1BFC66384(v10 + 56, (uint64_t)v19);
  double v12 = v11 * *(double *)(v10 + 96);
  sub_1BFC773DC(v20, (uint64_t)v17);
  sub_1BFC773DC(v19, (uint64_t)v18);
  *(double *)&v18[5] = v12;
  sub_1BFC66384((uint64_t)v18, (uint64_t)v16);
  uint64_t v13 = type metadata accessor for CategoryViewStyler();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0x4030000000000000;
  sub_1BFC773DC(v16, v14 + 24);
  a3[23] = v13;
  a3[24] = &off_1F1BA3FE0;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  a3[20] = v14;
  *a3 = v7;
  return result;
}

uint64_t sub_1C0F6A8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a1;
  sub_1BFC6CA08(0, &qword_1EB85EF28);
  sub_1C0F6D7A8();
  uint64_t v8 = sub_1C151F0BC();
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v10 = a2 + *(int *)(v9 + 24);
  char v11 = *(unsigned char *)(v10 + 20);
  char v12 = *(unsigned char *)(v10 + 21);
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a2 + *(int *)(v9 + 40)) + 24) + 16);
  uint64_t v14 = *MEMORY[0x1E4FAB6D8];
  uint64_t v15 = sub_1C151759C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v7, v14, v15);
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v19 = v8;
  uint64_t v20 = v13;
  char v21 = v11;
  char v22 = v12;
  sub_1C0F5593C(0, (unint64_t *)&unk_1EB85E4B0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  swift_retain();
  uint64_t v16 = sub_1C1517BEC();
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C0F6AAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  long long v54 = *((_OWORD *)a3 + 2);
  long long v55 = *((_OWORD *)a3 + 3);
  long long v56 = *((_OWORD *)a3 + 4);
  long long v57 = *((_OWORD *)a3 + 5);
  long long v52 = *(_OWORD *)a3;
  long long v53 = *((_OWORD *)a3 + 1);
  CGFloat v11 = a3[12];
  CGFloat v10 = a3[13];
  CGFloat v12 = a3[14];
  CGFloat v13 = a3[15];
  uint64_t v14 = *((void *)a3 + 16);
  double v15 = a3[17];
  double v16 = a3[18];
  CGFloat v17 = a3[19];
  CGFloat v51 = v13;
  if (*(void *)(a4 + 16) - 2 <= a1)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    CGFloat v25 = a3[19];
    double v26 = a3[20];
  }
  else
  {
    v58.origin.CGFloat x = a3[17];
    v58.origin.double y = a3[18];
    v58.size.width = a3[19];
    double rect = a3[20];
    double y = v58.origin.y;
    v58.size.height = rect;
    double MinX = CGRectGetMinX(v58);
    v59.origin.CGFloat x = v11;
    v59.origin.double y = v10;
    v59.size.width = v12;
    v59.size.height = v13;
    double v19 = MinX + CGRectGetMinX(v59);
    uint64_t v47 = v14;
    double v46 = v10;
    double v20 = v15;
    double v21 = y;
    CGFloat v22 = v17;
    double v23 = rect;
    if (a1)
    {
      CGRectGetMinX(*(CGRect *)&v20);
      v61.origin.CGFloat x = v15;
      v61.origin.double y = y;
      v61.size.width = v17;
      v61.size.height = rect;
      CGRectGetWidth(v61);
    }
    else
    {
      CGRectGetWidth(*(CGRect *)&v20);
      v60.origin.CGFloat x = v11;
      v60.origin.double y = v10;
      v60.size.width = v12;
      v60.size.height = v13;
      CGRectGetMinX(v60);
    }
    CGFloat v25 = v17;
    double v27 = v17;
    double v26 = rect;
    MEMORY[0x1C18C72C0](v19, v15, y, v27, rect);
    double v49 = v15;
    v62.origin.CGFloat x = v15;
    v62.origin.double y = y;
    v62.size.width = v25;
    v62.size.height = rect;
    CGRectGetMaxY(v62);
    sub_1C151F79C();
    sub_1C151F7AC();
    type metadata accessor for M12_V1.Bound();
    sub_1C15176EC();
    sub_1C151F7BC();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    sub_1C0F6D744(0, &qword_1EB87A630, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, MEMORY[0x1E4FBBE00]);
    uint64_t v36 = *(void *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8);
    unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    uint64_t v38 = (void *)(v24 + v37);
    void *v38 = v29;
    v38[1] = v31;
    v38[2] = v33;
    v38[3] = v35;
    double v15 = v49;
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = v47;
    CGFloat v10 = v46;
    double v16 = y;
  }
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = swift_allocObject();
  sub_1C0F557B4(a2, v40 + 16);
  *(_OWORD *)(v40 + 248) = v54;
  *(_OWORD *)(v40 + 264) = v55;
  *(_OWORD *)(v40 + 280) = v56;
  *(_OWORD *)(v40 + 296) = v57;
  *(_OWORD *)(v40 + 216) = v52;
  *(_OWORD *)(v40 + 232) = v53;
  *(CGFloat *)(v40 + 312) = v11;
  *(CGFloat *)(v40 + 320) = v10;
  *(CGFloat *)(v40 + 328) = v12;
  *(CGFloat *)(v40 + 336) = v51;
  *(void *)(v40 + 344) = v14;
  *(double *)(v40 + 352) = v15;
  *(double *)(v40 + 360) = v16;
  *(CGFloat *)(v40 + 368) = v25;
  *(double *)(v40 + 376) = v26;
  uint64_t v41 = a5 + *(int *)(type metadata accessor for M12_V1.Bound() + 20);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v43 = *(void *)(v41 + *(int *)(result + 28));
  BOOL v44 = __OFADD__(v43, a1);
  uint64_t v45 = v43 + a1;
  if (v44)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v40 + 384) = v45;
    *(void *)(v39 + 16) = v40 | 0x8000000000000000;
    *(void *)(v39 + 24) = v24;
    *a6 = v39 | 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1C0F6AEBC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  CGFloat v12 = (uint64_t *)&v15[-v11];
  uint64_t v19 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 12;
  *CGFloat v12 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FABA10], v9);
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  __int16 v18 = a4 & 0x101;
  sub_1C0F5593C(0, &qword_1EB85E7E8, MEMORY[0x1E4FAB6F0]);
  sub_1C0F6D850();
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C0F6B09C(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4)
{
  unsigned int v41 = a4;
  uint64_t v50 = a2;
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v37 - v9);
  uint64_t v51 = a1;
  uint64_t v11 = sub_1C151729C();
  uint64_t v12 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FAB4E8], v11);
  *uint64_t v10 = v12;
  uint64_t v15 = v8 + 104;
  uint64_t v14 = *(void (**)(uint64_t *, void, uint64_t))(v8 + 104);
  v14(v10, *MEMORY[0x1E4FAB940], v7);
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  unint64_t v18 = sub_1C0F6D8C4();
  sub_1C151738C();
  double v21 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  uint64_t v20 = v8 + 8;
  uint64_t v19 = v21;
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v21)(v10, v7);
  if (*(void *)(v50 + 16))
  {
    uint64_t v45 = *(void *)(v50 + 16);
    unsigned int v44 = *MEMORY[0x1E4FABA28];
    unsigned int v23 = *MEMORY[0x1E4FAB638];
    int v42 = v41 & 1;
    unsigned int v43 = v23;
    unsigned int v41 = (v41 >> 8) & 1;
    swift_bridgeObjectRetain();
    uint64_t v40 = v17;
    uint64_t v24 = 0;
    long long v39 = xmmword_1C1529AE0;
    unint64_t v37 = v18;
    uint64_t v38 = v14;
    uint64_t v48 = v7;
    uint64_t v49 = v20;
    double v46 = v19;
    uint64_t v47 = v15;
    do
    {
      unint64_t v25 = *(void *)(v50 + 8 * v24++ + 32);
      uint64_t v51 = a1;
      v38(v10, v44, v7);
      sub_1C0F559C0();
      sub_1C0F55BEC(0, &qword_1EB85E7D0, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FAB678]);
      uint64_t v26 = a1;
      uint64_t v28 = v27;
      unint64_t v29 = a3;
      uint64_t v30 = *(void *)(v27 - 8);
      uint64_t v31 = v10;
      unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      uint64_t v34 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v30 + 104))(v33 + v32, v43, v28);
      a3 = v29;
      MEMORY[0x1F4188790](v34);
      *(&v37 - 4) = v29;
      *(&v37 - 3) = v25;
      swift_bridgeObjectRetain();
      unint64_t v36 = v37;
      a1 = v26;
      uint64_t v7 = v48;
      sub_1C151731C();
      uint64_t v35 = v46;
      swift_bridgeObjectRelease();
      uint64_t v10 = v31;
      v35(v31, v7);
      swift_bridgeObjectRelease();
    }
    while (v45 != v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0F6B4D4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)v25 - v11);
  uint64_t v27 = a1;
  uint64_t v32 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 6;
  *uint64_t v12 = v13;
  uint64_t v14 = *MEMORY[0x1E4FABA10];
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v15(v12, v14, v9);
  uint64_t v28 = a2;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  v25[1] = a4 & 1;
  __int16 v31 = a4 & 0x101;
  v25[0] = (a4 >> 8) & 1;
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  unint64_t v18 = sub_1C0F6D8C4();
  unint64_t v24 = v18;
  uint64_t v26 = v17;
  sub_1C151734C();
  uint64_t v19 = a3;
  uint64_t v20 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  uint64_t result = v20(v12, v9);
  if (*(void *)(v19 + 16) == 2)
  {
    uint64_t v32 = v27;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 6;
    *uint64_t v12 = v22;
    uint64_t v23 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v15)(v12, v14, v9);
    MEMORY[0x1F4188790](v23);
    *(void *)&v25[-8] = v28;
    *(void *)&v25[-6] = v19;
    unint64_t v24 = v18;
    sub_1C151734C();
    return v20(v12, v9);
  }
  return result;
}

uint64_t sub_1C0F6B7BC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v9 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v27 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FAB9E0], v13);
  uint64_t v26 = a2;
  if (*(void *)(a3 + 16))
  {
    sub_1C0249E84(a3 + 40, (uint64_t)v25);
    __int16 v24 = a4 & 0x101;
    sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    uint64_t v20 = v9;
    sub_1C0F55CA8();
    uint64_t v18 = v23;
    uint64_t v21 = v13;
    sub_1C0F6D540(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1C15175AC();
    sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0F6D8C4();
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0F6BB58(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v9 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v27 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FAB9E0], v13);
  uint64_t v26 = a2;
  if (*(void *)(a3 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1C0249E84(a3 + 240, (uint64_t)v25);
    __int16 v24 = a4 & 0x101;
    sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    uint64_t v20 = v9;
    sub_1C0F55CA8();
    uint64_t v18 = v23;
    uint64_t v21 = v13;
    sub_1C0F6D540(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1C15175AC();
    sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0F6D8C4();
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  }
  return result;
}

uint64_t sub_1C0F6BEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0F69FC8(a1, a2, a3);
}

uint64_t sub_1C0F6BF14()
{
  return sub_1C12BC394();
}

unint64_t sub_1C0F6BF24(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0F6BF54();
  unint64_t result = sub_1C0F6BFA8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F6BF54()
{
  unint64_t result = qword_1EB86BE98;
  if (!qword_1EB86BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BE98);
  }
  return result;
}

unint64_t sub_1C0F6BFA8()
{
  unint64_t result = qword_1EB86BE90;
  if (!qword_1EB86BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BE90);
  }
  return result;
}

uint64_t type metadata accessor for M12_V1.Bound()
{
  uint64_t result = qword_1EB86BDF8;
  if (!qword_1EB86BDF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0F6C048(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v26 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v31 = a3;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v13 = v12[5];
    uint64_t v14 = v9 + v13;
    uint64_t v15 = v10 + v13;
    uint64_t v16 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v12[6];
    uint64_t v18 = v9 + v17;
    uint64_t v19 = v10 + v17;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)(v10 + v17);
    *(unsigned char *)(v18 + 16) = *(unsigned char *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    *(unsigned char *)(v18 + 19) = *(unsigned char *)(v10 + v17 + 19);
    *(_DWORD *)(v18 + 20) = *(_DWORD *)(v10 + v17 + 20);
    unint64_t v20 = *(void *)(v10 + v17 + 24);
    if (v20 >= 2) {
      unint64_t v20 = swift_bridgeObjectRetain();
    }
    *(void *)(v18 + 24) = v20;
    uint64_t v30 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v21 = *(int *)(v30 + 36);
    __dst = (void *)(v18 + v21);
    uint64_t v22 = (const void *)(v19 + v21);
    uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1C0F6D744(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v27 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(__dst, v22, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    *(void *)(v18 + *(int *)(v30 + 40)) = *(void *)(v19 + *(int *)(v30 + 40));
    *(void *)(v9 + v12[7]) = *(void *)(v10 + v12[7]);
    *(void *)(v9 + v12[8]) = *(void *)(v10 + v12[8]);
    *(unsigned char *)(v9 + v12[9]) = *(unsigned char *)(v10 + v12[9]);
    *(void *)(v9 + v12[10]) = *(void *)(v10 + v12[10]);
    *(unsigned char *)(v9 + v12[11]) = *(unsigned char *)(v10 + v12[11]);
    *(void *)(v9 + v12[12]) = *(void *)(v10 + v12[12]);
    uint64_t v28 = *(int *)(v31 + 28);
    *(void *)(v4 + *(int *)(v31 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v31 + 24));
    *(void *)(v4 + v28) = *(uint64_t *)((char *)a2 + v28);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C0F6C3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  unint64_t v19 = *(void *)(v9 + v16 + 24);
  if (v19 >= 2) {
    unint64_t v19 = swift_bridgeObjectRetain();
  }
  *(void *)(v17 + 24) = v19;
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v20 + 36);
  __dst = (void *)(v17 + v21);
  uint64_t v22 = (const void *)(v18 + v21);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1C0F6D744(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v22, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(void *)(v17 + *(int *)(v20 + 40)) = *(void *)(v18 + *(int *)(v20 + 40));
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  uint64_t v27 = *(int *)(v30 + 28);
  *(void *)(a1 + *(int *)(v30 + 24)) = *(void *)(v31 + *(int *)(v30 + 24));
  *(void *)(a1 + v27) = *(void *)(v31 + v27);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *sub_1C0F6C6FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v38 = a3;
  long long v39 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v40 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v35 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  long long v18 = *(_OWORD *)&v8[v15];
  unsigned char v16[16] = v8[v15 + 16];
  *(_OWORD *)uint64_t v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  unint64_t v19 = (unint64_t *)&v7[v15 + 24];
  unint64_t v20 = *(void *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *unint64_t v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0656968((uint64_t)(v16 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v19 = *((void *)v17 + 3);
    }
  }
  else
  {
    *unint64_t v19 = v20;
    if (v20 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v37 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v37 + 36);
  uint64_t v22 = (uint64_t)&v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v36 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v36, v23, v32);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v36, 0, 1, v24);
      goto LABEL_16;
    }
    sub_1C0F6D744(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  else
  {
    if (!v27)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v36, v23, v33);
      goto LABEL_16;
    }
    sub_1C0656968(v36, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0F6D744(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  memcpy(v30, v23, v29);
LABEL_16:
  *(void *)&v16[*(int *)(v37 + 40)] = *(void *)&v17[*(int *)(v37 + 40)];
  *(void *)&v7[v35[7]] = *(void *)&v8[v35[7]];
  *(void *)&v7[v35[8]] = *(void *)&v8[v35[8]];
  v7[v35[9]] = v8[v35[9]];
  *(void *)&v7[v35[10]] = *(void *)&v8[v35[10]];
  swift_retain();
  swift_release();
  v7[v35[11]] = v8[v35[11]];
  *(void *)&v7[v35[12]] = *(void *)&v8[v35[12]];
  swift_retain();
  swift_release();
  *(uint64_t *)((char *)v40 + *(int *)(v38 + 24)) = *(uint64_t *)((char *)v39 + *(int *)(v38 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v40 + *(int *)(v38 + 28)) = *(uint64_t *)((char *)v39 + *(int *)(v38 + 28));
  swift_retain();
  swift_release();
  return v40;
}

uint64_t sub_1C0F6CB84(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v11 = v10[5];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(void *)(v16 + 24) = *(void *)(v8 + v15 + 24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v18 = *(int *)(v26 + 36);
  __dst = (void *)(v16 + v18);
  unint64_t v19 = (const void *)(v17 + v18);
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1C0F6D744(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(__dst, v19, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(void *)(v16 + *(int *)(v26 + 40)) = *(void *)(v17 + *(int *)(v26 + 40));
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  *(void *)(v7 + v10[8]) = *(void *)(v8 + v10[8]);
  *(unsigned char *)(v7 + v10[9]) = *(unsigned char *)(v8 + v10[9]);
  *(void *)(v7 + v10[10]) = *(void *)(v8 + v10[10]);
  *(unsigned char *)(v7 + v10[11]) = *(unsigned char *)(v8 + v10[11]);
  *(void *)(v7 + v10[12]) = *(void *)(v8 + v10[12]);
  uint64_t v24 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  return a1;
}

uint64_t sub_1C0F6CE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v35 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v38 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 18) = *(unsigned char *)(v9 + v16 + 18);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(unsigned char *)(v17 + 20) = *(unsigned char *)(v9 + v16 + 20);
  *(unsigned char *)(v17 + 21) = *(unsigned char *)(v9 + v16 + 21);
  *(unsigned char *)(v17 + 22) = *(unsigned char *)(v9 + v16 + 22);
  *(unsigned char *)(v17 + 23) = *(unsigned char *)(v9 + v16 + 23);
  unint64_t v19 = (unint64_t *)(v8 + v16 + 24);
  unint64_t v20 = *(void *)(v9 + v16 + 24);
  if (*v19 < 2) {
    goto LABEL_4;
  }
  if (v20 < 2)
  {
    sub_1C0656968((uint64_t)v19, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v20 = *(void *)(v18 + 24);
LABEL_4:
    *unint64_t v19 = v20;
    goto LABEL_6;
  }
  *unint64_t v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v37 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v37 + 36);
  uint64_t v22 = v17 + v21;
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v36 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v36, v23, v32);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v36, 0, 1, v24);
      goto LABEL_14;
    }
    sub_1C0F6D744(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  else
  {
    if (!v27)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v33 - 8) + 40))(v36, v23, v33);
      goto LABEL_14;
    }
    sub_1C0656968(v36, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0F6D744(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
    uint64_t v30 = (void *)v36;
  }
  memcpy(v30, v23, v29);
LABEL_14:
  *(void *)(v17 + *(int *)(v37 + 40)) = *(void *)(v18 + *(int *)(v37 + 40));
  *(void *)(v8 + v38[7]) = *(void *)(v9 + v38[7]);
  *(void *)(v8 + v38[8]) = *(void *)(v9 + v38[8]);
  *(unsigned char *)(v8 + v38[9]) = *(unsigned char *)(v9 + v38[9]);
  *(void *)(v8 + v38[10]) = *(void *)(v9 + v38[10]);
  swift_release();
  *(unsigned char *)(v8 + v38[11]) = *(unsigned char *)(v9 + v38[11]);
  *(void *)(v8 + v38[12]) = *(void *)(v9 + v38[12]);
  swift_release();
  *(void *)(v35 + *(int *)(v39 + 24)) = *(void *)(v40 + *(int *)(v39 + 24));
  swift_bridgeObjectRelease();
  *(void *)(v35 + *(int *)(v39 + 28)) = *(void *)(v40 + *(int *)(v39 + 28));
  swift_release();
  return v35;
}

uint64_t sub_1C0F6D2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F6D2C8);
}

uint64_t sub_1C0F6D2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0F6D378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F6D38C);
}

uint64_t sub_1C0F6D38C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F6D434()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0F6D4E8(uint64_t a1)
{
  uint64_t result = sub_1C0F6D540(&qword_1EB86BDE8, (void (*)(uint64_t))type metadata accessor for M12_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F6D540(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F6D588@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F6A768(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0F6D5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, unint64_t *a4@<X8>)
{
  return sub_1C0F6AAC8(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

unint64_t sub_1C0F6D5B0()
{
  unint64_t result = qword_1EB85EF30;
  if (!qword_1EB85EF30)
  {
    sub_1BFC6CA08(255, &qword_1EB85EF28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EF30);
  }
  return result;
}

unint64_t sub_1C0F6D618()
{
  unint64_t result = qword_1EB85E738;
  if (!qword_1EB85E738)
  {
    sub_1BFC6CA08(255, (unint64_t *)&qword_1EB85EF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E738);
  }
  return result;
}

uint64_t sub_1C0F6D680()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F6D6C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  }
  if (v0[15]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  }
  if (v0[20]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 22));
  return swift_deallocObject();
}

void sub_1C0F6D744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C0F6D7A8()
{
  unint64_t result = qword_1EB86BEA8;
  if (!qword_1EB86BEA8)
  {
    sub_1BFC6CA08(255, &qword_1EB85EF28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BEA8);
  }
  return result;
}

uint64_t sub_1C0F6D810(uint64_t a1)
{
  return sub_1C0F6D980(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F6AEBC);
}

uint64_t sub_1C0F6D828()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F6D838(uint64_t a1)
{
  return sub_1C0F6D980(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F6B09C);
}

unint64_t sub_1C0F6D850()
{
  unint64_t result = qword_1EB85E7E0;
  if (!qword_1EB85E7E0)
  {
    sub_1C0F5593C(255, &qword_1EB85E7E8, MEMORY[0x1E4FAB6F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E7E0);
  }
  return result;
}

unint64_t sub_1C0F6D8C4()
{
  unint64_t result = qword_1EB85E7C0;
  if (!qword_1EB85E7C0)
  {
    sub_1C0F5593C(255, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E7C0);
  }
  return result;
}

uint64_t sub_1C0F6D938(uint64_t a1)
{
  return sub_1C0F6D980(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F6B4D4);
}

uint64_t sub_1C0F6D950(uint64_t a1)
{
  return sub_1C0F6D980(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F6B7BC);
}

uint64_t sub_1C0F6D968(uint64_t a1)
{
  return sub_1C0F6D980(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F6BB58);
}

uint64_t sub_1C0F6D980(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  if (*(unsigned char *)(v2 + 33)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_1C0F6D9A8(void *a1, unint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    unint64_t v42 = 0;
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    unint64_t v4 = sub_1C15203BC() | 0x8000000000000000;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v2 = ~v5;
    unint64_t v42 = a2 + 64;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v3 = v7 & *(void *)(a2 + 64);
    unint64_t v4 = a2;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v41 = (unint64_t)(v2 + 64) >> 6;
  unint64_t v43 = v4;
  while (1)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      if (!sub_1C15203EC()) {
        goto LABEL_42;
      }
      sub_1BFC39268(0, &qword_1EA1A9670);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v46;
      swift_unknownObjectRelease();
      sub_1BFC9DBE8(0, &qword_1EA1A9678);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v46;
      swift_unknownObjectRelease();
      uint64_t v13 = v8;
      uint64_t v11 = v3;
      if (!v46) {
        goto LABEL_42;
      }
    }
    else
    {
      if (v3)
      {
        uint64_t v11 = (v3 - 1) & v3;
        unint64_t v12 = __clz(__rbit64(v3)) | (v8 << 6);
        uint64_t v13 = v8;
      }
      else
      {
        int64_t v16 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_45;
        }
        if (v16 >= v41) {
          goto LABEL_42;
        }
        unint64_t v17 = *(void *)(v42 + 8 * v16);
        uint64_t v13 = v8 + 1;
        if (!v17)
        {
          uint64_t v13 = v8 + 2;
          if (v8 + 2 >= v41) {
            goto LABEL_42;
          }
          unint64_t v17 = *(void *)(v42 + 8 * v13);
          if (!v17)
          {
            uint64_t v13 = v8 + 3;
            if (v8 + 3 >= v41) {
              goto LABEL_42;
            }
            unint64_t v17 = *(void *)(v42 + 8 * v13);
            if (!v17)
            {
              uint64_t v13 = v8 + 4;
              if (v8 + 4 >= v41) {
                goto LABEL_42;
              }
              unint64_t v17 = *(void *)(v42 + 8 * v13);
              if (!v17)
              {
                uint64_t v13 = v8 + 5;
                if (v8 + 5 >= v41) {
                  goto LABEL_42;
                }
                unint64_t v17 = *(void *)(v42 + 8 * v13);
                if (!v17)
                {
                  uint64_t v18 = v8 + 6;
                  while (v41 != v18)
                  {
                    unint64_t v17 = *(void *)(v42 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v13 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_42:
                  sub_1BFEFB808();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = 8 * v12;
      uint64_t v15 = *(void **)(*(void *)(v4 + 56) + v19);
      id v14 = *(id *)(*(void *)(v4 + 48) + v19);
      swift_unknownObjectRetain();
      if (!v14) {
        goto LABEL_42;
      }
    }
    unint64_t v44 = v11;
    id v20 = v14;
    id v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_featureKey);
    uint64_t v22 = sub_1C151E62C();
    uint64_t v24 = v23;

    id v25 = v20;
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v46 = a1;
    unint64_t v28 = sub_1BFEF2D8C(v22, v24);
    uint64_t v29 = a1[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (a1[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C10738F0();
      }
    }
    else
    {
      sub_1C1062814(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_1BFEF2D8C(v22, v24);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_46;
      }
      unint64_t v28 = v33;
    }
    if (v32)
    {
      uint64_t v9 = a1[7] + 16 * v28;
      uint64_t v10 = *(void **)v9;
      swift_unknownObjectRelease();

      *(void *)uint64_t v9 = v25;
      *(void *)(v9 + 8) = v15;
    }
    else
    {
      a1[(v28 >> 6) + 8] |= 1 << v28;
      uint64_t v35 = (uint64_t *)(a1[6] + 16 * v28);
      *uint64_t v35 = v22;
      v35[1] = v24;
      uint64_t v36 = (void *)(a1[7] + 16 * v28);
      *uint64_t v36 = v25;
      v36[1] = v15;
      uint64_t v37 = a1[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_44;
      }
      a1[2] = v39;
      swift_bridgeObjectRetain();
    }
    swift_unknownObjectRelease_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v13;
    unint64_t v4 = v43;
    unint64_t v3 = v44;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0F6DE28()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_1BFC8BAC0();
    sub_1C151932C();
    unint64_t v3 = (void *)sub_1C1518E7C();
    sub_1BFD35C60();
    sub_1C0F7775C((unint64_t *)&qword_1EB879FA0, (void (*)(uint64_t))sub_1BFC8BAC0);
    sub_1C151915C();
    swift_release();

    swift_retain();
    unint64_t v4 = (void *)sub_1C1518E7C();
    uint64_t v1 = sub_1C1518FEC();
    swift_release();
    swift_release();

    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C0F6DF94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedItem.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C0F6DFD4()
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2B5358;
  sub_1C151F38C();
  sub_1C15197BC();
}

uint64_t sub_1C0F6E074(void *a1)
{
  uint64_t v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v36 - v10;
  uint64_t v12 = a1[10];
  uint64_t v13 = MEMORY[0x1E4FBC870];
  uint64_t v43 = MEMORY[0x1E4FBC870];
  uint64_t v41 = *(void *)(v12 + 16);
  if (v41)
  {
    v36[1] = v12;
    uint64_t v37 = a1;
    uint64_t v14 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v40 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = 0;
    BOOL v38 = v4;
    uint64_t v39 = v14;
    do
    {
      sub_1BFEEB204(v14 + v40 * v15, (uint64_t)v11, type metadata accessor for FeedItem);
      sub_1BFEEB204((uint64_t)v11, (uint64_t)v7, type metadata accessor for FeedItem);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1BFEEFBB8((uint64_t)v7, (uint64_t)v4, type metadata accessor for FeedHeadline);
        int64_t v16 = (void *)*((void *)v4 + 5);
        id v17 = objc_msgSend(v16, sel_publisherID);
        if (v17)
        {
          uint64_t v18 = v17;
          uint64_t v19 = sub_1C151E62C();
          uint64_t v21 = v20;

          sub_1BFEFFC1C(&v42, v19, v21);
          swift_bridgeObjectRelease();
        }
        id v22 = objc_msgSend(v16, sel_topicIDs);
        if (v22)
        {
          uint64_t v23 = v22;
          uint64_t v24 = v5;
          uint64_t v25 = sub_1C151EBCC();

          uint64_t v26 = *(void *)(v25 + 16);
          if (v26)
          {
            char v27 = (uint64_t *)(v25 + 40);
            do
            {
              uint64_t v28 = *(v27 - 1);
              uint64_t v29 = *v27;
              swift_bridgeObjectRetain();
              sub_1BFEFFC1C(&v42, v28, v29);
              swift_bridgeObjectRelease();
              v27 += 2;
              --v26;
            }
            while (v26);
          }
          swift_bridgeObjectRelease();
          uint64_t v5 = v24;
          unint64_t v4 = v38;
        }
        sub_1C0F77858((uint64_t)v4, type metadata accessor for FeedHeadline);
        uint64_t v14 = v39;
      }
      else
      {
        sub_1C0F77858((uint64_t)v7, type metadata accessor for FeedItem);
      }
      ++v15;
      sub_1C0F77858((uint64_t)v11, type metadata accessor for FeedItem);
    }
    while (v15 != v41);
    swift_bridgeObjectRelease_n();
    uint64_t v13 = v43;
    a1 = v37;
  }
  uint64_t v31 = a1[8];
  uint64_t v30 = a1[9];
  __swift_project_boxed_opaque_existential_1(a1 + 5, v31);
  char v32 = sub_1BFE71F8C(v13);
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(self, sel_defaultCachePolicy);
  uint64_t v34 = (*(uint64_t (**)(void *, id, uint64_t, uint64_t, uint64_t))(v30 + 32))(v32, v33, 25, v31, v30);
  swift_release();

  return v34;
}

uint64_t sub_1C0F6E438(uint64_t *a1, id *a2)
{
  return sub_1C0F70A94(a1, a2);
}

uint64_t sub_1C0F6E450(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1C0F75E50(v4, (uint64_t)a2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C1518E7C();
  type metadata accessor for DebugInspectionItem();
  sub_1C151940C();

  swift_bridgeObjectRelease();
  uint64_t v6 = a2[13];
  uint64_t v7 = a2[14];
  uint64_t v8 = a2[15];
  uint64_t v9 = a2[11];
  uint64_t v10 = a2[12];
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = a2;
  v11[3] = v10;
  v11[4] = v6;
  v11[5] = v7;
  v11[6] = v8;
  v11[7] = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C0F77810;
  *(void *)(v12 + 24) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_1C1518E7C();
  uint64_t v14 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v14;
}

void sub_1C0F6E5D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v152 = a2;
  uint64_t v146 = a3;
  uint64_t v196 = a4;
  uint64_t v5 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v147 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v147 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v148 = (uint64_t)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v149 = (uint64_t)&v143 - v8;
  uint64_t v9 = type metadata accessor for FeedWebEmbed();
  uint64_t v144 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v144 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v145 = (uint64_t)&v143 - v13;
  uint64_t v14 = type metadata accessor for FeedHeadline(0);
  uint64_t v150 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v150 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v151 = (uint64_t)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v143 - v17;
  uint64_t v19 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB204(a1, (uint64_t)v21, type metadata accessor for FeedItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = *((void *)v21 + 9);
      unint64_t v22 = *((void *)v21 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v25;
      goto LABEL_5;
    case 2u:
    case 8u:
    case 9u:
    case 0xAu:
      sub_1C0F77858((uint64_t)v21, type metadata accessor for FeedItem);
      goto LABEL_21;
    case 3u:
      uint64_t v26 = sub_1BFEEFBB8((uint64_t)v21, (uint64_t)v18, type metadata accessor for FeedHeadline);
      uint64_t v27 = *((void *)v18 + 5);
      MEMORY[0x1F4188790](v26);
      uint64_t v28 = v152;
      *(&v143 - 2) = v152;
      *(&v143 - 1) = v27;
      sub_1C0F780A4();
      swift_unknownObjectRetain();
      sub_1C151932C();
      uint64_t v29 = (void *)swift_allocObject();
      void v29[2] = v27;
      v29[3] = v28;
      v29[4] = v146;
      swift_unknownObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v30 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionHeadline(0);
      sub_1C1518FFC();
      swift_release();
      swift_release();

      *(void *)(swift_allocObject() + 16) = v27;
      swift_unknownObjectRetain();
      uint64_t v31 = (void *)sub_1C1518E7C();
      sub_1C151903C();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();

      char v32 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      uint64_t v33 = v151;
      sub_1BFEEB204((uint64_t)v18, v151, type metadata accessor for FeedHeadline);
      unint64_t v34 = (*(unsigned __int8 *)(v150 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
      uint64_t v35 = swift_allocObject();
      sub_1BFEEFBB8(v33, v35 + v34, type metadata accessor for FeedHeadline);
      uint64_t v36 = (void *)sub_1C1518E7C();
      uint64_t v37 = sub_1C15190DC();
      swift_release();
      swift_release();

      BOOL v38 = type metadata accessor for FeedHeadline;
      uint64_t v39 = (uint64_t)v18;
      goto LABEL_18;
    case 4u:
      uint64_t v40 = v145;
      sub_1BFEEFBB8((uint64_t)v21, v145, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C0F6FC10(v40);
      uint64_t v41 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      sub_1BFEEB204(v40, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      unint64_t v42 = (*(unsigned __int8 *)(v144 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
      uint64_t v43 = swift_allocObject();
      sub_1BFEEFBB8((uint64_t)v11, v43 + v42, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      unint64_t v44 = (void *)sub_1C1518E7C();
      uint64_t v37 = sub_1C15190DC();
      swift_release();
      swift_release();

      BOOL v38 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      uint64_t v39 = v40;
      goto LABEL_18;
    case 5u:
      long long v45 = *((_OWORD *)v21 + 6);
      long long v46 = *((_OWORD *)v21 + 7);
      long long v47 = *((_OWORD *)v21 + 4);
      long long v186 = *((_OWORD *)v21 + 5);
      long long v187 = v45;
      v188[0] = v46;
      *(_OWORD *)((char *)v188 + 9) = *(_OWORD *)(v21 + 121);
      long long v48 = *((_OWORD *)v21 + 3);
      *(_OWORD *)uint64_t v184 = *((_OWORD *)v21 + 2);
      *(_OWORD *)&v184[16] = v48;
      long long v185 = v47;
      long long v49 = *((_OWORD *)v21 + 1);
      long long v182 = *(_OWORD *)v21;
      long long v183 = v49;
      sub_1C0F6F9FC((void *)v182, *((void **)&v48 + 1));
      uint64_t v50 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      uint64_t v51 = (_OWORD *)swift_allocObject();
      long long v52 = v188[0];
      v51[7] = v187;
      v51[8] = v52;
      *(_OWORD *)((char *)v51 + 137) = *(_OWORD *)((char *)v188 + 9);
      long long v53 = *(_OWORD *)&v184[16];
      v51[3] = *(_OWORD *)v184;
      v51[4] = v53;
      long long v54 = v186;
      v51[5] = v185;
      v51[6] = v54;
      long long v55 = v183;
      v51[1] = v182;
      v51[2] = v55;
      sub_1C0187FB0((uint64_t)&v182);
      long long v56 = (void *)sub_1C1518E7C();
      uint64_t v57 = sub_1C15190DC();
      sub_1C01880A4((uint64_t)&v182);
      swift_release();
      swift_release();

      goto LABEL_26;
    case 6u:
      sub_1C063FFF4((uint64_t)v21, (uint64_t)&v182);
      sub_1C024A070((uint64_t)&v182, (uint64_t)&v172);
      if (!v181)
      {
        long long v169 = v178;
        v170[0] = v179[0];
        *(_OWORD *)((char *)v170 + 9) = *(_OWORD *)((char *)v179 + 9);
        long long v165 = v174;
        long long v166 = v175;
        long long v167 = v176;
        long long v168 = v177;
        long long v163 = v172;
        long long v164 = v173;
        sub_1C0F6F9FC((void *)v172, *((void **)&v175 + 1));
        v121 = (void *)sub_1C1518E7C();
        type metadata accessor for DebugInspectionItem();
        sub_1C1518FFC();
        swift_release();

        id v122 = (_OWORD *)swift_allocObject();
        long long v123 = v170[0];
        v122[7] = v169;
        v122[8] = v123;
        *(_OWORD *)((char *)v122 + 137) = *(_OWORD *)((char *)v170 + 9);
        long long v124 = v166;
        v122[3] = v165;
        v122[4] = v124;
        long long v125 = v168;
        v122[5] = v167;
        v122[6] = v125;
        long long v126 = v164;
        v122[1] = v163;
        v122[2] = v126;
        sub_1C0187FB0((uint64_t)&v163);
        uint64_t v64 = (void *)sub_1C1518E7C();
        goto LABEL_23;
      }
      if (v181 == 1)
      {
        long long v169 = v178;
        v170[0] = v179[0];
        *(_OWORD *)((char *)v170 + 9) = *(_OWORD *)((char *)v179 + 9);
        long long v165 = v174;
        long long v166 = v175;
        long long v167 = v176;
        long long v168 = v177;
        long long v163 = v172;
        long long v164 = v173;
        sub_1C0F77F04((uint64_t)v180, (uint64_t)&v153, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
        sub_1C01B3B54((uint64_t)&v153);
        sub_1C0F6F9FC((void *)v163, *((void **)&v166 + 1));
        CGRect v58 = (void *)sub_1C1518E7C();
        type metadata accessor for DebugInspectionItem();
        sub_1C1518FFC();
        swift_release();

        CGRect v59 = (_OWORD *)swift_allocObject();
        long long v60 = v170[0];
        v59[7] = v169;
        v59[8] = v60;
        *(_OWORD *)((char *)v59 + 137) = *(_OWORD *)((char *)v170 + 9);
        long long v61 = v166;
        v59[3] = v165;
        v59[4] = v61;
        long long v62 = v168;
        v59[5] = v167;
        v59[6] = v62;
        long long v63 = v164;
        v59[1] = v163;
        v59[2] = v63;
        sub_1C0187FB0((uint64_t)&v163);
        uint64_t v64 = (void *)sub_1C1518E7C();
LABEL_23:
        uint64_t v57 = sub_1C15190DC();
        swift_release();
        swift_release();

        sub_1C01880A4((uint64_t)&v163);
        goto LABEL_25;
      }
      long long v169 = v178;
      v170[0] = v179[0];
      v170[1] = v179[1];
      char v171 = v180[0];
      long long v165 = v174;
      long long v166 = v175;
      long long v167 = v176;
      long long v168 = v177;
      long long v163 = v172;
      long long v164 = v173;
      id v127 = (void *)v173;
      id v128 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v129 = sub_1C151E62C();
      uint64_t v131 = v130;

      id v132 = objc_msgSend(v127, sel_name);
      uint64_t v133 = sub_1C151E62C();
      uint64_t v135 = v134;

      *(void *)&long long v153 = v129;
      *((void *)&v153 + 1) = v131;
      *(void *)&long long v154 = v133;
      *((void *)&v154 + 1) = v135;
      sub_1C0F79594(0, (unint64_t *)&unk_1EA1A9650, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      sub_1C151908C();
      swift_unknownObjectRelease();
      v136 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      sub_1BFEA435C((uint64_t)&v163, (uint64_t)&v153);
      uint64_t v137 = swift_allocObject();
      long long v138 = v160;
      *(_OWORD *)(v137 + 112) = v159;
      *(_OWORD *)(v137 + 128) = v138;
      *(_OWORD *)(v137 + 144) = v161;
      *(unsigned char *)(v137 + 160) = v162;
      long long v139 = v156;
      *(_OWORD *)(v137 + 48) = v155;
      *(_OWORD *)(v137 + 64) = v139;
      long long v140 = v158;
      *(_OWORD *)(v137 + 80) = v157;
      *(_OWORD *)(v137 + 96) = v140;
      long long v141 = v154;
      *(_OWORD *)(v137 + 16) = v153;
      *(_OWORD *)(v137 + 32) = v141;
      uint64_t v142 = (void *)sub_1C1518E7C();
      uint64_t v57 = sub_1C15190DC();
      swift_release();
      swift_release();

      sub_1BFEA4290((uint64_t)&v163);
LABEL_25:
      sub_1C024A288((uint64_t)&v182);
LABEL_26:
      *uint64_t v196 = v57;
      return;
    case 7u:
      long long v65 = *((_OWORD *)v21 + 7);
      long long v187 = *((_OWORD *)v21 + 6);
      v188[0] = v65;
      v188[1] = *((_OWORD *)v21 + 8);
      LOBYTE(v189) = v21[144];
      long long v66 = *((_OWORD *)v21 + 3);
      *(_OWORD *)uint64_t v184 = *((_OWORD *)v21 + 2);
      *(_OWORD *)&v184[16] = v66;
      long long v67 = *((_OWORD *)v21 + 5);
      long long v185 = *((_OWORD *)v21 + 4);
      long long v186 = v67;
      long long v68 = *((_OWORD *)v21 + 1);
      long long v182 = *(_OWORD *)v21;
      long long v183 = v68;
      uint64_t v69 = (void *)v68;
      id v70 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v71 = sub_1C151E62C();
      uint64_t v73 = v72;

      id v74 = objc_msgSend(v69, sel_name);
      uint64_t v75 = sub_1C151E62C();
      uint64_t v77 = v76;

      *(void *)&long long v172 = v71;
      *((void *)&v172 + 1) = v73;
      *(void *)&long long v173 = v75;
      *((void *)&v173 + 1) = v77;
      sub_1C0F79594(0, (unint64_t *)&unk_1EA1A9650, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      sub_1C151908C();
      swift_unknownObjectRelease();
      uint64_t v78 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      sub_1BFEA435C((uint64_t)&v182, (uint64_t)&v172);
      uint64_t v79 = swift_allocObject();
      long long v80 = v179[0];
      *(_OWORD *)(v79 + 112) = v178;
      *(_OWORD *)(v79 + 128) = v80;
      *(_OWORD *)(v79 + 144) = v179[1];
      *(unsigned char *)(v79 + 160) = v180[0];
      long long v81 = v175;
      *(_OWORD *)(v79 + 48) = v174;
      *(_OWORD *)(v79 + 64) = v81;
      long long v82 = v177;
      *(_OWORD *)(v79 + 80) = v176;
      *(_OWORD *)(v79 + 96) = v82;
      long long v83 = v173;
      *(_OWORD *)(v79 + 16) = v172;
      *(_OWORD *)(v79 + 32) = v83;
      uint64_t v84 = (void *)sub_1C1518E7C();
      uint64_t v57 = sub_1C15190DC();
      swift_release();
      swift_release();

      sub_1BFEA4290((uint64_t)&v182);
      goto LABEL_26;
    case 0xBu:
      swift_release();
      goto LABEL_21;
    case 0xCu:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 0xDu:
      long long v85 = *((_OWORD *)v21 + 11);
      long long v190 = *((_OWORD *)v21 + 10);
      long long v191 = v85;
      long long v192 = *((_OWORD *)v21 + 12);
      long long v86 = *((_OWORD *)v21 + 7);
      long long v187 = *((_OWORD *)v21 + 6);
      v188[0] = v86;
      long long v87 = *((_OWORD *)v21 + 9);
      v188[1] = *((_OWORD *)v21 + 8);
      long long v189 = v87;
      long long v88 = *((_OWORD *)v21 + 3);
      *(_OWORD *)uint64_t v184 = *((_OWORD *)v21 + 2);
      *(_OWORD *)&v184[16] = v88;
      long long v89 = *((_OWORD *)v21 + 5);
      long long v185 = *((_OWORD *)v21 + 4);
      long long v186 = v89;
      long long v90 = *((_OWORD *)v21 + 1);
      long long v182 = *(_OWORD *)v21;
      long long v183 = v90;
      *(void *)&long long v172 = *(void *)&v184[8];
      *((void *)&v172 + 1) = v88;
      *(void *)&long long v173 = *(void *)&v184[8];
      *((void *)&v173 + 1) = v88;
      sub_1C0F79594(0, &qword_1EA1A9648, (uint64_t)&type metadata for DebugInspectionPuzzle, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain_n();
      sub_1C151908C();
      uint64_t v91 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      sub_1C01F09C0((uint64_t)&v182, (uint64_t)&v172);
      uint64_t v92 = (_OWORD *)swift_allocObject();
      long long v93 = v180[2];
      v92[11] = v180[1];
      v92[12] = v93;
      v92[13] = v180[3];
      long long v94 = v179[0];
      v92[7] = v178;
      v92[8] = v94;
      long long v95 = v180[0];
      v92[9] = v179[1];
      v92[10] = v95;
      long long v96 = v175;
      v92[3] = v174;
      v92[4] = v96;
      long long v97 = v177;
      v92[5] = v176;
      v92[6] = v97;
      long long v98 = v173;
      v92[1] = v172;
      v92[2] = v98;
      uint64_t v99 = (void *)sub_1C1518E7C();
      uint64_t v57 = sub_1C15190DC();
      swift_release();
      swift_release();

      sub_1C01F0A74((uint64_t)&v182);
      goto LABEL_26;
    case 0xEu:
      long long v100 = *((_OWORD *)v21 + 3);
      *(_OWORD *)uint64_t v184 = *((_OWORD *)v21 + 2);
      *(_OWORD *)&v184[16] = v100;
      long long v101 = *((_OWORD *)v21 + 1);
      long long v182 = *(_OWORD *)v21;
      long long v183 = v101;
      long long v172 = *(_OWORD *)&v184[8];
      long long v173 = *(_OWORD *)&v184[8];
      sub_1C0F79594(0, &qword_1EA1A9640, (uint64_t)&type metadata for DebugInspectionPuzzleType, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain_n();
      sub_1C151908C();
      v102 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      int v103 = (_OWORD *)swift_allocObject();
      long long v104 = v183;
      v103[1] = v182;
      v103[2] = v104;
      long long v105 = *(_OWORD *)&v184[16];
      v103[3] = *(_OWORD *)v184;
      v103[4] = v105;
      sub_1C0642378((uint64_t)&v182);
      uint64_t v106 = (void *)sub_1C1518E7C();
      uint64_t v37 = sub_1C15190DC();
      sub_1C0641D00((uint64_t)&v182);
      swift_release();
      swift_release();

      goto LABEL_19;
    case 0xFu:
      uint64_t v107 = v149;
      sub_1BFEEFBB8((uint64_t)v21, v149, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v108 = *(void *)(v107 + 48);
      *(void *)&long long v182 = *(void *)(v107 + 40);
      *((void *)&v182 + 1) = v108;
      *(void *)&long long v183 = v182;
      *((void *)&v183 + 1) = v108;
      sub_1C0F79594(0, &qword_1EA1A9638, (uint64_t)&type metadata for DebugInspectionPuzzleStatistic, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain_n();
      sub_1C151908C();
      uint64_t v109 = (void *)sub_1C1518E7C();
      type metadata accessor for DebugInspectionItem();
      sub_1C1518FFC();
      swift_release();

      uint64_t v110 = v148;
      sub_1BFEEB204(v107, v148, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      unint64_t v111 = (*(unsigned __int8 *)(v147 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
      uint64_t v112 = swift_allocObject();
      sub_1BFEEFBB8(v110, v112 + v111, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v113 = (void *)sub_1C1518E7C();
      uint64_t v37 = sub_1C15190DC();
      swift_release();
      swift_release();

      BOOL v38 = (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic;
      uint64_t v39 = v107;
LABEL_18:
      sub_1C0F77858(v39, v38);
LABEL_19:
      *uint64_t v196 = v37;
      return;
    case 0x10u:
      long long v114 = *((_OWORD *)v21 + 13);
      long long v192 = *((_OWORD *)v21 + 12);
      long long v193 = v114;
      long long v194 = *((_OWORD *)v21 + 14);
      uint64_t v195 = *((void *)v21 + 30);
      long long v115 = *((_OWORD *)v21 + 9);
      v188[1] = *((_OWORD *)v21 + 8);
      long long v189 = v115;
      long long v116 = *((_OWORD *)v21 + 11);
      long long v190 = *((_OWORD *)v21 + 10);
      long long v191 = v116;
      long long v117 = *((_OWORD *)v21 + 5);
      long long v185 = *((_OWORD *)v21 + 4);
      long long v186 = v117;
      long long v118 = *((_OWORD *)v21 + 7);
      long long v187 = *((_OWORD *)v21 + 6);
      v188[0] = v118;
      long long v119 = *((_OWORD *)v21 + 1);
      long long v182 = *(_OWORD *)v21;
      long long v183 = v119;
      long long v120 = *((_OWORD *)v21 + 3);
      *(_OWORD *)uint64_t v184 = *((_OWORD *)v21 + 2);
      *(_OWORD *)&v184[16] = v120;
      sub_1C01F0AC8((uint64_t)&v182);
      goto LABEL_21;
    case 0x11u:
      goto LABEL_21;
    default:
      uint64_t v23 = *((void *)v21 + 5);
      unint64_t v22 = *((void *)v21 + 6);
      swift_bridgeObjectRelease();
      uint64_t v24 = v23;
LABEL_5:
      sub_1BFEEFC20(v24, v22);
LABEL_21:
      *uint64_t v196 = 0;
      return;
  }
}

uint64_t sub_1C0F6F924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0F7001C(a1, (void (*)(uint64_t, uint64_t))sub_1C0F78520, a2);
}

uint64_t sub_1C0F6F954@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5 = objc_msgSend(*(id *)(a2 + 40), sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  uint64_t v9 = sub_1C01A9804(a1);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = 0x656E696C64616568;
  a3[3] = 0xE800000000000000;
  a3[4] = v9;
  a3[5] = v10;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F6F9FC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1BFC8BAC0();
  sub_1C151932C();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = a1;
  swift_retain();
  id v7 = a1;
  uint64_t v8 = (void *)sub_1C1518E7C();
  sub_1C0F79D60();
  sub_1C1518FEC();
  swift_release();
  swift_release();

  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v7;
  v9[3] = a2;
  v9[4] = v3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C0F79E18;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  id v11 = v7;
  id v12 = a2;
  uint64_t v13 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  *(void *)(swift_allocObject() + 16) = v11;
  id v14 = v11;
  uint64_t v15 = (void *)sub_1C1518E7C();
  uint64_t v16 = sub_1C151903C();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1C0F6FBF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F70094(a1, a2);
}

uint64_t sub_1C0F6FC10(uint64_t a1)
{
  uint64_t v2 = (void *)v1;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedWebEmbed();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v25 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)v24 - v11;
  sub_1C0F740DC(a1, v1);
  v24[1] = *(void *)(a1 + *(int *)(v7 + 44));
  sub_1C1515DDC();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  sub_1BFEEB204(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if (!v14)
  {
    sub_1C0F77858((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    goto LABEL_5;
  }
  sub_1BFEEB204((uint64_t)&v12[*(int *)(v7 + 52)], (uint64_t)v6, (uint64_t (*)(void))sub_1BFECFC20);
  sub_1C0F77858((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v15 = type metadata accessor for WebEmbedDataVisualization();
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 1, v15);
  sub_1C0F77858((uint64_t)v6, (uint64_t (*)(void))sub_1BFECFC20);
  if (v16 != 1)
  {
LABEL_5:
    unint64_t v26 = sub_1C018D770(MEMORY[0x1E4FBC860]);
    sub_1C0F776DC(0, &qword_1EB885060, (uint64_t (*)(uint64_t))sub_1C0065708, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1C151908C();
    goto LABEL_6;
  }
  uint64_t v17 = v2[19];
  uint64_t v18 = v2[20];
  __swift_project_boxed_opaque_existential_1(v2 + 16, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
LABEL_6:
  sub_1C15192EC();
  swift_release();
  swift_release();
  sub_1BFEEB204(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  unint64_t v19 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v20 = swift_allocObject();
  sub_1BFEEFBB8((uint64_t)v9, v20 + v19, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v21 = (void *)sub_1C1518E7C();
  type metadata accessor for DebugInspectionWebEmbed();
  uint64_t v22 = sub_1C1518FEC();
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1C0F6FFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0F7001C(a1, (void (*)(uint64_t, uint64_t))sub_1C0F796B4, a2);
}

uint64_t sub_1C0F7001C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F70078@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F703AC(a1, a2);
}

uint64_t sub_1C0F70094@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(v5, __src, sizeof(v5));
  memcpy(a2, __src, 0x230uLL);
  type metadata accessor for DebugInspectionItem();
  swift_storeEnumTagMultiPayload();
  return sub_1C0BB1FD4((uint64_t)v5);
}

uint64_t sub_1C0F70110@<X0>(void *a1@<X0>, id *a2@<X1>, uint64_t *a3@<X8>)
{
  id v5 = objc_msgSend(*a2, sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  uint64_t v9 = sub_1C01A9804(a1);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = 0x6575737369;
  a3[3] = 0xE500000000000000;
  a3[4] = v9;
  a3[5] = v10;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F701B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5 = objc_msgSend(*(id *)(a2 + 16), sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  uint64_t v9 = sub_1C01A9804(a1);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = 6775156;
  a3[3] = 0xE300000000000000;
  a3[4] = v9;
  a3[5] = v10;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F70254@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F703AC(a1, a2);
}

uint64_t sub_1C0F70270@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C01A9804(a1);
  *a3 = v6;
  a3[1] = v5;
  a3[2] = 0x656C7A7A7570;
  a3[3] = 0xE600000000000000;
  a3[4] = v7;
  a3[5] = v8;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F702EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F703AC(a1, a2);
}

uint64_t sub_1C0F70308@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C01A9804(a1);
  *a3 = v6;
  a3[1] = v5;
  a3[2] = 0x7420656C7A7A7570;
  a3[3] = 0xEB00000000657079;
  a3[4] = v7;
  a3[5] = v8;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0F70390@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F703AC(a1, a2);
}

uint64_t sub_1C0F703AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  type metadata accessor for DebugInspectionItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F70420@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C01A9804(a1);
  *a5 = v10;
  a5[1] = v9;
  a5[2] = a3;
  a5[3] = a4;
  a5[4] = v11;
  a5[5] = v12;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_1C0F7049C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  uint64_t v15 = sub_1C0F70550(a2);
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C018D9F4(MEMORY[0x1E4FBC860]);
  *a8 = a3;
  a8[1] = a4;
  a8[2] = a5;
  a8[3] = a6;
  uint64_t v19 = MEMORY[0x1E4FBC870];
  a8[4] = a1;
  a8[5] = v19;
  a8[6] = v19;
  a8[7] = v19;
  a8[8] = result;
  a8[9] = a7;
  a8[10] = v15;
  a8[11] = v17;
  return result;
}

uint64_t sub_1C0F70550(uint64_t a1)
{
  uint64_t v2 = sub_1C151E68C();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&double v8 = MEMORY[0x1F4188790](v7).n128_u64[0];
  uint64_t v10 = &v25[-v9];
  id v11 = objc_msgSend(*(id *)(a1 + 24), sel_contentDirectory, v8);
  sub_1C151E62C();

  sub_1C1515E5C();
  swift_bridgeObjectRelease();
  sub_1C1515EDC();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  id v13 = objc_msgSend(self, sel_defaultManager);
  sub_1C1515F4C();
  uint64_t v14 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  LODWORD(v6) = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  if (v6)
  {
    uint64_t v20 = sub_1C1515FFC();
    unint64_t v22 = v21;
    sub_1C151E67C();
    uint64_t v23 = sub_1C151E64C();
    sub_1BFE95664(v20, v22);
  }
  else
  {
    if (qword_1EA194B18 != -1) {
      swift_once();
    }
    id v15 = (id)qword_1EA2B5358;
    sub_1C151F36C();
    sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
    sub_1C0F7775C((unint64_t *)&qword_1EB861120, MEMORY[0x1E4F276F0]);
    uint64_t v17 = sub_1C152088C();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 64) = sub_1BFE9C558();
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
  }
  v12(v10, v3);
  return v23;
}

uint64_t sub_1C0F70A94(uint64_t *a1, id *a2)
{
  id v3 = *a2;
  id v4 = objc_msgSend(*a2, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *a1;
  *a1 = 0x8000000000000000;
  sub_1C1065B60((uint64_t)v3, v5, v7, isUniquelyReferenced_nonNull_native);
  *a1 = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F70B58(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  sub_1C0F780A4();
  sub_1C151932C();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a3;
  v6[3] = a2;
  _OWORD v6[4] = v5;
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1C1518E7C();
  type metadata accessor for DebugInspectionHeadline(0);
  sub_1C1518FFC();
  swift_release();
  swift_release();

  *(void *)(swift_allocObject() + 16) = a3;
  swift_unknownObjectRetain();
  double v8 = (void *)sub_1C1518E7C();
  uint64_t v9 = sub_1C151903C();
  swift_release();
  swift_release();

  return v9;
}

void *sub_1C0F70CBC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v240 = a5;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v9 - 8);
  long long v242 = (char *)&v204 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v204 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v204 - v15;
  uint64_t v17 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1F4188790](v17);
  long long v244 = (unint64_t *)((char *)&v204 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v245 = *a1;
  uint64_t ObjectType = (void *)swift_getObjectType();
  id v243 = objc_msgSend(a2, sel_scoreProfile);
  long long v248 = sub_1C0F72600(a2);
  unsigned __int8 v19 = objc_msgSend(a2, sel_respondsToSelector_, sel_contentWithContext_);
  uint64_t v20 = 0;
  unint64_t v21 = 0;
  uint64_t v254 = a4;
  long long v246 = v16;
  if ((v19 & 1) == 0) {
    goto LABEL_14;
  }
  id v22 = objc_msgSend(a2, sel_contentWithContext_, *(void *)(a3 + 24));
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = objc_msgSend(v22, sel_anfContent);

    if (v24)
    {
      id v25 = objc_msgSend(v24, sel_anfDocumentAssetHandles);

      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A100);
      unint64_t v26 = sub_1C151EBCC();

      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v33) {
          goto LABEL_6;
        }
      }
      else if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        if ((v26 & 0xC000000000000001) != 0)
        {
          id v27 = (id)MEMORY[0x1C18C7CB0](0, v26);
        }
        else
        {
          if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_124:
            sub_1BFE95878(v238, v239);
            __break(1u);
            goto LABEL_125;
          }
          id v27 = *(id *)(v26 + 32);
        }
        uint64_t v28 = v27;
        swift_bridgeObjectRelease();
        id v29 = objc_msgSend(v28, sel_uniqueKey);

        uint64_t v30 = sub_1C151E62C();
        unint64_t v32 = v31;

        unint64_t v21 = v32;
        uint64_t v20 = v30;
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = 0;
  unint64_t v21 = 0;
LABEL_13:
  uint64_t v16 = v246;
  a4 = v254;
LABEL_14:
  unint64_t v235 = v21;
  unint64_t v236 = v20;
  id v234 = sub_1C0F728A0(a2, a4);
  LODWORD(v229) = objc_msgSend(a2, sel_respondsToSelector_, sel_bodyTextLength);
  if (v229) {
    id v233 = objc_msgSend(a2, sel_bodyTextLength);
  }
  else {
    id v233 = 0;
  }
  id v34 = objc_msgSend(a2, sel_clusterID);
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = sub_1C151E62C();
    unint64_t v231 = v37;
    unint64_t v232 = v36;
  }
  else
  {
    unint64_t v231 = 0xE000000000000000;
    unint64_t v232 = 0;
  }
  uint64_t v230 = sub_1C0F78538(a2, a4);
  id v38 = objc_msgSend(a2, sel_lastFetchedDate);
  if (v38)
  {
    uint64_t v39 = v38;
    sub_1C15162BC();

    uint64_t v40 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v16, 0, 1, v40);
  }
  else
  {
    uint64_t v41 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v16, 1, 1, v41);
  }
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_float16FullBodyEncoding) & 1) != 0
    && (id v42 = objc_msgSend(a2, sel_float16FullBodyEncoding)) != 0)
  {
    uint64_t v43 = v42;
    uint64_t v238 = sub_1C151606C();
    unint64_t v239 = v44;
  }
  else
  {
    uint64_t v238 = 0;
    unint64_t v239 = 0xF000000000000000;
  }
  id v228 = objc_msgSend(a2, sel_halfLife);
  double v45 = 0.0;
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_halfLifeOverride) & 1) != 0
    && (id v46 = objc_msgSend(a2, sel_halfLifeOverride)) != 0)
  {
    LODWORD(v227) = 0;
    double v45 = (double)(unint64_t)v46;
  }
  else
  {
    LODWORD(v227) = 1;
  }
  uint64_t v237 = (uint64_t)v13;
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_hasAudioTrack) & 1) == 0) {
    goto LABEL_124;
  }
  unsigned int v226 = objc_msgSend(a2, sel_hasAudioTrack);
  unsigned int v225 = objc_msgSend(a2, sel_hasVideo);
  id v47 = objc_msgSend(a2, sel_identifier);
  uint64_t v48 = sub_1C151E62C();
  uint64_t v223 = v49;
  uint64_t v224 = v48;

  unsigned int v222 = objc_msgSend(a2, sel_isAIGenerated);
  uint64_t v50 = *(void **)(a3 + 24);
  id v51 = objc_msgSend(v50, sel_paidAccessChecker);
  if (!v51)
  {
LABEL_125:
    sub_1BFE95878(v238, v239);
    __break(1u);
    goto LABEL_126;
  }
  unsigned int v221 = objc_msgSend(v51, sel_canGetSubscriptionToChannel_, objc_msgSend(a2, sel_sourceChannel));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v249 = v50;
  id v52 = objc_msgSend(v50, sel_paidAccessChecker);
  if (!v52)
  {
LABEL_126:
    sub_1BFE95878(v238, v239);
    __break(1u);
    goto LABEL_127;
  }
  unsigned int v53 = objc_msgSend(v52, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(a2, sel_sourceChannel));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  unsigned int v54 = objc_msgSend(a2, sel_isANF);
  long long v55 = v248;
  unsigned int v220 = objc_msgSend(v248, sel_isEvergreen);
  unsigned int v219 = objc_msgSend(v55, sel_isCoread);
  unsigned __int8 v56 = objc_msgSend(a2, sel_respondsToSelector_, sel_isFeatured);
  uint64_t v57 = v237;
  if ((v56 & 1) == 0)
  {
LABEL_127:
    sub_1BFE95878(v238, v239);
    __break(1u);
LABEL_128:
    sub_1BFE95878(v238, v239);
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  unsigned int v218 = objc_msgSend(a2, sel_isFeatured);
  if (objc_msgSend(a2, sel_isPaid))
  {
    unsigned int v217 = 1;
  }
  else
  {
    if ((objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid) & 1) == 0)
    {
LABEL_132:
      sub_1BFE95878(v238, v239);
      __break(1u);
      goto LABEL_133;
    }
    unsigned int v217 = objc_msgSend(a2, sel_isBundlePaid);
  }
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_parentIssue) & 1) == 0) {
    goto LABEL_128;
  }
  id v58 = objc_msgSend(a2, sel_parentIssue);
  id v59 = v58;
  if (v58) {

  }
  id v213 = v59;
  unsigned int v215 = v54;
  unsigned int v216 = v53;
  id v214 = objc_msgSend(a2, sel_publisherArticleVersion);
  id v60 = objc_msgSend(a2, sel_publishDate);
  uint64_t v205 = a3;
  if (v60)
  {
    long long v61 = v60;
    uint64_t v62 = (uint64_t)v242;
    sub_1C15162BC();

    uint64_t v63 = sub_1C151631C();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    uint64_t v63 = sub_1C151631C();
    uint64_t v62 = (uint64_t)v242;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v242, 1, 1, v63);
  }
  sub_1BFEEFBB8(v62, v57, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C151631C();
  uint64_t v64 = *(void *)(v63 - 8);
  int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v57, 1, v63);
  if (v65 == 1)
  {
    sub_1C0F77858(v57, (uint64_t (*)(void))sub_1BFF97C40);
    uint64_t v66 = 0;
  }
  else
  {
    sub_1C151629C();
    uint64_t v66 = v67;
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v57, v63);
  }
  uint64_t v68 = v254;
  id v69 = objc_msgSend(a2, sel_sourceChannelID);
  if (v69)
  {
    id v70 = v69;
    long long v242 = (char *)sub_1C151E62C();
    uint64_t v237 = v71;
  }
  else
  {
    long long v242 = 0;
    uint64_t v237 = 0xE000000000000000;
  }
  id v72 = objc_msgSend(a2, sel_sourceName);
  if (v72)
  {
    uint64_t v73 = v72;
    uint64_t v74 = sub_1C151E62C();
    unint64_t v211 = v75;
    uint64_t v212 = v74;
  }
  else
  {
    unint64_t v211 = 0xE000000000000000;
    uint64_t v212 = 0;
  }
  id v76 = objc_msgSend(a2, sel_sourceFeedID);
  if (v76)
  {
    uint64_t v77 = v76;
    uint64_t v78 = sub_1C151E62C();
    uint64_t v209 = v79;
    uint64_t v210 = v78;
  }
  else
  {
    uint64_t v209 = 0;
    uint64_t v210 = 0;
  }
  long long v80 = sub_1C0F787BC(a2, v68);
  id v81 = objc_msgSend(a2, sel_title);
  v208 = v80;
  if (v81)
  {
    long long v82 = v81;
    uint64_t v83 = sub_1C151E62C();
    uint64_t v206 = v84;
    uint64_t v207 = v83;
  }
  else
  {
    uint64_t v206 = 0;
    uint64_t v207 = 0;
  }
  char v85 = v229 ^ 1;
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_float16TitleEncoding) & 1) != 0
    && (id v86 = objc_msgSend(a2, sel_float16TitleEncoding)) != 0)
  {
    long long v87 = v86;
    uint64_t v229 = sub_1C151606C();
    unint64_t v89 = v88;
  }
  else
  {
    uint64_t v229 = 0;
    unint64_t v89 = 0xF000000000000000;
  }
  BOOL v90 = v65 == 1;
  BOOL v91 = v213 != 0;
  uint64_t v92 = sub_1C0F78C30(a2, v254);
  long long v93 = v244;
  unint64_t v94 = v235;
  *long long v244 = v236;
  v93[1] = v94;
  unint64_t v95 = (unint64_t)v233;
  v93[2] = (unint64_t)v234;
  v93[3] = v95;
  *((unsigned char *)v93 + 32) = v85 & 1;
  unint64_t v96 = v231;
  v93[5] = v232;
  v93[6] = v96;
  v93[7] = v230;
  sub_1BFEEFBB8((uint64_t)v246, (uint64_t)v93 + v17[9], (uint64_t (*)(void))sub_1BFF97C40);
  long long v97 = (unint64_t *)((char *)v93 + v17[10]);
  unint64_t v98 = v239;
  *long long v97 = v238;
  v97[1] = v98;
  *(unint64_t *)((char *)v93 + v17[11]) = (unint64_t)v228;
  uint64_t v99 = (double *)((char *)v93 + v17[12]);
  double *v99 = v45;
  *((unsigned char *)v99 + 8) = v227;
  *((unsigned char *)v93 + v17[13]) = v226;
  *((unsigned char *)v93 + v17[14]) = v225;
  long long v100 = (uint64_t *)((char *)v93 + v17[15]);
  uint64_t v101 = v223;
  uint64_t *v100 = v224;
  v100[1] = v101;
  *((unsigned char *)v93 + v17[16]) = v222;
  *((unsigned char *)v93 + v17[17]) = v221;
  *((unsigned char *)v93 + v17[18]) = v216;
  *((unsigned char *)v93 + v17[19]) = v215;
  *((unsigned char *)v93 + v17[20]) = v220;
  *((unsigned char *)v93 + v17[21]) = v219;
  *((unsigned char *)v93 + v17[22]) = v218;
  *((unsigned char *)v93 + v17[23]) = v217;
  *((unsigned char *)v93 + v17[24]) = v91;
  v102 = (char *)v93 + v17[25];
  *(void *)v102 = v214;
  v102[8] = 0;
  int v103 = (char *)v93 + v17[26];
  *(void *)int v103 = v66;
  v103[8] = v90;
  long long v104 = (char **)((char *)v93 + v17[27]);
  uint64_t v105 = v237;
  *long long v104 = v242;
  v104[1] = (char *)v105;
  unint64_t v106 = v211;
  v104[2] = (char *)v212;
  v104[3] = (char *)v106;
  uint64_t v107 = (uint64_t *)((char *)v93 + v17[28]);
  uint64_t v108 = v209;
  uint64_t *v107 = v210;
  v107[1] = v108;
  *(unint64_t *)((char *)v93 + v17[29]) = (unint64_t)v208;
  uint64_t v109 = (uint64_t *)((char *)v93 + v17[30]);
  uint64_t v110 = v206;
  *uint64_t v109 = v207;
  v109[1] = v110;
  unint64_t v111 = (uint64_t *)((char *)v93 + v17[31]);
  *unint64_t v111 = v229;
  v111[1] = v89;
  *(unint64_t *)((char *)v93 + v17[32]) = v92;
  id v112 = objc_msgSend(v249, sel_paidAccessChecker);
  if (!v112) {
    goto LABEL_129;
  }
  uint64_t v113 = v112;
  unsigned int v114 = objc_msgSend(a2, sel_isPaid);
  if (objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned __int8 v115 = objc_msgSend(a2, sel_isBundlePaid);
  }
  else {
    unsigned __int8 v115 = 0;
  }
  id v116 = objc_msgSend(a2, sel_sourceChannel);
  uint64_t v117 = (uint64_t)v116;
  if (v116)
  {
    id v118 = objc_msgSend(v116, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v119 = sub_1C151E62C();
    uint64_t v117 = v120;

    if (v114) {
      goto LABEL_70;
    }
LABEL_75:
    if (v115) {
      goto LABEL_79;
    }
    goto LABEL_76;
  }
  uint64_t v119 = 0;
  if (!v114) {
    goto LABEL_75;
  }
LABEL_70:
  id v121 = objc_msgSend(v113, sel_purchaseProvider);
  if (v117)
  {
    id v122 = objc_msgSend(v121, sel_purchasedTagIDs);
    uint64_t v123 = sub_1C151EFBC();

    LOBYTE(v122) = sub_1BFF896B4(v119, v117, v123);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v122 & 1) == 0)
    {
      if ((v115 & 1) == 0) {
        goto LABEL_100;
      }
      goto LABEL_79;
    }
LABEL_76:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_77;
  }
  swift_unknownObjectRelease();
  if ((v115 & 1) == 0) {
    goto LABEL_100;
  }
LABEL_79:
  if (v117)
  {
    long long v124 = (char *)objc_msgSend(objc_msgSend(v113, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v124, v124 + 1))
    {
      sub_1C151FF3C();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v252 = 0u;
      long long v253 = 0u;
    }
    uint64_t v125 = MEMORY[0x1E4FBC840];
    sub_1C0F77F04((uint64_t)&v252, (uint64_t)v250, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
    if (v250[3])
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
      if (swift_dynamicCast())
      {
        id v126 = v251[0];
        id v127 = objc_msgSend(v251[0], sel_integerValue);
        if (v127 == (id)-1)
        {

          goto LABEL_102;
        }
        unint64_t v128 = (unint64_t)v127;
        uint64_t ObjectType = v126;
        uint64_t v129 = v125;
LABEL_90:
        if (objc_getAssociatedObject(v124, (const void *)~v128))
        {
          sub_1C151FF3C();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v252 = 0u;
          long long v253 = 0u;
        }
        sub_1C0F77F04((uint64_t)&v252, (uint64_t)v250, (unint64_t *)&qword_1EB87A940, v129 + 8);
        if (v250[3])
        {
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
          if (swift_dynamicCast())
          {
            id v130 = v251[0];
            unsigned int v131 = objc_msgSend(v130, sel_integerValue);

            if (((v131 + 1) ^ (v128 + 1))) {
              goto LABEL_102;
            }
          }
          else
          {

            if (v128) {
              goto LABEL_102;
            }
          }
        }
        else
        {
          sub_1BFEFE4A0((uint64_t)v250);

          if (v128)
          {
LABEL_102:
            id v132 = objc_msgSend(objc_msgSend(v113, sel_bundleSubscriptionProvider), sel_bundleSubscription);
            swift_unknownObjectRelease();
            id v133 = objc_msgSend(v132, sel_bundleChannelIDs);

            uint64_t v134 = (void *)sub_1C151E5EC();
            unsigned __int8 v135 = objc_msgSend(v133, sel_containsObject_, v134);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();

            if ((v135 & 1) == 0) {
              goto LABEL_103;
            }
LABEL_77:
            LODWORD(v239) = 1;
            goto LABEL_104;
          }
        }
LABEL_100:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_103;
      }
    }
    else
    {
      sub_1BFEFE4A0((uint64_t)v250);
    }
    uint64_t v129 = v125;
    uint64_t ObjectType = 0;
    unint64_t v128 = 0;
    goto LABEL_90;
  }
  swift_unknownObjectRelease();
LABEL_103:
  LODWORD(v239) = 0;
LABEL_104:
  uint64_t v136 = v205;
  id v137 = sub_1C0F72600(a2);
  id v138 = objc_msgSend(v137, sel_debugFields);
  id v139 = objc_msgSend(v138, sel_contentTriggerScores);

  uint64_t v140 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  uint64_t ObjectType = a2;
  long long v141 = (char *)v140;
  uint64_t v142 = sub_1C151E33C();

  MEMORY[0x1F4188790](v143);
  uint64_t v144 = v245;
  uint64_t v145 = v254;
  uint64_t v146 = v241;
  uint64_t v238 = sub_1C0F75FC8(v142, (void (*)(void *__return_ptr, uint64_t, uint64_t, id))sub_1C0F78E5C);
  swift_bridgeObjectRelease();

  uint64_t v237 = sub_1C0F79EE4(v145, v144, v136, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))sub_1C0F7953C);
  unint64_t v147 = sub_1C0F78E68(v243);
  unint64_t v235 = v148;
  unint64_t v236 = v147;
  id v149 = sub_1C0F72600(ObjectType);
  id v150 = objc_msgSend(v149, sel_debugFields);
  id v151 = objc_msgSend(v150, sel_nicheContentScores);

  long long v242 = v141;
  uint64_t v152 = ObjectType;
  uint64_t v153 = sub_1C151E33C();

  swift_bridgeObjectRetain();
  sub_1C0F762A0(v153, v145);
  id v234 = v154;
  long long v241 = v146;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v155 = v249;
  id v156 = objc_msgSend(v249, sel_readingHistory);
  id v157 = objc_msgSend(v152, sel_articleID);
  if (!v157)
  {
    sub_1C151E62C();
    id v157 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  LODWORD(v233) = objc_msgSend(v156, sel_hasArticleBeenRead_, v157);

  long long v158 = v248;
  long long v159 = v248;
  sub_1C020CB34(v158, (uint64_t)&v252);
  sub_1C0F77F04((uint64_t)&v252, (uint64_t)v251, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  long long v246 = v159;
  id v160 = objc_msgSend(v246, sel_debugFields);
  unint64_t v161 = (unint64_t)objc_msgSend(v160, sel_scoringType);

  if ((v161 & 0x8000000000000000) != 0)
  {
LABEL_133:
    sub_1C15203FC();
    __break(1u);
    JUMPOUT(0x1C0F725F0);
  }
  unint64_t v162 = 0xE700000000000000;
  unint64_t v163 = 0x6E776F6E6B6E55;
  switch(v161)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v162 = 0xE600000000000000;
      unint64_t v163 = 0x79636167654CLL;
      break;
    case 2uLL:
      unint64_t v162 = 0xE600000000000000;
      unint64_t v163 = 0x726569766158;
      break;
    case 3uLL:
      unint64_t v162 = 0x80000001C162FE10;
      unint64_t v163 = 0xD000000000000012;
      break;
    default:
      unint64_t v163 = 0x746C7561666544;
      break;
  }
  unint64_t v231 = v163;
  unint64_t v232 = v162;
  long long v164 = v246;

  long long v248 = (void *)sub_1C0F79110(v248);
  uint64_t v230 = v165;

  id v166 = objc_msgSend(v155, sel_readingHistory);
  id v167 = objc_msgSend(v152, sel_articleID);
  if (!v167)
  {
    sub_1C151E62C();
    id v167 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  LODWORD(v229) = objc_msgSend(v166, sel_hasArticleBeenSeen_, v167);

  id v168 = sub_1C0F72600(v152);
  id v169 = objc_msgSend(v168, sel_cohortMemberships);
  sub_1BFC39268(0, &qword_1EA1A96E8);
  unint64_t v170 = sub_1C151EBCC();

  uint64_t v171 = v254;
  swift_bridgeObjectRetain();
  long long v172 = (char *)v241;
  long long v241 = sub_1C0F76E50(v170, v171);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v173 = sub_1C0F72600(v152);
  id v174 = objc_msgSend(v173, sel_debugFields);
  id v175 = objc_msgSend(v174, sel_tagWeightsByID);

  uint64_t v176 = sub_1C151E33C();
  swift_bridgeObjectRetain();
  sub_1C0F762A0(v176, v171);
  id v228 = v177;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v178 = sub_1C0F72600(v152);
  id v179 = objc_msgSend(v178, sel_debugFields);
  id v180 = objc_msgSend(v179, sel_featureWeightsByID);

  uint64_t v181 = sub_1C151E33C();
  swift_bridgeObjectRetain();
  uint64_t v182 = v245;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v183 = sub_1C0F76AD8(v181, v182, v171);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  id v184 = objc_msgSend(v246, sel_debugFields);
  id v185 = objc_msgSend(v184, sel_scoringAssetsIdentifier);

  long long v242 = v172;
  uint64_t v227 = v183;
  if (v185)
  {
    uint64_t v186 = sub_1C151E62C();
    uint64_t v188 = v187;
  }
  else
  {
    uint64_t v186 = 0;
    uint64_t v188 = 0;
  }
  id v189 = objc_msgSend(v249, sel_subscriptionController);
  long long v190 = ObjectType;
  if (!v189) {
    goto LABEL_130;
  }
  long long v191 = v189;
  uint64_t v254 = v188;
  id v192 = objc_msgSend(ObjectType, sel_sourceChannel);
  long long v193 = v192;
  if (v192)
  {
    id v194 = objc_msgSend(v192, sel_identifier);
    swift_unknownObjectRelease();
    sub_1C151E62C();

    long long v193 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v195 = objc_msgSend(v191, sel_hasAutoFavoriteSubscriptionForTagID_, v193);

  id v196 = objc_msgSend(v249, sel_subscriptionController);
  if (!v196) {
    goto LABEL_131;
  }
  uint64_t v197 = v196;
  id v198 = objc_msgSend(v190, sel_sourceChannel);
  LOBYTE(v250[0]) = v239;
  v250[1] = v238;
  v250[2] = v237;
  v250[3] = v236;
  v250[4] = v235;
  v250[5] = v234;
  LOBYTE(v250[6]) = (_BYTE)v233;
  sub_1C0F77F04((uint64_t)v251, (uint64_t)&v250[7], &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  v250[62] = v231;
  v250[63] = v232;
  v250[64] = v248;
  v250[65] = v230;
  LOBYTE(v250[66]) = v229;
  v250[67] = v241;
  v250[68] = v228;
  v250[69] = v227;
  v250[70] = v186;
  v250[71] = v254;
  unsigned __int8 v199 = objc_msgSend(v197, sel_hasSubscriptionToTag_, v198);

  swift_unknownObjectRelease();
  uint64_t v200 = v240;
  sub_1BFEEFBB8((uint64_t)v244, v240, type metadata accessor for DebugInspectionArticleData);
  uint64_t v201 = type metadata accessor for DebugInspectionHeadline(0);
  unint64_t result = memcpy((void *)(v200 + *(int *)(v201 + 20)), v250, 0x240uLL);
  v203 = (unsigned __int8 *)(v200 + *(int *)(v201 + 24));
  unsigned __int8 *v203 = v195;
  v203[1] = v199;
  return result;
}

id sub_1C0F72600(void *a1)
{
  id result = objc_msgSend(a1, sel_scoreProfile);
  if (!result)
  {
    if (qword_1EA194B18 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EA2B5358;
    sub_1C151F36C();
    sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C152C7F0;
    id v5 = objc_msgSend(a1, sel_articleID);
    uint64_t v6 = sub_1C151E62C();
    uint64_t v8 = v7;

    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v10 = sub_1BFE9C558();
    *(void *)(v4 + 64) = v10;
    *(void *)(v4 + 32) = v6;
    *(void *)(v4 + 40) = v8;
    sub_1C0F79594(0, (unint64_t *)&qword_1EB879C00, v9, MEMORY[0x1E4FBB718]);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C151E6AC();
    *(void *)(v4 + 96) = v9;
    *(void *)(v4 + 104) = v10;
    *(void *)(v4 + 72) = v11;
    *(void *)(v4 + 80) = v12;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C151E6AC();
    *(void *)(v4 + 136) = v9;
    *(void *)(v4 + 144) = v10;
    *(void *)(v4 + 112) = v13;
    *(void *)(v4 + 120) = v14;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C0F79594(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C15320E0;
    *(void *)(v15 + 32) = a1;
    sub_1C151EBEC();
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
    swift_unknownObjectRetain();
    uint64_t v16 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    FCAssignPersonalizationScoresToHeadlines();

    return (id)sub_1C0F72600(a1);
  }
  return result;
}

id sub_1C0F728A0(void *a1, uint64_t a2)
{
  if (!objc_msgSend(a1, sel_isPaid)) {
    goto LABEL_40;
  }
  id result = objc_msgSend(*(id *)(v2 + 24), sel_paidAccessChecker);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  unsigned int v7 = objc_msgSend(a1, sel_isPaid);
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned __int8 v8 = objc_msgSend(a1, sel_isBundlePaid);
  }
  else {
    unsigned __int8 v8 = 0;
  }
  id v9 = objc_msgSend(a1, sel_sourceChannel);
  uint64_t v10 = (uint64_t)v9;
  if (v9)
  {
    id v11 = objc_msgSend(v9, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v12 = sub_1C151E62C();
    uint64_t v10 = v13;

    if (v7) {
      goto LABEL_8;
    }
LABEL_13:
    if (v8) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v12 = 0;
  if (!v7) {
    goto LABEL_13;
  }
LABEL_8:
  id v14 = objc_msgSend(v6, sel_purchaseProvider);
  if (v10)
  {
    id v15 = objc_msgSend(v14, sel_purchasedTagIDs);
    uint64_t v16 = sub_1C151EFBC();

    LOBYTE(v15) = sub_1BFF896B4(v12, v10, v16);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      if ((v8 & 1) == 0) {
        goto LABEL_36;
      }
      goto LABEL_16;
    }
LABEL_14:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = 1;
    goto LABEL_41;
  }
  swift_unknownObjectRelease();
  if ((v8 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_16:
  if (!v10)
  {
    swift_unknownObjectRelease();
    goto LABEL_40;
  }
  uint64_t v18 = (char *)objc_msgSend(objc_msgSend(v6, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v18, v18 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }
  uint64_t v19 = MEMORY[0x1E4FBC840];
  sub_1C0F77F04((uint64_t)&v51, (uint64_t)aBlock, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
  if (!v55)
  {
    sub_1BFEFE4A0((uint64_t)aBlock);
    goto LABEL_26;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    uint64_t v20 = 0;
    unint64_t v22 = 0;
    goto LABEL_27;
  }
  uint64_t v20 = v50;
  id v21 = objc_msgSend(v50, sel_integerValue);
  if (v21 == (id)-1)
  {

    goto LABEL_38;
  }
  unint64_t v22 = (unint64_t)v21;
LABEL_27:
  if (objc_getAssociatedObject(v18, (const void *)~v22))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
  }
  sub_1C0F77F04((uint64_t)&v51, (uint64_t)aBlock, (unint64_t *)&qword_1EB87A940, v19 + 8);
  if (!v55)
  {
    sub_1BFEFE4A0((uint64_t)aBlock);
LABEL_35:

    if (v22) {
      goto LABEL_38;
    }
LABEL_36:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_35;
  }
  id v23 = v50;
  unsigned int v24 = objc_msgSend(v23, sel_integerValue);

  if ((((v24 + 1) ^ (v22 + 1)) & 1) == 0) {
    goto LABEL_36;
  }
LABEL_38:
  id v25 = objc_msgSend(objc_msgSend(v6, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v26 = objc_msgSend(v25, sel_bundleChannelIDs);

  id v27 = (void *)sub_1C151E5EC();
  LOBYTE(v25) = objc_msgSend(v26, sel_containsObject_, v27);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if (v25)
  {
    uint64_t v17 = 1;
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v17 = 0;
LABEL_41:
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = MEMORY[0x1E4FBC868];
  *(void *)(v28 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v30 = (void *)(v28 + 16);
  id v31 = objc_msgSend(a1, sel_globalCohorts);
  if (v31)
  {
    unint64_t v32 = v31;
    id v33 = objc_msgSend(v31, sel_cohortWithPreferredType_, v17);

    if (v33)
    {
      id v34 = v33;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v29;
      *uint64_t v30 = 0x8000000000000000;
      sub_1C106975C((uint64_t)v34, 42, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
      uint64_t v29 = aBlock[0];
      *uint64_t v30 = aBlock[0];

      swift_bridgeObjectRelease();
    }
  }
  id v36 = objc_msgSend(a1, sel_publisherID);
  if (v36)
  {
    unint64_t v37 = v36;
    uint64_t v38 = sub_1C151E62C();
    uint64_t v40 = v39;

    id v41 = objc_msgSend(a1, sel_publisherCohorts);
    if (v41)
    {
      id v42 = v41;
      id v43 = objc_msgSend(v41, sel_cohortWithPreferredType_, v17);

      if (v43)
      {
        id v44 = v43;
        char v45 = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v29;
        *uint64_t v30 = 0x8000000000000000;
        sub_1C106975C((uint64_t)v44, v38, v40, v45);
        *uint64_t v30 = aBlock[0];

        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v46 = swift_allocObject();
  *(_DWORD *)(v46 + 16) = v17;
  *(void *)(v46 + 24) = v28;
  unsigned __int8 v56 = sub_1C0F79588;
  uint64_t v57 = v46;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0F74E3C;
  long long v55 = &block_descriptor_55_1;
  id v47 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateTopicCohortsWithBlock_, v47);
  _Block_release(v47);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = sub_1C0F758D4(v48, a2, (uint64_t)v53, sub_1BFEABF78, (SEL *)&selRef_clicks, (SEL *)&selRef_rawClicks);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)v49;
}

uint64_t sub_1C0F72FE8(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_topicIDs);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_1C151EBCC();
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  unsigned int v7 = (void *)sub_1C0235F54(v6);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a1, sel_publisherID);
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = sub_1C151E62C();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1C0EE8248(0, v7[2] + 1, 1, v7);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_1C0EE8248((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  _OWORD v13[2] = v15 + 1;
  uint64_t v16 = &v13[2 * v15];
  long long v16[4] = v10;
  v16[5] = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFC66384(a2 + 40, (uint64_t)v30);
  uint64_t v18 = v31;
  uint64_t v17 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v19 = v13[2];
  if (v19)
  {
    uint64_t v29 = v17;
    swift_bridgeObjectRetain();
    uint64_t v20 = v13 + 5;
    id v21 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v23 = *v20;
      if (*v20)
      {
        uint64_t v24 = *(v20 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v21 = sub_1BFEF9B68(0, v21[2] + 1, 1, v21);
        }
        unint64_t v26 = v21[2];
        unint64_t v25 = v21[3];
        if (v26 >= v25 >> 1) {
          id v21 = sub_1BFEF9B68((void *)(v25 > 1), v26 + 1, 1, v21);
        }
        void v21[2] = v26 + 1;
        unint64_t v22 = &v21[2 * v26];
        v22[4] = v24;
        v22[5] = v23;
      }
      v20 += 2;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v17 = v29;
  }
  else
  {
    id v21 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = TagServiceType.fetchTags(for:qualityOfService:)((uint64_t)v21, 25, v18, v17);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v27;
}

uint64_t sub_1C0F73264(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v33 = a2;
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB088];
    sub_1C0F776DC(0, &qword_1EB871498, (uint64_t (*)(uint64_t))sub_1BFD35C60, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v30 = sub_1C151908C();
    MEMORY[0x1F4188790](v30);
    sub_1C0F776DC(0, &qword_1EA1A9708, (uint64_t (*)(uint64_t))sub_1C0F780A4, v29);
    swift_allocObject();
    sub_1C151911C();
    uint64_t v31 = sub_1C15192FC();
    swift_release();
    swift_release();
    return v31;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_26;
  }
LABEL_3:
  unint64_t v36 = v3 & 0xC000000000000001;
  id v5 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v6 = 4;
  uint64_t v35 = v3;
  while (1)
  {
    uint64_t v8 = v6 - 4;
    if (v36)
    {
      id v9 = (void *)MEMORY[0x1C18C7CB0](v6 - 4, v3);
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_22;
      }
    }
    else
    {
      id v9 = (void *)swift_unknownObjectRetain();
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    uint64_t v37 = v10;
    uint64_t v11 = v4;
    uint64_t v12 = v9;
    id v13 = objc_msgSend(v9, sel_identifier, v33, v34);
    uint64_t v14 = sub_1C151E62C();
    uint64_t v16 = v15;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = sub_1BFEF2D8C(v14, v16);
    uint64_t v20 = v5[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_23;
    }
    uint64_t v3 = v18;
    if (v5[3] < v22) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1C106AF50();
      if (v3)
      {
LABEL_4:
        uint64_t v7 = v5[7];
        swift_unknownObjectRelease();
        *(void *)(v7 + 8 * v19) = v12;
        goto LABEL_5;
      }
    }
LABEL_18:
    v5[(v19 >> 6) + 8] |= 1 << v19;
    unint64_t v25 = (uint64_t *)(v5[6] + 16 * v19);
    *unint64_t v25 = v14;
    v25[1] = v16;
    *(void *)(v5[7] + 8 * v19) = v12;
    uint64_t v26 = v5[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_24;
    }
    v5[2] = v28;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v6;
    uint64_t v4 = v11;
    uint64_t v3 = v35;
    if (v37 == v11) {
      goto LABEL_26;
    }
  }
  sub_1C10553D8(v22, isUniquelyReferenced_nonNull_native);
  unint64_t v23 = sub_1BFEF2D8C(v14, v16);
  if ((v3 & 1) == (v24 & 1))
  {
    unint64_t v19 = v23;
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

id sub_1C0F735EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v84 = a2;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = MEMORY[0x1F4188790](v13).n128_u64[0];
  uint64_t v16 = (char *)v70 - v15;
  id v17 = objc_msgSend(a3, sel_identifier, v14);
  uint64_t v18 = sub_1C151E62C();
  uint64_t v80 = v19;
  uint64_t v81 = v18;

  id v20 = objc_msgSend(a3, sel_title);
  uint64_t v21 = sub_1C151E62C();
  uint64_t v78 = v22;
  uint64_t v79 = v21;

  id v82 = a4;
  objc_msgSend(a4, sel_agedPersonalizationScore);
  uint64_t v24 = v23;
  id v25 = objc_msgSend(objc_msgSend(a3, sel_sourceChannel), sel_name);
  swift_unknownObjectRelease();
  uint64_t v26 = sub_1C151E62C();
  uint64_t v76 = v27;
  uint64_t v77 = v26;

  id v28 = objc_msgSend(a3, sel_publishDate);
  if (v28)
  {
    uint64_t v29 = v28;
    sub_1C15162BC();

    uint64_t v30 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 0, 1, v30);
  }
  else
  {
    uint64_t v30 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 1, 1, v30);
  }
  sub_1BFEEFBB8((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C151631C();
  uint64_t v31 = *(void *)(v30 - 8);
  int v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v16, 1, v30);
  if (v72 == 1)
  {
    sub_1C0F77858((uint64_t)v16, (uint64_t (*)(void))sub_1BFF97C40);
    uint64_t v32 = 0;
  }
  else
  {
    sub_1C151629C();
    uint64_t v32 = v33;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v30);
  }
  id v75 = objc_msgSend(a3, sel_halfLife);
  id v34 = objc_msgSend(objc_msgSend(a3, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v35 = sub_1C151E62C();
  uint64_t v73 = v36;
  uint64_t v74 = v35;

  uint64_t v85 = a5;
  uint64_t v37 = *(void **)(a5 + 24);
  id result = objc_msgSend(v37, sel_paidAccessChecker);
  if (!result)
  {
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v39 = result;
  uint64_t v71 = a6;
  unsigned int v40 = objc_msgSend(a3, sel_isPaid);
  unsigned int v41 = objc_msgSend(a3, sel_isBundlePaid);
  id v42 = objc_msgSend(objc_msgSend(a3, (SEL)&selRef_setMinimumLineHeight_), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v43 = sub_1C151E62C();
  uint64_t v45 = v44;

  if (!v40)
  {
    if (v41) {
      goto LABEL_13;
    }
LABEL_15:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  id v46 = objc_msgSend(objc_msgSend(v39, sel_purchaseProvider), sel_purchasedTagIDs);
  uint64_t v47 = sub_1C151EFBC();

  LOBYTE(v46) = sub_1BFF896B4(v43, v45, v47);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_15;
  }
  if (!v41) {
    goto LABEL_33;
  }
LABEL_13:
  uint64_t v48 = (char *)objc_msgSend(objc_msgSend(v39, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v49 = objc_getAssociatedObject(v48, v48 + 1);
  v70[1] = v43;
  if (v49)
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v88 = 0u;
    long long v89 = 0u;
  }
  uint64_t v51 = MEMORY[0x1E4FBC840];
  sub_1C0F77F04((uint64_t)&v88, (uint64_t)v87, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
  if (!v87[3])
  {
    sub_1BFEFE4A0((uint64_t)v87);
    goto LABEL_23;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    id v52 = 0;
    unint64_t v54 = 0;
    goto LABEL_24;
  }
  id v52 = v86[0];
  id v53 = objc_msgSend(v86[0], sel_integerValue);
  if (v53 == (id)-1)
  {

    goto LABEL_35;
  }
  unint64_t v54 = (unint64_t)v53;
LABEL_24:
  if (objc_getAssociatedObject(v48, (const void *)~v54))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v88 = 0u;
    long long v89 = 0u;
  }
  sub_1C0F77F04((uint64_t)&v88, (uint64_t)v87, (unint64_t *)&qword_1EB87A940, v51 + 8);
  if (!v87[3])
  {
    sub_1BFEFE4A0((uint64_t)v87);
LABEL_32:

    if (v54) {
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_32;
  }
  id v55 = v86[0];
  unsigned int v56 = objc_msgSend(v55, sel_integerValue);

  if ((v56 ^ v54))
  {
LABEL_35:
    id v57 = objc_msgSend(objc_msgSend(v39, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    id v58 = objc_msgSend(v57, sel_bundleChannelIDs);

    id v59 = (void *)sub_1C151E5EC();
    unsigned __int8 v60 = objc_msgSend(v58, sel_containsObject_, v59);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    if ((v60 & 1) == 0) {
      goto LABEL_36;
    }
LABEL_16:
    char v50 = 1;
    goto LABEL_37;
  }
LABEL_33:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
LABEL_36:
  char v50 = 0;
LABEL_37:
  if (objc_msgSend(a3, sel_isPaid)) {
    unsigned __int8 v61 = 1;
  }
  else {
    unsigned __int8 v61 = objc_msgSend(a3, sel_isBundlePaid);
  }
  id result = objc_msgSend(v37, sel_paidAccessChecker);
  if (!result) {
    goto LABEL_44;
  }
  unsigned __int8 v62 = objc_msgSend(result, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(a3, sel_sourceChannel));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id result = objc_msgSend(v37, sel_paidAccessChecker);
  if (result)
  {
    BOOL v63 = v72 == 1;
    unsigned __int8 v64 = objc_msgSend(result, sel_canGetSubscriptionToChannel_, objc_msgSend(a3, sel_sourceChannel));
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    id v65 = v82;
    id v66 = v82;
    sub_1C020CB34(v65, (uint64_t)&v88);
    sub_1C0F77F04((uint64_t)&v88, (uint64_t)v86, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    uint64_t v67 = v83;
    uint64_t v68 = sub_1C0F78C30(a3, v83);
    uint64_t v69 = sub_1C0F79EE4(v67, v84, v85, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))sub_1C0F7A270);
    v87[0] = v81;
    v87[1] = v80;
    v87[2] = v79;
    v87[3] = v78;
    v87[4] = v24;
    v87[5] = v77;
    v87[6] = v76;
    v87[7] = v32;
    LOBYTE(v87[8]) = v63;
    v87[9] = v75;
    v87[10] = v74;
    v87[11] = v73;
    LOBYTE(v87[12]) = v50;
    BYTE1(v87[12]) = v61;
    BYTE2(v87[12]) = v62;
    BYTE3(v87[12]) = v64;
    sub_1C0F77F04((uint64_t)v86, (uint64_t)&v87[13], &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    v87[68] = v68;
    v87[69] = v69;
    return memcpy(v71, v87, 0x230uLL);
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1C0F73F28(uint64_t a1, void *a2)
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EA2B5358;
  sub_1C151F36C();
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1527210;
  id v5 = objc_msgSend(a2, sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1BFE9C558();
  *(void *)(v4 + 64) = v10;
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v8;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v4 + 96) = v9;
  *(void *)(v4 + 104) = v10;
  *(void *)(v4 + 72) = 0;
  *(void *)(v4 + 80) = 0xE000000000000000;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F740DC(uint64_t a1, uint64_t a2)
{
  sub_1C0A1B250(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedWebEmbed();
  sub_1BFEEB204(a1 + *(int *)(v10 + 48), (uint64_t)v9, (uint64_t (*)(void))sub_1BFFFCF8C);
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) == 1)
  {
    sub_1C0F77858((uint64_t)v9, (uint64_t (*)(void))sub_1BFFFCF8C);
    uint64_t v12 = type metadata accessor for DebugInspectionHeadline(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    sub_1C0F776DC(0, &qword_1EA1A9738, (uint64_t (*)(uint64_t))sub_1C0A1B250, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    uint64_t v14 = *((void *)v9 + 5);
    swift_unknownObjectRetain();
    uint64_t v15 = sub_1C0F77858((uint64_t)v9, type metadata accessor for FeedHeadline);
    MEMORY[0x1F4188790](v15);
    v21[-2] = v14;
    v21[-1] = a2;
    sub_1BFC8BAC0();
    sub_1C151932C();
    v21[1] = MEMORY[0x1E4FBC868];
    uint64_t v16 = (void *)sub_1C1518E7C();
    sub_1BFD35C60();
    sub_1C0F7775C((unint64_t *)&qword_1EB879FA0, (void (*)(uint64_t))sub_1BFC8BAC0);
    sub_1C151915C();
    swift_release();

    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = v14;
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v18 = (void *)sub_1C1518E7C();
    type metadata accessor for DebugInspectionHeadline(0);
    sub_1C1518FEC();
    swift_release();
    swift_release();

    uint64_t v19 = (void *)sub_1C1518E7C();
    uint64_t v13 = sub_1C1518FFC();
    swift_unknownObjectRelease();
    swift_release();
  }
  return v13;
}

uint64_t sub_1C0F744A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0F78520(a1, a2);
  uint64_t v3 = type metadata accessor for DebugInspectionHeadline(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_1C0F74510(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for DebugInspectionWebEmbed();
  uint64_t v4 = (int *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0F79B70();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v37 = (uint64_t)&v36 - v14;
  sub_1C0A1B250(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v17;
  uint64_t v18 = *(int *)(v8 + 56);
  uint64_t v19 = (uint64_t)&v10[v18];
  uint64_t v20 = *(int *)(v8 + 72);
  uint64_t v21 = (uint64_t)&v10[v20];
  uint64_t v22 = a1;
  uint64_t v23 = a1 + v18;
  uint64_t v24 = a1 + v20;
  id v42 = sub_1C0A1B250;
  sub_1BFEEB204(v22, (uint64_t)v10, (uint64_t (*)(void))sub_1C0A1B250);
  sub_1BFEEB204(v23, v19, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFEEB204(v24, v21, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFEEFBB8((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(void))sub_1C0A1B250);
  uint64_t v25 = v37;
  sub_1BFEEFBB8(v19, v37, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v26 = v41;
  sub_1BFEEFBB8(v21, v41, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v40 = *(void *)(v43 + 40);
  uint64_t v38 = *(void *)(v43 + 48);
  uint64_t v27 = v43;
  uint64_t v28 = type metadata accessor for FeedWebEmbed();
  uint64_t v29 = v27 + *(int *)(v28 + 32);
  uint64_t v30 = (char *)v6 + v4[7];
  uint64_t v31 = sub_1C1515FDC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v30, v29, v31);
  sub_1BFEEB204(v25, (uint64_t)v6 + v4[8], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFEEB204(v26, (uint64_t)v6 + v4[9], (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v32 = (uint64_t)v39;
  sub_1BFEEB204((uint64_t)v39, (uint64_t)v6 + v4[10], (uint64_t (*)(void))v42);
  sub_1BFEEB204(v27 + *(int *)(v28 + 52), (uint64_t)v6 + v4[11], (uint64_t (*)(void))sub_1BFECFC20);
  uint64_t v33 = v38;
  void *v6 = v40;
  v6[1] = v33;
  sub_1C0F776DC(0, (unint64_t *)&unk_1EA1A9728, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionWebEmbed, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1C151908C();
  sub_1C0F77858(v26, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C0F77858(v25, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C0F77858(v32, (uint64_t (*)(void))sub_1C0A1B250);
  return v34;
}

uint64_t sub_1C0F74904(id *a1, uint64_t *a2, uint64_t a3)
{
  id v5 = *a1;
  uint64_t result = (uint64_t)objc_msgSend(*a1, sel_isHidden);
  if (result) {
    return result;
  }
  unsigned int v56 = a2;
  uint64_t result = (uint64_t)objc_msgSend(v5, sel_tagID);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v7 = (void *)result;
  uint64_t v8 = sub_1C151E62C();
  uint64_t v10 = v9;

  uint64_t result = (uint64_t)objc_msgSend(v5, sel_tagID);
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v11 = (void *)result;
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  uint64_t v54 = v10;
  if (*(void *)(a3 + 16) && (unint64_t v15 = sub_1BFEF2D8C(v12, v14), (v16 & 1) != 0))
  {
    uint64_t v17 = *(void **)(*(void *)(a3 + 56) + 8 * v15);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v17, sel_name);
    swift_unknownObjectRelease();
    uint64_t v19 = sub_1C151E62C();
    uint64_t v52 = v20;
    uint64_t v53 = v19;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v52 = 0;
    uint64_t v53 = 0;
  }
  unsigned int v21 = objc_msgSend(v5, sel_hasFlowRate);
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  if (v21)
  {
    objc_msgSend(v5, sel_flowRate);
    uint64_t v23 = v24;
  }
  unsigned int v25 = objc_msgSend(v5, sel_hasSubscriptionRate);
  if (v25)
  {
    objc_msgSend(v5, sel_subscriptionRate);
    uint64_t v22 = v26;
  }
  unsigned int v27 = objc_msgSend(v5, sel_hasQuality);
  uint64_t v28 = 0;
  if (v27)
  {
    objc_msgSend(v5, sel_quality);
    uint64_t v28 = v29;
  }
  unsigned int v30 = objc_msgSend(v5, sel_hasOntologyLevel);
  uint64_t v55 = v8;
  if (v30) {
    id v51 = objc_msgSend(v5, sel_ontologyLevel);
  }
  else {
    id v51 = 0;
  }
  unsigned int v31 = objc_msgSend(v5, sel_hasContentAndRelevanceInfo);
  if (v31)
  {
    uint64_t result = (uint64_t)objc_msgSend(v5, sel_contentAndRelevanceInfo);
    if (result)
    {
      uint64_t v32 = (void *)result;
      unsigned int v50 = objc_msgSend((id)result, sel_contentRating);

      goto LABEL_21;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unsigned int v50 = 0;
LABEL_21:
  unsigned int v33 = objc_msgSend(v5, sel_hasContentAndRelevanceInfo);
  if (!v33)
  {
    unsigned int v45 = 0;
    goto LABEL_25;
  }
  uint64_t result = (uint64_t)objc_msgSend(v5, sel_contentAndRelevanceInfo);
  if (!result)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  uint64_t v34 = (void *)result;
  unsigned int v45 = objc_msgSend((id)result, sel_relevanceRating);

LABEL_25:
  char v35 = v21 ^ 1;
  char v46 = v25 ^ 1;
  char v47 = v27 ^ 1;
  char v48 = v30 ^ 1;
  char v49 = v31 ^ 1;
  unsigned __int8 v36 = objc_msgSend(v5, sel_isManagedTopic);
  unsigned __int8 v37 = objc_msgSend(v5, sel_isManagedTopicWinner);
  unsigned __int8 v38 = objc_msgSend(v5, sel_isEligibleForGrouping);
  unsigned __int8 v39 = objc_msgSend(v5, sel_isEligibleForGroupingIfFavorited);
  unsigned __int8 v40 = objc_msgSend(v5, sel_isEligibleForGroupingIfAutofavorited);
  uint64_t v41 = (void *)*v56;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unsigned int v56 = (uint64_t)v41;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C0EE8380(0, v41[2] + 1, 1, v41);
    uint64_t v41 = (void *)result;
    *unsigned int v56 = result;
  }
  unint64_t v43 = v41[2];
  unint64_t v42 = v41[3];
  if (v43 >= v42 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C0EE8380((void *)(v42 > 1), v43 + 1, 1, v41);
    uint64_t v41 = (void *)result;
    *unsigned int v56 = result;
  }
  _OWORD v41[2] = v43 + 1;
  uint64_t v44 = &v41[14 * v43];
  v44[4] = v55;
  v44[5] = v54;
  v44[6] = v53;
  v44[7] = v52;
  v44[8] = v23;
  *((unsigned char *)v44 + 72) = v35;
  v44[10] = v22;
  *((unsigned char *)v44 + 88) = v46;
  v44[12] = v28;
  *((unsigned char *)v44 + 104) = v47;
  v44[14] = v51;
  *((unsigned char *)v44 + 120) = v48;
  *((_DWORD *)v44 + 31) = v50;
  *((unsigned char *)v44 + 128) = v49;
  *((_DWORD *)v44 + 33) = v45;
  *((unsigned char *)v44 + 136) = v33 ^ 1;
  *((unsigned char *)v44 + 137) = v36;
  *((unsigned char *)v44 + 138) = v37;
  *((unsigned char *)v44 + 139) = v38;
  *((unsigned char *)v44 + 140) = v39;
  *((unsigned char *)v44 + 141) = v40;
  return result;
}

void sub_1C0F74D5C(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5)
{
  id v8 = objc_msgSend(a3, sel_cohortWithPreferredType_, a4);
  if (v8)
  {
    uint64_t v9 = v8;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v10 = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *(void *)(a5 + 16);
    *(void *)(a5 + 16) = 0x8000000000000000;
    sub_1C106975C((uint64_t)v10, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(a5 + 16) = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
}

uint64_t sub_1C0F74E40(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v8 = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(a4 + 16);
  *(void *)(a4 + 16) = 0x8000000000000000;
  sub_1C1069774((uint64_t)v8, a1, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(a4 + 16) = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_1C0F74EFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, id))(a1 + 32);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;
  swift_retain();
  id v8 = a3;
  v4(v5, v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C0F74F90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, SEL *a3@<X3>, SEL *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  id v10 = (void *)a1[2];
  uint64_t v11 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain_n();
  id v12 = v10;
  if (v11)
  {
    unint64_t v13 = sub_1BFEF2D8C(v9, v8);
    if (v14)
    {
      unint64_t v15 = *(void **)(*(void *)(a2 + 56) + 8 * v13);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(v15, sel_name);
      uint64_t v34 = sub_1C151E62C();
      uint64_t v35 = v17;

      id v18 = objc_msgSend(v15, sel_identifier);
      uint64_t v9 = sub_1C151E62C();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();

      uint64_t v21 = v34;
      uint64_t v8 = v20;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = v9;
  uint64_t v35 = v8;
LABEL_6:
  objc_msgSend(v12, sel_impressions, v34);
  double v22 = 0.0;
  if (v23 > 0.0)
  {
    [v12 *a3];
    double v25 = v24;
    objc_msgSend(v12, sel_impressions);
    double v22 = v25 / v26;
  }
  [v12 *a4];
  uint64_t v28 = v27;
  [v12 *a3];
  uint64_t v30 = v29;
  objc_msgSend(v12, sel_impressions);
  uint64_t v32 = v31;

  uint64_t result = swift_unknownObjectRelease();
  *(void *)a5 = v21;
  *(void *)(a5 + 8) = v35;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = v9;
  *(void *)(a5 + 32) = v8;
  *(double *)(a5 + 40) = v22;
  *(void *)(a5 + 48) = v28;
  *(unsigned char *)(a5 + 56) = 0;
  *(void *)(a5 + 64) = v30;
  *(void *)(a5 + 72) = v32;
  *(void *)(a5 + 80) = 0;
  *(unsigned char *)(a5 + 88) = 1;
  return result;
}

uint64_t sub_1C0F7517C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = *(void **)(a5 + 32);
  if (objc_msgSend(v11, sel_respondsToSelector_, sel_fetchAggregateMapForPersonalizingItem_completion_))
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1BFD35658;
    *(void *)(v12 + 24) = v10;
    v15[4] = sub_1C0F795E8;
    v15[5] = v12;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 1107296256;
    _OWORD v15[2] = sub_1C0F75310;
    v15[3] = &block_descriptor_64;
    unint64_t v13 = _Block_copy(v15);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    objc_msgSend(v11, sel_fetchAggregateMapForPersonalizingItem_completion_, a6, v13);
    _Block_release(v13);
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

uint64_t sub_1C0F75310(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1BFC39268(0, &qword_1EA1A9670);
  sub_1BFC9DBE8(0, &qword_1EA1A9678);
  sub_1C0F7964C();
  uint64_t v2 = sub_1C151E33C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C0F753C8(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  swift_getObjectType();
  sub_1C0F794F0();
  id v12 = a1;
  swift_unknownObjectRetain();
  uint64_t v32 = sub_1C151E6AC();
  uint64_t v14 = v13;
  id v15 = sub_1C0F76588(v12, a4);
  id v16 = objc_msgSend(v12, sel_personalizationIdentifier);
  uint64_t v17 = sub_1C151E62C();
  uint64_t v19 = v18;

  id v20 = objc_msgSend(objc_msgSend(*(id *)(a3 + 24), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  id v21 = objc_msgSend(v20, sel_personalizationTreatment);
  swift_unknownObjectRelease();
  id v22 = objc_msgSend(v21, sel_defaultScoringConfig);

  if (v22)
  {
    objc_msgSend(v22, sel_decayFactor);
    double v24 = v23;

    objc_msgSend(a2, sel_personalizationValueWithBaseline_decayRate_, a5, v24);
    uint64_t v26 = v25;
    objc_msgSend(a2, sel_clicks);
    uint64_t v28 = v27;
    objc_msgSend(a2, sel_impressions);
    uint64_t v30 = v29;
    id v31 = objc_msgSend(a2, sel_eventCount);
    swift_unknownObjectRelease();

    *(void *)a6 = v32;
    *(void *)(a6 + 8) = v14;
    *(void *)(a6 + 16) = v15;
    *(void *)(a6 + 24) = v17;
    *(void *)(a6 + 32) = v19;
    *(void *)(a6 + 40) = v26;
    *(void *)(a6 + 48) = 0;
    *(unsigned char *)(a6 + 56) = 1;
    *(void *)(a6 + 64) = v28;
    *(void *)(a6 + 72) = v30;
    *(void *)(a6 + 80) = v31;
    *(unsigned char *)(a6 + 88) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_1C0F755DC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7 = 0;
  if (!*(void *)(a4 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1BFEF2D8C(a1, a2);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    a1 = 0;
    a2 = 0;
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    goto LABEL_9;
  }
  id v15 = *(id *)(*(void *)(a4 + 56) + 16 * v13);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v16 = v15;
  if (sub_1C0F76588(v16, a5))
  {
    sub_1C0F79594(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    uint64_t v17 = sub_1C151E55C();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getObjectType();
    sub_1C0F794F0();
    uint64_t v17 = sub_1C151E6AC();
    uint64_t v19 = v20;
  }
  swift_bridgeObjectRetain();
  objc_msgSend(a3, sel_doubleValue);
  uint64_t v7 = v21;
  swift_unknownObjectRelease();

LABEL_9:
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = v17;
  *(void *)(a6 + 24) = v19;
  *(void *)(a6 + 32) = v7;
  *(unsigned char *)(a6 + 40) = 0;
}

uint64_t sub_1C0F75784()
{
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  return v0;
}

uint64_t sub_1C0F757F0()
{
  sub_1C0F75784();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugInspector()
{
  return self;
}

uint64_t sub_1C0F75848()
{
  return sub_1C151911C();
}

uint64_t sub_1C0F758D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), SEL *a5, SEL *a6)
{
  uint64_t v7 = v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return v9;
  }
  uint64_t v11 = a1;
  uint64_t v70 = MEMORY[0x1E4FBC860];
  sub_1C05F847C(0, v8, 0);
  uint64_t v9 = v70;
  uint64_t result = a4(v11);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = v11 + 64;
  uint64_t v51 = v11 + 80;
  int64_t v52 = v8;
  int v53 = v13;
  uint64_t v54 = v11;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(v11 + 32))
  {
    unint64_t v19 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v11 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v58 = v15;
    uint64_t v20 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v14);
    uint64_t v21 = v20[1];
    id v22 = *(void **)(*(void *)(v11 + 56) + 8 * v14);
    v59[0] = *v20;
    v59[1] = v21;
    v59[2] = (uint64_t)v22;
    swift_bridgeObjectRetain();
    id v23 = v22;
    uint64_t v24 = v7;
    id v25 = v23;
    sub_1C0F74F90(v59, a2, a5, a6, (uint64_t)&v60);
    if (v24)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return v9;
    }

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v60;
    uint64_t v27 = v61;
    long long v28 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    uint64_t v31 = v65;
    char v32 = v66;
    long long v33 = v67;
    unint64_t v35 = *(void *)(v9 + 16);
    unint64_t v34 = *(void *)(v9 + 24);
    uint64_t v36 = v68;
    char v37 = v69;
    uint64_t v70 = v9;
    if (v35 >= v34 >> 1)
    {
      long long v49 = v67;
      long long v50 = v62;
      uint64_t v47 = v61;
      uint64_t v48 = v60;
      uint64_t v45 = v65;
      uint64_t v46 = v63;
      char v44 = v66;
      uint64_t result = sub_1C05F847C(v34 > 1, v35 + 1, 1);
      char v32 = v44;
      uint64_t v31 = v45;
      uint64_t v29 = v46;
      uint64_t v27 = v47;
      uint64_t v26 = v48;
      long long v33 = v49;
      long long v28 = v50;
      uint64_t v9 = v70;
    }
    *(void *)(v9 + 16) = v35 + 1;
    uint64_t v38 = v9 + 96 * v35;
    *(void *)(v38 + 32) = v26;
    *(void *)(v38 + 40) = v27;
    *(_OWORD *)(v38 + 48) = v28;
    *(void *)(v38 + 64) = v29;
    *(void *)(v38 + 72) = v30;
    *(void *)(v38 + 80) = v31;
    *(unsigned char *)(v38 + 88) = v32;
    *(_OWORD *)(v38 + 96) = v33;
    *(void *)(v38 + 112) = v36;
    *(unsigned char *)(v38 + 120) = v37;
    uint64_t v11 = v54;
    int64_t v17 = 1 << *(unsigned char *)(v54 + 32);
    if (v14 >= v17) {
      goto LABEL_27;
    }
    uint64_t v39 = *(void *)(v16 + 8 * v19);
    if ((v39 & (1 << v14)) == 0) {
      goto LABEL_28;
    }
    int v13 = v53;
    if (*(_DWORD *)(v54 + 36) != v53) {
      goto LABEL_29;
    }
    unint64_t v40 = v39 & (-2 << (v14 & 0x3F));
    if (v40)
    {
      int64_t v17 = __clz(__rbit64(v40)) | v14 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v7 = 0;
      int64_t v18 = v52;
    }
    else
    {
      unint64_t v41 = v19 + 1;
      unint64_t v42 = (unint64_t)(v17 + 63) >> 6;
      uint64_t v7 = 0;
      int64_t v18 = v52;
      if (v19 + 1 < v42)
      {
        unint64_t v43 = *(void *)(v16 + 8 * v41);
        if (v43)
        {
LABEL_21:
          int64_t v17 = __clz(__rbit64(v43)) + (v41 << 6);
        }
        else
        {
          while (v42 - 2 != v19)
          {
            unint64_t v43 = *(void *)(v51 + 8 * v19++);
            if (v43)
            {
              unint64_t v41 = v19 + 1;
              goto LABEL_21;
            }
          }
        }
      }
    }
    uint64_t v15 = v58 + 1;
    uint64_t v14 = v17;
    if (v58 + 1 == v18) {
      return v9;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C0F75BC0(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v4 = a1;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  sub_1C05F847C(0, v2, 0);
  uint64_t v3 = v41;
  uint64_t result = sub_1BFEABF78(v4);
  uint64_t v7 = result;
  uint64_t v8 = 0;
  uint64_t v9 = v4 + 64;
  uint64_t v33 = v4 + 80;
  int64_t v34 = v2;
  int v35 = v6;
  uint64_t v36 = v4 + 64;
  uint64_t v37 = v4;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(v4 + 32))
  {
    unint64_t v12 = (unint64_t)v7 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v4 + 36) != v6) {
      goto LABEL_24;
    }
    uint64_t v13 = *(void *)(v4 + 56);
    uint64_t v14 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v7);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v13 + 16 * v7;
    int64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    swift_bridgeObjectRetain();
    id v20 = v18;
    swift_unknownObjectRetain();
    a2(v39, v15, v16, v20, v19);
    swift_unknownObjectRelease();

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v41 = v3;
    unint64_t v22 = *(void *)(v3 + 16);
    unint64_t v21 = *(void *)(v3 + 24);
    if (v22 >= v21 >> 1)
    {
      uint64_t result = sub_1C05F847C(v21 > 1, v22 + 1, 1);
      uint64_t v3 = v41;
    }
    *(void *)(v3 + 16) = v22 + 1;
    id v23 = (_OWORD *)(v3 + 96 * v22);
    long long v24 = v39[1];
    v23[2] = v39[0];
    v23[3] = v24;
    long long v25 = v39[2];
    long long v26 = v39[3];
    long long v27 = v40[0];
    *(_OWORD *)((char *)v23 + 105) = *(_OWORD *)((char *)v40 + 9);
    v23[5] = v26;
    v23[6] = v27;
    v23[4] = v25;
    uint64_t v4 = v37;
    int64_t v10 = 1 << *(unsigned char *)(v37 + 32);
    if (v7 >= v10) {
      goto LABEL_25;
    }
    uint64_t v9 = v36;
    uint64_t v28 = *(void *)(v36 + 8 * v12);
    if ((v28 & (1 << v7)) == 0) {
      goto LABEL_26;
    }
    int v6 = v35;
    if (*(_DWORD *)(v37 + 36) != v35) {
      goto LABEL_27;
    }
    unint64_t v29 = v28 & (-2 << (v7 & 0x3F));
    if (v29)
    {
      int64_t v10 = __clz(__rbit64(v29)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v34;
    }
    else
    {
      unint64_t v30 = v12 + 1;
      unint64_t v31 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v34;
      if (v12 + 1 < v31)
      {
        unint64_t v32 = *(void *)(v36 + 8 * v30);
        if (v32)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v32)) + (v30 << 6);
        }
        else
        {
          while (v31 - 2 != v12)
          {
            unint64_t v32 = *(void *)(v33 + 8 * v12++);
            if (v32)
            {
              unint64_t v30 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    uint64_t v7 = v10;
    if (v8 == v11) {
      return v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0F75E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v9 = *(void *)(type metadata accessor for FeedItem(0) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0F6E5D8(v10, a2, a3, &v12);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v12)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1C0F75FC8(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t, uint64_t, id))
{
  uint64_t v26 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v35 = v3 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v30 = 0;
  long long v25 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v5 = v35;
  if (!v35) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v35 = (v5 - 1) & v5;
  for (unint64_t i = __clz(__rbit64(v5)) | (v30 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v11 = v10;
    a2(v31, v8, v9, v11);
    uint64_t v13 = v31[0];
    uint64_t v12 = v31[1];
    uint64_t v15 = v31[2];
    uint64_t v14 = v31[3];
    uint64_t v16 = v31[4];
    char v17 = v32;

    swift_bridgeObjectRelease();
    uint64_t result = sub_1C0F77F04((uint64_t)v31, (uint64_t)v33, &qword_1EA1A9700, (uint64_t)&type metadata for DebugInspectionCohort);
    if (v34)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C0EE84C8(0, v25[2] + 1, 1, v25);
        long long v25 = (void *)result;
      }
      unint64_t v23 = v25[2];
      unint64_t v22 = v25[3];
      if (v23 >= v22 >> 1)
      {
        uint64_t result = (uint64_t)sub_1C0EE84C8((void *)(v22 > 1), v23 + 1, 1, v25);
        long long v25 = (void *)result;
      }
      _DWORD v25[2] = v23 + 1;
      long long v24 = &v25[6 * v23];
      v24[4] = v13;
      v24[5] = v12;
      v24[6] = v15;
      v24[7] = v14;
      char v24[8] = v16;
      *((unsigned char *)v24 + 72) = v17 & 1;
      unint64_t v5 = v35;
      if (v35) {
        goto LABEL_4;
      }
    }
    else
    {
      unint64_t v5 = v35;
      if (v35) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v18 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v27) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v26 + 8 * v18);
    int64_t v20 = v30 + 1;
    if (!v19)
    {
      int64_t v20 = v30 + 2;
      if (v30 + 2 >= v27) {
        goto LABEL_29;
      }
      unint64_t v19 = *(void *)(v26 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v30 + 3;
        if (v30 + 3 >= v27) {
          goto LABEL_29;
        }
        unint64_t v19 = *(void *)(v26 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v30 + 4;
          if (v30 + 4 >= v27) {
            goto LABEL_29;
          }
          unint64_t v19 = *(void *)(v26 + 8 * v20);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v35 = (v19 - 1) & v19;
    int64_t v30 = v20;
  }
  int64_t v21 = v30 + 5;
  if (v30 + 5 >= v27)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v25;
  }
  unint64_t v19 = *(void *)(v26 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v30 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v27) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v26 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1C0F762A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    while (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      if (*(void *)(a2 + 16))
      {
LABEL_23:
        uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
        uint64_t v16 = *v15;
        uint64_t v17 = v15[1];
        id v18 = *(id *)(*(void *)(a1 + 56) + 8 * v11);
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_1BFEF2D8C(v16, v17);
        if (v20)
        {
          id v36 = *(id *)(*(void *)(a2 + 56) + 8 * v19);
          id v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          uint64_t v22 = sub_1C151E62C();
          uint64_t v34 = v23;
          uint64_t v35 = v22;

          id v24 = objc_msgSend(v36, sel_name);
          uint64_t v25 = sub_1C151E62C();
          uint64_t v32 = v26;
          uint64_t v33 = v25;

          objc_msgSend(v18, sel_doubleValue);
          uint64_t v28 = v27;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v37 = sub_1C0EE84C8(0, v37[2] + 1, 1, v37);
          }
          unint64_t v30 = v37[2];
          unint64_t v29 = v37[3];
          if (v30 >= v29 >> 1) {
            uint64_t v37 = sub_1C0EE84C8((void *)(v29 > 1), v30 + 1, 1, v37);
          }
          v37[2] = v30 + 1;
          unint64_t v31 = &v37[6 * v30];
          __n128 v31[4] = v35;
          void v31[5] = v34;
          v31[6] = v33;
          v31[7] = v32;
          v31[8] = v28;
          *((unsigned char *)v31 + 72) = 0;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v8) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_30;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v8) {
            goto LABEL_30;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    if (*(void *)(a2 + 16)) {
      goto LABEL_23;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_30:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_32:
  __break(1u);
}

id sub_1C0F76588(void *a1, uint64_t a2)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = a1;
    id v7 = objc_msgSend(v5, sel_publisherTagID);
    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;

    if (!*(void *)(a2 + 16) || (unint64_t v11 = sub_1BFEF2D8C(v8, v10), (v12 & 1) == 0))
    {

      swift_bridgeObjectRelease();
      return 0;
    }
    unint64_t v13 = *(void **)(*(void *)(a2 + 56) + 8 * v11);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v5, sel_topicTagID);
    uint64_t v15 = sub_1C151E62C();
    uint64_t v17 = v16;

    if (*(void *)(a2 + 16))
    {
      unint64_t v18 = sub_1BFEF2D8C(v15, v17);
      if (v19)
      {
        char v20 = *(void **)(*(void *)(a2 + 56) + 8 * v18);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1C0F79594(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
        id v22 = objc_msgSend(v13, sel_name);
        uint64_t v23 = sub_1C151E62C();
        uint64_t v25 = v24;

        *(void *)(v21 + 32) = v23;
        *(void *)(v21 + 40) = v25;
        id v26 = objc_msgSend(v20, sel_name);
        uint64_t v27 = sub_1C151E62C();
        uint64_t v29 = v28;

        *(void *)(v21 + 48) = v27;
        *(void *)(v21 + 56) = v29;

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return (id)v21;
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_19:

    return 0;
  }
  self;
  uint64_t v30 = swift_dynamicCastObjCClass();
  if (v30)
  {
    unint64_t v31 = (void *)v30;
    id v6 = a1;
    id v32 = objc_msgSend(v31, sel_lengthID);
    uint64_t v33 = sub_1C151E62C();
    uint64_t v35 = v34;

    BOOL v36 = v33 == 115 && v35 == 0xE100000000000000;
    if (v36 || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();

      return &unk_1F1B64D28;
    }
    BOOL v45 = v33 == 109 && v35 == 0xE100000000000000;
    if (v45 || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();

      return &unk_1F1B64D58;
    }
    if (v33 == 108 && v35 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v58 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if ((v58 & 1) == 0) {
        goto LABEL_19;
      }
    }

    return &unk_1F1B64D88;
  }
  self;
  uint64_t v37 = swift_dynamicCastObjCClass();
  if (!v37)
  {
    id v46 = objc_msgSend(a1, sel_tagID);
    if (!v46) {
      return 0;
    }
    uint64_t v47 = v46;
    uint64_t v48 = sub_1C151E62C();
    uint64_t v50 = v49;

    if (*(void *)(a2 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_1BFEF2D8C(v48, v50);
      if (v52)
      {
        int v53 = *(void **)(*(void *)(a2 + 56) + 8 * v51);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease_n();
        sub_1C0F79594(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
        id v54 = objc_msgSend(v53, sel_name);
        uint64_t v55 = sub_1C151E62C();
        uint64_t v57 = v56;

        *(void *)(v21 + 32) = v55;
        *(void *)(v21 + 40) = v57;
        swift_unknownObjectRelease();
        return (id)v21;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C0F79594(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
    *(void *)(v21 + 32) = v48;
    *(void *)(v21 + 40) = v50;
    return (id)v21;
  }
  uint64_t v38 = (void *)v37;
  sub_1C0F79594(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
  id v39 = a1;
  objc_msgSend(v38, sel_groupType);
  id result = (id)NSStringFromFCFeedGroupType();
  if (result)
  {
    uint64_t v41 = result;
    uint64_t v42 = sub_1C151E62C();
    uint64_t v44 = v43;

    *(void *)(v21 + 32) = v42;
    *(void *)(v21 + 40) = v44;

    return (id)v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0F76AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v40 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  id v39 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    while (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (*(void *)(a2 + 16))
      {
LABEL_23:
        uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
        uint64_t v17 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
        uint64_t v18 = *v16;
        uint64_t v19 = v16[1];
        swift_bridgeObjectRetain_n();
        id v20 = v17;
        unint64_t v21 = sub_1BFEF2D8C(v18, v19);
        if (v22)
        {
          id v36 = *(id *)(*(void *)(a2 + 56) + 16 * v21);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          id v23 = v36;
          id v24 = sub_1C0F76588(v23, a3);
          if (v24)
          {
            id v34 = v24;
            sub_1C0F79594(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
            sub_1BFE99E40();
            uint64_t v25 = sub_1C151E55C();
            uint64_t v35 = v26;
            uint64_t v37 = v25;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_getObjectType();
            sub_1C0F794F0();
            uint64_t v27 = sub_1C151E6AC();
            uint64_t v35 = v28;
            uint64_t v37 = v27;
          }
          objc_msgSend(v20, sel_doubleValue, v34);
          uint64_t v30 = v29;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C0EE84C8(0, v39[2] + 1, 1, v39);
            id v39 = (void *)result;
          }
          unint64_t v32 = v39[2];
          unint64_t v31 = v39[3];
          if (v32 >= v31 >> 1)
          {
            uint64_t result = (uint64_t)sub_1C0EE84C8((void *)(v31 > 1), v32 + 1, 1, v39);
            id v39 = (void *)result;
          }
          void v39[2] = v32 + 1;
          uint64_t v33 = &v39[6 * v32];
          v33[4] = v18;
          v33[5] = v19;
          v33[6] = v37;
          v33[7] = v35;
          char v33[8] = v30;
          *((unsigned char *)v33 + 72) = 0;
        }
        else
        {

          uint64_t result = swift_bridgeObjectRelease_n();
        }
      }
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v13 >= v40) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v40) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v40) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(void *)(a2 + 16)) {
      goto LABEL_23;
    }
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v40)
  {
LABEL_33:
    swift_release();
    return (uint64_t)v39;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v40) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void *sub_1C0F76E50(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
    swift_bridgeObjectRelease();
    return v33;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C15204BC();
  if (!v4) {
    goto LABEL_20;
  }
LABEL_3:
  unint64_t v32 = v3 & 0xC000000000000001;
  uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = 4;
  uint64_t v29 = v4;
  unint64_t v30 = v3;
  while (1)
  {
    if (v32) {
      id v6 = (id)MEMORY[0x1C18C7CB0](v5 - 4, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5);
    }
    uint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    uint64_t result = objc_msgSend(v6, sel_tagID);
    if (!result) {
      break;
    }
    int64_t v10 = result;
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;

    if (*(void *)(a2 + 16) && (unint64_t v14 = sub_1BFEF2D8C(v11, v13), (v15 & 1) != 0))
    {
      uint64_t v16 = *(void **)(*(void *)(a2 + 56) + 8 * v14);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v16, sel_identifier);
      uint64_t v18 = sub_1C151E62C();
      uint64_t v31 = v19;

      id v20 = objc_msgSend(v16, sel_name);
      uint64_t v21 = sub_1C151E62C();
      uint64_t v23 = v22;

      objc_msgSend(v7, sel_score);
      uint64_t v25 = v24;

      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_1C0EE84C8(0, v33[2] + 1, 1, v33);
      }
      unint64_t v27 = v33[2];
      unint64_t v26 = v33[3];
      if (v27 >= v26 >> 1) {
        uint64_t v33 = sub_1C0EE84C8((void *)(v26 > 1), v27 + 1, 1, v33);
      }
      v33[2] = v27 + 1;
      uint64_t v28 = &v33[6 * v27];
      unint64_t v3 = v30;
      v28[4] = v18;
      void v28[5] = v31;
      v28[6] = v21;
      v28[7] = v23;
      v28[8] = v25;
      *((unsigned char *)v28 + 72) = 0;
      uint64_t v4 = v29;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    ++v5;
    if (v8 == v4) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0F770D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7)
{
  uint64_t v8 = v7;
  long long v19 = *a6;
  uint64_t v14 = *((void *)a6 + 2);
  uint64_t v15 = *((void *)a6 + 3);
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a2;
  sub_1BFC66384(a3, v8 + 40);
  sub_1BFC66384(a4, v8 + 128);
  *(_OWORD *)(v8 + 96) = v19;
  *(void *)(v8 + 112) = v14;
  *(void *)(v8 + 120) = v15;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 88) = a7;
  id v16 = a1;
  swift_unknownObjectRetain();
  sub_1C0F6DE28();
  id v17 = (void *)sub_1C1518E7C();
  sub_1C151909C();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t sub_1C0F771D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  sub_1BFC66384(a1 + 40, (uint64_t)v16);
  sub_1BFC66384(a1 + 128, (uint64_t)v15);
  uint64_t v12 = *(void *)(a1 + 80);
  id v6 = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C104A2D4(a2);
  sub_1C0AD0F54(0);
  sub_1C0F7775C((unint64_t *)&qword_1EB894420, sub_1C0AD0F54);
  uint64_t v7 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  long long v13 = *(_OWORD *)(a1 + 104);
  uint64_t v14 = v8;
  type metadata accessor for DebugInspector();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C0F770D8(v6, v4, (uint64_t)v16, (uint64_t)v15, v7, (long long *)&v12, v9);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1C0F77378(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  sub_1BFC66384(a3, v7 + 40);
  sub_1BFC66384(a4, v7 + 128);
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  uint64_t v13 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v14 = (void *)(a5 + *(int *)(v13 + 24));
  if (a6)
  {
    uint64_t v38 = a6;
    uint64_t v16 = v14[4];
    uint64_t v15 = v14[5];
    __swift_project_boxed_opaque_existential_1(v14 + 1, v16);
    id v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
    id v18 = a1;
    swift_unknownObjectRetain();
    v41[0] = v17(v16, v15);
    sub_1C104A2D4(v38);
    sub_1C0AD0F54(0);
    sub_1C0F7775C((unint64_t *)&qword_1EB894420, sub_1C0AD0F54);
    uint64_t v19 = sub_1C151E92C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v14[4];
    uint64_t v21 = v14[5];
    __swift_project_boxed_opaque_existential_1(v14 + 1, v20);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
    id v23 = a1;
    swift_unknownObjectRetain();
    uint64_t v19 = v22(v20, v21);
  }
  *(void *)(v7 + 80) = v19;
  type metadata accessor for DebugGroupLayoutKey();
  uint64_t v24 = (void *)(a5 + *(int *)(v13 + 24));
  uint64_t v25 = v24[4];
  uint64_t v26 = v24[5];
  __swift_project_boxed_opaque_existential_1(v24 + 1, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 64))(v41, v25, v26);
  sub_1C0A5DDEC((uint64_t)v41, (uint64_t *)v44);
  long long v27 = v44[1];
  *(_OWORD *)(v7 + 96) = v44[0];
  *(_OWORD *)(v7 + 112) = v27;
  uint64_t v28 = v24[4];
  uint64_t v29 = v24[5];
  __swift_project_boxed_opaque_existential_1(v24 + 1, v28);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v29 + 64))(v41, v28, v29);
  uint64_t v30 = v42;
  if (!v42)
  {
    sub_1BFD10564((uint64_t)v41);
LABEL_9:
    uint64_t v35 = v39;
    uint64_t v34 = v40;
    uint64_t v33 = MEMORY[0x1E4FBC870];
    goto LABEL_10;
  }
  uint64_t v31 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
  if (!v32)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    goto LABEL_9;
  }
  uint64_t v33 = *(void *)(v32 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  uint64_t v35 = v39;
  uint64_t v34 = v40;
LABEL_10:
  *(void *)(v7 + 88) = v33;
  sub_1C0F6DE28();
  id v36 = (void *)sub_1C1518E7C();
  sub_1C151909C();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v35);
  __swift_destroy_boxed_opaque_existential_1(v34);
  sub_1C0F77858(a5, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  return v7;
}

void sub_1C0F776DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0F77740()
{
  return sub_1C0F6E074(v0);
}

uint64_t sub_1C0F7775C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F777A4(uint64_t *a1)
{
  return sub_1C0F6E450(a1, v1);
}

uint64_t sub_1C0F777C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0F77810@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F7049C(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_1C0F77820()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F77858(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0F778B8()
{
  uint64_t v1 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  if (*(void *)(v2 + 32) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 32);
  swift_unknownObjectRelease();
  uint64_t v4 = v3 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_14;
    case 1u:
      type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        uint64_t v6 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6))
        {
          uint64_t v7 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
        }
      }
      uint64_t v8 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v9 = v4 + *(int *)(v8 + 20);
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 5 || v10 == 4)
      {
        uint64_t v11 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11))
        {
          uint64_t v12 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v9, v12);
        }
      }
      v4 += *(int *)(v8 + 24);
LABEL_14:
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 5 || v13 == 4)
      {
        uint64_t v14 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14)) {
          goto LABEL_25;
        }
      }
      break;
    case 2u:
      uint64_t v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v4, 1, v15))
      {
        uint64_t v16 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v4, v16);
        uint64_t v17 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        uint64_t v18 = v4 + *(int *)(v17 + 24);
        swift_bridgeObjectRelease();
        unint64_t v19 = *(void *)(v18 + 24);
        if (v19 >> 60 != 15) {
          sub_1BFE95664(*(void *)(v18 + 16), v19);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 3u:
      uint64_t v20 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v21 = v4 + *(int *)(v20 + 24);
      uint64_t v22 = type metadata accessor for PuzzleStreak();
      id v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
      if (!v23(v21, 1, v22))
      {
        uint64_t v24 = sub_1C151555C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v21, v24);
      }
      v4 += *(int *)(v20 + 28);
      if (!v23(v4, 1, v22))
      {
LABEL_25:
        uint64_t v25 = sub_1C151555C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v4, v25);
      }
      break;
    default:
      break;
  }
  return swift_deallocObject();
}

uint64_t sub_1C0F77D88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F77FF0(a1, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic, 0xD000000000000010, 0x80000001C1630320, a2);
}

uint64_t sub_1C0F77DCC()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F77E1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F70308(a1, v2 + 16, a2);
}

uint64_t sub_1C0F77E38()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  }
  if (*(void *)(v0 + 168)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  }
  if (*(void *)(v0 + 208)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0F77EC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F70270(a1, v2 + 16, a2);
}

uint64_t sub_1C0F77EE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0F701B4(a1, v2 + 16, a2);
}

uint64_t sub_1C0F77F04(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C0F79594(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0F77F88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0F70110(a1, (id *)(v2 + 16), a2);
}

uint64_t sub_1C0F77FB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F77FF0(a1, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed, 0x6465626D45626577, 0xE800000000000000, a2);
}

uint64_t sub_1C0F77FF0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = *(void *)(a2(0) - 8);
  return sub_1C0F70420(a1, v5 + ((*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a3, a4, a5);
}

uint64_t sub_1C0F7808C()
{
  return sub_1C0F79C54();
}

void sub_1C0F780A4()
{
  if (!qword_1EA1A9660)
  {
    sub_1C0F7810C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9660);
    }
  }
}

void sub_1C0F7810C()
{
  if (!qword_1EA1A9668)
  {
    sub_1BFC39268(255, &qword_1EA1A9670);
    sub_1BFC9DBE8(255, &qword_1EA1A9678);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A9668);
    }
  }
}

void *sub_1C0F781A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0F70CBC(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1C0F781C4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F781FC(uint64_t a1)
{
  return sub_1C0F73F28(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C0F78224()
{
  uint64_t v1 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v3 = v1[10];
  uint64_t v4 = v2 + v3 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v5 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);

    uint64_t v7 = v4 + *(int *)(v5 + 28);
    uint64_t v8 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v2 + v1[11];
  uint64_t v10 = sub_1C151D2DC();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  if (*(void *)(v2 + v1[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v2 + v1[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_1C0F784A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for FeedHeadline(0) - 8);
  return sub_1C0F6F954(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1C0F78520(uint64_t a1, uint64_t a2)
{
  return sub_1BFEEB204(a1, a2, type metadata accessor for DebugInspectionHeadline);
}

uint64_t sub_1C0F78538(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC868];
  *(void *)(v4 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v6 = (void *)(v4 + 16);
  id v7 = objc_msgSend(a1, sel_globalConversionStats);
  if (v7)
  {
    id v8 = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v5;
    void *v6 = 0x8000000000000000;
    sub_1C1069774((uint64_t)v8, 42, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
    uint64_t v5 = aBlock[0];
    void *v6 = aBlock[0];

    swift_bridgeObjectRelease();
  }
  id v10 = objc_msgSend(a1, sel_publisherID);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_1C151E62C();
    uint64_t v14 = v13;

    id v15 = objc_msgSend(a1, sel_publisherConversionStats);
    if (v15)
    {
      id v16 = v15;
      char v17 = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v5;
      void *v6 = 0x8000000000000000;
      sub_1C1069774((uint64_t)v16, v12, v14, v17);
      void *v6 = aBlock[0];

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  aBlock[4] = sub_1C0F79580;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0F74E3C;
  void aBlock[3] = &block_descriptor_74;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateTopicConversionStatsWithBlock_, v18);
  _Block_release(v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C0F758D4(v19, a2, (uint64_t)&v22, sub_1BFEABF78, (SEL *)&selRef_conversions, (SEL *)&selRef_conversions);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

void *sub_1C0F787BC(void *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  int v53 = (void *)MEMORY[0x1E4FBC860];
  id v5 = objc_msgSend(a1, sel_publisherID);
  if (!v5) {
    goto LABEL_26;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v3, sel_publisherTagMetadata);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v11 = v10;
  uint64_t v50 = v7;
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEF2D8C(v7, v9);
    if (v13)
    {
      uint64_t v14 = *(void **)(*(void *)(a2 + 56) + 8 * v12);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(v14, sel_name);
      swift_unknownObjectRelease();
      uint64_t v16 = sub_1C151E62C();
      uint64_t v49 = v17;

      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = 0;
  uint64_t v49 = 0;
LABEL_9:
  unsigned int v18 = objc_msgSend(v11, sel_hasFlowRate);
  double v19 = 0.0;
  double v20 = 0.0;
  if (v18)
  {
    objc_msgSend(v11, sel_flowRate);
    double v20 = v21;
  }
  unsigned int v22 = objc_msgSend(v11, sel_hasSubscriptionRate);
  if (v22)
  {
    objc_msgSend(v11, sel_subscriptionRate);
    double v19 = v23;
  }
  unsigned int v24 = objc_msgSend(v11, sel_hasQuality);
  double v25 = 0.0;
  if (v24)
  {
    objc_msgSend(v11, sel_quality);
    double v25 = v26;
  }
  unsigned int v27 = objc_msgSend(v11, sel_hasContentAndRelevanceInfo);
  unint64_t v51 = v3;
  if (v27)
  {
    uint64_t result = objc_msgSend(v11, sel_contentAndRelevanceInfo);
    if (!result)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v29 = result;
    unsigned int v47 = objc_msgSend(result, sel_contentRating);
  }
  else
  {
    unsigned int v47 = 0;
  }
  uint64_t v48 = v16;
  unsigned int v30 = objc_msgSend(v11, sel_hasContentAndRelevanceInfo);
  if (!v30)
  {
    unsigned int v46 = 0;
    goto LABEL_23;
  }
  uint64_t result = objc_msgSend(v11, sel_contentAndRelevanceInfo);
  if (result)
  {
    uint64_t v31 = result;
    unsigned int v46 = objc_msgSend(result, sel_relevanceRating);

LABEL_23:
    char v32 = v18 ^ 1;
    char v33 = v22 ^ 1;
    char v34 = v27 ^ 1;
    char v35 = v30 ^ 1;
    uint64_t v4 = sub_1C0EE8380(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v37 = v4[2];
    unint64_t v36 = v4[3];
    if (v37 >= v36 >> 1) {
      uint64_t v4 = sub_1C0EE8380((void *)(v36 > 1), v37 + 1, 1, v4);
    }
    v4[2] = v37 + 1;
    uint64_t v38 = &v4[14 * v37];
    v38[4] = v50;
    v38[5] = v9;
    v38[6] = v48;
    v38[7] = v49;
    *((double *)v38 + 8) = v20;
    *((unsigned char *)v38 + 72) = v32;
    *((double *)v38 + 10) = v19;
    *((unsigned char *)v38 + 88) = v33;
    *((double *)v38 + 12) = v25;
    *((unsigned char *)v38 + 104) = v24 ^ 1;
    v38[14] = 0;
    *((unsigned char *)v38 + 120) = 1;
    *((_DWORD *)v38 + 31) = v47;
    *((unsigned char *)v38 + 128) = v34;
    *((_DWORD *)v38 + 33) = v46;
    *((unsigned char *)v38 + 136) = v35;
    *(_DWORD *)((char *)v38 + 137) = 0;
    *((unsigned char *)v38 + 141) = 0;

    int v53 = v4;
    uint64_t v3 = v51;
LABEL_26:
    id v39 = objc_msgSend(v3, sel_topics);
    if (v39)
    {
      uint64_t v40 = v39;
      sub_1BFC39268(0, &qword_1EB85F208);
      unint64_t v41 = sub_1C151EBCC();

      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = (void *)sub_1C15204BC();
        uint64_t v42 = (uint64_t)result;
        if (result) {
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = (void *)swift_bridgeObjectRetain();
        if (v42)
        {
LABEL_29:
          if (v42 >= 1)
          {
            uint64_t v43 = 0;
            do
            {
              if ((v41 & 0xC000000000000001) != 0) {
                id v44 = (id)MEMORY[0x1C18C7CB0](v43, v41);
              }
              else {
                id v44 = *(id *)(v41 + 8 * v43 + 32);
              }
              BOOL v45 = v44;
              ++v43;
              id v52 = v44;
              sub_1C0F74904(&v52, (uint64_t *)&v53, a2);
            }
            while (v42 != v43);
            swift_bridgeObjectRelease_n();
            return v53;
          }
          __break(1u);
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRelease_n();
    }
    return v4;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C0F78C30(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_topicIDs);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = sub_1C151EBCC();
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1C0B6CC64(v6, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t result = sub_1C05F849C(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = 0;
    uint64_t v11 = v4;
    unint64_t v25 = v7 & 0xC000000000000001;
    unint64_t v12 = v7;
    do
    {
      if (v25)
      {
        char v13 = (void *)MEMORY[0x1C18C7CB0](v10, v7);
      }
      else
      {
        char v13 = *(void **)(v7 + 8 * v10 + 32);
        swift_unknownObjectRetain();
      }
      id v14 = objc_msgSend(v13, sel_identifier);
      uint64_t v15 = sub_1C151E62C();
      uint64_t v17 = v16;

      id v18 = objc_msgSend(v13, sel_name);
      uint64_t v19 = sub_1C151E62C();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();

      unint64_t v23 = *(void *)(v11 + 16);
      unint64_t v22 = *(void *)(v11 + 24);
      if (v23 >= v22 >> 1) {
        sub_1C05F849C(v22 > 1, v23 + 1, 1);
      }
      ++v10;
      *(void *)(v11 + 16) = v23 + 1;
      unsigned int v24 = (void *)(v11 + 32 * v23);
      v24[4] = v15;
      v24[5] = v17;
      v24[6] = v19;
      v24[7] = v21;
      unint64_t v7 = v12;
    }
    while (v8 != v10);
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void sub_1C0F78E5C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C0F755DC(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 32), a4);
}

unint64_t sub_1C0F78E68(void *a1)
{
  unint64_t v1 = 0xD00000000000001CLL;
  if (!a1) {
    return 0xD000000000000010;
  }
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_debugFields);
  unint64_t v4 = (unint64_t)objc_msgSend(v3, sel_groupingReason);

  if ((v4 & 0x8000000000000000) != 0)
  {
    sub_1C15203FC();
    __break(1u);
    JUMPOUT(0x1C0F790E8);
  }
  switch(v4)
  {
    case 0uLL:

      unint64_t v1 = 0x6E776F6E6B6E55;
      break;
    case 1uLL:

      unint64_t v1 = 0x6465747065636341;
      break;
    case 2uLL:

      unint64_t v1 = 0xD000000000000016;
      break;
    case 3uLL:

      unint64_t v1 = 0xD00000000000001DLL;
      break;
    case 4uLL:

      unint64_t v1 = 0xD000000000000019;
      break;
    case 5uLL:

      unint64_t v1 = 0xD000000000000013;
      break;
    case 6uLL:

      unint64_t v1 = 0xD000000000000024;
      break;
    case 7uLL:

      unint64_t v1 = 0x2064657070696B53;
      break;
    case 8uLL:
    case 9uLL:

      break;
    default:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(v2, sel_debugFields);
      objc_msgSend(v6, sel_groupingReason);

      sub_1C152088C();
      sub_1C151E80C();

      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000015;
      break;
  }
  return v1;
}

unint64_t sub_1C0F79110(void *a1)
{
  if (!a1) {
    return 0xD000000000000010;
  }
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_debugFields);
  id v3 = objc_msgSend(v2, sel_scoringContext);

  unint64_t v4 = 0x746C7561666544;
  switch((unint64_t)v3)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v4 = 0x6546206369706F54;
      break;
    case 3uLL:
      unint64_t v4 = 0xD00000000000001BLL;
      break;
    case 4uLL:
      unint64_t v4 = 0xD000000000000013;
      break;
    case 6uLL:
    case 0xFuLL:
    case 0x13uLL:
    case 0x15uLL:
    case 0x1EuLL:
      unint64_t v4 = 0xD00000000000001DLL;
      break;
    case 7uLL:
      unint64_t v4 = 0xD000000000000019;
      break;
    case 8uLL:
      unint64_t v4 = 0xD000000000000018;
      break;
    case 9uLL:
      unint64_t v4 = 0xD00000000000001ALL;
      break;
    case 0xAuLL:
      unint64_t v4 = 0x20666F2074736542;
      break;
    case 0xBuLL:
      unint64_t v4 = 0x756F5920726F46;
      break;
    case 0xCuLL:
      unint64_t v4 = 0xD000000000000018;
      break;
    case 0xDuLL:
      unint64_t v4 = 0x532074736574614CLL;
      break;
    case 0xEuLL:
      unint64_t v4 = 0x654E206C61636F4CLL;
      break;
    case 0x10uLL:
      unint64_t v4 = 0x6957207961646F54;
      break;
    case 0x11uLL:
      unint64_t v4 = 0x6764695720676154;
      break;
    case 0x14uLL:
      unint64_t v4 = 0xD000000000000017;
      break;
    case 0x16uLL:
      unint64_t v4 = 0x6867696C68676948;
      break;
    case 0x17uLL:
      unint64_t v4 = 0xD00000000000001BLL;
      break;
    case 0x18uLL:
      unint64_t v4 = 0x6465654620676154;
      break;
    case 0x19uLL:
      unint64_t v4 = 0xD00000000000001ALL;
      break;
    case 0x1AuLL:
      unint64_t v4 = 0x726F462065726F4DLL;
      break;
    case 0x1BuLL:
      unint64_t v4 = 0xD00000000000001FLL;
      break;
    case 0x1CuLL:
      unint64_t v4 = 0xD000000000000024;
      break;
    case 0x1DuLL:
      unint64_t v4 = 0xD00000000000001ALL;
      break;
    case 0x1FuLL:
      unint64_t v4 = 0xD00000000000001BLL;
      break;
    case 0x20uLL:
      unint64_t v4 = 0xD000000000000017;
      break;
    case 0x21uLL:
      unint64_t v4 = 0xD000000000000016;
      break;
    default:
      unint64_t v4 = 0x6E776F6E6B6E55;
      break;
  }

  return v4;
}

unint64_t sub_1C0F794F0()
{
  unint64_t result = qword_1EA1A96F0;
  if (!qword_1EA1A96F0)
  {
    sub_1BFC39268(255, &qword_1EA1A9670);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A96F0);
  }
  return result;
}

void sub_1C0F7953C(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  sub_1C0F753C8(a1, a2, v3[2], v3[3], v3[4], a3);
}

uint64_t sub_1C0F79548()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F79580(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C0F74E40(a1, a2, a3, v3);
}

void sub_1C0F79588(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C0F74D5C(a1, a2, a3, *(unsigned int *)(v3 + 16), *(void *)(v3 + 24));
}

void sub_1C0F79594(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0F795E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0F7517C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C0F795E8(unint64_t a1)
{
  id v2 = *(void (**)(void))(v1 + 16);
  sub_1C0F6D9A8(MEMORY[0x1E4FBC868], a1);
  v2();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C0F7964C()
{
  unint64_t result = qword_1EA1A9710;
  if (!qword_1EA1A9710)
  {
    sub_1BFC39268(255, &qword_1EA1A9670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9710);
  }
  return result;
}

uint64_t sub_1C0F796B4(uint64_t a1, uint64_t a2)
{
  return sub_1BFEEB204(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed);
}

uint64_t objectdestroy_28Tm_0()
{
  uint64_t v1 = (int *)type metadata accessor for FeedWebEmbed();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  if (*(void *)(v3 + 32) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v1[8];
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = v3 + v1[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  unint64_t v22 = v7;
  swift_release();
  swift_release();
  uint64_t v9 = v3 + v1[12];
  uint64_t v10 = (int *)type metadata accessor for FeedHeadline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v10 - 1) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v11 = v10[10];
    uint64_t v12 = v9 + v11 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    uint64_t v13 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      uint64_t v14 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);

      v22(v12 + *(int *)(v13 + 28), v5);
    }
    uint64_t v15 = v9 + v10[11];
    uint64_t v16 = sub_1C151D2DC();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    if (*(void *)(v9 + v10[12] + 8) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v9 + v10[13]) >= 3uLL) {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v18 = v3 + v1[13];
  uint64_t v19 = type metadata accessor for WebEmbedDataVisualization();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = type metadata accessor for GenericDataVisualization();
      v22(v18 + *(int *)(v20 + 20), v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0F79B04(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FeedWebEmbed() - 8);
  return sub_1C0F74510(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

void sub_1C0F79B70()
{
  if (!qword_1EA1A9720)
  {
    sub_1C0A1B250(255);
    sub_1BFF00BEC();
    sub_1C0065708();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA1A9720);
    }
  }
}

uint64_t sub_1C0F79BF8()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F79C38(uint64_t *a1)
{
  return sub_1C0F70B58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0F79C54()
{
  return sub_1C0F75848();
}

uint64_t objectdestroy_34Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F79CE8()
{
  return sub_1C0F72FE8(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0F79D04()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0F79D44(uint64_t *a1)
{
  return sub_1C0F73264(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C0F79D60()
{
  if (!qword_1EA1A9740)
  {
    sub_1BFD35C60();
    sub_1C0F780A4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A9740);
    }
  }
}

uint64_t sub_1C0F79DD0()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1C0F79E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0F735EC(a1, a2, *(void **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), a3);
}

void *sub_1C0F79E24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(void *__return_ptr, void, void))(v2 + 16))(v5, *a1, a1[1]);
  return memcpy(a2, v5, 0x230uLL);
}

uint64_t sub_1C0F79E84()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F79EBC(uint64_t a1)
{
  return sub_1C0F73F28(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C0F79EE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E2A8]), sel_init);
  id v7 = objc_msgSend(v6, sel_personalizationIdentifier);
  uint64_t v8 = sub_1C151E62C();
  uint64_t v10 = v9;

  if (*(void *)(a2 + 16))
  {
    sub_1BFEF2D8C(v8, v10);
    if (v11) {
      swift_unknownObjectRetain();
    }
  }
  uint64_t v12 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1C0F75BC0(a2, a4);

  swift_unknownObjectRelease();
  return v13;
}

id sub_1C0F7A004(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for DebugInspectorError(uint64_t a1)
{
}

void sub_1C0F7A074(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:

      break;
    default:
      return;
  }
}

uint64_t _s8NewsFeed19DebugInspectorErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0F7A004(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugInspectorError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0F7A004(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0F7A074(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugInspectorError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0F7A074(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectorError()
{
  return &type metadata for DebugInspectorError;
}

uint64_t sub_1C0F7A1F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0F77EE8(a1, a2);
}

uint64_t sub_1C0F7A20C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0F77F88(a1, a2);
}

uint64_t sub_1C0F7A224@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0F6DF94(a1);
}

void *sub_1C0F7A240@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0F781A4(a1, a2);
}

uint64_t sub_1C0F7A258()
{
  return sub_1C0F79CE8();
}

uint64_t sub_1C0F7A274(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C15204BC())
  {
    unint64_t v3 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v6 = MEMORY[0x1C18C7CB0](i - 4, a1);
      uint64_t v7 = i - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_30;
      }
LABEL_11:
      char v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
      swift_beginAccess();
      uint64_t v9 = *v8;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v10 = *(void *)(v9 + 16);
      int64_t v11 = *(void *)(v3 + 16);
      int64_t v12 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_31;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(void *)(v3 + 24) >> 1)
      {
        if (*(void *)(v9 + 16)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v11 <= v12) {
          int64_t v14 = v11 + v10;
        }
        else {
          int64_t v14 = v11;
        }
        unint64_t v3 = sub_1BFFC1614(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(void *)(v9 + 16))
        {
LABEL_20:
          uint64_t v15 = *(void *)(v3 + 16);
          uint64_t v16 = (*(void *)(v3 + 24) >> 1) - v15;
          sub_1BFF14E68(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
          uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 72);
          if (v16 < v10) {
            goto LABEL_33;
          }
          uint64_t v18 = *(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
          uint64_t v20 = (v18 + 32) & ~v18;
          unint64_t v21 = v3 + v20 + v19 * v15;
          unint64_t v22 = v9 + v20;
          uint64_t v23 = v19 * v10;
          unint64_t v24 = v21 + v23;
          unint64_t v25 = v22 + v23;
          if (v22 < v24 && v21 < v25)
          {
            uint64_t result = sub_1C152052C();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v27 = *(void *)(v3 + 16);
            BOOL v28 = __OFADD__(v27, v10);
            uint64_t v29 = v27 + v10;
            if (v28) {
              goto LABEL_34;
            }
            *(void *)(v3 + 16) = v29;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_32;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      if (v7 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8 * i);
    swift_retain();
    uint64_t v7 = i - 3;
    if (!__OFADD__(v5, 1)) {
      goto LABEL_11;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0F7A564(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C15204BC())
  {
    unint64_t v3 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v6 = MEMORY[0x1C18C7CB0](i - 4, a1);
      uint64_t v7 = i - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_30;
      }
LABEL_11:
      char v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
      swift_beginAccess();
      uint64_t v9 = *v8;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v10 = *(void *)(v9 + 16);
      int64_t v11 = *(void *)(v3 + 16);
      int64_t v12 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_31;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(void *)(v3 + 24) >> 1)
      {
        if (*(void *)(v9 + 16)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v11 <= v12) {
          int64_t v14 = v11 + v10;
        }
        else {
          int64_t v14 = v11;
        }
        unint64_t v3 = sub_1BFFC22A0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(void *)(v9 + 16))
        {
LABEL_20:
          uint64_t v15 = *(void *)(v3 + 16);
          uint64_t v16 = (*(void *)(v3 + 24) >> 1) - v15;
          sub_1BFF14E68(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
          uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 72);
          if (v16 < v10) {
            goto LABEL_33;
          }
          uint64_t v18 = *(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
          uint64_t v20 = (v18 + 32) & ~v18;
          unint64_t v21 = v3 + v20 + v19 * v15;
          unint64_t v22 = v9 + v20;
          uint64_t v23 = v19 * v10;
          unint64_t v24 = v21 + v23;
          unint64_t v25 = v22 + v23;
          if (v22 < v24 && v21 < v25)
          {
            uint64_t result = sub_1C152052C();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v27 = *(void *)(v3 + 16);
            BOOL v28 = __OFADD__(v27, v10);
            uint64_t v29 = v27 + v10;
            if (v28) {
              goto LABEL_34;
            }
            *(void *)(v3 + 16) = v29;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_32;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      if (v7 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8 * i);
    swift_retain();
    uint64_t v7 = i - 3;
    if (!__OFADD__(v5, 1)) {
      goto LABEL_11;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0F7A854(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C15204BC())
  {
    unint64_t v3 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v6 = MEMORY[0x1C18C7CB0](i - 4, a1);
      uint64_t v7 = i - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_30;
      }
LABEL_11:
      char v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      uint64_t v9 = *v8;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v10 = *(void *)(v9 + 16);
      int64_t v11 = *(void *)(v3 + 16);
      int64_t v12 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_31;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(void *)(v3 + 24) >> 1)
      {
        if (*(void *)(v9 + 16)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v11 <= v12) {
          int64_t v14 = v11 + v10;
        }
        else {
          int64_t v14 = v11;
        }
        unint64_t v3 = sub_1BFFC1F38(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(void *)(v9 + 16))
        {
LABEL_20:
          uint64_t v15 = *(void *)(v3 + 16);
          uint64_t v16 = (*(void *)(v3 + 24) >> 1) - v15;
          sub_1BFF14E68(0, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
          uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 72);
          if (v16 < v10) {
            goto LABEL_33;
          }
          uint64_t v18 = *(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
          uint64_t v20 = (v18 + 32) & ~v18;
          unint64_t v21 = v3 + v20 + v19 * v15;
          unint64_t v22 = v9 + v20;
          uint64_t v23 = v19 * v10;
          unint64_t v24 = v21 + v23;
          unint64_t v25 = v22 + v23;
          if (v22 < v24 && v21 < v25)
          {
            uint64_t result = sub_1C152052C();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v27 = *(void *)(v3 + 16);
            BOOL v28 = __OFADD__(v27, v10);
            uint64_t v29 = v27 + v10;
            if (v28) {
              goto LABEL_34;
            }
            *(void *)(v3 + 16) = v29;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_32;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      if (v7 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8 * i);
    swift_retain();
    uint64_t v7 = i - 3;
    if (!__OFADD__(v5, 1)) {
      goto LABEL_11;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void (*sub_1C0F7AB44(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))(uint64_t, uint64_t)
{
  uint64_t v328 = a8;
  uint64_t v327 = a7;
  uint64_t v323 = a6;
  uint64_t v324 = a3;
  uint64_t v326 = a2;
  uint64_t v333 = (uint64_t)a1;
  uint64_t v329 = a10;
  uint64_t v325 = a9;
  sub_1BFE79C58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  v286 = (char *)&v282 - v16;
  sub_1BFF14E68(0, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v335 = (uint64_t)&v282 - v18;
  uint64_t v19 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v19 - 8);
  v285 = (char *)&v282 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v337 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerOptions(0);
  uint64_t v311 = *((void *)v337 - 1);
  MEMORY[0x1F4188790](v337);
  v283 = (char *)&v282 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  v284 = (char *)&v282 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v334 = (uint64_t)&v282 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v336 = (uint64_t)&v282 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v310 = (uint64_t)&v282 - v29;
  MEMORY[0x1F4188790](v30);
  v338 = (uint64_t *)((char *)&v282 - v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v313 = (uint64_t)&v282 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v312 = (uint64_t)&v282 - v35;
  uint64_t v331 = sub_1C151928C();
  uint64_t v307 = *(void *)(v331 - 8);
  MEMORY[0x1F4188790](v331);
  uint64_t v317 = (uint64_t)&v282 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v330 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v330);
  uint64_t v290 = (uint64_t)&v282 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v292 = (uint64_t)&v282 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v294 = (uint64_t)&v282 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v315 = (uint64_t)&v282 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v319 = (uint64_t)&v282 - v45;
  MEMORY[0x1F4188790](v46);
  v318 = (int *)((char *)&v282 - v47);
  MEMORY[0x1F4188790](v48);
  v308 = (uint64_t (*)())((char *)&v282 - v49);
  MEMORY[0x1F4188790](v50);
  uint64_t v305 = (uint64_t)&v282 - v51;
  MEMORY[0x1F4188790](v52);
  uint64_t v303 = (uint64_t)&v282 - v53;
  sub_1C0F7D6F0();
  uint64_t v55 = v54;
  MEMORY[0x1F4188790](v54);
  uint64_t v289 = (uint64_t)&v282 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v57);
  uint64_t v291 = (uint64_t)&v282 - v58;
  MEMORY[0x1F4188790](v59);
  uint64_t v293 = (uint64_t)&v282 - v60;
  MEMORY[0x1F4188790](v61);
  v314 = (uint64_t (*)())((char *)&v282 - v62);
  MEMORY[0x1F4188790](v63);
  uint64_t v309 = (uint64_t)&v282 - v64;
  MEMORY[0x1F4188790](v65);
  uint64_t v306 = (uint64_t)&v282 - v66;
  MEMORY[0x1F4188790](v67);
  uint64_t v304 = (uint64_t)&v282 - v68;
  MEMORY[0x1F4188790](v69);
  uint64_t v71 = (char *)&v282 - v70;
  MEMORY[0x1F4188790](v72);
  uint64_t v74 = (char *)&v282 - v73;
  MEMORY[0x1F4188790](v75);
  uint64_t v77 = (uint64_t *)((char *)&v282 - v76);
  MEMORY[0x1F4188790](v78);
  uint64_t v80 = (char *)&v282 - v79;
  sub_1C0F7DACC(v333, (uint64_t)&v282 - v79);
  uint64_t v81 = (uint64_t)v80;
  *(void *)&v80[v55[12]] = a2;
  *(void *)&v80[v55[16]] = a3;
  uint64_t v82 = a4;
  *(void *)&v80[v55[20]] = a4;
  uint64_t v83 = a5;
  *(void *)&v80[v55[24]] = a5;
  uint64_t v84 = v323;
  *(void *)(v81 + v55[28]) = v323;
  uint64_t v85 = v327;
  *(void *)(v81 + v55[32]) = v327;
  uint64_t v86 = v328;
  *(void *)(v81 + v55[36]) = v328;
  *(void *)(v81 + v55[40]) = v325;
  *(void *)(v81 + v55[44]) = v329;
  uint64_t v321 = v81;
  v332 = (uint64_t (*)())v55[12];
  uint64_t v316 = v55[16];
  uint64_t v302 = v55[20];
  uint64_t v301 = v55[24];
  uint64_t v300 = v55[28];
  uint64_t v299 = v55[32];
  uint64_t v298 = v55[36];
  unint64_t v297 = v55[40];
  uint64_t v296 = v55[44];
  uint64_t v333 = (uint64_t)type metadata accessor for FormatObject;
  sub_1C0F7DD18(v81, (uint64_t)v77, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(void *)((char *)v332 + (void)v77) = v326;
  *(uint64_t *)((char *)v77 + v316) = v324;
  *(uint64_t *)((char *)v77 + v302) = v82;
  *(uint64_t *)((char *)v77 + v301) = v83;
  uint64_t v322 = v83;
  *(uint64_t *)((char *)v77 + v300) = v84;
  *(uint64_t *)((char *)v77 + v299) = v85;
  *(uint64_t *)((char *)v77 + v298) = v86;
  *(uint64_t *)((char *)v77 + v297) = v325;
  *(uint64_t *)((char *)v77 + v296) = v329;
  uint64_t v298 = *v77;
  uint64_t v316 = v77[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v320 = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333;
  sub_1C0F7DD84((uint64_t)v77, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333);
  uint64_t v88 = v55[12];
  v332 = (uint64_t (*)())v55[16];
  uint64_t v302 = v55[20];
  uint64_t v89 = v55[24];
  uint64_t v90 = v55[28];
  uint64_t v91 = v55[32];
  uint64_t v301 = v55[36];
  uint64_t v300 = v55[40];
  uint64_t v299 = v55[44];
  sub_1C0F7DD18(v321, (uint64_t)v74, &qword_1EB874228, v87);
  *(void *)&v74[v88] = v326;
  *(void *)((char *)v332 + (void)v74) = v324;
  *(void *)&v74[v302] = v82;
  *(void *)&v74[v89] = v322;
  *(void *)&v74[v90] = v323;
  uint64_t v92 = v327;
  *(void *)&v74[v91] = v327;
  *(void *)&v74[v301] = v328;
  *(void *)&v74[v300] = v325;
  *(void *)&v74[v299] = v329;
  v332 = type metadata accessor for FormatPackage;
  uint64_t v93 = v303;
  sub_1C0F7DB4C((uint64_t)v74, v303, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  unint64_t v94 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333;
  sub_1C0F7DD84((uint64_t)v74, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 16))(v317, v93 + *(int *)(v330 + 96), v331);
  uint64_t v331 = (uint64_t)type metadata accessor for FormatPackage;
  sub_1C0F7DC1C(v93, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  uint64_t v95 = v55[12];
  uint64_t v307 = v55[16];
  uint64_t v303 = v55[20];
  uint64_t v96 = v55[24];
  uint64_t v302 = v55[28];
  uint64_t v97 = v55[32];
  uint64_t v98 = v55[36];
  uint64_t v301 = v55[40];
  uint64_t v300 = v55[44];
  sub_1C0F7DD18(v321, (uint64_t)v71, &qword_1EB874228, v94);
  *(void *)&v71[v95] = v326;
  uint64_t v99 = v324;
  *(void *)&v71[v307] = v324;
  uint64_t v100 = v320;
  *(void *)&v71[v303] = v320;
  *(void *)&v71[v96] = v322;
  *(void *)&v71[v302] = v323;
  *(void *)&v71[v97] = v92;
  *(void *)&v71[v98] = v328;
  uint64_t v101 = v325;
  *(void *)&v71[v301] = v325;
  *(void *)&v71[v300] = v329;
  uint64_t v102 = v305;
  sub_1C0F7DB4C((uint64_t)v71, v305, (uint64_t (*)(void))v332);
  int v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333;
  sub_1C0F7DD84((uint64_t)v71, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333);
  uint64_t v104 = v102;
  LOBYTE(v102) = *(unsigned char *)(v102 + 48);
  sub_1C0F7DC1C(v104, (uint64_t (*)(void))v331);
  unsigned __int8 v348 = v102;
  uint64_t v105 = v55[12];
  uint64_t v307 = v55[16];
  uint64_t v106 = v55[20];
  uint64_t v305 = v55[24];
  uint64_t v303 = v55[28];
  uint64_t v302 = v55[32];
  uint64_t v301 = v55[36];
  uint64_t v300 = v55[40];
  uint64_t v299 = v55[44];
  uint64_t v107 = v321;
  uint64_t v108 = v304;
  sub_1C0F7DD18(v321, v304, &qword_1EB874228, v103);
  uint64_t v109 = v108;
  uint64_t v110 = v326;
  *(void *)(v109 + v105) = v326;
  *(void *)(v109 + v307) = v99;
  *(void *)(v109 + v106) = v100;
  uint64_t v111 = v322;
  *(void *)(v109 + v305) = v322;
  uint64_t v112 = v323;
  *(void *)(v109 + v303) = v323;
  *(void *)(v109 + v302) = v327;
  uint64_t v113 = v328;
  *(void *)(v109 + v301) = v328;
  *(void *)(v109 + v300) = v101;
  *(void *)(v109 + v299) = v329;
  uint64_t v114 = v109;
  unsigned __int8 v115 = v308;
  sub_1C0F7DB4C(v109, (uint64_t)v308, (uint64_t (*)(void))v332);
  uint64_t v116 = v114;
  uint64_t v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333;
  sub_1C0F7DD84(v116, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333);
  uint64_t v118 = (uint64_t)v115;
  LOBYTE(v115) = *((unsigned char *)v115 + 49);
  sub_1C0F7DC1C(v118, (uint64_t (*)(void))v331);
  char v347 = (char)v115;
  uint64_t v119 = v55[12];
  v308 = (uint64_t (*)())v55[16];
  uint64_t v307 = v55[20];
  uint64_t v305 = v55[24];
  uint64_t v304 = v55[28];
  uint64_t v303 = v55[32];
  uint64_t v302 = v55[36];
  uint64_t v301 = v55[40];
  uint64_t v300 = v55[44];
  uint64_t v120 = v107;
  uint64_t v121 = v306;
  sub_1C0F7DD18(v120, v306, &qword_1EB874228, v117);
  *(void *)(v121 + v119) = v110;
  *(void *)((char *)v308 + v121) = v324;
  *(void *)(v121 + v307) = v320;
  *(void *)(v121 + v305) = v111;
  *(void *)(v121 + v304) = v112;
  *(void *)(v121 + v303) = v327;
  *(void *)(v121 + v302) = v113;
  *(void *)(v121 + v301) = v101;
  *(void *)(v121 + v300) = v329;
  id v122 = v318;
  sub_1C0F7DB4C(v121, (uint64_t)v318, (uint64_t (*)(void))v332);
  sub_1C0F7DD84(v121, &qword_1EB874228, v117);
  uint64_t v123 = *((void *)v122 + 3);
  uint64_t v306 = *((void *)v122 + 2);
  uint64_t v305 = v123;
  swift_bridgeObjectRetain();
  sub_1C0F7DC1C((uint64_t)v122, (uint64_t (*)(void))v331);
  uint64_t v124 = v55[12];
  v308 = (uint64_t (*)())v55[16];
  uint64_t v125 = v55[20];
  uint64_t v307 = v55[24];
  uint64_t v126 = v55[28];
  uint64_t v127 = v55[32];
  uint64_t v128 = v55[36];
  uint64_t v129 = v55[40];
  v318 = v55;
  uint64_t v130 = v55[44];
  uint64_t v131 = v309;
  uint64_t v132 = v333;
  sub_1C0F7DD18(v321, v309, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v333);
  unint64_t v133 = v326;
  *(void *)(v131 + v124) = v326;
  *(void *)((char *)v308 + v131) = v324;
  *(void *)(v131 + v125) = v320;
  *(void *)(v131 + v307) = v322;
  *(void *)(v131 + v126) = v323;
  *(void *)(v131 + v127) = v327;
  *(void *)(v131 + v128) = v328;
  *(void *)(v131 + v129) = v325;
  unint64_t v134 = v133;
  *(void *)(v131 + v130) = v329;
  uint64_t v135 = v319;
  sub_1C0F7DB4C(v131, v319, (uint64_t (*)(void))v332);
  sub_1C0F7DD84(v131, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v132);
  uint64_t v136 = *(void *)(v135 + 32);
  uint64_t v137 = *(void *)(v135 + 40);
  swift_bridgeObjectRetain();
  sub_1C0F7DC1C(v135, (uint64_t (*)(void))v331);
  uint64_t v346 = MEMORY[0x1E4FBC860];
  if (v134 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v138 = sub_1C15204BC();
  }
  else
  {
    uint64_t v138 = *(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v319 = v138;
  uint64_t v307 = v136;
  uint64_t v333 = v134 >> 62;
  if (v138)
  {
    if (v138 < 1)
    {
      __break(1u);
      goto LABEL_122;
    }
    if ((v134 & 0xC000000000000001) != 0)
    {
      uint64_t v125 = 0;
      do
      {
        uint64_t v139 = MEMORY[0x1C18C7CB0](v125++, v134);
        uint64_t v140 = (uint64_t *)(v139 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        uint64_t v141 = *v140;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1BFFD4770(v141);
      }
      while (v138 != v125);
    }
    else
    {
      uint64_t v125 = 0;
      uint64_t v132 = (uint64_t)&type metadata for FormatContentSlotItem;
      do
      {
        ++v125;
        swift_beginAccess();
        uint64_t v142 = swift_bridgeObjectRetain();
        sub_1BFFD4770(v142);
      }
      while (v138 != v125);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v143 = swift_bridgeObjectRetain();
  sub_1BFFD4770(v143);
  uint64_t v138 = v346;
  v345 = (unsigned char *)MEMORY[0x1E4FBC860];
  uint64_t v128 = v319;
  if (!v319) {
    goto LABEL_20;
  }
  if (v319 < 1)
  {
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  uint64_t v132 = (uint64_t)&type metadata for FormatContentSlotItem;
  if ((v134 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v125 = 0;
    uint64_t v128 = v319;
    do
    {
      uint64_t v144 = MEMORY[0x1C18C7CB0](v125++, v134);
      uint64_t v145 = (uint64_t *)(v144 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
      swift_beginAccess();
      uint64_t v146 = *v145;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFFD9AF4(v146);
    }
    while (v128 != v125);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v125 = 0;
    uint64_t v128 = v319;
    do
    {
      ++v125;
      swift_beginAccess();
      uint64_t v147 = swift_bridgeObjectRetain();
      sub_1BFFD9AF4(v147);
    }
    while (v128 != v125);
  }
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v148 = swift_bridgeObjectRetain();
  sub_1BFFD9AF4(v148);
  uint64_t v304 = (uint64_t)v345;
  uint64_t v344 = MEMORY[0x1E4FBC860];
  if (!v128) {
    goto LABEL_29;
  }
  if (v128 < 1)
  {
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  if ((v134 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v125 = 0;
    uint64_t v128 = v319;
    do
    {
      uint64_t v149 = MEMORY[0x1C18C7CB0](v125++, v134);
      id v150 = (uint64_t *)(v149 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
      swift_beginAccess();
      uint64_t v151 = *v150;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFFD3944(v151);
    }
    while (v128 != v125);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v125 = 0;
    uint64_t v132 = (uint64_t)&type metadata for FormatContentSlotItem;
    uint64_t v128 = v319;
    do
    {
      ++v125;
      swift_beginAccess();
      uint64_t v152 = swift_bridgeObjectRetain();
      sub_1BFFD3944(v152);
    }
    while (v128 != v125);
  }
  swift_bridgeObjectRelease();
LABEL_29:
  uint64_t v153 = swift_bridgeObjectRetain();
  sub_1BFFD3944(v153);
  uint64_t v303 = v344;
  uint64_t v343 = MEMORY[0x1E4FBC860];
  if (!v128) {
    goto LABEL_38;
  }
  if (v128 < 1)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  if ((v134 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v125 = 0;
    uint64_t v128 = v319;
    do
    {
      uint64_t v154 = MEMORY[0x1C18C7CB0](v125++, v134);
      id v155 = (uint64_t *)(v154 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
      swift_beginAccess();
      uint64_t v156 = *v155;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFFC2C88(v156);
    }
    while (v128 != v125);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v125 = 0;
    uint64_t v132 = (uint64_t)&type metadata for FormatContentSlotItem;
    uint64_t v128 = v319;
    do
    {
      ++v125;
      swift_beginAccess();
      uint64_t v157 = swift_bridgeObjectRetain();
      sub_1BFFC2C88(v157);
    }
    while (v128 != v125);
  }
  swift_bridgeObjectRelease();
LABEL_38:
  uint64_t v158 = swift_bridgeObjectRetain();
  sub_1BFFC2C88(v158);
  uint64_t v302 = v343;
  v342 = (uint64_t (*)())MEMORY[0x1E4FBC860];
  if (!v128) {
    goto LABEL_47;
  }
  if (v128 < 1)
  {
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  if ((v134 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v159 = 0;
    uint64_t v128 = v319;
    do
    {
      uint64_t v160 = MEMORY[0x1C18C7CB0](v159++, v134);
      unint64_t v161 = (uint64_t *)(v160 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
      swift_beginAccess();
      uint64_t v162 = *v161;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFFC6038(v162);
    }
    while (v128 != v159);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v163 = 0;
    uint64_t v128 = v319;
    do
    {
      ++v163;
      swift_beginAccess();
      uint64_t v164 = swift_bridgeObjectRetain();
      sub_1BFFC6038(v164);
    }
    while (v128 != v163);
  }
  swift_bridgeObjectRelease();
LABEL_47:
  unint64_t v297 = v138;
  uint64_t v299 = v137;
  v332 = v342;
  uint64_t v132 = v318[12];
  uint64_t v165 = v318[16];
  uint64_t v166 = v318[20];
  uint64_t v331 = v318[24];
  uint64_t v167 = v318[28];
  uint64_t v138 = v318[32];
  uint64_t v168 = v318[36];
  uint64_t v309 = v318[40];
  v308 = (uint64_t (*)())v318[44];
  id v169 = v314;
  sub_1C0F7DD18(v321, (uint64_t)v314, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(void *)((char *)v169 + v132) = v326;
  *(void *)((char *)v169 + v165) = v324;
  *(void *)((char *)v169 + v166) = v320;
  *(void *)((char *)v169 + v331) = v322;
  *(void *)((char *)v169 + v167) = v323;
  uint64_t v137 = v326;
  *(void *)((char *)v169 + v138) = v327;
  *(void *)((char *)v169 + v168) = v328;
  *(void *)((char *)v169 + v309) = v325;
  *(void *)((char *)v308 + (void)v169) = v329;
  uint64_t v170 = v315;
  sub_1C0F7DB4C((uint64_t)v169, v315, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1C0F7DD84((uint64_t)v169, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v125 = *(void *)(v170 + 120);
  swift_bridgeObjectRetain();
  sub_1C0F7DC1C(v170, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  v342 = v332;
  sub_1BFFC6038(v125);
  unint64_t v134 = (unint64_t)v342;
  uint64_t v341 = MEMORY[0x1E4FBC860];
  if (!v128) {
    goto LABEL_56;
  }
  if (v128 < 1)
  {
LABEL_126:
    __break(1u);
    __break(1u);
    goto LABEL_127;
  }
  if ((v137 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v171 = 0;
    do
    {
      uint64_t v172 = MEMORY[0x1C18C7CB0](v171++, v137);
      id v173 = (uint64_t *)(v172 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
      swift_beginAccess();
      uint64_t v174 = *v173;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFFC63C8(v174);
    }
    while (v128 != v171);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v175 = 0;
    do
    {
      ++v175;
      swift_beginAccess();
      uint64_t v176 = swift_bridgeObjectRetain();
      sub_1BFFC63C8(v176);
    }
    while (v128 != v175);
  }
  swift_bridgeObjectRelease();
LABEL_56:
  uint64_t v177 = swift_bridgeObjectRetain();
  sub_1BFFC63C8(v177);
  uint64_t v178 = v341;
  id v179 = v295;
  uint64_t v341 = sub_1C0F7A274(v137);
  uint64_t v180 = swift_bridgeObjectRetain();
  sub_1BFFD8A14(v180);
  uint64_t v296 = v341;
  uint64_t v181 = sub_1C0F7A564(v137);
  v332 = v179;
  uint64_t v341 = v181;
  uint64_t v182 = swift_bridgeObjectRetain();
  sub_1BFFC2CC4(v182);
  v295 = (uint64_t (*)())v341;
  uint64_t v340 = MEMORY[0x1E4FBC860];
  if (v128)
  {
    if ((v137 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v183 = 0;
      do
      {
        uint64_t v184 = MEMORY[0x1C18C7CB0](v183++, v137);
        id v185 = (uint64_t *)(v184 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
        swift_beginAccess();
        uint64_t v186 = *v185;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1BFEDB748(v186);
      }
      while (v128 != v183);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v187 = 0;
      do
      {
        ++v187;
        swift_beginAccess();
        uint64_t v188 = swift_bridgeObjectRetain();
        sub_1BFEDB748(v188);
      }
      while (v128 != v187);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v287 = v178;
  unint64_t v288 = v134;
  uint64_t v309 = v340;
  id v189 = v318;
  uint64_t v331 = v318[12];
  uint64_t v301 = v318[16];
  uint64_t v190 = v318[20];
  uint64_t v191 = v318[24];
  uint64_t v192 = v318[28];
  uint64_t v193 = v318[32];
  uint64_t v194 = v318[36];
  uint64_t v195 = v318[40];
  uint64_t v300 = v318[44];
  id v196 = v314;
  v308 = type metadata accessor for FormatObject;
  sub_1C0F7DD18(v321, (uint64_t)v314, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(void *)((char *)v196 + v331) = v326;
  *(void *)((char *)v196 + v301) = v324;
  *(void *)((char *)v196 + v190) = v320;
  *(void *)((char *)v196 + v191) = v322;
  *(void *)((char *)v196 + v192) = v323;
  *(void *)((char *)v196 + v193) = v327;
  *(void *)((char *)v196 + v194) = v328;
  *(void *)((char *)v196 + v195) = v325;
  *(void *)((char *)v196 + v300) = v329;
  uint64_t v331 = (uint64_t)type metadata accessor for FormatPackage;
  uint64_t v197 = v315;
  sub_1C0F7DB4C((uint64_t)v196, v315, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1C0F7DD84((uint64_t)v196, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v198 = *(void *)(v197 + 136);
  swift_bridgeObjectRetain();
  v314 = type metadata accessor for FormatPackage;
  sub_1C0F7DC1C(v197, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  uint64_t v340 = v309;
  sub_1BFEDB748(v198);
  uint64_t v301 = v340;
  uint64_t v199 = v189[12];
  uint64_t v315 = v189[16];
  uint64_t v309 = v189[20];
  uint64_t v200 = v189[24];
  uint64_t v201 = v189[28];
  uint64_t v202 = v189[32];
  uint64_t v203 = v189[36];
  uint64_t v204 = v189[40];
  uint64_t v137 = v189[44];
  uint64_t v205 = v293;
  uint64_t v206 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v308;
  sub_1C0F7DD18(v321, v293, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v308);
  *(void *)(v205 + v199) = v326;
  *(void *)(v205 + v315) = v324;
  *(void *)(v205 + v309) = v320;
  *(void *)(v205 + v200) = v322;
  *(void *)(v205 + v201) = v323;
  *(void *)(v205 + v202) = v327;
  uint64_t v128 = v326;
  *(void *)(v205 + v203) = v328;
  uint64_t v138 = v319;
  *(void *)(v205 + v204) = v325;
  *(void *)(v205 + v137) = v329;
  uint64_t v207 = v294;
  sub_1C0F7DB4C(v205, v294, (uint64_t (*)(void))v331);
  sub_1C0F7DD84(v205, &qword_1EB874228, v206);
  uint64_t v125 = *(void *)(v207 + 144);
  swift_bridgeObjectRetain();
  sub_1C0F7DC1C(v207, (uint64_t (*)(void))v314);
  v339[0] = MEMORY[0x1E4FBC860];
  unint64_t v134 = v311;
  uint64_t v132 = v310;
  if (v138)
  {
    if (v138 >= 1)
    {
      if ((v128 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v208 = 0;
        do
        {
          uint64_t v209 = MEMORY[0x1C18C7CB0](v208++, v128);
          uint64_t v210 = (uint64_t *)(v209 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
          swift_beginAccess();
          uint64_t v211 = *v210;
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_1BFE72794(v211);
        }
        while (v138 != v208);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v212 = 0;
        do
        {
          ++v212;
          swift_beginAccess();
          uint64_t v213 = swift_bridgeObjectRetain();
          sub_1BFE72794(v213);
        }
        while (v138 != v212);
        swift_bridgeObjectRelease();
        uint64_t v132 = v310;
      }
      goto LABEL_73;
    }
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
LABEL_73:
  id v214 = (uint64_t (*)())sub_1BFFB9A98(v339[0], v125);
  swift_bridgeObjectRelease();
  unsigned int v215 = v332;
  v339[0] = sub_1C0F7A854(v128);
  uint64_t v216 = swift_bridgeObjectRetain();
  sub_1BFFC6808(v216);
  uint64_t v137 = v339[0];
  if (v333)
  {
    swift_bridgeObjectRetain();
    uint64_t v138 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v138 = *(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v125 = MEMORY[0x1E4FBC860];
  uint64_t v315 = (uint64_t)v215;
  v314 = v214;
  uint64_t v310 = v137;
  if (!v138) {
    goto LABEL_88;
  }
  v339[0] = MEMORY[0x1E4FBC860];
  sub_1BFFC1188(0, v138 & ~(v138 >> 63), 0);
  if (v138 < 0)
  {
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  uint64_t v125 = v339[0];
  if ((v128 & 0xC000000000000001) != 0)
  {
    uint64_t v217 = 0;
    do
    {
      uint64_t v218 = MEMORY[0x1C18C7CB0](v217, v128);
      sub_1C0F7DB4C(v218 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v132, type metadata accessor for FormatCompilerOptions);
      swift_unknownObjectRelease();
      v339[0] = v125;
      uint64_t v219 = v132;
      unint64_t v221 = *(void *)(v125 + 16);
      unint64_t v220 = *(void *)(v125 + 24);
      if (v221 >= v220 >> 1)
      {
        sub_1BFFC1188(v220 > 1, v221 + 1, 1);
        uint64_t v125 = v339[0];
      }
      ++v217;
      *(void *)(v125 + 16) = v221 + 1;
      sub_1C0F7DBB4(v219, v125+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(void *)(v134 + 72) * v221, type metadata accessor for FormatCompilerOptions);
      uint64_t v132 = v219;
    }
    while (v138 != v217);
  }
  else
  {
    unsigned int v222 = (void *)(v128 + 32);
    uint64_t v223 = (uint64_t)v283;
    do
    {
      sub_1C0F7DB4C(*v222 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v223, type metadata accessor for FormatCompilerOptions);
      v339[0] = v125;
      unint64_t v225 = *(void *)(v125 + 16);
      unint64_t v224 = *(void *)(v125 + 24);
      if (v225 >= v224 >> 1)
      {
        sub_1BFFC1188(v224 > 1, v225 + 1, 1);
        uint64_t v125 = v339[0];
      }
      *(void *)(v125 + 16) = v225 + 1;
      sub_1C0F7DBB4(v223, v125+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(void *)(v134 + 72) * v225, type metadata accessor for FormatCompilerOptions);
      ++v222;
      --v138;
    }
    while (v138);
  }
LABEL_88:
  uint64_t v333 = v318[12];
  uint64_t v226 = v318[16];
  uint64_t v137 = v318[20];
  uint64_t v227 = v318[24];
  unint64_t v134 = v318[28];
  uint64_t v228 = v318[32];
  uint64_t v229 = v318[36];
  v332 = (uint64_t (*)())v318[40];
  uint64_t v331 = v318[44];
  uint64_t v230 = v291;
  sub_1C0F7DD18(v321, v291, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(void *)(v230 + v333) = v326;
  *(void *)(v230 + v226) = v324;
  *(void *)(v230 + v137) = v320;
  *(void *)(v230 + v227) = v322;
  *(void *)(v230 + v134) = v323;
  *(void *)(v230 + v228) = v327;
  *(void *)(v230 + v229) = v328;
  *(void *)((char *)v332 + v230) = v325;
  *(void *)(v230 + v331) = v329;
  uint64_t v132 = v292;
  sub_1C0F7DB4C(v230, v292, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1C0F7DD84(v230, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v231 = v313;
  sub_1C0F7DB4C(v132 + *(int *)(v330 + 92), v313, type metadata accessor for FormatCompilerOptions);
  sub_1C0F7DC1C(v132, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  uint64_t v232 = v231;
  id v233 = v338;
  sub_1C0F7DB4C(v232, (uint64_t)v338, type metadata accessor for FormatCompilerOptions);
  uint64_t v128 = *(void *)(v125 + 16);
  if (v128)
  {
    uint64_t v234 = *((int *)v337 + 7);
    uint64_t v333 = (uint64_t)v233 + *((int *)v337 + 6);
    v332 = (uint64_t (*)())((char *)v233 + v234);
    uint64_t v331 = *((int *)v337 + 8);
    uint64_t v235 = v125 + ((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80));
    uint64_t v330 = *(void *)(v311 + 72);
    uint64_t v311 = v125;
    swift_bridgeObjectRetain();
    uint64_t v137 = (uint64_t)v286;
    unint64_t v134 = (unint64_t)v285;
    uint64_t v132 = (uint64_t)v284;
    uint64_t v236 = v336;
    uint64_t v237 = v334;
    do
    {
      sub_1C0F7DB4C(v235, v236, type metadata accessor for FormatCompilerOptions);
      v339[0] = *v233;
      swift_bridgeObjectRetain();
      uint64_t v238 = swift_bridgeObjectRetain();
      sub_1BFFC2C5C(v238);
      uint64_t v239 = v339[0];
      v339[0] = v338[1];
      swift_bridgeObjectRetain();
      uint64_t v240 = swift_bridgeObjectRetain();
      sub_1BFFC2C30(v240);
      uint64_t v241 = v339[0];
      uint64_t v242 = v335;
      sub_1BFEE030C(v333, v335);
      sub_1C0F7DBB4(v242, v134, type metadata accessor for FormatCompilerOptions.Newsroom);
      sub_1BFFC4CF4((uint64_t)v332, v336 + *((int *)v337 + 7), v137);
      uint64_t v243 = *(uint64_t *)((char *)v338 + v331);
      swift_bridgeObjectRetain();
      uint64_t v244 = swift_bridgeObjectRetain();
      uint64_t v245 = sub_1BFFC263C(v244, v243);
      *(void *)uint64_t v132 = v239;
      *(void *)(v132 + 8) = v241;
      uint64_t v236 = v336;
      long long v246 = v337;
      sub_1C0F7DB4C(v134, v132 + *((int *)v337 + 6), type metadata accessor for FormatCompilerOptions.Newsroom);
      sub_1BFEF6CE8(v137, v132 + *((int *)v246 + 7));
      *(void *)(v132 + *((int *)v246 + 8)) = v245;
      sub_1BFE79A60(v137);
      sub_1C0F7DC1C(v134, type metadata accessor for FormatCompilerOptions.Newsroom);
      sub_1C0F7DBB4(v132, v237, type metadata accessor for FormatCompilerOptions);
      sub_1C0F7DC1C(v236, type metadata accessor for FormatCompilerOptions);
      id v233 = v338;
      sub_1C0F7DC1C((uint64_t)v338, type metadata accessor for FormatCompilerOptions);
      sub_1C0F7DBB4(v237, (uint64_t)v233, type metadata accessor for FormatCompilerOptions);
      v235 += v330;
      --v128;
    }
    while (v128);
    uint64_t v125 = v311;
    swift_bridgeObjectRelease();
  }
  sub_1C0F7DBB4((uint64_t)v233, v312, type metadata accessor for FormatCompilerOptions);
  sub_1C0F7DC1C(v313, type metadata accessor for FormatCompilerOptions);
  swift_bridgeObjectRelease();
  uint64_t v138 = v319;
  if (!v319)
  {
    id v249 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v256 = v326;
    goto LABEL_113;
  }
  if (v319 < 1)
  {
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  uint64_t v247 = v326;
  if ((v326 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v248 = 0;
    id v249 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v251 = MEMORY[0x1C18C7CB0](v248, v247);
      uint64_t v252 = *(void *)(v251 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
      unint64_t v253 = *(void *)(v251 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
      sub_1BFEB9640(v252, v253);
      swift_unknownObjectRelease();
      if (v253 != 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v249 = sub_1C0EE0874(0, v249[2] + 1, 1, v249);
        }
        unint64_t v255 = v249[2];
        unint64_t v254 = v249[3];
        if (v255 >= v254 >> 1) {
          id v249 = sub_1C0EE0874((void *)(v254 > 1), v255 + 1, 1, v249);
        }
        v249[2] = v255 + 1;
        long long v250 = &v249[2 * v255];
        v250[4] = v252;
        v250[5] = v253;
      }
      ++v248;
    }
    while (v138 != v248);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v257 = 0;
    uint64_t v258 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
    id v249 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v260 = *(void *)(v247 + 8 * v257 + 32) + v258;
      uint64_t v261 = *(void *)(v260 + 8);
      if (v261 != 2)
      {
        uint64_t v262 = *(void *)v260;
        sub_1C0187DE0(*(void *)v260, *(void *)(v260 + 8));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v249 = sub_1C0EE0874(0, v249[2] + 1, 1, v249);
        }
        unint64_t v264 = v249[2];
        unint64_t v263 = v249[3];
        if (v264 >= v263 >> 1) {
          id v249 = sub_1C0EE0874((void *)(v263 > 1), v264 + 1, 1, v249);
        }
        v249[2] = v264 + 1;
        v259 = &v249[2 * v264];
        v259[4] = v262;
        v259[5] = v261;
        uint64_t v258 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
      }
      ++v257;
    }
    while (v138 != v257);
  }
  swift_bridgeObjectRelease();
  uint64_t v256 = v247;
LABEL_113:
  v338 = (uint64_t *)a11;
  uint64_t v336 = v318[12];
  uint64_t v335 = v318[16];
  uint64_t v334 = v318[20];
  uint64_t v333 = v318[24];
  v332 = (uint64_t (*)())v318[28];
  uint64_t v331 = v318[32];
  uint64_t v330 = v318[36];
  uint64_t v319 = v318[40];
  v318 = (int *)v318[44];
  v337 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject;
  uint64_t v265 = v289;
  sub_1C0F7DD18(v321, v289, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v266 = v328;
  swift_bridgeObjectRelease();
  uint64_t v267 = v327;
  swift_bridgeObjectRelease();
  uint64_t v268 = v323;
  swift_bridgeObjectRelease();
  uint64_t v269 = v322;
  swift_bridgeObjectRelease();
  uint64_t v270 = v320;
  swift_bridgeObjectRelease();
  uint64_t v271 = v324;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v265 + v336) = v256;
  *(void *)(v265 + v335) = v271;
  *(void *)(v265 + v334) = v270;
  *(void *)(v265 + v333) = v269;
  *(void *)((char *)v332 + v265) = v268;
  *(void *)(v265 + v331) = v267;
  *(void *)(v265 + v330) = v266;
  *(void *)(v265 + v319) = v325;
  *(void *)((char *)v318 + v265) = v329;
  uint64_t v272 = v290;
  sub_1C0F7DB4C(v265, v290, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1C0F7DD84(v265, &qword_1EB874228, v337);
  uint64_t v125 = *(void *)(v272 + 160);
  uint64_t v132 = *(void *)(v272 + 168);
  sub_1BFEB9640(v125, v132);
  sub_1C0F7DC1C(v272, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  uint64_t v273 = v249[2];
  if (!v273)
  {
    uint64_t v137 = v307;
    uint64_t v128 = v299;
    unint64_t v134 = v297;
    uint64_t v138 = v287;
LABEL_118:
    swift_bridgeObjectRelease();
    goto LABEL_130;
  }
  uint64_t v137 = v307;
  uint64_t v128 = v299;
  unint64_t v134 = v297;
  uint64_t v138 = v287;
  if (v132 != 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v274 = 1;
    goto LABEL_131;
  }
  uint64_t v125 = v249[4];
  uint64_t v132 = v249[5];
  sub_1C0187DE0(v125, v132);
  if (v273 == 1) {
    goto LABEL_118;
  }
  swift_bridgeObjectRelease();
  uint64_t v274 = 1;
  do
  {
    ++v274;
LABEL_131:
    ;
  }
  while (v274 != v273);
LABEL_130:
  v339[0] = v125;
  v339[1] = v132;
  sub_1BFFFD90C(0);
  sub_1C0F7DC7C(0, (unint64_t *)&qword_1EB876780, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  unint64_t v276 = (*(unsigned __int8 *)(*(void *)(v275 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v275 - 8) + 80);
  uint64_t v277 = swift_allocObject();
  *(_OWORD *)(v277 + 16) = xmmword_1C1529AE0;
  uint64_t v278 = v277 + v276;
  uint64_t v279 = (uint64_t)v338;
  sub_1C0F7DD18((uint64_t)v338, v278, (unint64_t *)&qword_1EB876780, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v280 = sub_1C1147B64(v298, v316, v317, &v348, &v347, v306, v305, v137, v128, v134, (unsigned char *)v304, v303, v302, v288, v138, v296, (uint64_t)v295, v301, (uint64_t)v314,
           v310,
           v312,
           v339,
           v277);
  sub_1C0F7DD84(v279, (unint64_t *)&qword_1EB876780, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0F7DC1C(v321, (uint64_t (*)(void))sub_1C0F7D6F0);
  return v280;
}

void sub_1C0F7D6F0()
{
  if (!qword_1EB87D5D8)
  {
    MEMORY[0x1F4188790](0);
    sub_1C0F7DC7C(255, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1BFE79C58(255, &qword_1EB879EA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, MEMORY[0x1E4FBB320]);
    sub_1C0F7DA5C(255, (unint64_t *)&qword_1EB879D80, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup);
    sub_1C0F7DA5C(255, (unint64_t *)&qword_1EB879D68, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
    sub_1BFE79C58(255, &qword_1EB880CC0, (uint64_t (*)(uint64_t))sub_1BFF1D9F4, v0);
    sub_1C0F7DA5C(255, (unint64_t *)&qword_1EB879D88, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
    sub_1C0F7DA5C(255, (unint64_t *)&qword_1EB879D60, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
    sub_1C0F7DA5C(255, (unint64_t *)&qword_1EB879D78, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType);
    sub_1C0F7DA5C(255, (unint64_t *)&qword_1EB879D50, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
    sub_1C0F7DA5C(255, (unint64_t *)&qword_1EB879D58, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB87D5D8);
    }
  }
}

void sub_1C0F7DA5C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  if (!*a2)
  {
    sub_1BFF14E68(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v6 = sub_1C151ED5C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0F7DACC(uint64_t a1, uint64_t a2)
{
  sub_1C0F7DC7C(0, &qword_1EB874228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F7DB4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F7DBB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F7DC1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0F7DC7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatPackage();
    uint64_t v7 = sub_1BFEBC3DC((unint64_t *)&unk_1EB887270, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0F7DD18(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_1C0F7DC7C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0F7DD84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_1C0F7DC7C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t dispatch thunk of static FeedCatalogTraits.followed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t IssueCoverImageProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t IssueCoverImageProcessor.init()()
{
  return v0;
}

uint64_t IssueCoverImageProcessor.deinit()
{
  return v0;
}

uint64_t IssueCoverImageProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed24IssueCoverImageProcessorC7processySo7UIImageCSg5TeaUI09ProcessedE11RequestType_pF_0(uint64_t a1)
{
  sub_1BFC66384(a1, (uint64_t)v7);
  sub_1BFD05974();
  type metadata accessor for IssueCoverImageProcessorRequest();
  if (!swift_dynamicCast()) {
    return 0;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v6 + 88), *(void *)(v6 + 112));
  uint64_t v1 = sub_1C151A73C();
  uint64_t v2 = (void *)v1;
  if ((*(unsigned char *)(v6 + 72) & 1) == 0)
  {
    if (v1)
    {
      uint64_t v3 = sub_1C151FABC();
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  if (!v1)
  {
LABEL_8:
    swift_release();
    return 0;
  }
  uint64_t v3 = sub_1C151FADC();
LABEL_7:
  uint64_t v4 = v3;

  swift_release();
  return v4;
}

uint64_t method lookup function for IssueCoverImageProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IssueCoverImageProcessor);
}

uint64_t dispatch thunk of IssueCoverImageProcessor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

id SharingPuzzleTypeTextActivityItemSource.__allocating_init(puzzleType:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = &v3[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SharingPuzzleTypeTextActivityItemSource.init(puzzleType:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType] = a1;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText);
  if (*(void *)(v0
                 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText
                 + 8))
  {
    uint64_t v2 = *v1;
  }
  else
  {
    id v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType), sel_nameForSharing);
    uint64_t v2 = sub_1C151E62C();
    uint64_t v5 = v4;

    *uint64_t v1 = v2;
    v1[1] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C0F7E0AC()
{
  uint64_t v1 = type metadata accessor for SharingPlainTextBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0xE000000000000000;
  swift_beginAccess();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  uint64_t v14 = v1;
  uint64_t v15 = &off_1F1B9CEF0;
  v13[0] = inited;
  __swift_project_boxed_opaque_existential_1(v13, v1);
  id v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType), sel_nameForSharing);
  sub_1C151E62C();

  ((void (*)(uint64_t@<X2>, uint64_t@<X3>, void *@<X8>))off_1F1B9CF28[0])(v1, (uint64_t)&off_1F1B9CEF0, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 16))(v13, v4, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v8 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v7[8])(v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v8;
}

uint64_t sub_1C0F7E240()
{
  void (*v38)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char **v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char **v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  long long v79[2];
  long long v80;
  uint64_t v81;
  uint64_t v82;
  void v83[3];
  uint64_t v84;
  uint64_t v85;
  void v86[3];
  uint64_t v87;
  uint64_t v88;
  void v89[3];
  uint64_t v90;
  uint64_t v91;
  void v92[3];
  uint64_t v93;
  char **v94;

  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v75 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v76 = (char *)&v73 - v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v73 - v6;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v77 = *(void *)(v8 - 8);
  uint64_t v78 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v74 = (char *)&v73 - v12;
  uint64_t v13 = type metadata accessor for SharingHTMLBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0xE000000000000000;
  swift_beginAccess();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  uint64_t v93 = v13;
  unint64_t v94 = &off_1F1C01D50;
  v92[0] = inited;
  __swift_project_boxed_opaque_existential_1(v92, v13);
  uint64_t v15 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType);
  id v16 = objc_msgSend(v15, sel_nameForSharing);
  uint64_t v17 = sub_1C151E62C();

  ((void (*)(uint64_t@<X0>, uint64_t@<X2>, uint64_t@<X3>, void *@<X8>))off_1F1C01D88[0])(v17, v13, (uint64_t)&off_1F1C01D50, v89);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  uint64_t v18 = v90;
  uint64_t v19 = v91;
  __swift_project_boxed_opaque_existential_1(v89, v90);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 16))(v92, v18, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
  id v20 = objc_msgSend(v15, sel_identifier);
  if (!v20)
  {
    sub_1C151E62C();
    id v20 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = self;
  id v22 = objc_msgSend(v21, sel_nss_NewsURLForPuzzleTypeID_, v20);

  if (v22)
  {
    sub_1C1515F1C();

    uint64_t v23 = v78;
    uint64_t v24 = *(void (**)(void))(v77 + 32);
    uint64_t v25 = v10;
    uint64_t v26 = v77;
    ((void (*)(char *, char *, uint64_t))v24)(v7, v25, v78);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v27(v7, 0, 1, v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v23) != 1)
    {
      uint64_t v28 = v74;
      v24();
      uint64_t v29 = v93;
      uint64_t v30 = v94;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      ((void (*)(void *__return_ptr, uint64_t, char **))v30[2])(v89, v29, v30);
      uint64_t v31 = v90;
      uint64_t v32 = v91;
      __swift_project_boxed_opaque_existential_1(v89, v90);
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v34 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v35 = sub_1C1515B8C();
      uint64_t v37 = v36;

      uint64_t v38 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
      uint64_t v39 = v32;
      uint64_t v26 = v77;
      v38(v86, v35, v37, v31, v39);
      swift_bridgeObjectRelease();
      uint64_t v40 = v87;
      uint64_t v41 = v88;
      __swift_project_boxed_opaque_existential_1(v86, v87);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v41 + 16))(v83, v40, v41);
      uint64_t v42 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      sub_1C03EE344();
      uint64_t v43 = sub_1C152088C();
      (*(void (**)(long long *__return_ptr, uint64_t))(v42 + 56))(&v80, v43);
      swift_bridgeObjectRelease();
      uint64_t v44 = v81;
      uint64_t v45 = v82;
      __swift_project_boxed_opaque_existential_1(&v80, v81);
      uint64_t v46 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v45 + 16);
      uint64_t v47 = v45;
      uint64_t v23 = v78;
      v46(v79, v44, v47);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
      sub_1BFC773DC(v79, (uint64_t)v92);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
      uint64_t v49 = (uint64_t)v75;
      uint64_t v48 = (uint64_t)v76;
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v26 = v77;
    uint64_t v23 = v78;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    v27(v7, 1, 1, v78);
  }
  uint64_t v49 = (uint64_t)v75;
  sub_1C002F608((uint64_t)v7);
  uint64_t v48 = (uint64_t)v76;
LABEL_8:
  uint64_t v50 = objc_msgSend(v21, sel_nss_MarketingPageURL);
  if (v50)
  {
    uint64_t v51 = v50;
    sub_1C1515F1C();

    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v52 = 1;
  }
  v27((char *)v49, v52, 1, v23);
  sub_1C002F694(v49, v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v48, 1, v23) == 1)
  {
    sub_1C002F608(v48);
  }
  else
  {
    uint64_t v53 = sub_1C1515E2C();
    uint64_t v55 = v54;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v48, v23);
    uint64_t v56 = v93;
    uint64_t v57 = v94;
    __swift_project_boxed_opaque_existential_1(v92, v93);
    ((void (*)(void *__return_ptr, uint64_t, char **))v57[2])(v89, v56, v57);
    uint64_t v58 = v90;
    uint64_t v59 = v91;
    __swift_project_boxed_opaque_existential_1(v89, v90);
    type metadata accessor for Localized();
    uint64_t v60 = swift_getObjCClassFromMetadata();
    uint64_t v61 = objc_msgSend(self, sel_bundleForClass_, v60);
    uint64_t v62 = sub_1C1515B8C();
    uint64_t v64 = v63;

    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v86, v62, v64, v58, v59);
    swift_bridgeObjectRelease();
    uint64_t v65 = v87;
    uint64_t v66 = v88;
    __swift_project_boxed_opaque_existential_1(v86, v87);
    (*(void (**)(void *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v66 + 56))(v83, 32, 0xE100000000000000, v65, v66);
    uint64_t v67 = v84;
    uint64_t v68 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    (*(void (**)(long long *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 48))(&v80, 0x654E20656C707041, 0xEA00000000007377, v53, v55, v67, v68);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    sub_1BFC773DC(&v80, (uint64_t)v92);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
  }
  uint64_t v69 = v93;
  uint64_t v70 = v94;
  __swift_project_boxed_opaque_existential_1(v92, v93);
  uint64_t v71 = ((uint64_t (*)(uint64_t, char **))v70[8])(v69, v70);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  return v71;
}

id SharingPuzzleTypeTextActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingPuzzleTypeTextActivityItemSource.init()()
{
}

id SharingPuzzleTypeTextActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SharingPuzzleTypeTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = result;
  a1[1] = v3;
  return result;
}

void SharingPuzzleTypeTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  v81[1] = *(id *)MEMORY[0x1E4F143B8];
  if (!a1)
  {
    uint64_t v7 = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
    *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = v8;
    return;
  }
  if (sub_1C151E62C() == 0xD000000000000026 && v5 == 0x80000001C160BC20)
  {
    id v6 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  char v9 = sub_1C1520A9C();
  id v10 = a1;
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {

    uint64_t v25 = sub_1C151E62C();
    uint64_t v27 = v26;
    if (v25 == sub_1C151E62C() && v27 == v28)
    {
      id v48 = v10;
      goto LABEL_25;
    }
    char v30 = sub_1C1520A9C();
    id v31 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_26;
    }
    uint64_t v32 = sub_1C151E62C();
    uint64_t v34 = v33;
    if (v32 == sub_1C151E62C() && v34 == v35) {
      goto LABEL_25;
    }
    char v36 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_26;
    }
    uint64_t v37 = sub_1C151E62C();
    uint64_t v39 = v38;
    if (v37 == sub_1C151E62C() && v39 == v40) {
      goto LABEL_25;
    }
    char v41 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v41)
    {
LABEL_26:
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];

      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0xE000000000000000;
      return;
    }
    id v42 = v31;
    uint64_t v43 = (void *)sub_1C151E5EC();
    uint64_t v44 = sub_1C151E62C();
    uint64_t v46 = v45;
    if (v44 == sub_1C151E62C() && v46 == v47)
    {

LABEL_25:
      swift_bridgeObjectRelease_n();
      goto LABEL_26;
    }
    char v49 = sub_1C1520A9C();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_26;
    }
    uint64_t v50 = sub_1C151E62C();
    uint64_t v52 = v51;
    if (v50 == sub_1C151E62C() && v52 == v53)
    {
      swift_bridgeObjectRelease_n();
LABEL_33:
      uint64_t v55 = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
LABEL_34:
      uint64_t v57 = v55;
      uint64_t v58 = v56;
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];

LABEL_35:
      *(void *)a2 = v57;
      *(void *)(a2 + 8) = v58;
      return;
    }
    char v54 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v54) {
      goto LABEL_33;
    }
    uint64_t v59 = sub_1C151E62C();
    uint64_t v61 = v60;
    if (v59 == sub_1C151E62C() && v61 == v62)
    {
      swift_bridgeObjectRelease_n();
LABEL_40:
      uint64_t v55 = sub_1C0F7E240();
      goto LABEL_34;
    }
    char v63 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_40;
    }
    id v64 = v42;
    uint64_t v65 = (void *)sub_1C151E5EC();
    uint64_t v66 = sub_1C151E62C();
    uint64_t v68 = v67;
    if (v66 == sub_1C151E62C() && v68 == v69) {
      goto LABEL_46;
    }
    char v70 = sub_1C1520A9C();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v70 & 1) == 0)
    {
      id v71 = v64;
      uint64_t v65 = (void *)sub_1C151E5EC();
      uint64_t v72 = sub_1C151E62C();
      uint64_t v74 = v73;
      if (v72 == sub_1C151E62C() && v74 == v75)
      {
LABEL_46:

        swift_bridgeObjectRelease_n();
        goto LABEL_47;
      }
      char v79 = sub_1C1520A9C();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v79 & 1) == 0)
      {
        uint64_t v57 = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
        uint64_t v58 = v80;
        *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];

        goto LABEL_35;
      }
    }
LABEL_47:
    uint64_t v76 = sub_1C0F7E0AC();
    uint64_t v78 = v77;
    *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];

    *(void *)a2 = v76;
    *(void *)(a2 + 8) = v78;
    return;
  }
LABEL_7:
  id v11 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType), sel_nameForSharing);
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C1065BB8(v12, v14, 0xD000000000000010, 0x80000001C1624160, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v16 = self;
  uint64_t v17 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  v81[0] = 0;
  id v18 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, v81);

  id v19 = v81[0];
  if (v18)
  {
    uint64_t v20 = sub_1C151606C();
    uint64_t v22 = v21;

    *(void *)(a2 + 24) = MEMORY[0x1E4F277C0];
    *(void *)a2 = v20;
    *(void *)(a2 + 8) = v22;
  }
  else
  {
    uint64_t v23 = v19;
    uint64_t v24 = (void *)sub_1C1515D3C();

    swift_willThrow();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

Swift::String __swiftcall SharingPuzzleTypeTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  if (dataTypeIdentifierForActivityType.value)
  {
    unint64_t v3 = 0xD00000000000001DLL;
    if (sub_1C151E62C() == 0xD000000000000026 && v4 == 0x80000001C160BC20)
    {
      uint64_t v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      unint64_t v6 = 0x80000001C160BC50;
    }
    else
    {
      char v7 = sub_1C1520A9C();
      uint64_t v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if (v7)
      {
        unint64_t v6 = 0x80000001C160BC50;
      }
      else
      {
        unint64_t v3 = 0;
        unint64_t v6 = 0xE000000000000000;
      }
    }
  }
  else
  {
    unint64_t v3 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v9 = v3;
  id v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

uint64_t type metadata accessor for SharingPuzzleTypeTextActivityItemSource()
{
  return self;
}

uint64_t method lookup function for SharingPuzzleTypeTextActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPuzzleTypeTextActivityItemSource);
}

uint64_t dispatch thunk of SharingPuzzleTypeTextActivityItemSource.__allocating_init(puzzleType:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t FormatTagBinding.Bool.BOOL(from:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C0F80EC8(a1, v1, ObjectType);
}

BOOL static FormatTagBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatTagBinding.Bool.BOOL(from:)(void **a1)
{
  uint64_t v2 = *a1;
  char v5 = *v1;
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C0F80D28(v2, &v5, ObjectType) & 1;
}

uint64_t FormatTagBinding.Bool.BOOL(from:)(uint64_t a1)
{
  char v5 = *v1;
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C0F80D28(v2, &v5, ObjectType) & 1;
}

uint64_t FormatTagBinding.Bool.BOOL(from:)()
{
  char v5 = *v0;
  id v1 = FCFeedDescriptor.feedTag.getter();
  uint64_t ObjectType = swift_getObjectType();
  char v3 = sub_1C0F80D28(v1, &v5, ObjectType);
  swift_unknownObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C0F7F994(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C0054F8C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0054F8C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0F7FA20()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0054F8C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0F7FA84()
{
  sub_1C0054F8C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F7FAD8()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0054F8C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

void sub_1C0F7FB38(void *a1@<X8>)
{
  *a1 = &unk_1F1B64760;
}

uint64_t FormatTagBinding.Bool.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatTagBinding.Bool.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F7FBBC@<X0>(unsigned char *a1@<X0>, unint64_t *a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      char v104 = 1;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12 = (void *)swift_unknownObjectRetain();
      char v13 = sub_1C0F80D28(v12, &v104, ObjectType);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v14 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v14 = v13 & 1;
      uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
      unint64_t v3 = 0xE800000000000000;
      unint64_t v10 = 0x6369706F54207349;
      break;
    case 2:
      char v104 = 2;
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = (void *)swift_unknownObjectRetain();
      char v18 = sub_1C0F80D28(v17, &v104, v16);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      id v19 = (char *)a2 + *(int *)(v7 + 24);
      *id v19 = v18 & 1;
      uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
      unint64_t v3 = 0xE800000000000000;
      unint64_t v10 = 0x6C61636F4C207349;
      break;
    case 3:
      unint64_t v10 = 0x74726F7053207349;
      char v104 = 3;
      uint64_t v21 = swift_getObjectType();
      uint64_t v22 = (void *)swift_unknownObjectRetain();
      char v23 = sub_1C0F80D28(v22, &v104, v21);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v24 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v24 = v23 & 1;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      unint64_t v3 = 0xE800000000000000;
      break;
    case 4:
      char v104 = 4;
      uint64_t v26 = swift_getObjectType();
      uint64_t v27 = (void *)swift_unknownObjectRetain();
      char v28 = sub_1C0F80D28(v27, &v104, v26);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v29 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v29 = v28 & 1;
      uint64_t v30 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
      unint64_t v3 = 0xEA00000000006E6FLL;
      unint64_t v10 = 0x6974636553207349;
      break;
    case 5:
      char v104 = 5;
      uint64_t v31 = swift_getObjectType();
      uint64_t v32 = (void *)swift_unknownObjectRetain();
      char v33 = sub_1C0F80D28(v32, &v104, v31);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v34 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v34 = v33 & 1;
      uint64_t v35 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
      unint64_t v3 = 0xEC00000072657061;
      unint64_t v10 = 0x707377654E207349;
      break;
    case 6:
      char v104 = 6;
      uint64_t v36 = swift_getObjectType();
      uint64_t v37 = (void *)swift_unknownObjectRetain();
      char v38 = sub_1C0F80D28(v37, &v104, v36);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v39 = (char *)a2 + *(int *)(v7 + 24);
      unsigned char *v39 = v38 & 1;
      uint64_t v40 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
      unint64_t v3 = 0xEB00000000656E69;
      unint64_t v10 = 0x7A6167614D207349;
      break;
    case 7:
      unint64_t v3 = 0xE900000000000063;
      char v104 = 7;
      uint64_t v41 = swift_getObjectType();
      id v42 = (void *)swift_unknownObjectRetain();
      char v43 = sub_1C0F80D28(v42, &v104, v41);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v44 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v44 = v43 & 1;
      uint64_t v45 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
      unint64_t v10 = 0x696C627550207349;
      break;
    case 8:
      char v104 = 8;
      uint64_t v46 = swift_getObjectType();
      uint64_t v47 = (void *)swift_unknownObjectRetain();
      char v48 = sub_1C0F80D28(v47, &v104, v46);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      char v49 = (char *)a2 + *(int *)(v7 + 24);
      *char v49 = v48 & 1;
      uint64_t v50 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
      unint64_t v3 = 0xEF656C6261626972;
      unint64_t v10 = 0x6373627553207349;
      break;
    case 9:
      char v104 = 9;
      uint64_t v51 = swift_getObjectType();
      uint64_t v52 = (void *)swift_unknownObjectRetain();
      char v53 = sub_1C0F80D28(v52, &v104, v51);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      char v54 = (char *)a2 + *(int *)(v7 + 24);
      *char v54 = v53 & 1;
      uint64_t v55 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
      unint64_t v10 = 0xD000000000000013;
      uint64_t v56 = "Is Explicit Content";
      goto LABEL_15;
    case 0xA:
      char v104 = 10;
      uint64_t v57 = swift_getObjectType();
      uint64_t v58 = (void *)swift_unknownObjectRetain();
      char v59 = sub_1C0F80D28(v58, &v104, v57);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v60 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v60 = v59 & 1;
      uint64_t v61 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 0, 1, v61);
      unint64_t v10 = 0xD00000000000001BLL;
      uint64_t v56 = "Is Blocked Explicit Content";
      goto LABEL_15;
    case 0xB:
      char v104 = 11;
      uint64_t v62 = swift_getObjectType();
      char v63 = (void *)swift_unknownObjectRetain();
      char v64 = sub_1C0F80D28(v63, &v104, v62);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v65 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v65 = v64 & 1;
      uint64_t v66 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
      unint64_t v3 = 0xE90000000000006ELL;
      unint64_t v10 = 0x6564646948207349;
      break;
    case 0xC:
      unint64_t v10 = 0xD000000000000012;
      char v104 = 12;
      uint64_t v67 = swift_getObjectType();
      uint64_t v68 = (void *)swift_unknownObjectRetain();
      char v69 = sub_1C0F80D28(v68, &v104, v67);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      char v70 = (char *)a2 + *(int *)(v7 + 24);
      *char v70 = v69 & 1;
      uint64_t v71 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
      uint64_t v56 = "Is Sensitive Topic";
LABEL_15:
      unint64_t v3 = (unint64_t)(v56 - 32) | 0x8000000000000000;
      break;
    case 0xD:
      char v104 = 13;
      uint64_t v72 = swift_getObjectType();
      uint64_t v73 = (void *)swift_unknownObjectRetain();
      char v74 = sub_1C0F80D28(v73, &v104, v72);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v75 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v75 = v74 & 1;
      uint64_t v76 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
      unint64_t v3 = 0xEA0000000000786FLL;
      unint64_t v10 = 0x62646E6153207349;
      break;
    case 0xE:
      char v104 = 14;
      uint64_t v77 = swift_getObjectType();
      uint64_t v78 = (void *)swift_unknownObjectRetain();
      char v79 = sub_1C0F80D28(v78, &v104, v77);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v80 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v80 = v79 & 1;
      uint64_t v81 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 0, 1, v81);
      unint64_t v3 = 0xEB000000006C616ELL;
      unint64_t v10 = 0x7265746E49207349;
      break;
    case 0xF:
      char v104 = 15;
      uint64_t v82 = swift_getObjectType();
      uint64_t v83 = (void *)swift_unknownObjectRetain();
      char v84 = sub_1C0F80D28(v83, &v104, v82);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v85 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v85 = v84 & 1;
      uint64_t v86 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 0, 1, v86);
      unint64_t v3 = 0xEC00000064656566;
      unint64_t v10 = 0x7265707553207349;
      break;
    case 0x10:
      unint64_t v10 = 0x74726F7053207349;
      char v104 = 16;
      uint64_t v87 = swift_getObjectType();
      uint64_t v88 = (void *)swift_unknownObjectRetain();
      char v89 = sub_1C0F80D28(v88, &v104, v87);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v90 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v90 = v89 & 1;
      uint64_t v91 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 0, 1, v91);
      unint64_t v3 = 0xEF746E6576452073;
      break;
    case 0x11:
      char v104 = 17;
      uint64_t v92 = swift_getObjectType();
      uint64_t v93 = (void *)swift_unknownObjectRetain();
      char v94 = sub_1C0F80D28(v93, &v104, v92);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v95 = (char *)a2 + *(int *)(v7 + 24);
      *uint64_t v95 = v94 & 1;
      uint64_t v96 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v95, 0, 1, v96);
      unint64_t v3 = 0xEC0000007374726FLL;
      unint64_t v10 = 0x705320794D207349;
      break;
    case 0x12:
      char v104 = 18;
      uint64_t v97 = swift_getObjectType();
      uint64_t v98 = (void *)swift_unknownObjectRetain();
      char v99 = sub_1C0F80D28(v98, &v104, v97);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v100 = (char *)a2 + *(int *)(v7 + 24);
      unsigned char *v100 = v99 & 1;
      uint64_t v101 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v100, 0, 1, v101);
      unint64_t v3 = 0xED00006275482065;
      unint64_t v10 = 0x6C7A7A7550207349;
      break;
    default:
      unint64_t v3 = 0xEA00000000006C65;
      char v104 = 0;
      uint64_t v4 = swift_getObjectType();
      uint64_t v5 = (void *)swift_unknownObjectRetain();
      char v6 = sub_1C0F80D28(v5, &v104, v4);
      swift_unknownObjectRelease();
      uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
      char v8 = (char *)a2 + *(int *)(v7 + 24);
      *char v8 = v6 & 1;
      uint64_t v9 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
      unint64_t v10 = 0x6E6E616843207349;
      break;
  }
  *a2 = v10;
  a2[1] = v3;
  a2[2] = 0;
  a2[3] = 0;
  uint64_t v102 = (char *)a2 + *(int *)(v7 + 28);
  *(void *)uint64_t v102 = 0;
  *((void *)v102 + 1) = 0;
  v102[16] = -1;
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 0, 1, v7);
}

uint64_t sub_1C0F80B30@<X0>(unsigned __int8 *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatJson();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  switch(v7)
  {
    case 1:
      char v8 = 1;
      goto LABEL_21;
    case 2:
      char v8 = 2;
      goto LABEL_21;
    case 3:
      char v8 = 3;
      goto LABEL_21;
    case 4:
      char v8 = 4;
      goto LABEL_21;
    case 5:
      char v8 = 5;
      goto LABEL_21;
    case 6:
      char v8 = 6;
      goto LABEL_21;
    case 7:
      char v8 = 7;
      goto LABEL_21;
    case 8:
      char v8 = 8;
      goto LABEL_21;
    case 9:
      char v8 = 9;
      goto LABEL_21;
    case 10:
      char v8 = 10;
      goto LABEL_21;
    case 11:
      char v8 = 11;
      goto LABEL_21;
    case 12:
      char v8 = 12;
      goto LABEL_21;
    case 13:
      char v8 = 13;
      goto LABEL_21;
    case 14:
      char v8 = 14;
      goto LABEL_21;
    case 15:
      char v8 = 15;
      goto LABEL_21;
    case 16:
      char v8 = 16;
      goto LABEL_21;
    case 17:
      char v8 = 17;
      goto LABEL_21;
    case 18:
      char v8 = 18;
LABEL_21:
      char v14 = v8;
      break;
    default:
      char v14 = 0;
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v10 = (void *)swift_unknownObjectRetain();
  char v11 = sub_1C0F80D28(v10, &v14, ObjectType);
  swift_unknownObjectRelease();
  unsigned char *v6 = v11 & 1;
  swift_storeEnumTagMultiPayload();
  return sub_1C029286C(v7, (uint64_t)v6, a2);
}

uint64_t sub_1C0F80D28(id a1, unsigned char *a2, uint64_t a3)
{
  switch(*a2)
  {
    case 1:
      uint64_t result = FCTagProviding.isTopic.getter(a3);
      break;
    case 2:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isLocal);
      break;
    case 3:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isSports);
      break;
    case 4:
      uint64_t result = FCTagProviding.isSection.getter(a3);
      break;
    case 5:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isNewspaper);
      break;
    case 6:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isMagazine);
      break;
    case 7:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isPublic);
      break;
    case 8:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isSubscribable);
      break;
    case 9:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isExplicitContent);
      break;
    case 0xA:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isBlockedExplicitContent);
      break;
    case 0xB:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isHidden);
      break;
    case 0xC:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isSensitiveTopic);
      break;
    case 0xD:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isSandbox);
      break;
    case 0xE:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isInternal);
      break;
    case 0xF:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_superfeedConfigResourceID);
      if (result)
      {

        uint64_t result = 1;
      }
      break;
    case 0x10:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isSportsEvent);
      break;
    case 0x11:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isMySports);
      break;
    case 0x12:
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_isPuzzleHub);
      break;
    default:
      uint64_t result = FCTagProviding.isChannel.getter(a3);
      break;
  }
  return result;
}

uint64_t sub_1C0F80EC8(void *a1, char *a2, uint64_t a3)
{
  char v4 = *a2;
  return sub_1C0F80D28(a1, &v4, a3) & 1;
}

unint64_t sub_1C0F80EFC()
{
  unint64_t result = qword_1EA1A9760;
  if (!qword_1EA1A9760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9760);
  }
  return result;
}

unint64_t sub_1C0F80F50(uint64_t a1)
{
  unint64_t result = sub_1C0861364();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F80F78(void *a1)
{
  a1[1] = sub_1BFCBCC3C();
  a1[2] = sub_1BFD098E0();
  unint64_t result = sub_1C0F80EFC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Bool()
{
  return &type metadata for FormatTagBinding.Bool;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_4()
{
  return &_s4BoolO10CodingTypeON_4;
}

unint64_t sub_1C0F80FFC()
{
  unint64_t result = qword_1EA1A9768;
  if (!qword_1EA1A9768)
  {
    sub_1C0F81054();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9768);
  }
  return result;
}

void sub_1C0F81054()
{
  if (!qword_1EA1A9770)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9770);
    }
  }
}

unint64_t sub_1C0F810B0()
{
  unint64_t result = qword_1EA1A9778;
  if (!qword_1EA1A9778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9778);
  }
  return result;
}

double sub_1C0F81104@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v6[2] = a1;
  uint64_t v3 = sub_1C0182048((void (*)(char *))sub_1C0F811AC, (uint64_t)v6, (uint64_t)&unk_1F1B64760);
  sub_1C09BCFA4(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v3, v7);
  swift_bridgeObjectRelease();
  double result = *(double *)v7;
  long long v5 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_1C0F811AC@<X0>(unsigned char *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1C0F7FBBC(a1, a2);
}

unint64_t FormatDimensionSizing.height.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFF35BC8(v2);
}

unint64_t FormatDimensionSizing.width.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1BFF35BC8(v2);
}

BOOL _s8NewsFeed21FormatDimensionSizingV2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  unint64_t v8 = v2;
  if (static FormatDimensionSizingValue.== infix(_:_:)(&v8, &v7))
  {
    unint64_t v7 = v4;
    unint64_t v8 = v3;
    return static FormatDimensionSizingValue.== infix(_:_:)(&v8, &v7);
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1C0F81248(uint64_t a1)
{
  unint64_t result = sub_1C0F81270();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F81270()
{
  unint64_t result = qword_1EA1A9780;
  if (!qword_1EA1A9780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9780);
  }
  return result;
}

unint64_t sub_1C0F812C4(void *a1)
{
  a1[1] = sub_1BFE41BEC();
  a1[2] = sub_1BFE283D8();
  unint64_t result = sub_1C0F812FC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F812FC()
{
  unint64_t result = qword_1EA1A9788;
  if (!qword_1EA1A9788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9788);
  }
  return result;
}

unint64_t destroy for FormatDimensionSizing(unint64_t *a1)
{
  sub_1BFF35C00(*a1);
  unint64_t v2 = a1[1];
  return sub_1BFF35C00(v2);
}

unint64_t *_s8NewsFeed21FormatDimensionSizingVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF35BC8(*a2);
  *a1 = v4;
  unint64_t v5 = a2[1];
  sub_1BFF35BC8(v5);
  a1[1] = v5;
  return a1;
}

unint64_t *assignWithCopy for FormatDimensionSizing(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF35BC8(*a2);
  unint64_t v5 = *a1;
  *a1 = v4;
  sub_1BFF35C00(v5);
  unint64_t v6 = a2[1];
  sub_1BFF35BC8(v6);
  unint64_t v7 = a1[1];
  a1[1] = v6;
  sub_1BFF35C00(v7);
  return a1;
}

unint64_t *assignWithTake for FormatDimensionSizing(unint64_t *a1, _OWORD *a2)
{
  sub_1BFF35C00(*a1);
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BFF35C00(v4);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDimensionSizing()
{
  return &type metadata for FormatDimensionSizing;
}

uint64_t sub_1C0F81490(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6448(0, v1, 0);
    uint64_t v2 = v12;
    unint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6448(v8 > 1, v9 + 1, 1);
      }
      v4 += 3;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(unsigned char *)(v10 + 48) = (v7 & 0x7FFFFFFFFFFFFFFFLL) == 0;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81588(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6448(0, v1, 0);
    uint64_t v2 = v12;
    unint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_1C05F6448(v9 > 1, v8 + 1, 1);
      }
      v4 += 3;
      *(void *)(v12 + 16) = v8 + 1;
      uint64_t v10 = v12 + 24 * v8;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(unsigned char *)(v10 + 48) = (v7 & 0x7FF0000000000000) != 0x7FF0000000000000;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81688(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6448(0, v1, 0);
    uint64_t v2 = v12;
    unint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_1C05F6448(v9 > 1, v8 + 1, 1);
      }
      v4 += 3;
      *(void *)(v12 + 16) = v8 + 1;
      uint64_t v10 = v12 + 24 * v8;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(unsigned char *)(v10 + 48) = (v7 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81788(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6448(0, v1, 0);
    uint64_t v2 = v12;
    unint64_t v4 = (void *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      BOOL v7 = (*v4 & 0xFFFFFFFFFFFFFLL) != 0 && (~*v4 & 0x7FF0000000000000) == 0;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6448(v8 > 1, v9 + 1, 1);
      }
      v4 += 3;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(unsigned char *)(v10 + 48) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F8188C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C05F6448(0, v1, 0);
    uint64_t v2 = v13;
    unint64_t v4 = (void *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      BOOL v8 = (~*v4 & 0x7FF0000000000000) == 0 && (*v4 & 0xFFFFFFFFFFFFFLL) != 0 && (*v4 & 0x8000000000000) == 0;
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_1C05F6448(v9 > 1, v10 + 1, 1);
      }
      v4 += 3;
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 24 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v5;
      *(unsigned char *)(v11 + 48) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F8199C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6448(0, v1, 0);
    uint64_t v2 = v12;
    unint64_t v4 = (void *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      BOOL v7 = ((*v4 >> 52) & 0x7FFLL) != 0x7FF && ((*v4 >> 52) & 0x7FFLL) != 0;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6448(v8 > 1, v9 + 1, 1);
      }
      v4 += 3;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(unsigned char *)(v10 + 48) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81AA0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6448(0, v1, 0);
    uint64_t v2 = v12;
    unint64_t v4 = (void *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      BOOL v7 = (*v4 & 0xFFFFFFFFFFFFFLL) != 0 && (*v4 & 0x7FF0000000000000) == 0;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_1C05F6448(v9 > 1, v8 + 1, 1);
      }
      v4 += 3;
      *(void *)(v12 + 16) = v8 + 1;
      uint64_t v10 = v12 + 24 * v8;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(unsigned char *)(v10 + 48) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81BA0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    sub_1C05F6468(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = a1 + 48;
    do
    {
      uint64_t v6 = *(void *)(v4 - 16);
      uint64_t v5 = *(void *)(v4 - 8);
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C151EF4C();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1C05F6468(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = (void *)(v14 + 32 * v11);
      v12[4] = v6;
      v12[5] = v5;
      v12[6] = v7;
      v12[7] = v9;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81C9C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6488(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      double v7 = *v4;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6488(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = ceil(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81D94(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6488(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      double v7 = *v4;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6488(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = floor(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81E8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C05F6488(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      double v7 = floor(*v4);
      double v8 = ceil(*v4);
      if (*(uint64_t *)v4 >= 0) {
        double v9 = v8;
      }
      else {
        double v9 = v7;
      }
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        sub_1C05F6488(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 24 * v11;
      *(void *)(v12 + 32) = v6;
      *(void *)(v12 + 40) = v5;
      *(double *)(v12 + 48) = v9;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F81F94(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6488(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      double v7 = *v4;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6488(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = round(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F8208C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6488(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      double v7 = *v4;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6488(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = rint(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F82184(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C05F6488(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      double v7 = *v4;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C05F6488(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = trunc(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0F8227C@<X0>(double *a1@<X0>, uint64_t *a2@<X8>)
{
  double v3 = *a1;
  switch(*v2)
  {
    case 1:
      uint64_t v5 = swift_allocObject();
      double v6 = floor(v3);
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0F81D94(v9);
      goto LABEL_11;
    case 2:
      double v10 = floor(v3);
      double v11 = ceil(v3);
      if (v3 >= 0.0) {
        double v6 = v11;
      }
      else {
        double v6 = v10;
      }
      uint64_t v5 = swift_allocObject();
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0F81E8C(v12);
      goto LABEL_11;
    case 3:
      uint64_t v5 = swift_allocObject();
      double v6 = round(v3);
      uint64_t v13 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0F81F94(v13);
      goto LABEL_11;
    case 4:
      uint64_t v5 = swift_allocObject();
      double v6 = rint(v3);
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0F8208C(v14);
      goto LABEL_11;
    case 5:
      uint64_t v5 = swift_allocObject();
      double v6 = trunc(v3);
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0F82184(v15);
      goto LABEL_11;
    case 6:
      uint64_t v19 = swift_allocObject();
      uint64_t v20 = sub_1C151EF4C();
      uint64_t v22 = v21;
      uint64_t v23 = swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C0F81BA0(v23);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 16) = v20;
      *(void *)(v19 + 24) = v22;
      *(void *)(v19 + 32) = v24;
      uint64_t v18 = v19 | 0x5000000000000000;
      break;
    case 7:
      BOOL v25 = (*(void *)&v3 & 0x7FFFFFFFFFFFFFFFLL) == 0;
      uint64_t v18 = swift_allocObject();
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C0F81490(v26);
      goto LABEL_35;
    case 8:
      uint64_t v18 = swift_allocObject();
      BOOL v25 = (~*(void *)&v3 & 0x7FF0000000000000) != 0;
      uint64_t v28 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C0F81588(v28);
      goto LABEL_35;
    case 9:
      BOOL v25 = (*(void *)&v3 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000;
      uint64_t v18 = swift_allocObject();
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C0F81688(v29);
      goto LABEL_35;
    case 0xA:
      BOOL v25 = (*(void *)a1 & 0xFFFFFFFFFFFFFLL) != 0 && (~*(void *)&v3 & 0x7FF0000000000000) == 0;
      uint64_t v18 = swift_allocObject();
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C0F81788(v30);
      goto LABEL_35;
    case 0xB:
      BOOL v25 = (~*(void *)&v3 & 0x7FF0000000000000) == 0
         && (*(void *)&v3 & 0xFFFFFFFFFFFFFLL) != 0
         && (*(void *)&v3 & 0x8000000000000) == 0;
      uint64_t v18 = swift_allocObject();
      uint64_t v32 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C0F8188C(v32);
      goto LABEL_35;
    case 0xC:
      BOOL v25 = ((*(void *)&v3 >> 52) & 0x7FFLL) != 0x7FF && ((*(void *)&v3 >> 52) & 0x7FFLL) != 0;
      uint64_t v18 = swift_allocObject();
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C0F8199C(v33);
      goto LABEL_35;
    case 0xD:
      BOOL v25 = (*(void *)a1 & 0xFFFFFFFFFFFFFLL) != 0 && (*(void *)&v3 & 0x7FF0000000000000) == 0;
      uint64_t v18 = swift_allocObject();
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C0F81AA0(v34);
LABEL_35:
      uint64_t v35 = v27;
      uint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)(v18 + 16) = v25;
      *(void *)(v18 + 24) = v35;
      break;
    default:
      uint64_t v5 = swift_allocObject();
      double v6 = ceil(v3);
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0F81C9C(v7);
LABEL_11:
      uint64_t v16 = v8;
      uint64_t result = swift_bridgeObjectRelease();
      *(double *)(v5 + 16) = v6;
      *(void *)(v5 + 24) = v16;
      uint64_t v18 = v5 | 0x3000000000000000;
      break;
  }
  *a2 = v18;
  return result;
}

BOOL static FormatOptionsNodeStatementModifier.Float.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatOptionsNodeStatementModifier.Float.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatOptionsNodeStatementModifier.Float.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0F82764()
{
  unint64_t result = qword_1EA1A9790;
  if (!qword_1EA1A9790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9790);
  }
  return result;
}

unint64_t sub_1C0F827B8(uint64_t a1)
{
  unint64_t result = sub_1C0F827E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F827E0()
{
  unint64_t result = qword_1EA1A9798;
  if (!qword_1EA1A9798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9798);
  }
  return result;
}

unint64_t sub_1C0F82834(void *a1)
{
  a1[1] = sub_1C085F704();
  a1[2] = sub_1C09092B0();
  unint64_t result = sub_1C0F82764();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F8286C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatOptionsNodeStatementModifier.Float.init(from:)(a1, a2);
}

uint64_t sub_1C0F82884(void *a1)
{
  return FormatOptionsNodeStatementModifier.Float.encode(to:)(a1);
}

unsigned char *_s5FloatOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F82968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementModifier.Float()
{
  return &type metadata for FormatOptionsNodeStatementModifier.Float;
}

uint64_t sub_1C0F829A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F829D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t SharingActivityItemFactoryWithTracker.__allocating_init(tracker:factory:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  sub_1BFC773DC(a2, v4 + 24);
  return v4;
}

uint64_t SharingActivityItemFactoryWithTracker.init(tracker:factory:)(uint64_t a1, long long *a2)
{
  *(void *)(v2 + 16) = a1;
  sub_1BFC773DC(a2, v2 + 24);
  return v2;
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[6];
  uint64_t v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3, v7, v8);
}

void SharingActivityItemFactoryWithTracker.createLinkPresentationSource(headline:selectedText:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = v4[6];
  uint64_t v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, a3, v9, v10);
  sub_1C097AA34();
  a4[3] = v12;
  *a4 = v11;
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(issue:)(uint64_t a1)
{
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a1, v3, v4);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(channel:)(uint64_t a1)
{
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(feedDescriptor:)(uint64_t a1)
{
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a1, v3, v4);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(puzzle:shareData:)(uint64_t a1, long long *a2)
{
  long long v10 = *a2;
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a2 + 3);
  char v6 = *((unsigned char *)a2 + 32);
  uint64_t v7 = v2[6];
  uint64_t v8 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v7);
  long long v11 = v10;
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  char v14 = v6;
  return (*(uint64_t (**)(uint64_t, long long *, uint64_t, uint64_t))(v8 + 40))(a1, &v11, v7, v8);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(puzzleType:)(uint64_t a1)
{
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4);
}

void SharingActivityItemFactoryWithTracker.createLinkPresentationSource(issue:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 72))(a1, v5, v6);
  sub_1C097AA34();
  a2[3] = v8;
  *a2 = v7;
}

void SharingActivityItemFactoryWithTracker.createLinkPresentationSource(channel:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 80))(a1, v5, v6);
  sub_1C097AA34();
  a2[3] = v8;
  *a2 = v7;
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:feedItemIdentifier:type:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  char v10 = *a4;
  uint64_t v11 = v5[6];
  uint64_t v12 = v5[7];
  __swift_project_boxed_opaque_existential_1(v5 + 3, v11);
  char v14 = v10;
  return sub_1C0EA76AC(a1, a2, a3, &v14, v5[2], a5, v11, v12);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:type:sourceView:sourceItem:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v8 = *a2;
  uint64_t v9 = v4[6];
  uint64_t v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  char v12 = v8;
  return (*(uint64_t (**)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 120))(a1, &v12, v4[2], a3, a4, v9, v10);
}

{
  void *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  char v8 = *a2;
  uint64_t v9 = v4[6];
  uint64_t v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  char v12 = v8;
  return (*(uint64_t (**)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 144))(a1, &v12, v4[2], a3, a4, v9, v10);
}

{
  void *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  char v8 = *a2;
  uint64_t v9 = v4[6];
  uint64_t v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  char v12 = v8;
  return (*(uint64_t (**)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 152))(a1, &v12, v4[2], a3, a4, v9, v10);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:type:sourceView:)(uint64_t a1, char *a2, uint64_t a3)
{
  char v6 = *a2;
  uint64_t v7 = v3[6];
  uint64_t v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  char v10 = v6;
  return (*(uint64_t (**)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t))(v8 + 128))(a1, &v10, v3[2], a3, v7, v8);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:type:sourceView:sourceItem:)(uint64_t a1)
{
  uint64_t v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  return (*(uint64_t (**)(uint64_t))(v3 + 136))(a1);
}

uint64_t SharingActivityItemFactoryWithTracker.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t SharingActivityItemFactoryWithTracker.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharingActivityItemFactoryWithTracker()
{
  return self;
}

uint64_t method lookup function for SharingActivityItemFactoryWithTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingActivityItemFactoryWithTracker);
}

uint64_t dispatch thunk of SharingActivityItemFactoryWithTracker.__allocating_init(tracker:factory:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t GenericDataVisualization.init(responseItem:embedUrl:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  *a3 = *a1;
  a3[1] = v5;
  uint64_t v7 = type metadata accessor for GenericDataVisualization();
  uint64_t v8 = (char *)a3 + *(int *)(v7 + 20);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *(void *)((char *)a3 + *(int *)(v7 + 24)) = v6;
  return result;
}

uint64_t GenericDataVisualization.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GenericDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t GenericDataVisualization.urlDataSources.getter()
{
  type metadata accessor for GenericDataVisualization();
  return swift_bridgeObjectRetain();
}

uint64_t GenericDataVisualization.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F83B60(0, &qword_1EA1A97A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F83830();
  uint64_t v30 = v8;
  uint64_t v12 = v31;
  sub_1C1520EBC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v9;
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  BOOL v25 = v11;
  char v34 = 0;
  uint64_t v16 = sub_1C152069C();
  uint64_t v17 = v25;
  *BOOL v25 = v16;
  v17[1] = v18;
  char v33 = 1;
  sub_1BFEBF474((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v25 + *(int *)(v13 + 20), v5, v3);
  type metadata accessor for WebEmbedDataVisualizationURLDataSource();
  char v32 = 2;
  sub_1BFEBF474(&qword_1EB86A8C0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource);
  uint64_t v19 = v30;
  uint64_t v31 = 0;
  uint64_t v20 = sub_1C15205EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v15);
  uint64_t v22 = (uint64_t)v25;
  uint64_t v21 = v26;
  *(uint64_t *)((char *)v25 + *(int *)(v13 + 24)) = v20;
  sub_1C0F83884(v22, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C0F838E8(v22);
}

unint64_t sub_1C0F83830()
{
  unint64_t result = qword_1EA1A97A8;
  if (!qword_1EA1A97A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A97A8);
  }
  return result;
}

uint64_t sub_1C0F83884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenericDataVisualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F838E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenericDataVisualization();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t GenericDataVisualization.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0F83B60(0, &qword_1EA1A97B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F83830();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for GenericDataVisualization();
    char v14 = 1;
    sub_1C1515FDC();
    sub_1BFEBF474((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    sub_1C152080C();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_1C00BB894(0);
    sub_1C02F8F40();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1C0F83B60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0F83830();
    unint64_t v7 = a3(a1, &type metadata for GenericDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F83BC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1480A80(*a1, *a2);
}

uint64_t sub_1C0F83BD0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F83C84()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F83D24()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F83DD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F848E8();
  *a1 = result;
  return result;
}

void sub_1C0F83E04(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007265;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6C72556465626D65;
  if (v2 != 1)
  {
    uint64_t v5 = 0x53617461446C7275;
    unint64_t v4 = 0xEE0073656372756FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x696669746E656469;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0F83E74()
{
  uint64_t v1 = 0x6C72556465626D65;
  if (*v0 != 1) {
    uint64_t v1 = 0x53617461446C7275;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0F83EE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F848E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C0F83F08(uint64_t a1)
{
  unint64_t v2 = sub_1C0F83830();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F83F44(uint64_t a1)
{
  unint64_t v2 = sub_1C0F83830();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0F83F80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GenericDataVisualization.init(from:)(a1, a2);
}

uint64_t sub_1C0F83F98(void *a1)
{
  return GenericDataVisualization.encode(to:)(a1);
}

uint64_t GenericDataVisualization.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t GenericDataVisualization.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F8404C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F84090()
{
  return sub_1C151E77C();
}

uint64_t static GenericDataVisualization.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C0F840C8()
{
  return sub_1BFEBF474(&qword_1EA1A97B8, (void (*)(uint64_t))type metadata accessor for GenericDataVisualization);
}

uint64_t *initializeBufferWithCopyOfBuffer for GenericDataVisualization(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for GenericDataVisualization(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GenericDataVisualization(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GenericDataVisualization(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for GenericDataVisualization(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for GenericDataVisualization(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericDataVisualization(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F84570);
}

uint64_t sub_1C0F84570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GenericDataVisualization(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F84634);
}

uint64_t sub_1C0F84634(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GenericDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F847A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericDataVisualization.CodingKeys()
{
  return &type metadata for GenericDataVisualization.CodingKeys;
}

unint64_t sub_1C0F847E4()
{
  unint64_t result = qword_1EA1A97C0;
  if (!qword_1EA1A97C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A97C0);
  }
  return result;
}

unint64_t sub_1C0F8483C()
{
  unint64_t result = qword_1EA1A97C8;
  if (!qword_1EA1A97C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A97C8);
  }
  return result;
}

unint64_t sub_1C0F84894()
{
  unint64_t result = qword_1EA1A97D0;
  if (!qword_1EA1A97D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A97D0);
  }
  return result;
}

uint64_t sub_1C0F848E8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void destroy for DebugFormatFileSourceError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for DebugFormatFileSourceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  unsigned int v4 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain();
  id v5 = v4;
  *(void *)(a1 + 32) = v4;
  return a1;
}

void *assignWithCopy for DebugFormatFileSourceError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  unsigned int v4 = (void *)a2[4];
  id v5 = v4;
  unsigned int v6 = (void *)a1[4];
  a1[4] = v4;

  return a1;
}

uint64_t assignWithTake for DebugFormatFileSourceError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  id v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFileSourceError()
{
  return &type metadata for DebugFormatFileSourceError;
}

uint64_t FormatContentResource.Resolved.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatContentResource.Resolved();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = 0x7373612D7377656ELL;
  unint64_t v24 = 0xEA00000000007465;
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C1515F7C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C002F608((uint64_t)v7);
    uint64_t v16 = 1;
    uint64_t v17 = v22;
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v18(v11, v7, v8);
    *(void *)char v15 = a1;
    *((void *)v15 + 1) = a2;
    v18(&v15[*(int *)(v12 + 20)], v11, v8);
    uint64_t v19 = v22;
    sub_1C0F84D64((uint64_t)v15, v22);
    uint64_t v16 = 0;
    uint64_t v17 = v19;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v17, v16, 1, v12);
}

uint64_t type metadata accessor for FormatContentResource.Resolved()
{
  uint64_t result = qword_1EB876F50;
  if (!qword_1EB876F50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0F84D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentResource.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatContentResource.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentResource.Resolved.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentResource.Resolved.assetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatContentResource.Resolved() + 20);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

ValueMetadata *type metadata accessor for FormatContentResource()
{
  return &type metadata for FormatContentResource;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatContentResource.Resolved(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1515FDC();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FormatContentResource.Resolved(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for FormatContentResource.Resolved(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for FormatContentResource.Resolved(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FormatContentResource.Resolved(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for FormatContentResource.Resolved(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentResource.Resolved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F85260);
}

uint64_t sub_1C0F85260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatContentResource.Resolved(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F85324);
}

uint64_t sub_1C0F85324(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F853CC()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C0F85464()
{
  sub_1C12A0810();
  FormatContentSizeCategory.groupLayoutContentSizeCategory.getter((uint64_t)&v6);
  id v0 = v6;
  unsigned __int8 v1 = v7;
  sub_1BFFFC7A0(v6, v7);
  unint64_t v2 = (void *)sub_1C15176CC();
  char v3 = sub_1BFFFB824();

  sub_1BFFFC630(v0, v1);
  if ((v3 & 1) == 0)
  {
    sub_1C0020AF0();
    swift_allocError();
    uint64_t v5 = v4;
    *unint64_t v4 = sub_1C15176CC();
    *((unsigned char *)v5 + 40) = 1;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  sub_1BFFFC630(v0, v1);
}

void sub_1C0F85564(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  double v8 = CACurrentMediaTime();
  a3();
  if (v4) {
    return;
  }
  double v10 = CACurrentMediaTime();
  uint64_t v11 = *(void **)(v3 + 184);
  id v12 = *(id *)(v3 + 192);
  uint64_t v13 = v11[2];
  if (!((unint64_t)v12 >> 62))
  {
    uint64_t v14 = *(void *)(((unint64_t)v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_4;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C15204BC();
  unint64_t v9 = swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_18;
  }
LABEL_4:
  if (v13 == 0x8000000000000000 && v14 == -1)
  {
    __break(1u);
    return;
  }
  unint64_t v9 = v13 % v14;
  if (((unint64_t)v12 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)(((unint64_t)v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v16 = *((id *)v12 + v9 + 4);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_19:
  id v16 = (id)MEMORY[0x1C18C7CB0](v9, v12);
LABEL_12:
  id v12 = v16;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_22:
  }
    uint64_t v11 = sub_1C0EE73E0(0, v11[2] + 1, 1, v11);
  unint64_t v18 = v11[2];
  unint64_t v17 = v11[3];
  if (v18 >= v17 >> 1) {
    uint64_t v11 = sub_1C0EE73E0((void *)(v17 > 1), v18 + 1, 1, v11);
  }
  _OWORD v11[2] = v18 + 1;
  uint64_t v19 = (double *)&v11[4 * v18];
  *((void *)v19 + 4) = a1;
  *((void *)v19 + 5) = a2;
  v19[6] = (v10 - v8) * 1000.0;
  *((void *)v19 + 7) = v12;
  *(void *)(v3 + 184) = v11;
}

void sub_1C0F85720(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr)@<X2>, uint64_t a4@<X8>)
{
  double v10 = CACurrentMediaTime();
  a3(&v23);
  if (v5) {
    return;
  }
  double v12 = CACurrentMediaTime();
  uint64_t v13 = *(void **)(v4 + 184);
  id v14 = *(id *)(v4 + 192);
  uint64_t v15 = v13[2];
  if (!((unint64_t)v14 >> 62))
  {
    uint64_t v16 = *(void *)(((unint64_t)v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_4;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C15204BC();
  unint64_t v11 = swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_18;
  }
LABEL_4:
  if (v15 == 0x8000000000000000 && v16 == -1)
  {
    __break(1u);
    return;
  }
  unint64_t v11 = v15 % v16;
  if (((unint64_t)v14 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)(((unint64_t)v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v18 = *((id *)v14 + v11 + 4);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_19:
  id v18 = (id)MEMORY[0x1C18C7CB0](v11, v14);
LABEL_12:
  id v14 = v18;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_22:
  }
    uint64_t v13 = sub_1C0EE73E0(0, v13[2] + 1, 1, v13);
  unint64_t v20 = v13[2];
  unint64_t v19 = v13[3];
  if (v20 >= v19 >> 1) {
    uint64_t v13 = sub_1C0EE73E0((void *)(v19 > 1), v20 + 1, 1, v13);
  }
  _OWORD v13[2] = v20 + 1;
  uint64_t v21 = (double *)&v13[4 * v20];
  *((void *)v21 + 4) = a1;
  *((void *)v21 + 5) = a2;
  v21[6] = (v12 - v10) * 1000.0;
  *((void *)v21 + 7) = v14;
  *(void *)(v4 + 184) = v13;
  uint64_t v22 = v27;
  *(unsigned char *)a4 = v23;
  *(_OWORD *)(a4 + 8) = v24;
  *(_OWORD *)(a4 + 24) = v25;
  *(_OWORD *)(a4 + 40) = v26;
  *(void *)(a4 + 56) = v22;
  *(_OWORD *)(a4 + 64) = v28;
}

uint64_t sub_1C0F8591C()
{
  uint64_t v0 = sub_1C151F55C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151F52C();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v5 - 8);
  v8[0] = sub_1BFE4597C();
  sub_1C151E1AC();
  v8[1] = MEMORY[0x1E4FBC860];
  sub_1C0F8BF64((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  id v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C00627E4(0, (unint64_t *)&unk_1EB879FB0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C0064CFC((unint64_t *)&qword_1EB879FC0, (unint64_t *)&unk_1EB879FB0, v6);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1C151F5AC();
  qword_1EA1A97E0 = result;
  return result;
}

id sub_1C0F85B90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151759C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView;
  unsigned __int8 v7 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView);
  if (v7)
  {
    id v8 = *(id *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView);
  }
  else
  {
    uint64_t v9 = v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    id v10 = objc_allocWithZone((Class)sub_1C15177EC());
    unint64_t v11 = (void *)sub_1C15177DC();
    double v12 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v11;
    id v8 = v11;

    unsigned __int8 v7 = 0;
  }
  id v13 = v7;
  return v8;
}

id sub_1C0F85CCC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_viewportMonitor];
  sub_1C151BAFC();

  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_1C0F85E78()
{
  return type metadata accessor for DebugFormatCanvasViewController();
}

uint64_t type metadata accessor for DebugFormatCanvasViewController()
{
  uint64_t result = qword_1EA1A9820;
  if (!qword_1EA1A9820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0F85EF4()
{
  uint64_t v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v3 = v2;
  objc_msgSend(v2, sel_setPreservesSuperviewLayoutMargins_, 1);

  id v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_super v5 = v4;
  id v6 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(v1, sel_view);
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v8 = v7;
  objc_msgSend(v7, sel_setClipsToBounds_, 0);

  id v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v10 = v9;
  objc_msgSend(v9, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView]);

  id v11 = objc_msgSend(v1, sel_view);
  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v12 = v11;
  id v13 = sub_1C0F85B90();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = sub_1C0F85B90();
  if (qword_1EA194528 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C0F8BF64((unint64_t *)&unk_1EA1A9830, (void (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController);
  sub_1C1516FCC();
  swift_release();
  sub_1C15177AC();

  id v15 = sub_1C0F85B90();
  if (qword_1EA194530 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1516FCC();
  swift_release();
  sub_1C15177BC();

  id v16 = objc_msgSend(v1, sel_view);
  if (v16)
  {
    unint64_t v17 = v16;
    sub_1C151BB0C();

    return;
  }
LABEL_17:
  __break(1u);
}

void sub_1C0F8626C(unsigned __int8 *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    id v8 = sub_1C0F85B90();

    a3(v4);
  }
}

void sub_1C0F86330()
{
  v80.receiver = v0;
  v80.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v80, sel_viewWillLayoutSubviews);
  id v1 = sub_1C0F85B90();
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v3 = v2;
  objc_msgSend(v2, sel_bounds);

  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v5 = v4;
  objc_msgSend(v4, sel_bounds);
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;

  v81.origin.CGFloat x = v7;
  v81.origin.double y = v9;
  v81.size.width = v11;
  v81.size.height = v13;
  CGRectGetHeight(v81);
  sub_1C151F79C();
  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v15 = v14;
  objc_msgSend(v14, sel_bounds);
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;

  v82.origin.CGFloat x = v17;
  v82.origin.double y = v19;
  v82.size.width = v21;
  v82.size.height = v23;
  CGRectGetHeight(v82);
  sub_1C151F7BC();
  objc_msgSend(v1, sel_setFrame_);

  long long v24 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView];
  v79.receiver = v24;
  v79.super_class = (Class)type metadata accessor for DebugFormatContentView();
  objc_msgSendSuper2(&v79, sel_contentScaleFactor);
  double v26 = v25;
  id v27 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v27, sel_displayScale);
  double v29 = v28;

  if (v26 != v29) {
    return;
  }
  id v30 = objc_msgSend(v0, sel_view);
  if (!v30) {
    goto LABEL_18;
  }
  uint64_t v31 = v30;
  objc_msgSend(v30, sel_bounds);
  double v33 = v32;
  double v35 = v34;
  double v37 = v36;
  double v39 = v38;

  objc_msgSend(v24, sel_setFrame_, v33, v35, v37, v39);
  id v40 = objc_msgSend(v0, sel_view);
  if (!v40)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v41 = v40;
  objc_msgSend(v40, sel_bounds);
  CGFloat v43 = v42;
  CGFloat v45 = v44;
  CGFloat v47 = v46;
  CGFloat v49 = v48;

  v83.origin.CGFloat x = v43;
  v83.origin.double y = v45;
  v83.size.width = v47;
  v83.size.height = v49;
  CGFloat Width = CGRectGetWidth(v83);
  id v51 = objc_msgSend(v0, sel_view);
  if (!v51)
  {
LABEL_20:
    __break(1u);
    return;
  }
  uint64_t v52 = v51;
  objc_msgSend(v51, sel_bounds);
  CGFloat v54 = v53;
  CGFloat v56 = v55;
  CGFloat v58 = v57;
  CGFloat v60 = v59;

  v84.origin.CGFloat x = v54;
  v84.origin.double y = v56;
  v84.size.width = v58;
  v84.size.height = v60;
  double Height = CGRectGetHeight(v84);
  uint64_t v62 = &v24[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame];
  double v63 = CGRectGetHeight(*(CGRect *)&v24[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame]);
  if (Height > v63) {
    double v64 = Height;
  }
  else {
    double v64 = v63;
  }
  *(void *)uint64_t v62 = 0;
  *((void *)v62 + 1) = 0;
  *((CGFloat *)v62 + 2) = Width;
  *((double *)v62 + 3) = v64;
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  CGFloat v67 = Width;
  CGRectGetHeight(*(CGRect *)(&v64 - 3));
  id v68 = objc_msgSend(v24, sel_superview);
  if (v68)
  {
    char v69 = v68;
    objc_msgSend(v68, sel_bounds);
    CGFloat v71 = v70;
    CGFloat v73 = v72;
    CGFloat v75 = v74;
    CGFloat v77 = v76;

    v85.origin.CGFloat x = v71;
    v85.origin.double y = v73;
    v85.size.width = v75;
    v85.size.height = v77;
    CGRectGetHeight(v85);
  }
  uint64_t v78 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_bezelView];
  sub_1C151F74C();
  sub_1C151F76C();
  objc_msgSend(v78, sel_setFrame_);
}

id sub_1C0F86784(char *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151772C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  CGFloat v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = a2[7];
  long long v24 = a2[6];
  long long v25 = v12;
  long long v26 = a2[8];
  long long v13 = a2[3];
  long long v20 = a2[2];
  long long v21 = v13;
  long long v14 = a2[5];
  long long v22 = a2[4];
  long long v23 = v14;
  long long v15 = a2[1];
  long long v19 = *a2;
  id result = objc_msgSend(a1, sel_view, v19, v15, v20, v13, v22, v23, v24, v25, v26);
  if (result)
  {
    CGFloat v17 = result;
    sub_1C060F650(result, *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView]);

    uint64_t v18 = sub_1C0F86900(&v19, a3, (uint64_t)v11, *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView], a4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (id)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0F86900(long long *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  double v6 = v5;
  uint64_t v69 = a5;
  double v70 = a4;
  uint64_t v64 = a3;
  uint64_t v68 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v65 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v67 = (uint64_t)&v59 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v72 = (uint64_t)&v59 - v11;
  uint64_t v61 = sub_1C151772C();
  uint64_t v12 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  long long v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C151759C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1C151757C();
  uint64_t v19 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  long long v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v62 + 64);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v63 = (uint64_t)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v71 = (uint64_t)&v59 - v25;
  long long v26 = a1[6];
  long long v27 = a1[7];
  long long v28 = a1[4];
  long long v79 = a1[5];
  long long v80 = v26;
  long long v29 = a1[8];
  long long v81 = v27;
  long long v82 = v29;
  long long v30 = a1[3];
  long long v76 = a1[2];
  long long v77 = v30;
  long long v78 = v28;
  long long v32 = *a1;
  long long v31 = a1[1];
  double v33 = &v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
  long long v74 = v32;
  long long v75 = v31;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v33, v15);
  id v34 = objc_msgSend(v6, sel_view);
  if (v34)
  {
    double v35 = v34;
    sub_1C060F650(v34, *(void **)&v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView]);

    sub_1C151758C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v61);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v36 = v71;
    sub_1C0F88AA8((uint64_t)v21, v64, v71);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v60);
    swift_beginAccess();
    swift_retain();
    uint64_t v37 = v72;
    sub_1C151894C();
    swift_release();
    if (qword_1EA1949B0 != -1) {
      swift_once();
    }
    uint64_t v64 = qword_1EA1A97E0;
    uint64_t v61 = sub_1C151931C();
    uint64_t v38 = v63;
    sub_1BFF1ED80(v36, v63, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v39 = v67;
    sub_1BFF1ED80(v37, v67, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    unint64_t v40 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    unint64_t v41 = (v23 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v42 = (v41 + 151) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v43 = (*(unsigned __int8 *)(v65 + 80) + v42 + 8) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    uint64_t v44 = (uint64_t)&v66[v43 + 7];
    uint64_t v66 = v6;
    unint64_t v45 = v44 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v46 = swift_allocObject();
    sub_1C0F8BFAC(v38, v46 + v40, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    CGFloat v47 = (_OWORD *)(v46 + v41);
    long long v48 = v79;
    long long v49 = v81;
    long long v50 = v82;
    v47[6] = v80;
    v47[7] = v49;
    v47[8] = v50;
    long long v51 = v77;
    v47[2] = v76;
    v47[3] = v51;
    v47[4] = v78;
    v47[5] = v48;
    long long v52 = v75;
    *CGFloat v47 = v74;
    v47[1] = v52;
    *(void *)(v46 + v42) = v68;
    sub_1C0F8BFAC(v39, v46 + v43, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    *(void *)(v46 + v45) = v69;
    sub_1C0187D08((uint64_t)&v74);
    type metadata accessor for DebugFormatCanvasLayoutResult();
    swift_retain();
    swift_retain();
    sub_1C151901C();
    swift_release();
    swift_release();
    sub_1BFE4597C();
    double v53 = (void *)sub_1C151F56C();
    uint64_t v54 = swift_allocObject();
    double v55 = v70;
    *(void *)(v54 + 16) = v70;
    type metadata accessor for DebugFormatCanvasLayoutViewResult();
    id v56 = v55;
    uint64_t v57 = sub_1C151901C();
    swift_release();

    swift_release();
    sub_1BFF1B988(v72, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    sub_1BFF1B988(v71, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return v57;
  }
  else
  {
    __break(1u);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v61);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0F87118(uint64_t *a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *a1;
  uint64_t v8 = self;
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a2;
  v9[3] = v7;
  v9[4] = a3;
  v9[5] = a4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C0F8B3D0;
  *(void *)(v10 + 24) = v9;
  *(void *)&long long v30 = sub_1BFC81768;
  *((void *)&v30 + 1) = v10;
  *(void *)&aBlocuint64_t k = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v29 = sub_1BFC81740;
  *((void *)&v29 + 1) = &block_descriptor_75;
  uint64_t v11 = _Block_copy(&aBlock);
  a2;
  swift_retain();
  id v12 = a3;
  id v13 = a4;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performWithoutAnimation_, v11);
  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    sub_1BFE4F744(0, &qword_1EA1A8958);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
    uint64_t v17 = (_OWORD *)(*(void *)(v7 + 16) + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history);
    swift_beginAccess();
    aBlocuint64_t k = *v17;
    long long v18 = v17[1];
    long long v19 = v17[2];
    long long v20 = v17[4];
    long long v31 = v17[3];
    long long v32 = v20;
    long long v29 = v18;
    long long v30 = v19;
    long long v21 = v17[5];
    long long v22 = v17[6];
    long long v23 = v17[8];
    long long v35 = v17[7];
    long long v36 = v23;
    long long v33 = v21;
    long long v34 = v22;
    long long v24 = v17[9];
    long long v25 = v17[10];
    long long v26 = v17[11];
    uint64_t v40 = *((void *)v17 + 24);
    long long v38 = v25;
    long long v39 = v26;
    long long v37 = v24;
    memmove((void *)(v16 + 32), v17, 0xC8uLL);
    sub_1C0F8B40C((uint64_t)&aBlock);
    swift_retain();
    sub_1C151894C();
    swift_release();
    uint64_t v27 = v41;
    uint64_t v41 = v16;
    sub_1C104B368(v27);
    swift_retain();
    sub_1C151895C();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0F873D4(uint64_t a1, void *a2, char *a3)
{
  uint64_t v130 = a3;
  uint64_t v132 = a2;
  uint64_t v138 = sub_1C151E16C();
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v135 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_1C151E1DC();
  uint64_t v134 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  unint64_t v133 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_1C15177FC();
  uint64_t v154 = *(uint64_t **)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  uint64_t v148 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1C151774C();
  uint64_t v156 = *(void (***)(char *, uint64_t))(v160 - 8);
  MEMORY[0x1F4188790](v160);
  uint64_t v159 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151780C();
  uint64_t v155 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v151 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v158 = (char *)&v126 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v126 - v14);
  uint64_t v165 = sub_1C151744C();
  uint64_t v16 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  uint64_t v142 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  long long v20 = (char *)&v126 - v19;
  long long v21 = *(char **)(a1 + 24);
  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
  long long v23 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView];
  uint64_t v162 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor];
  id v24 = v23;
  swift_retain();
  sub_1C151709C();
  swift_release();
  objc_msgSend(v24, sel_setHidden_, LOBYTE(aBlock[0]));

  id v144 = v21;
  objc_msgSend(*(id *)&v21[v22], sel_setClipsToBounds_, 0);
  uint64_t v172 = MEMORY[0x1E4FBC870];
  uint64_t v173 = MEMORY[0x1E4FBC870];
  uint64_t v131 = a1;
  uint64_t v129 = *(void *)(a1 + 16);
  swift_retain();
  uint64_t v25 = sub_1C151782C();
  swift_release();
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v127 = v3;
    long long v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v27 = v16 + 16;
    unint64_t v161 = v28;
    uint64_t v145 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutFirstPass;
    unint64_t v29 = (*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64);
    uint64_t v126 = v25;
    unint64_t v30 = v25 + v29;
    uint64_t v157 = *(void *)(v27 + 56);
    uint64_t v166 = (uint64_t (**)(uint64_t *, uint64_t))(v155 + 88);
    int v163 = *MEMORY[0x1E4FAB760];
    uint64_t v164 = (void (**)(uint64_t *, uint64_t))(v155 + 8);
    uint64_t v152 = (void (**)(uint64_t *, uint64_t))(v155 + 96);
    ++v156;
    LODWORD(v155) = *MEMORY[0x1E4FAB758];
    uint64_t v153 = (void (**)(char *, uint64_t))(v27 - 8);
    uint64_t v147 = (uint64_t (**)(char *, uint64_t))(v154 + 11);
    int v146 = *MEMORY[0x1E4FAB748];
    int v143 = *MEMORY[0x1E4FAB750];
    int v140 = *MEMORY[0x1E4FAB738];
    uint64_t v128 = (void (**)(char *, uint64_t))(v154 + 1);
    int v139 = *MEMORY[0x1E4FAB740];
    uint64_t v154 = v15;
    uint64_t v150 = v27;
    v28(v20, (char *)(v25 + v29), v165);
    while (1)
    {
      sub_1C151741C();
      long long v31 = *v166;
      int v32 = (*v166)(v15, v9);
      if (v32 == v163)
      {
        (*v152)(v15, v9);
        sub_1BFEFFC1C(aBlock, *v15, v15[1]);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*v164)(v15, v9);
      }
      long long v33 = v159;
      sub_1C151743C();
      uint64_t v34 = sub_1C151773C();
      uint64_t v36 = v35;
      (*v156)(v33, v160);
      if (v36)
      {
        sub_1BFEFFC1C(aBlock, v34, v36);
        swift_bridgeObjectRelease();
      }
      long long v37 = v158;
      sub_1C151741C();
      int v38 = v31((uint64_t *)v37, v9);
      long long v39 = *v164;
      (*v164)((uint64_t *)v37, v9);
      if (v38 == v155)
      {
        swift_retain();
        sub_1C151709C();
        swift_release();
        if ((aBlock[0] & 1) == 0)
        {
          (*v153)(v20, v165);
          uint64_t v15 = v154;
          goto LABEL_4;
        }
      }
      uint64_t v40 = v151;
      sub_1C151741C();
      int v41 = v31((uint64_t *)v40, v9);
      if (v41 == v163)
      {
        (*v152)((uint64_t *)v40, v9);
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1C151709C();
        swift_release();
        uint64_t v15 = v154;
        if ((aBlock[0] & 1) == 0) {
          goto LABEL_30;
        }
      }
      else
      {
        v39((uint64_t *)v40, v9);
        uint64_t v15 = v154;
      }
      unint64_t v42 = v148;
      sub_1C151740C();
      int v43 = (*v147)(v42, v149);
      if (v43 == v146) {
        break;
      }
      if (v43 == v143)
      {
        swift_retain();
        sub_1C151709C();
        swift_release();
        if (LOBYTE(aBlock[0]) == 1)
        {
          uint64_t v44 = v142;
          uint64_t v52 = v165;
          double v53 = v161;
          v161(v142, v20, v165);
          id v141 = objc_msgSend(self, sel_systemOrangeColor);
          uint64_t v54 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
          double v55 = (char *)objc_allocWithZone(v54);
          v53(&v55[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], v44, v52);
          sub_1C151742C();
          v169.receiver = v55;
          v169.super_class = v54;
          id v49 = objc_msgSendSuper2(&v169, sel_initWithFrame_);
          id v50 = v141;
          id v51 = objc_msgSend(v141, sel_colorWithAlphaComponent_, 0.1);
          goto LABEL_23;
        }
        goto LABEL_30;
      }
      if (v43 == v140)
      {
        swift_retain();
        sub_1C151709C();
        swift_release();
        if (LOBYTE(aBlock[0]) == 1)
        {
          uint64_t v60 = v142;
          uint64_t v61 = v165;
          v161(v142, v20, v165);
          id v141 = objc_msgSend(self, sel_systemBlueColor);
          uint64_t v62 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
          uint64_t v63 = (char *)objc_allocWithZone(v62);
          v161(&v63[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], v60, v61);
          uint64_t v64 = v60;
          sub_1C151742C();
          v167.receiver = v63;
          v167.super_class = v62;
          id v65 = objc_msgSendSuper2(&v167, sel_initWithFrame_);
          id v66 = v141;
          id v67 = objc_msgSend(v141, sel_colorWithAlphaComponent_, 0.1);
          objc_msgSend(v65, sel_setBackgroundColor_, v67);

          uint64_t v68 = *v153;
          uint64_t v69 = v64;
          uint64_t v70 = v165;
          (*v153)(v69, v165);
          objc_msgSend(v144, sel_addSubview_, v65);

          v68(v20, v70);
          goto LABEL_4;
        }
        goto LABEL_30;
      }
      if (v43 == v139)
      {
        swift_retain();
        sub_1C151709C();
        swift_release();
        if (LOBYTE(aBlock[0]) == 1)
        {
          uint64_t v71 = v142;
          uint64_t v72 = v165;
          CGFloat v73 = v161;
          v161(v142, v20, v165);
          id v141 = objc_msgSend(self, sel_systemYellowColor, v126);
          long long v74 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
          long long v75 = (char *)objc_allocWithZone(v74);
          v73(&v75[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], v71, v72);
          sub_1C151742C();
          v170.receiver = v75;
          v170.super_class = v74;
          id v76 = objc_msgSendSuper2(&v170, sel_initWithFrame_);
          id v77 = v141;
          id v78 = objc_msgSend(v141, sel_colorWithAlphaComponent_, 0.1);
          objc_msgSend(v76, sel_setBackgroundColor_, v78);

          long long v79 = *v153;
          (*v153)(v71, v72);
          objc_msgSend(v144, sel_addSubview_, v76);

          v79(v20, v72);
          goto LABEL_4;
        }
        goto LABEL_30;
      }
      (*v153)(v20, v165);
      (*v128)(v148, v149);
LABEL_4:
      v30 += v157;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        uint64_t v80 = v172;
        uint64_t v81 = v173;
        long long v82 = v132;
        CGRect v83 = v127;
        goto LABEL_34;
      }
      v161(v20, (char *)v30, v165);
    }
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (LOBYTE(aBlock[0]) == 1)
    {
      uint64_t v44 = v142;
      uint64_t v45 = v165;
      uint64_t v46 = v161;
      v161(v142, v20, v165);
      id v141 = objc_msgSend(self, sel_systemGreenColor);
      CGFloat v47 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
      long long v48 = (char *)objc_allocWithZone(v47);
      v46(&v48[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], v44, v45);
      sub_1C151742C();
      v168.receiver = v48;
      v168.super_class = v47;
      id v49 = objc_msgSendSuper2(&v168, sel_initWithFrame_);
      id v50 = v141;
      id v51 = objc_msgSend(v141, sel_colorWithAlphaComponent_, 0.1);
LABEL_23:
      id v56 = v51;
      objc_msgSend(v49, sel_setBackgroundColor_, v56);

      uint64_t v57 = *v153;
      CGFloat v58 = v44;
      uint64_t v59 = v165;
      (*v153)(v58, v165);
      objc_msgSend(v144, sel_addSubview_, v49);

      v57(v20, v59);
      goto LABEL_4;
    }
LABEL_30:
    (*v153)(v20, v165);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v80 = MEMORY[0x1E4FBC870];
  uint64_t v81 = MEMORY[0x1E4FBC870];
  CGRect v83 = v3;
  long long v82 = v132;
LABEL_34:
  uint64_t v84 = v129;
  swift_retain();
  uint64_t v85 = sub_1C151782C();
  swift_release();
  uint64_t v86 = *(void *)(v85 + 16);
  swift_bridgeObjectRelease();
  uint64_t v87 = (void *)(v84 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history);
  swift_beginAccess();
  *uint64_t v87 = v86;
  uint64_t v88 = *(void *)(v81 + 16);
  swift_bridgeObjectRelease();
  v87[1] = v88;
  uint64_t v89 = *(void *)(v80 + 16);
  swift_bridgeObjectRelease();
  v87[2] = v89;
  uint64_t v90 = *(char **)&v83[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView];
  id v91 = v144;
  objc_msgSend(v144, sel_bounds);
  objc_msgSend(v90, sel_setFrame_);
  objc_msgSend(v91, sel_frame);
  uint64_t v92 = (CGRect *)&v90[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame];
  *(CGRect *)&v90[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame] = v174;
  CGRectGetHeight(v174);
  id v93 = objc_msgSend(v90, sel_superview);
  if (v93)
  {
    char v94 = v93;
    objc_msgSend(v93, sel_bounds);
    CGFloat v96 = v95;
    CGFloat v98 = v97;
    CGFloat v100 = v99;
    CGFloat v102 = v101;

    v175.origin.CGFloat x = v96;
    v175.origin.double y = v98;
    v175.size.width = v100;
    v175.size.height = v102;
    CGRectGetHeight(v175);
  }
  int v103 = *(void **)&v90[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_bezelView];
  sub_1C151F74C();
  sub_1C151F76C();
  objc_msgSend(v103, sel_setFrame_);
  objc_msgSend(v144, sel_frame);
  char v104 = v130;
  *(CGRect *)&v130[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame] = v176;
  CGRect v177 = CGRectOffset(v176, *(CGFloat *)&v104[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset], *(CGFloat *)&v104[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset + 8]);
  objc_msgSend(v104, sel_setFrame_, v177.origin.x, v177.origin.y, v177.size.width, v177.size.height);
  objc_msgSend(v82, sel_contentSize);
  double v106 = v105;
  double Width = CGRectGetWidth(*v92);
  objc_msgSend(v82, sel_frame);
  double v108 = CGRectGetWidth(v178);
  if (Width > v108) {
    double v108 = Width;
  }
  if (v106 <= v108) {
    double v106 = v108;
  }
  objc_msgSend(v82, sel_contentSize, v126);
  double v110 = v109;
  double Height = CGRectGetHeight(*v92);
  objc_msgSend(v82, sel_frame);
  double v112 = CGRectGetHeight(v179);
  if (Height > v112) {
    double v112 = Height;
  }
  if (v110 > v112) {
    double v113 = v110;
  }
  else {
    double v113 = v112;
  }
  objc_msgSend(v82, sel_setContentSize_, v106, v113);
  uint64_t v114 = MEMORY[0x1C18C9C60](&v83[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate]);
  uint64_t v115 = v131;
  if (v114)
  {
    sub_1C0C7AEC4(v131, v104);
    swift_unknownObjectRelease();
  }
  sub_1BFE4597C();
  uint64_t v116 = (void *)sub_1C151F56C();
  uint64_t v117 = (void *)swift_allocObject();
  v117[2] = v83;
  v117[3] = v115;
  v117[4] = v82;
  aBlock[4] = (uint64_t)sub_1C0F8B554;
  aBlock[5] = (uint64_t)v117;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BFC9FC68;
  void aBlock[3] = (uint64_t)&block_descriptor_14_2;
  uint64_t v118 = _Block_copy(aBlock);
  uint64_t v119 = v83;
  swift_retain();
  id v120 = v82;
  swift_release();
  uint64_t v121 = v133;
  sub_1C151E19C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C0F8BF64((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  id v122 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C00627E4(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C0064CFC((unint64_t *)&qword_1EB879C80, (unint64_t *)&qword_1EB879C70, v122);
  uint64_t v123 = v135;
  uint64_t v124 = v138;
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v121, v123, v118);
  _Block_release(v118);

  (*(void (**)(char *, uint64_t))(v137 + 8))(v123, v124);
  return (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v121, v136);
}

id sub_1C0F88894(char *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151772C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = a2[7];
  long long v24 = a2[6];
  long long v25 = v12;
  long long v26 = a2[8];
  long long v13 = a2[3];
  long long v20 = a2[2];
  long long v21 = v13;
  long long v14 = a2[5];
  long long v22 = a2[4];
  long long v23 = v14;
  long long v15 = a2[1];
  long long v19 = *a2;
  id result = objc_msgSend(a1, sel_view, v19, v15, v20, v13, v22, v23, v24, v25, v26);
  if (result)
  {
    uint64_t v17 = result;
    sub_1C060F3AC(result, *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView]);

    uint64_t v18 = sub_1C0F86900(&v19, a3, (uint64_t)v11, 0, a4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (id)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0F88A00(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(*(void *)a1 + 24);
  sub_1C14BBA80();
  id v5 = v4;
  objc_msgSend(a3, sel_addSubview_, v5);
  id v6 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a3, sel_setBackgroundColor_, v6);

  *((unsigned char *)a3 + OBJC_IVAR____TtC8NewsFeed25DebugFormatBackgroundView_backgroundState) = 1;
}

uint64_t sub_1C0F88AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v42[1] = a2;
  uint64_t v7 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151757C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151772C();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v19 = *(void (**)(char *, uint64_t, __n128))(v15 + 16);
  uint64_t v44 = v20;
  v19(v18, a2, v16);
  long long v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v46 = v13;
  uint64_t v47 = v10;
  v21(v13, a1, v10);
  uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor);
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key;
  uint64_t v24 = v22 + v23 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 28);
  long long v25 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v26 = *(void *)(v24 + v25[10]);
  uint64_t v27 = v24 + v25[6];
  long long v48 = v9;
  sub_1BFF1ED80(v27, (uint64_t)v9, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v45 = v26;
  swift_retain();
  sub_1C15174BC();
  uint64_t v29 = v28;
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v30 = v50;
  swift_retain();
  sub_1C151894C();
  swift_release();
  int v43 = v49;
  uint64_t v31 = *(void *)(v22 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
  swift_retain();
  sub_1C151765C();
  double v33 = v32;
  double v35 = v34;
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v36 = *(void *)(v31 + 24);
  if (*(void *)(v36 + 16) && (unint64_t v37 = sub_1C1052424(v33, v35), (v38 & 1) != 0))
  {
    unint64_t v39 = *(void *)(*(void *)(v36 + 56) + 8 * v37);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    unint64_t v39 = sub_1BFE9C5F8(MEMORY[0x1E4FBC860]);
  }
  type metadata accessor for FormatLayoutSizeSnapshot();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  sub_1C1517E8C();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v18, v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3 + v25[5], v46, v47);
  *(void *)(a3 + v25[10]) = v45;
  uint64_t result = sub_1C0F8BFAC((uint64_t)v48, a3 + v25[6], type metadata accessor for FeedLayoutSolverOptions);
  *(void *)(a3 + v25[7]) = 0;
  *(void *)(a3 + v25[8]) = v29;
  *(unsigned char *)(a3 + v25[9]) = v30;
  *(unsigned char *)(a3 + v25[11]) = v43;
  *(void *)(a3 + v25[12]) = v40;
  return result;
}

uint64_t sub_1C0F88EB0()
{
  return sub_1C0D2B924();
}

uint64_t sub_1C0F88EE4(uint64_t a1, long long *a2, uint64_t a3, char *a4, uint64_t a5)
{
  id v6 = v5;
  uint64_t v150 = a4;
  uint64_t v194 = a1;
  uint64_t v123 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v123);
  uint64_t v125 = (uint64_t)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151757C();
  uint64_t v129 = *(void *)(v11 - 8);
  uint64_t v130 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v124 = (uint64_t (*)(uint64_t))((char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1C151772C();
  uint64_t v127 = *(void *)(v13 - 8);
  uint64_t v128 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v126 = (uint64_t)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1C151E16C();
  uint64_t v139 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  uint64_t v137 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1C151E1DC();
  uint64_t v136 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v135 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FormatGroupLayoutFactory.Bound();
  uint64_t v132 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v133 = v18;
  uint64_t v134 = (uint64_t)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v154 = (uint64_t)&v122 - v20;
  uint64_t v21 = sub_1C151787C();
  uint64_t v147 = *(void *)(v21 - 8);
  *(void *)&long long v148 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v149 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v146 = (void *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v146);
  uint64_t v153 = (uint64_t *)((char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = sub_1C151928C();
  uint64_t v143 = *(void *)(v24 - 8);
  uint64_t v144 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v122 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v122 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = a2[7];
  long long v191 = a2[6];
  long long v192 = v30;
  long long v193 = a2[8];
  long long v31 = a2[3];
  long long v187 = a2[2];
  long long v188 = v31;
  long long v32 = a2[4];
  long long v190 = a2[5];
  long long v189 = v32;
  long long v33 = *a2;
  long long v186 = a2[1];
  long long v185 = v33;
  if (a5) {
    sub_1C10174DC();
  }
  uint64_t v152 = a5;
  int v140 = v6;
  uint64_t v34 = *(void *)&v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor];
  sub_1C0187D08((uint64_t)&v185);
  swift_retain();
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v35 = v173[0];
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v122 = v36;
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C1540C60;
  char v38 = self;
  *(void *)(v37 + 32) = objc_msgSend(v38, sel_systemYellowColor);
  *(void *)(v37 + 40) = objc_msgSend(v38, sel_systemPurpleColor);
  *(void *)(v37 + 48) = objc_msgSend(v38, sel_systemBlueColor);
  *(void *)&v173[0] = v37;
  sub_1C151EBEC();
  *(_OWORD *)((char *)&v182[5] + 8) = v190;
  *(_OWORD *)((char *)&v182[6] + 8) = v191;
  *(_OWORD *)((char *)&v182[7] + 8) = v192;
  *(_OWORD *)((char *)&v182[8] + 8) = v193;
  *(_OWORD *)((char *)&v182[1] + 8) = v186;
  *(_OWORD *)((char *)&v182[2] + 8) = v187;
  *(_OWORD *)((char *)&v182[3] + 8) = v188;
  *(_OWORD *)((char *)&v182[4] + 8) = v189;
  *(_OWORD *)((char *)v182 + 8) = v185;
  long long v181 = 0uLL;
  *(void *)&v182[0] = 0;
  *((void *)&v182[9] + 1) = a3;
  LOBYTE(v183) = v35;
  *((void *)&v183 + 1) = MEMORY[0x1E4FBC860];
  uint64_t v184 = *(void *)&v173[0];
  sub_1C0187D08((uint64_t)&v185);
  swift_retain();
  uint64_t v142 = sub_1C0D273B8();
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_1EA2B4EF0;
  *((void *)&v160 + 1) = type metadata accessor for DebugFormatLogger();
  *(void *)&long long v161 = &off_1F1B94598;
  *(void *)&long long v159 = v39;
  uint64_t v40 = *(void *)(v34 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_defaultSystemFactory);
  swift_weakInit();
  swift_weakAssign();
  sub_1C09C575C((uint64_t)v172, (uint64_t)v155);
  *(void *)&long long v151 = v34;
  swift_retain();
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C037C124((uint64_t)v26);
  sub_1BFF1B988((uint64_t)v29, type metadata accessor for FormatVersioningModeSelection);
  uint64_t v41 = sub_1C09C416C((uint64_t)v155, (uint64_t)v26, v40);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v26, v144);
  sub_1C09C57B8((uint64_t)v155);
  uint64_t v42 = type metadata accessor for FeedLayoutTracker();
  uint64_t v43 = swift_allocObject();
  v176[10] = &off_1F1B9A710;
  v176[9] = v42;
  v176[6] = v43;
  uint64_t v44 = qword_1EA2B4EF0;
  type metadata accessor for FormatOptionConverter();
  uint64_t v45 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v46 = sub_1C0186C60(a3, v44, v45);
  v173[6] = v191;
  v173[7] = v192;
  v173[8] = v193;
  v173[2] = v187;
  v173[3] = v188;
  v173[4] = v189;
  v173[5] = v190;
  v173[0] = v185;
  v173[1] = v186;
  uint64_t v131 = a3;
  uint64_t v174 = a3;
  uint64_t v175 = v142;
  sub_1BFC773DC(&v159, (uint64_t)v176);
  v176[5] = v41;
  v176[11] = v46;
  long long v177 = xmmword_1C15BAD60;
  uint64_t v179 = 0;
  uint64_t v178 = 0;
  uint64_t v180 = v152;
  swift_retain();
  uint64_t v47 = v194;
  long long v48 = (void *)v145;
  sub_1C0F85464();
  unsigned __int8 v49 = v48;
  if (v48)
  {
    *(void *)&long long v159 = 0;
    *((void *)&v159 + 1) = 0xE000000000000000;
    sub_1C15200FC();
    sub_1C151E80C();
    v155[0] = v48;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    sub_1C02306F8((void *)4, 0, 0, v159, *((uint64_t *)&v159 + 1));
    swift_bridgeObjectRelease();

    unsigned __int8 v49 = 0;
  }
  char v50 = v193;
  id v51 = sub_1C12A0810();
  LOBYTE(v155[0]) = v50;
  FormatContentSizeCategory.groupLayoutContentSizeCategory.getter((uint64_t)&v159);
  uint64_t v52 = (void *)v159;
  unsigned __int8 v53 = BYTE8(v159);
  type metadata accessor for GroupLayoutFactoryValidator();
  *(void *)(swift_allocObject() + 16) = v51;
  sub_1BFFFBAF8(v47);
  swift_bridgeObjectRelease();
  sub_1BFFFC630(v52, v53);
  swift_setDeallocating();
  swift_deallocClassInstance();
  if (v49)
  {
    *(void *)&long long v159 = 0;
    *((void *)&v159 + 1) = 0xE000000000000000;
    sub_1C15200FC();
    sub_1C151E80C();
    v155[0] = v49;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    sub_1C02306F8((void *)4, 0, 0, v159, *((uint64_t *)&v159 + 1));
    swift_bridgeObjectRelease();
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v54 = v159;
  swift_retain();
  sub_1C151709C();
  swift_release();
  unsigned __int8 v55 = v155[0];
  id v56 = v150;
  sub_1BFC66384((uint64_t)(v150 + 8), (uint64_t)&v159);
  uint64_t v57 = *((void *)v56 + 6);
  uint64_t v58 = (uint64_t)v149;
  (*(void (**)(char *, char *, void))(v147 + 16))(v149, &v56[*((int *)v146 + 13)], v148);
  v172[0] = v55;
  uint64_t v59 = *((void *)v56 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v60 = v153;
  uint64_t v61 = sub_1BFE9F050(&v159, v57, v54, v58, v172, v59, (uint64_t)v153);
  MEMORY[0x1F4188790](v61);
  *(&v122 - 4) = (uint64_t)v173;
  *(&v122 - 3) = (uint64_t)v60;
  *(&v122 - 2) = v194;
  uint64_t v62 = v154;
  sub_1C0F85564(1684957506, 0xE400000000000000, (void (*)(void))sub_1C0F8BB10);
  sub_1BFE4597C();
  uint64_t v149 = (char *)sub_1C151F56C();
  uint64_t v150 = 0;
  uint64_t v63 = v134;
  sub_1BFF1ED80(v62, v134, (uint64_t (*)(void))type metadata accessor for FormatGroupLayoutFactory.Bound);
  unint64_t v64 = (*(unsigned __int8 *)(v132 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
  uint64_t v65 = swift_allocObject();
  id v66 = v140;
  *(void *)(v65 + 16) = v140;
  sub_1C0F8BFAC(v63, v65 + v64, (uint64_t (*)(void))type metadata accessor for FormatGroupLayoutFactory.Bound);
  *(void *)&long long v161 = sub_1C0F8BE2C;
  *((void *)&v161 + 1) = v65;
  *(void *)&long long v159 = MEMORY[0x1E4F143A8];
  *((void *)&v159 + 1) = 1107296256;
  *(void *)&long long v160 = sub_1BFC9FC68;
  *((void *)&v160 + 1) = &block_descriptor_26_0;
  id v67 = _Block_copy(&v159);
  id v68 = v66;
  swift_release();
  uint64_t v69 = v135;
  sub_1C151E19C();
  *(void *)&long long v159 = MEMORY[0x1E4FBC860];
  sub_1C0F8BF64((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  uint64_t v70 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C00627E4(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  uint64_t v71 = v154;
  sub_1C0064CFC((unint64_t *)&qword_1EB879C80, (unint64_t *)&qword_1EB879C70, v70);
  uint64_t v72 = v137;
  uint64_t v73 = v141;
  sub_1C151FFBC();
  long long v74 = v149;
  MEMORY[0x1C18C70C0](0, v69, v72, v67);
  _Block_release(v67);

  (*(void (**)(char *, uint64_t))(v139 + 8))(v72, v73);
  uint64_t v75 = (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v69, v138);
  MEMORY[0x1F4188790](v75);
  *(&v122 - 2) = v71;
  id v76 = v150;
  sub_1C0F85720(0x74756F79614CLL, 0xE600000000000000, (void (*)(uint64_t *__return_ptr))sub_1C0F8BE90, (uint64_t)v155);
  if (v76)
  {
    long long v169 = v182[9];
    long long v170 = v183;
    uint64_t v171 = v184;
    long long v165 = v182[5];
    long long v166 = v182[6];
    long long v167 = v182[7];
    long long v168 = v182[8];
    long long v161 = v182[1];
    long long v162 = v182[2];
    long long v163 = v182[3];
    long long v164 = v182[4];
    long long v159 = v181;
    long long v160 = v182[0];
    sub_1C024D250((uint64_t)&v159);
    sub_1BFF1B988(v71, (uint64_t (*)(void))type metadata accessor for FormatGroupLayoutFactory.Bound);
    sub_1BFFD07D8((uint64_t)v173);
    sub_1BFF1B988((uint64_t)v153, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    if (v152) {
      sub_1C101711C();
    }
  }
  else
  {
    LODWORD(v147) = LOBYTE(v155[0]);
    uint64_t v78 = v155[1];
    uint64_t v79 = v155[2];
    uint64_t v80 = v155[3];
    uint64_t v81 = v155[4];
    long long v148 = v157;
    uint64_t v149 = v158;
    uint64_t v150 = (char *)&v122;
    long long v82 = v153 + 1;
    uint64_t v83 = v153[4];
    uint64_t v84 = v153[5];
    uint64_t v85 = v153;
    __swift_project_boxed_opaque_existential_1(v153 + 1, v83);
    uint64_t v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 24))(v83, v84);
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_1C15320E0;
    *(void *)(v87 + 32) = v131;
    *(void *)&long long v159 = v87;
    sub_1C151EBEC();
    uint64_t v88 = v159;
    swift_retain();
    uint64_t v89 = v151;
    swift_retain();
    uint64_t v90 = (void *)sub_1C144AAEC(v88, v86, v89);
    swift_release();
    id v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 16);
    int v146 = v90 + 17;
    long long v151 = v156;
    uint64_t v92 = v194;
    v91(v126, v194, v128);
    uint64_t v93 = v123;
    char v94 = v124;
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(v129 + 16))(v124, v92 + *(int *)(v123 + 20), v130);
    LODWORD(v92) = *(unsigned __int8 *)(v92 + *(int *)(v93 + 44));
    LODWORD(v144) = v92;
    double v95 = v85;
    uint64_t v96 = v85[4];
    uint64_t v97 = v95[5];
    __swift_project_boxed_opaque_existential_1(v82, v96);
    uint64_t v145 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 80))(v96, v97);
    unint64_t v98 = v90[16];
    LOBYTE(v159) = v92;
    uint64_t v99 = v90[20];
    uint64_t v100 = v90[21];
    double v101 = __swift_project_boxed_opaque_existential_1(v146, v99);
    uint64_t v102 = v126;
    uint64_t v103 = sub_1C0F1E0A4(v126, v94, (unsigned __int8 *)&v159, (uint64_t)v101, v98, v99, v100);
    unint64_t v104 = v90[2];
    MEMORY[0x1F4188790](v103);
    *(&v122 - 10) = (uint64_t)v94;
    *(&v122 - 9) = (uint64_t)v90;
    uint64_t v105 = v145;
    *(&v122 - 8) = v106;
    *(&v122 - 7) = v105;
    *(&v122 - 6) = v102;
    *((unsigned char *)&v122 - 40) = v144;
    *(&v122 - 4) = v78;
    *(&v122 - 3) = v79;
    *(&v122 - 2) = v80;
    *(&v122 - 1) = v81;
    swift_bridgeObjectRetain();
    int v146 = (void *)sub_1BFFC2D44((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BFFC3408, (uint64_t)(&v122 - 12), v104);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(v129 + 8))(v94, v130);
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v102, v128);
    uint64_t v107 = v125;
    sub_1BFF1ED80(v194, v125, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    type metadata accessor for DebugFormatCanvasLayoutResult();
    uint64_t v73 = swift_allocObject();
    long long v108 = v192;
    *(_OWORD *)(v73 + 112) = v191;
    *(_OWORD *)(v73 + 128) = v108;
    *(_OWORD *)(v73 + 144) = v193;
    long long v109 = v188;
    *(_OWORD *)(v73 + 48) = v187;
    *(_OWORD *)(v73 + 64) = v109;
    long long v110 = v190;
    *(_OWORD *)(v73 + 80) = v189;
    *(_OWORD *)(v73 + 96) = v110;
    long long v111 = v186;
    *(_OWORD *)(v73 + 16) = v185;
    *(_OWORD *)(v73 + 32) = v111;
    *(void *)(v73 + 160) = v131;
    *(unsigned char *)(v73 + 168) = v147;
    *(void *)(v73 + 176) = v78;
    *(void *)(v73 + 184) = v79;
    *(void *)(v73 + 192) = v80;
    *(void *)(v73 + 200) = v81;
    long long v112 = v148;
    *(_OWORD *)(v73 + 208) = v151;
    *(_OWORD *)(v73 + 224) = v112;
    uint64_t v113 = v73 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_groupLayoutContext;
    uint64_t v114 = v146;
    *(void *)(v73 + 240) = v149;
    *(void *)(v73 + 248) = v114;
    sub_1C0F8BFAC(v107, v113, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v115 = v73 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history;
    long long v116 = v183;
    *(_OWORD *)(v115 + 160) = v182[9];
    *(_OWORD *)(v115 + 176) = v116;
    *(void *)(v115 + 192) = v184;
    long long v117 = v182[6];
    *(_OWORD *)(v115 + 96) = v182[5];
    *(_OWORD *)(v115 + 112) = v117;
    long long v118 = v182[8];
    *(_OWORD *)(v115 + 128) = v182[7];
    *(_OWORD *)(v115 + 144) = v118;
    long long v119 = v182[2];
    *(_OWORD *)(v115 + 32) = v182[1];
    *(_OWORD *)(v115 + 48) = v119;
    long long v120 = v182[4];
    *(_OWORD *)(v115 + 64) = v182[3];
    *(_OWORD *)(v115 + 80) = v120;
    long long v121 = v182[0];
    *(_OWORD *)uint64_t v115 = v181;
    *(_OWORD *)(v115 + 16) = v121;
    sub_1C0187D08((uint64_t)&v185);
    swift_retain();
    sub_1BFF1B988(v154, (uint64_t (*)(void))type metadata accessor for FormatGroupLayoutFactory.Bound);
    sub_1BFFD07D8((uint64_t)v173);
    sub_1BFF1B988((uint64_t)v153, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    if (v152) {
      sub_1C101711C();
    }
  }
  return v73;
}

uint64_t sub_1C0F8A260@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = *a1;
  id v5 = *(void **)(*a1 + 240);
  if (v5)
  {
    id v6 = v5;
    return swift_willThrow();
  }
  else
  {
    if (a3)
    {
      sub_1C0FB4E24();
      if (qword_1EA194558 != -1) {
        swift_once();
      }
      type metadata accessor for DebugFormatCanvasViewController();
      sub_1C0F8BF64((unint64_t *)&unk_1EA1A9830, (void (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController);
      sub_1C1516FBC();
      if (v18 == 1)
      {
        id v11 = objc_msgSend(self, sel_defaultCenter);
        if (qword_1EB87C338 != -1) {
          swift_once();
        }
        objc_msgSend(v11, sel_postNotificationName_object_, qword_1EB93C730, 0);
      }
    }
    uint64_t v12 = v4 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history;
    swift_beginAccess();
    id v13 = a3;
    uint64_t v14 = a2;
    swift_retain();
    sub_1C0B85A60(0x7265646E6552, 0xE600000000000000, v12, v14, v4, a3);
    uint64_t v16 = v15;
    swift_endAccess();

    swift_release();
    type metadata accessor for DebugFormatCanvasLayoutViewResult();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v4;
    *(void *)(v17 + 24) = v16;
    *a4 = v17;
    return swift_retain();
  }
}

id sub_1C0F8A49C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor];
  sub_1BFC66384(v8 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_factory, (uint64_t)v31);
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  uint64_t v9 = *(void *)(a2 + 208);
  uint64_t v10 = *(void *)(a2 + 216);
  LOBYTE(v26) = *(unsigned char *)(a2 + 168);
  long long v11 = *(_OWORD *)(a2 + 192);
  long long v27 = *(_OWORD *)(a2 + 176);
  long long v28 = v11;
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  uint64_t v12 = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id result = objc_msgSend(a1, sel_view, v26, v27, v28, v9, v10);
  if (result)
  {
    uint64_t v14 = result;
    objc_msgSend(result, sel_layoutMargins);
    double v16 = v15;
    double v18 = v17;
    double v20 = v19;
    double v22 = v21;

    id v23 = objc_msgSend(a1, sel_traitCollection);
    uint64_t v24 = *(void *)(v8 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
    swift_retain();
    uint64_t v25 = sub_1C130D1C8((uint64_t)&v26, v12, a3, v23, v24, (uint64_t)sub_1C0F8A654, 0, v16, v18, v20, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    *a4 = v25;
    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0F8A654()
{
  if (qword_1EB887050 != -1) {
    swift_once();
  }
  sub_1C15200FC();
  sub_1C151E80C();
  type metadata accessor for FeedActionSender();
  sub_1C152036C();
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C748;
  sub_1C151F34C();
  sub_1BFFDEB20();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F8A7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1BFFCDE30(a2, a3, v5);
  if (!v3)
  {
    sub_1BFC845BC(0, &qword_1EB878A10);
    type metadata accessor for FormatGroupLayoutFactory.Bound();
    return swift_dynamicCast();
  }
  return result;
}

uint64_t sub_1C0F8A878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151759C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - v9;
  if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 52))) {
    long long v11 = (unsigned int *)MEMORY[0x1E4FAB6D8];
  }
  else {
    long long v11 = (unsigned int *)MEMORY[0x1E4FAB6B0];
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v10, *v11, v4);
  uint64_t v12 = a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v12, v10, v4);
  swift_endAccess();
  id v13 = sub_1C0F85B90();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  sub_1C15177CC();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_1C0F8AA28@<X0>(uint64_t a1@<X8>)
{
  sub_1C0F8BEAC();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatGroupLayoutFactory.Bound();
  uint64_t result = sub_1C1517BDC();
  if (!v1)
  {
    sub_1BFEAD7AC(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1C0F8AB6C()
{
  uint64_t result = sub_1C151759C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0F8AC9C()
{
  return sub_1C0F8BF64((unint64_t *)&unk_1EA1A9830, (void (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController);
}

id sub_1C0F8ACE4(uint64_t a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1C151BB4C();
  MEMORY[0x1F4188790](v4);
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView;
  id v6 = objc_allocWithZone((Class)type metadata accessor for DebugFormatContentView());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
  uint64_t v9 = *MEMORY[0x1E4FAB6B0];
  uint64_t v10 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_viewportMonitor;
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FACB08];
  sub_1C00627E4(0, (unint64_t *)&unk_1EB86BA40, MEMORY[0x1E4FACB08], MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  sub_1C151BB3C();
  uint64_t v20 = v13;
  sub_1C0F8BF64((unint64_t *)&unk_1EB8642E0, MEMORY[0x1E4FACB08]);
  sub_1C00627E4(0, (unint64_t *)&unk_1EB86AFF0, v12, MEMORY[0x1E4FBB320]);
  sub_1C0064CFC(&qword_1EB86B000, (unint64_t *)&unk_1EB86AFF0, v12);
  sub_1C151FFBC();
  id v14 = objc_allocWithZone((Class)sub_1C151BB6C());
  *(void *)&v7[v11] = sub_1C151BB5C();
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor] = a1;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView] = a2;
  swift_retain();
  id v15 = a2;

  v19.receiver = v7;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1C0F8B004()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0F8B03C(unsigned __int8 *a1)
{
  sub_1C0F8626C(a1, v1, MEMORY[0x1E4FAB728]);
}

void sub_1C0F8B06C(unsigned __int8 *a1)
{
  sub_1C0F8626C(a1, v1, MEMORY[0x1E4FAB730]);
}

void sub_1C0F8B09C()
{
  uint64_t v1 = sub_1C151BB4C();
  MEMORY[0x1F4188790](v1);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatContentView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
  uint64_t v4 = *MEMORY[0x1E4FAB6B0];
  uint64_t v5 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_viewportMonitor;
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FACB08];
  sub_1C00627E4(0, (unint64_t *)&unk_1EB86BA40, MEMORY[0x1E4FACB08], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
  sub_1C151BB3C();
  sub_1C0F8BF64((unint64_t *)&unk_1EB8642E0, MEMORY[0x1E4FACB08]);
  sub_1C00627E4(0, (unint64_t *)&unk_1EB86AFF0, v7, MEMORY[0x1E4FBB320]);
  sub_1C0064CFC(&qword_1EB86B000, (unint64_t *)&unk_1EB86AFF0, v7);
  sub_1C151FFBC();
  id v8 = objc_allocWithZone((Class)sub_1C151BB6C());
  *(void *)&v0[v6] = sub_1C151BB5C();

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0F8B380()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F8B3D0()
{
  return sub_1C0F873D4(*(void *)(v0 + 24), *(void **)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_1C0F8B3FC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F8B40C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEB9640(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0F8B50C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F8B554()
{
  return sub_1C151BB2C();
}

uint64_t sub_1C0F8B5D4()
{
  uint64_t v1 = type metadata accessor for GroupLayoutContext();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64) + v3 + 7;
  uint64_t v5 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(v1 + 20);
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v7 + *(int *)(v1 + 24);
  if (*(void *)(v11 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = v4 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v12 + 72) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v16 = v0 + ((((v12 + 151) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6);
  __swift_destroy_boxed_opaque_existential_1(v16 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v16 + *(int *)(v5 + 52);
  uint64_t v18 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F8B954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *(void *)(type metadata accessor for GroupLayoutContext() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 151) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for GroupLayoutBindingContext() - 8);
  uint64_t v9 = *(void *)(v1 + v7);
  unint64_t v10 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v1 + ((*(void *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v12 = *(_OWORD *)(v1 + v6 + 112);
  v17[6] = *(_OWORD *)(v1 + v6 + 96);
  v17[7] = v12;
  v17[8] = *(_OWORD *)(v1 + v6 + 128);
  long long v13 = *(_OWORD *)(v1 + v6 + 48);
  v17[2] = *(_OWORD *)(v1 + v6 + 32);
  double v17[3] = v13;
  long long v14 = *(_OWORD *)(v1 + v6 + 80);
  __n128 v17[4] = *(_OWORD *)(v1 + v6 + 64);
  v17[5] = v14;
  long long v15 = *(_OWORD *)(v1 + v6 + 16);
  v17[0] = *(_OWORD *)(v1 + v6);
  v17[1] = v15;
  uint64_t result = sub_1C0F88EE4(v1 + v5, v17, v9, (char *)(v1 + v10), v11);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C0F8BABC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F8BAF4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0F8A260(a1, a2, *(void **)(v3 + 16), a3);
}

uint64_t sub_1C0F8BB10()
{
  return sub_1C0F8A7EC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C0F8BB30()
{
  uint64_t v1 = (int *)type metadata accessor for FormatGroupLayoutFactory.Bound();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);

  uint64_t v3 = v0 + v2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 8);
  unint64_t v4 = v0 + v2 + v1[6];
  uint64_t v5 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  unint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  unint64_t v9 = v4 + *(int *)(v6 + 24);
  if (*(void *)(v9 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v13 = v3 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 72) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[12]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[14]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F8BE2C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FormatGroupLayoutFactory.Bound() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C0F8A878(v2, v3);
}

uint64_t sub_1C0F8BE90@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0F8AA28(a1);
}

void sub_1C0F8BEAC()
{
  if (!qword_1EB884DC0)
  {
    type metadata accessor for FormatLayoutAttributes();
    sub_1BFF597F8();
    sub_1C0F8BF64(&qword_1EB88A8A0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    unint64_t v0 = sub_1C1517BCC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884DC0);
    }
  }
}

uint64_t sub_1C0F8BF64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F8BFAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL static FormatHeadlineBinding.Command.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C0F8C080(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C00584F4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C00584F4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0F8C10C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C00584F4(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0F8C170()
{
  sub_1C00584F4(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F8C1C4()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C00584F4(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

void sub_1C0F8C224(void *a1@<X8>)
{
  *a1 = &unk_1F1B65620;
}

uint64_t FormatHeadlineBinding.Command.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineBinding.Command.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0F8C2AC()
{
  unint64_t result = qword_1EA1A9848;
  if (!qword_1EA1A9848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9848);
  }
  return result;
}

unint64_t sub_1C0F8C300(uint64_t a1)
{
  unint64_t result = sub_1C0F8C328();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F8C328()
{
  unint64_t result = qword_1EA1A9850;
  if (!qword_1EA1A9850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9850);
  }
  return result;
}

unint64_t sub_1C0F8C37C(void *a1)
{
  a1[1] = sub_1BFD6757C();
  a1[2] = sub_1BFD9C6B8();
  unint64_t result = sub_1C0F8C2AC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Command()
{
  return &type metadata for FormatHeadlineBinding.Command;
}

ValueMetadata *_s7CommandO10CodingTypeOMa_2()
{
  return &_s7CommandO10CodingTypeON_2;
}

unint64_t sub_1C0F8C400()
{
  unint64_t result = qword_1EA1A9858;
  if (!qword_1EA1A9858)
  {
    sub_1C0F8C458();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9858);
  }
  return result;
}

void sub_1C0F8C458()
{
  if (!qword_1EA1A9860)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9860);
    }
  }
}

unint64_t sub_1C0F8C4B4()
{
  unint64_t result = qword_1EA1A9868;
  if (!qword_1EA1A9868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9868);
  }
  return result;
}

uint64_t sub_1C0F8C508@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  LOBYTE(a1) = *a1;
  sub_1BFF96680(a2, (uint64_t)v10);
  sub_1C01677F4(a3);
  sub_1C0F8C61C((char)a1, v10, a3, a4);
  sub_1BFF5D8CC(0, &qword_1EA1974F0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 0, 1, v11);
}

uint64_t sub_1C0F8C61C@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v85 = a4;
  uint64_t v86 = a3;
  sub_1BFF5D8CC(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v83 = (uint64_t)&v83 - v7;
  sub_1BFF5D8CC(0, &qword_1EB8869A0, (void (*)(uint64_t))type metadata accessor for FeedHeadlineAudioCommandContext);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v83 - v9;
  uint64_t v88 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v84 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v87 = (unint64_t *)((char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = sub_1C00584F4(a1);
  unint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1BFE7E4D4(v12, v14);
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    unint64_t v89 = v15;
    unint64_t v90 = v17;
    sub_1BFF27ECC();
    uint64_t v18 = sub_1C151FE5C();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C029748C(1uLL, v12, v14);
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v21, v23, v25, v27);
    swift_bridgeObjectRelease();
    unint64_t v89 = v18;
    unint64_t v90 = v20;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v12 = v89;
    unint64_t v14 = v90;
  }
  long long v28 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v30 = v87;
      if (qword_1EB85F120 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_1EB85F110;
      goto LABEL_13;
    case 2:
      uint64_t v30 = v87;
      if (qword_1EB87CA88 != -1) {
        swift_once();
      }
      uint64_t v41 = qword_1EB87CA80;
      uint64_t v42 = *v28;
      uint64_t v43 = v28[1];
      unint64_t v89 = v28[5];
      unint64_t v90 = 0;
      uint64_t v91 = 0;
      uint64_t v92 = 0;
      uint64_t v93 = v42;
      uint64_t v94 = v43;
      char v95 = 0;
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1C0A37280(v41, (uint64_t)&v89);
      goto LABEL_49;
    case 3:
      uint64_t v30 = v87;
      if (qword_1EB87C8F8 != -1) {
        swift_once();
      }
      uint64_t v44 = qword_1EB87BDD0;
      goto LABEL_42;
    case 4:
      uint64_t v30 = v87;
      if (qword_1EB87B150 != -1) {
        swift_once();
      }
      uint64_t v45 = qword_1EB87CA60;
      uint64_t v46 = v28[5];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v47 = sub_1BFF5E2EC(v45, v46, 2);
      goto LABEL_56;
    case 5:
      unint64_t v48 = v14;
      uint64_t v30 = v87;
      if (qword_1EB87B0C8 != -1) {
        swift_once();
      }
      uint64_t v49 = qword_1EB885350;
      goto LABEL_29;
    case 6:
      unint64_t v48 = v14;
      uint64_t v30 = v87;
      if (qword_1EB87B140 != -1) {
        swift_once();
      }
      uint64_t v49 = qword_1EB885358;
LABEL_29:
      uint64_t v50 = v28[5];
      uint64_t v51 = *v28;
      uint64_t v52 = v28[1];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1BFF5DC00(v49, v50, v51, v52);
      swift_release();
      sub_1C0167828(v86);
      uint64_t v35 = v88;
      char v54 = (uint64_t *)((char *)v30 + *(int *)(v88 + 24));
      *char v54 = v53;
      uint64_t v55 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
      *uint64_t v30 = v12;
      unint64_t v14 = v48;
      goto LABEL_58;
    case 7:
      id v56 = a2;
      char v57 = 7;
      goto LABEL_32;
    case 8:
      id v56 = a2;
      char v57 = 8;
LABEL_32:
      uint64_t v40 = sub_1BFF5CD40(v56, v57);
      uint64_t v30 = v87;
      goto LABEL_49;
    case 9:
      uint64_t v30 = v87;
      if (qword_1EB87B188 != -1) {
        swift_once();
      }
      uint64_t v58 = qword_1EB8716A0;
      uint64_t v59 = (void *)v28[5];
      swift_retain();
      id v60 = objc_msgSend(v59, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v47 = sub_1C0A3BBEC(v58, (uint64_t)v60);
      goto LABEL_56;
    case 10:
      uint64_t v30 = v87;
      if (qword_1EB87C920 != -1) {
        swift_once();
      }
      uint64_t v44 = qword_1EB87BDE0;
      goto LABEL_42;
    case 11:
      uint64_t v30 = v87;
      if (qword_1EB87BDF0 != -1) {
        swift_once();
      }
      uint64_t v44 = qword_1EB87CA90;
LABEL_42:
      uint64_t v61 = v28[5];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v40 = sub_1C0A36F8C(v44, v61);
      goto LABEL_49;
    case 12:
      uint64_t v30 = v87;
      if (qword_1EB87CAB0 != -1) {
        swift_once();
      }
      uint64_t v62 = qword_1EB87CAA0;
      uint64_t v63 = (void *)v28[5];
      swift_retain();
      id v64 = objc_msgSend(v63, sel_identifier);
      uint64_t v65 = sub_1C151E62C();
      uint64_t v67 = v66;

      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v40 = sub_1C0A36944(v62, v65, v67);
      goto LABEL_49;
    case 13:
      uint64_t v30 = v87;
      if (qword_1EB85F540 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v68 = swift_retain();
      uint64_t v40 = sub_1C0A36690(v68, 1);
      goto LABEL_49;
    case 14:
    case 15:
      unint64_t v89 = v12;
      unint64_t v90 = v14;
      sub_1C151E80C();
      unint64_t v29 = v89;
      unint64_t v14 = v90;
      uint64_t v30 = v87;
      if (qword_1EB885308 != -1) {
        swift_once();
      }
      uint64_t v31 = v83;
      sub_1BFF96680((uint64_t)v28, v83);
      uint64_t v32 = type metadata accessor for FeedHeadline(0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v33 = swift_retain();
      uint64_t v34 = sub_1C0A3C4B8(v33, v31);
      swift_release();
      sub_1C0167828(v86);
      uint64_t v35 = v88;
      uint64_t v36 = (uint64_t *)((char *)v30 + *(int *)(v88 + 24));
      *uint64_t v36 = v34;
      uint64_t v37 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
      *uint64_t v30 = v29;
      goto LABEL_58;
    case 16:
      uint64_t v30 = v87;
      if (qword_1EB8852F0 != -1) {
        swift_once();
      }
      sub_1BFF96680((uint64_t)v28, (uint64_t)v10);
      uint64_t v72 = type metadata accessor for FeedHeadlineAudioCommandContext();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v10, 0, 1, v72);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v73 = swift_retain();
      uint64_t v47 = sub_1C0A3C828(v73, (uint64_t)v10);
      goto LABEL_56;
    case 17:
      uint64_t v30 = v87;
      if (qword_1EB885308 != -1) {
        swift_once();
      }
      uint64_t v74 = v83;
      sub_1BFF96680((uint64_t)v28, v83);
      uint64_t v75 = type metadata accessor for FeedHeadline(0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v76 = swift_retain();
      uint64_t v47 = sub_1C0A3C4B8(v76, v74);
LABEL_56:
      uint64_t v77 = v47;
      swift_release();
      sub_1C0167828(v86);
      uint64_t v35 = v88;
      uint64_t v78 = (uint64_t *)((char *)v30 + *(int *)(v88 + 24));
      *uint64_t v78 = v77;
      uint64_t v79 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 0, 1, v79);
      break;
    default:
      uint64_t v30 = v87;
      if (qword_1EB86BD40 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_1EB86BD30;
LABEL_13:
      uint64_t v39 = (void *)v28[5];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v40 = sub_1C0A37610(v38, v39, 0, 1);
LABEL_49:
      uint64_t v69 = v40;
      sub_1C0167828(v86);
      uint64_t v35 = v88;
      uint64_t v70 = (uint64_t *)((char *)v30 + *(int *)(v88 + 24));
      *uint64_t v70 = v69;
      uint64_t v71 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
      break;
  }
  *uint64_t v30 = v12;
LABEL_58:
  void v30[2] = 0;
  void v30[3] = 0;
  v30[1] = v14;
  uint64_t v80 = (char *)v30 + *(int *)(v35 + 28);
  *(void *)uint64_t v80 = 0;
  *((void *)v80 + 1) = 0;
  v80[16] = -1;
  sub_1BFF2F7F4((uint64_t)v28);
  uint64_t v81 = v85;
  sub_1C09FF9C8((uint64_t)v30, v85);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v35);
}

uint64_t FormatSponsoredBannerNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNodeStyle.filledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.unfilledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t FormatSponsoredBannerNodeStyle.__allocating_init(identifier:class:selectors:filledColor:unfilledColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, char a8)
{
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *a6;
  uint64_t v18 = *a7;
  swift_beginAccess();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = a4;
  swift_beginAccess();
  *(void *)(v16 + 48) = a5;
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = v18;
  *(unsigned char *)(v16 + 72) = a8;
  return v16;
}

uint64_t FormatSponsoredBannerNodeStyle.init(identifier:class:selectors:filledColor:unfilledColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, char a8)
{
  uint64_t v15 = *a6;
  uint64_t v16 = *a7;
  swift_beginAccess();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  swift_beginAccess();
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = v15;
  *(void *)(v8 + 64) = v16;
  *(unsigned char *)(v8 + 72) = a8;
  return v8;
}

uint64_t FormatSponsoredBannerNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDC11BC(*(void *)(v0 + 56));
  sub_1BFDC11BC(*(void *)(v0 + 64));
  return v0;
}

uint64_t FormatSponsoredBannerNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDC11BC(*(void *)(v0 + 56));
  sub_1BFDC11BC(*(void *)(v0 + 64));
  return swift_deallocClassInstance();
}

uint64_t sub_1C0F8D7A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C08B75A8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0F8D7D4(void *a1)
{
  return FormatSponsoredBannerNodeStyle.encode(to:)(a1);
}

BOOL sub_1C0F8D7F8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed30FormatSponsoredBannerNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.filledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.unfilledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1C0F8D834@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSponsoredBannerNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1C0F8D84C(void *a1)
{
  return FormatSponsoredBannerNodeStyle.Selector.encode(to:)(a1);
}

uint64_t _s8NewsFeed30FormatSponsoredBannerNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_1C1520A9C(), result = 0, (v9 & 1) != 0))
  {
    if ((~v2 & 0xF000000000000007) != 0)
    {
      uint64_t v15 = v2;
      if ((~v6 & 0xF000000000000007) != 0)
      {
        uint64_t v14 = v6;
        swift_retain_n();
        char v12 = static FormatColor.== infix(_:_:)(&v15, (unint64_t *)&v14);
        swift_release();
        sub_1BFDC11BC(v2);
        if ((v12 & 1) == 0) {
          return 0;
        }
        goto LABEL_13;
      }
      swift_retain();
    }
    else if ((~v6 & 0xF000000000000007) == 0)
    {
LABEL_13:
      if ((~v3 & 0xF000000000000007) == 0)
      {
        if ((~v5 & 0xF000000000000007) == 0)
        {
LABEL_23:
          if (v4 == 2)
          {
            if (v7 == 2) {
              return 1;
            }
          }
          else if (v7 != 2 && ((((v4 & 1) == 0) ^ v7) & 1) != 0)
          {
            return 1;
          }
          return 0;
        }
        goto LABEL_18;
      }
      uint64_t v15 = v3;
      if ((~v5 & 0xF000000000000007) == 0)
      {
        swift_retain();
LABEL_18:
        sub_1BFDC11A4(v5);
        sub_1BFDC11BC(v3);
        uint64_t v11 = v5;
        goto LABEL_19;
      }
      uint64_t v14 = v5;
      swift_retain_n();
      char v13 = static FormatColor.== infix(_:_:)(&v15, (unint64_t *)&v14);
      swift_release();
      sub_1BFDC11BC(v3);
      if (v13) {
        goto LABEL_23;
      }
      return 0;
    }
    sub_1BFDC11A4(v6);
    sub_1BFDC11BC(v2);
    uint64_t v11 = v6;
LABEL_19:
    sub_1BFDC11BC(v11);
    return 0;
  }
  return result;
}

uint64_t sub_1C0F8DA10(uint64_t a1)
{
  uint64_t result = sub_1C0F8DB6C(&qword_1EA1A9870);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatSponsoredBannerNodeStyle()
{
  return self;
}

uint64_t sub_1C0F8DA78(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C0F8DB6C(&qword_1EB86D4B8);
  uint64_t result = sub_1C0F8DB6C(&qword_1EA1A0958);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0F8DAE0(void *a1)
{
  a1[1] = sub_1C0F8DB6C(&qword_1EB86D4B8);
  a1[2] = sub_1C0F8DB6C(&qword_1EA1A0958);
  uint64_t result = sub_1C0F8DB6C(&qword_1EA1A9878);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F8DB6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatSponsoredBannerNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0F8DBAC(uint64_t a1)
{
  unint64_t result = sub_1C0F8DBD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F8DBD4()
{
  unint64_t result = qword_1EA1A9880;
  if (!qword_1EA1A9880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9880);
  }
  return result;
}

unint64_t sub_1C0F8DC28(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C08EF294();
  unint64_t result = sub_1C08EF1F8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F8DC58(void *a1)
{
  a1[1] = sub_1C08EF294();
  a1[2] = sub_1C08EF1F8();
  unint64_t result = sub_1C0F8DC90();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F8DC90()
{
  unint64_t result = qword_1EA1A9888[0];
  if (!qword_1EA1A9888[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A9888);
  }
  return result;
}

uint64_t sub_1C0F8DCE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F8DD34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSponsoredBannerNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSponsoredBannerNodeStyle);
}

uint64_t dispatch thunk of FormatSponsoredBannerNodeStyle.__allocating_init(identifier:class:selectors:filledColor:unfilledColor:ignoresSmartInvertColors:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t destroy for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) != 0) {
    uint64_t result = swift_release();
  }
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  if ((~v6 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1C036EDB0(a1 + 16);
    uint64_t v5 = *(void *)(a2 + 16);
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  int v7 = (void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  unint64_t v9 = v8 & 0xF000000000000007;
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) != 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *int v7 = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_1C036EDB0(a1 + 24);
    uint64_t v8 = *(void *)(a2 + 24);
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
LABEL_13:
    *int v7 = v8;
    goto LABEL_15;
  }
  *int v7 = v8;
  swift_retain();
LABEL_15:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0(a1 + 16);
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  int v7 = (void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *int v7 = v8;
      swift_release();
      goto LABEL_11;
    }
    sub_1C036EDB0(a1 + 24);
  }
  *int v7 = v8;
LABEL_11:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSponsoredBannerNodeStyle.Selector()
{
  return &type metadata for FormatSponsoredBannerNodeStyle.Selector;
}

uint64_t sub_1C0F8E094()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0F8E13C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (uint64_t *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_1BFE95820(*v11, v13);
    *unint64_t v10 = v12;
    v10[1] = v13;
    *(void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C0F8E26C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BFE95664(*(void *)v4, *(void *)(v4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F8E2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  sub_1BFE95820(*v8, v10);
  *int v7 = v9;
  v7[1] = v10;
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0F8E398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  sub_1BFE95820(*v8, v10);
  uint64_t v11 = *v7;
  unint64_t v12 = v7[1];
  *int v7 = v9;
  v7[1] = v10;
  sub_1BFE95664(v11, v12);
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0F8E458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0F8E4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  uint64_t v9 = *v7;
  unint64_t v10 = v7[1];
  unint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)int v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  sub_1BFE95664(v9, v10);
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v11 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0F8E584(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0F8E6E0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C0F8E6F4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v19 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *unint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C0F8E8ECLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for DebugFormatServiceResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0F8E92C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v26 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v29 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugFormatServiceResult.CodingKeys();
  swift_getWitnessTable();
  uint64_t v8 = sub_1C152072C();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v23 - v9;
  uint64_t v28 = a3;
  uint64_t v11 = type metadata accessor for DebugFormatServiceResult();
  uint64_t v25 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int v13 = (char *)&v23 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v14 = v32;
  sub_1C1520EBC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v30;
  char v35 = 0;
  sub_1C01D8CB4();
  sub_1C15206EC();
  uint64_t v16 = v33;
  unint64_t v17 = v34;
  uint64_t v18 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v18 = v33;
  *((void *)v18 + 1) = v17;
  char v35 = 1;
  uint64_t v24 = v16;
  unint64_t v32 = v17;
  sub_1BFE95820(v16, v17);
  sub_1C04B4E28();
  sub_1C15206EC();
  uint64_t v23 = v10;
  *(void *)&v13[*(int *)(v11 + 48)] = v33;
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_1C06599C4(v19);
  uint64_t v20 = v29;
  uint64_t v28 = 0;
  sub_1C1517D9C();
  sub_1BFE95664(v24, v32);
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v31);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v13, v20, a2);
  uint64_t v21 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v27, v13, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v11);
}

uint64_t sub_1C0F8EDA8(void *a1, uint64_t a2)
{
  type metadata accessor for DebugFormatServiceResult.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C152083C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = v11[0];
  sub_1C1520F0C();
  long long v12 = *(_OWORD *)(v8 + *(int *)(a2 + 44));
  char v13 = 0;
  sub_1C01D8810();
  uint64_t v9 = v11[1];
  sub_1C152080C();
  if (!v9)
  {
    *(void *)&long long v12 = *(void *)(v8 + *(int *)(a2 + 48));
    char v13 = 1;
    sub_1C04B4FA0();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0F8EF78()
{
  uint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0F8EFCC(char a1)
{
  if (a1) {
    return 0x704F676E69646F63;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1C0F8F008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0F8F07C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C0F8F0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0F8F158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0F8F1C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F8EF78();
  *a1 = result;
  return result;
}

uint64_t sub_1C0F8F204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0F8EFCC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0F8F23C()
{
  return sub_1C0F8EFCC(*v0);
}

uint64_t sub_1C0F8F250@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F8EF78();
  *a1 = result;
  return result;
}

uint64_t sub_1C0F8F284(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0F8F2D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C0F8F32C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0F8E92C(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C0F8F350(void *a1, uint64_t a2)
{
  return sub_1C0F8EDA8(a1, a2);
}

uint64_t type metadata accessor for DebugFormatServiceResult.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1C0F8F380(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F8F44CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C0F8F474()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0F8F490()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0F8F4AC()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for M6_V1()
{
  return &type metadata for M6_V1;
}

uint64_t sub_1C0F8F4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v46 = a3;
  uint64_t v39 = sub_1C151635C();
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  unsigned int v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v41 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v62 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = type metadata accessor for GroupLayoutContext();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  long long v12 = &v35[-v11];
  uint64_t v45 = &v35[-v11];
  char v13 = *v3;
  int v36 = *v3;
  unint64_t v14 = (void *)*((void *)v3 + 1);
  unsigned __int8 v15 = v3[16];
  id v60 = &type metadata for M6_V1;
  unint64_t v16 = sub_1C0185C54();
  unint64_t v61 = v16;
  LOBYTE(v58) = v13;
  *((void *)&v58 + 1) = v14;
  unsigned __int8 v59 = v15;
  sub_1BFF1EC48(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v14, v15);
  uint64_t v17 = v37;
  uint64_t v42 = sub_1C0F5397C(0, 0, 0, 0, 0);
  sub_1BFF1EC48(v17, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1BFF1EC48(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v14, v15);
  sub_1C151634C();
  uint64_t v18 = sub_1C151633C();
  uint64_t v20 = v19;
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v6, v39);
  id v56 = &type metadata for M6_V1;
  unint64_t v57 = v16;
  v53[0] = v36;
  char v54 = v14;
  LOBYTE(v16) = v15;
  unsigned __int8 v55 = v15;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v14;
  uint64_t v23 = v14;
  LOBYTE(v14) = v16;
  sub_1BFFFC7A0(v22, v16);
  uint64_t v51 = sub_1C1520FAC();
  uint64_t v52 = v24;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 45;
  unint64_t v48 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v25 = sub_1C151FEBC();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v25;
  *(void *)(v21 + 24) = v27;
  uint64_t v28 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *uint64_t v28 = v18;
  v28[1] = v20;
  sub_1BFC66384((uint64_t)v53, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v62, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v29, 0, 1, v44);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v9, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v30, 0, 1, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFFFC630(v23, v14);
  uint64_t v31 = (int *)type metadata accessor for M6_V1.Bound();
  unint64_t v32 = v46;
  v46[3] = (uint64_t)v31;
  v32[4] = sub_1C0F92378(&qword_1EB85EE30, (void (*)(uint64_t))type metadata accessor for M6_V1.Bound);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
  sub_1BFC773DC(&v58, (uint64_t)boxed_opaque_existential_0);
  uint64_t result = sub_1BFF2389C((uint64_t)v45, (uint64_t)boxed_opaque_existential_0 + v31[5], (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[6]) = v42;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[7]) = v21;
  return result;
}

double sub_1C0F8FA20@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v8 = type metadata accessor for M6_V1.Bound();
  uint64_t v9 = *(void *)(v2 + *(int *)(v8 + 24));
  uint64_t v29 = v2;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C0184C94((void (*)(_OWORD *__return_ptr, uint64_t))sub_1C0F923C0, (uint64_t)v28, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = v2 + *(int *)(v8 + 20);
  uint64_t v12 = v11 + *(int *)(type metadata accessor for GroupLayoutContext() + 24);
  if (*(unsigned char *)(v12 + 21) == 1)
  {
    sub_1C0F8FF64(v10, v11);
  }
  else
  {
    unsigned __int8 v13 = *(unsigned char *)(v12 + 20);
    uint64_t v14 = *MEMORY[0x1E4FAB6D8];
    uint64_t v15 = sub_1C151759C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v7, v14, v15);
    uint64_t v16 = (*(uint64_t (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
    MEMORY[0x1F4188790](v16);
    *((void *)&v27 - 4) = v10;
    *((void *)&v27 - 3) = v11;
    LOWORD(v25) = v13;
    sub_1C0F5593C(0, (unint64_t *)&unk_1EB85E4B0, MEMORY[0x1E4FAB938]);
    swift_allocObject();
    sub_1C1517BEC();
  }
  uint64_t v17 = sub_1C1517BFC();
  long long v27 = v31;
  uint64_t v18 = v32;
  uint64_t v19 = v33;
  uint64_t v30 = v34;
  *(void *)&long long v31 = v10;
  MEMORY[0x1F4188790](v17);
  uint64_t v26 = v10;
  sub_1BFC6CA08(0, &qword_1EB85EF28);
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB85EF48);
  sub_1C0F6D5B0();
  unint64_t v20 = sub_1C0F6D618();
  swift_bridgeObjectRetain();
  unint64_t v25 = v20;
  uint64_t v21 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v31 = v21;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  uint64_t v22 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = *(double *)&v27;
  *(_OWORD *)(a1 + 8) = v27;
  *(void *)(a1 + 24) = v18;
  *(void *)(a1 + 32) = v19;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v22;
  *(void *)(a1 + 48) = v24;
  return result;
}

uint64_t sub_1C0F8FE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for M6_V1.Bound();
  uint64_t v7 = *(void *)(a2 + *(int *)(v6 + 28));
  sub_1C0249E84(a1, (uint64_t)(a3 + 1));
  uint64_t v8 = a2 + *(int *)(v6 + 20);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v10 = *(void *)(*(void *)(v8 + *(int *)(v9 + 40)) + 16);
  double v11 = *(double *)(v8 + *(int *)(v9 + 32));
  sub_1BFC66384(v10 + 16, (uint64_t)v20);
  sub_1BFC66384(v10 + 56, (uint64_t)v19);
  double v12 = v11 * *(double *)(v10 + 96);
  sub_1BFC773DC(v20, (uint64_t)v17);
  sub_1BFC773DC(v19, (uint64_t)v18);
  *(double *)&v18[5] = v12;
  sub_1BFC66384((uint64_t)v18, (uint64_t)v16);
  uint64_t v13 = type metadata accessor for CategoryViewStyler();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0x4030000000000000;
  sub_1BFC773DC(v16, v14 + 24);
  a3[23] = v13;
  a3[24] = &off_1F1BA3FE0;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  a3[20] = v14;
  *a3 = v7;
  return result;
}

uint64_t sub_1C0F8FF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = a2 + *(int *)(v8 + 24);
  char v10 = *(unsigned char *)(v9 + 20);
  char v11 = *(unsigned char *)(v9 + 21);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a2 + *(int *)(v8 + 40)) + 24) + 16);
  uint64_t v23 = a1;
  sub_1BFC6CA08(0, &qword_1EB85EF28);
  sub_1C0F6D7A8();
  swift_retain();
  uint64_t v13 = sub_1C151F0BC();
  uint64_t v14 = *MEMORY[0x1E4FAB6D8];
  uint64_t v15 = sub_1C151759C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v7, v14, v15);
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v19 = v13;
  uint64_t v20 = v12;
  char v21 = v10;
  char v22 = v11;
  sub_1C0F5593C(0, (unint64_t *)&unk_1EB85E4B0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v16 = sub_1C1517BEC();
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C0F90184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v37 = a4;
  int v36 = a6;
  uint64_t v9 = sub_1C151772C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = swift_allocObject();
  sub_1C0F557B4(a2, v14 + 16);
  long long v15 = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(v14 + 344) = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(v14 + 360) = v15;
  long long v16 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v14 + 264) = *(_OWORD *)(a3 + 48);
  long long v17 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v14 + 280) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v14 + 296) = v17;
  long long v18 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v14 + 312) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v14 + 328) = v18;
  uint64_t v19 = v37;
  long long v20 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v14 + 216) = *(_OWORD *)a3;
  *(_OWORD *)(v14 + 232) = v20;
  *(void *)(v14 + 376) = *(void *)(a3 + 160);
  *(_OWORD *)(v14 + 248) = v16;
  uint64_t v21 = v19 + *(int *)(type metadata accessor for M6_V1.Bound() + 20);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v23 = *(void *)(v21 + *(int *)(result + 28));
  BOOL v24 = __OFADD__(v23, a1);
  uint64_t v25 = v23 + a1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = result;
    *(void *)(v14 + 384) = v25;
    *(void *)(v13 + 16) = v14 | 0x8000000000000000;
    long long v27 = *(_OWORD *)(a3 + 144);
    v38[8] = *(_OWORD *)(a3 + 128);
    v38[9] = v27;
    uint64_t v39 = *(void *)(a3 + 160);
    long long v28 = *(_OWORD *)(a3 + 80);
    v38[4] = *(_OWORD *)(a3 + 64);
    v38[5] = v28;
    long long v29 = *(_OWORD *)(a3 + 112);
    v38[6] = *(_OWORD *)(a3 + 96);
    v38[7] = v29;
    long long v30 = *(_OWORD *)(a3 + 16);
    v38[0] = *(_OWORD *)a3;
    v38[1] = v30;
    long long v31 = *(_OWORD *)(a3 + 48);
    v38[2] = *(_OWORD *)(a3 + 32);
    v38[3] = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v21, v9);
    uint64_t v32 = -2;
    if (!*(unsigned char *)(v21 + *(int *)(v26 + 24) + 21)) {
      uint64_t v32 = -1;
    }
    uint64_t v33 = sub_1C0F92574((uint64_t)v38, (uint64_t)v12, a1, *(void *)(v35 + 16) + v32);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(void *)(v13 + 24) = v33;
    *int v36 = v13 | 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1C0F903E0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)&v15[-v11];
  uint64_t v19 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 6;
  *uint64_t v12 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FABA10], v9);
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  __int16 v18 = a4 & 0x101;
  sub_1C0F5593C(0, &qword_1EB85E7E8, MEMORY[0x1E4FAB6F0]);
  sub_1C0F6D850();
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C0F905C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v46 = a4;
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v44 - v10);
  uint64_t v56 = a1;
  uint64_t v12 = sub_1C151729C();
  uint64_t v13 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x1E4FAB4E8], v12);
  *uint64_t v11 = v13;
  uint64_t v15 = v9 + 104;
  uint64_t v16 = *(void (**)(uint64_t *, void, uint64_t))(v9 + 104);
  v16(v11, *MEMORY[0x1E4FAB940], v8);
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v18 = v17;
  unint64_t v19 = sub_1C0F6D8C4();
  uint64_t v54 = v18;
  unint64_t v20 = v19;
  sub_1C151738C();
  uint64_t v23 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t v22 = v9 + 8;
  uint64_t v21 = v23;
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v23)(v11, v8);
  uint64_t v25 = *(void *)(a2 + 16);
  if (v25)
  {
    unint64_t v50 = v16;
    uint64_t v26 = a2 + 32;
    uint64_t v55 = v25;
    unsigned int v49 = *MEMORY[0x1E4FABA28];
    unsigned int v27 = *MEMORY[0x1E4FAB638];
    int v47 = v46 & 1;
    unsigned int v48 = v27;
    unsigned int v46 = (v46 >> 8) & 1;
    v44[1] = a2;
    swift_bridgeObjectRetain();
    long long v45 = xmmword_1C1529AE0;
    unint64_t v52 = v20;
    uint64_t v53 = v15;
    uint64_t v51 = v21;
    do
    {
      uint64_t v56 = a1;
      v50(v11, v49, v8);
      sub_1C0F559C0();
      sub_1C0F55BEC(0, &qword_1EB85E7D0, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FAB678]);
      uint64_t v29 = v28;
      uint64_t v30 = *(void *)(v28 - 8);
      long long v31 = v11;
      uint64_t v32 = v22;
      uint64_t v33 = v8;
      uint64_t v34 = a1;
      uint64_t v35 = a3;
      unint64_t v36 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v45;
      unint64_t v38 = v37 + v36;
      a3 = v35;
      a1 = v34;
      uint64_t v8 = v33;
      uint64_t v22 = v32;
      uint64_t v11 = v31;
      uint64_t v39 = v29;
      unint64_t v40 = v52;
      uint64_t v41 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v30 + 104))(v38, v48, v39);
      MEMORY[0x1F4188790](v41);
      v44[-4] = a3;
      v44[-3] = v26;
      unint64_t v43 = v40;
      sub_1C151731C();
      uint64_t v42 = v51;
      swift_bridgeObjectRelease();
      v42(v11, v8);
      v26 += 200;
      --v55;
    }
    while (v55);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0F909EC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)&v15[-v11];
  uint64_t v19 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 6;
  *uint64_t v12 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FABA10], v9);
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  __int16 v18 = a4 & 0x101;
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  sub_1C0F6D8C4();
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C0F90BCC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v19 = v8;
  uint64_t v18 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v17 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v17 - v14;
  uint64_t v23 = a1;
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB9E0], v12);
  uint64_t v22 = *(void *)(*(void *)(*(void *)(a2 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                  + 16);
  sub_1C0249E84(a3 + 8, (uint64_t)v21);
  __int16 v20 = a4 & 0x101;
  sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
  type metadata accessor for CategoryViewLayoutAttributesFactory();
  sub_1C0F55828();
  sub_1C0F55CA8();
  sub_1C0F92378(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
  swift_retain();
  sub_1C15175AC();
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  sub_1C0F6D8C4();
  sub_1C151736C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v17);
}

uint64_t sub_1C0F90F60(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)&v15[-v11];
  uint64_t v19 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 6;
  *uint64_t v12 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FABA10], v9);
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  __int16 v18 = a4 & 0x101;
  sub_1C0F5593C(0, &qword_1EB85E7E8, MEMORY[0x1E4FAB6F0]);
  sub_1C0F6D850();
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C0F91140(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4)
{
  unsigned int v41 = a4;
  uint64_t v50 = a2;
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v37 - v9);
  uint64_t v51 = a1;
  uint64_t v11 = sub_1C151729C();
  uint64_t v12 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FAB4E8], v11);
  *uint64_t v10 = v12;
  uint64_t v15 = v8 + 104;
  uint64_t v14 = *(void (**)(uint64_t *, void, uint64_t))(v8 + 104);
  v14(v10, *MEMORY[0x1E4FAB940], v7);
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  unint64_t v18 = sub_1C0F6D8C4();
  sub_1C151738C();
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  uint64_t v20 = v8 + 8;
  uint64_t v19 = v21;
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v21)(v10, v7);
  if (*(void *)(v50 + 16))
  {
    uint64_t v45 = *(void *)(v50 + 16);
    unsigned int v44 = *MEMORY[0x1E4FABA28];
    unsigned int v23 = *MEMORY[0x1E4FAB638];
    int v42 = v41 & 1;
    unsigned int v43 = v23;
    unsigned int v41 = (v41 >> 8) & 1;
    swift_bridgeObjectRetain();
    uint64_t v40 = v17;
    uint64_t v24 = 0;
    long long v39 = xmmword_1C1529AE0;
    unint64_t v37 = v18;
    unint64_t v38 = v14;
    uint64_t v48 = v7;
    uint64_t v49 = v20;
    unsigned int v46 = v19;
    uint64_t v47 = v15;
    do
    {
      unint64_t v25 = *(void *)(v50 + 8 * v24++ + 32);
      uint64_t v51 = a1;
      v38(v10, v44, v7);
      sub_1C0F559C0();
      sub_1C0F55BEC(0, &qword_1EB85E7D0, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FAB678]);
      uint64_t v26 = a1;
      uint64_t v28 = v27;
      unint64_t v29 = a3;
      uint64_t v30 = *(void *)(v27 - 8);
      long long v31 = v10;
      unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      uint64_t v34 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v30 + 104))(v33 + v32, v43, v28);
      a3 = v29;
      MEMORY[0x1F4188790](v34);
      *(&v37 - 4) = v29;
      *(&v37 - 3) = v25;
      swift_bridgeObjectRetain();
      unint64_t v36 = v37;
      a1 = v26;
      uint64_t v7 = v48;
      sub_1C151731C();
      uint64_t v35 = v46;
      swift_bridgeObjectRelease();
      uint64_t v10 = v31;
      v35(v31, v7);
      swift_bridgeObjectRelease();
    }
    while (v45 != v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0F91578(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)v25 - v11);
  uint64_t v27 = a1;
  uint64_t v32 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 3;
  *uint64_t v12 = v13;
  uint64_t v14 = *MEMORY[0x1E4FABA10];
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v15(v12, v14, v9);
  uint64_t v28 = a2;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  v25[1] = a4 & 1;
  __int16 v31 = a4 & 0x101;
  v25[0] = (a4 >> 8) & 1;
  sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  unint64_t v18 = sub_1C0F6D8C4();
  unint64_t v24 = v18;
  uint64_t v26 = v17;
  sub_1C151734C();
  uint64_t v19 = a3;
  uint64_t v20 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  uint64_t result = v20(v12, v9);
  if (*(void *)(v19 + 16) >= 2uLL)
  {
    uint64_t v32 = v27;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 3;
    *uint64_t v12 = v22;
    uint64_t v23 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v15)(v12, v14, v9);
    MEMORY[0x1F4188790](v23);
    *(void *)&v25[-8] = v28;
    *(void *)&v25[-6] = v19;
    unint64_t v24 = v18;
    sub_1C151734C();
    return v20(v12, v9);
  }
  return result;
}

uint64_t sub_1C0F91860(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v9 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v27 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FAB9E0], v13);
  uint64_t v26 = a2;
  if (*(void *)(a3 + 16))
  {
    sub_1C0249E84(a3 + 40, (uint64_t)v25);
    __int16 v24 = a4 & 0x101;
    sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    uint64_t v20 = v9;
    sub_1C0F55CA8();
    uint64_t v18 = v23;
    uint64_t v21 = v13;
    sub_1C0F92378(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1C15175AC();
    sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0F6D8C4();
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0F91BFC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C0F55AD8();
  uint64_t v9 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F55BEC(0, (unint64_t *)&unk_1EB85E800, (uint64_t (*)(void))sub_1C0F55828, (uint64_t)&type metadata for CategoryViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v27 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FAB9E0], v13);
  uint64_t v26 = a2;
  if (*(void *)(a3 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1C0249E84(a3 + 240, (uint64_t)v25);
    __int16 v24 = a4 & 0x101;
    sub_1C0F55BEC(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1C0F55828();
    uint64_t v20 = v9;
    sub_1C0F55CA8();
    uint64_t v18 = v23;
    uint64_t v21 = v13;
    sub_1C0F92378(&qword_1EB85EE20, (void (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1C15175AC();
    sub_1C0F5593C(0, &qword_1EB85E7C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0F6D8C4();
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  }
  return result;
}

uint64_t sub_1C0F91FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0F8F4D8(a1, a2, a3);
}

uint64_t sub_1C0F91FB8()
{
  return sub_1C12BC484();
}

unint64_t sub_1C0F91FC8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0F91FF8();
  unint64_t result = sub_1C0F9204C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F91FF8()
{
  unint64_t result = qword_1EB85E6F8;
  if (!qword_1EB85E6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E6F8);
  }
  return result;
}

unint64_t sub_1C0F9204C()
{
  unint64_t result = qword_1EB85EED0;
  if (!qword_1EB85EED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EED0);
  }
  return result;
}

uint64_t type metadata accessor for M6_V1.Bound()
{
  uint64_t result = qword_1EB85EE38;
  if (!qword_1EB85EE38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0F920EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F92100);
}

uint64_t sub_1C0F92100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0F921B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F921C4);
}

uint64_t sub_1C0F921C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F9226C()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0F92320(uint64_t a1)
{
  uint64_t result = sub_1C0F92378(&qword_1EB85EE28, (void (*)(uint64_t))type metadata accessor for M6_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F92378(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F923C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F8FE18(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0F923E0(uint64_t a1)
{
  return sub_1C0F927C4(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F903E0);
}

uint64_t sub_1C0F923F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  return sub_1C0F90184(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1C0F92400(uint64_t a1)
{
  return sub_1C0F92488(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F90F60);
}

uint64_t sub_1C0F92418()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F92428(uint64_t a1)
{
  return sub_1C0F92488(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F91140);
}

uint64_t sub_1C0F92440(uint64_t a1)
{
  return sub_1C0F92488(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F91578);
}

uint64_t sub_1C0F92458(uint64_t a1)
{
  return sub_1C0F92488(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F91860);
}

uint64_t sub_1C0F92470(uint64_t a1)
{
  return sub_1C0F92488(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F91BFC);
}

uint64_t sub_1C0F92488(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  if (*(unsigned char *)(v2 + 33)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_1C0F924B0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F924F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  }
  if (v0[15]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  }
  if (v0[20]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 22));
  return swift_deallocObject();
}

uint64_t sub_1C0F92574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 >= a4) {
    return MEMORY[0x1E4FBC860];
  }
  double v5 = *(double *)(a1 + 152);
  double v4 = *(double *)(a1 + 160);
  double v7 = *(double *)(a1 + 136);
  double v6 = *(double *)(a1 + 144);
  CGRect v23 = *(CGRect *)(a1 + 96);
  CGRect v22 = v23;
  CGFloat MinX = CGRectGetMinX(v23);
  MEMORY[0x1C18C72C0](v7 + MinX, v7, v6, v5, v4);
  v24.origin.CGFloat x = v7;
  v24.origin.double y = v6;
  v24.size.width = v5;
  v24.size.height = v4;
  CGRectGetMaxY(v24);
  sub_1C151F79C();
  v25.origin.CGFloat x = v7;
  v25.origin.double y = v6;
  v25.size.width = v5;
  v25.size.height = v4;
  CGRectGetWidth(v25);
  CGRectGetMinX(v22);
  sub_1C151F7AC();
  sub_1C15176EC();
  sub_1C151F7BC();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_1C0F6D744(0, &qword_1EB87A630, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = *(void *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  uint64_t v20 = (void *)(v19 + v18);
  *uint64_t v20 = v10;
  v20[1] = v12;
  long long v20[2] = v14;
  v20[3] = v16;
  swift_storeEnumTagMultiPayload();
  return v19;
}

uint64_t sub_1C0F927AC(uint64_t a1)
{
  return sub_1C0F927C4(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F905C0);
}

uint64_t sub_1C0F927C4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  if (*(unsigned char *)(v2 + 33)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_1C0F927EC(uint64_t a1)
{
  return sub_1C0F9281C(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F909EC);
}

uint64_t sub_1C0F92804(uint64_t a1)
{
  return sub_1C0F9281C(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1C0F90BCC);
}

uint64_t sub_1C0F9281C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  if (*(unsigned char *)(v2 + 33)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

void *assignWithCopy for InternalErrorViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for InternalErrorViewLayout(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedLayoutEntity()
{
  return &type metadata for FeedLayoutEntity;
}

uint64_t sub_1C0F929CC()
{
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  qword_1EB93C2B8 = qword_1EA198ED8;
  unk_1EB93C2C0 = unk_1EA198EE0;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0F92A38(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6449646E696BLL;
      break;
    case 2:
      unint64_t result = 0x644974756F79616CLL;
      break;
    case 3:
      unint64_t result = 0x7364496D657469;
      break;
    case 4:
      unint64_t result = 0x736E6D756C6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x496E6F6973736573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0F92B34(void *a1)
{
  int v3 = v1;
  sub_1C0F95C0C(0, &qword_1EA1A99A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F95BB8();
  sub_1C1520F0C();
  uint64_t v12 = *v3;
  HIBYTE(v11) = 0;
  sub_1BFCCCEC0(0, &qword_1EB85AC40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA610]);
  sub_1C0F95C70((unint64_t *)&qword_1EA1999A0);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    HIBYTE(v11) = 1;
    sub_1C152080C();
    uint64_t v12 = v3[2];
    HIBYTE(v11) = 2;
    sub_1C152080C();
    uint64_t v12 = v3[3];
    HIBYTE(v11) = 3;
    sub_1C152080C();
    uint64_t v12 = v3[4];
    HIBYTE(v11) = 4;
    sub_1BFCCCEC0(0, (unint64_t *)&unk_1EB85AC58, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], MEMORY[0x1E4FAA610]);
    sub_1C0F95CE0((unint64_t *)&qword_1EA1A4C50);
    sub_1C152080C();
    uint64_t v12 = v3[5];
    HIBYTE(v11) = 5;
    sub_1C152080C();
    uint64_t v12 = v3[6];
    HIBYTE(v11) = 6;
    sub_1C152080C();
    uint64_t v12 = v3[7];
    HIBYTE(v11) = 7;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0F92ECC()
{
  return sub_1C0F92A38(*v0);
}

uint64_t sub_1C0F92ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0F950C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0F92EFC(uint64_t a1)
{
  unint64_t v2 = sub_1C0F95BB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F92F38(uint64_t a1)
{
  unint64_t v2 = sub_1C0F95BB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0F92F74()
{
  return sub_1C15199DC();
}

uint64_t sub_1C0F93060()
{
  if (qword_1EB85F8C8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB93C2B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C0F930C8(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98DF0();
  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1C0F93114(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98DF0();
  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1C0F93160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98DF0();
  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

double sub_1C0F931C4@<D0>(_OWORD *a1@<X8>)
{
  sub_1C0F953F4((uint64_t *)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

double sub_1C0F93204@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0F933C0(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1C0F93248(void *a1)
{
  return sub_1C0F92B34(a1);
}

uint64_t sub_1C0F93260(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1BFD98DF0();
  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1C0F932AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98DF0();
  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1C0F93300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1BFD98DF0();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1C0F9336C()
{
  unint64_t result = qword_1EA1A9990;
  if (!qword_1EA1A9990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9990);
  }
  return result;
}

uint64_t sub_1C0F933C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v64 = (void *)a1;
  uint64_t v47 = a2;
  sub_1C0F95C0C(0, &qword_1EA1A9998, MEMORY[0x1E4FBBDC0]);
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v61 = (char *)&v46 - v3;
  sub_1BFCCCF10(0, &qword_1EB85ACC8, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v63 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v60 = (char *)&v46 - v7;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  uint64_t v9 = MEMORY[0x1E4FAA770];
  sub_1BFCCCF10(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v46 - v14;
  unsigned __int8 v59 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCCCEC0(0, &qword_1EB85ACA0, v8, v9, MEMORY[0x1E4FAA6B0]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v20 = (uint64_t (*)(void, uint64_t, uint64_t))(v18 + 56);
  v19(v15, 1, 1, v16);
  v19(v12, 1, 1, v17);
  long long v58 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCCCEC0(0, &qword_1EB85ACE0, v8, v9, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  unint64_t v57 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCCCEC0(0, &qword_1EB85AC40, v8, v9, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v53 = sub_1C151996C();
  v19(v15, 1, 1, v17);
  v19(v12, 1, 1, v17);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v52 = sub_1C151996C();
  v19(v15, 1, 1, v17);
  v19(v12, 1, 1, v17);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v50 = sub_1C151996C();
  uint64_t v55 = v19;
  uint64_t v56 = v20;
  v19(v15, 1, 1, v17);
  uint64_t v54 = v12;
  v19(v12, 1, 1, v17);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v51 = sub_1C151996C();
  sub_1BFCCCEC0(0, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v59);
  uint64_t v22 = v21;
  CGRect v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v23(v60, 1, 1, v21);
  v23(v63, 1, 1, v22);
  uint64_t v24 = MEMORY[0x1E4FBB550];
  uint64_t v25 = MEMORY[0x1E4FAA798];
  sub_1BFCCCEC0(0, &qword_1EB85ACF8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v58);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCCCEC0(0, (unint64_t *)&unk_1EB85AC58, v24, v25, v57);
  swift_allocObject();
  id v60 = (char *)sub_1C151996C();
  uint64_t v26 = v55;
  v55(v15, 1, 1, v17);
  uint64_t v27 = v54;
  v26(v54, 1, 1, v17);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v63 = (char *)sub_1C151996C();
  v26(v15, 1, 1, v17);
  v26(v27, 1, 1, v17);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  unsigned __int8 v59 = (uint64_t (*)(void, uint64_t, uint64_t))sub_1C151996C();
  v26(v15, 1, 1, v17);
  v26(v27, 1, 1, v17);
  uint64_t v28 = v64;
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v29 = sub_1C151996C();
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  sub_1C0F95BB8();
  uint64_t v30 = v62;
  __int16 v31 = v61;
  sub_1C1520EBC();
  if (v30)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v62 = v29;
    uint64_t v32 = v48;
    char v65 = 0;
    sub_1C0F95C70((unint64_t *)&qword_1EA199968);
    sub_1C15206EC();
    uint64_t v33 = v66;
    swift_retain();
    swift_release();
    char v65 = 1;
    sub_1C15206EC();
    long long v58 = v33;
    uint64_t v34 = v66;
    swift_retain();
    swift_release();
    char v65 = 2;
    sub_1C15206EC();
    unint64_t v57 = v34;
    uint64_t v35 = v66;
    swift_retain();
    swift_release();
    char v65 = 3;
    sub_1C15206EC();
    uint64_t v56 = v35;
    unint64_t v36 = v66;
    swift_retain();
    swift_release();
    char v65 = 4;
    sub_1C0F95CE0((unint64_t *)&qword_1EA1A4C38);
    sub_1C15206EC();
    unint64_t v37 = (char *)v66;
    swift_retain();
    swift_release();
    char v65 = 5;
    sub_1C15206EC();
    id v60 = v37;
    unint64_t v38 = v66;
    swift_retain();
    swift_release();
    char v65 = 6;
    sub_1C15206EC();
    uint64_t v55 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v66;
    swift_retain();
    swift_release();
    char v65 = 7;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v49);
    long long v39 = v66;
    swift_retain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v40 = v60;
    swift_release();
    swift_release();
    unsigned int v41 = v56;
    swift_release();
    int v42 = v57;
    swift_release();
    unsigned int v43 = v58;
    uint64_t result = swift_release();
    uint64_t v45 = v47;
    *uint64_t v47 = v43;
    v45[1] = v42;
    v45[2] = v41;
    v45[3] = v36;
    v45[4] = v40;
    v45[5] = v38;
    v45[6] = v55;
    v45[7] = v39;
  }
  return result;
}

uint64_t sub_1C0F94250@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v64 = a2;
  uint64_t v66 = a1;
  unint64_t v61 = a3;
  sub_1BFCCCF10(0, &qword_1EB85ACC8, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v67 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  char v65 = (char *)&v52 - v6;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  uint64_t v8 = MEMORY[0x1E4FAA770];
  sub_1BFCCCF10(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v52 - v13;
  uint64_t v62 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCCCEC0(0, &qword_1EB85ACA0, v7, v8, MEMORY[0x1E4FAA6B0]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v19 = v17 + 56;
  v18(v14, 1, 1, v15);
  v18(v11, 1, 1, v16);
  unint64_t v57 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCCCEC0(0, &qword_1EB85ACE0, v7, v8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  long long v58 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCCCEC0(0, &qword_1EB85AC40, v7, v8, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v63 = sub_1C151996C();
  v18(v14, 1, 1, v16);
  v18(v11, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v60 = sub_1C151996C();
  v18(v14, 1, 1, v16);
  v18(v11, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v59 = sub_1C151996C();
  uint64_t v54 = v18;
  uint64_t v55 = v19;
  v18(v14, 1, 1, v16);
  uint64_t v53 = v11;
  v18(v11, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v56 = sub_1C151996C();
  sub_1BFCCCEC0(0, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v62);
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v22(v65, 1, 1, v20);
  v22(v67, 1, 1, v21);
  uint64_t v23 = MEMORY[0x1E4FBB550];
  uint64_t v24 = MEMORY[0x1E4FAA798];
  sub_1BFCCCEC0(0, &qword_1EB85ACF8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v57);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFCCCEC0(0, (unint64_t *)&unk_1EB85AC58, v23, v24, v58);
  swift_allocObject();
  uint64_t v62 = (uint64_t (*)(void, uint64_t, uint64_t))sub_1C151996C();
  uint64_t v25 = v54;
  v54(v14, 1, 1, v16);
  uint64_t v26 = v53;
  v25(v53, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  char v65 = (char *)sub_1C151996C();
  v25(v14, 1, 1, v16);
  v25(v26, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v27 = sub_1C151996C();
  v25(v14, 1, 1, v16);
  v25(v26, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v28 = sub_1C151996C();
  swift_retain_n();
  swift_retain();
  uint64_t v29 = v60;
  swift_retain();
  uint64_t v30 = v59;
  swift_retain();
  uint64_t v31 = v56;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = v66;
  uint64_t v33 = v66[3];
  uint64_t v68 = v66[2];
  uint64_t v69 = v33;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v32[1];
  uint64_t v68 = *v32;
  uint64_t v69 = v34;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v67 = (char *)v27;
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v35 = v32[5];
  unint64_t v36 = v32;
  uint64_t v68 = v32[4];
  uint64_t v69 = v35;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = v31;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v38 = v63;
  swift_release();
  uint64_t v68 = v36[6];
  sub_1BFED9C20();
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1C151E55C();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  uint64_t v68 = v39;
  uint64_t v69 = v41;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  int v42 = v62;
  swift_retain();
  unsigned int v43 = v65;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v68 = v66[12];
  LOBYTE(v69) = 0;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v68 = UIContentSizeCategory.description.getter();
  uint64_t v69 = v44;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v64, v64[3]);
  uint64_t v68 = sub_1C151811C();
  uint64_t v69 = v45;
  sub_1C1519C0C();
  swift_release();
  uint64_t v46 = v38;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v47 = v67;
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v48 = (uint64_t)v66;
  uint64_t v49 = v66[9];
  uint64_t v68 = v66[8];
  uint64_t v69 = v49;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C0A8CFC4(v48);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  uint64_t v51 = v61;
  uint64_t *v61 = v46;
  v51[1] = v29;
  v51[2] = v30;
  v51[3] = v37;
  v51[4] = (uint64_t)v42;
  v51[5] = (uint64_t)v43;
  v51[6] = (uint64_t)v47;
  v51[7] = v28;
  return result;
}

uint64_t sub_1C0F950C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449646E696BLL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x644974756F79616CLL && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7364496D657469 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C15FECE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x644970756F7267 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1C0F953F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v41 = a1;
  sub_1BFCCCF10(0, &qword_1EB85ACC8, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v38 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v36 = (char *)&v30 - v4;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v6 = MEMORY[0x1E4FAA770];
  sub_1BFCCCF10(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCCCEC0(0, &qword_1EB85ACA0, v5, v6, MEMORY[0x1E4FAA6B0]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v16(v12, 1, 1, v14);
  v16(v9, 1, 1, v15);
  uint64_t v34 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCCCEC0(0, &qword_1EB85ACE0, v5, v6, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v33 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCCCEC0(0, &qword_1EB85AC40, v5, v6, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v40 = sub_1C151996C();
  v16(v12, 1, 1, v15);
  v16(v9, 1, 1, v15);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v39 = sub_1C151996C();
  v16(v12, 1, 1, v15);
  v16(v9, 1, 1, v15);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v37 = sub_1C151996C();
  uint64_t v32 = v16;
  v16(v12, 1, 1, v15);
  uint64_t v31 = v9;
  v16(v9, 1, 1, v15);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v35 = sub_1C151996C();
  sub_1BFCCCEC0(0, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v13);
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v19(v36, 1, 1, v17);
  v19(v38, 1, 1, v18);
  uint64_t v20 = MEMORY[0x1E4FBB550];
  uint64_t v21 = MEMORY[0x1E4FAA798];
  sub_1BFCCCEC0(0, &qword_1EB85ACF8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v34);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCCCEC0(0, (unint64_t *)&unk_1EB85AC58, v20, v21, v33);
  swift_allocObject();
  uint64_t v38 = (char *)sub_1C151996C();
  uint64_t v22 = v32;
  v32(v12, 1, 1, v15);
  uint64_t v23 = v31;
  v22(v31, 1, 1, v15);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v24 = sub_1C151996C();
  v22(v12, 1, 1, v15);
  v22(v23, 1, 1, v15);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v25 = sub_1C151996C();
  v22(v12, 1, 1, v15);
  v22(v23, 1, 1, v15);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t result = sub_1C151996C();
  uint64_t v27 = v41;
  uint64_t v28 = v39;
  *uint64_t v41 = v40;
  v27[1] = v28;
  uint64_t v29 = v35;
  void v27[2] = v37;
  v27[3] = v29;
  v27[4] = (uint64_t)v38;
  v27[5] = v24;
  v27[6] = v25;
  v27[7] = result;
  return result;
}

unint64_t sub_1C0F95BB8()
{
  unint64_t result = qword_1EA1A99A0;
  if (!qword_1EA1A99A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A99A0);
  }
  return result;
}

void sub_1C0F95C0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0F95BB8();
    unint64_t v7 = a3(a1, &type metadata for FeedLayoutEntity.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F95C70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFCCCEC0(255, &qword_1EB85AC40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F95CE0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFCCCEC0(255, (unint64_t *)&unk_1EB85AC58, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedLayoutEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F95E1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedLayoutEntity.CodingKeys()
{
  return &type metadata for FeedLayoutEntity.CodingKeys;
}

unint64_t sub_1C0F95E58()
{
  unint64_t result = qword_1EA1A99B0;
  if (!qword_1EA1A99B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A99B0);
  }
  return result;
}

unint64_t sub_1C0F95EB0()
{
  unint64_t result = qword_1EA1A99B8;
  if (!qword_1EA1A99B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A99B8);
  }
  return result;
}

unint64_t sub_1C0F95F08()
{
  unint64_t result = qword_1EA1A99C0;
  if (!qword_1EA1A99C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A99C0);
  }
  return result;
}

uint64_t FormatCustomItem.selectors.getter()
{
  type metadata accessor for FormatCustomItem();
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomItem.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomItem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomItem.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatCustomItem();
  return sub_1BFE32494(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))sub_1BFE323F8);
}

uint64_t FormatCustomItem.properties.getter()
{
  type metadata accessor for FormatCustomItem();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F96074(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatCustomItem() + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatCustomItem.selectors.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatCustomItem() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatCustomItem.selectors.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C0F96160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0F9771C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0F96188(uint64_t a1)
{
  unint64_t v2 = sub_1BFE32A08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F961C4(uint64_t a1)
{
  unint64_t v2 = sub_1BFE32A08();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatCustomItem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFE32568(0, &qword_1EB85C680, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE32A08();
  sub_1C1520F0C();
  LOBYTE(v17) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_1C15207CC();
    uint64_t v10 = type metadata accessor for FormatCustomItem();
    LOBYTE(v17) = 2;
    type metadata accessor for FormatCustomItem.Action();
    sub_1BFE32A5C(&qword_1EB865C50, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
    sub_1C152078C();
    uint64_t v17 = *(void *)(v3 + *(int *)(v10 + 28));
    LOBYTE(v15) = 3;
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
    sub_1BFE325CC((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
    sub_1C152080C();
    uint64_t v11 = *(void *)(v3 + *(int *)(v10 + 32));
    if (*(void *)(v11 + 16))
    {
      char v16 = 4;
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      uint64_t v15 = v12;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v15);
      swift_release();
      uint64_t v17 = (uint64_t)v15;
      sub_1C0F96B98();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0F9655C(void *a1)
{
  return FormatCustomItem.encode(to:)(a1);
}

uint64_t _s8NewsFeed16FormatCustomItemV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F97940(0, (unint64_t *)&qword_1EB8612A0, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = (uint64_t)&v41 - v7;
  uint64_t v8 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F97940(0, (unint64_t *)&qword_1EB862DC0, sub_1BFE323F8);
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - v13;
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v48 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v41 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v41 - v21;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v23 = 0, (sub_1C1520A9C() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v23 = 0, (sub_1C1520A9C() & 1) != 0))
    {
      uint64_t v41 = v4;
      uint64_t v24 = type metadata accessor for FormatCustomItem();
      sub_1BFE32494((uint64_t)a1 + *(int *)(v24 + 24), (uint64_t)v22, (uint64_t (*)(void))sub_1BFE323F8);
      uint64_t v42 = v24;
      sub_1BFE32494((uint64_t)a2 + *(int *)(v24 + 24), (uint64_t)v19, (uint64_t (*)(void))sub_1BFE323F8);
      uint64_t v25 = (uint64_t)&v14[*(int *)(v12 + 48)];
      sub_1BFE32494((uint64_t)v22, (uint64_t)v14, (uint64_t (*)(void))sub_1BFE323F8);
      sub_1BFE32494((uint64_t)v19, v25, (uint64_t (*)(void))sub_1BFE323F8);
      uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v26((uint64_t)v14, 1, v8) == 1)
      {
        sub_1BFE32834((uint64_t)v19, (uint64_t (*)(void))sub_1BFE323F8);
        sub_1BFE32834((uint64_t)v22, (uint64_t (*)(void))sub_1BFE323F8);
        if (v26(v25, 1, v8) == 1)
        {
          sub_1BFE32834((uint64_t)v14, (uint64_t (*)(void))sub_1BFE323F8);
LABEL_14:
          uint64_t v36 = v42;
          if (sub_1C00E57C0(*(void *)((char *)a1 + *(int *)(v42 + 28)), *(void *)((char *)a2 + *(int *)(v42 + 28))))
          {
            uint64_t v37 = *(int *)(v36 + 32);
            uint64_t v38 = *(void *)((char *)a1 + v37);
            uint64_t v39 = *(void *)((char *)a2 + v37);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v23 = sub_1BFEFAE14(v38, v39);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v23 & 1;
          }
LABEL_16:
          char v23 = 0;
          return v23 & 1;
        }
      }
      else
      {
        uint64_t v27 = v48;
        sub_1BFE32494((uint64_t)v14, v48, (uint64_t (*)(void))sub_1BFE323F8);
        if (v26(v25, 1, v8) != 1)
        {
          uint64_t v28 = v47;
          sub_1C0F97A18(v25, v47, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
          uint64_t v29 = v27;
          uint64_t v30 = v44;
          uint64_t v31 = v44 + *(int *)(v43 + 48);
          sub_1BFE32494(v29, v44, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
          sub_1BFE32494(v28, v31, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
          uint64_t v32 = v45;
          uint64_t v33 = v46;
          uint64_t v34 = v41;
          (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v45, v30, v41);
          LODWORD(v44) = MEMORY[0x1C18BDA40](v32, v31);
          uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
          v35(v31, v34);
          v35((uint64_t)v32, v34);
          sub_1BFE32834(v47, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
          sub_1BFE32834((uint64_t)v19, (uint64_t (*)(void))sub_1BFE323F8);
          sub_1BFE32834((uint64_t)v22, (uint64_t (*)(void))sub_1BFE323F8);
          sub_1BFE32834(v48, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
          sub_1BFE32834((uint64_t)v14, (uint64_t (*)(void))sub_1BFE323F8);
          if ((v44 & 1) == 0) {
            goto LABEL_16;
          }
          goto LABEL_14;
        }
        sub_1BFE32834((uint64_t)v19, (uint64_t (*)(void))sub_1BFE323F8);
        sub_1BFE32834((uint64_t)v22, (uint64_t (*)(void))sub_1BFE323F8);
        sub_1BFE32834(v27, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
      }
      sub_1C0F979A0((uint64_t)v14);
      goto LABEL_16;
    }
  }
  return v23 & 1;
}

unint64_t sub_1C0F96B98()
{
  unint64_t result = qword_1EB86B8B8;
  if (!qword_1EB86B8B8)
  {
    sub_1BFE32568(255, &qword_1EB85C680, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B8B8);
  }
  return result;
}

uint64_t sub_1C0F96C0C(void *a1)
{
  a1[1] = sub_1BFE32A5C(&qword_1EB85D170, (void (*)(uint64_t))type metadata accessor for FormatCustomItem);
  a1[2] = sub_1BFE32A5C(&qword_1EB85B870, (void (*)(uint64_t))type metadata accessor for FormatCustomItem);
  uint64_t result = sub_1BFE32A5C(&qword_1EA1A99C8, (void (*)(uint64_t))type metadata accessor for FormatCustomItem);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F96CB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatCustomItem() + 32));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCustomItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for FormatCustomItem.Action();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1BFE323F8(0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v10, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for FormatCustomItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_1BFE32834((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFE323F8(0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatCustomItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BFE323F8(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  return a1;
}

void *assignWithTake for FormatCustomItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v19 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v9, v10, v19);
      goto LABEL_7;
    }
    sub_1BFE32834((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1BFE323F8(0);
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v16 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v9, v10, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0F97468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFE323F8(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0F97518(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFE323F8(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatCustomItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F9768CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCustomItem.CodingKeys()
{
  return &type metadata for FormatCustomItem.CodingKeys;
}

unint64_t sub_1C0F976C8()
{
  unint64_t result = qword_1EA1A99D0;
  if (!qword_1EA1A99D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A99D0);
  }
  return result;
}

uint64_t sub_1C0F9771C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void sub_1C0F97940(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0F979A0(uint64_t a1)
{
  sub_1C0F97940(0, (unint64_t *)&qword_1EB862DC0, sub_1BFE323F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0F97A18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F97A80(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v43 = *a2;
    *(void *)a1 = *a2;
    uint64_t v44 = v43 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a1 + 16;
    long long v9 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = a1;
    uint64_t v50 = a1;
    uint64_t v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v12(v8, (uint64_t)(a2 + 2), v10);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = v11 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(unsigned char *)uint64_t v14 = *((unsigned char *)a2 + v13);
    long long v16 = *(_OWORD *)((char *)a2 + v13 + 32);
    *(_OWORD *)(v14 + 32) = v16;
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(v11 + v13 + 8, (uint64_t)a2 + v13 + 8);
    uint64_t v17 = *(void *)(v15 + 56);
    *(void *)(v14 + 48) = *(void *)(v15 + 48);
    *(void *)(v14 + 56) = v17;
    uint64_t v18 = *(void *)(v15 + 72);
    *(void *)(v14 + 64) = *(void *)(v15 + 64);
    *(void *)(v14 + 72) = v18;
    *(void *)(v14 + 80) = *(void *)(v15 + 80);
    *(unsigned char *)(v14 + 88) = *(unsigned char *)(v15 + 88);
    *(void *)(v14 + 96) = *(void *)(v15 + 96);
    uint64_t v19 = (int *)type metadata accessor for GroupLayoutBindingContext();
    uint64_t v20 = v19[13];
    uint64_t v48 = v15 + v20;
    uint64_t v49 = v14 + v20;
    uint64_t v21 = sub_1C151787C();
    uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(v49, v48, v21);
    *(void *)(v14 + v19[14]) = *(void *)(v15 + v19[14]);
    *(void *)(v14 + v19[15]) = *(void *)(v15 + v19[15]);
    *(unsigned char *)(v14 + v19[16]) = *(unsigned char *)(v15 + v19[16]);
    *(void *)(v14 + v19[17]) = *(void *)(v15 + v19[17]);
    *(void *)(v14 + v19[18]) = *(void *)(v15 + v19[18]);
    *(void *)(v14 + v19[19]) = *(void *)(v15 + v19[19]);
    uint64_t v22 = *(int *)(a3 + 28);
    uint64_t v23 = v50 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = sub_1C151772C();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    uint64_t v27 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v28 = v27[5];
    uint64_t v29 = v23 + v28;
    uint64_t v30 = v24 + v28;
    uint64_t v31 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = v27[6];
    uint64_t v33 = v23 + v32;
    uint64_t v34 = v24 + v32;
    *(_OWORD *)uint64_t v33 = *(_OWORD *)(v24 + v32);
    *(unsigned char *)(v33 + 16) = *(unsigned char *)(v24 + v32 + 16);
    *(_WORD *)(v33 + 17) = *(_WORD *)(v24 + v32 + 17);
    *(unsigned char *)(v33 + 19) = *(unsigned char *)(v24 + v32 + 19);
    *(_DWORD *)(v33 + 20) = *(_DWORD *)(v24 + v32 + 20);
    unint64_t v35 = *(void *)(v24 + v32 + 24);
    if (v35 >= 2) {
      unint64_t v35 = swift_bridgeObjectRetain();
    }
    *(void *)(v33 + 24) = v35;
    uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v37 = *(int *)(v36 + 36);
    uint64_t v38 = (void *)(v33 + v37);
    uint64_t v39 = (const void *)(v34 + v37);
    uint64_t v40 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      sub_1C01BB2C0();
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v45 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v38, v39, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    *(void *)(v33 + *(int *)(v36 + 40)) = *(void *)(v34 + *(int *)(v36 + 40));
    *(void *)(v23 + v27[7]) = *(void *)(v24 + v27[7]);
    *(void *)(v23 + v27[8]) = *(void *)(v24 + v27[8]);
    *(unsigned char *)(v23 + v27[9]) = *(unsigned char *)(v24 + v27[9]);
    *(void *)(v23 + v27[10]) = *(void *)(v24 + v27[10]);
    *(unsigned char *)(v23 + v27[11]) = *(unsigned char *)(v24 + v27[11]);
    *(void *)(v23 + v27[12]) = *(void *)(v24 + v27[12]);
    swift_retain();
    uint64_t v44 = v50;
  }
  swift_retain();
  return v44;
}

uint64_t sub_1C0F97F40(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(v4 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v6 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v7 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v7 + *(int *)(v9 + 24);
  if (*(void *)(v12 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v12 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1C0F98178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  long long v14 = *(_OWORD *)(a2 + v11 + 32);
  *(_OWORD *)(v12 + 32) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + v11 + 8, a2 + v11 + 8);
  uint64_t v15 = *(void *)(v13 + 56);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = v15;
  uint64_t v16 = *(void *)(v13 + 72);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  *(void *)(v12 + 72) = v16;
  *(void *)(v12 + 80) = *(void *)(v13 + 80);
  *(unsigned char *)(v12 + 88) = *(unsigned char *)(v13 + 88);
  *(void *)(v12 + 96) = *(void *)(v13 + 96);
  uint64_t v17 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v18 = v17[13];
  uint64_t v44 = v13 + v18;
  uint64_t v45 = v12 + v18;
  uint64_t v19 = sub_1C151787C();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43(v45, v44, v19);
  *(void *)(v12 + v17[14]) = *(void *)(v13 + v17[14]);
  *(void *)(v12 + v17[15]) = *(void *)(v13 + v17[15]);
  *(unsigned char *)(v12 + v17[16]) = *(unsigned char *)(v13 + v17[16]);
  *(void *)(v12 + v17[17]) = *(void *)(v13 + v17[17]);
  *(void *)(v12 + v17[18]) = *(void *)(v13 + v17[18]);
  *(void *)(v12 + v17[19]) = *(void *)(v13 + v17[19]);
  uint64_t v20 = *(int *)(a3 + 28);
  uint64_t v47 = a1;
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1C151772C();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  uint64_t v25 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v26 = v25[5];
  uint64_t v27 = v21 + v26;
  uint64_t v28 = v22 + v26;
  uint64_t v29 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = v25[6];
  uint64_t v31 = v21 + v30;
  uint64_t v32 = v22 + v30;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)(v22 + v30);
  *(unsigned char *)(v31 + 16) = *(unsigned char *)(v22 + v30 + 16);
  *(_WORD *)(v31 + 17) = *(_WORD *)(v22 + v30 + 17);
  *(unsigned char *)(v31 + 19) = *(unsigned char *)(v22 + v30 + 19);
  *(_DWORD *)(v31 + 20) = *(_DWORD *)(v22 + v30 + 20);
  unint64_t v33 = *(void *)(v22 + v30 + 24);
  if (v33 >= 2) {
    unint64_t v33 = swift_bridgeObjectRetain();
  }
  *(void *)(v31 + 24) = v33;
  uint64_t v34 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v35 = *(int *)(v34 + 36);
  uint64_t v36 = (void *)(v31 + v35);
  uint64_t v37 = (const void *)(v32 + v35);
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_1C01BB2C0();
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v41 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 16))(v36, v37, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  *(void *)(v31 + *(int *)(v34 + 40)) = *(void *)(v32 + *(int *)(v34 + 40));
  *(void *)(v21 + v25[7]) = *(void *)(v22 + v25[7]);
  *(void *)(v21 + v25[8]) = *(void *)(v22 + v25[8]);
  *(unsigned char *)(v21 + v25[9]) = *(unsigned char *)(v22 + v25[9]);
  *(void *)(v21 + v25[10]) = *(void *)(v22 + v25[10]);
  *(unsigned char *)(v21 + v25[11]) = *(unsigned char *)(v22 + v25[11]);
  *(void *)(v21 + v25[12]) = *(void *)(v22 + v25[12]);
  swift_retain();
  swift_retain();
  return v47;
}

void *sub_1C0F985E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + v6 + 8), (void *)((char *)a2 + v6 + 8));
  *((void *)v7 + 6) = *((void *)v8 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 7) = *((void *)v8 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 8) = *((void *)v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 9) = *((void *)v8 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 10) = *((void *)v8 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[88] = v8[88];
  *((void *)v7 + 12) = *((void *)v8 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v10 = v9[13];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C151787C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)&v7[v9[14]] = *(void *)&v8[v9[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[15]] = *(void *)&v8[v9[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[16]] = v8[v9[16]];
  *(void *)&v7[v9[17]] = *(void *)&v8[v9[17]];
  *(void *)&v7[v9[18]] = *(void *)&v8[v9[18]];
  *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v46 = a1;
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = type metadata accessor for GroupLayoutContext();
  uint64_t v19 = *(int *)(v18 + 20);
  uint64_t v20 = &v15[v19];
  uint64_t v21 = &v16[v19];
  uint64_t v22 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v43 = (int *)v18;
  uint64_t v23 = *(int *)(v18 + 24);
  uint64_t v24 = &v15[v23];
  uint64_t v25 = &v16[v23];
  long long v26 = *(_OWORD *)&v16[v23];
  v24[16] = v16[v23 + 16];
  *(_OWORD *)uint64_t v24 = v26;
  v24[17] = v16[v23 + 17];
  v24[18] = v16[v23 + 18];
  v24[19] = v16[v23 + 19];
  v24[20] = v16[v23 + 20];
  v24[21] = v16[v23 + 21];
  v24[22] = v16[v23 + 22];
  v24[23] = v16[v23 + 23];
  uint64_t v27 = (unint64_t *)&v15[v23 + 24];
  unint64_t v28 = *(void *)&v16[v23 + 24];
  if (*v27 >= 2)
  {
    if (v28 >= 2)
    {
      *uint64_t v27 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0656968((uint64_t)(v24 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v27 = *((void *)v25 + 3);
    }
  }
  else
  {
    *uint64_t v27 = v28;
    if (v28 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v45 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v29 = *(int *)(v45 + 36);
  uint64_t v30 = (uint64_t)&v24[v29];
  uint64_t v31 = &v25[v29];
  uint64_t v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  uint64_t v44 = v30;
  LODWORD(v30) = v34(v30, 1, v32);
  int v35 = v34((uint64_t)v31, 1, v32);
  if (v30)
  {
    if (!v35)
    {
      uint64_t v40 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v44, v31, v40);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v44, 0, 1, v32);
      goto LABEL_16;
    }
    sub_1C01BB2C0();
    size_t v37 = *(void *)(*(void *)(v36 - 8) + 64);
    uint64_t v38 = (void *)v44;
  }
  else
  {
    if (!v35)
    {
      uint64_t v41 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v44, v31, v41);
      goto LABEL_16;
    }
    sub_1C0656968(v44, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v37 = *(void *)(*(void *)(v39 - 8) + 64);
    uint64_t v38 = (void *)v44;
  }
  memcpy(v38, v31, v37);
LABEL_16:
  *(void *)&v24[*(int *)(v45 + 40)] = *(void *)&v25[*(int *)(v45 + 40)];
  *(void *)&v15[v43[7]] = *(void *)&v16[v43[7]];
  *(void *)&v15[v43[8]] = *(void *)&v16[v43[8]];
  v15[v43[9]] = v16[v43[9]];
  *(void *)&v15[v43[10]] = *(void *)&v16[v43[10]];
  swift_retain();
  swift_release();
  v15[v43[11]] = v16[v43[11]];
  *(void *)&v15[v43[12]] = *(void *)&v16[v43[12]];
  swift_retain();
  swift_release();
  return v46;
}

uint64_t sub_1C0F98B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(void *)(v8 + 40) = *(void *)(a2 + v7 + 40);
  long long v10 = *(_OWORD *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 64) = v10;
  *(void *)(v8 + 80) = *(void *)(a2 + v7 + 80);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(a2 + v7 + 88);
  *(void *)(v8 + 96) = *(void *)(a2 + v7 + 96);
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v12 = v11[13];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)(v8 + v11[14]) = *(void *)(v9 + v11[14]);
  *(void *)(v8 + v11[15]) = *(void *)(v9 + v11[15]);
  *(unsigned char *)(v8 + v11[16]) = *(unsigned char *)(v9 + v11[16]);
  *(void *)(v8 + v11[17]) = *(void *)(v9 + v11[17]);
  *(void *)(v8 + v11[18]) = *(void *)(v9 + v11[18]);
  *(void *)(v8 + v11[19]) = *(void *)(v9 + v11[19]);
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v21 = v20[5];
  uint64_t v22 = v17 + v21;
  uint64_t v23 = v18 + v21;
  uint64_t v24 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = v20[6];
  uint64_t v26 = v17 + v25;
  uint64_t v27 = v18 + v25;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)(v18 + v25);
  *(unsigned char *)(v26 + 16) = *(unsigned char *)(v18 + v25 + 16);
  *(_WORD *)(v26 + 17) = *(_WORD *)(v18 + v25 + 17);
  *(unsigned char *)(v26 + 19) = *(unsigned char *)(v18 + v25 + 19);
  *(_DWORD *)(v26 + 20) = *(_DWORD *)(v18 + v25 + 20);
  *(void *)(v26 + 24) = *(void *)(v18 + v25 + 24);
  uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v29 = *(int *)(v28 + 36);
  __dst = (void *)(v26 + v29);
  uint64_t v30 = (const void *)(v27 + v29);
  uint64_t v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    sub_1C01BB2C0();
    memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(__dst, v30, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  *(void *)(v26 + *(int *)(v28 + 40)) = *(void *)(v27 + *(int *)(v28 + 40));
  *(void *)(v17 + v20[7]) = *(void *)(v18 + v20[7]);
  *(void *)(v17 + v20[8]) = *(void *)(v18 + v20[8]);
  *(unsigned char *)(v17 + v20[9]) = *(unsigned char *)(v18 + v20[9]);
  *(void *)(v17 + v20[10]) = *(void *)(v18 + v20[10]);
  *(unsigned char *)(v17 + v20[11]) = *(unsigned char *)(v18 + v20[11]);
  *(void *)(v17 + v20[12]) = *(void *)(v18 + v20[12]);
  return a1;
}

uint64_t sub_1C0F98EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  __swift_destroy_boxed_opaque_existential_1(a1 + v8 + 8);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  uint64_t v11 = *(void *)(v10 + 48);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(v9 + 48) = v11;
  swift_bridgeObjectRelease();
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 64) = *(void *)(v10 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 72) = *(void *)(v10 + 72);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 80) = *(void *)(v10 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 88) = *(unsigned char *)(v10 + 88);
  *(void *)(v9 + 96) = *(void *)(v10 + 96);
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v13 = v12[13];
  uint64_t v14 = v9 + v13;
  uint64_t v15 = v10 + v13;
  uint64_t v16 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)(v9 + v12[14]) = *(void *)(v10 + v12[14]);
  swift_bridgeObjectRelease();
  *(void *)(v9 + v12[15]) = *(void *)(v10 + v12[15]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v12[16]) = *(unsigned char *)(v10 + v12[16]);
  *(void *)(v9 + v12[17]) = *(void *)(v10 + v12[17]);
  *(void *)(v9 + v12[18]) = *(void *)(v10 + v12[18]);
  *(void *)(v9 + v12[19]) = *(void *)(v10 + v12[19]);
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v48 = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = type metadata accessor for GroupLayoutContext();
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = v18 + v22;
  uint64_t v24 = v19 + v22;
  uint64_t v25 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v45 = (int *)v21;
  uint64_t v26 = *(int *)(v21 + 24);
  uint64_t v27 = v18 + v26;
  uint64_t v28 = v19 + v26;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)(v19 + v26);
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v19 + v26 + 16);
  *(unsigned char *)(v27 + 17) = *(unsigned char *)(v19 + v26 + 17);
  *(unsigned char *)(v27 + 18) = *(unsigned char *)(v19 + v26 + 18);
  *(unsigned char *)(v27 + 19) = *(unsigned char *)(v19 + v26 + 19);
  *(unsigned char *)(v27 + 20) = *(unsigned char *)(v19 + v26 + 20);
  *(unsigned char *)(v27 + 21) = *(unsigned char *)(v19 + v26 + 21);
  *(unsigned char *)(v27 + 22) = *(unsigned char *)(v19 + v26 + 22);
  *(unsigned char *)(v27 + 23) = *(unsigned char *)(v19 + v26 + 23);
  uint64_t v29 = (unint64_t *)(v18 + v26 + 24);
  unint64_t v30 = *(void *)(v19 + v26 + 24);
  if (*v29 < 2) {
    goto LABEL_4;
  }
  if (v30 < 2)
  {
    sub_1C0656968((uint64_t)v29, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v30 = *(void *)(v28 + 24);
LABEL_4:
    *uint64_t v29 = v30;
    goto LABEL_6;
  }
  *uint64_t v29 = v30;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v47 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v31 = *(int *)(v47 + 36);
  uint64_t v32 = v27 + v31;
  uint64_t v33 = (const void *)(v28 + v31);
  uint64_t v34 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  uint64_t v46 = v32;
  LODWORD(v32) = v36(v32, 1, v34);
  int v37 = v36((uint64_t)v33, 1, v34);
  if (v32)
  {
    if (!v37)
    {
      uint64_t v42 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v42 - 8) + 32))(v46, v33, v42);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v46, 0, 1, v34);
      goto LABEL_14;
    }
    sub_1C01BB2C0();
    size_t v39 = *(void *)(*(void *)(v38 - 8) + 64);
    uint64_t v40 = (void *)v46;
  }
  else
  {
    if (!v37)
    {
      uint64_t v43 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v43 - 8) + 40))(v46, v33, v43);
      goto LABEL_14;
    }
    sub_1C0656968(v46, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v39 = *(void *)(*(void *)(v41 - 8) + 64);
    uint64_t v40 = (void *)v46;
  }
  memcpy(v40, v33, v39);
LABEL_14:
  *(void *)(v27 + *(int *)(v47 + 40)) = *(void *)(v28 + *(int *)(v47 + 40));
  *(void *)(v18 + v45[7]) = *(void *)(v19 + v45[7]);
  *(void *)(v18 + v45[8]) = *(void *)(v19 + v45[8]);
  *(unsigned char *)(v18 + v45[9]) = *(unsigned char *)(v19 + v45[9]);
  *(void *)(v18 + v45[10]) = *(void *)(v19 + v45[10]);
  swift_release();
  *(unsigned char *)(v18 + v45[11]) = *(unsigned char *)(v19 + v45[11]);
  *(void *)(v18 + v45[12]) = *(void *)(v19 + v45[12]);
  swift_release();
  return v48;
}

uint64_t sub_1C0F99408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F9941C);
}

uint64_t sub_1C0F9941C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for GroupLayoutContext();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C0F99548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F9955C);
}

uint64_t sub_1C0F9955C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for GroupLayoutContext();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for DebugGroupLayoutKey()
{
  uint64_t result = qword_1EB870C40;
  if (!qword_1EB870C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0F996D4()
{
  uint64_t result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GroupLayoutContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0F997B0(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for WebEmbedDataVisualization() - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      uint64_t v8 = type metadata accessor for GenericDataVisualization();
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1C1515FDC();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0F99910(uint64_t a1)
{
  type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
    uint64_t v3 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

void *sub_1C0F999E8(void *a1, uint64_t *a2)
{
  type metadata accessor for WebEmbedDataVisualization();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = type metadata accessor for GenericDataVisualization();
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(void *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = v5;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C0F99AF0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1BFECFF70((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    type metadata accessor for WebEmbedDataVisualization();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      uint64_t v5 = type metadata accessor for GenericDataVisualization();
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1C1515FDC();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1C0F99C20(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v5 = type metadata accessor for GenericDataVisualization();
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1C0F99D14(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1BFECFF70((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for GenericDataVisualization();
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0F99E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F99E40);
}

uint64_t sub_1C0F99E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C0F99EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F99EC0);
}

uint64_t sub_1C0F99EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WebEmbedDatastoreCacheKey()
{
  uint64_t result = qword_1EB8926A8;
  if (!qword_1EB8926A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0F99F7C()
{
  uint64_t result = type metadata accessor for WebEmbedDataVisualization();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0F9A008(uint64_t a1)
{
  uint64_t v306 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v3 = *(void *)(v306 - 8);
  MEMORY[0x1F4188790](v306);
  uint64_t v305 = (void *)((char *)v275 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  WebEmbedDataVisualization.identifier.getter();
  uint64_t v311 = a1;
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v304 = sub_1C1013F9C();
  uint64_t v307 = v1;
  uint64_t v5 = sub_1C10137B8();
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v265 = MEMORY[0x1E4FBC860];
    goto LABEL_226;
  }
  unint64_t v326 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = v5 + v326;
  uint64_t v8 = *(void *)(v3 + 72);
  v275[8] = v5;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v319 = MEMORY[0x1E4FBC860];
  unint64_t v287 = v7;
  uint64_t v331 = v8;
  uint64_t v286 = v6;
  while (1)
  {
    uint64_t v302 = v9;
    uint64_t v303 = sub_1C1013F9C();
    uint64_t v10 = sub_1C10137B8();
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v264 = MEMORY[0x1E4FBC860];
LABEL_208:
    uint64_t v333 = v264;
    uint64_t v244 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v245 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v244);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v246 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v303;
    sub_1C10475C4(v246);
    uint64_t v247 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v248 = *(void *)(v247 + 16);
    int64_t v249 = *(void *)(v319 + 16);
    int64_t v250 = v249 + v248;
    if (__OFADD__(v249, v248)) {
      goto LABEL_248;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v252 = v319;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v250 > *(void *)(v319 + 24) >> 1)
    {
      if (v249 <= v250) {
        int64_t v253 = v249 + v248;
      }
      else {
        int64_t v253 = v249;
      }
      uint64_t v252 = sub_1BFEC5408(isUniquelyReferenced_nonNull_native, v253, 1, v319);
    }
    uint64_t v254 = *(void *)(v247 + 16);
    uint64_t v319 = v252;
    if (v254)
    {
      uint64_t v255 = *(void *)(v252 + 16);
      uint64_t v257 = *(void *)(*(void *)(v245 - 8) + 72);
      if ((*(void *)(v252 + 24) >> 1) - v255 < v248) {
        goto LABEL_263;
      }
      uint64_t v256 = *(unsigned __int8 *)(*(void *)(v245 - 8) + 80);
      uint64_t v258 = (v256 + 32) & ~v256;
      unint64_t v259 = v252 + v258 + v257 * v255;
      uint64_t v260 = v257 * v248;
      if (v247 + v258 < v259 + v260 && v259 < v247 + v258 + v260) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v248)
      {
        uint64_t v261 = *(void *)(v319 + 16);
        BOOL v64 = __OFADD__(v261, v248);
        uint64_t v262 = v261 + v248;
        if (v64) {
          goto LABEL_271;
        }
        *(void *)(v319 + 16) = v262;
      }
    }
    else if (v248)
    {
      goto LABEL_250;
    }
    uint64_t v263 = v302 + 1;
    swift_bridgeObjectRelease();
    uint64_t v9 = v263;
    if (v263 == v286) {
      goto LABEL_236;
    }
  }
  unint64_t v12 = v10 + v326;
  v275[7] = v10;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  uint64_t v318 = MEMORY[0x1E4FBC860];
  uint64_t v285 = v11;
  unint64_t v284 = v12;
  while (1)
  {
    uint64_t v300 = v13;
    uint64_t v301 = sub_1C1013F9C();
    uint64_t v14 = sub_1C10137B8();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v243 = MEMORY[0x1E4FBC860];
LABEL_190:
    uint64_t v333 = v243;
    uint64_t v223 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v224 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v223);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v225 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v301;
    sub_1C10475C4(v225);
    uint64_t v226 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v227 = *(void *)(v226 + 16);
    int64_t v228 = *(void *)(v318 + 16);
    int64_t v229 = v228 + v227;
    if (__OFADD__(v228, v227)) {
      goto LABEL_251;
    }
    char v230 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v231 = v318;
    if ((v230 & 1) == 0 || v229 > *(void *)(v318 + 24) >> 1)
    {
      if (v228 <= v229) {
        int64_t v232 = v228 + v227;
      }
      else {
        int64_t v232 = v228;
      }
      uint64_t v231 = sub_1BFEC5408(v230, v232, 1, v318);
    }
    uint64_t v233 = *(void *)(v226 + 16);
    uint64_t v318 = v231;
    if (v233)
    {
      uint64_t v234 = *(void *)(v231 + 16);
      uint64_t v236 = *(void *)(*(void *)(v224 - 8) + 72);
      if ((*(void *)(v231 + 24) >> 1) - v234 < v227) {
        goto LABEL_264;
      }
      uint64_t v235 = *(unsigned __int8 *)(*(void *)(v224 - 8) + 80);
      uint64_t v237 = (v235 + 32) & ~v235;
      unint64_t v238 = v231 + v237 + v236 * v234;
      uint64_t v239 = v236 * v227;
      if (v226 + v237 < v238 + v239 && v238 < v226 + v237 + v239) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v227)
      {
        uint64_t v240 = *(void *)(v318 + 16);
        BOOL v64 = __OFADD__(v240, v227);
        uint64_t v241 = v240 + v227;
        if (v64) {
          goto LABEL_272;
        }
        *(void *)(v318 + 16) = v241;
      }
    }
    else if (v227)
    {
      goto LABEL_252;
    }
    uint64_t v242 = v300 + 1;
    swift_bridgeObjectRelease();
    uint64_t v13 = v242;
    if (v242 == v285)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v264 = v318;
      goto LABEL_208;
    }
  }
  unint64_t v16 = v14 + v326;
  v275[6] = v14;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  uint64_t v316 = MEMORY[0x1E4FBC860];
  uint64_t v283 = v15;
  unint64_t v282 = v16;
  while (1)
  {
    uint64_t v297 = v17;
    uint64_t v299 = sub_1C1013F9C();
    uint64_t v18 = sub_1C10137B8();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v222 = MEMORY[0x1E4FBC860];
LABEL_172:
    uint64_t v333 = v222;
    uint64_t v202 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v203 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v202);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v204 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v299;
    sub_1C10475C4(v204);
    uint64_t v205 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v206 = *(void *)(v205 + 16);
    int64_t v207 = *(void *)(v316 + 16);
    int64_t v208 = v207 + v206;
    if (__OFADD__(v207, v206)) {
      goto LABEL_253;
    }
    char v209 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v210 = v316;
    if ((v209 & 1) == 0 || v208 > *(void *)(v316 + 24) >> 1)
    {
      if (v207 <= v208) {
        int64_t v211 = v207 + v206;
      }
      else {
        int64_t v211 = v207;
      }
      uint64_t v210 = sub_1BFEC5408(v209, v211, 1, v316);
    }
    uint64_t v212 = *(void *)(v205 + 16);
    uint64_t v316 = v210;
    if (v212)
    {
      uint64_t v213 = *(void *)(v210 + 16);
      uint64_t v215 = *(void *)(*(void *)(v203 - 8) + 72);
      if ((*(void *)(v210 + 24) >> 1) - v213 < v206) {
        goto LABEL_265;
      }
      uint64_t v214 = *(unsigned __int8 *)(*(void *)(v203 - 8) + 80);
      uint64_t v216 = (v214 + 32) & ~v214;
      unint64_t v217 = v210 + v216 + v215 * v213;
      uint64_t v218 = v215 * v206;
      if (v205 + v216 < v217 + v218 && v217 < v205 + v216 + v218) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v206)
      {
        uint64_t v219 = *(void *)(v316 + 16);
        BOOL v64 = __OFADD__(v219, v206);
        uint64_t v220 = v219 + v206;
        if (v64) {
          goto LABEL_273;
        }
        *(void *)(v316 + 16) = v220;
      }
    }
    else if (v206)
    {
      goto LABEL_254;
    }
    uint64_t v221 = v297 + 1;
    swift_bridgeObjectRelease();
    uint64_t v17 = v221;
    if (v221 == v283)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v243 = v316;
      goto LABEL_190;
    }
  }
  unint64_t v20 = v18 + v326;
  v275[4] = v18;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v315 = MEMORY[0x1E4FBC860];
  uint64_t v281 = v19;
  unint64_t v280 = v20;
  while (1)
  {
    uint64_t v294 = v21;
    uint64_t v295 = sub_1C1013F9C();
    uint64_t v22 = sub_1C10137B8();
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v201 = MEMORY[0x1E4FBC860];
LABEL_154:
    uint64_t v333 = v201;
    long long v181 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v182 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v181);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v183 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v295;
    sub_1C10475C4(v183);
    uint64_t v184 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v185 = *(void *)(v184 + 16);
    int64_t v186 = *(void *)(v315 + 16);
    int64_t v187 = v186 + v185;
    if (__OFADD__(v186, v185)) {
      goto LABEL_255;
    }
    char v188 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v189 = v315;
    if ((v188 & 1) == 0 || v187 > *(void *)(v315 + 24) >> 1)
    {
      if (v186 <= v187) {
        int64_t v190 = v186 + v185;
      }
      else {
        int64_t v190 = v186;
      }
      uint64_t v189 = sub_1BFEC5408(v188, v190, 1, v315);
    }
    uint64_t v191 = *(void *)(v184 + 16);
    uint64_t v315 = v189;
    if (v191)
    {
      uint64_t v192 = *(void *)(v189 + 16);
      uint64_t v194 = *(void *)(*(void *)(v182 - 8) + 72);
      if ((*(void *)(v189 + 24) >> 1) - v192 < v185) {
        goto LABEL_266;
      }
      uint64_t v193 = *(unsigned __int8 *)(*(void *)(v182 - 8) + 80);
      uint64_t v195 = (v193 + 32) & ~v193;
      unint64_t v196 = v189 + v195 + v194 * v192;
      uint64_t v197 = v194 * v185;
      if (v184 + v195 < v196 + v197 && v196 < v184 + v195 + v197) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v185)
      {
        uint64_t v198 = *(void *)(v315 + 16);
        BOOL v64 = __OFADD__(v198, v185);
        uint64_t v199 = v198 + v185;
        if (v64) {
          goto LABEL_274;
        }
        *(void *)(v315 + 16) = v199;
      }
    }
    else if (v185)
    {
      goto LABEL_256;
    }
    uint64_t v200 = v294 + 1;
    swift_bridgeObjectRelease();
    uint64_t v21 = v200;
    if (v200 == v281)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v222 = v315;
      goto LABEL_172;
    }
  }
  unint64_t v24 = v22 + v326;
  v275[3] = v22;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  uint64_t v314 = MEMORY[0x1E4FBC860];
  uint64_t v278 = v23;
  unint64_t v277 = v24;
  while (1)
  {
    uint64_t v291 = v25;
    uint64_t v292 = sub_1C1013F9C();
    uint64_t v26 = sub_1C10137B8();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v180 = MEMORY[0x1E4FBC860];
LABEL_136:
    uint64_t v333 = v180;
    long long v160 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v161 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v160);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v162 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v292;
    sub_1C10475C4(v162);
    uint64_t v163 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v164 = *(void *)(v163 + 16);
    int64_t v165 = *(void *)(v314 + 16);
    int64_t v166 = v165 + v164;
    if (__OFADD__(v165, v164)) {
      goto LABEL_257;
    }
    char v167 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v168 = v314;
    if ((v167 & 1) == 0 || v166 > *(void *)(v314 + 24) >> 1)
    {
      if (v165 <= v166) {
        int64_t v169 = v165 + v164;
      }
      else {
        int64_t v169 = v165;
      }
      uint64_t v168 = sub_1BFEC5408(v167, v169, 1, v314);
    }
    uint64_t v170 = *(void *)(v163 + 16);
    uint64_t v314 = v168;
    if (v170)
    {
      uint64_t v171 = *(void *)(v168 + 16);
      uint64_t v173 = *(void *)(*(void *)(v161 - 8) + 72);
      if ((*(void *)(v168 + 24) >> 1) - v171 < v164) {
        goto LABEL_267;
      }
      uint64_t v172 = *(unsigned __int8 *)(*(void *)(v161 - 8) + 80);
      uint64_t v174 = (v172 + 32) & ~v172;
      unint64_t v175 = v168 + v174 + v173 * v171;
      uint64_t v176 = v173 * v164;
      if (v163 + v174 < v175 + v176 && v175 < v163 + v174 + v176) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v164)
      {
        uint64_t v177 = *(void *)(v314 + 16);
        BOOL v64 = __OFADD__(v177, v164);
        uint64_t v178 = v177 + v164;
        if (v64) {
          goto LABEL_275;
        }
        *(void *)(v314 + 16) = v178;
      }
    }
    else if (v164)
    {
      goto LABEL_259;
    }
    uint64_t v179 = v291 + 1;
    swift_bridgeObjectRelease();
    uint64_t v25 = v179;
    if (v179 == v278)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v201 = v314;
      goto LABEL_154;
    }
  }
  unint64_t v28 = v26 + v326;
  v275[2] = v26;
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  uint64_t v313 = MEMORY[0x1E4FBC860];
  uint64_t v276 = v27;
  v275[10] = v28;
  while (1)
  {
    uint64_t v289 = v29;
    uint64_t v290 = sub_1C1013F9C();
    uint64_t v30 = sub_1C10137B8();
    uint64_t v293 = *(void *)(v30 + 16);
    if (v293) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v159 = MEMORY[0x1E4FBC860];
LABEL_118:
    uint64_t v333 = v159;
    uint64_t v139 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v140 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v139);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v141 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v290;
    sub_1C10475C4(v141);
    uint64_t v142 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v143 = *(void *)(v142 + 16);
    int64_t v144 = *(void *)(v313 + 16);
    int64_t v145 = v144 + v143;
    if (__OFADD__(v144, v143)) {
      goto LABEL_258;
    }
    char v146 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v147 = v313;
    if ((v146 & 1) == 0 || v145 > *(void *)(v313 + 24) >> 1)
    {
      if (v144 <= v145) {
        int64_t v148 = v144 + v143;
      }
      else {
        int64_t v148 = v144;
      }
      uint64_t v147 = sub_1BFEC5408(v146, v148, 1, v313);
    }
    uint64_t v149 = *(void *)(v142 + 16);
    uint64_t v313 = v147;
    if (v149)
    {
      uint64_t v150 = *(void *)(v147 + 16);
      uint64_t v152 = *(void *)(*(void *)(v140 - 8) + 72);
      if ((*(void *)(v147 + 24) >> 1) - v150 < v143) {
        goto LABEL_268;
      }
      uint64_t v151 = *(unsigned __int8 *)(*(void *)(v140 - 8) + 80);
      uint64_t v153 = (v151 + 32) & ~v151;
      unint64_t v154 = v147 + v153 + v152 * v150;
      uint64_t v155 = v152 * v143;
      if (v142 + v153 < v154 + v155 && v154 < v142 + v153 + v155) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v143)
      {
        uint64_t v156 = *(void *)(v313 + 16);
        BOOL v64 = __OFADD__(v156, v143);
        uint64_t v157 = v156 + v143;
        if (v64) {
          goto LABEL_276;
        }
        *(void *)(v313 + 16) = v157;
      }
    }
    else if (v143)
    {
      goto LABEL_260;
    }
    uint64_t v158 = v289 + 1;
    swift_bridgeObjectRelease();
    uint64_t v29 = v158;
    if (v158 == v276)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v180 = v313;
      goto LABEL_136;
    }
  }
  unint64_t v31 = v30 + v326;
  v275[1] = v30;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v317 = MEMORY[0x1E4FBC860];
  unint64_t v279 = v31;
  while (1)
  {
    uint64_t v296 = v32;
    uint64_t v298 = sub_1C1013F9C();
    uint64_t v33 = sub_1C10137B8();
    uint64_t v308 = *(void *)(v33 + 16);
    if (v308) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v138 = MEMORY[0x1E4FBC860];
LABEL_100:
    uint64_t v333 = v138;
    long long v119 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v120 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v119);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v121 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v298;
    sub_1C10475C4(v121);
    uint64_t v122 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v123 = *(void *)(v122 + 16);
    int64_t v124 = *(void *)(v317 + 16);
    int64_t v125 = v124 + v123;
    if (__OFADD__(v124, v123)) {
      goto LABEL_247;
    }
    char v126 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v317;
    if ((v126 & 1) == 0 || v125 > *(void *)(v317 + 24) >> 1)
    {
      if (v124 <= v125) {
        int64_t v128 = v124 + v123;
      }
      else {
        int64_t v128 = v124;
      }
      uint64_t v127 = sub_1BFEC5408(v126, v128, 1, v317);
    }
    uint64_t v129 = *(void *)(v122 + 16);
    uint64_t v317 = v127;
    if (v129)
    {
      uint64_t v130 = *(void *)(v127 + 16);
      uint64_t v132 = *(void *)(*(void *)(v120 - 8) + 72);
      if ((*(void *)(v127 + 24) >> 1) - v130 < v123) {
        goto LABEL_262;
      }
      uint64_t v131 = *(unsigned __int8 *)(*(void *)(v120 - 8) + 80);
      uint64_t v133 = (v131 + 32) & ~v131;
      unint64_t v134 = v127 + v133 + v132 * v130;
      uint64_t v135 = v132 * v123;
      if (v122 + v133 < v134 + v135 && v134 < v122 + v133 + v135) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v123)
      {
        uint64_t v136 = *(void *)(v317 + 16);
        BOOL v64 = __OFADD__(v136, v123);
        uint64_t v137 = v136 + v123;
        if (v64) {
          goto LABEL_270;
        }
        *(void *)(v317 + 16) = v137;
      }
    }
    else if (v123)
    {
      goto LABEL_249;
    }
    uint64_t v32 = v296 + 1;
    swift_bridgeObjectRelease();
    if (v32 == v293)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v159 = v317;
      goto LABEL_118;
    }
  }
  unint64_t v34 = v33 + v326;
  v275[5] = v33;
  swift_bridgeObjectRetain();
  uint64_t v35 = 0;
  uint64_t v320 = MEMORY[0x1E4FBC860];
  unint64_t v288 = v34;
  while (1)
  {
    uint64_t v309 = v35;
    uint64_t v310 = sub_1C1013F9C();
    uint64_t v36 = sub_1C10137B8();
    uint64_t v321 = *(void *)(v36 + 16);
    if (v321) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_81:
    uint64_t v333 = v38;
    uint64_t v100 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v101 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v100);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v102 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v310;
    sub_1C10475C4(v102);
    uint64_t v103 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v104 = *(void *)(v103 + 16);
    int64_t v105 = *(void *)(v320 + 16);
    int64_t v106 = v105 + v104;
    if (__OFADD__(v105, v104)) {
      goto LABEL_245;
    }
    char v107 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v108 = v320;
    if ((v107 & 1) == 0 || v106 > *(void *)(v320 + 24) >> 1)
    {
      if (v105 <= v106) {
        int64_t v109 = v105 + v104;
      }
      else {
        int64_t v109 = v105;
      }
      uint64_t v108 = sub_1BFEC5408(v107, v109, 1, v320);
    }
    uint64_t v110 = *(void *)(v103 + 16);
    uint64_t v320 = v108;
    if (v110)
    {
      uint64_t v111 = *(void *)(v108 + 16);
      uint64_t v113 = *(void *)(*(void *)(v101 - 8) + 72);
      if ((*(void *)(v108 + 24) >> 1) - v111 < v104) {
        goto LABEL_261;
      }
      uint64_t v112 = *(unsigned __int8 *)(*(void *)(v101 - 8) + 80);
      uint64_t v114 = (v112 + 32) & ~v112;
      unint64_t v115 = v108 + v114 + v113 * v111;
      uint64_t v116 = v113 * v104;
      if (v103 + v114 < v115 + v116 && v115 < v103 + v114 + v116) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v104)
      {
        uint64_t v117 = *(void *)(v320 + 16);
        BOOL v64 = __OFADD__(v117, v104);
        uint64_t v118 = v117 + v104;
        if (v64) {
          goto LABEL_269;
        }
        *(void *)(v320 + 16) = v118;
      }
    }
    else if (v104)
    {
      goto LABEL_246;
    }
    uint64_t v35 = v309 + 1;
    swift_bridgeObjectRelease();
    if (v35 == v308)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v138 = v320;
      goto LABEL_100;
    }
  }
  unint64_t v322 = v36 + v326;
  v275[9] = v36;
  swift_bridgeObjectRetain();
  uint64_t v37 = 0;
  unint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_21:
  unint64_t v325 = v38;
  uint64_t v323 = v37;
  uint64_t v324 = sub_1C1013F9C();
  uint64_t v39 = sub_1C10137B8();
  uint64_t v328 = *(void *)(v39 + 16);
  if (!v328)
  {
    swift_bridgeObjectRelease();
    unint64_t v41 = MEMORY[0x1E4FBC860];
    goto LABEL_65;
  }
  unint64_t v327 = v39 + v326;
  uint64_t v312 = v39;
  swift_bridgeObjectRetain();
  uint64_t v40 = 0;
  unint64_t v41 = MEMORY[0x1E4FBC860];
  while (1)
  {
    unint64_t v330 = v41;
    uint64_t v329 = sub_1C1013F9C();
    uint64_t v42 = sub_1C10137B8();
    uint64_t v43 = *(void *)(v42 + 16);
    if (v43) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v45 = MEMORY[0x1E4FBC860];
LABEL_49:
    uint64_t v333 = v45;
    uint64_t v66 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
    uint64_t v67 = sub_1C1515FDC();
    sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v66);
    sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
    uint64_t v68 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v333 = v329;
    sub_1C10475C4(v68);
    uint64_t v69 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v70 = *(void *)(v69 + 16);
    unint64_t v41 = v330;
    int64_t v71 = *(void *)(v330 + 16);
    int64_t v72 = v71 + v70;
    if (__OFADD__(v71, v70))
    {
      __break(1u);
LABEL_238:
      __break(1u);
LABEL_239:
      __break(1u);
LABEL_240:
      __break(1u);
LABEL_241:
      __break(1u);
LABEL_242:
      __break(1u);
      goto LABEL_243;
    }
    char v73 = swift_isUniquelyReferenced_nonNull_native();
    if ((v73 & 1) == 0 || v72 > *(void *)(v41 + 24) >> 1)
    {
      if (v71 <= v72) {
        int64_t v74 = v71 + v70;
      }
      else {
        int64_t v74 = v71;
      }
      unint64_t v41 = sub_1BFEC5408(v73, v74, 1, v41);
    }
    if (*(void *)(v69 + 16))
    {
      uint64_t v75 = *(void *)(v41 + 16);
      uint64_t v77 = *(void *)(*(void *)(v67 - 8) + 72);
      if ((*(void *)(v41 + 24) >> 1) - v75 < v70) {
        goto LABEL_239;
      }
      uint64_t v76 = *(unsigned __int8 *)(*(void *)(v67 - 8) + 80);
      uint64_t v78 = (v76 + 32) & ~v76;
      unint64_t v79 = v41 + v78 + v77 * v75;
      uint64_t v80 = v77 * v70;
      if (v69 + v78 < v79 + v80 && v79 < v69 + v78 + v80) {
        goto LABEL_277;
      }
      swift_arrayInitWithCopy();
      if (v70)
      {
        uint64_t v81 = *(void *)(v41 + 16);
        BOOL v64 = __OFADD__(v81, v70);
        uint64_t v82 = v81 + v70;
        if (v64) {
          goto LABEL_240;
        }
        *(void *)(v41 + 16) = v82;
      }
    }
    else if (v70)
    {
      goto LABEL_238;
    }
    ++v40;
    swift_bridgeObjectRelease();
    if (v40 == v328)
    {
      swift_bridgeObjectRelease_n();
LABEL_65:
      uint64_t v333 = v41;
      uint64_t v83 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
      uint64_t v84 = sub_1C1515FDC();
      sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v83);
      sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
      uint64_t v85 = sub_1C151E92C();
      swift_bridgeObjectRelease();
      uint64_t v333 = v324;
      sub_1C10475C4(v85);
      uint64_t v86 = sub_1C151E92C();
      swift_bridgeObjectRelease();
      uint64_t v87 = *(void *)(v86 + 16);
      unint64_t v38 = v325;
      int64_t v88 = *(void *)(v325 + 16);
      int64_t v89 = v88 + v87;
      if (__OFADD__(v88, v87)) {
        goto LABEL_241;
      }
      char v90 = swift_isUniquelyReferenced_nonNull_native();
      if ((v90 & 1) != 0 && v89 <= *(void *)(v38 + 24) >> 1)
      {
        if (!*(void *)(v86 + 16)) {
          goto LABEL_19;
        }
LABEL_74:
        uint64_t v92 = *(void *)(v38 + 16);
        uint64_t v94 = *(void *)(*(void *)(v84 - 8) + 72);
        if ((*(void *)(v38 + 24) >> 1) - v92 >= v87)
        {
          uint64_t v93 = *(unsigned __int8 *)(*(void *)(v84 - 8) + 80);
          uint64_t v95 = (v93 + 32) & ~v93;
          unint64_t v96 = v38 + v95 + v94 * v92;
          uint64_t v97 = v94 * v87;
          if (v86 + v95 >= v96 + v97 || v96 >= v86 + v95 + v97)
          {
            swift_arrayInitWithCopy();
            if (!v87) {
              goto LABEL_20;
            }
            uint64_t v98 = *(void *)(v38 + 16);
            BOOL v64 = __OFADD__(v98, v87);
            uint64_t v99 = v98 + v87;
            if (!v64)
            {
              *(void *)(v38 + 16) = v99;
              goto LABEL_20;
            }
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
          }
LABEL_277:
          uint64_t result = sub_1C152052C();
          __break(1u);
          return result;
        }
LABEL_243:
        __break(1u);
        goto LABEL_244;
      }
      if (v88 <= v89) {
        int64_t v91 = v88 + v87;
      }
      else {
        int64_t v91 = v88;
      }
      unint64_t v38 = sub_1BFEC5408(v90, v91, 1, v38);
      if (*(void *)(v86 + 16)) {
        goto LABEL_74;
      }
LABEL_19:
      if (v87) {
        goto LABEL_242;
      }
LABEL_20:
      uint64_t v37 = v323 + 1;
      swift_bridgeObjectRelease();
      if (v37 == v321)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_81;
      }
      goto LABEL_21;
    }
  }
  unint64_t v44 = v42 + v326;
  swift_bridgeObjectRetain();
  unint64_t v45 = MEMORY[0x1E4FBC860];
  while (1)
  {
    sub_1C1014404(&v333);
    uint64_t v46 = v333;
    uint64_t v47 = *(void *)(v333 + 16);
    int64_t v48 = *(void *)(v45 + 16);
    int64_t v49 = v48 + v47;
    if (__OFADD__(v48, v47)) {
      break;
    }
    int v50 = swift_isUniquelyReferenced_nonNull_native();
    if (v50 && v49 <= *(void *)(v45 + 24) >> 1)
    {
      if (*(void *)(v46 + 16)) {
        goto LABEL_38;
      }
    }
    else
    {
      if (v48 <= v49) {
        int64_t v51 = v48 + v47;
      }
      else {
        int64_t v51 = v48;
      }
      unint64_t v45 = sub_1BFEC5408(v50, v51, 1, v45);
      if (*(void *)(v46 + 16))
      {
LABEL_38:
        uint64_t v52 = *(void *)(v45 + 16);
        uint64_t v53 = (*(void *)(v45 + 24) >> 1) - v52;
        uint64_t v54 = *(void *)(sub_1C1515FDC() - 8);
        uint64_t v55 = *(void *)(v54 + 72);
        if (v53 < v47) {
          goto LABEL_234;
        }
        unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
        unint64_t v57 = v45 + v56 + v55 * v52;
        unint64_t v58 = v46 + v56;
        uint64_t v59 = v55 * v47;
        unint64_t v60 = v57 + v59;
        unint64_t v61 = v58 + v59;
        if (v58 < v60 && v57 < v61) {
          goto LABEL_277;
        }
        swift_arrayInitWithCopy();
        if (v47)
        {
          uint64_t v63 = *(void *)(v45 + 16);
          BOOL v64 = __OFADD__(v63, v47);
          uint64_t v65 = v63 + v47;
          if (v64) {
            goto LABEL_235;
          }
          *(void *)(v45 + 16) = v65;
        }
        goto LABEL_28;
      }
    }
    if (v47) {
      goto LABEL_233;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    v44 += v331;
    if (!--v43)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_233:
  __break(1u);
LABEL_234:
  __break(1u);
LABEL_235:
  __break(1u);
LABEL_236:
  swift_bridgeObjectRelease_n();
  uint64_t v265 = v319;
LABEL_226:
  uint64_t v333 = v265;
  uint64_t v266 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
  sub_1C1515FDC();
  sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v266);
  sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
  uint64_t v267 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  uint64_t v333 = v304;
  sub_1C10475C4(v267);
  uint64_t v268 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  sub_1BFD2C394(v311, v268);
  swift_bridgeObjectRelease();
  uint64_t v269 = v305;
  sub_1C0F9F558(v307, (uint64_t)v305, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFECFF70((uint64_t)v269, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v270 = 0;
    goto LABEL_230;
  }
  uint64_t v332 = *v269;
  SportsDataVisualization.config.getter(&v333);
  swift_release();
  uint64_t v270 = v333;
  uint64_t v271 = v334;
  if (v334)
  {
    sub_1C1520DDC();
    SportsDataVisualizationConfig.hash(into:)();
    uint64_t v272 = v270;
    uint64_t v273 = v271;
  }
  else
  {
LABEL_230:
    sub_1C1520DDC();
    uint64_t v272 = v270;
    uint64_t v273 = 0;
  }
  return sub_1C025EF94(v272, v273);
}

uint64_t sub_1C0F9C300()
{
  sub_1C1520DBC();
  sub_1C0F9A008((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t sub_1C0F9C344()
{
  sub_1C1520DBC();
  sub_1C0F9A008((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t sub_1C0F9C380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v349 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v333 = (char *)&v299 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v346 = (char *)&v299 - v7;
  MEMORY[0x1F4188790](v8);
  v337 = (char *)&v299 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t)&v299 - v11;
  MEMORY[0x1F4188790](v13);
  char v347 = (char *)&v299 - v14;
  MEMORY[0x1F4188790](v15);
  unint64_t v326 = (char *)&v299 - v16;
  uint64_t v332 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v332);
  uint64_t v331 = (uint64_t)&v299 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00FD9D4();
  uint64_t v311 = v18;
  uint64_t v316 = *(void (***)(char *, uint64_t, uint64_t))(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v310 = (char *)&v299 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v338 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v315 = *(void *)(v338 - 8);
  MEMORY[0x1F4188790](v338);
  uint64_t v306 = (uint64_t *)((char *)&v299 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v305 = (char *)&v299 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v329 = (char *)&v299 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v317 = (char *)&v299 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (uint64_t *)((char *)&v299 - v28);
  MEMORY[0x1F4188790](v30);
  unint64_t v325 = (uint64_t *)((char *)&v299 - v31);
  uint64_t v32 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v313 = (void (**)(char *, uint64_t, uint64_t))((char *)&v299 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v34);
  unint64_t v36 = (unint64_t)&v299 - v35;
  MEMORY[0x1F4188790](v37);
  uint64_t v328 = (uint64_t)&v299 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v327 = (uint64_t)&v299 - v40;
  uint64_t v320 = a1;
  uint64_t v41 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v43 = v42;
  uint64_t v321 = a2;
  if (v41 == WebEmbedDataVisualization.identifier.getter() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v45 = v327;
    sub_1C0F9F558(v320, v327, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1C0F9F558(v321, v328, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  }
  else
  {
    char v46 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = v327;
    sub_1C0F9F558(v320, v327, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1C0F9F558(v321, v328, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    if ((v46 & 1) == 0)
    {
      sub_1BFECFF70(v328, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      sub_1BFECFF70(v45, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      sub_1C0F9F558(v320, v36, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      unint64_t v175 = v313;
      sub_1C0F9F558(v321, (uint64_t)v313, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      goto LABEL_176;
    }
  }
  unint64_t v47 = WebEmbedDataVisualization.urlDataSources.getter();
  int64_t v48 = (unint64_t *)v47;
  if (v47 >> 62) {
    goto LABEL_192;
  }
  uint64_t v49 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  unint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v336 = v29;
  unint64_t v304 = v36;
  if (v49)
  {
    uint64_t v348 = (uint64_t)v48;
    unint64_t v352 = MEMORY[0x1E4FBC860];
    sub_1C05F61F8(0, v49 & ~(v49 >> 63), 0);
    if (v49 < 0) {
      goto LABEL_196;
    }
    unint64_t v350 = v49;
    uint64_t v51 = 0;
    unint64_t v52 = v352;
    uint64_t v53 = v348;
    unint64_t v54 = v348 & 0xC000000000000001;
    uint64_t v55 = (void (**)(uint64_t, uint64_t, uint64_t))(v349 + 16);
    uint64_t v56 = v12;
    do
    {
      if (v54)
      {
        uint64_t v57 = MEMORY[0x1C18C7CB0](v51, v53);
        (*v55)(v12, v57 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
        uint64_t v53 = v348;
        swift_unknownObjectRelease();
      }
      else
      {
        (*v55)(v12, *(void *)(v53 + 8 * v51 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
      }
      unint64_t v352 = v52;
      unint64_t v59 = *(void *)(v52 + 16);
      unint64_t v58 = *(void *)(v52 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_1C05F61F8(v58 > 1, v59 + 1, 1);
        uint64_t v53 = v348;
        unint64_t v52 = v352;
      }
      ++v51;
      *(void *)(v52 + 16) = v59 + 1;
      unint64_t v60 = v52
          + ((*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80))
          + *(void *)(v349 + 72) * v59;
      uint64_t v12 = v56;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v349 + 32))(v60, v56, v4);
    }
    while (v350 != v51);
    swift_bridgeObjectRelease();
    unint64_t v50 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v336;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v52 = MEMORY[0x1E4FBC860];
  }
  unint64_t v352 = v52;
  unint64_t v61 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C0F9F5C0(0, &qword_1EB86AF90, MEMORY[0x1E4F276F0]);
  uint64_t v63 = v62;
  uint64_t v64 = sub_1C0F9F514((unint64_t *)&qword_1EB86AF98, &qword_1EB86AF90, v61);
  uint64_t v65 = sub_1C0F9F614((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
  uint64_t v343 = v63;
  uint64_t v344 = v64;
  v342 = (void *)v65;
  uint64_t v66 = sub_1C151E92C();
  uint64_t v340 = 0;
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_1C10137B8();
  uint64_t v68 = *(void *)(v67 + 16);
  unint64_t v350 = v4;
  uint64_t v307 = v68;
  if (!v68)
  {
    swift_bridgeObjectRelease();
    unint64_t v163 = MEMORY[0x1E4FBC860];
    goto LABEL_164;
  }
  uint64_t v300 = v66;
  unint64_t v330 = (*(unsigned __int8 *)(v315 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v315 + 80);
  unint64_t v69 = v67 + v330;
  uint64_t v12 = *(void *)(v315 + 72);
  uint64_t v302 = (void (**)(char *, unint64_t, uint64_t))(v316 + 2);
  uint64_t v70 = (void (**)(uint64_t, uint64_t, uint64_t))(v349 + 16);
  uint64_t v341 = v349 + 32;
  uint64_t v299 = v67;
  swift_bridgeObjectRetain();
  uint64_t v71 = 0;
  unint64_t v314 = v50;
  uint64_t v348 = v12;
  unint64_t v303 = v69;
  while (1)
  {
    uint64_t v308 = v71;
    uint64_t v309 = sub_1C1013F9C();
    uint64_t v72 = sub_1C10137B8();
    uint64_t v318 = *(void *)(v72 + 16);
    if (v318) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v74 = v50;
LABEL_145:
    unint64_t v352 = v74;
    unint64_t v36 = v340;
    uint64_t v149 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    unint64_t v352 = v309;
    sub_1C10475C4(v149);
    uint64_t v150 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v151 = *(void *)(v150 + 16);
    int64_t v152 = *(void *)(v314 + 16);
    uint64_t v45 = v152 + v151;
    if (__OFADD__(v152, v151)) {
      goto LABEL_198;
    }
    uint64_t v340 = v36;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v154 = v314;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v45 > *(void *)(v314 + 24) >> 1)
    {
      if (v152 <= v45) {
        int64_t v155 = v152 + v151;
      }
      else {
        int64_t v155 = v152;
      }
      uint64_t v154 = sub_1BFEC5408(isUniquelyReferenced_nonNull_native, v155, 1, v314);
    }
    uint64_t v12 = v348;
    uint64_t v156 = *(void *)(v150 + 16);
    unint64_t v314 = v154;
    if (v156)
    {
      uint64_t v157 = *(void *)(v154 + 16);
      if ((*(void *)(v154 + 24) >> 1) - v157 < v151) {
        goto LABEL_377;
      }
      unint64_t v158 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
      uint64_t v159 = *(void *)(v349 + 72);
      unint64_t v160 = v154 + v158 + v159 * v157;
      if (v150 + v158 < v160 + v159 * v151 && v160 < v150 + v158 + v159 * v151) {
        goto LABEL_387;
      }
      swift_arrayInitWithCopy();
      if (v151)
      {
        uint64_t v161 = *(void *)(v314 + 16);
        BOOL v122 = __OFADD__(v161, v151);
        uint64_t v162 = v161 + v151;
        if (v122) {
          goto LABEL_380;
        }
        *(void *)(v314 + 16) = v162;
      }
    }
    else if (v151)
    {
      goto LABEL_199;
    }
    uint64_t v71 = v308 + 1;
    swift_bridgeObjectRelease();
    if (v71 == v307) {
      goto LABEL_183;
    }
  }
  unint64_t v319 = v72 + v330;
  uint64_t v301 = v72;
  swift_bridgeObjectRetain();
  uint64_t v73 = 0;
  unint64_t v74 = v50;
  while (2)
  {
    uint64_t v323 = v73;
    unint64_t v339 = v319 + v73 * v12;
    uint64_t v75 = v325;
    sub_1C0F9F558(v339, (uint64_t)v325, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v324 = v74;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v77 = (uint64_t)v75;
      uint64_t v78 = v331;
      sub_1C0F9F65C(v77, v331);
      unint64_t v36 = *(void *)(v78 + *(int *)(v332 + 24));
      swift_bridgeObjectRetain();
      sub_1BFECFF70(v78, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      uint64_t v45 = (uint64_t)v326;
    }
    else
    {
      uint64_t v79 = *v75;
      unint64_t v80 = (unint64_t)*v75 >> 61;
      uint64_t v45 = (uint64_t)v326;
      switch(v80)
      {
        case 1uLL:
          uint64_t v81 = *(void *)((v79 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v82 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources;
          goto LABEL_36;
        case 2uLL:
          uint64_t v83 = v79 & 0x1FFFFFFFFFFFFFFFLL;
          unint64_t v84 = *(void *)((v79 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v351[0] = v50;
          (*v302)(v310, v84 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v311);
          sub_1C0F9F614(&qword_1EA19BBA0, (void (*)(uint64_t))sub_1C00FD9D4);
          swift_retain();
          sub_1C151E8FC();
          unint64_t v86 = v352;
          uint64_t v85 = v353;
          if (v352 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v147 = sub_1C15204BC();
            swift_bridgeObjectRelease();
            if (v85 == v147)
            {
LABEL_31:
              swift_release();
              uint64_t v45 = (uint64_t)v326;
              goto LABEL_143;
            }
            swift_bridgeObjectRetain();
            uint64_t v87 = sub_1C15204BC();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v87 = *(void *)((v352 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v353 == v87) {
              goto LABEL_31;
            }
          }
          unint64_t v335 = v83;
          unint64_t v345 = v84;
          if (v85 >= v87) {
            goto LABEL_384;
          }
          unint64_t v36 = v86 & 0xC000000000000001;
          uint64_t v45 = (uint64_t)v326;
          do
          {
            if (v36)
            {
              uint64_t v148 = MEMORY[0x1C18C7CB0](v85, v86);
            }
            else
            {
              if (v85 < 0) {
                goto LABEL_194;
              }
              if ((unint64_t)v85 >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_195;
              }
              uint64_t v148 = *(void *)(v86 + 8 * v85 + 32);
              swift_retain();
            }
            ++v85;
            unint64_t v50 = *(void *)(v148 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
            swift_bridgeObjectRetain();
            swift_release();
            sub_1C10475F0(v50);
          }
          while (v87 != v85);
          swift_release();
LABEL_143:
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v36 = v351[0];
          unint64_t v50 = MEMORY[0x1E4FBC860];
          uint64_t v29 = v336;
          uint64_t v12 = v348;
          break;
        case 3uLL:
          uint64_t v81 = *(void *)((v79 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v82 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources;
          goto LABEL_36;
        case 4uLL:
          uint64_t v81 = *(void *)((v79 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v82 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources;
          goto LABEL_36;
        case 5uLL:
          uint64_t v81 = *(void *)((v79 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v82 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources;
          goto LABEL_36;
        case 6uLL:
          uint64_t v81 = *(void *)((v79 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v82 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources;
LABEL_36:
          unint64_t v36 = *(void *)(v81 + *v82);
          goto LABEL_37;
        default:
          unint64_t v36 = *(void *)(*(void *)(v79 + 16)
                          + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_urlDataSources);
LABEL_37:
          swift_bridgeObjectRetain();
          swift_release();
          break;
      }
    }
    unint64_t v345 = v36;
    if (v36 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v36 = v345;
      uint64_t v88 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v88) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v88 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v88)
      {
LABEL_40:
        unint64_t v352 = v50;
        int64_t v48 = &v352;
        sub_1C05F61F8(0, v88 & ~(v88 >> 63), 0);
        if (v88 < 0) {
          goto LABEL_191;
        }
        uint64_t v89 = 0;
        unint64_t v90 = v352;
        unint64_t v91 = v345;
        unint64_t v92 = v345 & 0xC000000000000001;
        do
        {
          if (v92)
          {
            uint64_t v93 = MEMORY[0x1C18C7CB0](v89, v91);
            (*v70)(v45, v93 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
            unint64_t v91 = v345;
            swift_unknownObjectRelease();
          }
          else
          {
            (*v70)(v45, *(void *)(v91 + 8 * v89 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
          }
          unint64_t v352 = v90;
          unint64_t v95 = *(void *)(v90 + 16);
          unint64_t v94 = *(void *)(v90 + 24);
          if (v95 >= v94 >> 1)
          {
            sub_1C05F61F8(v94 > 1, v95 + 1, 1);
            unint64_t v91 = v345;
            unint64_t v90 = v352;
          }
          ++v89;
          *(void *)(v90 + 16) = v95 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v349 + 32))(v90+ ((*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80))+ *(void *)(v349 + 72) * v95, v45, v4);
        }
        while (v88 != v89);
        swift_bridgeObjectRelease();
        unint64_t v50 = MEMORY[0x1E4FBC860];
        uint64_t v29 = v336;
        uint64_t v12 = v348;
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v90 = v50;
LABEL_51:
    unint64_t v352 = v90;
    unint64_t v36 = v340;
    uint64_t v322 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v96 = sub_1C10137B8();
    unint64_t v335 = *(void *)(v96 + 16);
    if (!v335)
    {
      swift_bridgeObjectRelease();
      goto LABEL_118;
    }
    unint64_t v334 = v96 + v330;
    uint64_t v312 = v96;
    swift_bridgeObjectRetain();
    uint64_t v45 = 0;
    unint64_t v345 = v50;
    do
    {
      uint64_t v12 = v334 + v45 * v12;
      sub_1C0F9F558(v12, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      int v97 = swift_getEnumCaseMultiPayload();
      unint64_t v339 = v45;
      if (v97 == 1)
      {
        uint64_t v45 = v331;
        sub_1C0F9F65C((uint64_t)v29, v331);
        unint64_t v98 = *(void *)(v45 + *(int *)(v332 + 24));
        swift_bridgeObjectRetain();
        sub_1BFECFF70(v45, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      }
      else
      {
        uint64_t v99 = *v29;
        switch(*v29 >> 61)
        {
          case 1:
            uint64_t v100 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v101 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources;
            goto LABEL_65;
          case 2:
            swift_retain();
            unint64_t v98 = SportsBracketGroupDataVisualization.urlDataSources.getter();
            swift_release();
            goto LABEL_67;
          case 3:
            uint64_t v100 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v101 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources;
            goto LABEL_65;
          case 4:
            uint64_t v100 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v101 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources;
            goto LABEL_65;
          case 5:
            uint64_t v100 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v101 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources;
            goto LABEL_65;
          case 6:
            uint64_t v100 = *(void *)((v99 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v101 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources;
LABEL_65:
            unint64_t v98 = *(void *)(v100 + *v101);
            break;
          default:
            unint64_t v98 = *(void *)(*(void *)(v99 + 16)
                            + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_urlDataSources);
            break;
        }
        swift_bridgeObjectRetain();
LABEL_67:
        swift_release();
      }
      if (v98 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v102 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (!v102)
        {
LABEL_78:
          swift_bridgeObjectRelease();
          unint64_t v108 = v50;
          goto LABEL_79;
        }
      }
      else
      {
        uint64_t v102 = *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v102) {
          goto LABEL_78;
        }
      }
      unint64_t v352 = v50;
      int64_t v48 = &v352;
      sub_1C05F61F8(0, v102 & ~(v102 >> 63), 0);
      if (v102 < 0) {
        goto LABEL_186;
      }
      uint64_t v340 = v36;
      uint64_t v103 = 0;
      do
      {
        if ((v98 & 0xC000000000000001) != 0)
        {
          uint64_t v104 = MEMORY[0x1C18C7CB0](v103, v98);
        }
        else
        {
          uint64_t v104 = *(void *)(v98 + 8 * v103 + 32);
          swift_retain();
        }
        ++v103;
        uint64_t v105 = (uint64_t)v347;
        (*v70)((uint64_t)v347, v104 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
        swift_release();
        sub_1C1146B98();
        uint64_t v106 = *(void *)(v352 + 16);
        sub_1C1146E34(v106);
        uint64_t v107 = sub_1C114708C(v106, v105);
        nullsub_1(v107);
      }
      while (v102 != v103);
      swift_bridgeObjectRelease();
      unint64_t v108 = v352;
      unint64_t v50 = MEMORY[0x1E4FBC860];
      unint64_t v36 = v340;
LABEL_79:
      unint64_t v352 = v108;
      uint64_t v340 = sub_1C151E92C();
      swift_bridgeObjectRelease();
      uint64_t v109 = sub_1C10137B8();
      uint64_t v110 = *(void *)(v109 + 16);
      if (v110)
      {
        unint64_t v111 = v109 + v330;
        swift_bridgeObjectRetain();
        uint64_t v12 = v50;
        while (1)
        {
          sub_1C1014404((uint64_t *)&v352);
          unint64_t v50 = v352;
          uint64_t v112 = *(void *)(v352 + 16);
          uint64_t v4 = *(void *)(v12 + 16);
          uint64_t v113 = v4 + v112;
          if (__OFADD__(v4, v112)) {
            break;
          }
          int v114 = swift_isUniquelyReferenced_nonNull_native();
          if (!v114 || v113 > *(void *)(v12 + 24) >> 1)
          {
            if (v4 <= v113) {
              int64_t v115 = v4 + v112;
            }
            else {
              int64_t v115 = v4;
            }
            uint64_t v12 = sub_1BFEC5408(v114, v115, 1, v12);
          }
          uint64_t v4 = v350;
          if (*(void *)(v50 + 16))
          {
            uint64_t v116 = *(void *)(v12 + 16);
            if ((*(void *)(v12 + 24) >> 1) - v116 < v112) {
              goto LABEL_181;
            }
            unint64_t v117 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
            uint64_t v118 = *(void *)(v349 + 72);
            unint64_t v119 = v12 + v117 + v118 * v116;
            if (v50 + v117 < v119 + v118 * v112 && v119 < v50 + v117 + v118 * v112) {
              goto LABEL_387;
            }
            swift_arrayInitWithCopy();
            if (v112)
            {
              uint64_t v121 = *(void *)(v12 + 16);
              BOOL v122 = __OFADD__(v121, v112);
              uint64_t v123 = v121 + v112;
              if (v122) {
                goto LABEL_182;
              }
              *(void *)(v12 + 16) = v123;
            }
          }
          else if (v112)
          {
            goto LABEL_180;
          }
          swift_bridgeObjectRelease();
          v111 += v348;
          if (!--v110)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_102;
          }
        }
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        swift_bridgeObjectRelease_n();
        uint64_t v66 = v300;
        unint64_t v163 = v314;
LABEL_164:
        unint64_t v352 = v163;
        unint64_t v36 = v340;
        uint64_t v164 = sub_1C151E92C();
        swift_bridgeObjectRelease();
        unint64_t v352 = v66;
        sub_1C10475C4(v164);
        unint64_t v314 = sub_1C151E92C();
        swift_bridgeObjectRelease();
        unint64_t v165 = WebEmbedDataVisualization.urlDataSources.getter();
        uint64_t v45 = v165;
        if (v165 >> 62) {
          goto LABEL_200;
        }
        uint64_t v166 = *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v166) {
          goto LABEL_201;
        }
        goto LABEL_166;
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = v50;
LABEL_102:
      unint64_t v352 = v12;
      uint64_t v29 = v342;
      uint64_t v124 = sub_1C151E92C();
      swift_bridgeObjectRelease();
      unint64_t v352 = v340;
      sub_1C10475C4(v124);
      int64_t v48 = (unint64_t *)sub_1C151E92C();
      swift_bridgeObjectRelease();
      int64_t v125 = v48[2];
      int64_t v126 = *(void *)(v345 + 16);
      uint64_t v45 = v126 + v125;
      if (__OFADD__(v126, v125))
      {
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        uint64_t v49 = sub_1C15204BC();
        goto LABEL_7;
      }
      char v127 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v128 = v345;
      if ((v127 & 1) == 0 || v45 > *(void *)(v345 + 24) >> 1)
      {
        if (v126 <= v45) {
          int64_t v129 = v126 + v125;
        }
        else {
          int64_t v129 = v126;
        }
        uint64_t v128 = sub_1BFEC5408(v127, v129, 1, v345);
      }
      unint64_t v50 = MEMORY[0x1E4FBC860];
      uint64_t v29 = v336;
      uint64_t v12 = v348;
      unint64_t v130 = v48[2];
      unint64_t v345 = v128;
      if (v130)
      {
        uint64_t v131 = *(void *)(v128 + 16);
        if ((*(void *)(v128 + 24) >> 1) - v131 < v125) {
          goto LABEL_187;
        }
        unint64_t v132 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
        uint64_t v133 = *(void *)(v349 + 72);
        unint64_t v134 = v128 + v132 + v133 * v131;
        if ((unint64_t)v48 + v132 < v134 + v133 * v125 && v134 < (unint64_t)v48 + v132 + v133 * v125) {
          goto LABEL_387;
        }
        swift_arrayInitWithCopy();
        if (v125)
        {
          uint64_t v135 = *(void *)(v345 + 16);
          BOOL v122 = __OFADD__(v135, v125);
          uint64_t v136 = v135 + v125;
          if (v122) {
            goto LABEL_188;
          }
          *(void *)(v345 + 16) = v136;
        }
      }
      else if (v125)
      {
        goto LABEL_185;
      }
      uint64_t v45 = v339 + 1;
      swift_bridgeObjectRelease();
    }
    while (v45 != v335);
    swift_bridgeObjectRelease_n();
    unint64_t v50 = v345;
LABEL_118:
    unint64_t v352 = v50;
    uint64_t v137 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    unint64_t v352 = v322;
    sub_1C10475C4(v137);
    int64_t v48 = (unint64_t *)sub_1C151E92C();
    swift_bridgeObjectRelease();
    int64_t v138 = v48[2];
    unint64_t v74 = v324;
    uint64_t v12 = *(void *)(v324 + 16);
    uint64_t v45 = v12 + v138;
    if (__OFADD__(v12, v138)) {
      goto LABEL_189;
    }
    uint64_t v340 = v36;
    char v139 = swift_isUniquelyReferenced_nonNull_native();
    if ((v139 & 1) == 0 || v45 > *(void *)(v74 + 24) >> 1)
    {
      if (v12 <= v45) {
        int64_t v140 = v12 + v138;
      }
      else {
        int64_t v140 = v12;
      }
      unint64_t v74 = sub_1BFEC5408(v139, v140, 1, v74);
    }
    uint64_t v12 = v348;
    uint64_t v45 = v323;
    unint64_t v50 = MEMORY[0x1E4FBC860];
    if (!v48[2])
    {
      if (!v138) {
        goto LABEL_23;
      }
      goto LABEL_190;
    }
    uint64_t v141 = *(void *)(v74 + 16);
    if ((*(void *)(v74 + 24) >> 1) - v141 < v138)
    {
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
      goto LABEL_197;
    }
    unint64_t v142 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
    uint64_t v143 = *(void *)(v349 + 72);
    unint64_t v144 = v74 + v142 + v143 * v141;
    if ((unint64_t)v48 + v142 < v144 + v143 * v138 && v144 < (unint64_t)v48 + v142 + v143 * v138) {
      goto LABEL_387;
    }
    swift_arrayInitWithCopy();
    if (!v138)
    {
LABEL_23:
      uint64_t v73 = v45 + 1;
      swift_bridgeObjectRelease();
      if (v73 != v318) {
        continue;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_145;
    }
    break;
  }
  uint64_t v145 = *(void *)(v74 + 16);
  BOOL v122 = __OFADD__(v145, v138);
  uint64_t v146 = v145 + v138;
  if (!v122)
  {
    *(void *)(v74 + 16) = v146;
    goto LABEL_23;
  }
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  uint64_t v166 = sub_1C15204BC();
  if (!v166)
  {
LABEL_201:
    swift_bridgeObjectRelease();
    unint64_t v168 = MEMORY[0x1E4FBC860];
    goto LABEL_202;
  }
LABEL_166:
  char v347 = (char *)v36;
  uint64_t v348 = v45;
  unint64_t v352 = v50;
  sub_1C05F61F8(0, v166 & ~(v166 >> 63), 0);
  if (v166 < 0) {
    goto LABEL_378;
  }
  uint64_t v167 = 0;
  unint64_t v168 = v352;
  uint64_t v169 = v348;
  unint64_t v170 = v348 & 0xC000000000000001;
  uint64_t v171 = (void (**)(char *, uint64_t, uint64_t))(v349 + 16);
  do
  {
    if (v170)
    {
      uint64_t v172 = MEMORY[0x1C18C7CB0](v167, v169);
      (*v171)(v333, v172 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
      uint64_t v169 = v348;
      swift_unknownObjectRelease();
    }
    else
    {
      (*v171)(v333, *(void *)(v169 + 8 * v167 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
    }
    unint64_t v352 = v168;
    unint64_t v174 = *(void *)(v168 + 16);
    unint64_t v173 = *(void *)(v168 + 24);
    if (v174 >= v173 >> 1)
    {
      sub_1C05F61F8(v173 > 1, v174 + 1, 1);
      uint64_t v169 = v348;
      unint64_t v168 = v352;
    }
    ++v167;
    *(void *)(v168 + 16) = v174 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v349 + 32))(v168+ ((*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80))+ *(void *)(v349 + 72) * v174, v333, v4);
  }
  while (v166 != v167);
  swift_bridgeObjectRelease();
  unint64_t v50 = MEMORY[0x1E4FBC860];
  unint64_t v36 = (unint64_t)v347;
LABEL_202:
  unint64_t v352 = v168;
  uint64_t v312 = sub_1C151E92C();
  uint64_t v178 = v36;
  swift_bridgeObjectRelease();
  uint64_t v179 = sub_1C10137B8();
  uint64_t v318 = *(void *)(v179 + 16);
  if (!v318)
  {
    swift_bridgeObjectRelease();
    unint64_t v298 = MEMORY[0x1E4FBC860];
LABEL_349:
    unint64_t v352 = v298;
    uint64_t v288 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    unint64_t v352 = v312;
    sub_1C10475C4(v288);
    uint64_t v289 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    LOBYTE(v288) = sub_1C004B384(v314, v289);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFECFF70(v328, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BFECFF70(v327, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    unint64_t v36 = v304;
    sub_1C0F9F558(v320, v304, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    unint64_t v175 = v313;
    sub_1C0F9F558(v321, (uint64_t)v313, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    if (v288)
    {
      uint64_t v227 = v305;
      sub_1C0F9F558(v36, (uint64_t)v305, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFECFF70((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        unint64_t v290 = 0;
        uint64_t v226 = 0;
        uint64_t v291 = 0;
        uint64_t v292 = 0;
        uint64_t v293 = 0;
        uint64_t v294 = 0;
        goto LABEL_356;
      }
LABEL_355:
      v351[0] = *(void *)v227;
      SportsDataVisualization.config.getter((uint64_t *)&v352);
      swift_release();
      unint64_t v290 = v352;
      uint64_t v226 = v353;
      uint64_t v291 = v354;
      uint64_t v292 = v355;
      uint64_t v293 = v356;
      uint64_t v294 = v357;
LABEL_356:
      uint64_t v295 = v306;
      unint64_t v350 = v290;
      sub_1C0F9F558((uint64_t)v175, (uint64_t)v306, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFECFF70((uint64_t)v295, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v225 = 0;
        uint64_t v232 = 0;
        uint64_t v227 = 0;
        uint64_t v205 = 0;
        uint64_t v296 = 0;
        uint64_t v297 = 0;
        uint64_t v348 = 0;
        uint64_t v349 = 0;
        if (v226)
        {
LABEL_358:
          unint64_t v352 = v350;
          uint64_t v353 = v226;
          v354 = v291;
          v355 = v292;
          uint64_t v356 = v293;
          uint64_t v357 = v294;
          if (!v232) {
            goto LABEL_364;
          }
          v351[0] = v225;
          v351[1] = v232;
          v351[2] = v227;
          v351[3] = v205;
          v351[4] = v296;
          v351[5] = v297;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v176 = _s8NewsFeed29SportsDataVisualizationConfigV2eeoiySbAC_ACtFZ_0(&v352, v351);
          sub_1C025EF94(v225, v232);
          sub_1BFECFF70((uint64_t)v313, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
          sub_1BFECFF70(v304, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_1C025EF94(v350, v226);
          return v176 & 1;
        }
      }
      else
      {
        v351[0] = *v295;
        SportsDataVisualization.config.getter((uint64_t *)&v352);
        swift_release();
        uint64_t v225 = v352;
        uint64_t v232 = v353;
        uint64_t v227 = (char *)v354;
        uint64_t v205 = v355;
        uint64_t v296 = v356;
        uint64_t v297 = v357;
        uint64_t v348 = v357;
        uint64_t v349 = v356;
        if (v226) {
          goto LABEL_358;
        }
      }
      uint64_t v346 = v205;
      char v347 = v227;
      sub_1BFECFF70((uint64_t)v175, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      sub_1BFECFF70(v304, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      if (v232) {
        goto LABEL_365;
      }
      sub_1C025EF94(v350, 0);
      char v176 = 1;
      return v176 & 1;
    }
LABEL_176:
    sub_1BFECFF70((uint64_t)v175, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BFECFF70(v36, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    goto LABEL_177;
  }
  unint64_t v335 = (*(unsigned __int8 *)(v315 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v315 + 80);
  uint64_t v180 = v179 + v335;
  uint64_t v181 = *(void *)(v315 + 72);
  v316 += 2;
  unint64_t v175 = (void (**)(char *, uint64_t, uint64_t))(v349 + 16);
  char v347 = (char *)(v349 + 32);
  uint64_t v308 = v179;
  swift_bridgeObjectRetain();
  unint64_t v182 = 0;
  unint64_t v324 = v50;
  uint64_t v183 = (uint64_t *)v317;
  uint64_t v348 = v181;
  uint64_t v309 = v180;
LABEL_204:
  unint64_t v319 = v182;
  uint64_t v322 = sub_1C1013F9C();
  uint64_t v184 = sub_1C10137B8();
  unint64_t v325 = *(uint64_t **)(v184 + 16);
  if (!v325)
  {
    uint64_t v272 = v178;
    swift_bridgeObjectRelease();
    unint64_t v186 = v50;
    goto LABEL_330;
  }
  unint64_t v326 = (char *)(v184 + v335);
  uint64_t v315 = v184;
  swift_bridgeObjectRetain();
  unint64_t v185 = 0;
  unint64_t v186 = v50;
LABEL_208:
  uint64_t v187 = (uint64_t)&v326[v185 * v181];
  sub_1C0F9F558(v187, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  int v188 = swift_getEnumCaseMultiPayload();
  unint64_t v334 = v186;
  unint64_t v330 = v185;
  if (v188 != 1)
  {
    uint64_t v197 = *v183;
    switch((unint64_t)*v183 >> 61)
    {
      case 1uLL:
        uint64_t v198 = *(void *)((v197 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v199 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources;
        goto LABEL_230;
      case 2uLL:
        unint64_t v345 = v187;
        uint64_t v340 = v197 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v200 = *(void *)((v197 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        unint64_t v201 = v50;
        v351[0] = v50;
        (*v316)(v310, v200 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v311);
        sub_1C0F9F614(&qword_1EA19BBA0, (void (*)(uint64_t))sub_1C00FD9D4);
        swift_retain();
        sub_1C151E8FC();
        unint64_t v203 = v352;
        uint64_t v202 = v353;
        if (v352 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v269 = sub_1C15204BC();
          swift_bridgeObjectRelease();
          if (v202 == v269)
          {
LABEL_225:
            swift_release();
            goto LABEL_327;
          }
          swift_bridgeObjectRetain();
          uint64_t v204 = sub_1C15204BC();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v204 = *(void *)((v352 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v353 == v204) {
            goto LABEL_225;
          }
        }
        unint64_t v339 = v200;
        uint64_t v341 = v178;
        if (v202 >= v204) {
          goto LABEL_386;
        }
        do
        {
          if ((v203 & 0xC000000000000001) != 0)
          {
            uint64_t v270 = MEMORY[0x1C18C7CB0](v202, v203);
          }
          else
          {
            if (v202 < 0) {
              goto LABEL_375;
            }
            if ((unint64_t)v202 >= *(void *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_376;
            }
            uint64_t v270 = *(void *)(v203 + 8 * v202 + 32);
            swift_retain();
          }
          ++v202;
          unint64_t v271 = *(void *)(v270 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
          swift_bridgeObjectRetain();
          swift_release();
          sub_1C10475F0(v271);
          unint64_t v201 = MEMORY[0x1E4FBC860];
        }
        while (v204 != v202);
        swift_release();
        uint64_t v178 = v341;
LABEL_327:
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v190 = v351[0];
        unint64_t v50 = v201;
        uint64_t v187 = v345;
        if (v351[0] >> 62) {
          goto LABEL_232;
        }
        goto LABEL_210;
      case 3uLL:
        uint64_t v198 = *(void *)((v197 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v199 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources;
        goto LABEL_230;
      case 4uLL:
        uint64_t v198 = *(void *)((v197 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v199 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources;
        goto LABEL_230;
      case 5uLL:
        uint64_t v198 = *(void *)((v197 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v199 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources;
        goto LABEL_230;
      case 6uLL:
        uint64_t v198 = *(void *)((v197 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v199 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources;
LABEL_230:
        unint64_t v190 = *(void *)(v198 + *v199);
        goto LABEL_231;
      default:
        unint64_t v190 = *(void *)(*(void *)(v197 + 16)
                         + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_urlDataSources);
LABEL_231:
        swift_bridgeObjectRetain();
        swift_release();
        if (v190 >> 62) {
          goto LABEL_232;
        }
        goto LABEL_210;
    }
  }
  uint64_t v189 = v331;
  sub_1C0F9F65C((uint64_t)v183, v331);
  unint64_t v190 = *(void *)(v189 + *(int *)(v332 + 24));
  swift_bridgeObjectRetain();
  sub_1BFECFF70(v189, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  if (v190 >> 62)
  {
LABEL_232:
    swift_bridgeObjectRetain();
    uint64_t v191 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v191) {
      goto LABEL_233;
    }
LABEL_211:
    unint64_t v352 = v50;
    sub_1C05F61F8(0, v191 & ~(v191 >> 63), 0);
    if (v191 < 0) {
      goto LABEL_373;
    }
    unint64_t v345 = v187;
    uint64_t v341 = v178;
    uint64_t v192 = 0;
    unint64_t v193 = v352;
    do
    {
      if ((v190 & 0xC000000000000001) != 0)
      {
        uint64_t v194 = MEMORY[0x1C18C7CB0](v192, v190);
        (*v175)(v337, v194 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
        swift_unknownObjectRelease();
      }
      else
      {
        (*v175)(v337, *(void *)(v190 + 8 * v192 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
      }
      unint64_t v352 = v193;
      unint64_t v196 = *(void *)(v193 + 16);
      unint64_t v195 = *(void *)(v193 + 24);
      if (v196 >= v195 >> 1)
      {
        sub_1C05F61F8(v195 > 1, v196 + 1, 1);
        unint64_t v193 = v352;
      }
      ++v192;
      *(void *)(v193 + 16) = v196 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v349 + 32))(v193+ ((*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80))+ *(void *)(v349 + 72) * v196, v337, v4);
    }
    while (v191 != v192);
    swift_bridgeObjectRelease();
    uint64_t v178 = v341;
  }
  else
  {
LABEL_210:
    uint64_t v191 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v191) {
      goto LABEL_211;
    }
LABEL_233:
    swift_bridgeObjectRelease();
    unint64_t v193 = v50;
  }
  unint64_t v352 = v193;
  uint64_t v205 = (char *)v178;
  uint64_t v333 = (char *)sub_1C151E92C();
  swift_bridgeObjectRelease();
  uint64_t v206 = sub_1C10137B8();
  int64_t v207 = (uint64_t *)v329;
  unint64_t v339 = *(void *)(v206 + 16);
  if (!v339)
  {
    swift_bridgeObjectRelease();
    unint64_t v50 = MEMORY[0x1E4FBC860];
    unint64_t v209 = MEMORY[0x1E4FBC860];
    goto LABEL_302;
  }
  uint64_t v336 = (void *)(v206 + v335);
  uint64_t v323 = v206;
  swift_bridgeObjectRetain();
  uint64_t v208 = 0;
  unint64_t v50 = MEMORY[0x1E4FBC860];
  unint64_t v209 = MEMORY[0x1E4FBC860];
  while (1)
  {
    sub_1C0F9F558((uint64_t)v336 + v208 * v348, (uint64_t)v207, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    int v210 = swift_getEnumCaseMultiPayload();
    unint64_t v345 = v209;
    if (v210 == 1)
    {
      uint64_t v211 = (uint64_t)v207;
      uint64_t v212 = v331;
      sub_1C0F9F65C(v211, v331);
      unint64_t v213 = *(void *)(v212 + *(int *)(v332 + 24));
      swift_bridgeObjectRetain();
      sub_1BFECFF70(v212, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      uint64_t v214 = *v207;
      switch((unint64_t)*v207 >> 61)
      {
        case 1uLL:
          uint64_t v215 = *(void *)((v214 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v216 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources;
          goto LABEL_248;
        case 2uLL:
          swift_retain();
          unint64_t v213 = SportsBracketGroupDataVisualization.urlDataSources.getter();
          swift_release();
          goto LABEL_250;
        case 3uLL:
          uint64_t v215 = *(void *)((v214 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v216 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources;
          goto LABEL_248;
        case 4uLL:
          uint64_t v215 = *(void *)((v214 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v216 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources;
          goto LABEL_248;
        case 5uLL:
          uint64_t v215 = *(void *)((v214 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v216 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources;
          goto LABEL_248;
        case 6uLL:
          uint64_t v215 = *(void *)((v214 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v216 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources;
LABEL_248:
          unint64_t v213 = *(void *)(v215 + *v216);
          break;
        default:
          unint64_t v213 = *(void *)(*(void *)(v214 + 16)
                           + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_urlDataSources);
          break;
      }
      swift_bridgeObjectRetain();
LABEL_250:
      swift_release();
    }
    if (v213 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v217 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v217 = *(void *)((v213 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v340 = v208;
    if (v217)
    {
      unint64_t v352 = sub_1BFEACEF4();
      sub_1C1146910(v217);
      if (v217 < 0) {
        goto LABEL_368;
      }
      uint64_t v341 = (uint64_t)v205;
      uint64_t v218 = 0;
      do
      {
        if ((v213 & 0xC000000000000001) != 0)
        {
          uint64_t v219 = MEMORY[0x1C18C7CB0](v218, v213);
        }
        else
        {
          uint64_t v219 = *(void *)(v213 + 8 * v218 + 32);
          swift_retain();
        }
        ++v218;
        uint64_t v220 = (uint64_t)v346;
        (*v175)(v346, v219 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v4);
        swift_release();
        sub_1C1146B98();
        uint64_t v221 = *(void *)(v352 + 16);
        sub_1C1146E34(v221);
        uint64_t v222 = sub_1C114708C(v221, v220);
        nullsub_1(v222);
      }
      while (v217 != v218);
      swift_bridgeObjectRelease();
      uint64_t v223 = v352;
      unint64_t v50 = MEMORY[0x1E4FBC860];
      uint64_t v205 = (char *)v341;
    }
    else
    {
      uint64_t v223 = sub_1C01AFAE8(0);
      swift_bridgeObjectRelease();
    }
    unint64_t v352 = v223;
    uint64_t v341 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v224 = sub_1C10137B8();
    uint64_t v225 = v224;
    uint64_t v226 = *(void *)(v224 + 16);
    if (v226) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v228 = v50;
LABEL_285:
    unint64_t v352 = v228;
    uint64_t v242 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    unint64_t v352 = v341;
    sub_1C10475C4(v242);
    uint64_t v243 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    uint64_t v244 = *(void *)(v243 + 16);
    unint64_t v209 = v345;
    int64_t v245 = *(void *)(v345 + 16);
    int64_t v246 = v245 + v244;
    if (__OFADD__(v245, v244))
    {
      __break(1u);
LABEL_367:
      __break(1u);
LABEL_368:
      __break(1u);
LABEL_369:
      __break(1u);
LABEL_370:
      __break(1u);
LABEL_371:
      __break(1u);
LABEL_372:
      __break(1u);
LABEL_373:
      __break(1u);
LABEL_374:
      __break(1u);
LABEL_375:
      __break(1u);
LABEL_376:
      __break(1u);
LABEL_377:
      __break(1u);
LABEL_378:
      __break(1u);
LABEL_379:
      __break(1u);
LABEL_380:
      __break(1u);
LABEL_381:
      __break(1u);
LABEL_382:
      __break(1u);
      goto LABEL_383;
    }
    char v247 = swift_isUniquelyReferenced_nonNull_native();
    if ((v247 & 1) == 0 || v246 > *(void *)(v209 + 24) >> 1)
    {
      if (v245 <= v246) {
        int64_t v248 = v245 + v244;
      }
      else {
        int64_t v248 = v245;
      }
      unint64_t v209 = sub_1BFEC5408(v247, v248, 1, v209);
    }
    unint64_t v50 = MEMORY[0x1E4FBC860];
    uint64_t v249 = v340;
    if (*(void *)(v243 + 16))
    {
      uint64_t v250 = *(void *)(v209 + 16);
      if ((*(void *)(v209 + 24) >> 1) - v250 < v244) {
        goto LABEL_369;
      }
      unint64_t v251 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
      uint64_t v252 = *(void *)(v349 + 72);
      unint64_t v253 = v209 + v251 + v252 * v250;
      if (v243 + v251 < v253 + v252 * v244 && v253 < v243 + v251 + v252 * v244) {
        goto LABEL_387;
      }
      swift_arrayInitWithCopy();
      if (v244)
      {
        uint64_t v254 = *(void *)(v209 + 16);
        BOOL v122 = __OFADD__(v254, v244);
        uint64_t v255 = v254 + v244;
        if (v122) {
          goto LABEL_370;
        }
        *(void *)(v209 + 16) = v255;
      }
    }
    else if (v244)
    {
      goto LABEL_367;
    }
    uint64_t v208 = v249 + 1;
    swift_bridgeObjectRelease();
    int64_t v207 = (uint64_t *)v329;
    if (v208 == v339)
    {
      swift_bridgeObjectRelease_n();
LABEL_302:
      unint64_t v352 = v209;
      uint64_t v256 = sub_1C151E92C();
      swift_bridgeObjectRelease();
      unint64_t v352 = (unint64_t)v333;
      sub_1C10475C4(v256);
      uint64_t v257 = sub_1C151E92C();
      uint64_t v178 = (uint64_t)v205;
      swift_bridgeObjectRelease();
      uint64_t v258 = *(void *)(v257 + 16);
      unint64_t v186 = v334;
      int64_t v259 = *(void *)(v334 + 16);
      int64_t v260 = v259 + v258;
      if (__OFADD__(v259, v258)) {
        goto LABEL_371;
      }
      char v261 = swift_isUniquelyReferenced_nonNull_native();
      if ((v261 & 1) == 0 || v260 > *(void *)(v186 + 24) >> 1)
      {
        if (v259 <= v260) {
          int64_t v262 = v259 + v258;
        }
        else {
          int64_t v262 = v259;
        }
        unint64_t v186 = sub_1BFEC5408(v261, v262, 1, v186);
      }
      uint64_t v183 = (uint64_t *)v317;
      if (!*(void *)(v257 + 16))
      {
        if (!v258) {
          goto LABEL_207;
        }
        goto LABEL_372;
      }
      uint64_t v263 = *(void *)(v186 + 16);
      if ((*(void *)(v186 + 24) >> 1) - v263 < v258) {
        goto LABEL_374;
      }
      unint64_t v264 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
      uint64_t v265 = *(void *)(v349 + 72);
      unint64_t v266 = v186 + v264 + v265 * v263;
      if (v257 + v264 < v266 + v265 * v258 && v266 < v257 + v264 + v265 * v258) {
        goto LABEL_387;
      }
      swift_arrayInitWithCopy();
      if (!v258) {
        goto LABEL_207;
      }
      uint64_t v267 = *(void *)(v186 + 16);
      BOOL v122 = __OFADD__(v267, v258);
      uint64_t v268 = v267 + v258;
      if (v122) {
        goto LABEL_379;
      }
      *(void *)(v186 + 16) = v268;
LABEL_207:
      unint64_t v185 = v330 + 1;
      swift_bridgeObjectRelease();
      uint64_t v181 = v348;
      if ((uint64_t *)v185 != v325) {
        goto LABEL_208;
      }
      uint64_t v272 = v178;
      swift_bridgeObjectRelease_n();
LABEL_330:
      unint64_t v352 = v186;
      uint64_t v273 = sub_1C151E92C();
      swift_bridgeObjectRelease();
      unint64_t v352 = v322;
      sub_1C10475C4(v273);
      uint64_t v274 = sub_1C151E92C();
      uint64_t v178 = v272;
      swift_bridgeObjectRelease();
      uint64_t v275 = *(void *)(v274 + 16);
      int64_t v276 = *(void *)(v324 + 16);
      int64_t v277 = v276 + v275;
      if (__OFADD__(v276, v275)) {
        goto LABEL_381;
      }
      char v278 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v279 = v324;
      if ((v278 & 1) == 0 || v277 > *(void *)(v324 + 24) >> 1)
      {
        if (v276 <= v277) {
          int64_t v280 = v276 + v275;
        }
        else {
          int64_t v280 = v276;
        }
        uint64_t v279 = sub_1BFEC5408(v278, v280, 1, v324);
      }
      uint64_t v183 = (uint64_t *)v317;
      uint64_t v281 = *(void *)(v274 + 16);
      unint64_t v324 = v279;
      if (v281)
      {
        uint64_t v282 = *(void *)(v279 + 16);
        if ((*(void *)(v279 + 24) >> 1) - v282 >= v275)
        {
          unint64_t v283 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
          uint64_t v284 = *(void *)(v349 + 72);
          unint64_t v285 = v279 + v283 + v284 * v282;
          if (v274 + v283 >= v285 + v284 * v275 || v285 >= v274 + v283 + v284 * v275)
          {
            swift_arrayInitWithCopy();
            if (!v275) {
              goto LABEL_345;
            }
            uint64_t v286 = *(void *)(v324 + 16);
            BOOL v122 = __OFADD__(v286, v275);
            uint64_t v287 = v286 + v275;
            if (!v122)
            {
              *(void *)(v324 + 16) = v287;
              goto LABEL_345;
            }
LABEL_385:
            __break(1u);
LABEL_386:
            __break(1u);
          }
LABEL_387:
          sub_1C152052C();
          __break(1u);
          JUMPOUT(0x1C0F9F4A4);
        }
LABEL_383:
        __break(1u);
LABEL_384:
        __break(1u);
        goto LABEL_385;
      }
      if (v275) {
        goto LABEL_382;
      }
LABEL_345:
      unint64_t v182 = v319 + 1;
      swift_bridgeObjectRelease();
      uint64_t v181 = v348;
      if (v182 == v318)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v298 = v324;
        goto LABEL_349;
      }
      goto LABEL_204;
    }
  }
  uint64_t v227 = (char *)(v224 + v335);
  swift_bridgeObjectRetain();
  unint64_t v228 = v50;
  while (2)
  {
    sub_1C1014404((uint64_t *)&v352);
    unint64_t v229 = v352;
    uint64_t v230 = *(void *)(v352 + 16);
    int64_t v231 = *(void *)(v228 + 16);
    uint64_t v232 = v231 + v230;
    if (__OFADD__(v231, v230))
    {
      __break(1u);
LABEL_353:
      __break(1u);
LABEL_354:
      __break(1u);
      goto LABEL_355;
    }
    int v233 = swift_isUniquelyReferenced_nonNull_native();
    if (!v233 || v232 > *(void *)(v228 + 24) >> 1)
    {
      if (v231 <= v232) {
        int64_t v234 = v231 + v230;
      }
      else {
        int64_t v234 = v231;
      }
      unint64_t v228 = sub_1BFEC5408(v233, v234, 1, v228);
    }
    uint64_t v4 = v350;
    if (!*(void *)(v229 + 16))
    {
      if (v230) {
        goto LABEL_353;
      }
      goto LABEL_265;
    }
    uint64_t v235 = *(void *)(v228 + 16);
    if ((*(void *)(v228 + 24) >> 1) - v235 < v230) {
      goto LABEL_354;
    }
    unint64_t v236 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
    uint64_t v237 = *(void *)(v349 + 72);
    unint64_t v238 = v228 + v236 + v237 * v235;
    if (v229 + v236 < v238 + v237 * v230 && v238 < v229 + v236 + v237 * v230) {
      goto LABEL_387;
    }
    swift_arrayInitWithCopy();
    if (!v230)
    {
LABEL_265:
      swift_bridgeObjectRelease();
      v227 += v348;
      if (!--v226)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_285;
      }
      continue;
    }
    break;
  }
  uint64_t v240 = *(void *)(v228 + 16);
  BOOL v122 = __OFADD__(v240, v230);
  uint64_t v241 = v240 + v230;
  if (!v122)
  {
    *(void *)(v228 + 16) = v241;
    goto LABEL_265;
  }
  __break(1u);
LABEL_364:
  uint64_t v346 = v205;
  char v347 = v227;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFECFF70((uint64_t)v313, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  sub_1BFECFF70(v304, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
LABEL_365:
  sub_1C025EF94(v350, v226);
  sub_1C025EF94(v225, v232);
LABEL_177:
  char v176 = 0;
  return v176 & 1;
}

uint64_t sub_1C0F9F514(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F9F5C0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F9F558(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C0F9F5C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151ED5C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0F9F614(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F9F65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenericDataVisualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F9F6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0FA6F20(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v57 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v59 = (_DWORD *)((char *)&v57 - v9);
  sub_1C0FA6F20(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v57 - v14;
  uint64_t v16 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v58 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v60 = (uint64_t)&v57 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v57 - v22;
  uint64_t v25 = v24;
  sub_1BFF23504(a1, (uint64_t)v15, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t v26 = v17;
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v27(v15, 1, v25) == 1)
  {
    sub_1C0FA6CF0((uint64_t)v15, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return sub_1BFF23504(a2, a3, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  }
  sub_1C0FA6DAC((uint64_t)v15, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
  sub_1BFF23504(a2, (uint64_t)v12, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v27(v12, 1, v25) == 1)
  {
    sub_1C0FA6CF0((uint64_t)v12, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    sub_1C0FA6DAC((uint64_t)v23, a3, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a3, 0, 1, v25);
  }
  uint64_t v29 = v25;
  uint64_t v30 = v60;
  sub_1C0FA6DAC((uint64_t)v12, v60, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t v31 = *((void *)v23 + 1);
  uint64_t v32 = v23;
  uint64_t v33 = (int *)v30;
  uint64_t v34 = *(void *)(v30 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v35 = sub_1C00AC6B0(v31, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v36 = a3;
  swift_bridgeObjectRetain();
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C01B0924(v37, v31);
  int v39 = *v32;
  int v40 = 0x7FFFFFFF;
  if (*v32 == 0x7FFFFFFF)
  {
    int v42 = 0x7FFFFFFF;
    uint64_t v43 = (uint64_t)v58;
    uint64_t v44 = (uint64_t)v59;
    goto LABEL_13;
  }
  int v41 = *v33;
  int v42 = 0x7FFFFFFF;
  uint64_t v43 = (uint64_t)v58;
  uint64_t v44 = (uint64_t)v59;
  if (*v33 != 0x7FFFFFFF)
  {
    int v42 = v39 + v41;
    if (__OFADD__(v39, v41))
    {
      __break(1u);
LABEL_11:
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      *uint64_t v45 = 0xD000000000000028;
      v45[1] = 0x80000001C15FCFB0;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1C0FA6D4C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      return sub_1C0FA6D4C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
    }
  }
LABEL_13:
  int v46 = v32[1];
  if (v46 == 0x7FFFFFFF)
  {
LABEL_18:
    uint64_t v48 = (uint64_t)v57;
    goto LABEL_19;
  }
  int v47 = v33[1];
  uint64_t v48 = (uint64_t)v57;
  if (v47 != 0x7FFFFFFF)
  {
    int v40 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
      goto LABEL_18;
    }
  }
LABEL_19:
  LODWORD(v57) = v42;
  unint64_t v58 = (char *)v38;
  unint64_t v59 = v32;
  uint64_t v49 = v29;
  uint64_t v50 = (uint64_t)v32 + *(int *)(v29 + 36);
  uint64_t v51 = v48;
  sub_1BFF23504(v50, v48, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  sub_1BFEBABBC(v60, v43, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t v52 = v43;
  uint64_t v53 = sub_1C1518CDC();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v51, 1, v53) == 1)
  {
    uint64_t v55 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
    sub_1BFF23504(v52 + *(int *)(v49 + 36), v44, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    sub_1C0FA6D4C(v52, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
    sub_1C0FA6CF0(v51, (unint64_t *)&qword_1EB884FE0, v55);
  }
  else
  {
    sub_1C0FA6D4C(v52, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v44, v51, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v44, 0, 1, v53);
  }
  sub_1C0FA6D4C(v60, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
  sub_1C0FA6D4C((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
  *(_DWORD *)uint64_t v36 = v57;
  *(_DWORD *)(v36 + 4) = v40;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  *(void *)(v36 + 8) = v58;
  *(void *)(v36 + 16) = v56;
  *(void *)(v36 + 24) = 0;
  *(void *)(v36 + 32) = 0;
  sub_1BFEF6F58(v44, v36 + *(int *)(v49 + 36));
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v36, 0, 1, v49);
}

uint64_t sub_1C0F9FDA8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v104 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  uint64_t v106 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v10 = (char *)v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v92 - v12;
  sub_1C0FA6F20(0, &qword_1EA1A99D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v105 = (uint64_t)v92 - v15;
  uint64_t v16 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v92 - v20;
  sub_1C0FA6F20(0, &qword_1EA199748, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v102 = (char *)v92 - v23;
  uint64_t v117 = a2[5];
  uint64_t v24 = sub_1C0FA6284(v117);
  if (!v24) {
    goto LABEL_63;
  }
  uint64_t v96 = a3;
  unsigned int v25 = *((unsigned __int16 *)v24 + 30);
  if (v25 >> 13
    || (unint64_t v26 = v24[4], (v24[4] & 0xC0) != 0x80)
    || *((_OWORD *)v24 + 1) != 0
    || v24[4] != 128)
  {
    swift_release();
LABEL_63:
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    *uint64_t v79 = 0xD000000000000027;
    v79[1] = 0x80000001C16308B0;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  unint64_t v98 = v21;
  unint64_t v94 = v18;
  unint64_t v95 = v13;
  uint64_t v99 = v10;
  uint64_t v103 = v3;
  v92[0] = a1;
  uint64_t v93 = a2;
  uint64_t v27 = v24[5];
  unint64_t v28 = v24[6];
  uint64_t v29 = (uint64_t)v24;
  uint64_t v30 = *((unsigned int *)v24 + 14) | ((unint64_t)(unsigned __int16)v25 << 32);
  uint64_t v112 = (void *)MEMORY[0x1E4FBC868];
  swift_beginAccess();
  v92[1] = v29;
  unint64_t v31 = *(void *)(v29 + 64);
  if (v31 >> 62) {
    goto LABEL_74;
  }
  uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1C0FA6C98(0, 0, v26, v27, v28, v30);
  swift_bridgeObjectRetain();
  if (v32) {
    goto LABEL_8;
  }
LABEL_16:
  while (2)
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = v93[1];
    uint64_t v36 = *(void *)(v35 + 56);
    uint64_t v100 = v35 + 56;
    uint64_t v37 = 1 << *(unsigned char *)(v35 + 32);
    uint64_t v38 = -1;
    if (v37 < 64) {
      uint64_t v38 = ~(-1 << v37);
    }
    unint64_t v26 = v38 & v36;
    int64_t v101 = (unint64_t)(v37 + 63) >> 6;
    unint64_t v108 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v106 + 48);
    uint64_t v109 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56);
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    uint64_t v30 = v104;
    uint64_t v39 = v105;
    unint64_t v31 = (unint64_t)v102;
    uint64_t v107 = v35;
    while (v26)
    {
      unint64_t v40 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      unint64_t v41 = v40 | (v27 << 6);
LABEL_33:
      uint64_t v45 = (unint64_t *)(*(void *)(v35 + 48) + 16 * v41);
      unint64_t v28 = *v45;
      uint64_t v46 = v45[1];
      uint64_t v47 = (uint64_t)v112;
      uint64_t v48 = v112[2];
      unint64_t v110 = v28;
      if (v48)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v49 = sub_1BFEF2D8C(v28, v46);
        if (v50)
        {
          uint64_t v51 = *(void *)(v47 + 56);
          uint64_t v52 = v106;
          sub_1BFEBABBC(v51 + *(void *)(v106 + 72) * v49, v31, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v52 + 56))(v31, 0, 1, v30);
        }
        else
        {
          (*v109)(v31, 1, 1, v30);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*v109)(v31, 1, 1, v30);
        swift_bridgeObjectRetain();
      }
      if ((*v108)(v31, 1, v30) == 1)
      {
        sub_1C0FA6CF0(v31, &qword_1EA199748, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
        uint64_t v53 = *(void *)(v103 + 16);
        if (!*(void *)(v53 + 16))
        {
          uint64_t v60 = type metadata accessor for FormatCompilingSlotDefinition(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v39, 1, 1, v60);
          goto LABEL_46;
        }
        swift_bridgeObjectRetain();
        unint64_t v54 = sub_1BFEF2D8C(v110, v46);
        if (v55)
        {
          unint64_t v56 = v54;
          unint64_t v28 = *(void *)(v53 + 56);
          uint64_t v57 = type metadata accessor for FormatCompilingSlotDefinition(0);
          uint64_t v58 = *(void *)(v57 - 8);
          uint64_t v97 = v5;
          uint64_t v59 = v58;
          uint64_t v39 = v105;
          sub_1BFEBABBC(v28 + *(void *)(v58 + 72) * v56, v105, type metadata accessor for FormatCompilingSlotDefinition);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v39, 0, 1, v57);
          uint64_t v5 = v97;
        }
        else
        {
          uint64_t v57 = type metadata accessor for FormatCompilingSlotDefinition(0);
          uint64_t v39 = v105;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v105, 1, 1, v57);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for FormatCompilingSlotDefinition(0);
        int v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v39, 1, v57);
        uint64_t v30 = v104;
        unint64_t v31 = (unint64_t)v102;
        if (v61 == 1)
        {
LABEL_46:
          sub_1C0FA6CF0(v39, &qword_1EA1A99D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
          swift_bridgeObjectRelease();
          uint64_t v35 = v107;
        }
        else
        {
          uint64_t v62 = (uint64_t)v94;
          sub_1BFEBABBC(v39, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          sub_1C0FA6D4C(v39, type metadata accessor for FormatCompilingSlotDefinition);
          uint64_t v63 = v62;
          uint64_t v64 = (uint64_t)v98;
          sub_1C0FA6DAC(v63, (uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          uint64_t v65 = v64;
          uint64_t v30 = (uint64_t)v95;
          sub_1BFEBABBC(v65, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          sub_1C0FA6DAC(v30, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
          uint64_t v66 = (uint64_t)v112;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v111 = (void *)v66;
          unint64_t v28 = sub_1BFEF2D8C(v110, v46);
          uint64_t v69 = *(void *)(v66 + 16);
          BOOL v70 = (v68 & 1) == 0;
          uint64_t v71 = v69 + v70;
          if (__OFADD__(v69, v70)) {
            goto LABEL_71;
          }
          uint64_t v30 = v68;
          if (*(void *)(v66 + 24) >= v71)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1C106EE0C();
            }
          }
          else
          {
            sub_1C105ADDC(v71, isUniquelyReferenced_nonNull_native);
            unint64_t v72 = sub_1BFEF2D8C(v110, v46);
            if ((v30 & 1) != (v73 & 1))
            {
              uint64_t result = sub_1C1520CFC();
              __break(1u);
              return result;
            }
            unint64_t v28 = v72;
          }
          uint64_t v39 = v105;
          uint64_t v74 = v110;
          uint64_t v75 = v111;
          if (v30)
          {
            sub_1C0FA6E14((uint64_t)v99, v111[7] + *(void *)(v106 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
          }
          else
          {
            v111[(v28 >> 6) + 8] |= 1 << v28;
            uint64_t v76 = (uint64_t *)(v75[6] + 16 * v28);
            *uint64_t v76 = v74;
            v76[1] = v46;
            sub_1C0FA6DAC((uint64_t)v99, v75[7] + *(void *)(v106 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
            uint64_t v77 = v75[2];
            BOOL v42 = __OFADD__(v77, 1);
            uint64_t v78 = v77 + 1;
            if (v42) {
              goto LABEL_73;
            }
            v75[2] = v78;
            swift_bridgeObjectRetain();
          }
          uint64_t v30 = v104;
          uint64_t v112 = v75;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C0FA6D4C((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          uint64_t v35 = v107;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C0FA6CF0(v31, &qword_1EA199748, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
        uint64_t v35 = v107;
      }
    }
    BOOL v42 = __OFADD__(v27++, 1);
    if (v42)
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v27 >= v101)
    {
LABEL_64:
      uint64_t v81 = v93;
      swift_release();
      uint64_t v82 = swift_bridgeObjectRetain();
      uint64_t v83 = sub_1BFD35AC4(v82);
      if (*(void *)(v35 + 16) <= *(void *)(v83 + 16) >> 3)
      {
        unint64_t v111 = (void *)v83;
        sub_1C0A8BCFC(v35);
        swift_release();
        uint64_t v84 = (uint64_t)v111;
      }
      else
      {
        uint64_t v84 = sub_1BFC63BD0(v35, v83);
        swift_release();
      }
      uint64_t v85 = v96;
      sub_1BFEBABBC(v92[0], v96, (uint64_t (*)(void))sub_1BFFE6334);
      uint64_t v86 = *v81;
      uint64_t v87 = v81[3];
      uint64_t v115 = v81[2];
      uint64_t v116 = v86;
      uint64_t v113 = v81[4];
      uint64_t v114 = v87;
      uint64_t v88 = (uint64_t)v112;
      uint64_t v89 = (int *)type metadata accessor for FormatDerivedDataBinderResult();
      unint64_t v90 = (_OWORD *)(v85 + v89[5]);
      long long v91 = *((_OWORD *)v81 + 1);
      *unint64_t v90 = *(_OWORD *)v81;
      v90[1] = v91;
      v90[2] = *((_OWORD *)v81 + 2);
      *(void *)(v85 + v89[6]) = v88;
      *(void *)(v85 + v89[7]) = v84;
      swift_bridgeObjectRetain();
      sub_1BFFAF7A4((uint64_t)&v116);
      sub_1BFFAF7A4((uint64_t)&v115);
      sub_1BFFAF7A4((uint64_t)&v114);
      sub_1BFFAF7A4((uint64_t)&v113);
      return sub_1BFFAF7A4((uint64_t)&v117);
    }
    unint64_t v43 = *(void *)(v100 + 8 * v27);
    if (v43)
    {
LABEL_32:
      unint64_t v26 = (v43 - 1) & v43;
      unint64_t v41 = __clz(__rbit64(v43)) + (v27 << 6);
      goto LABEL_33;
    }
    uint64_t v44 = v27 + 1;
    if (v27 + 1 >= v101) {
      goto LABEL_64;
    }
    unint64_t v43 = *(void *)(v100 + 8 * v44);
    if (v43) {
      goto LABEL_31;
    }
    uint64_t v44 = v27 + 2;
    if (v27 + 2 >= v101) {
      goto LABEL_64;
    }
    unint64_t v43 = *(void *)(v100 + 8 * v44);
    if (v43) {
      goto LABEL_31;
    }
    uint64_t v44 = v27 + 3;
    if (v27 + 3 >= v101) {
      goto LABEL_64;
    }
    unint64_t v43 = *(void *)(v100 + 8 * v44);
    if (v43)
    {
LABEL_31:
      uint64_t v27 = v44;
      goto LABEL_32;
    }
    while (1)
    {
      uint64_t v27 = v44 + 1;
      if (__OFADD__(v44, 1)) {
        break;
      }
      if (v27 >= v101) {
        goto LABEL_64;
      }
      unint64_t v43 = *(void *)(v100 + 8 * v27);
      ++v44;
      if (v43) {
        goto LABEL_32;
      }
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    sub_1C0FA6C98(0, 0, v26, v27, v28, v30);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C15204BC();
    if (!v32) {
      continue;
    }
    break;
  }
LABEL_8:
  unint64_t v26 = v31 & 0xC000000000000001;
  uint64_t v33 = 4;
  while (1)
  {
    uint64_t v34 = v33 - 4;
    if (v26)
    {
      uint64_t v30 = MEMORY[0x1C18C7CB0](v33 - 4, v31);
      uint64_t v27 = v33 - 3;
      if (__OFADD__(v34, 1)) {
        goto LABEL_70;
      }
    }
    else
    {
      uint64_t v30 = *(void *)(v31 + 8 * v33);
      swift_retain();
      uint64_t v27 = v33 - 3;
      if (__OFADD__(v34, 1))
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
    }
    sub_1C0FA09C4(v30, (uint64_t *)&v112);
    if (v5) {
      break;
    }
    swift_release();
    ++v33;
    if (v27 == v32) {
      goto LABEL_16;
    }
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0FA09C4(uint64_t a1, uint64_t *a2)
{
  sub_1C0FA6F20(0, &qword_1EA199748, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v60 - v6;
  uint64_t v8 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FA6F20(0, &qword_1EA1A99D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = type metadata accessor for FormatCompilingSlotDefinition(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v19 = *(unsigned __int16 *)(a1 + 60);
  if ((v19 >> 13) - 1 < 3) {
    goto LABEL_2;
  }
  if (v19 >> 13)
  {
    swift_beginAccess();
    unint64_t v38 = *(void *)(a1 + 64);
    if (v38 >> 62) {
      goto LABEL_39;
    }
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v39) {
      return swift_bridgeObjectRelease();
    }
LABEL_11:
    unint64_t v40 = a2;
    uint64_t v41 = 4;
    while (1)
    {
      a2 = (uint64_t *)(v41 - 4);
      if ((v38 & 0xC000000000000001) != 0)
      {
        uint64_t v42 = MEMORY[0x1C18C7CB0](v41 - 4, v38);
        uint64_t v43 = v41 - 3;
        if (__OFADD__(a2, 1)) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(v38 + 8 * v41);
        swift_retain();
        uint64_t v43 = v41 - 3;
        if (__OFADD__(a2, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          swift_bridgeObjectRetain();
          uint64_t v39 = sub_1C15204BC();
          if (!v39) {
            return swift_bridgeObjectRelease();
          }
          goto LABEL_11;
        }
      }
      sub_1C0FA09C4(v42, v40);
      swift_release();
      if (!v2)
      {
        ++v41;
        if (v43 != v39) {
          continue;
        }
      }
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v22 = *(void *)(a1 + 32);
  if (v22 >= 0x40u)
  {
LABEL_2:
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    *uint64_t v20 = 0xD00000000000004DLL;
    v20[1] = 0x80000001C16308E0;
LABEL_3:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v62 = a2;
  uint64_t v24 = *(void *)(a1 + 16);
  unint64_t v23 = *(void *)(a1 + 24);
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v65 = *(void *)(a1 + 48);
  uint64_t v66 = v25;
  unint64_t v64 = *(unsigned int *)(a1 + 56) | ((unint64_t)(unsigned __int16)v19 << 32);
  unint64_t v26 = *(void *)(v73 + 16);
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v69 = v24;
  unint64_t v70 = v23;
  uint64_t v67 = v22;
  unint64_t v68 = v26;
  if (v27)
  {
    int v61 = v18;
    uint64_t v63 = v10;
    unint64_t v28 = v23;
    unsigned __int8 v29 = v22;
    sub_1C00F5ACC(v24, v23, v22);
    unint64_t v30 = v28;
    unsigned __int8 v31 = v29;
    uint64_t v32 = v28;
    uint64_t v33 = v24;
    sub_1C00F5ACC(v24, v30, v31);
    uint64_t v34 = v32;
    unint64_t v35 = v68;
    unint64_t v36 = sub_1BFEF2D8C(v24, v34);
    if (v37)
    {
      sub_1BFEBABBC(*(void *)(v35 + 56) + *(void *)(v15 + 72) * v36, (uint64_t)v13, type metadata accessor for FormatCompilingSlotDefinition);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    }
    unsigned __int8 v46 = v67;
    sub_1C0368EB4(v33, v70, v67, v66, v65, v64);
    uint64_t v10 = v63;
    uint64_t v18 = v61;
  }
  else
  {
    unint64_t v44 = v23;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(v13, 1, 1, v14, v16);
    unint64_t v45 = v44;
    unsigned __int8 v46 = v67;
    sub_1C00F5ACC(v69, v45, v67);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C0FA6CF0((uint64_t)v13, &qword_1EA1A99D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    uint64_t v48 = v47;
    uint64_t v49 = swift_bridgeObjectRetain();
    uint64_t v50 = sub_1C00B152C(v49);
    swift_bridgeObjectRelease();
    *uint64_t v48 = 0;
    v48[1] = 0xE000000000000000;
    unint64_t v51 = v70;
    _OWORD v48[2] = v69;
    v48[3] = v51;
    v48[4] = v50;
    goto LABEL_3;
  }
  sub_1C0FA6DAC((uint64_t)v13, (uint64_t)v18, type metadata accessor for FormatCompilingSlotDefinition);
  uint64_t v53 = v69;
  unint64_t v52 = v70;
  sub_1C0FA1140(v62, v69, v70, v46 & 1, (uint64_t)v18, (uint64_t)v10);
  if (v2)
  {
    sub_1C0FA6D4C((uint64_t)v18, type metadata accessor for FormatCompilingSlotDefinition);
    return sub_1C0368EB4(v53, v52, v46, v66, v65, v64);
  }
  swift_beginAccess();
  unint64_t v54 = *(void *)(a1 + 64);
  if (v54 >> 62) {
    goto LABEL_42;
  }
  uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v55)
  {
LABEL_29:
    unint64_t v56 = v54 & 0xC000000000000001;
    uint64_t v57 = 4;
    uint64_t v63 = v7;
    unint64_t v68 = v54;
    do
    {
      uint64_t v58 = v57 - 4;
      if (v56)
      {
        unint64_t v54 = MEMORY[0x1C18C7CB0](v57 - 4, v54);
        uint64_t v7 = (char *)(v57 - 3);
        if (__OFADD__(v58, 1)) {
          goto LABEL_41;
        }
      }
      else
      {
        unint64_t v54 = *(void *)(v54 + 8 * v57);
        swift_retain();
        uint64_t v7 = (char *)(v57 - 3);
        if (__OFADD__(v58, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          swift_bridgeObjectRetain();
          uint64_t v55 = sub_1C15204BC();
          if (!v55) {
            break;
          }
          goto LABEL_29;
        }
      }
      sub_1C0FA1448((void *)v54, (uint64_t)v10);
      swift_release();
      ++v57;
      BOOL v59 = v7 == (char *)v55;
      uint64_t v7 = v63;
      unint64_t v54 = v68;
    }
    while (!v59);
  }
  swift_bridgeObjectRelease();
  sub_1BFEBABBC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v7, 0, 1, v72);
  sub_1C02E81E4((uint64_t)v7, v69, v70);
  sub_1C0FA6D4C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
  return sub_1C0FA6D4C((uint64_t)v18, type metadata accessor for FormatCompilingSlotDefinition);
}

uint64_t sub_1C0FA1140@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  int v24 = a4;
  sub_1C0FA6F20(0, &qword_1EA199748, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v23[-v11];
  uint64_t v13 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = *a1;
  if (!*(void *)(v18 + 16))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(v12, 1, 1, v13, v15);
LABEL_7:
    sub_1C0FA6CF0((uint64_t)v12, &qword_1EA199748, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    return sub_1BFEBABBC(v25, a6, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1BFEF2D8C(a2, a3);
  if (v20)
  {
    sub_1BFEBABBC(*(void *)(v18 + 56) + *(void *)(v14 + 72) * v19, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    goto LABEL_7;
  }
  sub_1C0FA6DAC((uint64_t)v12, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
  if (v24) {
    return sub_1C0FA6DAC((uint64_t)v17, a6, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1C00DAB28();
  swift_allocError();
  *uint64_t v22 = a2;
  v22[1] = a3;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_willThrow();
  return sub_1C0FA6D4C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

uint64_t sub_1C0FA1448(void *a1, uint64_t a2)
{
  uint64_t v78 = a2;
  uint64_t v4 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1F4188790](v4);
  uint64_t v79 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FA6F20(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v75 = (uint64_t)&v70 - v7;
  uint64_t v8 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1F4188790](v8);
  uint64_t v93 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v76 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v70 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v71 = (char *)&v70 - v13;
  uint64_t v14 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1F4188790](v17);
  uint64_t v77 = (uint64_t *)((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0368E18((uint64_t)(a1 + 2), (uint64_t)v82);
  unint64_t v19 = (void *)a1[2];
  unint64_t v73 = a1[3];
  uint64_t v74 = v19;
  uint64_t v72 = a1[4];
  sub_1C0368E18((uint64_t)v82, (uint64_t)&v83);
  unint64_t v20 = DWORD2(v84[1]) | ((unint64_t)WORD6(v84[1]) << 32);
  switch(WORD6(v84[1]) >> 13)
  {
    case 1:
      uint64_t v74 = v16;
      WORD6(v84[1]) = WORD2(v20) & 0x1FFF;
      long long v86 = v83;
      char v87 = v84[0];
      uint64_t v42 = v93;
      uint64_t v43 = *(void (**)(void))(v76 + 56);
      uint64_t v77 = (void *)(v93 + *(int *)(v8 + 20));
      v43();
      unint64_t v73 = v42 + *(int *)(v8 + 24);
      v43();
      *(_OWORD *)uint64_t v42 = v86;
      *(unsigned char *)(v42 + 16) = v87;
      swift_beginAccess();
      unint64_t v23 = a1[8];
      if (v23 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_1C15204BC();
        uint64_t v79 = v10;
        if (!v44) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v44 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v79 = v10;
        if (!v44) {
          goto LABEL_24;
        }
      }
      uint64_t v45 = 4;
      do
      {
        uint64_t v46 = v45 - 4;
        if ((v23 & 0xC000000000000001) != 0)
        {
          uint64_t v47 = MEMORY[0x1C18C7CB0](v45 - 4, v23);
          BOOL v28 = __OFADD__(v46, 1);
          uint64_t v48 = v45 - 3;
          if (v28) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v47 = *(void *)(v23 + 8 * v45);
          swift_retain();
          BOOL v28 = __OFADD__(v46, 1);
          uint64_t v48 = v45 - 3;
          if (v28)
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
        }
        sub_1C0FA2C24(v47, v93);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return sub_1C0FA6D4C(v93, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSwitchResult);
        }
        swift_release();
        ++v45;
      }
      while (v48 != v44);
LABEL_24:
      swift_bridgeObjectRelease();
      uint64_t v49 = v75;
      sub_1BFF23504((uint64_t)v77, v75, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v49, 1, v79) == 1)
      {
        sub_1C0FA6CF0(v49, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      }
      else
      {
        uint64_t v67 = v70;
        sub_1C0FA6DAC(v49, v70, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        unint64_t v68 = v74;
        uint64_t v69 = v78;
        sub_1C11F8584(v67, v73, v74);
        sub_1C0FA6D4C(v67, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1C0FA6E14((uint64_t)v68, v69, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      }
      return sub_1C0FA6D4C(v93, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSwitchResult);
    case 2:
      WORD6(v84[1]) = WORD2(v20) & 0x1FFF;
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      void *v50 = 0xD000000000000024;
      v50[1] = 0x80000001C1630930;
      goto LABEL_50;
    case 3:
      WORD6(v84[1]) = WORD2(v20) & 0x1FFF;
      long long v88 = v83;
      v89[0] = v84[0];
      *(_OWORD *)((char *)v89 + 14) = *(_OWORD *)((char *)v84 + 14);
      unint64_t v51 = (_OWORD *)v79;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v79 + *(int *)(v4 + 20), 1, 1, v10);
      long long v52 = v89[0];
      *unint64_t v51 = v88;
      v51[1] = v52;
      *(_OWORD *)((char *)v51 + 30) = *(_OWORD *)((char *)v89 + 14);
      swift_beginAccess();
      unint64_t v23 = a1[8];
      if (v23 >> 62) {
        goto LABEL_62;
      }
      uint64_t v53 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      if (v53) {
        goto LABEL_29;
      }
      goto LABEL_37;
    case 4:
      WORD6(v84[1]) = WORD2(v20) & 0x1FFF;
      swift_beginAccess();
      unint64_t v59 = a1[8];
      if (v59 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_1C15204BC();
        if (!v23) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        unint64_t v23 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23) {
          return swift_bridgeObjectRelease();
        }
      }
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v61 = i - 4;
        if ((v59 & 0xC000000000000001) != 0)
        {
          uint64_t v62 = MEMORY[0x1C18C7CB0](i - 4, v59);
          BOOL v28 = __OFADD__(v61, 1);
          uint64_t v63 = i - 3;
          if (v28) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v62 = *(void *)(v59 + 8 * i);
          swift_retain();
          BOOL v28 = __OFADD__(v61, 1);
          uint64_t v63 = i - 3;
          if (v28) {
            goto LABEL_60;
          }
        }
        sub_1C0FA1448(v62, v78);
        if (v2) {
          break;
        }
        swift_release();
        if (v63 == v23) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_release();
      return swift_bridgeObjectRelease();
    default:
      WORD6(v84[1]) = WORD2(v20) & 0x1FFF;
      sub_1C0FA6E7C((uint64_t)&v83, (uint64_t)v85);
      sub_1C0FA6E7C((uint64_t)v85, (uint64_t)v90);
      if ((v91 & 0xC0) == 0x40)
      {
        v91 &= 0x3Fu;
        sub_1BFFF7D34((uint64_t)v90, (uint64_t)v92);
        uint64_t v21 = v77;
        uint64_t v22 = *(void (**)(void))(v76 + 56);
        uint64_t v93 = (uint64_t)v77 + *(int *)(v17 + 20);
        uint64_t v79 = v10;
        v22();
        sub_1BFFF7D34((uint64_t)v92, (uint64_t)v21);
        swift_beginAccess();
        unint64_t v23 = a1[8];
        if (v23 >> 62)
        {
          sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
          sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_1C15204BC();
          uint64_t v74 = v16;
          if (!v24) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
          sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
          sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
          swift_bridgeObjectRetain();
          uint64_t v74 = v16;
          if (!v24)
          {
LABEL_13:
            swift_bridgeObjectRelease();
            sub_1C0AD708C();
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
            unsigned __int8 v31 = v77;
            uint64_t v32 = *v77;
            unint64_t v33 = v77[1];
            *(void *)(inited + 32) = *v77;
            *(void *)(inited + 40) = v33;
            sub_1BFE74E64(v32, v33);
            uint64_t v34 = sub_1C00B8CBC(inited);
            swift_setDeallocating();
            swift_arrayDestroy();
            unint64_t v35 = v71;
            unint64_t v36 = &v71[*(int *)(v79 + 36)];
            uint64_t v37 = sub_1C1518CDC();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
            *unint64_t v35 = 0x100000001;
            uint64_t v38 = MEMORY[0x1E4FBC860];
            v35[1] = v34;
            v35[2] = v38;
            v35[3] = 0;
            v35[4] = 0;
            uint64_t v39 = v74;
            uint64_t v40 = v78;
            sub_1C11F8584((uint64_t)v35, v93, v74);
            sub_1C0FA6D4C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1C0FA6E14((uint64_t)v39, v40, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
            sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
            return sub_1C0FA6D4C((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingItemResult);
          }
        }
        uint64_t v25 = 4;
        while (1)
        {
          uint64_t v26 = v25 - 4;
          if ((v23 & 0xC000000000000001) == 0) {
            break;
          }
          uint64_t v27 = MEMORY[0x1C18C7CB0](v25 - 4, v23);
          BOOL v28 = __OFADD__(v26, 1);
          uint64_t v29 = v25 - 3;
          if (v28) {
            goto LABEL_61;
          }
LABEL_11:
          sub_1C0FA212C(v27, (uint64_t)v77);
          swift_release();
          if (v2)
          {
            sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
            swift_bridgeObjectRelease();
            return sub_1C0FA6D4C((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingItemResult);
          }
          ++v25;
          if (v29 == v24) {
            goto LABEL_13;
          }
        }
        uint64_t v27 = *(void *)(v23 + 8 * v25);
        swift_retain();
        BOOL v28 = __OFADD__(v26, 1);
        uint64_t v29 = v25 - 3;
        if (!v28) {
          goto LABEL_11;
        }
LABEL_61:
        __break(1u);
LABEL_62:
        sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v53 = sub_1C15204BC();
        if (!v53)
        {
LABEL_37:
          swift_bridgeObjectRelease();
          uint64_t v58 = v79;
          sub_1C0D0F944();
          return sub_1C0FA6D4C(v58, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingRepeatResult);
        }
LABEL_29:
        uint64_t v54 = 4;
        while (1)
        {
          uint64_t v55 = v54 - 4;
          if ((v23 & 0xC000000000000001) != 0)
          {
            uint64_t v56 = MEMORY[0x1C18C7CB0](v54 - 4, v23);
            BOOL v28 = __OFADD__(v55, 1);
            uint64_t v57 = v54 - 3;
            if (v28) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v56 = *(void *)(v23 + 8 * v54);
            swift_retain();
            BOOL v28 = __OFADD__(v55, 1);
            uint64_t v57 = v54 - 3;
            if (v28)
            {
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
          }
          sub_1C0FA3110(v56, v79);
          if (v2)
          {
            swift_bridgeObjectRelease();
            swift_release();
            return sub_1C0FA6D4C(v79, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingRepeatResult);
          }
          swift_release();
          ++v54;
          if (v57 == v53) {
            goto LABEL_37;
          }
        }
      }
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      uint64_t v65 = v64;
      uint64_t v80 = 0;
      unint64_t v81 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C00F5ACC((uint64_t)v74, v73, v72);
      sub_1C035E36C((uint64_t)v82);
      sub_1C0FA6ED8((uint64_t)v82, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
      unint64_t v66 = v81;
      *uint64_t v65 = v80;
      v65[1] = v66;
LABEL_50:
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
  }
}

uint64_t sub_1C0FA212C(uint64_t a1, uint64_t a2)
{
  unint64_t v66 = (char *)a2;
  uint64_t v4 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (_OWORD *)((char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1F4188790](v7);
  unint64_t v67 = (unint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FA6F20(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v64 - v13;
  uint64_t v15 = type metadata accessor for FormatDerivedDataBindingAuxiliaryResult();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0368E18(a1 + 16, (uint64_t)v70);
  sub_1C0368E18((uint64_t)v70, (uint64_t)&v71);
  unint64_t v18 = DWORD2(v72[1]) | ((unint64_t)WORD6(v72[1]) << 32);
  switch(WORD6(v72[1]) >> 13)
  {
    case 1:
      WORD6(v72[1]) = WORD2(v18) & 0x1FFF;
      long long v74 = v71;
      char v75 = v72[0];
      unint64_t v30 = v67;
      unint64_t v31 = v67 + *(int *)(v7 + 20);
      uint64_t v32 = type metadata accessor for FormatSlotDefinitionItemSet();
      unint64_t v33 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
      v33(v31, 1, 1, v32);
      v33(v30 + *(int *)(v7 + 24), 1, 1, v32);
      *(_OWORD *)unint64_t v30 = v74;
      *(unsigned char *)(v30 + 16) = v75;
      swift_beginAccess();
      unint64_t v22 = *(void *)(a1 + 64);
      if (v22 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_1C15204BC();
        if (v34) {
          goto LABEL_21;
        }
LABEL_29:
        swift_bridgeObjectRelease();
        unint64_t v39 = v67;
        sub_1C034CBAC(v67);
        uint64_t v40 = type metadata accessor for FormatDerivedDataBindingSwitchResult;
        uint64_t v41 = v39;
        return sub_1C0FA6D4C(v41, (uint64_t (*)(void))v40);
      }
      uint64_t v34 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      if (!v34) {
        goto LABEL_29;
      }
LABEL_21:
      uint64_t v35 = 4;
      while (1)
      {
        uint64_t v36 = v35 - 4;
        if ((v22 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v37 = MEMORY[0x1C18C7CB0](v35 - 4, v22);
        BOOL v25 = __OFADD__(v36, 1);
        uint64_t v38 = v35 - 3;
        if (v25) {
          goto LABEL_65;
        }
LABEL_27:
        sub_1C0FA2C24(v37, v67);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v63 = type metadata accessor for FormatDerivedDataBindingSwitchResult;
LABEL_59:
          uint64_t v40 = v63;
          uint64_t v41 = v67;
          return sub_1C0FA6D4C(v41, (uint64_t (*)(void))v40);
        }
        swift_release();
        ++v35;
        if (v38 == v34) {
          goto LABEL_29;
        }
      }
      uint64_t v37 = *(void *)(v22 + 8 * v35);
      swift_retain();
      BOOL v25 = __OFADD__(v36, 1);
      uint64_t v38 = v35 - 3;
      if (!v25) {
        goto LABEL_27;
      }
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C15204BC();
      if (v58)
      {
LABEL_48:
        for (uint64_t i = 4; ; ++i)
        {
          uint64_t v60 = i - 4;
          if ((v22 & 0xC000000000000001) != 0)
          {
            uint64_t v61 = MEMORY[0x1C18C7CB0](i - 4, v22);
            BOOL v25 = __OFADD__(v60, 1);
            uint64_t v62 = i - 3;
            if (v25) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v61 = *(void *)(v22 + 8 * i);
            swift_retain();
            BOOL v25 = __OFADD__(v60, 1);
            uint64_t v62 = i - 3;
            if (v25) {
              goto LABEL_67;
            }
          }
          sub_1C0FA212C(v61, v66);
          if (v2) {
            break;
          }
          swift_release();
          if (v62 == v58) {
            return swift_bridgeObjectRelease();
          }
        }
        swift_release();
      }
      return swift_bridgeObjectRelease();
    case 2:
      WORD6(v72[1]) = WORD2(v18) & 0x1FFF;
      goto LABEL_31;
    case 3:
      WORD6(v72[1]) = WORD2(v18) & 0x1FFF;
      long long v76 = v71;
      v77[0] = v72[0];
      *(_OWORD *)((char *)v77 + 14) = *(_OWORD *)((char *)v72 + 14);
      uint64_t v46 = (char *)v6 + *(int *)(v4 + 20);
      uint64_t v47 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v64 = *(void *)(v47 - 8);
      uint64_t v65 = (char *)v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 56))(v46, 1, 1);
      long long v48 = v77[0];
      _OWORD *v6 = v76;
      v6[1] = v48;
      *(_OWORD *)((char *)v6 + 30) = *(_OWORD *)((char *)v77 + 14);
      swift_beginAccess();
      unint64_t v22 = *(void *)(a1 + 64);
      if (v22 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_1C15204BC();
        unint64_t v66 = v11;
        unint64_t v67 = (unint64_t)v6;
        if (!v49) {
          goto LABEL_42;
        }
      }
      else
      {
        uint64_t v49 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        unint64_t v66 = v11;
        unint64_t v67 = (unint64_t)v6;
        if (!v49) {
          goto LABEL_42;
        }
      }
      uint64_t v50 = 4;
      do
      {
        uint64_t v51 = v50 - 4;
        if ((v22 & 0xC000000000000001) != 0)
        {
          uint64_t v52 = MEMORY[0x1C18C7CB0](v50 - 4, v22);
          BOOL v25 = __OFADD__(v51, 1);
          uint64_t v53 = v50 - 3;
          if (v25) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v52 = *(void *)(v22 + 8 * v50);
          swift_retain();
          BOOL v25 = __OFADD__(v51, 1);
          uint64_t v53 = v50 - 3;
          if (v25) {
            goto LABEL_66;
          }
        }
        sub_1C0FA3110(v52, v67);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v63 = type metadata accessor for FormatDerivedDataBindingRepeatResult;
          goto LABEL_59;
        }
        swift_release();
        ++v50;
      }
      while (v53 != v49);
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v55 = (uint64_t)v66;
      unint64_t v54 = v67;
      sub_1C135A198((uint64_t)v66);
      if (!v2)
      {
        int v56 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v64 + 48))(v55, 1, v65);
        sub_1C0FA6CF0(v55, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        if (v56 != 1)
        {
          type metadata accessor for FormatDerivedDataError();
          sub_1C00DAB28();
          swift_allocError();
          *(unsigned char *)uint64_t v57 = 6;
          *(void *)(v57 + 8) = 0xD00000000000002FLL;
          *(void *)(v57 + 16) = 0x80000001C16309C0;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
      }
      uint64_t v40 = type metadata accessor for FormatDerivedDataBindingRepeatResult;
      uint64_t v41 = v54;
      return sub_1C0FA6D4C(v41, (uint64_t (*)(void))v40);
    case 4:
      WORD6(v72[1]) = WORD2(v18) & 0x1FFF;
      swift_beginAccess();
      unint64_t v22 = *(void *)(a1 + 64);
      if (v22 >> 62) {
        goto LABEL_69;
      }
      uint64_t v58 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v58) {
        goto LABEL_48;
      }
      return swift_bridgeObjectRelease();
    default:
      WORD6(v72[1]) = WORD2(v18) & 0x1FFF;
      sub_1C0FA6E7C((uint64_t)&v71, (uint64_t)v73);
      sub_1C0FA6E7C((uint64_t)v73, (uint64_t)v78);
      if ((v79 & 0xC0) != 0x80 || v79 != 128 || v78[1] || v78[0] != 4)
      {
LABEL_31:
        type metadata accessor for FormatDerivedDataError();
        sub_1C00DAB28();
        swift_allocError();
        uint64_t v43 = v42;
        uint64_t v68 = 0;
        unint64_t v69 = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C035E36C((uint64_t)v70);
        sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
        unint64_t v44 = v69;
        *uint64_t v43 = v68;
        v43[1] = v44;
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
      uint64_t v19 = type metadata accessor for FormatSlotDefinitionItemSet();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
      swift_beginAccess();
      unint64_t v20 = *(void *)(a1 + 64);
      if (v20 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1C15204BC();
        uint64_t v65 = v14;
        if (!v21) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v65 = v14;
        if (!v21) {
          goto LABEL_16;
        }
      }
      unint64_t v67 = v20 & 0xC000000000000001;
      unint64_t v22 = 4;
      do
      {
        unint64_t v23 = v22 - 4;
        if (v67)
        {
          uint64_t v24 = MEMORY[0x1C18C7CB0](v22 - 4, v20);
          BOOL v25 = __OFADD__(v23, 1);
          unint64_t v26 = v22 - 3;
          if (v25) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v24 = *(void *)(v20 + 8 * v22);
          swift_retain();
          BOOL v25 = __OFADD__(v23, 1);
          unint64_t v26 = v22 - 3;
          if (v25) {
            goto LABEL_68;
          }
        }
        sub_1C0FA3E04(v24, (uint64_t)v17);
        swift_release();
        if (v2)
        {
          sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
          swift_bridgeObjectRelease();
          goto LABEL_63;
        }
        ++v22;
      }
      while (v26 != v21);
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v27 = type metadata accessor for FormatDerivedDataBindingItemResult();
      uint64_t v28 = (uint64_t)v65;
      uint64_t v29 = (uint64_t)&v66[*(int *)(v27 + 20)];
      sub_1C0F9F6C4(v29, (uint64_t)v17, (uint64_t)v65);
      if (!v2) {
        sub_1C034D148(v28, v29);
      }
      sub_1C0FA6ED8((uint64_t)v70, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
LABEL_63:
      uint64_t v40 = type metadata accessor for FormatDerivedDataBindingAuxiliaryResult;
      uint64_t v41 = (uint64_t)v17;
      return sub_1C0FA6D4C(v41, (uint64_t (*)(void))v40);
  }
}

uint64_t sub_1C0FA2C24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatDerivedDataBindingSwitchCaseResult();
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (unint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0368E18(a1 + 16, (uint64_t)v31);
  sub_1C0368E18((uint64_t)v31, (uint64_t)v32);
  unint64_t v8 = v33 | ((unint64_t)v34 << 32);
  switch(v34 >> 13)
  {
    case 1:
    case 3:
      unsigned __int16 v34 = WORD2(v8) & 0x1FFF;
      goto LABEL_4;
    case 2:
      uint64_t v38 = a2;
      unsigned __int16 v34 = WORD2(v8) & 0x1FFF;
      long long v36 = v32[1];
      long long v35 = v32[0];
      unint64_t v13 = v7 + *(int *)(v5 + 20);
      uint64_t v14 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v15 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
      v15(v13, 1, 1, v14);
      v15(v7 + *(int *)(v5 + 24), 1, 1, v14);
      long long v16 = v36;
      *(_OWORD *)unint64_t v7 = v35;
      *(_OWORD *)(v7 + 16) = v16;
      swift_beginAccess();
      unint64_t v17 = *(void *)(a1 + 64);
      if (v17 >> 62) {
        goto LABEL_31;
      }
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v31, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      if (v18) {
        goto LABEL_7;
      }
      goto LABEL_15;
    case 4:
      unsigned __int16 v34 = WORD2(v8) & 0x1FFF;
      swift_beginAccess();
      unint64_t v7 = *(void *)(a1 + 64);
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v17 = sub_1C15204BC();
        if (v17) {
          goto LABEL_18;
        }
        return swift_bridgeObjectRelease();
      }
      unint64_t v17 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v17) {
        return swift_bridgeObjectRelease();
      }
LABEL_18:
      uint64_t v24 = 4;
      while (1)
      {
        uint64_t v25 = v24 - 4;
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v26 = MEMORY[0x1C18C7CB0](v24 - 4, v7);
          BOOL v22 = __OFADD__(v25, 1);
          uint64_t v27 = v24 - 3;
          if (v22) {
            break;
          }
          goto LABEL_24;
        }
        uint64_t v26 = *(void *)(v7 + 8 * v24);
        swift_retain();
        BOOL v22 = __OFADD__(v25, 1);
        uint64_t v27 = v24 - 3;
        if (v22) {
          break;
        }
LABEL_24:
        sub_1C0FA2C24(v26, a2);
        swift_release();
        if (!v2)
        {
          ++v24;
          if (v27 != v17) {
            continue;
          }
        }
        return swift_bridgeObjectRelease();
      }
LABEL_30:
      __break(1u);
LABEL_31:
      sub_1C0FA6ED8((uint64_t)v31, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C15204BC();
      if (v18)
      {
LABEL_7:
        uint64_t v19 = 4;
        do
        {
          uint64_t v20 = v19 - 4;
          if ((v17 & 0xC000000000000001) != 0)
          {
            uint64_t v21 = MEMORY[0x1C18C7CB0](v19 - 4, v17);
            BOOL v22 = __OFADD__(v20, 1);
            uint64_t v23 = v19 - 3;
            if (v22) {
              goto LABEL_29;
            }
          }
          else
          {
            uint64_t v21 = *(void *)(v17 + 8 * v19);
            swift_retain();
            BOOL v22 = __OFADD__(v20, 1);
            uint64_t v23 = v19 - 3;
            if (v22)
            {
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
          }
          sub_1C0FA4AA4(v21, v7);
          if (v2)
          {
            swift_bridgeObjectRelease();
            swift_release();
            return sub_1C0FA6D4C(v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSwitchCaseResult);
          }
          swift_release();
          ++v19;
        }
        while (v23 != v18);
      }
LABEL_15:
      swift_bridgeObjectRelease();
      sub_1C0C3B3B4(v7);
      return sub_1C0FA6D4C(v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSwitchCaseResult);
    default:
      unsigned __int16 v34 = WORD2(v8) & 0x1FFF;
      sub_1C0FA6E7C((uint64_t)v32, (uint64_t)v37);
LABEL_4:
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      uint64_t v10 = v9;
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C0FA6ED8((uint64_t)v31, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      sub_1C035E36C((uint64_t)v31);
      sub_1C0FA6ED8((uint64_t)v31, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
      unint64_t v11 = v30;
      *uint64_t v10 = v29;
      v10[1] = v11;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
  }
}

uint64_t sub_1C0FA3110(uint64_t a1, uint64_t a2)
{
  uint64_t v92 = a2;
  uint64_t v4 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1F4188790](v4);
  uint64_t v107 = (uint64_t *)((char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1F4188790](v6);
  uint64_t v93 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FA6F20(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v90 = (uint64_t *)((char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v91 = (uint64_t)&v86 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v87 = (uint64_t)&v86 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v89 = (uint64_t)&v86 - v15;
  MEMORY[0x1F4188790](v16);
  long long v88 = (char *)&v86 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v86 - v19;
  uint64_t v21 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (uint64_t *)((char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0368E18(a1 + 16, (uint64_t)v96);
  sub_1C0368E18((uint64_t)v96, (uint64_t)&v97);
  unint64_t v24 = DWORD2(v98[1]) | ((unint64_t)WORD6(v98[1]) << 32);
  switch(WORD6(v98[1]) >> 13)
  {
    case 1:
      uint64_t v86 = v4;
      WORD6(v98[1]) = WORD2(v24) & 0x1FFF;
      long long v100 = v97;
      char v101 = v98[0];
      uint64_t v50 = *(int *)(v6 + 20);
      uint64_t v51 = (uint64_t)v93;
      uint64_t v107 = (uint64_t *)a1;
      uint64_t v52 = (uint64_t)&v93[v50];
      uint64_t v53 = type metadata accessor for FormatSlotDefinitionItemSet();
      unint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
      uint64_t v91 = v52;
      v54(v52, 1, 1, v53);
      v54(v51 + *(int *)(v6 + 24), 1, 1, v53);
      *(_OWORD *)uint64_t v51 = v100;
      *(unsigned char *)(v51 + 16) = v101;
      uint64_t v55 = v107;
      swift_beginAccess();
      unint64_t v56 = v55[8];
      if (v56 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1C15204BC();
        if (v57) {
          goto LABEL_19;
        }
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v61 = v92 + *(int *)(v86 + 20);
        uint64_t v62 = v89;
        sub_1C0F9F6C4(v61, v91, v89);
        if (!v2) {
          sub_1C034D148(v62, v61);
        }
        goto LABEL_56;
      }
      uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      if (!v57) {
        goto LABEL_27;
      }
LABEL_19:
      unint64_t v30 = 4;
      while (1)
      {
        unint64_t v58 = v30 - 4;
        if ((v56 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v59 = MEMORY[0x1C18C7CB0](v30 - 4, v56);
        BOOL v34 = __OFADD__(v58, 1);
        unint64_t v60 = v30 - 3;
        if (v34) {
          goto LABEL_64;
        }
LABEL_25:
        sub_1C0FA2C24(v59, v93);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_56:
          long long v48 = type metadata accessor for FormatDerivedDataBindingSwitchResult;
          uint64_t v49 = (uint64_t)v93;
          return sub_1C0FA6D4C(v49, (uint64_t (*)(void))v48);
        }
        swift_release();
        ++v30;
        if (v60 == v57) {
          goto LABEL_27;
        }
      }
      uint64_t v59 = *(void *)(v56 + 8 * v30);
      swift_retain();
      BOOL v34 = __OFADD__(v58, 1);
      unint64_t v60 = v30 - 3;
      if (!v34) {
        goto LABEL_25;
      }
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1C15204BC();
      if (v71)
      {
LABEL_33:
        uint64_t v72 = 4;
        while (1)
        {
          uint64_t v73 = v72 - 4;
          if ((v30 & 0xC000000000000001) != 0)
          {
            uint64_t v74 = MEMORY[0x1C18C7CB0](v72 - 4, v30);
            BOOL v34 = __OFADD__(v73, 1);
            uint64_t v75 = v72 - 3;
            if (v34) {
              goto LABEL_65;
            }
          }
          else
          {
            uint64_t v74 = *(void *)(v30 + 8 * v72);
            swift_retain();
            BOOL v34 = __OFADD__(v73, 1);
            uint64_t v75 = v72 - 3;
            if (v34) {
              goto LABEL_65;
            }
          }
          sub_1C0FA3110(v74, v107);
          if (v2) {
            break;
          }
          swift_release();
          ++v72;
          if (v75 == v71) {
            goto LABEL_41;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
LABEL_41:
        swift_bridgeObjectRelease();
        uint64_t v76 = v91;
        uint64_t v77 = v92 + *(int *)(v86 + 20);
        sub_1BFF23504(v77, v91, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v78 = (void (*)(void, void, void))v90;
        sub_1C135A198((uint64_t)v90);
        if (v2)
        {
          sub_1C0FA6CF0(v76, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        }
        else
        {
          uint64_t v79 = v87;
          sub_1C0F9F6C4(v76, (uint64_t)v78, v87);
          sub_1C0FA6CF0((uint64_t)v78, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C0FA6CF0(v76, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C034D148(v79, v77);
        }
      }
      uint64_t v85 = type metadata accessor for FormatDerivedDataBindingRepeatResult;
LABEL_62:
      long long v48 = v85;
      uint64_t v49 = (uint64_t)v107;
      return sub_1C0FA6D4C(v49, (uint64_t (*)(void))v48);
    case 2:
      WORD6(v98[1]) = WORD2(v24) & 0x1FFF;
      goto LABEL_30;
    case 3:
      WORD6(v98[1]) = WORD2(v24) & 0x1FFF;
      long long v102 = v97;
      v103[0] = v98[0];
      *(_OWORD *)((char *)v103 + 14) = *(_OWORD *)((char *)v98 + 14);
      uint64_t v86 = v4;
      unint64_t v67 = v107;
      uint64_t v68 = (char *)v107 + *(int *)(v4 + 20);
      uint64_t v69 = type metadata accessor for FormatSlotDefinitionItemSet();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 1, 1, v69);
      long long v70 = v103[0];
      *(_OWORD *)unint64_t v67 = v102;
      *((_OWORD *)v67 + 1) = v70;
      *(_OWORD *)((char *)v67 + 30) = *(_OWORD *)((char *)v103 + 14);
      swift_beginAccess();
      unint64_t v30 = *(void *)(a1 + 64);
      if (v30 >> 62) {
        goto LABEL_68;
      }
      uint64_t v71 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      if (v71) {
        goto LABEL_33;
      }
      goto LABEL_41;
    case 4:
      WORD6(v98[1]) = WORD2(v24) & 0x1FFF;
      swift_beginAccess();
      unint64_t v30 = *(void *)(a1 + 64);
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v80 = sub_1C15204BC();
        if (!v80) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v80 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v80) {
          return swift_bridgeObjectRelease();
        }
      }
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v82 = i - 4;
        if ((v30 & 0xC000000000000001) != 0)
        {
          uint64_t v83 = MEMORY[0x1C18C7CB0](i - 4, v30);
          BOOL v34 = __OFADD__(v82, 1);
          uint64_t v84 = i - 3;
          if (v34) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v83 = *(void *)(v30 + 8 * i);
          swift_retain();
          BOOL v34 = __OFADD__(v82, 1);
          uint64_t v84 = i - 3;
          if (v34) {
            goto LABEL_66;
          }
        }
        sub_1C0FA3110(v83, v92);
        if (v2) {
          break;
        }
        swift_release();
        if (v84 == v80) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_release();
      return swift_bridgeObjectRelease();
    default:
      WORD6(v98[1]) = WORD2(v24) & 0x1FFF;
      sub_1C0FA6E7C((uint64_t)&v97, (uint64_t)v99);
      sub_1C0FA6E7C((uint64_t)v99, (uint64_t)v104);
      if ((v105 & 0xC0) != 0x40)
      {
LABEL_30:
        type metadata accessor for FormatDerivedDataError();
        sub_1C00DAB28();
        swift_allocError();
        uint64_t v64 = v63;
        uint64_t v94 = 0;
        unint64_t v95 = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C035E36C((uint64_t)v96);
        sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
        unint64_t v65 = v95;
        void *v64 = v94;
        v64[1] = v65;
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
      uint64_t v93 = v20;
      v105 &= 0x3Fu;
      sub_1BFFF7D34((uint64_t)v104, (uint64_t)v106);
      uint64_t v25 = (char *)v23 + *(int *)(v21 + 20);
      uint64_t v26 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v27 = *(void *)(v26 - 8);
      unint64_t v90 = *(uint64_t **)(v27 + 56);
      uint64_t v91 = v26;
      uint64_t v89 = v27 + 56;
      ((void (*)(char *, uint64_t, uint64_t))v90)(v25, 1, 1);
      sub_1BFFF7D34((uint64_t)v106, (uint64_t)v23);
      swift_beginAccess();
      unint64_t v28 = *(void *)(a1 + 64);
      if (v28 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1C15204BC();
      }
      else
      {
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
      }
      uint64_t v107 = v23;
      uint64_t v86 = v4;
      if (!v29) {
        goto LABEL_14;
      }
      unint64_t v30 = v28 & 0xC000000000000001;
      uint64_t v31 = 4;
      do
      {
        uint64_t v32 = v31 - 4;
        if (v30)
        {
          uint64_t v33 = MEMORY[0x1C18C7CB0](v31 - 4, v28);
          BOOL v34 = __OFADD__(v32, 1);
          uint64_t v35 = v31 - 3;
          if (v34) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v33 = *(void *)(v28 + 8 * v31);
          swift_retain();
          BOOL v34 = __OFADD__(v32, 1);
          uint64_t v35 = v31 - 3;
          if (v34) {
            goto LABEL_67;
          }
        }
        sub_1C0FA212C(v33, v107);
        swift_release();
        if (v2)
        {
          sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
          swift_bridgeObjectRelease();
          uint64_t v85 = type metadata accessor for FormatDerivedDataBindingItemResult;
          goto LABEL_62;
        }
        ++v31;
      }
      while (v35 != v29);
LABEL_14:
      swift_bridgeObjectRelease();
      uint64_t v36 = v92 + *(int *)(v86 + 20);
      sub_1C0AD708C();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v38 = v107;
      uint64_t v39 = *v107;
      unint64_t v40 = v107[1];
      *(void *)(inited + 32) = *v107;
      *(void *)(inited + 40) = v40;
      sub_1BFE74E64(v39, v40);
      uint64_t v41 = sub_1C00B8CBC(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v42 = v91;
      uint64_t v43 = v88;
      unint64_t v44 = &v88[*(int *)(v91 + 36)];
      uint64_t v45 = sub_1C1518CDC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
      *uint64_t v43 = 0x100000001;
      uint64_t v46 = MEMORY[0x1E4FBC860];
      v43[1] = v41;
      _OWORD v43[2] = v46;
      v43[3] = 0;
      v43[4] = 0;
      ((void (*)(void *, void, uint64_t, uint64_t))v90)(v43, 0, 1, v42);
      uint64_t v47 = (uint64_t)v93;
      sub_1C0F9F6C4(v36, (uint64_t)v43, (uint64_t)v93);
      sub_1C0FA6CF0((uint64_t)v43, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      if (!v2) {
        sub_1C034D148(v47, v36);
      }
      sub_1C0FA6ED8((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
      long long v48 = type metadata accessor for FormatDerivedDataBindingItemResult;
      uint64_t v49 = (uint64_t)v38;
      return sub_1C0FA6D4C(v49, (uint64_t (*)(void))v48);
  }
}

uint64_t sub_1C0FA3E04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1F4188790](v5);
  unint64_t v77 = (unint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FA6F20(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v73 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (uint64_t)&v68 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v70 = (uint64_t)&v68 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v71 = (uint64_t)&v68 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v72 = (uint64_t)&v68 - v16;
  unint64_t v17 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1F4188790](v17);
  uint64_t v76 = (uint64_t *)((char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1F4188790](v19);
  uint64_t v75 = (uint64_t *)((char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0368E18(a1 + 16, (uint64_t)v80);
  sub_1C0368E18((uint64_t)v80, (uint64_t)&v81);
  unint64_t v21 = DWORD2(v82[1]) | ((unint64_t)WORD6(v82[1]) << 32);
  switch(WORD6(v82[1]) >> 13)
  {
    case 1:
      uint64_t v69 = a2;
      WORD6(v82[1]) = WORD2(v21) & 0x1FFF;
      long long v84 = v81;
      char v85 = v82[0];
      uint64_t v33 = v76;
      uint64_t v34 = (uint64_t)v76 + *(int *)(v17 + 20);
      uint64_t v35 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v75 = *(uint64_t **)(v35 - 8);
      uint64_t v36 = (void (*)(void))v75[7];
      uint64_t v73 = v34;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v36)(v34, 1, 1, v35);
      uint64_t v74 = (uint64_t)v33 + *(int *)(v17 + 24);
      unint64_t v77 = v35;
      v36();
      *(_OWORD *)uint64_t v33 = v84;
      *((unsigned char *)v33 + 16) = v85;
      swift_beginAccess();
      unint64_t v37 = *(void *)(a1 + 64);
      if (v37 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        unint64_t v17 = sub_1C15204BC();
        if (v17) {
          goto LABEL_16;
        }
LABEL_24:
        swift_bridgeObjectRelease();
        uint64_t v41 = v72;
        sub_1BFF23504(v74, v72, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        int v42 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t))v75[6])(v41, 1, v77);
        sub_1C0FA6CF0(v41, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        if (v42 == 1)
        {
          uint64_t v43 = v71;
          uint64_t v44 = v69;
          sub_1C0F9F6C4(v69, v73, v71);
          if (!v2) {
            sub_1C034D148(v43, v44);
          }
        }
        else
        {
          type metadata accessor for FormatDerivedDataError();
          sub_1C00DAB28();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        goto LABEL_55;
      }
      unint64_t v17 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      if (!v17) {
        goto LABEL_24;
      }
LABEL_16:
      a2 = 4;
      while (1)
      {
        uint64_t v38 = a2 - 4;
        if ((v37 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v39 = MEMORY[0x1C18C7CB0](a2 - 4, v37);
        BOOL v29 = __OFADD__(v38, 1);
        uint64_t v40 = a2 - 3;
        if (v29) {
          goto LABEL_62;
        }
LABEL_22:
        sub_1C0FA2C24(v39, v76);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_55:
          uint64_t v31 = type metadata accessor for FormatDerivedDataBindingSwitchResult;
          uint64_t v32 = v76;
          return sub_1C0FA6D4C((uint64_t)v32, (uint64_t (*)(void))v31);
        }
        swift_release();
        ++a2;
        if (v40 == v17) {
          goto LABEL_24;
        }
      }
      uint64_t v39 = *(void *)(v37 + 8 * a2);
      swift_retain();
      BOOL v29 = __OFADD__(v38, 1);
      uint64_t v40 = a2 - 3;
      if (!v29) {
        goto LABEL_22;
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1C15204BC();
      uint64_t v69 = a2;
      if (v54)
      {
LABEL_31:
        uint64_t v55 = 4;
        while (1)
        {
          uint64_t v56 = v55 - 4;
          if ((v17 & 0xC000000000000001) != 0)
          {
            a2 = MEMORY[0x1C18C7CB0](v55 - 4, v17);
            BOOL v29 = __OFADD__(v56, 1);
            uint64_t v57 = v55 - 3;
            if (v29) {
              goto LABEL_63;
            }
          }
          else
          {
            a2 = *(void *)(v17 + 8 * v55);
            swift_retain();
            BOOL v29 = __OFADD__(v56, 1);
            uint64_t v57 = v55 - 3;
            if (v29) {
              goto LABEL_63;
            }
          }
          sub_1C0FA3110(a2, v77);
          if (v2) {
            break;
          }
          swift_release();
          ++v55;
          if (v57 == v54) {
            goto LABEL_39;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
LABEL_39:
        swift_bridgeObjectRelease();
        uint64_t v58 = v69;
        uint64_t v59 = v74;
        sub_1BFF23504(v69, v74, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v60 = v73;
        sub_1C135A198(v73);
        if (v2)
        {
          sub_1C0FA6CF0(v59, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        }
        else
        {
          uint64_t v61 = v70;
          sub_1C0F9F6C4(v59, v60, v70);
          sub_1C0FA6CF0(v60, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C0FA6CF0(v59, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1C034D148(v61, v58);
        }
      }
      uint64_t v31 = type metadata accessor for FormatDerivedDataBindingRepeatResult;
      uint64_t v32 = (uint64_t *)v77;
      return sub_1C0FA6D4C((uint64_t)v32, (uint64_t (*)(void))v31);
    case 2:
      WORD6(v82[1]) = WORD2(v21) & 0x1FFF;
      goto LABEL_28;
    case 3:
      WORD6(v82[1]) = WORD2(v21) & 0x1FFF;
      long long v86 = v81;
      v87[0] = v82[0];
      *(_OWORD *)((char *)v87 + 14) = *(_OWORD *)((char *)v82 + 14);
      uint64_t v49 = a1;
      uint64_t v50 = (_OWORD *)v77;
      unint64_t v51 = v77 + *(int *)(v5 + 20);
      uint64_t v52 = type metadata accessor for FormatSlotDefinitionItemSet();
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
      long long v53 = v87[0];
      _OWORD *v50 = v86;
      v50[1] = v53;
      *(_OWORD *)((char *)v50 + 30) = *(_OWORD *)((char *)v87 + 14);
      swift_beginAccess();
      unint64_t v17 = *(void *)(v49 + 64);
      if (v17 >> 62) {
        goto LABEL_66;
      }
      uint64_t v54 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      uint64_t v69 = a2;
      if (v54) {
        goto LABEL_31;
      }
      goto LABEL_39;
    case 4:
      WORD6(v82[1]) = WORD2(v21) & 0x1FFF;
      swift_beginAccess();
      unint64_t v62 = *(void *)(a1 + 64);
      if (v62 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1C15204BC();
        if (!v63) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v63) {
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v64 = a2;
      unint64_t v77 = v62 & 0xC000000000000001;
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v66 = i - 4;
        if (v77)
        {
          uint64_t v67 = MEMORY[0x1C18C7CB0](i - 4, v62);
          BOOL v29 = __OFADD__(v66, 1);
          a2 = i - 3;
          if (v29) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v67 = *(void *)(v62 + 8 * i);
          swift_retain();
          BOOL v29 = __OFADD__(v66, 1);
          a2 = i - 3;
          if (v29) {
            goto LABEL_64;
          }
        }
        unint64_t v17 = v63;
        sub_1C0FA3E04(v67, v64);
        if (v2) {
          break;
        }
        swift_release();
        if (a2 == v63) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_release();
      return swift_bridgeObjectRelease();
    default:
      WORD6(v82[1]) = WORD2(v21) & 0x1FFF;
      sub_1C0FA6E7C((uint64_t)&v81, (uint64_t)v83);
      sub_1C0FA6E7C((uint64_t)v83, (uint64_t)v88);
      if ((v89 & 0xC0) != 0x40)
      {
LABEL_28:
        type metadata accessor for FormatDerivedDataError();
        sub_1C00DAB28();
        swift_allocError();
        uint64_t v46 = v45;
        uint64_t v78 = 0;
        unint64_t v79 = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C035E36C((uint64_t)v80);
        sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
        unint64_t v47 = v79;
        *uint64_t v46 = v78;
        v46[1] = v47;
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
      v89 &= 0x3Fu;
      sub_1BFFF7D34((uint64_t)v88, (uint64_t)v90);
      uint64_t v22 = v75;
      uint64_t v23 = (char *)v75 + *(int *)(v19 + 20);
      uint64_t v24 = type metadata accessor for FormatSlotDefinitionItemSet();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
      sub_1BFFF7D34((uint64_t)v90, (uint64_t)v22);
      swift_beginAccess();
      unint64_t v25 = *(void *)(a1 + 64);
      uint64_t v69 = a2;
      if (v25 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1C15204BC();
        if (!v26) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        if (!v26) {
          goto LABEL_13;
        }
      }
      unint64_t v17 = 4;
      do
      {
        unint64_t v27 = v17 - 4;
        if ((v25 & 0xC000000000000001) != 0)
        {
          uint64_t v28 = MEMORY[0x1C18C7CB0](v17 - 4, v25);
          BOOL v29 = __OFADD__(v27, 1);
          a2 = v17 - 3;
          if (v29) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v28 = *(void *)(v25 + 8 * v17);
          swift_retain();
          BOOL v29 = __OFADD__(v27, 1);
          a2 = v17 - 3;
          if (v29) {
            goto LABEL_65;
          }
        }
        sub_1C0FA212C(v28, v75);
        swift_release();
        if (v2)
        {
          sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
          swift_bridgeObjectRelease();
          uint64_t v31 = type metadata accessor for FormatDerivedDataBindingItemResult;
          uint64_t v32 = v75;
          return sub_1C0FA6D4C((uint64_t)v32, (uint64_t (*)(void))v31);
        }
        ++v17;
      }
      while (a2 != v26);
LABEL_13:
      swift_bridgeObjectRelease();
      unint64_t v30 = v75;
      sub_1C0AD6DC8(v75);
      sub_1C0FA6ED8((uint64_t)v80, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
      uint64_t v31 = type metadata accessor for FormatDerivedDataBindingItemResult;
      uint64_t v32 = v30;
      return sub_1C0FA6D4C((uint64_t)v32, (uint64_t (*)(void))v31);
  }
}

uint64_t sub_1C0FA4AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1F4188790](v5);
  uint64_t v103 = (uint64_t *)((char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1F4188790](v7);
  uint64_t v102 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatDerivedDataBindingAuxiliaryResult();
  MEMORY[0x1F4188790](v9 - 8);
  long long v100 = (uint64_t *)((char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0FA6F20(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v97 = (uint64_t)&v94 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v99 = (char *)&v94 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v98 = (uint64_t)&v94 - v19;
  uint64_t v20 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = a2;
  if (*(unsigned char *)(a2 + 9) != 1)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    *(unsigned char *)uint64_t v39 = 5;
    *(void *)(v39 + 8) = 0xD00000000000007ALL;
    *(void *)(v39 + 16) = 0x80000001C161E5B0;
LABEL_36:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  sub_1C0368E18(a1 + 16, (uint64_t)v106);
  sub_1C0368E18((uint64_t)v106, (uint64_t)&v107);
  unint64_t v23 = DWORD2(v108[1]) | ((unint64_t)WORD6(v108[1]) << 32);
  uint64_t v24 = a1;
  switch(WORD6(v108[1]) >> 13)
  {
    case 1:
      WORD6(v108[1]) = WORD2(v23) & 0x1FFF;
      long long v110 = v107;
      char v111 = v108[0];
      uint64_t v40 = v102;
      uint64_t v41 = v102 + *(int *)(v7 + 20);
      uint64_t v42 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v43 = v24;
      uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
      v44(v41, 1, 1, v42);
      v44(v40 + *(int *)(v7 + 24), 1, 1, v42);
      *(_OWORD *)uint64_t v40 = v110;
      *(unsigned char *)(v40 + 16) = v111;
      swift_beginAccess();
      unint64_t v28 = *(void *)(v43 + 64);
      if (v28 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_1C15204BC();
        if (v45) {
          goto LABEL_25;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v36 = (void *)v102;
        sub_1C0BB2E48(v102);
        uint64_t v38 = type metadata accessor for FormatDerivedDataBindingSwitchResult;
        return sub_1C0FA6D4C((uint64_t)v36, (uint64_t (*)(void))v38);
      }
      uint64_t v45 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
      swift_bridgeObjectRetain();
      if (!v45) {
        goto LABEL_33;
      }
LABEL_25:
      uint64_t v46 = 4;
      while (1)
      {
        uint64_t v47 = v46 - 4;
        if ((v28 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v48 = MEMORY[0x1C18C7CB0](v46 - 4, v28);
        uint64_t v49 = v46 - 3;
        if (__OFADD__(v47, 1)) {
          goto LABEL_81;
        }
LABEL_31:
        sub_1C0FA2C24(v48, v102);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return sub_1C0FA6D4C(v102, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSwitchResult);
        }
        swift_release();
        ++v46;
        if (v49 == v45) {
          goto LABEL_33;
        }
      }
      uint64_t v48 = *(void *)(v28 + 8 * v46);
      swift_retain();
      uint64_t v49 = v46 - 3;
      if (!__OFADD__(v47, 1)) {
        goto LABEL_31;
      }
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1C15204BC();
      if (v63)
      {
LABEL_51:
        for (uint64_t i = 4; ; ++i)
        {
          uint64_t v65 = i - 4;
          if ((v28 & 0xC000000000000001) != 0)
          {
            uint64_t v66 = MEMORY[0x1C18C7CB0](i - 4, v28);
            uint64_t v67 = i - 3;
            if (__OFADD__(v65, 1)) {
              goto LABEL_83;
            }
          }
          else
          {
            uint64_t v66 = *(void *)(v28 + 8 * i);
            swift_retain();
            uint64_t v67 = i - 3;
            if (__OFADD__(v65, 1)) {
              goto LABEL_83;
            }
          }
          sub_1C0FA4AA4(v66, v101);
          if (v2) {
            break;
          }
          swift_release();
          if (v67 == v63) {
            return swift_bridgeObjectRelease();
          }
        }
        swift_release();
      }
      return swift_bridgeObjectRelease();
    case 2:
      WORD6(v108[1]) = WORD2(v23) & 0x1FFF;
      goto LABEL_35;
    case 3:
      WORD6(v108[1]) = WORD2(v23) & 0x1FFF;
      long long v112 = v107;
      v113[0] = v108[0];
      *(_OWORD *)((char *)v113 + 14) = *(_OWORD *)((char *)v108 + 14);
      uint64_t v54 = v103;
      uint64_t v55 = (char *)v103 + *(int *)(v5 + 20);
      uint64_t v56 = type metadata accessor for FormatSlotDefinitionItemSet();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
      long long v57 = v113[0];
      *uint64_t v54 = v112;
      v54[1] = v57;
      *(_OWORD *)((char *)v54 + 30) = *(_OWORD *)((char *)v113 + 14);
      swift_beginAccess();
      unint64_t v28 = *(void *)(v24 + 64);
      if (v28 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_1C15204BC();
        if (!v58) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v58 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        if (!v58) {
          goto LABEL_47;
        }
      }
      uint64_t v59 = 4;
      do
      {
        uint64_t v60 = v59 - 4;
        if ((v28 & 0xC000000000000001) != 0)
        {
          uint64_t v61 = MEMORY[0x1C18C7CB0](v59 - 4, v28);
          uint64_t v62 = v59 - 3;
          if (__OFADD__(v60, 1)) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v61 = *(void *)(v28 + 8 * v59);
          swift_retain();
          uint64_t v62 = v59 - 3;
          if (__OFADD__(v60, 1)) {
            goto LABEL_82;
          }
        }
        sub_1C0FA3110(v61, (uint64_t)v103);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v90 = type metadata accessor for FormatDerivedDataBindingRepeatResult;
          return sub_1C0FA6D4C((uint64_t)v103, (uint64_t (*)(void))v90);
        }
        swift_release();
        ++v59;
      }
      while (v62 != v58);
LABEL_47:
      swift_bridgeObjectRelease();
      uint64_t v36 = v103;
      sub_1C0BB31C8();
      uint64_t v38 = type metadata accessor for FormatDerivedDataBindingRepeatResult;
      return sub_1C0FA6D4C((uint64_t)v36, (uint64_t (*)(void))v38);
    case 4:
      WORD6(v108[1]) = WORD2(v23) & 0x1FFF;
      swift_beginAccess();
      unint64_t v28 = *(void *)(a1 + 64);
      if (v28 >> 62) {
        goto LABEL_86;
      }
      uint64_t v63 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v63) {
        goto LABEL_51;
      }
      return swift_bridgeObjectRelease();
    default:
      WORD6(v108[1]) = WORD2(v23) & 0x1FFF;
      sub_1C0FA6E7C((uint64_t)&v107, (uint64_t)v109);
      sub_1C0FA6E7C((uint64_t)v109, (uint64_t)v114);
      int v25 = v115 >> 6;
      if (v25 != 1)
      {
        if (v25 != 2 || v115 != 128 || v114[1] || v114[0] != 4)
        {
LABEL_35:
          type metadata accessor for FormatDerivedDataError();
          sub_1C00DAB28();
          swift_allocError();
          unint64_t v51 = v50;
          uint64_t v104 = 0;
          unint64_t v105 = 0xE000000000000000;
          sub_1C15200FC();
          sub_1C151E80C();
          sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
          sub_1C035E36C((uint64_t)v106);
          sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
          unint64_t v52 = v105;
          *unint64_t v51 = v104;
          v51[1] = v52;
          goto LABEL_36;
        }
        uint64_t v26 = type metadata accessor for FormatSlotDefinitionItemSet();
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v100, 1, 1, v26);
        swift_beginAccess();
        unint64_t v27 = *(void *)(a1 + 64);
        if (v27 >> 62)
        {
          sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
          swift_bridgeObjectRetain();
          unint64_t v28 = sub_1C15204BC();
          if (v28)
          {
LABEL_10:
            unint64_t v29 = v27 & 0xC000000000000001;
            uint64_t v30 = 4;
            uint64_t v103 = (void *)v27;
            do
            {
              uint64_t v31 = v30 - 4;
              if (v29)
              {
                uint64_t v32 = MEMORY[0x1C18C7CB0](v30 - 4, v27);
                uint64_t v33 = v30 - 3;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_85;
                }
              }
              else
              {
                uint64_t v32 = *(void *)(v27 + 8 * v30);
                swift_retain();
                uint64_t v33 = v30 - 3;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_85;
                }
              }
              sub_1C0FA3E04(v32, (uint64_t)v100);
              if (v2)
              {
                swift_release();
                sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
                swift_bridgeObjectRelease();
                return sub_1C0FA6D4C((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingAuxiliaryResult);
              }
              swift_release();
              ++v30;
              BOOL v34 = v33 == v28;
              unint64_t v27 = (unint64_t)v103;
            }
            while (!v34);
          }
        }
        else
        {
          unint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
          swift_bridgeObjectRetain();
          if (v28) {
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v35 = type metadata accessor for FormatDerivedDataBindingSwitchCaseResult();
        uint64_t v36 = v100;
        uint64_t v37 = v101 + *(int *)(v35 + 24);
        sub_1C0F9F6C4(v37, (uint64_t)v100, (uint64_t)v13);
        if (!v2) {
          sub_1C034D148((uint64_t)v13, v37);
        }
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
        uint64_t v38 = type metadata accessor for FormatDerivedDataBindingAuxiliaryResult;
        return sub_1C0FA6D4C((uint64_t)v36, (uint64_t (*)(void))v38);
      }
      v115 &= 0x3Fu;
      sub_1BFFF7D34((uint64_t)v114, (uint64_t)v116);
      uint64_t v68 = (uint64_t)&v22[*(int *)(v20 + 20)];
      uint64_t v69 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v70 = *(void *)(v69 - 8);
      uint64_t v71 = *(void **)(v70 + 56);
      uint64_t v95 = v68;
      uint64_t v96 = v70 + 56;
      uint64_t v102 = v69;
      long long v100 = v71;
      ((void (*)(uint64_t, uint64_t, uint64_t))v71)(v68, 1, 1);
      sub_1BFFF7D34((uint64_t)v116, (uint64_t)v22);
      swift_beginAccess();
      unint64_t v72 = *(void *)(a1 + 64);
      if (v72 >> 62)
      {
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v73 = sub_1C15204BC();
        uint64_t v103 = v22;
        if (v73)
        {
LABEL_62:
          unint64_t v28 = 4;
          while (1)
          {
            unint64_t v74 = v28 - 4;
            if ((v72 & 0xC000000000000001) != 0)
            {
              uint64_t v75 = MEMORY[0x1C18C7CB0](v28 - 4, v72);
              unint64_t v76 = v28 - 3;
              if (__OFADD__(v74, 1)) {
                goto LABEL_84;
              }
            }
            else
            {
              uint64_t v75 = *(void *)(v72 + 8 * v28);
              swift_retain();
              unint64_t v76 = v28 - 3;
              if (__OFADD__(v74, 1)) {
                goto LABEL_84;
              }
            }
            sub_1C0FA212C(v75, v103);
            swift_release();
            if (v2) {
              break;
            }
            ++v28;
            if (v76 == v73) {
              goto LABEL_70;
            }
          }
          sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
          swift_bridgeObjectRelease();
LABEL_79:
          unint64_t v90 = type metadata accessor for FormatDerivedDataBindingItemResult;
          return sub_1C0FA6D4C((uint64_t)v103, (uint64_t (*)(void))v90);
        }
      }
      else
      {
        uint64_t v73 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0FA6C98);
        swift_bridgeObjectRetain();
        uint64_t v103 = v22;
        if (v73) {
          goto LABEL_62;
        }
      }
LABEL_70:
      swift_bridgeObjectRelease();
      uint64_t v77 = type metadata accessor for FormatDerivedDataBindingSwitchCaseResult();
      uint64_t v78 = v101;
      uint64_t v79 = v101 + *(int *)(v77 + 20);
      sub_1C0AD708C();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v81 = *v103;
      unint64_t v82 = v103[1];
      *(void *)(inited + 32) = *v103;
      *(void *)(inited + 40) = v82;
      sub_1BFE74E64(v81, v82);
      uint64_t v83 = sub_1C00B8CBC(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v84 = v102;
      char v85 = v99;
      long long v86 = &v99[*(int *)(v102 + 36)];
      uint64_t v87 = sub_1C1518CDC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 1, 1, v87);
      *char v85 = 0x100000001;
      uint64_t v88 = MEMORY[0x1E4FBC860];
      v85[1] = v83;
      v85[2] = v88;
      v85[3] = 0;
      v85[4] = 0;
      ((void (*)(void *, void, uint64_t, uint64_t))v100)(v85, 0, 1, v84);
      uint64_t v89 = v98;
      sub_1C0F9F6C4(v79, (uint64_t)v85, v98);
      if (v2)
      {
        sub_1C0FA6CF0((uint64_t)v85, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        uint64_t v93 = v103;
        sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
        return sub_1C0FA6D4C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingItemResult);
      }
      sub_1C0FA6CF0((uint64_t)v85, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1C034D148(v89, v79);
      uint64_t v91 = v78 + *(int *)(v77 + 24);
      uint64_t v92 = v97;
      sub_1C0F9F6C4(v91, v95, v97);
      sub_1C034D148(v92, v91);
      sub_1C0FA6ED8((uint64_t)v106, (void (*)(void, void, void, void, void, unint64_t))sub_1C0368EB4);
      goto LABEL_79;
  }
}

uint64_t sub_1C0FA59E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDerivedDataBinder()
{
  return self;
}

uint64_t sub_1C0FA5A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v79 = a3;
  sub_1C03B73C4();
  uint64_t v75 = *(void *)(v9 - 8);
  uint64_t v76 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v73 = (uint64_t)&v67 - v12;
  uint64_t v13 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v80 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v78 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v77 = (uint64_t)&v67 - v18;
  if (*(void *)(a2 + 16))
  {
    swift_beginAccess();
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_1C111C2EC(v19);
    swift_endAccess();
  }
  if (*(void *)(a1 + 16))
  {
    swift_beginAccess();
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1BFEF3808(v20);
    swift_endAccess();
  }
  uint64_t v21 = *(void *)(v79 + 56);
  uint64_t v70 = v79 + 56;
  uint64_t v22 = 1 << *(unsigned char *)(v79 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int v25 = (uint64_t *)(v6 + 24);
  uint64_t v68 = (unint64_t *)(v6 + 32);
  uint64_t v69 = (unint64_t *)(v6 + 40);
  int64_t v71 = (unint64_t)(v22 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v27 = 0;
  while (1)
  {
    if (v24)
    {
      unint64_t v28 = __clz(__rbit64(v24));
      uint64_t v29 = (v24 - 1) & v24;
      unint64_t v30 = v28 | (v27 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v27++, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v27 >= v71) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v70 + 8 * v27);
    if (!v32) {
      break;
    }
LABEL_20:
    uint64_t v29 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v27 << 6);
LABEL_21:
    uint64_t v34 = v77;
    sub_1BFEBABBC(*(void *)(v79 + 48) + *(void *)(v78 + 72) * v30, v77, type metadata accessor for FormatDerivedDataResultOptionReference);
    sub_1C0FA6DAC(v34, (uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = sub_1C0C1997C(v35);
    if (v5)
    {
      sub_1C0FA6D4C((uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
      return swift_release();
    }
    uint64_t v39 = v36;
    uint64_t v40 = v37;
    char v41 = v38;
    unint64_t v81 = v29;
    int64_t v82 = v27;
    uint64_t v83 = 0;
    uint64_t v42 = *((void *)v16 + 1);
    uint64_t v43 = *((void *)v16 + 2);
    swift_beginAccess();
    uint64_t v44 = *v25;
    uint64_t v45 = *(void *)(*v25 + 16);
    swift_bridgeObjectRetain();
    if (v45)
    {
      unint64_t v46 = sub_1BFEF2D8C(v42, v43);
      uint64_t v47 = MEMORY[0x1E4FBC870];
      if (v48)
      {
        uint64_t v47 = *(void *)(*(void *)(v44 + 56) + 8 * v46);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v47 = MEMORY[0x1E4FBC870];
    }
    swift_bridgeObjectRelease();
    uint64_t v87 = v47;
    swift_endAccess();
    sub_1C02CDD4C(v39, v40, v41);
    sub_1C02B8D08((uint64_t)v85, v39, v40, v41);
    sub_1C00BB39C(v85[0], v85[1], v86);
    uint64_t v49 = v87;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v84 = *v25;
    *int v25 = 0x8000000000000000;
    sub_1C10678BC(v49, v42, v43, isUniquelyReferenced_nonNull_native);
    *int v25 = v84;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v51 = v80;
    sub_1BFEBABBC((uint64_t)&v16[*(int *)(v72 + 28)], v80, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
    sub_1C015F820();
    int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v51, 1, v52);
    uint64_t v54 = *(int *)(v76 + 48);
    if (v53 == 1)
    {
      uint64_t v55 = v73 + v54;
      sub_1BFEBABBC((uint64_t)v16, v73, type metadata accessor for FormatDerivedDataResultOptionReference);
      *(void *)uint64_t v55 = v39;
      *(void *)(v55 + 8) = v40;
      *(unsigned char *)(v55 + 16) = v41;
      uint64_t v56 = v68;
      swift_beginAccess();
      unint64_t v57 = *v56;
      char v58 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v56 = v57;
      uint64_t v5 = v83;
      unint64_t v24 = v81;
      if ((v58 & 1) == 0)
      {
        unint64_t v57 = sub_1C0EE4B78(0, *(void *)(v57 + 16) + 1, 1, v57);
        *uint64_t v68 = v57;
      }
      unint64_t v60 = *(void *)(v57 + 16);
      unint64_t v59 = *(void *)(v57 + 24);
      if (v60 >= v59 >> 1)
      {
        unint64_t v57 = sub_1C0EE4B78(v59 > 1, v60 + 1, 1, v57);
        *uint64_t v68 = v57;
      }
      *(void *)(v57 + 16) = v60 + 1;
      sub_1C0FA6DAC(v73, v57+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v60, (uint64_t (*)(void))sub_1C03B73C4);
      swift_endAccess();
      uint64_t result = sub_1C0FA6D4C((uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
      int64_t v27 = v82;
    }
    else
    {
      uint64_t v61 = v74 + v54;
      sub_1BFEBABBC((uint64_t)v16, v74, type metadata accessor for FormatDerivedDataResultOptionReference);
      *(void *)uint64_t v61 = v39;
      *(void *)(v61 + 8) = v40;
      *(unsigned char *)(v61 + 16) = v41;
      uint64_t v62 = v69;
      swift_beginAccess();
      unint64_t v63 = *v62;
      char v64 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v62 = v63;
      uint64_t v5 = v83;
      unint64_t v24 = v81;
      if ((v64 & 1) == 0)
      {
        unint64_t v63 = sub_1C0EE4B78(0, *(void *)(v63 + 16) + 1, 1, v63);
        *uint64_t v69 = v63;
      }
      unint64_t v66 = *(void *)(v63 + 16);
      unint64_t v65 = *(void *)(v63 + 24);
      if (v66 >= v65 >> 1)
      {
        unint64_t v63 = sub_1C0EE4B78(v65 > 1, v66 + 1, 1, v63);
        *uint64_t v69 = v63;
      }
      *(void *)(v63 + 16) = v66 + 1;
      sub_1C0FA6DAC(v74, v63+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v66, (uint64_t (*)(void))sub_1C03B73C4);
      swift_endAccess();
      sub_1C0FA6D4C((uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
      uint64_t result = sub_1C0FA6CF0(v80, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
      int64_t v27 = v82;
    }
  }
  int64_t v33 = v27 + 1;
  if (v27 + 1 >= v71) {
    return swift_release();
  }
  unint64_t v32 = *(void *)(v70 + 8 * v33);
  if (v32) {
    goto LABEL_19;
  }
  int64_t v33 = v27 + 2;
  if (v27 + 2 >= v71) {
    return swift_release();
  }
  unint64_t v32 = *(void *)(v70 + 8 * v33);
  if (v32) {
    goto LABEL_19;
  }
  int64_t v33 = v27 + 3;
  if (v27 + 3 >= v71) {
    return swift_release();
  }
  unint64_t v32 = *(void *)(v70 + 8 * v33);
  if (v32)
  {
LABEL_19:
    int64_t v27 = v33;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v27 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v27 >= v71) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v70 + 8 * v27);
    ++v33;
    if (v32) {
      goto LABEL_20;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

void *sub_1C0FA6284(uint64_t a1)
{
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    uint64_t v35 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v38 = 0;
    uint64_t v1 = 0;
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v3 = *(void *)(v35 + 32 * v1 + 8);
      uint64_t v4 = *(void *)(v3 + 16);
      if (v4) {
        break;
      }
LABEL_4:
      ++v1;
      swift_bridgeObjectRelease();
      swift_release();
      if (v1 == v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (void *)v38;
      }
    }
    uint64_t v37 = v1;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = (unsigned int *)(v3 + 72);
    while (1)
    {
      uint64_t v7 = *((void *)v6 - 5);
      unint64_t v8 = *((void *)v6 - 4);
      uint64_t v10 = *((void *)v6 - 3);
      uint64_t v9 = *((void *)v6 - 2);
      uint64_t v40 = *((void *)v6 - 1);
      unint64_t v11 = *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 2) << 32);
      uint64_t v39 = v5;
      switch(*((unsigned __int16 *)v6 + 2) >> 13)
      {
        case 1:
        case 3:
        case 4:
          swift_bridgeObjectRetain_n();
          goto LABEL_37;
        case 2:
          if ((v8 & 1) == 0)
          {
            sub_1C0FA6C98(v7, v8, v10, v9, v40, v11);
            swift_bridgeObjectRetain();
            sub_1C152088C();
            sub_1C151E80C();
            swift_bridgeObjectRelease();
            sub_1C151E80C();
            uint64_t v13 = v7;
            unint64_t v14 = v8;
            unsigned __int8 v15 = v10;
            uint64_t v16 = v9;
            goto LABEL_36;
          }
          swift_bridgeObjectRetain();
          goto LABEL_37;
        default:
          if (!(v10 >> 6))
          {
            sub_1C00F5ACC(v7, v8, v10);
            sub_1C00F5ACC(v7, v8, v10);
            sub_1C151E80C();
            sub_1C151E80C();
            uint64_t v13 = v7;
            unint64_t v14 = v8;
            unsigned __int8 v15 = v10;
            uint64_t v16 = v9;
            goto LABEL_36;
          }
          if (v10 >> 6 == 1)
          {
            sub_1C00F5ACC(v7, v8, v10);
            sub_1C00F5ACC(v7, v8, v10);
            sub_1BFE74E64(v7, v8);
            sub_1C151E80C();
            swift_bridgeObjectRelease();
            sub_1C151E80C();
            uint64_t v13 = v7;
            unint64_t v14 = v8;
            unsigned __int8 v15 = v10;
            uint64_t v16 = v9;
LABEL_36:
            sub_1C0368EB4(v13, v14, v15, v16, v40, v11);
            goto LABEL_37;
          }
          if (v8 | v7 || v10 != 128)
          {
            BOOL v12 = v7 == 1 && v8 == 0;
            if (v12 && v10 == 128)
            {
              sub_1C0368EB4(1, 0, v10, v9, v40, v11);
            }
            else if (v7 == 2 && !v8 && v10 == 128)
            {
              sub_1C0368EB4(2, 0, v10, v9, v40, v11);
            }
            else if (v7 == 3 && !v8 && v10 == 128)
            {
              sub_1C0368EB4(3, 0, v10, v9, v40, v11);
            }
            else if (v7 == 4 && !v8 && v10 == 128)
            {
              sub_1C0368EB4(4, 0, v10, v9, v40, v11);
            }
            else if (v7 == 5 && !v8 && v10 == 128)
            {
              sub_1C0368EB4(5, 0, v10, v9, v40, v11);
            }
            else
            {
              sub_1C0368EB4(6, 0, v10, v9, v40, v11);
            }
          }
          else
          {
            sub_1C0368EB4(0, 0, v10, v9, v40, v11);
          }
LABEL_37:
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          if (!v2[2]) {
            goto LABEL_40;
          }
          swift_bridgeObjectRetain();
          unint64_t v17 = sub_1BFEF2D8C(0, 0xE000000000000000);
          if ((v18 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_40:
            type metadata accessor for FormatDerivedDataBindingNode();
            uint64_t v5 = swift_allocObject();
            *(void *)(v5 + 16) = v7;
            *(void *)(v5 + 24) = v8;
            *(void *)(v5 + 32) = v10;
            *(void *)(v5 + 40) = v9;
            *(void *)(v5 + 48) = v40;
            *(_WORD *)(v5 + 60) = WORD2(v11);
            *(_DWORD *)(v5 + 56) = v11;
            *(void *)(v5 + 64) = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRetain();
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v21 = sub_1BFEF2D8C(0, 0xE000000000000000);
            uint64_t v22 = v2[2];
            BOOL v23 = (v20 & 1) == 0;
            uint64_t v24 = v22 + v23;
            if (__OFADD__(v22, v23))
            {
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              sub_1C1520CFC();
              __break(1u);
              JUMPOUT(0x1C0FA6C48);
            }
            char v25 = v20;
            if (v2[3] >= v24)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                if ((v20 & 1) == 0) {
                  goto LABEL_58;
                }
              }
              else
              {
                sub_1C106EDF4();
                if ((v25 & 1) == 0) {
                  goto LABEL_58;
                }
              }
            }
            else
            {
              sub_1C105ADC4(v24, isUniquelyReferenced_nonNull_native);
              unint64_t v26 = sub_1BFEF2D8C(0, 0xE000000000000000);
              if ((v25 & 1) != (v27 & 1)) {
                goto LABEL_71;
              }
              unint64_t v21 = v26;
              if ((v25 & 1) == 0)
              {
LABEL_58:
                v2[(v21 >> 6) + 8] |= 1 << v21;
                uint64_t v29 = (void *)(v2[6] + 16 * v21);
                *uint64_t v29 = 0;
                v29[1] = 0xE000000000000000;
                *(void *)(v2[7] + 8 * v21) = v5;
                uint64_t v30 = v2[2];
                BOOL v31 = __OFADD__(v30, 1);
                uint64_t v32 = v30 + 1;
                if (v31) {
                  goto LABEL_70;
                }
                v2[2] = v32;
                swift_bridgeObjectRetain();
                goto LABEL_60;
              }
            }
            uint64_t v28 = v2[7];
            swift_release();
            *(void *)(v28 + 8 * v21) = v5;
LABEL_60:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v39)
            {
              swift_beginAccess();
              swift_retain();
              uint64_t v33 = swift_retain();
              MEMORY[0x1C18C66D0](v33);
              if (*(void *)((*(void *)(v39 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v39 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                                  + 0x18) >> 1)
                sub_1C151EC8C();
              sub_1C151ECEC();
              sub_1C151EBEC();
              swift_endAccess();
              swift_release_n();
            }
            if (!v38)
            {
              swift_retain();
              uint64_t v38 = v5;
            }
            goto LABEL_8;
          }
          uint64_t v5 = *(void *)(v2[7] + 8 * v17);
          swift_retain();
          swift_bridgeObjectRelease();
          sub_1C0368EB4(v7, v8, v10, v9, v40, v11);
          swift_release();
LABEL_8:
          v6 += 12;
          if (!--v4)
          {
            swift_bridgeObjectRelease();
            uint64_t v1 = v37;
            goto LABEL_4;
          }
          break;
      }
    }
  }
  type metadata accessor for FormatDerivedDataBindingNode();
  uint64_t result = (void *)swift_allocObject();
  result[2] = 0;
  result[3] = 0;
  result[5] = 0;
  result[6] = 0;
  result[4] = 128;
  *(void *)((char *)result + 54) = 0;
  result[8] = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1C0FA6C98(uint64_t result, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  switch((a6 >> 45) & 7)
  {
    case 0uLL:
      uint64_t result = sub_1C00F5ACC(result, a2, a3);
      break;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0FA6CF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0FA6F20(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0FA6D4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0FA6DAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0FA6E14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0FA6E7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0FA6ED8(uint64_t a1, void (*a2)(void, void, void, void, void, unint64_t))
{
  return a1;
}

void sub_1C0FA6F20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0FA6FE4()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed10FormatView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedLayoutCacheItem.groupLayoutIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedLayoutCacheItem.layoutResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  char v5 = *(unsigned char *)(v1 + 72);
  long long v6 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedLayoutCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1C0091724();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C1518D9C();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(void *)(v0 + 72) = 0;
  return v0;
}

uint64_t FeedLayoutCache.init()()
{
  sub_1C0091724();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C1518D9C();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(void *)(v0 + 72) = 0;
  return v0;
}

void *FeedLayoutCache.__allocating_init(database:)(uint64_t a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  sub_1C0091724();
  swift_allocObject();
  v2[2] = sub_1C1518D9C();
  v2[8] = 0;
  v2[9] = 0;
  sub_1C0088240(a1, (uint64_t)(v2 + 3));
  return v2;
}

uint64_t FeedLayoutCache.lookup(cacheKey:)()
{
  return sub_1C1518DCC();
}

uint64_t FeedLayoutCache.deinit()
{
  swift_release();
  sub_1BFEA1F7C(v0 + 24);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedLayoutCache.__deallocating_deinit()
{
  swift_release();
  sub_1BFEA1F7C(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FeedLayoutCacheKey.hashValue.getter()
{
  sub_1C1520DBC();
  FeedLayoutCacheKey.hash(into:)((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t sub_1C0FA72C8()
{
  sub_1C1520DBC();
  FeedLayoutCacheKey.hash(into:)((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t sub_1C0FA730C()
{
  return sub_1C1520DFC();
}

uint64_t assignWithCopy for FeedLayoutCacheItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for FeedLayoutCacheItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for FeedLayoutCacheItem()
{
  return &type metadata for FeedLayoutCacheItem;
}

uint64_t dispatch thunk of FeedLayoutCacheType.set(session:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FeedLayoutCacheType.lookup(cacheKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeedLayoutCacheType.bindLookup(cacheKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FeedLayoutCacheType.store(cacheKey:feedGroupLayout:layoutResult:saveToDatabase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t method lookup function for FeedLayoutCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedLayoutCache);
}

uint64_t dispatch thunk of FeedLayoutCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FeedLayoutCache.__allocating_init(database:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *initializeBufferWithCopyOfBuffer for FeedLayoutCacheKey(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v8 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = (void *)a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
    *(void *)(a1 + 120) = a2[15];
    long long v11 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v11;
    uint64_t v12 = *(int *)(a3 + 76);
    uint64_t v18 = (uint64_t)a2 + v12;
    uint64_t v19 = a1 + v12;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    uint64_t v13 = sub_1C151794C();
    unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v10;
    swift_retain();
    v17(v19, v18, v13);
  }
  return v3;
}

uint64_t assignWithCopy for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v6 = *(void **)(a2 + 104);
  uint64_t v7 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v6;
  id v8 = v6;

  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v9 = *(int *)(a3 + 76);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  uint64_t v7 = *(int *)(a3 + 76);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v10 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 104);
  uint64_t v12 = *(void **)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;

  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  long long v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v14 = *(int *)(a3 + 76);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0FA7A64);
}

uint64_t sub_1C0FA7A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151794C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 76);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0FA7B28);
}

uint64_t sub_1C0FA7B28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151794C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 76);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t dispatch thunk of PublisherLogoImageStylerType.publisherLogoTheme(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

BOOL static FormatSwitchListValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  type metadata accessor for FormatSwitchListValue.CaseValue();
  swift_getWitnessTable();
  if ((sub_1C151ED6C() & 1) == 0) {
    return 0;
  }
  if (!v2)
  {
    if (!v3) {
      return 1;
    }
    goto LABEL_9;
  }
  if (!v3)
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain_n();
  char v4 = sub_1C151ED6C();
  swift_bridgeObjectRelease_n();
  return (v4 & 1) != 0;
}

uint64_t FormatSwitchListValue.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v21 = sub_1C15191EC();
  uint64_t v5 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v9 = type metadata accessor for FormatSwitchListValue.CaseValue();
  uint64_t v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C18C6870](v10, v9)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v11 = 0;
  char v20 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v12 = (uint64_t *)(v8 + 40);
  while (1)
  {
    char v13 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v13 & 1) == 0) {
      break;
    }
    if (__OFADD__(v11, 1)) {
      goto LABEL_15;
    }
    uint64_t v24 = v11 + 1;
    uint64_t v25 = v11;
    uint64_t v15 = *(v12 - 1);
    uint64_t v16 = *v12;
    uint64_t v26 = v15;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BFF17D10(v22, v23, (uint64_t)v7);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    uint64_t v28 = 0;
    swift_release();
    if ((sub_1C15191DC() & 1) == 0)
    {
      uint64_t v26 = v15;
      uint64_t v27 = v16;
      uint64_t v17 = v28;
      sub_1C0543328(v22, v23);
      uint64_t v28 = v17;
      if (v17)
      {
        (*v20)(v7, v21);
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    char v18 = sub_1C15191CC();
    swift_bridgeObjectRelease();
    swift_release();
    (*v20)(v7, v21);
    if ((v18 & 1) == 0)
    {
      uint64_t v19 = MEMORY[0x1C18C6870](v8, v9);
      uint64_t v11 = v25 + 1;
      v12 += 2;
      uint64_t v4 = v28;
      if (v24 != v19) {
        continue;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1C0FA7F64(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  if ((static FormatExpression.== infix(_:_:)(&v5, &v4) & 1) == 0) {
    return 0;
  }
  return sub_1C151ED6C();
}

uint64_t sub_1C0FA7FEC(uint64_t *a1, unint64_t *a2)
{
  return sub_1C0FA7F64(a1, a2);
}

uint64_t FormatSwitchListValue.DefaultValue.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatSwitchListValue.DefaultValue.== infix(_:_:)()
{
  return sub_1C151ED6C();
}

uint64_t sub_1C0FA8010()
{
  return static FormatSwitchListValue.DefaultValue.== infix(_:_:)();
}

BOOL sub_1C0FA801C(uint64_t a1, uint64_t a2)
{
  return static FormatSwitchListValue.== infix(_:_:)(a1, a2);
}

uint64_t sub_1C0FA8028(uint64_t a1, uint64_t a2)
{
  return FormatSwitchListValue.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C0FA8040(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0FA807C(void *a1)
{
  return sub_1BFC3CD6C(a1);
}

uint64_t sub_1C0FA80BC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0FA80F8(void *a1)
{
  return sub_1BFC3CD6C(a1);
}

void *sub_1C0FA8138(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0FA8198(void *a1)
{
  return sub_1BFC3CD6C(a1);
}

uint64_t sub_1C0FA81D8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t FormatGroup.columns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.requirements.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatGroup.contentSizeCategory.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

uint64_t FormatGroup.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroup.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.types.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 FormatGroup.init(identifier:name:description:priority:columns:columnSystem:children:styles:sortBy:selectors:options:types:contentSizeCategory:requirements:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, _OWORD *a10, long long a11, __n128 a12, uint64_t a13, uint64_t a14, char *a15, uint64_t a16)
{
  __n128 result = a12;
  char v17 = *a7;
  char v18 = *a15;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = v17;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = *a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(__n128 *)(a9 + 96) = a12;
  *(void *)(a9 + 112) = a13;
  *(void *)(a9 + 120) = a14;
  *(unsigned char *)(a9 + 128) = v18;
  *(void *)(a9 + 136) = a16;
  return result;
}

uint64_t FormatGroup.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatGroup.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

uint64_t FormatGroup.sortBy.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroup.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatGroup.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatGroup.description.modify())(void)
{
  return nullsub_1;
}

unsigned char *FormatGroup.priority.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*FormatGroup.priority.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.columns.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatGroup.columns.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.columnSystem.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  unint64_t v3 = *(void *)(v1 + 72);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEB9640(v2, v3);
}

uint64_t FormatGroup.columnSystem.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1BFFD0438(*(void *)(v1 + 64), *(void *)(v1 + 72));
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  return result;
}

uint64_t (*FormatGroup.columnSystem.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.children.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatGroup.children.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.styles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatGroup.styles.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.sortBy.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatGroup.sortBy.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatGroup.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatGroup.options.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.types.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*FormatGroup.types.modify())(void)
{
  return nullsub_1;
}

unsigned char *FormatGroup.contentSizeCategory.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 128) = *result;
  return result;
}

uint64_t (*FormatGroup.contentSizeCategory.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroup.requirements.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 136) = a1;
  return result;
}

uint64_t (*FormatGroup.requirements.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0FA8714()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed11FormatGroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 48);
  uint64_t v42 = *(void *)(a1 + 56);
  uint64_t v38 = *(void *)(a1 + 64);
  unint64_t v40 = *(void *)(a1 + 72);
  uint64_t v36 = *(void *)(a1 + 80);
  uint64_t v34 = *(void *)(a1 + 88);
  uint64_t v32 = *(void *)(a1 + 96);
  uint64_t v30 = *(void *)(a1 + 104);
  uint64_t v28 = *(void *)(a1 + 112);
  uint64_t v26 = *(void *)(a1 + 120);
  char v24 = *(unsigned char *)(a1 + 128);
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 48);
  uint64_t v41 = *(void *)(a2 + 56);
  uint64_t v37 = *(void *)(a2 + 64);
  unint64_t v39 = *(void *)(a2 + 72);
  uint64_t v35 = *(void *)(a2 + 80);
  uint64_t v33 = *(void *)(a2 + 88);
  uint64_t v31 = *(void *)(a2 + 96);
  uint64_t v29 = *(void *)(a2 + 104);
  uint64_t v27 = *(void *)(a2 + 112);
  uint64_t v25 = *(void *)(a2 + 120);
  char v23 = *(unsigned char *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  if ((*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (!v8 || (v2 != v7 || v4 != v8) && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v5)
  {
    if (!v10 || (v3 != v9 || v5 != v10) && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  if ((sub_1C1489C80(v6, v11) & 1) == 0 || (sub_1BFD3C000(v42, v41) & 1) == 0) {
    return 0;
  }
  if (v40 != 2)
  {
    uint64_t v44 = v38;
    unint64_t v45 = v40;
    if (v39 != 2)
    {
      v43[0] = v37;
      v43[1] = v39;
      sub_1BFEB9640(v38, v40);
      sub_1C0187DE0(v38, v40);
      BOOL v12 = _s8NewsFeed23FormatGroupColumnSystemO2eeoiySbAC_ACtFZ_0(&v44, (uint64_t)v43);
      sub_1BFFBE2A8(v44, v45);
      sub_1BFFD0438(v38, v40);
      if (!v12) {
        return 0;
      }
      goto LABEL_27;
    }
    sub_1C0187DE0(v38, v40);
    sub_1C0187DE0(v38, v40);
    sub_1BFFBE2A8(v38, v40);
LABEL_25:
    sub_1BFEB9640(v37, v39);
    sub_1BFFD0438(v38, v40);
    sub_1BFFD0438(v37, v39);
    return 0;
  }
  if (v39 != 2) {
    goto LABEL_25;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00E0E68(v36, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C00E1078(v34, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v15 = sub_1C00ECAB4(v32, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v16 = sub_1BFEFAE14(v30, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v17 = sub_1C00E0650(v28, v27);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v18 = sub_1C00E8B40(v26, v25);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18)
            {
              LOBYTE(v44) = v24;
              LOBYTE(v43[0]) = v23;
              if (_s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v44, (unsigned __int8 *)v43))
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                char v19 = sub_1C00F0C34(v22, v21);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v19 & 1;
              }
            }
          }
        }
      }
    }
  }
  return 0;
}

unint64_t sub_1C0FA8B84(uint64_t a1)
{
  unint64_t result = sub_1C00F6D64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FA8BAC(void *a1)
{
  a1[1] = sub_1BFFF22EC();
  a1[2] = sub_1C0084004();
  unint64_t result = sub_1C0FA8BE4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FA8BE4()
{
  unint64_t result = qword_1EB890F48;
  if (!qword_1EB890F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F48);
  }
  return result;
}

uint64_t sub_1C0FA8C38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8C44(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C0FA8C88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8C94(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1C0FA8CD8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 48);
  return result;
}

unsigned char *sub_1C0FA8CE4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 48) = *result;
  return result;
}

uint64_t sub_1C0FA8CF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8CFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1C0FA8D40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8D4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 80) = v3;
  return result;
}

uint64_t sub_1C0FA8D90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8D9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 88) = v3;
  return result;
}

uint64_t sub_1C0FA8DE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8DEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 96) = v3;
  return result;
}

uint64_t sub_1C0FA8E30@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8E3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 104) = v3;
  return result;
}

uint64_t sub_1C0FA8E80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8E8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_1C0FA8ED0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8EDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 120) = v3;
  return result;
}

uint64_t sub_1C0FA8F20@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 128);
  return result;
}

unsigned char *sub_1C0FA8F2C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 128) = *result;
  return result;
}

uint64_t sub_1C0FA8F38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FA8F44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 136) = v3;
  return result;
}

uint64_t assignWithCopy for FormatGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 72);
  unint64_t v5 = *(void *)(a2 + 72);
  if (v4 == 2)
  {
    if (v5 > 2) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 2)
  {
    sub_1C01D3D9C(a1 + 64);
    goto LABEL_11;
  }
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C0B857A4(a1 + 64);
    goto LABEL_11;
  }
  if (v5 < 2)
  {
LABEL_11:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_12;
  }
LABEL_8:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
LABEL_12:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = (unsigned char *)(a2 + 64);
  unint64_t v8 = *(void *)(a1 + 72);
  unint64_t v9 = *(void *)(a2 + 72);
  if (v8 != 2)
  {
    if (v9 == 2)
    {
      sub_1C01D3D9C(a1 + 64);
    }
    else if (v8 >= 2)
    {
      if (v9 >= 2)
      {
        *(unsigned char *)(a1 + 64) = *v7;
        *(void *)(a1 + 72) = v9;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1C0B857A4(a1 + 64);
    }
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)v7;
LABEL_8:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroup()
{
  return &type metadata for FormatGroup;
}

uint64_t sub_1C0FA92F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C0FAA4C0(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C0FA9344()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatUploadDiffHunk()
{
  return self;
}

void *sub_1C0FA93A0(uint64_t a1)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      if (v3 >> 32 < (int)v3)
      {
        __break(1u);
LABEL_35:
        __break(1u);
      }
      sub_1BFE95820(*(void *)(a1 + 16), v2);
      swift_retain();
      uint64_t v8 = sub_1C037F8CC((int)v3, v3 >> 32, v2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      unint64_t v10 = v9;
      sub_1BFE95664(v3, v2);
      if (v10) {
        goto LABEL_15;
      }
      goto LABEL_7;
    case 2uLL:
      uint64_t v11 = *(void *)(v3 + 16);
      uint64_t v12 = *(void *)(v3 + 24);
      sub_1BFE95820(*(void *)(a1 + 16), v2);
      swift_retain();
      swift_retain();
      uint64_t v8 = sub_1C037F8CC(v11, v12, v2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      unint64_t v10 = v13;
      swift_release();
      swift_release();
      if (v10) {
        goto LABEL_15;
      }
LABEL_7:
      uint64_t v44 = v3;
      unint64_t v45 = v2;
      sub_1BFE95820(v3, v2);
      sub_1C00C2AD4();
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v41, (uint64_t)&v46);
        __swift_project_boxed_opaque_existential_1(&v46, v48);
        if (sub_1C152054C())
        {
          __swift_project_boxed_opaque_existential_1(&v46, v48);
          sub_1C152053C();
          sub_1BFE95664(v3, v2);
          unint64_t v10 = *((void *)&v41 + 1);
          uint64_t v8 = v41;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
          goto LABEL_16;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
      }
      else
      {
        uint64_t v43 = 0;
        long long v41 = 0u;
        long long v42 = 0u;
        sub_1C0FAA434((uint64_t)&v41);
      }
      uint64_t v6 = sub_1C037F818(v3, v2);
LABEL_14:
      uint64_t v8 = v6;
      unint64_t v10 = v7;
LABEL_15:
      sub_1BFE95664(v3, v2);
LABEL_16:
      char v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteData);
      unint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteData + 8);
      if (v15 >> 60 == 15)
      {
        uint64_t v16 = 0;
        unint64_t v17 = 0xE000000000000000;
      }
      else
      {
        uint64_t v18 = *v14;
        switch(v15 >> 62)
        {
          case 1uLL:
            if (v18 >> 32 < (int)v18) {
              goto LABEL_35;
            }
            sub_1BFE95820(*v14, v15);
            swift_retain();
            uint64_t v16 = sub_1C037F8CC((int)v18, v18 >> 32, v15 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
            unint64_t v17 = v21;
            sub_1BFE95878(v18, v15);
            if (v17) {
              goto LABEL_32;
            }
LABEL_24:
            uint64_t v44 = v18;
            unint64_t v45 = v15;
            sub_1BFE95820(v18, v15);
            sub_1C00C2AD4();
            if (swift_dynamicCast())
            {
              sub_1BFC773DC(&v41, (uint64_t)&v46);
              __swift_project_boxed_opaque_existential_1(&v46, v48);
              if (sub_1C152054C())
              {
                __swift_project_boxed_opaque_existential_1(&v46, v48);
                sub_1C152053C();
                sub_1BFE95878(v18, v15);
                unint64_t v17 = *((void *)&v41 + 1);
                uint64_t v16 = v41;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
                break;
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
            }
            else
            {
              uint64_t v43 = 0;
              long long v41 = 0u;
              long long v42 = 0u;
              sub_1C0FAA434((uint64_t)&v41);
            }
            uint64_t v19 = sub_1C037F818(v18, v15);
LABEL_31:
            uint64_t v16 = v19;
            unint64_t v17 = v20;
LABEL_32:
            sub_1BFE95878(v18, v15);
            break;
          case 2uLL:
            uint64_t v22 = *(void *)(v18 + 16);
            uint64_t v23 = *(void *)(v18 + 24);
            sub_1C00C2AC0(*v14, v15);
            swift_retain();
            swift_retain();
            uint64_t v16 = sub_1C037F8CC(v22, v23, v15 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
            unint64_t v17 = v24;
            swift_release();
            swift_release();
            if (!v17) {
              goto LABEL_24;
            }
            goto LABEL_32;
          case 3uLL:
            *(void *)((char *)&v41 + 6) = 0;
            *(void *)&long long v41 = 0;
            sub_1C037FB34(&v46);
            sub_1BFE95878(v18, v15);
            uint64_t v16 = v46;
            unint64_t v17 = v47;
            break;
          default:
            uint64_t v46 = *v14;
            LOWORD(v47) = v15;
            BYTE2(v47) = BYTE2(v15);
            BYTE3(v47) = BYTE3(v15);
            BYTE4(v47) = BYTE4(v15);
            BYTE5(v47) = BYTE5(v15);
            uint64_t v19 = sub_1C151E75C();
            goto LABEL_31;
        }
      }
      uint64_t v46 = v8;
      unint64_t v47 = v10;
      sub_1BFF27ECC();
      uint64_t v25 = sub_1C151FF1C();
      swift_bridgeObjectRelease();
      uint64_t v46 = v16;
      unint64_t v47 = v17;
      uint64_t v26 = sub_1C151FF1C();
      swift_bridgeObjectRelease();
      uint64_t v27 = self;
      id v28 = objc_msgSend(v27, sel_systemGreenColor);
      id v29 = objc_msgSend(v28, sel_colorWithAlphaComponent_, 0.3);

      id v30 = objc_msgSend(v27, sel_systemRedColor);
      id v31 = objc_msgSend(v30, sel_colorWithAlphaComponent_, 0.3);

      uint64_t v32 = swift_bridgeObjectRetain();
      unint64_t v33 = sub_1C0FA9C10(v32, v29, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = swift_bridgeObjectRetain();
      unint64_t v35 = sub_1C0FA9C10(v34, v31, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4[2] = a1;
      swift_retain();
      uint64_t v36 = swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C0FAA048(v36, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4[3] = v37;
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v39 = sub_1C0FAA048(v38, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      v4[4] = v39;
      return v4;
    case 3uLL:
      *(void *)((char *)&v41 + 6) = 0;
      *(void *)&long long v41 = 0;
      sub_1C037FB34(&v46);
      sub_1BFE95664(v3, v2);
      uint64_t v8 = v46;
      unint64_t v10 = v47;
      goto LABEL_16;
    default:
      uint64_t v46 = *(void *)(a1 + 16);
      LOWORD(v47) = v2;
      BYTE2(v47) = BYTE2(v2);
      BYTE3(v47) = BYTE3(v2);
      BYTE4(v47) = BYTE4(v2);
      BYTE5(v47) = BYTE5(v2);
      uint64_t v6 = sub_1C151E75C();
      goto LABEL_14;
  }
}

uint64_t sub_1C0FA9C10(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    unint64_t v7 = (void *)*MEMORY[0x1E4FB06F8];
    double v8 = *MEMORY[0x1E4FB09D8];
    unint64_t v9 = (void *)*MEMORY[0x1E4FB0700];
    uint64_t v37 = (void *)*MEMORY[0x1E4FB06C0];
    unint64_t v10 = (uint64_t *)(a3 + 56);
    do
    {
      uint64_t v11 = *(v10 - 3);
      uint64_t v12 = *(v10 - 2);
      uint64_t v13 = *(v10 - 1);
      uint64_t v14 = *v10;
      BOOL v15 = sub_1BFFC399C(v6, a1);
      swift_bridgeObjectRetain();
      MEMORY[0x1C18C6220](v11, v12, v13, v14);
      swift_bridgeObjectRelease();
      sub_1C0FAA5B4(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      if (v15)
      {
        *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
        *(void *)(inited + 32) = v7;
        unint64_t v17 = self;
        id v18 = v7;
        id v19 = objc_msgSend(v17, sel_monospacedSystemFontOfSize_weight_, 12.0, v8);
        uint64_t v20 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
        *(void *)(inited + 40) = v19;
        *(void *)(inited + 64) = v20;
        *(void *)(inited + 72) = v9;
        unint64_t v21 = self;
        id v22 = v9;
        id v23 = objc_msgSend(v21, sel_labelColor);
        uint64_t v24 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
        *(void *)(inited + 80) = v23;
        *(void *)(inited + 104) = v24;
        *(void *)(inited + 112) = v37;
        *(void *)(inited + 144) = v24;
        *(void *)(inited + 120) = a2;
        id v25 = v37;
        id v26 = a2;
      }
      else
      {
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        *(void *)(inited + 32) = v7;
        id v29 = self;
        id v30 = v7;
        id v31 = objc_msgSend(v29, sel_monospacedSystemFontOfSize_weight_, 12.0, v8);
        uint64_t v32 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
        *(void *)(inited + 40) = v31;
        *(void *)(inited + 64) = v32;
        *(void *)(inited + 72) = v9;
        unint64_t v33 = self;
        id v34 = v9;
        id v35 = objc_msgSend(v33, sel_labelColor);
        *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
        *(void *)(inited + 80) = v35;
      }
      sub_1BFF991DC(inited);
      id v27 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      id v28 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BFF9A290();
      uint64_t v36 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_initWithString_attributes_, v28, v36);

      MEMORY[0x1C18C66D0]();
      if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      ++v6;
      sub_1C151EBEC();
      v10 += 4;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
    return v40;
  }
  return result;
}

uint64_t sub_1C0FAA048(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_bridgeObjectRetain();
    return sub_1C0FA92F4(a1, a2);
  }
  return MEMORY[0x1E4FBC860];
}

void *sub_1C0FAA0EC@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = *a1 - 5;
  if (__OFSUB__(*a1, 5))
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v9 = a1[1];
  unint64_t v5 = v9 + 5;
  if (__OFADD__(v9, 5))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a2 >> 62;
  if (!(a2 >> 62))
  {
    uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v11 = v10 - 1;
    if (!__OFSUB__(v10, 1)) {
      goto LABEL_5;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_36:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 - 1;
  if (__OFSUB__(v10, 1)) {
    goto LABEL_38;
  }
LABEL_5:
  uint64_t v10 = v8 & ~(v8 >> 63);
  if (v11 >= (uint64_t)v5) {
    int64_t v6 = v5;
  }
  else {
    int64_t v6 = v11;
  }
  if (v6 < v10) {
    goto LABEL_39;
  }
  if (v4)
  {
    if (v3 < 0) {
      uint64_t v8 = v3;
    }
    else {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    if (sub_1C15204BC() < v10) {
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8 < (unint64_t)v10) {
      goto LABEL_40;
    }
  }
  if (v8 <= v6)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  int64_t v12 = v6 + 1;
  if ((v3 & 0xC000000000000001) != 0 && v10 != v12)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1C0);
    uint64_t v13 = v10;
    do
    {
      uint64_t v14 = v13 + 1;
      sub_1C152015C();
      uint64_t v13 = v14;
    }
    while (v12 != v14);
  }
  id v22 = (void *)a3;
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204CC();
    uint64_t v4 = v15;
    a3 = v16;
    unint64_t v5 = v17;
    swift_bridgeObjectRelease_n();
    if (v5) {
      goto LABEL_27;
    }
LABEL_26:
    uint64_t v18 = sub_1C00B3DB8(v8, v4, a3, v5);
    goto LABEL_33;
  }
  uint64_t v8 = v3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  unint64_t v5 = (2 * v12) | 1;
  a3 = v10;
  if ((v5 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_27:
  sub_1C1520B6C();
  swift_unknownObjectRetain_n();
  uint64_t v19 = swift_dynamicCastClass();
  if (!v19)
  {
    swift_unknownObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = *(void *)(v19 + 16);
  swift_release();
  if (__OFSUB__(v5 >> 1, a3)) {
    goto LABEL_42;
  }
  if (v20 != (v5 >> 1) - a3)
  {
LABEL_43:
    swift_unknownObjectRelease();
    goto LABEL_26;
  }
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_unknownObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
LABEL_33:
  swift_unknownObjectRelease();
  type metadata accessor for DebugFormatUploadDiffHunk();
  uint64_t result = (void *)swift_allocObject();
  result[3] = v10;
  result[4] = v6;
  result[2] = v18;
  *id v22 = result;
  return result;
}

uint64_t sub_1C0FAA3A0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatUploadDiffChangeSet()
{
  return self;
}

uint64_t sub_1C0FAA40C()
{
  return sub_1C00C2734();
}

uint64_t sub_1C0FAA434(uint64_t a1)
{
  sub_1C0FAA5B4(0, (unint64_t *)&qword_1EA1A2000, (uint64_t (*)(uint64_t))sub_1C00C2AD4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0FAA4C0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    for (uint64_t i = (long long *)(a1 + 32); ; ++i)
    {
      long long v9 = *i;
      sub_1C0FAA0EC(&v9, a2, (uint64_t)&v10);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (!--v5) {
        return v11;
      }
    }
    return swift_release();
  }
  return result;
}

void sub_1C0FAA5B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_1C0FAA618(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v10 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
        uint64_t started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
        uint64_t v14 = sub_1C151631C();
        uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16);
        v15(v7, v8, v14);
        uint64_t v16 = type metadata accessor for StartTimeEndTime(0);
        v15(&v7[*(int *)(v16 + 20)], &v8[*(int *)(v16 + 20)], v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return v3;
}

uint64_t sub_1C0FAAB5C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t v6 = sub_1C151631C();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t v8 = v6;
      uint64_t v9 = v4;
      goto LABEL_4;
    case 8:
    case 9:
      uint64_t v10 = sub_1C151631C();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v10 - 8), v4, v10);
      uint64_t v9 = v4 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      uint64_t v8 = v10;
      uint64_t v7 = v11;
LABEL_4:
      uint64_t result = v7(v9, v8);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C0FAACB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v9 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
      uint64_t started = type metadata accessor for StartTime(0);
      v6[*(int *)(started + 20)] = v7[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v11 = sub_1C151631C();
      uint64_t v12 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(v6, v7, v11);
      uint64_t v13 = type metadata accessor for StartTimeEndTime(0);
      v12(&v6[*(int *)(v13 + 20)], &v7[*(int *)(v13 + 20)], v11);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1C0FAB184(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C0FAC934((uint64_t)a1 + v6, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    uint64_t v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v10 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
        uint64_t started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v12 = sub_1C151631C();
        uint64_t v13 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16);
        v13(v7, v8, v12);
        uint64_t v14 = type metadata accessor for StartTimeEndTime(0);
        v13(&v7[*(int *)(v14 + 20)], &v8[*(int *)(v14 + 20)], v12);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1C0FAB690(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v8 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      uint64_t started = type metadata accessor for StartTime(0);
      v5[*(int *)(started + 20)] = v6[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v10 = sub_1C151631C();
      uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v5, v6, v10);
      uint64_t v12 = type metadata accessor for StartTimeEndTime(0);
      v11(&v5[*(int *)(v12 + 20)], &v6[*(int *)(v12 + 20)], v10);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1C0FABB58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1C0FAC934((uint64_t)a1 + v7, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    uint64_t v10 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v11 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        uint64_t started = type metadata accessor for StartTime(0);
        v8[*(int *)(started + 20)] = v9[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v13 = sub_1C151631C();
        uint64_t v14 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32);
        v14(v8, v9, v13);
        uint64_t v15 = type metadata accessor for StartTimeEndTime(0);
        v14(&v8[*(int *)(v15 + 20)], &v9[*(int *)(v15 + 20)], v13);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0FAC054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0FAC068);
}

uint64_t sub_1C0FAC068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0FAC118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0FAC12C);
}

uint64_t sub_1C0FAC12C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsEventStatusResponseEmbed()
{
  uint64_t result = qword_1EB8690E0;
  if (!qword_1EB8690E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0FAC220()
{
  uint64_t result = type metadata accessor for SportsDataVisualizationResponseEventStatus(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0FAC2B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FAC994(0, &qword_1EB86B718, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for SportsEventStatusResponseEmbed();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FAC818();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v19;
  uint64_t v14 = (uint64_t)v21;
  LOBYTE(v20[0]) = 0;
  *uint64_t v12 = sub_1C152069C();
  v12[1] = v15;
  sub_1BFC66384((uint64_t)a1, (uint64_t)v20);
  SportsDataVisualizationResponseEventStatus.init(from:)(v20, v14);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
  sub_1C0FAC86C(v14, (uint64_t)v12 + *(int *)(v10 + 20));
  sub_1C0FAC8D0((uint64_t)v12, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C0FAC934((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
}

uint64_t sub_1C0FAC56C(void *a1)
{
  sub_1C0FAC994(0, &qword_1EA1A99E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FAC818();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C15207CC();
  if (!v1)
  {
    type metadata accessor for SportsEventStatusResponseEmbed();
    v9[14] = 1;
    type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    sub_1C0FAC9F8();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0FAC708()
{
  if (*v0) {
    return 0x737574617473;
  }
  else {
    return 0x6163696E6F6E6163;
  }
}

uint64_t sub_1C0FAC748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0FACC5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0FAC770(uint64_t a1)
{
  unint64_t v2 = sub_1C0FAC818();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0FAC7AC(uint64_t a1)
{
  unint64_t v2 = sub_1C0FAC818();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0FAC7E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0FAC2B8(a1, a2);
}

uint64_t sub_1C0FAC800(void *a1)
{
  return sub_1C0FAC56C(a1);
}

unint64_t sub_1C0FAC818()
{
  unint64_t result = qword_1EB8690C0;
  if (!qword_1EB8690C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8690C0);
  }
  return result;
}

uint64_t sub_1C0FAC86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0FAC8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0FAC934(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0FAC994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0FAC818();
    unint64_t v7 = a3(a1, &type metadata for SportsEventStatusResponseEmbed.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0FAC9F8()
{
  unint64_t result = qword_1EB86F450;
  if (!qword_1EB86F450)
  {
    type metadata accessor for SportsDataVisualizationResponseEventStatus(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F450);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsEventStatusResponseEmbed.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FACB1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEventStatusResponseEmbed.CodingKeys()
{
  return &type metadata for SportsEventStatusResponseEmbed.CodingKeys;
}

unint64_t sub_1C0FACB58()
{
  unint64_t result = qword_1EA1A99F0;
  if (!qword_1EA1A99F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A99F0);
  }
  return result;
}

unint64_t sub_1C0FACBB0()
{
  unint64_t result = qword_1EB8690D0;
  if (!qword_1EB8690D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8690D0);
  }
  return result;
}

unint64_t sub_1C0FACC08()
{
  unint64_t result = qword_1EB8690C8;
  if (!qword_1EB8690C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8690C8);
  }
  return result;
}

uint64_t sub_1C0FACC5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6163696E6F6E6163 && a2 == 0xEB0000000064496CLL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t SportsRecord.wins.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecord.losses.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecord.ties.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecord.rank.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SportsRecord.recordDescription.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v6)
  {
    uint64_t v8 = self;
    swift_bridgeObjectRetain();
    id v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    sub_1BFFDEB20();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C152C7F0;
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1BFE9C558();
    *(void *)(v10 + 32) = v2;
    *(void *)(v10 + 40) = v1;
    *(void *)(v10 + 96) = v11;
    *(void *)(v10 + 104) = v12;
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 72) = v4;
    *(void *)(v10 + 80) = v3;
    *(void *)(v10 + 136) = v11;
    *(void *)(v10 + 144) = v12;
    *(void *)(v10 + 112) = v5;
    *(void *)(v10 + 120) = v6;
  }
  else
  {
    id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    sub_1BFFDEB20();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v16 = sub_1BFE9C558();
    *(void *)(v14 + 32) = v2;
    *(void *)(v14 + 40) = v1;
    *(void *)(v14 + 96) = v15;
    *(void *)(v14 + 104) = v16;
    *(void *)(v14 + 64) = v16;
    *(void *)(v14 + 72) = v4;
    *(void *)(v14 + 80) = v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C0FAD064()
{
  uint64_t result = 1936615799;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736573736F6CLL;
      break;
    case 2:
      uint64_t result = 1936025972;
      break;
    case 3:
      uint64_t result = 1802396018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0FAD0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0FADE10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0FAD0F8(uint64_t a1)
{
  unint64_t v2 = sub_1C0FAD8C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0FAD134(uint64_t a1)
{
  unint64_t v2 = sub_1C0FAD8C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsRecord.encode(to:)(void *a1)
{
  sub_1C0FAD968(0, &qword_1EA1A99F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = v1[2];
  uint64_t v21 = v1[3];
  uint64_t v22 = v8;
  uint64_t v9 = v1[4];
  uint64_t v19 = v1[5];
  uint64_t v20 = v9;
  uint64_t v10 = v1[6];
  uint64_t v17 = v1[7];
  uint64_t v18 = v10;
  uint64_t v16 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FAD8C0();
  sub_1C1520F0C();
  LOBYTE(v24) = 0;
  uint64_t v11 = v23;
  sub_1C15207CC();
  if (!v11)
  {
    uint64_t v13 = v17;
    uint64_t v12 = v18;
    LOBYTE(v24) = 1;
    sub_1C15207CC();
    LOBYTE(v24) = 2;
    sub_1C152074C();
    uint64_t v24 = v12;
    uint64_t v25 = v13;
    uint64_t v26 = v16;
    char v27 = 3;
    sub_1C0FAD914();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SportsRecord.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0FAD968(0, &qword_1EA1A9A10, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FAD8C0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v28) = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v26 = v10;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v27 = v14;
  uint64_t v25 = v13;
  LOBYTE(v28) = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C152060C();
  char v31 = 3;
  uint64_t v16 = v15;
  sub_1C0FAD9CC();
  uint64_t v24 = v16;
  swift_bridgeObjectRetain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = v28;
  uint64_t v19 = v29;
  uint64_t v20 = v30;
  swift_bridgeObjectRetain();
  uint64_t v21 = v27;
  *a2 = v26;
  a2[1] = v12;
  uint64_t v22 = v24;
  a2[2] = v25;
  a2[3] = v21;
  a2[4] = v23;
  a2[5] = v22;
  a2[6] = v18;
  a2[7] = v19;
  a2[8] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0FAD6E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsRecord.init(from:)(a1, a2);
}

uint64_t sub_1C0FAD700(void *a1)
{
  return SportsRecord.encode(to:)(a1);
}

uint64_t _s8NewsFeed12SportsRecordV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[8];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v18 = a2[6];
  uint64_t v19 = a1[6];
  uint64_t v11 = a2[8];
  uint64_t v16 = a2[7];
  uint64_t v17 = a1[7];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v12 = sub_1C1520A9C(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (char v14 = sub_1C1520A9C(), result = 0, (v14 & 1) != 0))
    {
      if (v5)
      {
        if (!v9) {
          return 0;
        }
        if (v3 != v10 || v5 != v9)
        {
          char v15 = sub_1C1520A9C();
          uint64_t result = 0;
          if ((v15 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v9)
      {
        return 0;
      }
      if (v6)
      {
        if (v11)
        {
          if (v19 == v18)
          {
            if (v17 != v16 || v6 != v11)
            {
              return sub_1C1520A9C();
            }
            return 1;
          }
          return 0;
        }
        swift_bridgeObjectRetain();
      }
      else if (!v11)
      {
        return 1;
      }
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C0FAD8C0()
{
  unint64_t result = qword_1EA1A9A00;
  if (!qword_1EA1A9A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A00);
  }
  return result;
}

unint64_t sub_1C0FAD914()
{
  unint64_t result = qword_1EA1A9A08;
  if (!qword_1EA1A9A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A08);
  }
  return result;
}

void sub_1C0FAD968(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0FAD8C0();
    unint64_t v7 = a3(a1, &type metadata for SportsRecord.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0FAD9CC()
{
  unint64_t result = qword_1EA1A9A18;
  if (!qword_1EA1A9A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A18);
  }
  return result;
}

uint64_t destroy for SportsRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsRecord(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SportsRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FADCD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsRecord.CodingKeys()
{
  return &type metadata for SportsRecord.CodingKeys;
}

unint64_t sub_1C0FADD0C()
{
  unint64_t result = qword_1EA1A9A20;
  if (!qword_1EA1A9A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A20);
  }
  return result;
}

unint64_t sub_1C0FADD64()
{
  unint64_t result = qword_1EA1A9A28;
  if (!qword_1EA1A9A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A28);
  }
  return result;
}

unint64_t sub_1C0FADDBC()
{
  unint64_t result = qword_1EA1A9A30;
  if (!qword_1EA1A9A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A30);
  }
  return result;
}

uint64_t sub_1C0FADE10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1936615799 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736573736F6CLL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1936025972 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1802396018 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t FeedJournalFormatter.deinit()
{
  return v0;
}

uint64_t FeedJournalFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedJournalFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedJournalFormatter);
}

uint64_t sub_1C0FADFC4()
{
  return 0x73726579616C70;
}

uint64_t sub_1C0FADFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73726579616C70 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0FAE074(uint64_t a1)
{
  unint64_t v2 = sub_1C0FAE274();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0FAE0B0(uint64_t a1)
{
  unint64_t v2 = sub_1C0FAE274();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsRoster.encode(to:)(void *a1)
{
  sub_1C0FAE640(0, &qword_1EA1A9A38, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FAE274();
  sub_1C1520F0C();
  sub_1C0FAE2C8();
  sub_1C0FAE6F0(&qword_1EA1A9A40, (void (*)(uint64_t))sub_1C0FAE2C8);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C0FAE274()
{
  unint64_t result = qword_1EB8659A0;
  if (!qword_1EB8659A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8659A0);
  }
  return result;
}

void sub_1C0FAE2C8()
{
  if (!qword_1EB863D68)
  {
    type metadata accessor for SportsRosterPlayer();
    sub_1C0FAE6F0(&qword_1EB866788, (void (*)(uint64_t))type metadata accessor for SportsRosterPlayer);
    sub_1C0FAE6F0(&qword_1EB866780, (void (*)(uint64_t))type metadata accessor for SportsRosterPlayer);
    unint64_t v0 = sub_1C151852C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863D68);
    }
  }
}

uint64_t SportsRoster.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0FAE2C8();
  uint64_t v5 = v4;
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v21 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FAE640(0, &qword_1EB86B660, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = type metadata accessor for SportsRoster();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FAE274();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v14 = v19;
    uint64_t v15 = v20;
    sub_1C0FAE6F0(&qword_1EB863D60, (void (*)(uint64_t))sub_1C0FAE2C8);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v8);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v21, v5);
    sub_1C0FAE738((uint64_t)v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0FAE640(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0FAE274();
    unint64_t v7 = a3(a1, &type metadata for SportsRoster.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for SportsRoster()
{
  uint64_t result = qword_1EB8659D0;
  if (!qword_1EB8659D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0FAE6F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0FAE738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsRoster();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0FAE79C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsRoster.init(from:)(a1, a2);
}

uint64_t sub_1C0FAE7B4(void *a1)
{
  sub_1C0FAE640(0, &qword_1EA1A9A38, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FAE274();
  sub_1C1520F0C();
  sub_1C0FAE2C8();
  sub_1C0FAE6F0(&qword_1EA1A9A40, (void (*)(uint64_t))sub_1C0FAE2C8);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for SportsRoster(uint64_t a1, uint64_t a2)
{
  sub_1C0FAE2C8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for SportsRoster(uint64_t a1)
{
  sub_1C0FAE2C8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for SportsRoster(uint64_t a1, uint64_t a2)
{
  sub_1C0FAE2C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SportsRoster(uint64_t a1, uint64_t a2)
{
  sub_1C0FAE2C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SportsRoster(uint64_t a1, uint64_t a2)
{
  sub_1C0FAE2C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SportsRoster(uint64_t a1, uint64_t a2)
{
  sub_1C0FAE2C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsRoster(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0FAEBB0);
}

uint64_t sub_1C0FAEBB0(uint64_t a1, uint64_t a2)
{
  sub_1C0FAE2C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SportsRoster(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0FAEC30);
}

uint64_t sub_1C0FAEC30(uint64_t a1, uint64_t a2)
{
  sub_1C0FAE2C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_1C0FAECA0()
{
  sub_1C0FAE2C8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for SportsRoster.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0FAEDC8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsRoster.CodingKeys()
{
  return &type metadata for SportsRoster.CodingKeys;
}

unint64_t sub_1C0FAEE04()
{
  unint64_t result = qword_1EA1A9A48;
  if (!qword_1EA1A9A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A48);
  }
  return result;
}

unint64_t sub_1C0FAEE5C()
{
  unint64_t result = qword_1EB8659B0;
  if (!qword_1EB8659B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8659B0);
  }
  return result;
}

unint64_t sub_1C0FAEEB4()
{
  unint64_t result = qword_1EB8659A8;
  if (!qword_1EB8659A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8659A8);
  }
  return result;
}

Swift::Bool __swiftcall IssueCoverView.prepareForReuse(identifier:)(Swift::String_optional identifier)
{
  object = identifier.value._object;
  uint64_t countAndFlagsBits = identifier.value._countAndFlagsBits;
  unsigned int v4 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier + 8];
  if (v5)
  {
    if (!object) {
      goto LABEL_13;
    }
    BOOL v6 = *v4 == identifier.value._countAndFlagsBits && v5 == object;
    if (!v6 && (sub_1C1520A9C() & 1) == 0) {
      goto LABEL_13;
    }
  }
  else if (object)
  {
    goto LABEL_13;
  }
  objc_msgSend(v1, sel_bounds);
  if ((v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds + 32] & 1) == 0
    && CGRectEqualToRect(*(CGRect *)&v7, *(CGRect *)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds]))
  {
    return 0;
  }
LABEL_13:
  *unsigned int v4 = countAndFlagsBits;
  v4[1] = (uint64_t)object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = &v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  if (v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] != 1)
  {
    id v21 = sub_1BFE6CC9C();
    sub_1C151CD6C();

    return 1;
  }
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = 0;

  id v14 = sub_1BFE6CDD4();
  id v15 = objc_msgSend(v14, sel_subviews);

  sub_1C0063B40();
  unint64_t v16 = sub_1C151EBCC();

  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_16;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C15204BC();
  Swift::Bool result = swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_24;
  }
LABEL_16:
  if (v17 >= 1)
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x1C18C7CB0](i, v16);
      }
      else {
        id v19 = *(id *)(v16 + 8 * i + 32);
      }
      uint64_t v20 = v19;
      objc_msgSend(v19, sel_removeFromSuperview);
    }
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id IssueCoverView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

Swift::Void __swiftcall IssueCoverView.setMultiSelectionEditing(_:selected:)(Swift::Bool _, Swift::Bool selected)
{
  id v4 = objc_msgSend(v2, sel_layer);
  id v5 = objc_msgSend(v2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  double v7 = v6;

  objc_msgSend(v4, sel_setRasterizationScale_, v7);
  id v8 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v8, sel_setShouldRasterize_, _);
}

void sub_1C0FAF258(char a1, char a2)
{
  if (a1 == a2) {
    return;
  }
  if (!a1)
  {
    id v4 = sub_1BFE6CC9C();
    goto LABEL_6;
  }
  if (a1 == 1)
  {
    id v4 = sub_1BFE6CDD4();
LABEL_6:
    id v5 = v4;
    objc_msgSend(v4, sel_removeFromSuperview);
  }
  if (a2)
  {
    if (a2 != 1) {
      return;
    }
    id v6 = sub_1BFE6CDD4();
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v6, sel_setFrame_);

    id v7 = sub_1BFE6CDD4();
  }
  else
  {
    id v8 = sub_1BFE6CC9C();
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v8, sel_setFrame_);

    id v9 = sub_1BFE6CC9C();
    objc_msgSend(v9, sel_setContentMode_, 4);

    id v7 = sub_1BFE6CC9C();
  }
  id v10 = v7;
  objc_msgSend(v2, sel_addSubview_);
}

id IssueCoverView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

Swift::Void __swiftcall IssueCoverView.layoutSubviews()()
{
  uint64_t v1 = v0;
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, sel_layoutSubviews);
  if (!v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content])
  {
    id v4 = sub_1BFE6CC9C();
    objc_msgSend(v1, sel_bounds);
    goto LABEL_6;
  }
  if (v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] == 1)
  {
    id v2 = sub_1BFE6CDD4();
    objc_msgSend(v1, sel_bounds);
    sub_1C151F8FC();

    id v3 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
    if (v3)
    {
      id v4 = v3;
      objc_msgSend(v1, sel_bounds);
LABEL_6:
      sub_1C151F8FC();
    }
  }
}

id IssueCoverView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t IssueCoverView.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t IssueCoverView.shouldMonitorScroll.getter()
{
  return 0;
}

uint64_t IssueCoverView.blueprintViewportMonitor(_:willDisplayCellWith:)()
{
  return sub_1C0FAFBF4();
}

uint64_t IssueCoverView.blueprintViewportMonitor(_:didEndDisplayingCellWith:)()
{
  return sub_1C0FAFC78();
}

uint64_t IssueCoverView.blueprintViewportMonitorWillDisplaySupplementaryView(_:)()
{
  return sub_1C0FAFBF4();
}

uint64_t IssueCoverView.blueprintViewportMonitorDidEndDisplayingSupplementaryView(_:)()
{
  return sub_1C0FAFC78();
}

uint64_t sub_1C0FAF630()
{
  swift_getObjectType();
  return sub_1C151C27C();
}

uint64_t sub_1C0FAF688()
{
  return sub_1C0FAFBF4();
}

uint64_t sub_1C0FAF6A0()
{
  return sub_1C0FAFC78();
}

void sub_1C0FAF6B8(char a1)
{
  id v3 = *v1;
  id v4 = objc_msgSend(v3, sel_layer);
  id v5 = objc_msgSend(v3, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  double v7 = v6;

  objc_msgSend(v4, sel_setRasterizationScale_, v7);
  id v8 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v8, sel_setShouldRasterize_, a1 & 1);
}

void sub_1C0FAF79C()
{
  sub_1C0FAFE84(&qword_1EA1A9A90);
  JUMPOUT(0x1C18C4650);
}

void sub_1C0FAF7F4(uint64_t a1, uint64_t a2, unsigned char *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  uint64_t v10 = *(void *)&a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier + 8];
  if (v10)
  {
    BOOL v16 = *(void *)&a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier] == a1 && v10 == a2;
    if (v16 || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t v17 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content;
      char v18 = a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content];
      a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 0;
      sub_1C0FAF258(v18, 0);
      if (!a3[v17])
      {
        id v19 = sub_1BFE6CC9C();
        sub_1C00F9C1C(v19, a4, a5, a6, a7, a8, a9);

        objc_msgSend(a3, sel_bounds);
        uint64_t v20 = &a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
        *(void *)uint64_t v20 = v21;
        *((void *)v20 + 1) = v22;
        *((void *)v20 + 2) = v23;
        *((void *)v20 + 3) = v24;
        v20[32] = 0;
      }
    }
  }
}

void sub_1C0FAF8F4(uint64_t a1, uint64_t a2, id a3, unsigned char *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  id v14 = &a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  uint64_t v15 = *(void *)&a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier + 8];
  if (v15)
  {
    BOOL v21 = *v14 == a1 && v15 == a2;
    if (v21 || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t v22 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content;
      int v23 = a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content];
      a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 1;
      if (v23)
      {
        if (v23 == 1) {
          goto LABEL_12;
        }
      }
      else
      {
        id v24 = sub_1BFE6CC9C();
        objc_msgSend(v24, sel_removeFromSuperview);
      }
      id v25 = sub_1BFE6CDD4();
      objc_msgSend(a4, sel_bounds);
      objc_msgSend(v25, sel_setFrame_);

      id v26 = sub_1BFE6CDD4();
      objc_msgSend(a4, sel_addSubview_, v26);

      if (a4[v22] != 1) {
        return;
      }
LABEL_12:
      id v27 = objc_msgSend(a3, sel_superview);
      id v28 = sub_1BFE6CDD4();
      uint64_t v29 = v28;
      if (v27)
      {
        sub_1C0063B40();
        id v30 = v27;
        char v31 = sub_1C151FB6C();

        if (v31) {
          goto LABEL_17;
        }
      }
      else
      {
      }
      id v32 = sub_1BFE6CDD4();
      objc_msgSend(v32, sel_addSubview_, a3);

      unint64_t v33 = *(void **)&a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
      *(void *)&a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = a3;

      id v34 = a3;
LABEL_17:
      sub_1C00F9248(a3, a5, a6, a7, a8, a9, a10, a11, a12, a13);
      objc_msgSend(a4, sel_bounds);
      id v35 = &a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
      *(void *)id v35 = v36;
      *((void *)v35 + 1) = v37;
      *((void *)v35 + 2) = v38;
      *((void *)v35 + 3) = v39;
      v35[32] = 0;
    }
  }
}

void _s8NewsFeed14IssueCoverViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  *uint64_t v1 = 0;
  v1[1] = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 2;

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0FAFBF4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + qword_1EB870530);
    uint64_t result = swift_beginAccess();
    int v4 = *(unsigned __int8 *)(v2 + 17);
    *(unsigned char *)(v2 + 17) = 1;
    if ((v4 & 0xFFFFFFC1) != 1)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C0FAFC78()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + qword_1EB870530);
    uint64_t result = swift_beginAccess();
    int v4 = *(unsigned __int8 *)(v2 + 17);
    *(unsigned char *)(v2 + 17) = 0;
    if ((v4 & 0xFFFFFFC1) != 0)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C0FAFCF4()
{
  return sub_1C0FAFE84(&qword_1EA1A9A80);
}

unsigned char *storeEnumTagSinglePayload for IssueCoverViewContent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FAFDF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverViewContent()
{
  return &type metadata for IssueCoverViewContent;
}

unint64_t sub_1C0FAFE30()
{
  unint64_t result = qword_1EA1A9A88;
  if (!qword_1EA1A9A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9A88);
  }
  return result;
}

uint64_t sub_1C0FAFE84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for IssueCoverView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOfflineModel()
{
  return &type metadata for FormatOfflineModel;
}

void sub_1C0FAFED4()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_1C1515B8C();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001C16310F0);
  uint64_t v7 = sub_1C1515B8C();
  uint64_t v9 = v8;

  qword_1EB93C360 = 0xD000000000000013;
  *(void *)algn_1EB93C368 = 0x80000001C16310D0;
  qword_1EB93C370 = v3;
  unk_1EB93C378 = v5;
  qword_1EB93C380 = v7;
  unk_1EB93C388 = v9;
  qword_1EB93C390 = MEMORY[0x1E4FBC860];
}

void sub_1C0FB0050()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_1C1515B8C();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001C1631020);
  uint64_t v7 = sub_1C1515B8C();
  uint64_t v9 = v8;

  qword_1EA2B5238 = 0xD000000000000013;
  unk_1EA2B5240 = 0x80000001C1631000;
  qword_1EA2B5248 = v3;
  unk_1EA2B5250 = v5;
  qword_1EA2B5258 = v7;
  unk_1EA2B5260 = v9;
  qword_1EA2B5268 = MEMORY[0x1E4FBC860];
}

void sub_1C0FB01C8()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_1C1515B8C();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001C1630EF0);
  uint64_t v7 = sub_1C1515B8C();
  uint64_t v9 = v8;

  qword_1EA2B5270 = 0xD000000000000014;
  *(void *)algn_1EA2B5278 = 0x80000001C1630ED0;
  qword_1EA2B5280 = v3;
  unk_1EA2B5288 = v5;
  qword_1EA2B5290 = v7;
  unk_1EA2B5298 = v9;
  qword_1EA2B52A0 = MEMORY[0x1E4FBC860];
}

void sub_1C0FB0340()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_1C1515B8C();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001C1630DF0);
  uint64_t v7 = sub_1C1515B8C();
  uint64_t v9 = v8;

  qword_1EA2B52A8 = 0xD000000000000016;
  unk_1EA2B52B0 = 0x80000001C1630DD0;
  qword_1EA2B52B8 = v3;
  unk_1EA2B52C0 = v5;
  qword_1EA2B52C8 = v7;
  unk_1EA2B52D0 = v9;
  qword_1EA2B52D8 = MEMORY[0x1E4FBC860];
}

void sub_1C0FB04B8()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_1C1515B8C();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001C1630CF0);
  uint64_t v7 = sub_1C1515B8C();
  uint64_t v9 = v8;

  qword_1EA2B52E0 = 0xD000000000000017;
  *(void *)algn_1EA2B52E8 = 0x80000001C1630CB0;
  qword_1EA2B52F0 = v3;
  unk_1EA2B52F8 = v5;
  qword_1EA2B5300 = v7;
  unk_1EA2B5308 = v9;
  qword_1EA2B5310 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0FB0630@<X0>(void *a1@<X8>)
{
  if (qword_1EA1949B8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA2B5240;
  uint64_t v3 = qword_1EA2B5248;
  uint64_t v4 = unk_1EA2B5250;
  uint64_t v5 = qword_1EA2B5258;
  uint64_t v6 = unk_1EA2B5260;
  uint64_t v7 = qword_1EA2B5268;
  *a1 = qword_1EA2B5238;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FB06D8@<X0>(void *a1@<X8>)
{
  if (qword_1EA1949C0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA2B5278;
  uint64_t v3 = qword_1EA2B5280;
  uint64_t v4 = unk_1EA2B5288;
  uint64_t v5 = qword_1EA2B5290;
  uint64_t v6 = unk_1EA2B5298;
  uint64_t v7 = qword_1EA2B52A0;
  *a1 = qword_1EA2B5270;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FB0780@<X0>(void *a1@<X8>)
{
  if (qword_1EA1949C8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA2B52B0;
  uint64_t v3 = qword_1EA2B52B8;
  uint64_t v4 = unk_1EA2B52C0;
  uint64_t v5 = qword_1EA2B52C8;
  uint64_t v6 = unk_1EA2B52D0;
  uint64_t v7 = qword_1EA2B52D8;
  *a1 = qword_1EA2B52A8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FB0828@<X0>(void *a1@<X8>)
{
  if (qword_1EA1949D0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA2B52E8;
  uint64_t v3 = qword_1EA2B52F0;
  uint64_t v4 = unk_1EA2B52F8;
  uint64_t v5 = qword_1EA2B5300;
  uint64_t v6 = unk_1EA2B5308;
  uint64_t v7 = qword_1EA2B5310;
  *a1 = qword_1EA2B52E0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedModel<>.init(model:context:namespace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v10 = (int *)type metadata accessor for FeedModel();
  uint64_t result = sub_1C019CBB8(a2, a6 + v10[13]);
  uint64_t v12 = (void *)(a6 + v10[14]);
  *uint64_t v12 = a3;
  v12[1] = a4;
  uint64_t v13 = (uint64_t (**)())(a6 + v10[16]);
  *uint64_t v13 = sub_1BFE31C54;
  v13[1] = 0;
  return result;
}

uint64_t FeedModel.namespace.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 56));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t (*FeedModel<>.copy(withNew:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>))()
{
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  char v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))(v18, a1, v14, v16);
  sub_1C019CC1C(v4 + *(int *)(a2 + 52), (uint64_t)v13);
  uint64_t v20 = (uint64_t *)(v4 + *(int *)(a2 + 56));
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4 + *(int *)(a2 + 60), v7);
  uint64_t v23 = *(void *)(a2 + 32);
  uint64_t v24 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v18, (uint64_t)v13, v22, v21, (uint64_t)v10, v14, v7, v23, v26, v24, v27);
}

uint64_t sub_1C0FB0BF8()
{
  return swift_deallocObject();
}

uint64_t FeedModel<>.copy(withNew:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + 16);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v14, a1, v10, v12);
  sub_1C019CC1C(v3 + *(int *)(a2 + 52), (uint64_t)v9);
  FeedModel<>.init(model:context:namespace:)((uint64_t)v14, (uint64_t)v9, *(void *)(v3 + *(int *)(a2 + 56)), *(void *)(v3 + *(int *)(a2 + 56) + 8), v10, a3);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FB0D60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static FeedModel.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

void *sub_1C0FB0D70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = *(void *)(v14 + 64);
  unsigned int v17 = v15 | *(_DWORD *)(v7 + 80) & 0xF8 | v11;
  BOOL v18 = v17 <= 7 && ((*(_DWORD *)(v14 + 80) | *(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) == 0;
  if (!v18
    || (uint64_t v19 = v11 + 8,
        unint64_t v20 = ((((v12 + 9 + ((v11 + 8) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10,
        uint64_t v21 = (v11 | 7) + v8,
        ((v16
        + 7
        + ((v15
          + 16
          + (v21 & ~(v11 | 7))
          + ((((((((((v11 + 8) & ~(v11 | 7)) + v20 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
      + 16 > 0x18))
  {
    uint64_t v39 = *a2;
    *a1 = *a2;
    uint64_t v40 = (void *)(v39 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    goto LABEL_20;
  }
  uint64_t v70 = v12 + 9;
  uint64_t v71 = *(void *)(*(void *)(v9 - 8) + 64);
  unint64_t v73 = ((((v12 + 9 + ((v11 + 8) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v74 = v9;
  unint64_t v77 = ((((((((((v11 + 8) & ~(v11 | 7)) + v20 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v78 = v15 + 16;
  uint64_t v79 = v16 + 7;
  uint64_t v80 = *(void *)(v13 - 8);
  uint64_t v81 = v13;
  uint64_t v22 = ~(v11 | 7);
  uint64_t v23 = ~v11;
  uint64_t v24 = a2;
  uint64_t v25 = v6;
  uint64_t v26 = a2;
  uint64_t v27 = *(unsigned int *)(v10 + 84);
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, v24, v25);
  int64_t v82 = a1;
  id v28 = (void *)(((unint64_t)a1 + v21) & v22);
  uint64_t v29 = (void **)(((unint64_t)v26 + v21) & v22);
  id v30 = *v29;
  *id v28 = *v29;
  uint64_t v75 = v29;
  uint64_t v76 = v28;
  uint64_t v72 = (void *)(((unint64_t)v28 + v19) & v22);
  char v31 = (void *)(((unint64_t)v29 + v19) & v22);
  uint64_t v32 = v23;
  unint64_t v33 = ((unint64_t)v31 + v19) & v23;
  id v34 = v30;
  if (v27 < 0x7FFFFFFF)
  {
    size_t v37 = v73;
    uint64_t v35 = v74;
    uint64_t v38 = v72;
    if ((*(void *)((v70 + v33) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
    {
LABEL_13:
      void *v38 = *v31;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)v38 + v19) & v32, v33, v35);
      long long v41 = (unsigned char *)((((unint64_t)v38 + v19) & v32) + v71);
      *long long v41 = *(unsigned char *)(v33 + v71);
      v41[1] = *(unsigned char *)(v33 + v71 + 1);
      long long v42 = (_OWORD *)((unint64_t)(v41 + 9) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v43 = (_OWORD *)((v33 + v71 + 9) & 0xFFFFFFFFFFFFFFF8);
      *long long v42 = *v43;
      unint64_t v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v45 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v44 = *(void *)v45;
      *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
      *(unsigned char *)(v44 + 9) = *(unsigned char *)(v45 + 9);
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v35 = v74;
    int v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(((unint64_t)v31 + v19) & v23, v27, v74);
    uint64_t v38 = v72;
    size_t v37 = v73;
    if (!v36) {
      goto LABEL_13;
    }
  }
  memcpy(v38, v31, v37);
LABEL_14:
  uint64_t v46 = ~v15;
  unint64_t v47 = (char *)v38 + v37;
  *unint64_t v47 = *((unsigned char *)v31 + v37);
  *(unsigned char *)(((unint64_t)v38 + v37) | 1) = *(unsigned char *)(((unint64_t)v31 + v37) | 1);
  v47[2] = *((unsigned char *)v31 + v37 + 2);
  v47[3] = *((unsigned char *)v31 + v37 + 3);
  uint64_t v48 = (void *)(((unint64_t)v31 + v37 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = (void *)(((unint64_t)v38 + v37 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v49 = *v48;
  uint64_t v50 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v50 = *v51;
  unint64_t v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = *(void *)(v53 + 8);
  if (v54 >= 0xFFFFFFFF) {
    LODWORD(v54) = -1;
  }
  unsigned int v55 = v54 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55 > 1)
  {
    *(_OWORD *)unint64_t v52 = *(_OWORD *)v53;
  }
  else
  {
    *(void *)unint64_t v52 = *(void *)v53;
    *(void *)(v52 + 8) = *(void *)(v53 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v52 + 16) = *(unsigned char *)(v53 + 16);
  uint64_t v56 = (void *)(((unint64_t)v50 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v57 = (void **)(((unint64_t)v51 + 39) & 0xFFFFFFFFFFFFFFF8);
  char v58 = *v57;
  *uint64_t v56 = *v57;
  unint64_t v59 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v60 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v59 = *v60;
  v59[1] = v60[1];
  uint64_t v61 = (void *)((char *)v76 + v77);
  void *v61 = *(void **)((char *)v75 + v77);
  v61[1] = *(void **)((char *)v75 + v77 + 8);
  unint64_t v62 = ((unint64_t)v76 + v77 + v78) & v46;
  unint64_t v63 = ((unint64_t)v75 + v77 + v78) & v46;
  char v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v80 + 16);
  id v65 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v64(v62, v63, v81);
  unint64_t v66 = (void *)((v79 + v63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v67 = v66[1];
  uint64_t v68 = (void *)((v79 + v62) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v68 = *v66;
  v68[1] = v67;
  uint64_t v40 = v82;
LABEL_20:
  swift_retain();
  return v40;
}

uint64_t sub_1C0FB1278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v11 | 7) + v7;
  uint64_t v82 = a1;
  uint64_t v13 = (void **)((v12 + a1) & ~(v11 | 7));
  uint64_t v14 = (void **)((v12 + a2) & ~(v11 | 7));
  uint64_t v15 = *v14;
  uint64_t v16 = *v13;
  *uint64_t v13 = *v14;
  id v17 = v15;

  uint64_t v18 = v9;
  uint64_t v77 = v11 | 7;
  uint64_t v78 = v13;
  uint64_t v19 = (void *)(((unint64_t)v13 + v11 + 8) & ~(v11 | 7));
  uint64_t v81 = v14;
  unint64_t v20 = (void *)(((unint64_t)v14 + v11 + 8) & ~(v11 | 7));
  uint64_t v21 = *(unsigned int *)(v10 + 84);
  uint64_t v76 = *(void *)(v18 + 64);
  uint64_t v22 = v76 + 9;
  size_t v23 = ((((v76 + 9 + ((v11 + 8) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v24 = ((unint64_t)v19 + v11 + 8) & ~v11;
  uint64_t v79 = a3;
  uint64_t v80 = v11 + 8;
  uint64_t v25 = ((unint64_t)v20 + v11 + 8) & ~v11;
  if (v21 <= 0x7FFFFFFE)
  {
    uint64_t v30 = *(void *)((v22 + v25) & 0xFFFFFFFFFFFFFFF8) >> 1;
    int v29 = -(int)v30;
    if ((*(void *)((v22 + v24) & 0xFFFFFFFFFFFFFFF8) >> 1) <= 0x80000000)
    {
      if (v30 < 0x80000001) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    if (v30 < 0x80000001)
    {
LABEL_7:
      *uint64_t v19 = *v20;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v24, v25, v8);
      char v31 = (unsigned char *)(v24 + v76);
      unsigned char *v31 = *(unsigned char *)(v25 + v76);
      v31[1] = *(unsigned char *)(v25 + v76 + 1);
      uint64_t v32 = (_OWORD *)((v24 + v76 + 9) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v33 = (_OWORD *)((v25 + v76 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v32 = *v33;
      unint64_t v34 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v35 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
      *(unsigned char *)(v34 + 9) = *(unsigned char *)(v35 + 9);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_6:
    if (v29)
    {
LABEL_11:
      memcpy(v19, v20, v23);
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  uint64_t v75 = v19;
  uint64_t v26 = v20;
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v28 = v27(v24, v21, v8);
  int v29 = v27(v25, v21, v8);
  unint64_t v20 = v26;
  uint64_t v19 = v75;
  if (v28) {
    goto LABEL_6;
  }
LABEL_9:
  if (v29)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v24, v8);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_12:
  *uint64_t v19 = *v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v24, v25, v8);
  int v36 = (unsigned char *)(v24 + v76);
  *int v36 = *(unsigned char *)(v25 + v76);
  v36[1] = *(unsigned char *)(v25 + v76 + 1);
  size_t v37 = (_OWORD *)((v24 + v76 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = (_OWORD *)((v25 + v76 + 9) & 0xFFFFFFFFFFFFFFF8);
  *size_t v37 = *v38;
  uint64_t v39 = v20;
  unint64_t v40 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = ((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v40 = *(void *)v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  *(unsigned char *)(v40 + 9) = *(unsigned char *)(v41 + 9);
  unint64_t v20 = v39;
LABEL_13:
  long long v42 = (char *)v19 + v23;
  size_t v43 = v23;
  unint64_t v44 = (char *)v20 + v23;
  *long long v42 = *((unsigned char *)v20 + v23);
  *(unsigned char *)(((unint64_t)v19 + v23) | 1) = *(unsigned char *)(((unint64_t)v20 + v23) | 1);
  void v42[2] = *((unsigned char *)v20 + v23 + 2);
  v42[3] = *((unsigned char *)v20 + v23 + 3);
  unint64_t v45 = (void *)(((unint64_t)v19 + v23 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v46 = (void *)((unint64_t)(v44 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v45 = *v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v47 = *v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v49 = ((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v50 = ((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v51) = -1;
  if (*(void *)(v49 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v52) = -1;
  }
  else {
    uint64_t v52 = *(void *)(v49 + 8);
  }
  unsigned int v53 = v52 + 1;
  if (*(void *)(v50 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v51 = *(void *)(v50 + 8);
  }
  unsigned int v54 = v51 + 1;
  if (v53 > 1)
  {
    if (v54 <= 1)
    {
      *(void *)unint64_t v49 = *(void *)v50;
      *(void *)(v49 + 8) = *(void *)(v50 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
LABEL_24:
    *(_OWORD *)unint64_t v49 = *(_OWORD *)v50;
    goto LABEL_25;
  }
  if (v54 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  *(void *)unint64_t v49 = *(void *)v50;
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_25:
  *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
  unsigned int v55 = (void **)(((unint64_t)v47 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v56 = (void **)(((unint64_t)v48 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v57 = *v56;
  char v58 = *v55;
  *unsigned int v55 = *v56;
  id v59 = v57;

  unint64_t v60 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v61 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v60 = *v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v62 = (((((((((v80 & ~v77) + v43 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v63 = (void **)((char *)v78 + v62);
  char v64 = (char *)v81 + v62;
  *unint64_t v63 = *(void **)((char *)v81 + v62);
  v63[1] = *(void **)((char *)v81 + v62 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = *(void *)(*(void *)(v79 + 24) - 8);
  uint64_t v66 = v65 + 24;
  uint64_t v67 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v68 = ((unint64_t)v63 + v67 + 16) & ~v67;
  uint64_t v69 = (unint64_t)&v64[v67 + 16] & ~v67;
  (*(void (**)(uint64_t, uint64_t))(v65 + 24))(v68, v69);
  uint64_t v70 = *(void *)(v66 + 40) + 7;
  uint64_t v71 = (void *)((v70 + v68) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v72 = (void *)((v70 + v69) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v73 = v72[1];
  void *v71 = *v72;
  v71[1] = v73;
  swift_retain();
  swift_release();
  return v82;
}

uint64_t sub_1C0FB1830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 | 7) + v6;
  uint64_t v48 = a1;
  uint64_t v12 = ~(v10 | 7);
  uint64_t v13 = (void *)((v11 + a1) & v12);
  uint64_t v14 = (void *)((v11 + a2) & v12);
  *uint64_t v13 = *v14;
  uint64_t v15 = v10 + 8;
  uint64_t v45 = v12;
  uint64_t v46 = v13;
  uint64_t v16 = (void *)(((unint64_t)v13 + v10 + 8) & v12);
  id v17 = (void *)(((unint64_t)v14 + v10 + 8) & v12);
  uint64_t v18 = *(void *)(v8 + 64);
  unint64_t v19 = ((((v18 + 9 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v20 = ((unint64_t)v17 + v10 + 8) & ~v10;
  if (*(_DWORD *)(v8 + 84) < 0x7FFFFFFFu)
  {
    if ((*(void *)((v18 + 9 + v20) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
    {
LABEL_6:
      *uint64_t v16 = *v17;
      unint64_t v21 = ((unint64_t)v16 + v15) & ~v10;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v21, v20, v7);
      uint64_t v22 = (unsigned char *)(v21 + v18);
      *uint64_t v22 = *(unsigned char *)(v20 + v18);
      v22[1] = *(unsigned char *)(v20 + v18 + 1);
      size_t v23 = (_OWORD *)((v21 + v18 + 9) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v24 = (_OWORD *)((v20 + v18 + 9) & 0xFFFFFFFFFFFFFFF8);
      *size_t v23 = *v24;
      unint64_t v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v26 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v25 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
      *(unsigned char *)(v25 + 9) = *(unsigned char *)(v26 + 9);
      goto LABEL_7;
    }
  }
  else if (!(*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v17 + v10 + 8) & ~v10))
  {
    goto LABEL_6;
  }
  memcpy(v16, v17, ((((v18 + 9 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10);
LABEL_7:
  uint64_t v27 = (char *)v16 + v19;
  *uint64_t v27 = *((unsigned char *)v17 + v19);
  *(unsigned char *)(((unint64_t)v16 + v19) | 1) = *(unsigned char *)(((unint64_t)v17 + v19) | 1);
  void v27[2] = *((unsigned char *)v17 + v19 + 2);
  v27[3] = *((unsigned char *)v17 + v19 + 3);
  int v28 = (void *)(((unint64_t)v16 + v19 + 11) & 0xFFFFFFFFFFFFFFF8);
  int v29 = (void *)(((unint64_t)v17 + v19 + 11) & 0xFFFFFFFFFFFFFFF8);
  *int v28 = *v29;
  uint64_t v30 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v31 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v31 = *v30;
  unint64_t v32 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v32 = *(_OWORD *)v33;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  unint64_t v34 = (void *)(((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v35 = (void *)(((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v34 = *v35;
  *(_OWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = (((((((((v15 & v45) + v19 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t v37 = (_OWORD *)((char *)v46 + v36);
  uint64_t v38 = (_OWORD *)((char *)v14 + v36);
  *size_t v37 = *v38;
  uint64_t v39 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v40 = v39 + 32;
  uint64_t v41 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v42 = ((unint64_t)v37 + v41 + 16) & ~v41;
  uint64_t v43 = ((unint64_t)v38 + v41 + 16) & ~v41;
  (*(void (**)(uint64_t, uint64_t))(v39 + 32))(v42, v43);
  *(_OWORD *)((*(void *)(v40 + 32) + 7 + v42) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v40 + 32)
                                                                                       + 7
                                                                                       + v43) & 0xFFFFFFFFFFFFFFF8);
  return v48;
}

uint64_t sub_1C0FB1BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = (v10 | 7) + v6;
  uint64_t v76 = a1;
  uint64_t v13 = (void **)((v12 + a1) & ~(v10 | 7));
  uint64_t v14 = (void **)((v12 + a2) & ~(v10 | 7));
  uint64_t v15 = *v13;
  *uint64_t v13 = *v14;

  uint64_t v16 = *(unsigned int *)(v8 + 84);
  uint64_t v71 = *(void *)(v8 + 64);
  __src = (void *)(((unint64_t)v14 + v10 + 8) & ~(v10 | 7));
  uint64_t v17 = v71 + 9;
  uint64_t v77 = v10 + 8;
  unint64_t __n = ((((v71 + 9 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v18 = ((unint64_t)v13 + v10 + 8) & ~(v10 | 7);
  uint64_t v19 = (v10 + 8 + v18) & ~v10;
  uint64_t v20 = ((unint64_t)__src + v10 + 8) & ~v10;
  uint64_t v73 = v14;
  uint64_t v74 = v13;
  if (v16 > 0x7FFFFFFE)
  {
    unint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    int v22 = v21(v19, v16, v7);
    uint64_t v23 = v7;
    int v24 = v22;
    uint64_t v25 = v16;
    uint64_t v26 = v23;
    int v27 = ((uint64_t (*)(uint64_t, uint64_t))v21)(v20, v25);
    int v28 = (void *)v18;
    if (!v24) {
      goto LABEL_9;
    }
LABEL_6:
    if (v27)
    {
LABEL_11:
      uint64_t v30 = __src;
      unint64_t v36 = __n;
      memcpy(v28, __src, __n);
      uint64_t v38 = a3;
      uint64_t v37 = v76;
      uint64_t v40 = v73;
      uint64_t v39 = v74;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v26 = v7;
  uint64_t v29 = *(void *)((v17 + v20) & 0xFFFFFFFFFFFFFFF8) >> 1;
  int v27 = -(int)v29;
  if ((*(void *)((v17 + v19) & 0xFFFFFFFFFFFFFFF8) >> 1) <= 0x80000000)
  {
    int v28 = (void *)v18;
    if (v29 < 0x80000001)
    {
LABEL_12:
      uint64_t v30 = __src;
      *int v28 = *__src;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v19, v20, v26);
      uint64_t v41 = (unsigned char *)(v19 + v71);
      *uint64_t v41 = *(unsigned char *)(v20 + v71);
      v41[1] = *(unsigned char *)(v20 + v71 + 1);
      uint64_t v42 = (_OWORD *)((v19 + v71 + 9) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v43 = (_OWORD *)((v20 + v71 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v42 = *v43;
      unint64_t v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v45 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v44 = *(void *)v45;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
      *(unsigned char *)(v44 + 9) = *(unsigned char *)(v45 + 9);
      goto LABEL_13;
    }
LABEL_9:
    if (v27)
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v26);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  int v28 = (void *)v18;
  if (v29 >= 0x80000001) {
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v30 = __src;
  *int v28 = *__src;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v19, v20, v26);
  char v31 = (unsigned char *)(v19 + v71);
  unsigned char *v31 = *(unsigned char *)(v20 + v71);
  v31[1] = *(unsigned char *)(v20 + v71 + 1);
  unint64_t v32 = (_OWORD *)((v19 + v71 + 9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v33 = (_OWORD *)((v20 + v71 + 9) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v32 = *v33;
  unint64_t v34 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(unsigned char *)(v34 + 9) = *(unsigned char *)(v35 + 9);
LABEL_13:
  uint64_t v38 = a3;
  uint64_t v37 = v76;
  uint64_t v40 = v73;
  uint64_t v39 = v74;
  unint64_t v36 = __n;
LABEL_14:
  uint64_t v46 = ~v11;
  unint64_t v47 = (char *)v28 + v36;
  uint64_t v48 = (char *)v30 + v36;
  *unint64_t v47 = *((unsigned char *)v30 + v36);
  *(unsigned char *)(((unint64_t)v28 + v36) | 1) = *(unsigned char *)(((unint64_t)v30 + v36) | 1);
  v47[2] = *((unsigned char *)v30 + v36 + 2);
  v47[3] = *((unsigned char *)v30 + v36 + 3);
  unint64_t v49 = (void *)(((unint64_t)v28 + v36 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v50 = (void *)((unint64_t)(v48 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v49 = *v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v51 = *v52;
  swift_bridgeObjectRelease();
  unint64_t v53 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v55) = -1;
  if (*(void *)(v53 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v55 = *(void *)(v53 + 8);
  }
  if ((v55 + 1) > 1) {
    goto LABEL_22;
  }
  unint64_t v56 = *(void *)(v54 + 8);
  if (v56 >= 0xFFFFFFFF) {
    LODWORD(v56) = -1;
  }
  if ((v56 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    *(_OWORD *)unint64_t v53 = *(_OWORD *)v54;
    goto LABEL_23;
  }
  *(void *)unint64_t v53 = *(void *)v54;
  *(void *)(v53 + 8) = *(void *)(v54 + 8);
  swift_bridgeObjectRelease();
LABEL_23:
  *(unsigned char *)(v53 + 16) = *(unsigned char *)(v54 + 16);
  unint64_t v57 = (void **)(((unint64_t)v51 + 39) & 0xFFFFFFFFFFFFFFF8);
  char v58 = (void **)(((unint64_t)v52 + 39) & 0xFFFFFFFFFFFFFFF8);
  id v59 = *v57;
  *unint64_t v57 = *v58;

  unint64_t v60 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v61 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v60 = *v61;
  swift_bridgeObjectRelease();
  v60[1] = v61[1];
  swift_bridgeObjectRelease();
  unint64_t v62 = (((((((((v77 & v46) + __n + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v63 = (void **)((char *)v39 + v62);
  uint64_t v64 = (uint64_t)v40 + v62;
  *unint64_t v63 = *(void **)((char *)v40 + v62);
  v63[1] = *(void **)((char *)v40 + v62 + 8);
  swift_bridgeObjectRelease();
  uint64_t v65 = *(void *)(*(void *)(v38 + 24) - 8);
  uint64_t v66 = v65 + 40;
  uint64_t v67 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v68 = ((unint64_t)v63 + v67 + 16) & ~v67;
  uint64_t v69 = (v67 + 16 + v64) & ~v67;
  (*(void (**)(uint64_t, uint64_t))(v65 + 40))(v68, v69);
  *(_OWORD *)((*(void *)(v66 + 24) + 7 + v68) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v66 + 24)
                                                                                       + 7
                                                                                       + v69) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return v37;
}

uint64_t sub_1C0FB2100(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v44 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(sub_1C151631C() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0x7FFFFFFF) {
    int v12 = 0x7FFFFFFF;
  }
  else {
    int v12 = *(_DWORD *)(v9 + 84);
  }
  int v13 = v12 - 1;
  if ((v12 - 1) <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v12 - 1;
  }
  if (v14 <= v8) {
    unsigned int v15 = v8;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = *(void *)(v9 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v16 + 80);
  if (v15 <= v17) {
    unsigned int v22 = *(_DWORD *)(v16 + 84);
  }
  else {
    unsigned int v22 = v15;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v19 | 7;
  uint64_t v24 = v20 + 9;
  uint64_t v25 = (v19 | 7) + v18;
  unint64_t v26 = ((((((((((v19 + 8) & ~(v19 | 7))
              + ((((v20 + 9 + ((v19 + 8) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
              + 21) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v27 = *(void *)(v16 + 64) + 7;
  if (v22 < a2)
  {
    unint64_t v28 = ((v27 + ((v21 + (v25 & ~v23) + v26 + 16) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v28 & 0xFFFFFFF8) != 0) {
      unsigned int v29 = 2;
    }
    else {
      unsigned int v29 = a2 - v22 + 1;
    }
    if (v29 >= 0x10000) {
      unsigned int v30 = 4;
    }
    else {
      unsigned int v30 = 2;
    }
    if (v29 < 0x100) {
      unsigned int v30 = 1;
    }
    if (v29 >= 2) {
      uint64_t v31 = v30;
    }
    else {
      uint64_t v31 = 0;
    }
    switch(v31)
    {
      case 1:
        int v32 = *((unsigned __int8 *)a1 + v28);
        if (!*((unsigned char *)a1 + v28)) {
          break;
        }
        goto LABEL_31;
      case 2:
        int v32 = *(unsigned __int16 *)((char *)a1 + v28);
        if (*(_WORD *)((char *)a1 + v28)) {
          goto LABEL_31;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0FB24CCLL);
      case 4:
        int v32 = *(_DWORD *)((char *)a1 + v28);
        if (!v32) {
          break;
        }
LABEL_31:
        int v34 = v32 - 1;
        if ((v28 & 0xFFFFFFF8) != 0)
        {
          int v34 = 0;
          int v35 = *a1;
        }
        else
        {
          int v35 = 0;
        }
        return v22 + (v35 | v34) + 1;
      default:
        break;
    }
  }
  if (v8 == v22)
  {
    unint64_t v36 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v44 + 48);
    return v36(a1, v8, v6);
  }
  uint64_t v37 = (unint64_t *)(((unint64_t)a1 + v25) & ~v23);
  if (v14 == v22)
  {
    if (v13 < 0)
    {
      uint64_t v41 = (v19 + 8 + (((unint64_t)v37 + v19 + 8) & ~v23)) & ~v19;
      if (v11 < 0x7FFFFFFF)
      {
        uint64_t v43 = *(void *)((v24 + v41) & 0xFFFFFFFFFFFFFFF8) >> 1;
        if (v43 > 0x80000000) {
          unsigned int v42 = -(int)v43;
        }
        else {
          unsigned int v42 = 0;
        }
      }
      else
      {
        unsigned int v42 = (*(uint64_t (**)(uint64_t))(v10 + 48))(v41);
      }
      if (v42 >= 2) {
        return v42 - 1;
      }
      else {
        return 0;
      }
    }
    unint64_t v38 = *v37;
    goto LABEL_43;
  }
  uint64_t v39 = ((unint64_t)v37 + v21 + v26 + 16) & ~v21;
  if (v17 < v15)
  {
    unint64_t v38 = *(void *)((v27 + v39) & 0xFFFFFFFFFFFFFFF8);
LABEL_43:
    if (v38 >= 0xFFFFFFFF) {
      LODWORD(v38) = -1;
    }
    return (v38 + 1);
  }
  uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 48);
  return v40(v39, v17);
}

void sub_1C0FB24E0(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v52 = v9;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  unsigned int v15 = v14 - 1;
  if (v14 - 1 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v14 - 1;
  }
  if (v16 <= v10) {
    unsigned int v17 = v10;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = *(void *)(a4 + 24);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int *)(v19 + 84);
  uint64_t v21 = *(void *)(v9 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v24 = *(void *)(v19 + 64);
  if (v17 <= v20) {
    unsigned int v25 = *(_DWORD *)(v19 + 84);
  }
  else {
    unsigned int v25 = v17;
  }
  uint64_t v26 = v22 + 8;
  uint64_t v27 = *(void *)(*(void *)(v11 - 8) + 64) + 9;
  size_t v28 = ((((v27 + ((v22 + 8) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v29 = (v22 | 7) + v21;
  unint64_t v30 = ((((((((v28 + ((v22 + 8) & ~(v22 | 7)) + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v31 = v24 + 7;
  size_t v32 = ((v24 + 7 + ((v23 + (v29 & ~(v22 | 7)) + v30 + 16) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v25 >= a3)
  {
    int v34 = 0;
    int v35 = a2 - v25;
    if (a2 <= v25)
    {
LABEL_25:
      uint64_t v36 = ~(v22 | 7);
      uint64_t v37 = ~v22;
      switch(v34)
      {
        case 1:
          *((unsigned char *)a1 + v32) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_38;
        case 2:
          *(_WORD *)((char *)a1 + v32) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_38;
        case 3:
          goto LABEL_73;
        case 4:
          *(_DWORD *)((char *)a1 + v32) = 0;
          goto LABEL_37;
        default:
LABEL_37:
          if (!a2) {
            return;
          }
LABEL_38:
          if (v10 == v25)
          {
            uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
            uint64_t v41 = (uint64_t)a1;
            uint64_t v42 = a2;
            uint64_t v43 = v10;
            uint64_t v18 = v8;
LABEL_40:
            v40(v41, v42, v43, v18);
            return;
          }
          uint64_t v44 = (void *)(((unint64_t)a1 + v29) & v36);
          if (v16 == v25)
          {
            if ((v15 & 0x80000000) == 0)
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v45 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v45 = (a2 - 1);
              }
              *uint64_t v44 = v45;
              return;
            }
            unint64_t v47 = (_WORD *)(((unint64_t)v44 + v26) & v36);
            if (v15 < a2 || (int)a2 + 1 > v14)
            {
              int v48 = a2 - v14;
              bzero((void *)(((unint64_t)v44 + v26) & v36), v28);
              if (v28 <= 3) {
                *unint64_t v47 = v48;
              }
              else {
                *(_DWORD *)unint64_t v47 = v48;
              }
              return;
            }
            if (a2 == -1) {
              return;
            }
            unint64_t v50 = ((unint64_t)v47 + v26) & v37;
            if (v13 >= 0x7FFFFFFF)
            {
              uint64_t v51 = *(void (**)(unint64_t))(v12 + 56);
              v51(v50);
              return;
            }
            uint64_t v46 = (void *)((v27 + v50) & 0xFFFFFFFFFFFFFFF8);
            if (a2 + 1 < 0) {
              uint64_t v49 = (a2 - 0x7FFFFFFF);
            }
            else {
              uint64_t v49 = 2 * ~a2;
            }
          }
          else
          {
            uint64_t v41 = ((unint64_t)v44 + v23 + v30 + 16) & ~v23;
            if (v20 >= v17)
            {
              uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
              uint64_t v42 = a2;
              uint64_t v43 = v20;
              goto LABEL_40;
            }
            uint64_t v46 = (void *)((v31 + v41) & 0xFFFFFFFFFFFFFFF8);
            if ((a2 & 0x80000000) == 0)
            {
              *uint64_t v46 = (a2 - 1);
              return;
            }
            uint64_t v49 = a2 ^ 0x80000000;
          }
          *uint64_t v46 = v49;
          v46[1] = 0;
          return;
      }
    }
  }
  else
  {
    if (v32) {
      unsigned int v33 = 2;
    }
    else {
      unsigned int v33 = a3 - v25 + 1;
    }
    if (v33 >= 0x10000) {
      int v34 = 4;
    }
    else {
      int v34 = 2;
    }
    if (v33 < 0x100) {
      int v34 = 1;
    }
    if (v33 < 2) {
      int v34 = 0;
    }
    int v35 = a2 - v25;
    if (a2 <= v25) {
      goto LABEL_25;
    }
  }
  if (v32) {
    int v38 = 1;
  }
  else {
    int v38 = v35;
  }
  if (v32)
  {
    int v39 = ~v25 + a2;
    bzero(a1, v32);
    *a1 = v39;
  }
  switch(v34)
  {
    case 1:
      *((unsigned char *)a1 + v32) = v38;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v32) = v38;
      break;
    case 3:
LABEL_73:
      __break(1u);
      JUMPOUT(0x1C0FB294CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v32) = v38;
      break;
    default:
      return;
  }
}

void sub_1C0FB2A24()
{
  uint64_t v0 = (void *)sub_1C151C84C();
}

void sub_1C0FB2A64()
{
  sub_1C0FB2D14(&qword_1EA1A9AA8);
  JUMPOUT(0x1C18C4650);
}

void __swiftcall UIView.moveDebugButton(to:)(UIButton_optional *__return_ptr retstr, UIView *to)
{
  uint64_t v3 = sub_1C0FB2B08();
  if (v3) {
    [(UIView *)to addSubview:v3];
  }
}

uint64_t sub_1C0FB2B08()
{
  id v1 = objc_msgSend(v0, sel_subviews);
  sub_1C0063B40();
  unint64_t v2 = sub_1C151EBCC();

  if (v2 >> 62) {
    goto LABEL_22;
  }
  unint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    while (__OFSUB__(v3--, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      unint64_t v3 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v3) {
        goto LABEL_23;
      }
    }
    if ((v2 & 0xC000000000000001) != 0)
    {
      id v5 = (id)MEMORY[0x1C18C7CB0](v3, v2);
      goto LABEL_9;
    }
    if ((v3 & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    if (v3 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_21;
    }
    id v5 = *(id *)(v2 + 32 + 8 * v3);
LABEL_9:
    uint64_t v6 = v5;
    type metadata accessor for DebugButton();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      uint64_t v11 = v7;
      swift_bridgeObjectRelease();
      return v11;
    }
    id v8 = objc_msgSend(v6, sel_subviews);
    unint64_t v9 = sub_1C151EBCC();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v10)
    {
      uint64_t v13 = swift_bridgeObjectRelease();
      uint64_t v14 = sub_1C0FB2B08(v13);

      return v14;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0FB2CE0()
{
  return sub_1C0FB2D14(&qword_1EA1A9AA0);
}

uint64_t sub_1C0FB2D14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DebugButton();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0FB2D58()
{
  unint64_t result = qword_1EA1A9AB0;
  if (!qword_1EA1A9AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9AB0);
  }
  return result;
}

id sub_1C0FB2DAC(char a1)
{
  if (a1)
  {
    id v3 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    return objc_msgSend(v3, sel_initWithRed_green_blue_alpha_, 0.988235294, 0.729411765, 0.0117647059, 1.0);
  }
  else
  {
    id v1 = objc_msgSend(self, sel_systemRedColor);
    return v1;
  }
}

uint64_t sub_1C0FB2E38(char a1)
{
  if (a1) {
    return 0x676E696E726157;
  }
  else {
    return 0x726F727245;
  }
}

uint64_t sub_1C0FB2E6C(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_1C0FB2E80(unsigned char *a1, unsigned char *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_1C0FB2E94(unsigned char *a1, unsigned char *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_1C0FB2EA8(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_1C0FB2EBC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1C0FB2F60(v5, v7) & 1;
}

unint64_t sub_1C0FB2F0C()
{
  unint64_t result = qword_1EA1A9AB8;
  if (!qword_1EA1A9AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9AB8);
  }
  return result;
}

uint64_t sub_1C0FB2F60(void *a1, void *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  BOOL v5 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v5 || (v6 = sub_1C1520A9C(), uint64_t result = 0, (v6 & 1) != 0))
  {
    if (a1[3] == a2[3] && a1[4] == a2[4])
    {
      return 1;
    }
    else
    {
      return sub_1C1520A9C();
    }
  }
  return result;
}

uint64_t destroy for FormatInspectionIssue()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatInspectionIssue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatInspectionIssue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatInspectionIssue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatInspectionIssue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatInspectionIssue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionIssue()
{
  return &type metadata for FormatInspectionIssue;
}

unsigned char *storeEnumTagSinglePayload for FormatInspectionIssueSeverity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FB32B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionIssueSeverity()
{
  return &type metadata for FormatInspectionIssueSeverity;
}

uint64_t static FeedPlatform.current.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB8819F8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EB8819E0;
  uint64_t v3 = unk_1EB8819E8;
  *a1 = qword_1EB8819E0;
  a1[1] = v3;
  return sub_1BFE40340(v2, v3);
}

void static FeedPlatform.unknown.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void *FeedPlatform.encode(to:)(void *result)
{
  switch(*(void *)(v1 + 8))
  {
    case 0:
      return result;
    default:
      __swift_project_boxed_opaque_existential_1(result, result[3]);
      sub_1C1520EEC();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
      sub_1C1520AFC();
      uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
      break;
  }
  return result;
}

uint64_t FeedPlatform.hash(into:)()
{
  uint64_t v1 = v0[1];
  if (v1 == 1 || v1 == 2 || v1 == 3) {
    return sub_1C1520DCC();
  }
  uint64_t v3 = *v0;
  sub_1C1520DCC();
  if (!v1) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return sub_1BFEE653C(v3, v1);
}

uint64_t FeedPlatform.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1C1520DBC();
  if (v2 == 1 || v2 == 2 || v2 == 3)
  {
    sub_1C1520DCC();
  }
  else
  {
    sub_1C1520DCC();
    sub_1C1520DDC();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      sub_1BFEE653C(v1, v2);
    }
  }
  return sub_1C1520E0C();
}

void *sub_1C0FB36C8(void *a1)
{
  return FeedPlatform.encode(to:)(a1);
}

uint64_t sub_1C0FB36E4()
{
  uint64_t v1 = v0[1];
  if (v1 == 1 || v1 == 2 || v1 == 3) {
    return sub_1C1520DCC();
  }
  uint64_t v3 = *v0;
  sub_1C1520DCC();
  if (!v1) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return sub_1BFEE653C(v3, v1);
}

void *assignWithCopy for FeedPlatform(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  unsigned int v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  unsigned int v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedPlatform(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if ((v5 + 1) > 1) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0FB38DC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1C0FB38FC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPlatform()
{
  return &type metadata for FeedPlatform;
}

NewsFeed::FeedOptionList __swiftcall FeedOptionList.init(contentOptions:contentGroupOptions:)(Swift::OpaquePointer contentOptions, Swift::OpaquePointer contentGroupOptions)
{
  v2->_rawValue = contentOptions._rawValue;
  v2[1]._rawValue = contentGroupOptions._rawValue;
  result.contentGroupOptions = contentGroupOptions;
  result.contentOptions = contentOptions;
  return result;
}

uint64_t FeedOptionList.contentOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedOptionList.contentGroupOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedOptionList.groupItem.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  *a1 = v3;
  a1[1] = v2;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FB39B8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  *a1 = v3;
  a1[1] = v2;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FB3A1C(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

uint64_t sub_1C0FB3A24()
{
  return sub_1C151A30C();
}

uint64_t sub_1C0FB3A64()
{
  return 48;
}

__n128 sub_1C0FB3A70(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_1C0FB3A84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 16) + 16))(*(void *)(a2 + a1 - 40));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1C0FB3AD0()
{
  return 48;
}

__n128 sub_1C0FB3ADC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

void *Commands.RemoveIssues.Prompt.__allocating_init(issues:actions:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t sub_1C0FB3B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1BFC53C40(0, (unint64_t *)&unk_1EB85F360, 255, (uint64_t (*)(uint64_t))sub_1BFC53CA4, MEMORY[0x1E4FAD778]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v11 - v8;
  sub_1BFC53C40(0, &qword_1EB85F388, 255, (uint64_t (*)(uint64_t))sub_1BFC53CA4, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD770], v6);
  uint64_t result = sub_1C151C9BC();
  *a4 = result;
  return result;
}

uint64_t Commands.RemoveIssues.Prompt.issues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Commands.RemoveIssues.Prompt.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Commands.RemoveIssues.Prompt.completion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1BFC648F8(v1);
  return v1;
}

void *Commands.RemoveIssues.Prompt.init(issues:actions:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

BOOL static Commands.RemoveIssues.Prompt.Action.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Commands.RemoveIssues.Prompt.Action.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t Commands.RemoveIssues.Prompt.Action.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t Commands.RemoveIssues.Prompt.description.getter()
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 16);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1BFE9DD8C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v14 = swift_bridgeObjectRetain();
    MEMORY[0x1C18C6710](v14, &type metadata for Commands.RemoveIssues.Prompt.Action);
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    return 0x3D7365757373697BLL;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C15204BC();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF661B8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = v0;
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1C18C7CB0](v4, v1);
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      id v7 = objc_msgSend(v5, sel_identifier, v15);
      uint64_t v8 = sub_1C151E62C();
      uint64_t v10 = v9;

      unint64_t v12 = *(void *)(v16 + 16);
      unint64_t v11 = *(void *)(v16 + 24);
      if (v12 >= v11 >> 1) {
        sub_1BFF661B8(v11 > 1, v12 + 1, 1);
      }
      ++v4;
      *(void *)(v16 + 16) = v12 + 1;
      uint64_t v13 = v16 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
    }
    while (v2 != v4);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t Commands.RemoveIssues.Prompt.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0(*(void *)(v0 + 32));
  return v0;
}

uint64_t Commands.RemoveIssues.Prompt.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0(*(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_1C0FB4094()
{
  return Commands.RemoveIssues.Prompt.description.getter();
}

uint64_t static ContextMenuItem.removeIssueFromMyMagazines(issue:)(void *a1)
{
  return sub_1C0FB4100(a1, &qword_1EB85F3B8);
}

uint64_t static ContextMenuItem.removeDownload(issue:)(void *a1)
{
  return sub_1C0FB4100(a1, &qword_1EB85F3A0);
}

uint64_t sub_1C0FB4100(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  uint64_t v8 = *a2;
  id v9 = a1;
  if (v8 != -1) {
    swift_once();
  }
  sub_1BFE9DD8C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C15320E0;
  *(void *)(v10 + 32) = v9;
  uint64_t v21 = v10;
  sub_1C151EBEC();
  uint64_t v11 = v21;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = self;
  id v14 = v9;
  swift_retain();
  id v15 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB870738 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_1EB870558;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3D8], v4);
  uint64_t v21 = v11;
  swift_allocObject();
  id v17 = v16;
  uint64_t v18 = sub_1C151A7FC();

  return v18;
}

uint64_t static SharingActivity.removeIssuePrompt(issue:actions:)(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1BFE9DD8C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C15320E0;
  *(void *)(v5 + 32) = a1;
  uint64_t v14 = v5;
  sub_1C151EBEC();
  type metadata accessor for Commands.RemoveIssues.Prompt();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v14;
  void v6[3] = a2;
  _OWORD v6[4] = 0;
  v6[5] = 0;
  uint64_t v7 = qword_1EB85F480;
  id v8 = a1;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB870738 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB870558;
  sub_1C151B39C();
  swift_allocObject();
  uint64_t v12 = sub_1C151A9EC();
  swift_release();
  return v12;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE17removeIssuePrompt5issue7actionsACSgSo7FCIssueCSg_SayAA8CommandsCADE12RemoveIssuesV0J0C6ActionOGtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  sub_1BFE9DD8C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C15320E0;
  *(void *)(v8 + 32) = a1;
  uint64_t v21 = (void *)v8;
  sub_1C151EBEC();
  id v9 = v21;
  type metadata accessor for Commands.RemoveIssues.Prompt();
  id v10 = (void *)swift_allocObject();
  void v10[2] = v9;
  void v10[3] = a2;
  v10[4] = 0;
  v10[5] = 0;
  uint64_t v11 = qword_1EB85F480;
  id v12 = a1;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v14 = self;
  swift_retain();
  swift_retain();
  id v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB870738 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_1EB870558;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3D8], v4);
  uint64_t v21 = v10;
  sub_1C151A81C();
  swift_allocObject();
  id v17 = v16;
  uint64_t v18 = sub_1C151A7FC();
  swift_release();

  return v18;
}

unint64_t sub_1C0FB4970()
{
  unint64_t result = qword_1EA1A9AC0;
  if (!qword_1EA1A9AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9AC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.RemoveIssues()
{
  return &type metadata for Commands.RemoveIssues;
}

uint64_t method lookup function for Commands.RemoveIssues.Prompt(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Commands.RemoveIssues.Prompt);
}

uint64_t dispatch thunk of Commands.RemoveIssues.Prompt.__allocating_init(issues:actions:completion:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unsigned char *_s12RemoveIssuesV6PromptC6ActionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FB4ACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.RemoveIssues.Prompt.Action()
{
  return &type metadata for Commands.RemoveIssues.Prompt.Action;
}

uint64_t destroy for FeedAppConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FeedAppConfig(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedAppConfig(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[1];
  id v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedAppConfig(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C0FB4CD0(double a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v12.receiver = v1;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, sel_setContentScaleFactor_, a1);
  id v4 = objc_msgSend(v1, sel_subviews);
  sub_1C0063B40();
  unint64_t v5 = sub_1C151EBCC();

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C18C7CB0](v7, v5);
      }
      else {
        id v8 = *(id *)(v5 + 8 * v7 + 32);
      }
      id v9 = v8;
      ++v7;
      v11.receiver = v1;
      v11.super_class = ObjectType;
      objc_msgSendSuper2(&v11, sel_contentScaleFactor);
      sub_1C0FB50DC(v9, v10);
    }
    while (v6 != v7);
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1C0FB4E24()
{
  id v1 = objc_msgSend(v0, sel_subviews);
  sub_1C0063B40();
  unint64_t v2 = sub_1C151EBCC();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v4 = 0;
        id v5 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_bezelView];
        id v9 = v5;
        do
        {
          if ((v2 & 0xC000000000000001) != 0) {
            id v6 = (id)MEMORY[0x1C18C7CB0](v4, v2);
          }
          else {
            id v6 = *(id *)(v2 + 8 * v4 + 32);
          }
          uint64_t v7 = v6;
          id v8 = v5;
          if (v6 != v5)
          {
            id v12 = v6;
            sub_1C0B72D04();
            id v8 = v7;
            if (swift_dynamicCast())
            {
              sub_1BFC773DC(v10, (uint64_t)v13);
              __swift_project_boxed_opaque_existential_1(v13, v13[3]);
              id v5 = v9;
              sub_1C151CB0C();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
            }
            else
            {
              uint64_t v11 = 0;
              memset(v10, 0, sizeof(v10));
              sub_1C0B72D5C((uint64_t)v10);
            }
            objc_msgSend(v8, sel_removeFromSuperview);
          }
          ++v4;
        }
        while (v3 != v4);
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1C0FB50DC(void *a1, double a2)
{
  self;
  if (!swift_dynamicCastObjCClass()) {
    objc_msgSend(a1, sel_setContentScaleFactor_, a2);
  }
  id v4 = objc_msgSend(a1, sel_subviews);
  sub_1C0063B40();
  unint64_t v5 = sub_1C151EBCC();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6) {
      goto LABEL_12;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1C18C7CB0](i, v5);
    }
    else {
      id v8 = *(id *)(v5 + 8 * i + 32);
    }
    id v9 = v8;
    sub_1C0FB50DC(a2);
  }
LABEL_12:
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DebugFormatContentView()
{
  return self;
}

uint64_t FormatNotExpression.expression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t static FormatNotExpression.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  return static FormatExpression.== infix(_:_:)(&v5, &v4) & 1;
}

unint64_t sub_1C0FB5468(uint64_t a1)
{
  unint64_t result = sub_1C0FB5490();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FB5490()
{
  unint64_t result = qword_1EA1A9AD8;
  if (!qword_1EA1A9AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9AD8);
  }
  return result;
}

unint64_t sub_1C0FB54E4(void *a1)
{
  a1[1] = sub_1BFE662D0();
  a1[2] = sub_1BFE3F9A0();
  unint64_t result = sub_1C0FB551C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FB551C()
{
  unint64_t result = qword_1EA1A9AE0;
  if (!qword_1EA1A9AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9AE0);
  }
  return result;
}

uint64_t sub_1C0FB5570(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  return static FormatExpression.== infix(_:_:)(&v5, &v4) & 1;
}

ValueMetadata *type metadata accessor for FormatNotExpression()
{
  return &type metadata for FormatNotExpression;
}

uint64_t static CoverIssueViewLayout.makeLayoutForMagazineFeedGroup(context:factories:options:)(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[40];
  uint64_t v9 = a1[41];
  __swift_project_boxed_opaque_existential_1(a1 + 37, v8);
  double v10 = (*(double (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  if (qword_1EB85E720 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB93C2A0, sel_size);
  double v13 = v10 * (v11 / v12);
  uint64_t v14 = a1[40];
  uint64_t v15 = a1[41];
  __swift_project_boxed_opaque_existential_1(a1 + 37, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
  uint64_t v16 = a1[40];
  uint64_t v17 = a1[41];
  __swift_project_boxed_opaque_existential_1(a1 + 37, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
  unint64_t v19 = MEMORY[0x1F4188790](v18).n128_u64[0];
  *(&v21 - 6) = a2;
  *(&v21 - 5) = (uint64_t)a1;
  *((double *)&v21 - 4) = v13;
  *((double *)&v21 - 3) = v10;
  *(&v21 - 2) = v19;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F8], v4);
  sub_1C0350724(0, (unint64_t *)&qword_1EB85C830, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  return sub_1C1517BEC();
}

uint64_t sub_1C0FB5830(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  sub_1C0FB7D04(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = &v20[-v16];
  uint64_t v26 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v14 + 104))(&v20[-v16], *MEMORY[0x1E4FABA28], v13, v15);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  double v23 = a4;
  double v24 = a5;
  double v25 = a6;
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0350724(0, &qword_1EB85C7F8, MEMORY[0x1E4FAB6F0]);
  sub_1C03507A8(&qword_1EB85C7F0, &qword_1EB85C7F8, v18);
  sub_1C151734C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_1C0FB5A24(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = a2;
  uint64_t v87 = a1;
  sub_1C0C27518();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v75 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FB7D04(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v71 - v12);
  *(void *)&v105[0] = a1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0x4024000000000000;
  *uint64_t v13 = v14;
  uint64_t v16 = v9 + 104;
  __n128 v15 = *(void (**)(uint64_t *))(v9 + 104);
  unsigned int v80 = *MEMORY[0x1E4FABA08];
  v15(v13);
  uint64_t v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v17);
  uint64_t v82 = v19;
  uint64_t v86 = v20;
  sub_1C151738C();
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t v84 = v9 + 8;
  uint64_t v81 = v21;
  v21(v13, v8);
  uint64_t v104 = v87;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v73;
  uint64_t v79 = v8;
  uint64_t v83 = v16;
  char v85 = v15;
  ((void (*)(void))v15)();
  uint64_t v103 = *(void *)(v78 + 24);
  long long v23 = *(_OWORD *)(a3 + 88);
  long long v24 = *(_OWORD *)(a3 + 120);
  long long v106 = *(_OWORD *)(a3 + 104);
  v107[0] = v24;
  *(_OWORD *)((char *)v107 + 9) = *(_OWORD *)(a3 + 129);
  long long v25 = *(_OWORD *)(a3 + 24);
  long long v26 = *(_OWORD *)(a3 + 56);
  v105[2] = *(_OWORD *)(a3 + 40);
  v105[3] = v26;
  v105[4] = *(_OWORD *)(a3 + 72);
  v105[5] = v23;
  v105[0] = *(_OWORD *)(a3 + 8);
  v105[1] = v25;
  uint64_t v27 = *(void **)&v105[0];
  if ((void)v23 == 1 || (size_t v28 = (void *)*((void *)&v106 + 1)) == 0)
  {
    swift_retain();
    sub_1C0187FB0((uint64_t)v105);
    FCIssue.issueCoverModel.getter((uint64_t)&v99);
    sub_1C01880A4((uint64_t)v105);
    uint64_t v27 = v99;
    uint64_t v29 = v100;
    long long v35 = *(_OWORD *)v101;
    long long v32 = *(_OWORD *)&v101[16];
    uint64_t v34 = *(void *)&v101[32];
    char v33 = v102;
  }
  else
  {
    uint64_t v29 = *(void *)&v107[0];
    uint64_t v99 = *(void **)&v105[0];
    uint64_t v100 = *(void *)&v107[0];
    *(void *)uint64_t v101 = *((void *)&v106 + 1);
    memset(&v101[8], 0, 32);
    char v102 = 0;
    swift_retain();
    id v30 = v28;
    id v31 = v27;
    long long v32 = 0uLL;
    char v33 = 0;
    uint64_t v34 = 0;
    long long v35 = (unint64_t)v28;
  }
  uint64_t v93 = v27;
  uint64_t v94 = v29;
  long long v95 = v35;
  long long v96 = v32;
  uint64_t v97 = v34;
  char v98 = v33;
  uint64_t v36 = *(void *)(a3 + 320);
  uint64_t v37 = *(void *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 296), v36);
  double v38 = (*(double (**)(uint64_t, uint64_t))(v37 + 64))(v36, v37);
  char v88 = 0;
  uint64_t v89 = 0x4010000000000000;
  double v90 = v38;
  uint64_t v91 = -1;
  uint64_t v92 = 0x3FE0000000000000;
  sub_1C0FB7D04(0, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1C01BC7F0();
  sub_1C0C27694();
  sub_1BFE132D4(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  uint64_t v78 = a3;
  int v39 = v75;
  sub_1C15175AC();
  sub_1C151736C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v39, v77);
  uint64_t v40 = v79;
  uint64_t v41 = v81;
  v81((uint64_t *)v22, v79);
  uint64_t v42 = v87;
  uint64_t v99 = v87;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 0x4024000000000000;
  *uint64_t v13 = v43;
  ((void (*)(uint64_t *, void, uint64_t))v85)(v13, v80, v40);
  sub_1C151738C();
  v41(v13, v40);
  uint64_t v99 = v42;
  sub_1BFF35C38();
  uint64_t v45 = v44;
  uint64_t v77 = v44;
  uint64_t v46 = swift_allocBox();
  uint64_t v48 = v47;
  uint64_t v49 = v47 + *(int *)(v45 + 48);
  LODWORD(v76) = *MEMORY[0x1E4FAB790];
  uint64_t v50 = v76;
  uint64_t v51 = sub_1C151786C();
  uint64_t v52 = *(void *)(v51 - 8);
  unint64_t v53 = *(void (**)(uint64_t, void, uint64_t))(v52 + 104);
  uint64_t v72 = v53;
  uint64_t v73 = (char *)(v52 + 104);
  v53(v48, v50, v51);
  LODWORD(v75) = *MEMORY[0x1E4FAB7B0];
  ((void (*)(uint64_t))v53)(v49);
  *uint64_t v13 = v46;
  LODWORD(KeyPath) = *MEMORY[0x1E4FAB9E8];
  uint64_t v54 = ((uint64_t (*)(uint64_t *))v85)(v13);
  MEMORY[0x1F4188790](v54);
  sub_1C151731C();
  uint64_t v55 = v81;
  v81(v13, v40);
  unint64_t v56 = v87;
  uint64_t v99 = v87;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = 0x401C000000000000;
  *uint64_t v13 = v57;
  ((void (*)(uint64_t *, void, uint64_t))v85)(v13, v80, v40);
  sub_1C151738C();
  v55(v13, v40);
  uint64_t v99 = v56;
  uint64_t v58 = v77;
  uint64_t v59 = swift_allocBox();
  uint64_t v61 = v60 + *(int *)(v58 + 48);
  unint64_t v62 = v72;
  v72(v60, v76, v51);
  v62(v61, v75, v51);
  *uint64_t v13 = v59;
  unint64_t v63 = v85;
  uint64_t v64 = ((uint64_t (*)(uint64_t *, void, uint64_t))v85)(v13, KeyPath, v40);
  MEMORY[0x1F4188790](v64);
  sub_1C151731C();
  uint64_t v65 = v40;
  uint64_t v66 = v81;
  v81(v13, v40);
  uint64_t v67 = v87;
  uint64_t v99 = v87;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = 0x4038000000000000;
  *uint64_t v13 = v68;
  ((void (*)(uint64_t *, void, uint64_t))v63)(v13, v80, v65);
  sub_1C151738C();
  uint64_t v69 = v79;
  v66(v13, v79);
  uint64_t v99 = v67;
  ((void (*)(uint64_t *, void, uint64_t))v63)(v13, *MEMORY[0x1E4FAB9E0], v69);
  sub_1C15173FC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v66)(v13, v69);
}

uint64_t sub_1C0FB6424(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  sub_1C0FB7D04(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v62 = *(v9 - 1);
  MEMORY[0x1F4188790](v9);
  unint64_t v63 = (void *)a2;
  uint64_t v64 = (uint64_t *)((char *)v58 - v11);
  uint64_t v12 = *(void *)(a2 + 56);
  sub_1C01BC5C8(a2, (uint64_t)v66);
  uint64_t v13 = (unsigned int *)MEMORY[0x1E4FAB798];
  if (v12)
  {
    char v14 = v67;
    sub_1C01BC710((uint64_t)v66);
    if ((v14 & 8) == 0)
    {
      uint64_t v65 = a1;
      sub_1BFF35C38();
      uint64_t v16 = v15;
      uint64_t v17 = swift_allocBox();
      uint64_t v19 = v18;
      uint64_t v59 = (uint64_t *)((char *)v18 + *(int *)(v16 + 48));
      uint64_t v60 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t *))v17;
      uint64_t v20 = swift_allocObject();
      *(double *)(v20 + 16) = a3;
      *uint64_t v19 = v20;
      uint64_t v21 = *v13;
      v58[1] = v21;
      uint64_t v22 = sub_1C151786C();
      long long v23 = *(void (**)(void))(*(void *)(v22 - 8) + 104);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v23)(v19, v21, v22);
      uint64_t v24 = swift_allocObject();
      uint64_t v61 = a1;
      long long v25 = v63;
      uint64_t v27 = v63[40];
      uint64_t v26 = v63[41];
      __swift_project_boxed_opaque_existential_1(v63 + 37, v27);
      *(double *)(v24 + 16) = (*(double (**)(uint64_t, uint64_t))(v26 + 24))(v27, v26);
      uint64_t *v59 = v24;
      v23();
      size_t v28 = v64;
      uint64_t *v64 = (uint64_t)v60;
      uint64_t v29 = *MEMORY[0x1E4FAB9E8];
      uint64_t v30 = v62;
      uint64_t v60 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t *))(v62 + 104);
      uint64_t v31 = v60(v28, v29, v10);
      uint64_t v59 = (uint64_t *)v58;
      MEMORY[0x1F4188790](v31);
      *(void *)&v58[-8] = v25;
      a1 = v61;
      *(double *)&v58[-6] = a3;
      long long v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
      uint64_t v57 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v32);
      sub_1C151734C();
      char v33 = *(void (**)(uint64_t *, uint64_t *))(v30 + 8);
      v33(v28, v10);
      uint64_t v65 = a1;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = 0x4010000000000000;
      *size_t v28 = v34;
      v60(v28, *MEMORY[0x1E4FABA00], v10);
      sub_1C151738C();
      v33(v28, v10);
      uint64_t v13 = (unsigned int *)MEMORY[0x1E4FAB798];
    }
  }
  else
  {
    sub_1C01BC710((uint64_t)v66);
  }
  v66[0] = a1;
  sub_1BFF35C38();
  uint64_t v36 = v35;
  uint64_t v37 = swift_allocBox();
  int v39 = v38;
  uint64_t v60 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t *))((char *)v38 + *(int *)(v36 + 48));
  uint64_t v61 = v37;
  uint64_t v40 = sub_1C151786C();
  uint64_t v41 = swift_allocBox();
  uint64_t v43 = v42;
  uint64_t v44 = swift_allocObject();
  *(double *)(v44 + 16) = a5 + 12.0;
  *uint64_t v43 = v44;
  uint64_t v45 = *v13;
  uint64_t v46 = *(void *)(v40 - 8);
  uint64_t v59 = v10;
  uint64_t v47 = *(void (**)(void))(v46 + 104);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v47)(v43, v45, v40);
  uint64_t *v39 = v41;
  ((void (*)(uint64_t *, void, uint64_t))v47)(v39, *MEMORY[0x1E4FAB7A0], v40);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v63[40];
  uint64_t v50 = v63[41];
  __swift_project_boxed_opaque_existential_1(v63 + 37, v49);
  *(double *)(v48 + 16) = (*(double (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50);
  *(void *)uint64_t v60 = v48;
  v47();
  uint64_t v51 = v64;
  uint64_t v52 = v62;
  uint64_t *v64 = v61;
  unint64_t v53 = v59;
  uint64_t v54 = (*(uint64_t (**)(uint64_t *, void, uint64_t *))(v52 + 104))(v51, *MEMORY[0x1E4FAB9E8], v59);
  MEMORY[0x1F4188790](v54);
  uint64_t v55 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v57 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v55);
  sub_1C151731C();
  return (*(uint64_t (**)(uint64_t *, uint64_t *))(v52 + 8))(v51, v53);
}

uint64_t sub_1C0FB6A6C(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t KeyPath = a1;
  sub_1C0FB7D04(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v37 - v11);
  uint64_t v44 = a1;
  uint64_t v13 = swift_allocObject();
  char v14 = a2 + 37;
  uint64_t v15 = a2[40];
  uint64_t v16 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v15);
  double v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  uint64_t v19 = a2[40];
  uint64_t v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(v14, v19);
  *(double *)(v13 + 16) = (v17 - (*(double (**)(uint64_t, uint64_t))(v18 + 32))(v19, v18)) * 0.5;
  *uint64_t v12 = v13;
  uint64_t v20 = *MEMORY[0x1E4FABA08];
  uint64_t v43 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  uint64_t v37 = v9;
  v43(v12, v20, v9);
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v40 = v22;
  uint64_t v39 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v21);
  sub_1C151738C();
  long long v23 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  uint64_t v41 = v10 + 8;
  uint64_t v42 = v23;
  v23(v12, v9);
  uint64_t v44 = KeyPath;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v25 = v24;
  uint64_t v26 = swift_allocBox();
  size_t v28 = v27;
  uint64_t v29 = (uint64_t *)((char *)v27 + *(int *)(v25 + 48));
  uint64_t v30 = swift_allocObject();
  *(double *)(v30 + 16) = a3;
  *size_t v28 = v30;
  uint64_t v31 = *MEMORY[0x1E4FAB798];
  uint64_t v32 = sub_1C151786C();
  char v33 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v28, v31, v32);
  uint64_t v34 = swift_allocObject();
  *(double *)(v34 + 16) = a4;
  *uint64_t v29 = v34;
  v33(v29, v31, v32);
  *uint64_t v12 = v26;
  uint64_t v35 = v37;
  v43(v12, *MEMORY[0x1E4FAB9E8], v37);
  sub_1BFE132D4(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return v42(v12, v35);
}

uint64_t sub_1C0FB6E60(uint64_t a1, uint64_t a2)
{
  sub_1C0FB7D04(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v20 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 336);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    double v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v18);
    sub_1BFE132D4(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v19 = v17;
    sub_1C151737C();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0FB71A0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v65 = a1;
  uint64_t v71 = sub_1C01BC7F0;
  sub_1C0FB7D04(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v62 = v6;
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v8 = v72;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (void *)((char *)v56 - v9);
  uint64_t v11 = (void *)sub_1C0FB7D6C(a2);
  uint64_t v73 = a1;
  uint64_t KeyPath = (uint64_t (*)(uint64_t *, uint64_t))swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *uint64_t v10 = v12;
  uint64_t v13 = *MEMORY[0x1E4FAB968];
  char v14 = *(void (**)(uint64_t *, void, uint64_t))(v8 + 104);
  uint64_t v69 = v8 + 104;
  uint64_t v70 = v14;
  v14(v10, v13, v7);
  sub_1C0350804();
  uint64_t v68 = v15;
  sub_1C0FB7D04(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v58 = *(void *)(v18 + 72);
  uint64_t v19 = v58;
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v66 = v21;
  uint64_t v67 = v20 | 7;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1527210;
  long long v23 = (void *)(v22 + v21);
  *long long v23 = 0x4034000000000000;
  uint64_t v24 = *MEMORY[0x1E4FAB7E8];
  uint64_t v25 = sub_1C15178EC();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  uint64_t v26 = *MEMORY[0x1E4FAB858];
  uint64_t v27 = sub_1C15179EC();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v23, v26, v27);
  uint64_t v28 = *MEMORY[0x1E4FAB550];
  uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v18 + 104);
  uint64_t v59 = v17;
  v29(v23, v28, v17);
  uint64_t v60 = (void (*)(uint64_t, void, uint64_t))v29;
  uint64_t v61 = v18 + 104;
  uint64_t v30 = (char *)v23 + v19;
  sub_1C003F3A8();
  uint64_t v32 = (void *)((char *)v23 + v19 + *(int *)(v31 + 48));
  uint64_t v33 = *MEMORY[0x1E4FAB7E0];
  uint64_t v34 = sub_1C151789C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v30, v33, v34);
  unint64_t v63 = 0x80000001C160B9E0;
  *uint64_t v32 = 0xD000000000000016;
  v32[1] = 0x80000001C160B9E0;
  v29(v30, *MEMORY[0x1E4FAB5B0], v17);
  uint64_t v35 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  v56[3] = v36;
  void v56[2] = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v35);
  v56[1] = sub_1BFE132D4(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  id v57 = v11;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = *(uint64_t (**)(uint64_t *, uint64_t))(v72 + 8);
  v72 += 8;
  uint64_t KeyPath = v37;
  uint64_t v38 = v62;
  v37(v10, v62);
  uint64_t v73 = v65;
  uint64_t v65 = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v40 = v39;
  uint64_t v41 = swift_allocBox();
  uint64_t v43 = v42;
  uint64_t v44 = (uint64_t *)((char *)v42 + *(int *)(v40 + 48));
  uint64_t v45 = swift_allocObject();
  *(double *)(v45 + 16) = a3;
  *uint64_t v43 = v45;
  uint64_t v46 = *MEMORY[0x1E4FAB798];
  uint64_t v47 = sub_1C151786C();
  uint64_t v48 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104);
  v48(v43, v46, v47);
  uint64_t v49 = swift_allocObject();
  *(double *)(v49 + 16) = a3;
  *uint64_t v44 = v49;
  v48(v44, v46, v47);
  *uint64_t v10 = v41;
  v70(v10, *MEMORY[0x1E4FAB9E8], v38);
  uint64_t v50 = v66;
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1C1529AE0;
  uint64_t v52 = v51 + v50;
  uint64_t v53 = *MEMORY[0x1E4FAB610];
  sub_1C0FB7D04(0, &qword_1EB85C7C8, (uint64_t (*)(void))v71, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v52, v53, v54);
  v60(v52, *MEMORY[0x1E4FAB620], v59);
  sub_1C151737C();

  swift_release();
  swift_bridgeObjectRelease();
  return KeyPath(v10, v38);
}

uint64_t sub_1C0FB7878(void *a1)
{
  v25[1] = *a1;
  sub_1C0FB7D04(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v26 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - v4);
  uint64_t v27 = a1;
  v25[0] = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)(v9 + *(int *)(v7 + 48));
  uint64_t v12 = *MEMORY[0x1E4FAB790];
  uint64_t v13 = sub_1C151786C();
  char v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  v14(v10, v12, v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0x4000000000000000;
  *uint64_t v11 = v15;
  v14((uint64_t)v11, *MEMORY[0x1E4FAB798], v13);
  *uint64_t v5 = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB9E8], v26);
  sub_1C0350804();
  sub_1C0FB7D04(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
  unint64_t v21 = v20 + v19;
  uint64_t v22 = *MEMORY[0x1E4FAB5E8];
  sub_1C0FB7D04(0, &qword_1EB85C7C8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v21, *MEMORY[0x1E4FAB620], v17);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1BFE132D4(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v26);
}

uint64_t sub_1C0FB7C90(uint64_t a1)
{
  return sub_1C0FB7CC0(a1, sub_1C0FB5830);
}

uint64_t sub_1C0FB7CA8(uint64_t a1)
{
  return sub_1C0FB7CC0(a1, (uint64_t (*)(uint64_t, void, void, double, double, double))sub_1C0FB5A24);
}

uint64_t sub_1C0FB7CC0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, double, double, double))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48));
}

uint64_t sub_1C0FB7CD8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0FB7CE8(uint64_t a1)
{
  return sub_1C0FB6424(a1, *(void *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_1C0FB7CF8(uint64_t a1)
{
  return sub_1C0FB71A0(a1, *(void *)(v1 + 16), *(double *)(v1 + 24));
}

void sub_1C0FB7D04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0FB7D6C(uint64_t a1)
{
  uint64_t v2 = sub_1C151E24C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = qword_1EB8739C0;
  if ((*(unsigned char *)(a1 + 56) & 4) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 368);
    if (*(unsigned char *)(v7 + qword_1EB8739C0)) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    sub_1BFE4597C();
    *uint64_t v5 = sub_1C151F56C();
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
    a1 = sub_1C151E26C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
    v3 += 8;
    v8(v5, v2);
    if (a1) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    __break(1u);
  }
  uint64_t v7 = *(void *)(a1 + 376);
  if (*(unsigned char *)(v7 + v6)) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  sub_1BFE4597C();
  *uint64_t v5 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
  char v9 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v9) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0FB7F28()
{
  return swift_deallocObject();
}

uint64_t sub_1C0FB7F60(uint64_t a1)
{
  return sub_1C0FB6E60(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0FB7F68(uint64_t a1)
{
  return sub_1C0FB6A6C(a1, *(void **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1C0FB8074()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed11FormatLabel_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C0FB80B4(void *a1)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_link))
  {
    uint64_t v11 = *(void (**)(char *))(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock);
    if (v11)
    {
      uint64_t v12 = MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_label, v8);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        swift_retain();
        sub_1BFC648F8((uint64_t)v11);
        objc_msgSend(a1, sel_locationInView_, v13);
        sub_1C03EC118((uint64_t)v5, v14, v15);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {
          swift_release();
          sub_1BFC3E5C0((uint64_t)v11);

          sub_1C002F608((uint64_t)v5);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
          v11(v10);
          swift_release();
          sub_1BFC3E5C0((uint64_t)v11);

          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        }
      }
    }
  }
}

BOOL sub_1C0FB83AC(void *a1)
{
  sub_1BFF00BEC();
  __n128 v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_link)) {
    return 0;
  }
  uint64_t v7 = (void *)MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_label, v4);
  if (!v7) {
    return 0;
  }
  __n128 v8 = v7;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock))
  {

    return 0;
  }
  swift_retain();
  objc_msgSend(a1, sel_locationInView_, v8);
  sub_1C03EC118((uint64_t)v6, v9, v10);

  swift_release();
  uint64_t v11 = sub_1C1515FDC();
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v6, 1, v11) != 1;
  sub_1C002F608((uint64_t)v6);
  return v12;
}

BOOL sub_1C0FB853C(double a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(unsigned __int8 *)(v1 + 8);
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v5 = sub_1BFF493E4(v7, v3);
  swift_bridgeObjectRelease();
  swift_release();
  switch(v4)
  {
    case 1:
    case 7:
      BOOL result = v5 != a1;
      break;
    case 2:
    case 8:
      BOOL result = v5 > a1;
      break;
    case 3:
    case 9:
      BOOL result = v5 >= a1;
      break;
    case 4:
    case 10:
      BOOL result = v5 < a1;
      break;
    case 5:
    case 11:
      BOOL result = v5 <= a1;
      break;
    default:
      BOOL result = v5 == a1;
      break;
  }
  return result;
}

uint64_t sub_1C0FB8670@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFrameExpressionLogicCompare.init(from:)(a1, a2);
}

uint64_t sub_1C0FB8688(void *a1)
{
  return FormatFrameExpressionLogicCompare.encode(to:)(a1);
}

unint64_t sub_1C0FB86A0(uint64_t a1)
{
  unint64_t result = sub_1C0FB86C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FB86C8()
{
  unint64_t result = qword_1EA1A9B90;
  if (!qword_1EA1A9B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9B90);
  }
  return result;
}

unint64_t sub_1C0FB871C(void *a1)
{
  a1[1] = sub_1C08673E8();
  a1[2] = sub_1C0905BE8();
  unint64_t result = sub_1C0FB8754();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FB8754()
{
  unint64_t result = qword_1EA1A9B98;
  if (!qword_1EA1A9B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9B98);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFrameExpressionLogicCompare()
{
  return &type metadata for FormatFrameExpressionLogicCompare;
}

uint64_t static FormatTextSize.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_26;
      }
      uint64_t v7 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v6 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v9 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v8 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFF415D4(*a2);
      sub_1BFF415D4(v2);
      swift_bridgeObjectRetain();
      sub_1BFF415D4(v6);
      swift_bridgeObjectRetain();
      sub_1BFF415D4(v8);
      if (sub_1C00EFF14(v7, v9))
      {
        unint64_t v16 = v8;
        unint64_t v17 = v6;
        char v10 = static FormatTextSize.== infix(_:_:)(&v17, &v16);
        swift_bridgeObjectRelease();
        sub_1BFF4160C(v8);
        swift_bridgeObjectRelease();
        sub_1BFF4160C(v6);
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      sub_1BFF4160C(v8);
      swift_bridgeObjectRelease();
      sub_1BFF4160C(v6);
      goto LABEL_27;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_26;
      }
      goto LABEL_10;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_26;
      }
LABEL_10:
      uint64_t v11 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF415D4(*a2);
      sub_1BFF415D4(v2);
      char v5 = sub_1C00EFD90(v11, v12);
      goto LABEL_15;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_26;
      }
      goto LABEL_14;
    case 5uLL:
      if (v3 >> 61 != 5) {
        goto LABEL_26;
      }
LABEL_14:
      uint64_t v13 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v16 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v17 = v13;
      sub_1BFF415D4(v3);
      sub_1BFF415D4(v2);
      char v5 = static FormatTextContent.== infix(_:_:)((uint64_t *)&v17, &v16);
      goto LABEL_15;
    case 6uLL:
      if (v2 == 0xC000000000000000)
      {
        if (v3 == 0xC000000000000000)
        {
          sub_1BFF4160C(0xC000000000000000);
          unint64_t v14 = 0xC000000000000000;
          goto LABEL_25;
        }
      }
      else if (v2 == 0xC000000000000008)
      {
        if (v3 == 0xC000000000000008)
        {
          sub_1BFF4160C(0xC000000000000008);
          unint64_t v14 = 0xC000000000000008;
LABEL_25:
          sub_1BFF4160C(v14);
          char v10 = 1;
          return v10 & 1;
        }
      }
      else if (v3 == 0xC000000000000010)
      {
        sub_1BFF4160C(0xC000000000000010);
        unint64_t v14 = 0xC000000000000010;
        goto LABEL_25;
      }
LABEL_26:
      sub_1BFF415D4(*a2);
      sub_1BFF415D4(v2);
LABEL_27:
      sub_1BFF4160C(v2);
      sub_1BFF4160C(v3);
      char v10 = 0;
      return v10 & 1;
    default:
      if (v3 >> 61) {
        goto LABEL_26;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      unint64_t v16 = *(void *)(v3 + 16);
      unint64_t v17 = v4;
      sub_1BFF415D4(v3);
      sub_1BFF415D4(v2);
      char v5 = static FormatSize.== infix(_:_:)(&v17, &v16);
LABEL_15:
      char v10 = v5;
LABEL_16:
      sub_1BFF4160C(v2);
      sub_1BFF4160C(v3);
      return v10 & 1;
  }
}

unint64_t sub_1C0FB8AF0()
{
  return 0xD000000000000014;
}

uint64_t sub_1C0FB8B30(unsigned __int8 *a1, char *a2)
{
  return sub_1C148FC98(*a1, *a2);
}

uint64_t sub_1C0FB8B3C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0FB8B84()
{
  return sub_1C044B310();
}

uint64_t sub_1C0FB8B8C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0FB8BD4()
{
  sub_1BFF322A8(*(void *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C0FB8C0C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0FB8C48()
{
  if (!qword_1EB879EF0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879EF0);
    }
  }
}

uint64_t sub_1C0FB8CA0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0FB8CD8()
{
  unint64_t result = qword_1EB891568;
  if (!qword_1EB891568)
  {
    sub_1BFEFF588(255, &qword_1EB891570, (uint64_t (*)(void))sub_1C08E5700, (uint64_t)&type metadata for FormatTextSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891568);
  }
  return result;
}

uint64_t sub_1C0FB8D68()
{
  swift_bridgeObjectRelease();
  sub_1BFF4160C(*(void *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1C0FB8DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1C125B8B8(a1, a4, a2, a3, &v8);
  unint64_t v6 = v8;
  sub_1BFF41A20(a5);
  return sub_1BFF4160C(v6);
}

uint64_t sub_1C0FB8E5C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t result = sub_1BFFDD214(a1, a2, a3, a5);
  if (v5) {
    *a4 = v5;
  }
  return result;
}

unint64_t sub_1C0FB8EB4(void *a1)
{
  a1[1] = sub_1BFE3D110();
  a1[2] = sub_1BFF8B558();
  unint64_t result = sub_1C0FB8EEC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FB8EEC()
{
  unint64_t result = qword_1EB8911C0;
  if (!qword_1EB8911C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8911C0);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatTextSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF415D4(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatTextSize(unint64_t *a1)
{
  return sub_1BFF4160C(*a1);
}

unint64_t *assignWithCopy for FormatTextSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF415D4(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1BFF4160C(v4);
  return a1;
}

unint64_t *assignWithTake for FormatTextSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1BFF4160C(v3);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextSize()
{
  return &type metadata for FormatTextSize;
}

ValueMetadata *type metadata accessor for FormatTextSize.CodingType()
{
  return &type metadata for FormatTextSize.CodingType;
}

unint64_t sub_1C0FB9038()
{
  unint64_t result = qword_1EA1A9BA0[0];
  if (!qword_1EA1A9BA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A9BA0);
  }
  return result;
}

uint64_t sub_1C0FB908C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF6236C(0, v4, 0);
    uint64_t v5 = v20;
    uint64_t v7 = a1 + 56;
    do
    {
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFF41010(a2, a3, a4);
      uint64_t v10 = v9;
      char v12 = v11;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      unint64_t v14 = *(void *)(v20 + 16);
      unint64_t v13 = *(void *)(v20 + 24);
      if (v14 >= v13 >> 1) {
        sub_1BFF6236C(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v20 + 16) = v14 + 1;
      uint64_t v15 = v20 + 24 * v14;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v10;
      *(unsigned char *)(v15 + 48) = v12 & 1;
      v7 += 32;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1C0FB91E4()
{
  return swift_deallocObject();
}

uint64_t sub_1C0FB921C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0FB925C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0FB9294()
{
  swift_bridgeObjectRelease();
  sub_1BFF4160C(*(void *)(v0 + 24));
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0FB92F4(uint64_t a1)
{
  return sub_1C0FB8DA8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1C0FB931C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0FB932C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1BFFDD1F0(a1, a2);
}

uint64_t WebEmbedDataVisualizationURLDataSourceContentType.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  BOOL v4 = a1 == 0x617453746E657665 && a2 == 0xEF61746144636974;
  if (v4 || (uint64_t v5 = a2, v6 = a1, (sub_1C1520A9C() & 1) != 0))
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  else if (v6 == 0x76694C746E657665 && v5 == 0xED00006174614465 || (sub_1C1520A9C() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v5 = 1;
  }
  else if (v6 == 0x746144746E657665 && v5 == 0xE900000000000061 || (sub_1C1520A9C() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v5 = 2;
  }
  else if (v6 == 0x61446E6F73616573 && v5 == 0xEA00000000006174 || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v5 = 3;
  }
  *a3 = v6;
  a3[1] = v5;
  return result;
}

uint64_t WebEmbedDataVisualizationURLDataSourceContentType.rawValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = 0x617453746E657665;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v3 = 0x76694C746E657665;
      break;
    case 2uLL:
      uint64_t v3 = 0x746144746E657665;
      break;
    case 3uLL:
      uint64_t v3 = 0x61446E6F73616573;
      break;
    default:
      uint64_t v3 = v1;
      break;
  }
  sub_1BFEFF7C4(v1, v2);
  return v3;
}

double sub_1C0FB9660@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  WebEmbedDataVisualizationURLDataSourceContentType.init(rawValue:)(*a1, a1[1], &v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1C0FB96A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  unint64_t v4 = 0xEF61746144636974;
  uint64_t v5 = 0x617453746E657665;
  switch(v3)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
      unint64_t v4 = 0xED00006174614465;
      uint64_t v5 = 0x76694C746E657665;
LABEL_3:
      *a1 = v5;
      a1[1] = v4;
      break;
    case 2uLL:
      *a1 = 0x746144746E657665;
      a1[1] = 0xE900000000000061;
      break;
    case 3uLL:
      *a1 = 0x61446E6F73616573;
      a1[1] = 0xEA00000000006174;
      break;
    default:
      *a1 = v2;
      a1[1] = v3;
      break;
  }
  return sub_1BFEFF7C4(v2, v3);
}

uint64_t sub_1C0FB9778()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0FB97D8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0FB9828(uint64_t a1, uint64_t a2)
{
  return sub_1C1477948(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

ValueMetadata *type metadata accessor for WebEmbedDataVisualizationURLDataSourceContentType()
{
  return &type metadata for WebEmbedDataVisualizationURLDataSourceContentType;
}

unint64_t sub_1C0FB984C()
{
  unint64_t result = qword_1EB86AD58;
  if (!qword_1EB86AD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AD58);
  }
  return result;
}

uint64_t sub_1C0FB98A0(void *a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  if (a3)
  {
    id v10 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v3[1] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3[1] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    return sub_1C151EBEC();
  }
  else
  {
    uint64_t v7 = *v3;
    if (*(void *)(*v4 + 16) && (uint64_t v8 = sub_1C107A920(a2), (v9 & 1) != 0))
    {
      uint64_t v15 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v15 = MEMORY[0x1E4FBC860];
    }
    id v12 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    sub_1C106828C(v15, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v4 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0FB9A24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OwnerCachePool()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C0FB9A84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 56) == 1)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    id v6 = objc_msgSend(self, sel_currentDevice);
    id v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

    switch((unint64_t)v7)
    {
      case 0uLL:
        goto LABEL_6;
      case 1uLL:
        uint64_t v3 = v4;
        goto LABEL_6;
      case 5uLL:
        if (v2 < v5) {
          goto LABEL_7;
        }
        break;
      default:
        if (v2 < 0) {
          goto LABEL_7;
        }
        break;
    }
  }
  else
  {
LABEL_6:
    if (v2 < v3)
    {
LABEL_7:
      id v8 = sub_1C0CBD8D8(1);
      swift_beginAccess();
      id v9 = v8;
      MEMORY[0x1C18C66D0]();
      if (*(void *)((*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        goto LABEL_14;
      while (1)
      {
        sub_1C151ECEC();
        sub_1C151EBEC();
        swift_endAccess();

        uint64_t v10 = *(void *)(a1 + 64);
        BOOL v11 = __OFADD__(v10, 1);
        uint64_t v12 = v10 + 1;
        if (!v11) {
          break;
        }
        __break(1u);
LABEL_14:
        sub_1C151EC8C();
      }
      *(void *)(a1 + 64) = v12;
    }
  }
}

uint64_t dispatch thunk of AssetHandleFactoryType.createAssetHandle(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AssetHandleFactoryType.createAssetHandle(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1C0FB9C38()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1C0FB9C78()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v3 = (void *)sub_1C151E5EC();
  id v4 = objc_msgSend(v2, sel_assetHandleForResourceID_contentContext_, v3, *(void *)(v1 + 24));

  return v4;
}

id sub_1C0FB9CD8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 16);
  uint64_t v2 = (void *)sub_1C1515E9C();
  id v3 = objc_msgSend(v1, sel_assetHandleForURL_lifetimeHint_, v2, 1);

  return v3;
}

double FormatBindingFontSize.size.getter()
{
  return *(double *)v0;
}

void FormatBindingFontSize.scaling.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t *FormatBindingFontSize.init(size:scaling:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3 = *result;
  __int16 v4 = *((_WORD *)result + 4);
  *(double *)a2 = a3;
  *(void *)(a2 + 8) = v3;
  *(_WORD *)(a2 + 16) = v4;
  return result;
}

void FormatBindingFontSize.size.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*FormatBindingFontSize.size.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatBindingFontSize.scaling.setter(uint64_t result)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)(v1 + 8) = *(void *)result;
  *(_WORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*FormatBindingFontSize.scaling.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0FB9DCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingFontSize.init(from:)(a1, a2);
}

uint64_t sub_1C0FB9DE4(void *a1)
{
  return FormatBindingFontSize.encode(to:)(a1);
}

BOOL _s8NewsFeed21FormatBindingFontSizeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  __int16 v2 = *(_WORD *)(a1 + 16);
  __int16 v3 = *(_WORD *)(a2 + 16);
  if ((v2 & 0xFF00) == 0xC00) {
    return (v3 & 0xFF00) == 0xC00;
  }
  if ((v3 & 0xFF00) != 0xC00)
  {
    if (v2)
    {
      if ((v3 & 1) == 0) {
        return 0;
      }
    }
    else if ((v3 & 1) != 0 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    {
      return 0;
    }
    uint64_t v4 = FormatFontScalingStyle.rawValue.getter();
    uint64_t v6 = v5;
    if (v4 == FormatFontScalingStyle.rawValue.getter() && v6 == v7)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v8 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1C0FB9F10(uint64_t a1)
{
  unint64_t result = sub_1C0FB9F38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FB9F38()
{
  unint64_t result = qword_1EA1A9C28;
  if (!qword_1EA1A9C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C28);
  }
  return result;
}

unint64_t sub_1C0FB9F8C(void *a1)
{
  a1[1] = sub_1C0860290();
  a1[2] = sub_1C08F7FC8();
  unint64_t result = sub_1C0FB9FC4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FB9FC4()
{
  unint64_t result = qword_1EA1A9C30;
  if (!qword_1EA1A9C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C30);
  }
  return result;
}

double sub_1C0FBA018@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

double sub_1C0FBA024(double *a1, void *a2)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1C0FBA030@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2 = *(_WORD *)(result + 16);
  *(void *)a2 = *(void *)(result + 8);
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1C0FBA044(uint64_t result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)(a2 + 8) = *(void *)result;
  *(_WORD *)(a2 + 16) = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatBindingFontSize(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF4 && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 244);
  }
  if (*(unsigned __int8 *)(a1 + 17) <= 0xCu) {
    int v3 = 12;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 17);
  }
  int v4 = v3 - 13;
  if (*(unsigned __int8 *)(a1 + 17) < 0xCu) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBindingFontSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF3)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)double result = a2 - 244;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = a2 + 12;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingFontSize()
{
  return &type metadata for FormatBindingFontSize;
}

uint64_t sub_1C0FBA104@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatNumberBinding.init(from:)(a1, a2);
}

uint64_t sub_1C0FBA11C(void *a1)
{
  return FormatNumberBinding.encode(to:)(a1);
}

BOOL _s8NewsFeed19FormatNumberBindingO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  int v3 = *a2;
  int v4 = (v2 >> 5) & 3;
  if (v4)
  {
    if (v4 == 1)
    {
      unsigned int v5 = (v3 ^ v2) & 0xFFFFFF9F;
      return (v3 & 0x60) == 0x20 && v5 == 0;
    }
    if ((v3 & 0x60) == 0x40)
    {
      if ((v2 & 0x80) != 0)
      {
        if ((v3 & 0x80) != 0 && ((v3 ^ v2) & 0x1F) == 0) {
          return 1;
        }
      }
      else if ((v3 & 0x80) == 0 && ((v3 ^ v2) & 1) == 0)
      {
        return 1;
      }
    }
  }
  else if (!(v3 & 0x60 | (v3 ^ v2) & 1))
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1C0FBA1BC(uint64_t a1)
{
  unint64_t result = sub_1C0FBA1E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FBA1E4()
{
  unint64_t result = qword_1EA1A9C38;
  if (!qword_1EA1A9C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C38);
  }
  return result;
}

unint64_t sub_1C0FBA238(void *a1)
{
  a1[1] = sub_1C089E9C0();
  a1[2] = sub_1C08F4FDC();
  unint64_t result = sub_1C0FBA270();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FBA270()
{
  unint64_t result = qword_1EA1A9C40;
  if (!qword_1EA1A9C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatNumberBinding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 242 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 242) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD)
  {
    unsigned int v6 = ((a2 - 14) >> 8) + 1;
    *unint64_t result = a2 - 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FBA39CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * ((((-a2 >> 2) & 3) - 4 * a2) & 0xF);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNumberBinding()
{
  return &type metadata for FormatNumberBinding;
}

uint64_t sub_1C0FBA3D4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  uint64_t v23 = a1 + 64;
  int v22 = v5;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    id v12 = *(id *)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();

    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    if (v13 >= v14 >> 1) {
      uint64_t result = sub_1BFF661B8(v14 > 1, v13 + 1, 1);
    }
    *(void *)(v25 + 16) = v13 + 1;
    uint64_t v15 = v25 + 16 * v13;
    *(void *)(v15 + 32) = 0xD000000000000010;
    *(void *)(v15 + 40) = 0x80000001C1631580;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

double FeedIssue.init(identifier:issue:badge:issueTraits:premiumBadge:overrides:scoreProfile:userHasAccess:state:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, long long *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char *a11)
{
  char v13 = *a4;
  uint64_t v14 = *a5;
  char v15 = *a6;
  long long v16 = *a7;
  long long v17 = a7[1];
  long long v18 = a7[2];
  char v19 = *a11;
  if (a2)
  {
    uint64_t v20 = a2;
  }
  else
  {
    uint64_t v30 = a8;
    char v29 = *a11;
    long long v27 = a7[1];
    long long v28 = *a7;
    long long v26 = a7[2];
    id v22 = a3;
    id v23 = objc_msgSend(v22, sel_identifier);
    a1 = sub_1C151E62C();
    uint64_t v20 = v24;

    long long v18 = v26;
    long long v17 = v27;
    long long v16 = v28;
    char v19 = v29;
    a8 = v30;
  }
  *(void *)a9 = a3;
  *(void *)(a9 + 8) = a1;
  *(void *)(a9 + 16) = v20;
  *(unsigned char *)(a9 + 24) = v13;
  *(unsigned char *)(a9 + 25) = v15;
  *(void *)(a9 + 32) = 0;
  *(unsigned char *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = v14;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  *(_OWORD *)(a9 + 72) = v16;
  *(_OWORD *)(a9 + 88) = v17;
  *(_OWORD *)(a9 + 104) = v18;
  double result = 0.0;
  *(_OWORD *)(a9 + 120) = xmmword_1C158A210;
  *(unsigned char *)(a9 + 136) = v19;
  return result;
}

void static FeedIssue.State.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FeedIssue.debugIdentifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedIssue.debugSourceName.getter()
{
  id v1 = objc_msgSend(objc_msgSend(*v0, sel_sourceChannel), sel_name);
  swift_unknownObjectRelease();
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedIssue.debugTitle.getter()
{
  id v1 = objc_msgSend(*v0, sel_coverDate);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

id FeedIssue.debugAssetHandle.getter()
{
  id v1 = objc_msgSend(*v0, sel_coverImageAssetHandle);
  return v1;
}

void *FeedIssue.debugScoreProfile.getter()
{
  id v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void FeedIssue.traits.getter(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 64))
  {
    FCIssue.issueCoverModel.getter((uint64_t)&v7);
    if (v14)
    {
      if (v14 == 1)
      {
        sub_1C00FA1F0(v7, v8, v9, v10, v11, v12, v13, 1);
        uint64_t v3 = qword_1F1B63DD8[0];
        if ((qword_1F1B63DD8[0] & ~qword_1F1B63DD0) == 0) {
          uint64_t v3 = 0;
        }
        uint64_t v4 = v3 | qword_1F1B63DD0;
      }
      else
      {
        uint64_t v4 = 0;
      }
    }
    else
    {
      sub_1C00FA1F0(v7, v8, v9, v10, v11, v12, v13, 0);
      uint64_t v4 = qword_1F1B63DA8;
    }
  }
  else
  {
    FCIssue.issueCoverModel.getter((uint64_t)&v7);
    if (v14)
    {
      if (v14 == 1)
      {
        sub_1C00FA1F0(v7, v8, v9, v10, v11, v12, v13, 1);
        uint64_t v5 = qword_1F1B63DD8[0];
        if ((qword_1F1B63DD8[0] & ~qword_1F1B63DD0) == 0) {
          uint64_t v5 = 0;
        }
        uint64_t v6 = v5 | qword_1F1B63DD0;
      }
      else
      {
        uint64_t v6 = 0;
      }
    }
    else
    {
      sub_1C00FA1F0(v7, v8, v9, v10, v11, v12, v13, 0);
      uint64_t v6 = qword_1F1B63DA8;
    }
    uint64_t v4 = qword_1F1B64B28 | v6;
  }
  *a1 = v4;
}

uint64_t FeedIssue.additionalFormatFeedItems.getter()
{
  uint64_t v1 = *v0;
  sub_1BFEB1904(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  id v3 = objc_msgSend(v1, sel_sourceChannel);
  *(void *)(v2 + 56) = &type metadata for FeedTag;
  *(void *)(v2 + 64) = sub_1BFEA44FC();
  uint64_t v4 = swift_allocObject();
  *(void *)(v2 + 32) = v4;
  id v5 = objc_msgSend(v3, sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  *(_OWORD *)(v4 + 96) = xmmword_1C152C800;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(unsigned char *)(v4 + 160) = 0;
  *(void *)(v4 + 16) = v6;
  *(void *)(v4 + 24) = v8;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 40) = 0;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0xE000000000000000;
  *(void *)(v4 + 48) = 0;
  *(unsigned char *)(v4 + 56) = 0;
  uint64_t v9 = MEMORY[0x1E4FBC870];
  *(void *)(v4 + 80) = 0;
  *(void *)(v4 + 88) = v9;
  return v2;
}

uint64_t FeedIssue.feedContextIdentifier.getter()
{
  long long v1 = v0[6];
  long long v2 = v0[7];
  long long v3 = v0[4];
  long long v22 = v0[5];
  long long v23 = v1;
  v24[0] = v2;
  *(_OWORD *)((char *)v24 + 9) = *(long long *)((char *)v0 + 121);
  long long v4 = v0[2];
  long long v20 = v0[3];
  long long v21 = v3;
  long long v5 = *v0;
  long long v18 = v0[1];
  long long v19 = v4;
  long long v17 = v5;
  uint64_t v15 = *((void *)&v5 + 1);
  uint64_t v16 = v18;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  if (v21 != 1)
  {
    sub_1C0187FB0((uint64_t)&v17);
    FCIssue.issueCoverModel.getter((uint64_t)&v7);
    if (v14)
    {
      if (v14 == 1) {
        sub_1C00FA1F0((void *)v7, v8, v9, v10, v11, v12, v13, 1);
      }
    }
    else
    {
      sub_1C00FA1F0((void *)v7, v8, v9, v10, v11, v12, v13, 0);
    }
    goto LABEL_11;
  }
  sub_1C0187FB0((uint64_t)&v17);
  FCIssue.issueCoverModel.getter((uint64_t)&v7);
  if (!v14)
  {
    sub_1C00FA1F0((void *)v7, v8, v9, v10, v11, v12, v13, 0);
    sub_1C01880A4((uint64_t)&v17);
    goto LABEL_12;
  }
  if (v14 != 1)
  {
LABEL_11:
    sub_1C01880A4((uint64_t)&v17);
    goto LABEL_12;
  }
  sub_1C00FA1F0((void *)v7, v8, v9, v10, v11, v12, v13, 1);
  sub_1C01880A4((uint64_t)&v17);
LABEL_12:
  uint64_t v7 = 91;
  uint64_t v8 = 0xE100000000000000;
  sub_1BFFBE5C8();
  sub_1BFE9DF08(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v15;
}

void FeedIssue.issueCover.getter(uint64_t a1@<X8>)
{
  long long v2 = *v1;
  long long v3 = v1[13];
  if (v1[10] == (void *)1 || v3 == 0)
  {
    FCIssue.issueCoverModel.getter(a1);
  }
  else
  {
    long long v5 = v1[14];
    *(void *)a1 = v2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v3;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(unsigned char *)(a1 + 56) = 0;
    id v8 = v2;
    id v6 = v3;
    id v7 = v8;
  }
}

uint64_t sub_1C0FBAE48()
{
  if (*(void *)(v0 + 80) >= 2uLL)
  {
    uint64_t v8 = *(void *)(v0 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    id v1 = *(id *)v0;
    id v2 = objc_msgSend(*(id *)v0, sel_title);
    uint64_t v3 = sub_1C151E62C();
    unint64_t v5 = v4;

    swift_bridgeObjectRelease();
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      id v7 = objc_msgSend(v1, sel_title);
    }
    else
    {
      id v7 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel), sel_name);
      swift_unknownObjectRelease();
    }
    uint64_t v8 = sub_1C151E62C();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1C0FBAF58()
{
  uint64_t v1 = *v0;
  if (v1)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    uint64_t v1 = sub_1C151E6DC();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t CoverViewBadge.hash(into:)()
{
  return sub_1C1520DCC();
}

BOOL static CoverViewBadge.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CoverViewBadge.hashValue.getter()
{
  return sub_1C1520E0C();
}

id FeedIssue.Overrides.Image.assetHandle.getter()
{
  return *v0;
}

double FeedIssue.Overrides.Image.aspectRatio.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t FeedIssue.Overrides.Image.init(assetHandle:aspectRatio:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(void *)a2 = result;
  *(double *)(a2 + 8) = a3;
  return result;
}

uint64_t FeedIssue.Overrides.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedIssue.Overrides.coverDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id FeedIssue.Overrides.image.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  *a1 = v2;
  return (id)v2;
}

__n128 FeedIssue.Overrides.init(title:coverDate:image:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X4>, __n128 *a6@<X8>)
{
  a6->n128_u64[0] = a1;
  a6->n128_u64[1] = a2;
  a6[1].n128_u64[0] = a3;
  a6[1].n128_u64[1] = a4;
  __n128 result = *a5;
  a6[2] = *a5;
  return result;
}

id FeedIssue.issue.getter()
{
  return *v0;
}

uint64_t FeedIssue.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedIssue.badge.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

void FeedIssue.premiumBadge.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

void FeedIssue.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v2;
}

void FeedIssue.issueTraits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
}

id FeedIssue.scoreProfile.getter()
{
  return *(id *)(v0 + 56);
}

uint64_t FeedIssue.userHasAccess.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FeedIssue.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  unint64_t v3 = *(void *)(v1 + 128);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

void FeedIssue.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 136);
}

NewsFeed::FeedIssue::Traits __swiftcall FeedIssue.Traits.init(rawValue:)(NewsFeed::FeedIssue::Traits rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FeedIssue.Traits.downloadable.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FeedIssue.Traits.badgeable.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static FeedIssue.Traits.followed.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static FeedIssue.Traits.downloaded.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FeedIssue.Traits.myMagazineMember.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static FeedIssue.Traits.channelIssuesFeedMember.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static FeedIssue.Traits.sourcedFromDownloads.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static FeedIssue.Traits.sourcedFromMyMagazines.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void static FeedIssue.Traits.default.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FeedIssue.Traits.rawValue.getter()
{
  return *(void *)v0;
}

void sub_1C0FBB2E4(void *a1@<X8>)
{
  *a1 = 4;
}

uint64_t FeedIssue.copy(overrides:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[3];
  uint64_t v6 = *(void **)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  __int16 v8 = *(_WORD *)(v2 + 24);
  uint64_t v9 = *(void *)(v2 + 48);
  uint64_t v10 = *(void **)(v2 + 56);
  char v11 = *(unsigned char *)(v2 + 64);
  char v12 = *(unsigned char *)(v2 + 136);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v7;
  *(_WORD *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v9;
  *(void *)(a2 + 56) = v10;
  *(unsigned char *)(a2 + 64) = v11;
  *(void *)(a2 + 72) = v3;
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a1 + 1);
  *(void *)(a2 + 96) = v4;
  long long v13 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 104) = v13;
  *(_OWORD *)(a2 + 120) = xmmword_1C158A210;
  *(unsigned char *)(a2 + 136) = v12;
  id v14 = (id)v13;
  id v15 = v10;
  swift_bridgeObjectRetain();
  id v16 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedIssue.groupItem.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1C0FBBA04((void (*)(void))type metadata accessor for FeedGroupItem, a1);
}

uint64_t sub_1C0FBB3E0@<X0>(_OWORD *a1@<X8>)
{
  return sub_1C0FBBAD0((void (*)(void))type metadata accessor for FeedGroupItem, a1);
}

BOOL static FeedIssue.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedIssue.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEB1904(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v24 - v4;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v24 - v11;
  long long v13 = *(void **)v1;
  long long v14 = *(_OWORD *)(v1 + 88);
  long long v15 = *(_OWORD *)(v1 + 120);
  long long v40 = *(_OWORD *)(v1 + 104);
  long long v41 = v15;
  char v42 = *(unsigned char *)(v1 + 136);
  long long v16 = *(_OWORD *)(v1 + 24);
  long long v17 = *(_OWORD *)(v1 + 56);
  long long v36 = *(_OWORD *)(v1 + 40);
  long long v37 = v17;
  long long v38 = *(_OWORD *)(v1 + 72);
  long long v39 = v14;
  long long v34 = *(_OWORD *)(v1 + 8);
  long long v35 = v16;
  id v18 = objc_msgSend(v13, sel_identifier);
  if (!v18)
  {
    sub_1C151E62C();
    id v18 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v19 = objc_msgSend(self, sel_nss_NewsURLForIssueID_, v18);

  if (v19)
  {
    sub_1C1515F1C();

    long long v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v20(v5, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v20(v12, v5, v6);
      sub_1C1515E9C();
      long long v30 = v39;
      long long v31 = v40;
      long long v32 = v41;
      long long v26 = v35;
      long long v27 = v36;
      long long v28 = v37;
      long long v29 = v38;
      uint64_t v24 = v13;
      char v33 = v42;
      long long v25 = v34;
      sub_1C0FBAE48();
      sub_1C151CA2C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      uint64_t v21 = sub_1C151CA3C();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 0, 1, v21);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_1C002F608((uint64_t)v5);
  uint64_t v23 = sub_1C151CA3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 1, 1, v23);
}

uint64_t sub_1C0FBB7D4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0FBB804()
{
  id v1 = objc_msgSend(objc_msgSend(*v0, sel_sourceChannel), sel_name);
  swift_unknownObjectRelease();
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t sub_1C0FBB880()
{
  id v1 = objc_msgSend(*v0, sel_coverDate);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

id sub_1C0FBB8D8()
{
  id v1 = objc_msgSend(*v0, sel_coverImageAssetHandle);
  return v1;
}

void *sub_1C0FBB910()
{
  id v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void FeedIssue.State.blockedState.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

NewsFeed::FeedIssue::State __swiftcall FeedIssue.State.init(blockedState:)(NewsFeed::FeedIssue::State blockedState)
{
  *id v1 = *(unsigned char *)blockedState.blockedState;
  return blockedState;
}

uint64_t FeedIssue.State.selectors.getter()
{
  int v1 = *v0;
  sub_1BFE9DF08(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
  unint64_t v3 = 0xD000000000000012;
  if (v1) {
    unint64_t v3 = 0xD000000000000015;
  }
  unint64_t v4 = 0x80000001C1605C40;
  if (v1) {
    unint64_t v4 = 0x80000001C1605C20;
  }
  *(void *)(result + 32) = v3;
  *(void *)(result + 40) = v4;
  return result;
}

uint64_t FeedIssue.feedItem.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1C0FBBA04((void (*)(void))type metadata accessor for FeedItem, a1);
}

uint64_t sub_1C0FBBA04@<X0>(void (*a1)(void)@<X0>, _OWORD *a2@<X8>)
{
  long long v3 = v2[5];
  long long v4 = v2[7];
  long long v20 = v2[6];
  v21[0] = v4;
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v2 + 121);
  long long v5 = v2[1];
  long long v6 = v2[3];
  long long v16 = v2[2];
  long long v7 = v16;
  long long v17 = v6;
  long long v8 = v2[3];
  long long v9 = v2[5];
  long long v18 = v2[4];
  long long v10 = v18;
  long long v19 = v9;
  long long v11 = v2[1];
  v15[0] = *v2;
  long long v12 = v15[0];
  v15[1] = v11;
  long long v13 = v2[7];
  a2[6] = v20;
  a2[7] = v13;
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v2 + 121);
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v3;
  *a2 = v12;
  a2[1] = v5;
  a1(0);
  swift_storeEnumTagMultiPayload();
  return sub_1C0187FB0((uint64_t)v15);
}

uint64_t sub_1C0FBBAB4@<X0>(_OWORD *a1@<X8>)
{
  return sub_1C0FBBAD0((void (*)(void))type metadata accessor for FeedItem, a1);
}

uint64_t sub_1C0FBBAD0@<X0>(void (*a1)(void)@<X2>, _OWORD *a2@<X8>)
{
  long long v3 = v2[5];
  long long v4 = v2[7];
  long long v20 = v2[6];
  v21[0] = v4;
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v2 + 121);
  long long v5 = v2[1];
  long long v6 = v2[3];
  long long v16 = v2[2];
  long long v7 = v16;
  long long v17 = v6;
  long long v8 = v2[3];
  long long v9 = v2[5];
  long long v18 = v2[4];
  long long v10 = v18;
  long long v19 = v9;
  long long v11 = v2[1];
  v15[0] = *v2;
  long long v12 = v15[0];
  v15[1] = v11;
  long long v13 = v2[7];
  a2[6] = v20;
  a2[7] = v13;
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v2 + 121);
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v3;
  *a2 = v12;
  a2[1] = v5;
  a1(0);
  swift_storeEnumTagMultiPayload();
  return sub_1C0187FB0((uint64_t)v15);
}

uint64_t sub_1C0FBBB80()
{
  uint64_t v0 = sub_1BFEB1520();
  int64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v8;
    long long v3 = v0 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v8 + 16);
      unint64_t v4 = *(void *)(v8 + 24);
      if (v5 >= v4 >> 1) {
        sub_1BFF661B8(v4 > 1, v5 + 1, 1);
      }
      v3 += 2;
      *(void *)(v8 + 16) = v5 + 1;
      uint64_t v6 = v8 + 16 * v5;
      *(void *)(v6 + 32) = 0x2D70756F7267;
      *(void *)(v6 + 40) = 0xE600000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v2;
}

uint64_t sub_1C0FBBCB0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

BOOL _s8NewsFeed0B5IssueV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  long long v2 = a1[7];
  long long v41 = a1[6];
  *(_OWORD *)char v42 = v2;
  *(_OWORD *)&v42[9] = *(long long *)((char *)a1 + 121);
  long long v3 = a1[3];
  long long v37 = a1[2];
  long long v38 = v3;
  long long v4 = a1[5];
  long long v39 = a1[4];
  long long v40 = v4;
  long long v5 = a1[1];
  long long v35 = *a1;
  long long v36 = v5;
  long long v6 = a2[7];
  long long v49 = a2[6];
  *(_OWORD *)uint64_t v50 = v6;
  *(_OWORD *)&v50[9] = *(long long *)((char *)a2 + 121);
  long long v7 = a2[3];
  long long v45 = a2[2];
  long long v46 = v7;
  long long v8 = a2[5];
  long long v47 = a2[4];
  long long v48 = v8;
  long long v9 = a2[1];
  long long v43 = *a2;
  long long v44 = v9;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
  if ((sub_1C151FB6C() & 1) == 0) {
    return 0;
  }
  int v10 = v39;
  if (v39 == 1)
  {
    sub_1C0187FB0((uint64_t)&v35);
    FCIssue.issueCoverModel.getter((uint64_t)&v27);
    if (v34)
    {
      if (v34 == 1)
      {
        sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 1);
        uint64_t v11 = qword_1F1B63DD0;
        uint64_t v12 = qword_1F1B63DD8[0];
        sub_1C01880A4((uint64_t)&v35);
        if ((v12 & ~v11) != 0) {
          uint64_t v13 = v12;
        }
        else {
          uint64_t v13 = 0;
        }
        uint64_t v14 = v13 | v11;
      }
      else
      {
        sub_1C01880A4((uint64_t)&v35);
        uint64_t v14 = 0;
      }
    }
    else
    {
      sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 0);
      uint64_t v14 = qword_1F1B63DA8;
      sub_1C01880A4((uint64_t)&v35);
    }
  }
  else
  {
    sub_1C0187FB0((uint64_t)&v35);
    FCIssue.issueCoverModel.getter((uint64_t)&v27);
    if (v34)
    {
      if (v34 == 1)
      {
        sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 1);
        uint64_t v15 = qword_1F1B63DD8[0];
        if ((qword_1F1B63DD8[0] & ~qword_1F1B63DD0) == 0) {
          uint64_t v15 = 0;
        }
        uint64_t v16 = v15 | qword_1F1B63DD0;
      }
      else
      {
        uint64_t v16 = 0;
      }
    }
    else
    {
      sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 0);
      uint64_t v16 = qword_1F1B63DA8;
    }
    uint64_t v17 = qword_1F1B63E00;
    sub_1C01880A4((uint64_t)&v35);
    uint64_t v14 = v17 | v16;
  }
  int v18 = v47;
  if (v47 != 1)
  {
    sub_1C0187FB0((uint64_t)&v43);
    FCIssue.issueCoverModel.getter((uint64_t)&v27);
    if (v34)
    {
      if (v34 == 1)
      {
        sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 1);
        uint64_t v22 = qword_1F1B63DD8[0];
        if ((qword_1F1B63DD8[0] & ~qword_1F1B63DD0) == 0) {
          uint64_t v22 = 0;
        }
        uint64_t v23 = v22 | qword_1F1B63DD0;
      }
      else
      {
        uint64_t v23 = 0;
      }
    }
    else
    {
      sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 0);
      uint64_t v23 = qword_1F1B63DA8;
    }
    uint64_t v25 = qword_1F1B63E28;
    sub_1C01880A4((uint64_t)&v43);
    if (v14 != (v25 | v23)) {
      return 0;
    }
    goto LABEL_39;
  }
  sub_1C0187FB0((uint64_t)&v43);
  FCIssue.issueCoverModel.getter((uint64_t)&v27);
  if (!v34)
  {
    sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 0);
    uint64_t v24 = qword_1F1B63DA8;
    sub_1C01880A4((uint64_t)&v43);
    if (v14 == v24) {
      goto LABEL_39;
    }
    return 0;
  }
  if (v34 != 1)
  {
    sub_1C01880A4((uint64_t)&v43);
    if (!v14) {
      goto LABEL_39;
    }
    return 0;
  }
  sub_1C00FA1F0(v27, v28, v29, v30, v31, v32, v33, 1);
  uint64_t v19 = qword_1F1B63DD0;
  uint64_t v20 = qword_1F1B63DD8[0];
  sub_1C01880A4((uint64_t)&v43);
  if ((v20 & ~v19) != 0) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  if (v14 != (v21 | v19)) {
    return 0;
  }
LABEL_39:
  BOOL result = 0;
  if (v10 == v18 && (void)v38 == (void)v46)
  {
    if (v42[24] == v50[24]) {
      return BYTE8(v36) == BYTE8(v44);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C0FBC070()
{
  unint64_t result = qword_1EA1A9C48;
  if (!qword_1EA1A9C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C48);
  }
  return result;
}

unint64_t sub_1C0FBC0C4(uint64_t a1)
{
  unint64_t result = sub_1C0FBC0EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FBC0EC()
{
  unint64_t result = qword_1EA1A9C50;
  if (!qword_1EA1A9C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C50);
  }
  return result;
}

unint64_t sub_1C0FBC144()
{
  unint64_t result = qword_1EA1A9C58;
  if (!qword_1EA1A9C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C58);
  }
  return result;
}

unint64_t sub_1C0FBC19C()
{
  unint64_t result = qword_1EA1A9C60;
  if (!qword_1EA1A9C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9C60);
  }
  return result;
}

unint64_t sub_1C0FBC1F4()
{
  unint64_t result = qword_1EB85CE28;
  if (!qword_1EB85CE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CE28);
  }
  return result;
}

unint64_t sub_1C0FBC24C()
{
  unint64_t result = qword_1EB85CE30;
  if (!qword_1EB85CE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CE30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CoverViewBadge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FBC36CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverViewBadge()
{
  return &type metadata for CoverViewBadge;
}

uint64_t assignWithCopy for FeedIssue(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v7 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v8 = *(void **)(a2 + 56);
  long long v9 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v8;
  id v10 = v8;

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v11 = (long long *)(a1 + 72);
  uint64_t v12 = (long long *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) == 1)
  {
    if (v13 == 1)
    {
      long long v14 = *v12;
      long long v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v15;
      *uint64_t v11 = v14;
    }
    else
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      int v18 = *(void **)(a2 + 104);
      *(void *)(a1 + 104) = v18;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v19 = v18;
    }
  }
  else if (v13 == 1)
  {
    sub_1C0FBC5C0(a1 + 72);
    long long v17 = *(_OWORD *)(a2 + 88);
    long long v16 = *(_OWORD *)(a2 + 104);
    *uint64_t v11 = *v12;
    *(_OWORD *)(a1 + 88) = v17;
    *(_OWORD *)(a1 + 104) = v16;
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void **)(a2 + 104);
    uint64_t v21 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v20;
    id v22 = v20;

    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  unint64_t v23 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128) >= 0x11uLL)
  {
    if (v23 >= 0x11)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_1C01A7564(a1 + 120);
    goto LABEL_13;
  }
  if (v23 < 0x11)
  {
LABEL_13:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    goto LABEL_15;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
LABEL_15:
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t sub_1C0FBC5C0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FeedIssue(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (*(void *)(a1 + 80) == 1) {
    goto LABEL_4;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  if (v8 == 1)
  {
    sub_1C0FBC5C0(a1 + 72);
LABEL_4:
    long long v9 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v9;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    goto LABEL_6;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
LABEL_6:
  uint64_t v12 = (void *)(a2 + 120);
  if (*(void *)(a1 + 128) >= 0x11uLL)
  {
    unint64_t v13 = *(void *)(a2 + 128);
    if (v13 >= 0x11)
    {
      *(void *)(a1 + 120) = *v12;
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C01A7564(a1 + 120);
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)v12;
LABEL_11:
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedIssue(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 137)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedIssue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void destroy for FeedIssue.Overrides(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for FeedIssue.Overrides(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v6 = (void *)a2[4];
  uint64_t v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  return a1;
}

void *assignWithCopy for FeedIssue.Overrides(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for FeedIssue.Overrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FeedIssue.Overrides()
{
  return &type metadata for FeedIssue.Overrides;
}

void *initializeBufferWithCopyOfBuffer for FeedIssue.Overrides.Image(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for FeedIssue.Overrides.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FeedIssue.Overrides.Image(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for FeedIssue.Overrides.Image()
{
  return &type metadata for FeedIssue.Overrides.Image;
}

unsigned char *storeEnumTagSinglePayload for FeedIssue.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FBCB00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedIssue.State()
{
  return &type metadata for FeedIssue.State;
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliary.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliary.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int64_t v1 = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinitionItemSetAuxiliary.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliary.items.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliary.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary() + 24);
  return sub_1BFEF6CE8(v3, a1);
}

uint64_t type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary()
{
  uint64_t result = qword_1EB8943E0;
  if (!qword_1EB8943E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0FBCC30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliary.init(from:)(a1, a2);
}

uint64_t sub_1C0FBCC48(void *a1)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliary.encode(to:)(a1);
}

BOOL _s8NewsFeed44FormatCompilerSlotDefinitionItemSetAuxiliaryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  MEMORY[0x1F4188790](v4);
  long long v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFC50CC();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71E30();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v15 = (char *)&v44 - v14;
  MEMORY[0x1F4188790](v16);
  int v18 = (char *)&v44 - v17;
  id v19 = a1;
  uint64_t v20 = *a1;
  uint64_t v21 = a2;
  uint64_t v22 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_1C00DFA40(v20, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  uint64_t v45 = v7;
  long long v46 = v18;
  long long v47 = v9;
  long long v48 = v15;
  long long v44 = v12;
  uint64_t v23 = v50;
  uint64_t v24 = v51;
  uint64_t v25 = v19[1];
  uint64_t v26 = v21[1];
  long long v27 = v19;
  if (v25)
  {
    uint64_t v28 = (uint64_t)v48;
    if (v26)
    {
      long long v29 = v49;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char v30 = sub_1C00DFA40(v25, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if ((v30 & 1) == 0) {
        return 0;
      }
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  long long v29 = v49;
  uint64_t v28 = (uint64_t)v48;
  if (v26) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v31 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v32 = (uint64_t)v46;
  sub_1BFEF6CE8((uint64_t)v27 + *(int *)(v31 + 24), (uint64_t)v46);
  sub_1BFEF6CE8((uint64_t)v21 + *(int *)(v31 + 24), v28);
  uint64_t v33 = (uint64_t)v47;
  uint64_t v34 = (uint64_t)&v47[*(int *)(v45 + 48)];
  sub_1BFEF6CE8(v32, (uint64_t)v47);
  sub_1BFEF6CE8(v28, v34);
  uint64_t v35 = v23;
  long long v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  uint64_t v37 = v24;
  if (v36(v33, 1, v24) == 1)
  {
    uint64_t v38 = v33;
    sub_1BFE3067C(v28, (uint64_t (*)(void))sub_1BFF71E30);
    sub_1BFE3067C(v32, (uint64_t (*)(void))sub_1BFF71E30);
    if (v36(v34, 1, v24) == 1)
    {
      sub_1BFE3067C(v33, (uint64_t (*)(void))sub_1BFF71E30);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v39 = (uint64_t)v44;
  sub_1BFEF6CE8(v33, (uint64_t)v44);
  if (v36(v34, 1, v24) == 1)
  {
    uint64_t v38 = v33;
    sub_1BFE3067C((uint64_t)v48, (uint64_t (*)(void))sub_1BFF71E30);
    sub_1BFE3067C(v32, (uint64_t (*)(void))sub_1BFF71E30);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v39, v24);
LABEL_14:
    sub_1BFE3067C(v38, (uint64_t (*)(void))sub_1BFFC50CC);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v29, v34, v24);
  sub_1C0FBDC98(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v40 = v33;
  char v41 = sub_1C151E5CC();
  char v42 = *(void (**)(char *, uint64_t))(v35 + 8);
  v42(v29, v37);
  sub_1BFE3067C((uint64_t)v48, (uint64_t (*)(void))sub_1BFF71E30);
  sub_1BFE3067C(v32, (uint64_t (*)(void))sub_1BFF71E30);
  v42((char *)v39, v37);
  sub_1BFE3067C(v40, (uint64_t (*)(void))sub_1BFF71E30);
  return (v41 & 1) != 0;
}

uint64_t sub_1C0FBD14C(uint64_t a1)
{
  uint64_t result = sub_1C0FBDC98(&qword_1EA1A9C68, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0FBD1A4(void *a1)
{
  a1[1] = sub_1C0FBDC98(&qword_1EB88FDD0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  a1[2] = sub_1C0FBDC98(&qword_1EB86ABF8, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  uint64_t result = sub_1C0FBDC98((unint64_t *)&unk_1EA1A9C70, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0FBD250@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FBD25C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCompilerSlotDefinitionItemSetAuxiliary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1518CDC();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BFF71E30();
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for FormatCompilerSlotDefinitionItemSetAuxiliary(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for FormatCompilerSlotDefinitionItemSetAuxiliary(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C1518CDC();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1BFF71E30();
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for FormatCompilerSlotDefinitionItemSetAuxiliary(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF71E30();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *initializeWithTake for FormatCompilerSlotDefinitionItemSetAuxiliary(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C1518CDC();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BFF71E30();
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for FormatCompilerSlotDefinitionItemSetAuxiliary(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF71E30();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatCompilerSlotDefinitionItemSetAuxiliary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0FBDA88);
}

uint64_t sub_1C0FBDA88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFF71E30();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatCompilerSlotDefinitionItemSetAuxiliary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0FBDB4C);
}

void *sub_1C0FBDB4C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1BFF71E30();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C0FBDBF4()
{
  sub_1BFF71E30();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C0FBDC98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatBackgroundLayoutSolver.resolve(background:options:layoutOptions:)(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v76 = a3;
  uint64_t v6 = *v3;
  uint64_t v71 = v3;
  uint64_t v72 = v6;
  uint64_t v75 = sub_1C151B62C();
  uint64_t v73 = *(void *)(v75 - 8);
  uint64_t v74 = *(void *)(v73 + 64);
  MEMORY[0x1F4188790](v75);
  uint64_t v70 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContentPool();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v68 = *(void *)(v69 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v67 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (id **)((char *)&v60 - v11);
  uint64_t v62 = MEMORY[0x1E4F7ACE8];
  uint64_t v61 = MEMORY[0x1E4FBB718];
  sub_1BFEC0C20(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for FormatContent(0);
  uint64_t v65 = *(void *)(v15 - 8);
  uint64_t v64 = *(void *)(v65 + 64);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)&v60 - v18;
  uint64_t v77 = (uint64_t)&v60 - v18;
  long long v20 = a2[1];
  long long v78 = *a2;
  long long v79 = v20;
  uint64_t v80 = *((void *)a2 + 4);
  uint64_t v60 = a1 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content;
  id v21 = (id)v78;
  id v22 = FCFeedDescriptor.feedTag.getter();

  id v23 = objc_msgSend(v22, sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v24 = sub_1C151E62C();
  uint64_t v26 = v25;

  uint64_t v27 = sub_1C151D6DC();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v14, 1, 1, v27);
  unint64_t v81 = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, v24, v26, 0, 0, 0, 0, v19, 0, 0, (uint64_t)v14, 0, (uint64_t *)&v81, 0, 0);
  swift_bridgeObjectRelease();
  sub_1BFDDF8A0((uint64_t)v14, (uint64_t)&unk_1EB882A00, v62, v61, (uint64_t (*)(void))sub_1BFEC0C20);
  sub_1BFE4DBE0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C15320E0;
  id v30 = v21;
  id v31 = FCFeedDescriptor.feedTag.getter();

  *(void *)(inited + 32) = v31;
  unint64_t v81 = inited;
  sub_1C151EBEC();
  unint64_t v32 = v81;
  v28(v14, 1, 1, v27);
  uint64_t v33 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v34 = sub_1C018D180(MEMORY[0x1E4FBC860]);
  unint64_t v35 = sub_1C018D180((uint64_t)v33);
  unint64_t v36 = sub_1C018D14C((uint64_t)v33);
  unint64_t v37 = sub_1C018DB38((uint64_t)v33);
  uint64_t v38 = (id *)sub_1C018DB6C((uint64_t)v33);
  unint64_t v39 = sub_1C018D770((uint64_t)v33);
  uint64_t v59 = (id *)v37;
  uint64_t v40 = v66;
  FormatContentPool.init(headlines:headlineLists:issues:tags:tagFeeds:tagFeedFetches:puzzles:puzzleTypes:puzzleStatistics:placeholders:slotPlaceholders:webArchivePromises:resourcePromises:sportsDataVisualizations:genericDataVisualizations:sponsoredAdBanner:)((unint64_t)v33, v34, (unint64_t)v33, v32, v35, v36, (unint64_t)v33, v33, v66, (unint64_t)v33, (uint64_t)v33, (uint64_t)v33, v59, v38, (uint64_t)v33, v39, (uint64_t)v14);
  char v41 = (void *)sub_1C1518CBC();
  uint64_t v42 = v63;
  sub_1BFE33984(v77, v63, type metadata accessor for FormatContent);
  uint64_t v43 = v67;
  sub_1BFE33984((uint64_t)v40, v67, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  unint64_t v44 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  unint64_t v45 = (v64 + *(unsigned __int8 *)(v69 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  unint64_t v46 = (v68 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = swift_allocObject();
  sub_1C0FBF2F8(v42, v47 + v44, type metadata accessor for FormatContent);
  sub_1C0FBF2F8(v43, v47 + v45, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  unint64_t v48 = v47 + v46;
  long long v49 = v79;
  *(_OWORD *)unint64_t v48 = v78;
  *(_OWORD *)(v48 + 16) = v49;
  *(void *)(v48 + 32) = v80;
  sub_1C0C2A0CC((uint64_t)&v78);
  type metadata accessor for FormatContent.Resolved();
  sub_1C151931C();

  swift_release();
  uint64_t v50 = v73;
  uint64_t v51 = v70;
  uint64_t v52 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v70, v76, v75);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v54 = swift_allocObject();
  long long v55 = v79;
  *(_OWORD *)(v54 + 16) = v78;
  *(_OWORD *)(v54 + 32) = v55;
  *(void *)(v54 + 48) = v80;
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v54 + v53, v51, v52);
  sub_1C0C2A0CC((uint64_t)&v78);
  unint64_t v56 = (void *)sub_1C1518E7C();
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  uint64_t v57 = sub_1C151900C();
  swift_release();
  swift_release();

  sub_1C0FC0ACC((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C0FC0ACC(v77, type metadata accessor for FormatContent);
  return v57;
}

uint64_t FormatBackgroundLayoutSolver.resolve(content:options:layoutOptions:)(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v25 = *v3;
  uint64_t v6 = sub_1C151B62C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = type metadata accessor for FormatContent.Resolved();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a2[1];
  long long v26 = *a2;
  long long v27 = v13;
  uint64_t v28 = *((void *)a2 + 4);
  uint64_t v14 = (void *)sub_1C1518CBC();
  sub_1BFE33984(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v6);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + v16 + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1C0FBF2F8((uint64_t)v12, v18 + v15, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  unint64_t v19 = v18 + v16;
  long long v20 = v27;
  *(_OWORD *)unint64_t v19 = v26;
  *(_OWORD *)(v19 + 16) = v20;
  *(void *)(v19 + 32) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1C0C2A0CC((uint64_t)&v26);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  uint64_t v21 = sub_1C151931C();

  swift_release();
  return v21;
}

uint64_t FormatBackgroundLayoutSolver.__allocating_init(feedLayoutSolver:formatService:decorationProviderFactory:)(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  sub_1BFC773DC(a2, v6 + 24);
  *(void *)(v6 + 64) = a3;
  return v6;
}

uint64_t FormatBackgroundLayoutSolver.init(feedLayoutSolver:formatService:decorationProviderFactory:)(uint64_t a1, long long *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  sub_1BFC773DC(a2, v3 + 24);
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t sub_1C0FBE790(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 32);
  uint64_t v9 = (int *)type metadata accessor for FormatServiceOptions();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + 3;
  uint64_t v13 = a1[6];
  uint64_t v14 = a1[7];
  long long v15 = *(_OWORD *)a4;
  long long v24 = *(_OWORD *)(a4 + 16);
  long long v25 = v15;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  *((void *)v11 + 3) = &type metadata for FormatBackgroundGroupContext;
  *((void *)v11 + 4) = &off_1F1C31F88;
  uint64_t v16 = swift_allocObject();
  *(void *)uint64_t v11 = v16;
  long long v17 = v24;
  *(_OWORD *)(v16 + 16) = v25;
  *(_OWORD *)(v16 + 32) = v17;
  *(void *)(v16 + 48) = v8;
  *(void *)&v11[v9[15]] = 0;
  *((void *)v11 + 5) = 0;
  v11[48] = 1;
  *(_OWORD *)(v11 + 56) = xmmword_1C15335A0;
  *((void *)v11 + 9) = 0;
  *((void *)v11 + 10) = 0;
  sub_1C0C2A0CC(a4);
  sub_1C0C2A0CC(a4);
  if (qword_1EB87F110 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for FormatTransformData();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB93C758);
  sub_1BFE33984(v19, (uint64_t)&v11[v9[10]], (uint64_t (*)(void))type metadata accessor for FormatTransformData);
  *(void *)&v11[v9[11]] = MEMORY[0x1E4FBC870];
  long long v20 = *(void **)(a4 + 16);
  id v26 = *(id *)(a4 + 8);
  *(void *)&v11[v9[12]] = v26;
  sub_1BFF6757C(&v26);
  id v21 = v20;
  sub_1C0C2A114(a4);
  *(void *)&v11[v9[13]] = v21;
  v11[v9[14]] = 0;
  uint64_t v22 = FormatServiceType.resolve(content:pool:options:)(a2, a3, (uint64_t)v11, v13, v14);
  sub_1C0FC0ACC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  return v22;
}

uint64_t sub_1C0FBE9C0()
{
  uint64_t v1 = type metadata accessor for FormatContent(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = type metadata accessor for FormatContentPool();
  unint64_t v15 = (v2 + v3 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v16 = v4;
  uint64_t v17 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v5 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(v1 + 20);
  uint64_t v7 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + *(int *)(v1 + 40);
  uint64_t v9 = sub_1C151D6DC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = v0 + v15 + *(int *)(v16 + 100);
  if (!v11(v12, 1, v9)) {
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v13 = (id *)(v0 + ((v17 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0FBED70(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FormatContent(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1C0FBE790(a1, v1 + v4, v1 + v7, v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1C0FBEE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v25 = a2;
  uint64_t v6 = sub_1C151B62C();
  uint64_t v22 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = type metadata accessor for FormatContent.Resolved();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C1518CBC();
  sub_1BFE33984(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + v14 + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1C0FBF2F8((uint64_t)v12, v16 + v13, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  unint64_t v17 = v16 + v14;
  long long v18 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)unint64_t v17 = *(_OWORD *)a3;
  *(_OWORD *)(v17 + 16) = v18;
  *(void *)(v17 + 32) = *(void *)(a3 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  sub_1C0C2A0CC(a3);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  type metadata accessor for FormatBackgroundLayoutSolver();
  uint64_t v19 = (void *)v24;
  uint64_t v20 = sub_1C151931C();

  swift_release();
  return v20;
}

uint64_t sub_1C0FBF0E8()
{
  uint64_t v1 = sub_1C151B62C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C0FBF1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C151B62C() - 8);
  return sub_1C0FBEE6C(a1, a2, v2 + 16, v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_1C0FBF24C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  long long v4 = *(_OWORD *)(a3 + 16);
  v6[0] = *(_OWORD *)a3;
  v6[1] = v4;
  uint64_t v7 = *(void *)(a3 + 32);
  *(void *)&v6[0] = sub_1C0FBF378(a2, (uint64_t)v6, a4);
  sub_1BFEC0C20(0, &qword_1EA1A9C80, (uint64_t (*)(uint64_t))type metadata accessor for FormatBackgroundLayoutSolverResult, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0FBF2F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0FBF360(uint64_t a1)
{
  return sub_1C0C2B864(a1);
}

uint64_t sub_1C0FBF378(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151B62C();
  uint64_t v117 = *(void *)(v6 - 8);
  uint64_t v118 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v116 = (char *)v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContent.Resolved();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v115 = (uint64_t)v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEC0C20(0, &qword_1EB882B38, MEMORY[0x1E4FAB878], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v114 = (char *)v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v113 = (char *)v96 - v15;
  MEMORY[0x1F4188790](v16);
  long long v112 = (char *)v96 - v17;
  MEMORY[0x1F4188790](v18);
  long long v110 = (char *)v96 - v19;
  uint64_t v106 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v106);
  id v21 = (char *)v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C151794C();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v101 = (char *)v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C151772C();
  uint64_t v104 = *(void *)(v24 - 8);
  uint64_t v105 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v103 = (char *)v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v120 = sub_1C151759C();
  *(void *)&long long v121 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v97 = (char *)v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0C20(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, v11);
  MEMORY[0x1F4188790](v27 - 8);
  long long v29 = (char *)v96 - v28;
  sub_1C0FC020C();
  uint64_t v108 = *(void *)(v30 - 8);
  uint64_t v109 = v30;
  MEMORY[0x1F4188790](v30);
  unint64_t v32 = (char *)v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void **)a2;
  uint64_t v100 = *(void **)(a2 + 16);
  sub_1C0FC02BC();
  sub_1C0FC0318(&qword_1EA1A9C90);
  sub_1C0FC0318(&qword_1EA1A9C98);
  sub_1C151878C();
  uint64_t v34 = *a1;
  uint64_t v35 = a1[1];
  *(void *)&long long v137 = 0;
  long long v135 = 0u;
  long long v136 = 0u;
  memset(v140, 0, sizeof(v140));
  char v141 = 1;
  uint64_t v36 = *(void *)((char *)a1 + *(int *)(v9 + 40));
  v123[2] = MEMORY[0x1E4FBC860];
  v123[3] = v34;
  v123[4] = v35;
  v123[5] = &v135;
  BOOL v122 = a1;
  v123[6] = a1;
  v123[7] = v32;
  long long v107 = v32;
  char v124 = 1;
  int64_t v125 = v33;
  uint64_t v126 = MEMORY[0x1E4FBC870];
  uint64_t v127 = 0;
  uint64_t v128 = 0;
  int64_t v129 = v140;
  uint64_t v133 = 0;
  long long v131 = 0u;
  long long v132 = 0u;
  long long v130 = 0u;
  id v37 = v33;
  swift_bridgeObjectRetain();
  unint64_t v102 = sub_1C01830C4((void (*)(uint64_t *__return_ptr, void *))sub_1C0FC0460, (uint64_t)v123, v36);

  swift_bridgeObjectRelease();
  sub_1BFDDF8A0((uint64_t)&v135, (uint64_t)qword_1EB8724F0, (uint64_t)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable, (uint64_t (*)(void))sub_1BFE4D1E4);
  uint64_t v99 = *(void *)(v119 + 16);
  id v38 = v37;
  FCFeedDescriptor.feedKind.getter((char *)&v135);

  int v98 = v135;
  uint64_t v39 = type metadata accessor for FeedContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v29, 1, 1, v39);
  uint64_t v40 = (uint64_t)v97;
  (*(void (**)(void))(v121 + 104))();
  sub_1C151B61C();
  v96[11] = v42;
  v96[12] = v41;
  sub_1C151B61C();
  v96[9] = v44;
  v96[10] = v43;
  sub_1C151B58C();
  v96[7] = v46;
  v96[8] = v45;
  sub_1C151B51C();
  v96[5] = v48;
  v96[6] = v47;
  sub_1C151B59C();
  v96[3] = v50;
  v96[4] = v49;
  sub_1C151B57C();
  sub_1C151B53C();
  v96[1] = v52;
  v96[2] = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  sub_1C151B5CC();
  unint64_t v58 = v57;
  uint64_t v60 = v59;
  sub_1C151B56C();
  sub_1C151B5BC();
  uint64_t v111 = a3;
  sub_1C151B55C();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  if (qword_1EB87CC48 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v94 = v66;
  uint64_t v95 = v68;
  uint64_t v92 = v62;
  uint64_t v93 = v64;
  unint64_t v90 = v58;
  uint64_t v91 = v60;
  v89[0] = v54;
  v89[1] = v56;
  uint64_t v69 = (uint64_t)v103;
  sub_1C151763C();
  uint64_t v70 = v106;
  uint64_t v71 = &v21[*(int *)(v106 + 36)];
  uint64_t v72 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 1, 1, v72);
  *(void *)id v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  *(void *)(v21 + 17) = 0;
  *((void *)v21 + 3) = 0;
  *(void *)&v21[*(int *)(v70 + 40)] = 0;
  uint64_t v106 = sub_1C1349790(0, 0, v100, v98, (uint64_t)v29, v40, v69, (uint64_t)v21);
  sub_1C0FC0ACC((uint64_t)v21, type metadata accessor for FeedLayoutSolverOptions);
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v69, v105);
  (*(void (**)(uint64_t, void))(v121 + 8))(v40, v120);
  sub_1BFDDF8A0((uint64_t)v29, (uint64_t)&qword_1EB886BB0, (uint64_t)type metadata accessor for FeedContext, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEC0C20);
  unint64_t v73 = v102;
  uint64_t v74 = FormatDecorationProviderFactory.create(content:regions:options:)((uint64_t)v122, v102, MEMORY[0x1E4FBC860]);
  uint64_t v75 = type metadata accessor for FormatDecorationProvider();
  v134[4] = &protocol witness table for FormatDecorationProvider;
  v134[3] = v75;
  v134[0] = v74;
  uint64_t v76 = sub_1C15179FC();
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56);
  v77(v110, 1, 1, v76);
  v77(v112, 1, 1, v76);
  v77(v113, 1, 1, v76);
  v77(v114, 1, 1, v76);
  sub_1C15179BC();
  swift_allocObject();
  swift_retain();
  uint64_t v78 = sub_1C15179AC();
  MEMORY[0x1F4188790](v78);
  unint64_t v90 = v73;
  uint64_t v91 = v79;
  LOBYTE(v92) = 1;
  uint64_t v93 = v134;
  uint64_t v94 = v106;
  sub_1C1351B48(0, 0, 1, (void (*)(long long *))sub_1C0FC04C0, (uint64_t)v89, (uint64_t)&v135);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
  sub_1BFDDF8A0((uint64_t)v134, (uint64_t)&qword_1EB873240, (uint64_t)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType, (uint64_t (*)(void))sub_1BFE4D1E4);
  long long v121 = v135;
  long long v80 = v136;
  uint64_t v81 = v138;
  LOBYTE(v74) = v139;
  long long v120 = v137;
  uint64_t v82 = v115;
  sub_1BFE33984((uint64_t)v122, v115, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v84 = v116;
  uint64_t v83 = v117;
  uint64_t v85 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v116, v111, v118);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  uint64_t v86 = swift_allocObject();
  uint64_t v87 = v86 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult;
  *(_OWORD *)uint64_t v87 = v121;
  *(_OWORD *)(v87 + 16) = v80;
  *(_OWORD *)(v87 + 32) = v120;
  *(void *)(v87 + 48) = v81;
  *(unsigned char *)(v87 + 56) = v74;
  sub_1C0FBF2F8(v82, v86 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v86 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions, v84, v85);
  return v86;
}

uint64_t sub_1C0FBFF54()
{
  type metadata accessor for FeedItem(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0FBFFA4()
{
  uint64_t v0 = sub_1C151635C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v4 = sub_1C151633C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C0FC0080()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0FC00D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0FC0C48();
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1C0FC011C()
{
  return sub_1C1520E0C();
}

uint64_t FormatBackgroundLayoutSolver.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return v0;
}

uint64_t FormatBackgroundLayoutSolver.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatBackgroundLayoutSolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBackgroundLayoutSolver);
}

uint64_t dispatch thunk of FormatBackgroundLayoutSolver.__allocating_init(feedLayoutSolver:formatService:decorationProviderFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1C0FC020C()
{
  if (!qword_1EA1A9C88)
  {
    sub_1C0FC02BC();
    sub_1C0FC0318(&qword_1EA1A9C90);
    sub_1C0FC0318(&qword_1EA1A9C98);
    unint64_t v0 = sub_1C151879C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9C88);
    }
  }
}

void sub_1C0FC02BC()
{
  if (!qword_1EA19CA40)
  {
    sub_1C06081C4();
    unint64_t v0 = sub_1C151A31C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CA40);
    }
  }
}

uint64_t sub_1C0FC0318(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0FC02BC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0FC035C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char v27 = a8 & 1;
  sub_1BFD20484(a1, (uint64_t)v31);
  uint64_t result = sub_1C1341714((uint64_t)v31, a2, a3, a4, a5, a6, a7, v27, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             (uint64_t)v32);
  if (!v30) {
    *a9 = result;
  }
  return result;
}

uint64_t sub_1C0FC0460@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0FC035C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64), a2, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144),
           *(void *)(v2 + 152),
           *(void *)(v2 + 160));
}

uint64_t sub_1C0FC04C0@<X0>(double *a1@<X8>)
{
  return sub_1C1350BC8(*(void *)(v1 + 16), *(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t objectdestroy_5Tm_2()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v37 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v5 = sub_1C151B62C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v36 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = v1 + v4;
  swift_bridgeObjectRelease();
  uint64_t v8 = v1 + v4 + v2[5];
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v10 = v1 + v4 + v2[14];
  uint64_t v11 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
  {
    uint64_t v33 = (v3 + 16) & ~v3;
    uint64_t v34 = v5;
    uint64_t v35 = v1;
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + v11[5];
    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for FormatWebEmbed();
    uint64_t v14 = v12 + *(int *)(v13 + 20);
    uint64_t v15 = sub_1C1515FDC();
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v32(v14, v15);
    uint64_t v17 = v12 + *(int *)(v13 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15)) {
      v32(v17, v15);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v18 = v10 + v11[8];
    uint64_t v19 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = type metadata accessor for GenericDataVisualization();
        v32(v18 + *(int *)(v20 + 20), v15);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v21 = v10 + v11[9];
    sub_1BFEC0C20(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
    uint64_t v23 = v22;
    uint64_t v24 = *(void *)(v22 - 8);
    uint64_t v5 = v34;
    uint64_t v1 = v35;
    uint64_t v4 = v33;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v25 = v7 + v2[18];
  uint64_t v26 = sub_1C151D6DC();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  unint64_t v28 = (v37 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (v28 + v36 + 40) & ~v36;
  uint64_t v30 = v1 + v28;

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v29, v5);
  return swift_deallocObject();
}

uint64_t sub_1C0FC0A7C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0FC0ACC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBackgroundLayoutSolver.HiddenModel()
{
  return &type metadata for FormatBackgroundLayoutSolver.HiddenModel;
}

unint64_t sub_1C0FC0B40()
{
  unint64_t result = qword_1EA1A9CA0;
  if (!qword_1EA1A9CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CA0);
  }
  return result;
}

unint64_t sub_1C0FC0B98()
{
  unint64_t result = qword_1EA1A9CA8;
  if (!qword_1EA1A9CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CA8);
  }
  return result;
}

unint64_t sub_1C0FC0BF0()
{
  unint64_t result = qword_1EA1A9CB0;
  if (!qword_1EA1A9CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CB0);
  }
  return result;
}

unint64_t sub_1C0FC0C48()
{
  unint64_t result = qword_1EA1A9CB8;
  if (!qword_1EA1A9CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CB8);
  }
  return result;
}

unint64_t sub_1C0FC0CA0()
{
  unint64_t result = qword_1EA1A9CC0;
  if (!qword_1EA1A9CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CC0);
  }
  return result;
}

double static Double.oneHour.getter()
{
  return 3600.0;
}

double static Double.oneDay.getter()
{
  return 86400.0;
}

uint64_t Double.milliseconds.getter(double a1)
{
  double v1 = a1 * 1000.0;
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18) {
    return (uint64_t)v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C0FC0D6C(void *a1)
{
  sub_1C0FC1CD4(0, &qword_1EA1A9CE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v25 = *(void *)(v1 + 24);
  uint64_t v26 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v23 = *(void *)(v1 + 40);
  uint64_t v24 = v8;
  int v30 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v20 = *(void *)(v1 + 56);
  uint64_t v21 = v9;
  uint64_t v19 = *(void *)(v1 + 72);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v22 = *(void *)(v1 + 80);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1C0FC1C2C();
  sub_1C1520F0C();
  LOBYTE(v28) = 0;
  uint64_t v15 = v27;
  sub_1C15207CC();
  if (!v15)
  {
    uint64_t v27 = v10;
    uint64_t v16 = v22;
    LOBYTE(v28) = 1;
    sub_1C15207CC();
    LOBYTE(v28) = 2;
    sub_1C15207CC();
    LOBYTE(v28) = 3;
    sub_1C15207DC();
    LOBYTE(v28) = 4;
    sub_1C152074C();
    uint64_t v28 = v19;
    char v31 = 5;
    sub_1BFED9C20();
    sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
    sub_1C152078C();
    uint64_t v28 = v16;
    uint64_t v29 = v27;
    char v31 = 6;
    sub_1C0FC1D38();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v14);
}

uint64_t sub_1C0FC1064@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0FC1CD4(0, &qword_1EA1A9CD0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FC1C2C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v37) = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v36 = v10;
  LOBYTE(v37) = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v15 = v14;
  uint64_t v34 = v13;
  uint64_t v35 = v12;
  LOBYTE(v37) = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = v15;
  uint64_t v33 = sub_1C152069C();
  LOBYTE(v37) = 3;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  int v39 = sub_1C15206AC();
  uint64_t v31 = v19;
  LOBYTE(v37) = 4;
  uint64_t v30 = sub_1C152060C();
  uint64_t v21 = v20;
  sub_1BFED9C20();
  char v40 = 5;
  sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
  uint64_t v32 = v21;
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v22 = v37;
  char v40 = 6;
  sub_1C0FC1C80();
  uint64_t v29 = v22;
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  LOBYTE(v19) = v39 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v24 = v37;
  uint64_t v23 = v38;
  swift_bridgeObjectRetain();
  uint64_t v25 = v35;
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v25;
  *(void *)(a2 + 16) = v34;
  *(void *)(a2 + 24) = v16;
  uint64_t v26 = v31;
  *(void *)(a2 + 32) = v33;
  *(void *)(a2 + 40) = v26;
  *(unsigned char *)(a2 + 48) = v19;
  uint64_t v27 = v29;
  uint64_t v28 = v32;
  *(void *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v28;
  *(void *)(a2 + 72) = v27;
  *(void *)(a2 + 80) = v24;
  *(void *)(a2 + 88) = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0FC15F0()
{
  uint64_t result = 7955819;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 0x6465726975716572;
      break;
    case 4:
      uint64_t result = 0x56746C7561666564;
      break;
    case 5:
      uint64_t result = 0x656C626973736F70;
      break;
    case 6:
      uint64_t result = 0x6E656D656C456975;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0FC16E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0FC1F98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0FC1710(uint64_t a1)
{
  unint64_t v2 = sub_1C0FC1C2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0FC174C(uint64_t a1)
{
  unint64_t v2 = sub_1C0FC1C2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0FC1788@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0FC1064(a1, a2);
}

uint64_t sub_1C0FC17A0(void *a1)
{
  return sub_1C0FC0D6C(a1);
}

uint64_t sub_1C0FC17BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v23 = *(void *)(a1 + 56);
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v21 = *(void **)(a1 + 72);
  uint64_t v22 = *(void *)(a2 + 56);
  uint64_t v25 = *(void *)(a2 + 64);
  uint64_t v20 = *(void **)(a2 + 72);
  long long v18 = *(_OWORD *)(a2 + 80);
  long long v19 = *(_OWORD *)(a1 + 80);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_1C1520A9C(), v13 = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_1C1520A9C(), char v13 = 0, (v14 & 1) != 0))
    {
      if (v4 == v9 && v5 == v10)
      {
        if (v6 != v11) {
          goto LABEL_25;
        }
      }
      else
      {
        char v15 = sub_1C1520A9C();
        char v13 = 0;
        if (v15 & 1) == 0 || ((v6 ^ v11)) {
          return v13 & 1;
        }
      }
      if (v24)
      {
        if (!v25) {
          goto LABEL_25;
        }
        if (v23 != v22 || v24 != v25)
        {
          char v16 = sub_1C1520A9C();
          char v13 = 0;
          if ((v16 & 1) == 0) {
            return v13 & 1;
          }
        }
      }
      else if (v25)
      {
        goto LABEL_25;
      }
      if (v21)
      {
        if (!v20 || (sub_1BFE9E788(v21, v20) & 1) == 0) {
          goto LABEL_25;
        }
        goto LABEL_23;
      }
      if (!v20)
      {
LABEL_23:
        long long v26 = v18;
        long long v27 = v19;
        char v13 = sub_1C0A09258((uint64_t)&v27, (uint64_t *)&v26);
        return v13 & 1;
      }
LABEL_25:
      char v13 = 0;
    }
  }
  return v13 & 1;
}

uint64_t destroy for DebugFormatTemplateKey()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatTemplateKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatTemplateKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatTemplateKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKey()
{
  return &type metadata for DebugFormatTemplateKey;
}

unint64_t sub_1C0FC1C2C()
{
  unint64_t result = qword_1EA1A9CD8;
  if (!qword_1EA1A9CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CD8);
  }
  return result;
}

unint64_t sub_1C0FC1C80()
{
  unint64_t result = qword_1EA1A9CE0;
  if (!qword_1EA1A9CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CE0);
  }
  return result;
}

void sub_1C0FC1CD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0FC1C2C();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatTemplateKey.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0FC1D38()
{
  unint64_t result = qword_1EA1A9CF0;
  if (!qword_1EA1A9CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTemplateKey.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FC1E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKey.CodingKeys()
{
  return &type metadata for DebugFormatTemplateKey.CodingKeys;
}

unint64_t sub_1C0FC1E94()
{
  unint64_t result = qword_1EA1A9CF8;
  if (!qword_1EA1A9CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9CF8);
  }
  return result;
}

unint64_t sub_1C0FC1EEC()
{
  unint64_t result = qword_1EA1A9D00;
  if (!qword_1EA1A9D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9D00);
  }
  return result;
}

unint64_t sub_1C0FC1F44()
{
  unint64_t result = qword_1EA1A9D08;
  if (!qword_1EA1A9D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9D08);
  }
  return result;
}

uint64_t sub_1C0FC1F98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465726975716572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x56746C7561666564 && a2 == 0xEC00000065756C61 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C626973736F70 && a2 == 0xEE007365756C6156 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E656D656C456975 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t FormatItem.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.types.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 FormatItem.init(identifier:name:description:kind:traits:children:style:styles:selectors:options:types:accessibilityRole:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12, uint64_t a13, char *a14)
{
  __n128 result = a11;
  char v15 = *a14;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(_OWORD *)(a9 + 48) = *a7;
  *(void *)(a9 + 64) = a8;
  *(_OWORD *)(a9 + 72) = a10;
  *(__n128 *)(a9 + 88) = a11;
  *(void *)(a9 + 104) = a12;
  *(void *)(a9 + 112) = a13;
  *(unsigned char *)(a9 + 120) = v15;
  return result;
}

uint64_t FormatItem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItem.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItem.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItem.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatItem.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatItem.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatItem.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatItem.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  unint64_t v3 = *(void *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFE74E64(v2, v3);
}

uint64_t FormatItem.traits.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*FormatItem.traits.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatItem.children.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatItem.children.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatItem.style.getter()
{
  return swift_retain();
}

uint64_t FormatItem.styles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatItem.styles.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatItem.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatItem.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatItem.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatItem.options.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatItem.types.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatItem.types.modify())(void)
{
  return nullsub_1;
}

void FormatItem.accessibilityRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 120);
}

uint64_t sub_1C0FC2660()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed10FormatItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  long long v39 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v37 = *(void *)(a1 + 72);
  uint64_t v35 = *(void *)(a1 + 80);
  uint64_t v33 = *(void *)(a1 + 88);
  uint64_t v31 = *(void *)(a1 + 96);
  uint64_t v29 = *(void *)(a1 + 104);
  uint64_t v27 = *(void *)(a1 + 112);
  int v25 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  long long v38 = *(_OWORD *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v36 = *(void *)(a2 + 72);
  uint64_t v34 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v28 = *(void *)(a2 + 104);
  uint64_t v26 = *(void *)(a2 + 112);
  int v24 = *(unsigned __int8 *)(a2 + 120);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_1C1520A9C(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v7) {
        return 0;
      }
      if (v2 != v8 || v4 != v7)
      {
        char v14 = sub_1C1520A9C();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v5)
    {
      if (!v9) {
        return 0;
      }
      if (v3 != v10 || v5 != v9)
      {
        char v15 = sub_1C1520A9C();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v9)
    {
      return 0;
    }
    long long v40 = v38;
    *(_OWORD *)uint64_t v41 = v39;
    if ((_s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0(v41, (uint64_t *)&v40) & 1) == 0) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v16 = sub_1C00ECAB4(v6, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_1C00E0E68(v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return 0;
    }
    if (v35)
    {
      if (!v34) {
        return 0;
      }
      type metadata accessor for FormatItemNodeStyle(0);
      swift_retain();
      uint64_t v18 = swift_retain();
      char v19 = static FormatItemNodeStyle.== infix(_:_:)(v18, v34);
      swift_release();
      swift_release();
      if ((v19 & 1) == 0) {
        return 0;
      }
LABEL_26:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v20 = sub_1C00E1078(v33, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v21 = sub_1BFEFAE14(v31, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v22 = sub_1C00E0650(v29, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v23 = sub_1C00E8B40(v27, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        return 0;
      }
      if (v25 == 7)
      {
        if (v24 != 7) {
          return 0;
        }
      }
      else
      {
        LOBYTE(v41[0]) = v25;
        if (v24 == 7) {
          return 0;
        }
        LOBYTE(v40) = v24;
        if (!_s8NewsFeed23FormatAccessibilityRoleO2eeoiySbAC_ACtFZ_0((unsigned __int8 *)v41, (unsigned __int8 *)&v40)) {
          return 0;
        }
      }
      return 1;
    }
    if (!v34) {
      goto LABEL_26;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C0FC2A20(uint64_t a1)
{
  unint64_t result = sub_1C00F6CB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FC2A48(void *a1)
{
  a1[1] = sub_1C0084B00();
  a1[2] = sub_1C0084B54();
  unint64_t result = sub_1C0FC2A80();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FC2A80()
{
  unint64_t result = qword_1EB890ED8;
  if (!qword_1EB890ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890ED8);
  }
  return result;
}

uint64_t sub_1C0FC2AD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2AE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C0FC2B24@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2B30(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1C0FC2B74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2B80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 64) = v3;
  return result;
}

uint64_t sub_1C0FC2BC4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2BD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 72) = v3;
  return result;
}

uint64_t sub_1C0FC2C14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2C20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 88) = v3;
  return result;
}

uint64_t sub_1C0FC2C64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2C70(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 96) = v3;
  return result;
}

uint64_t sub_1C0FC2CB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2CC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 104) = v3;
  return result;
}

uint64_t sub_1C0FC2D04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0FC2D10(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 112) = v3;
  return result;
}

uint64_t assignWithCopy for FormatItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) >= 0xFuLL)
  {
    if (v4 >= 0xF)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C01A7564(a1 + 48);
    goto LABEL_6;
  }
  if (v4 < 0xF)
  {
LABEL_6:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    goto LABEL_8;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for FormatItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(a2 + 48);
  if (*(void *)(a1 + 56) >= 0xFuLL)
  {
    unint64_t v8 = *(void *)(a2 + 56);
    if (v8 >= 0xF)
    {
      *(void *)(a1 + 48) = *v7;
      *(void *)(a1 + 56) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C01A7564(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for FormatItem()
{
  return &type metadata for FormatItem;
}

ValueMetadata *type metadata accessor for H6_V1()
{
  return &type metadata for H6_V1;
}

uint64_t sub_1C0FC3044(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0FC72A4(0, &qword_1EA1A9E10, (uint64_t (*)(void))sub_1C0FC7250, (uint64_t)&type metadata for H6_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FC7250();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0FC6510(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C0FC6C60(0, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FBB320]);
    sub_1C0FC730C(&qword_1EA1A9E18, (void (*)(void))sub_1C0985E64);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0FC32A0()
{
  if (*v0) {
    return 0x7475626972747461;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_1C0FC32DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0FC75A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0FC3304(uint64_t a1)
{
  unint64_t v2 = sub_1C0FC7250();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0FC3340(uint64_t a1)
{
  unint64_t v2 = sub_1C0FC7250();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0FC337C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0FC6F8C(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0FC33C4(void *a1)
{
  return sub_1C0FC3044(a1);
}

uint64_t sub_1C0FC33DC()
{
  sub_1C0FC65D0();
  return sub_1C151798C();
}

uint64_t sub_1C0FC3458@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0FC72A4(0, &qword_1EA1A9DE8, (uint64_t (*)(void))sub_1C0FC6F38, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0FC3514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v45 = a1;
  uint64_t v46 = a3;
  unint64_t v39 = sub_1C151635C();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for GroupLayoutContext();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  long long v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  char v12 = *v3;
  int v40 = *v3;
  char v13 = (void *)*((void *)v3 + 1);
  unsigned __int8 v14 = v3[16];
  uint64_t v36 = type metadata accessor for GroupLayoutBindingContext;
  uint64_t v15 = a1;
  char v16 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1B00C(v15, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v37 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1B00C(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v13, v14);
  sub_1C151634C();
  uint64_t v35 = sub_1C151633C();
  uint64_t v34 = v17;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v39);
  uint64_t v56 = &type metadata for H6_V1;
  unint64_t v39 = sub_1C0185EA0();
  unint64_t v57 = v39;
  v53[0] = v12;
  uint64_t v54 = v13;
  unsigned __int8 v55 = v14;
  type metadata accessor for GroupLayoutKey();
  uint64_t v18 = swift_allocObject();
  sub_1BFFFC7A0(v13, v14);
  uint64_t v51 = sub_1C1520FAC();
  uint64_t v52 = v19;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 45;
  unint64_t v48 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v20 = sub_1C151FEBC();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 16) = v20;
  *(void *)(v18 + 24) = v22;
  char v23 = (uint64_t *)(v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v24 = v34;
  *char v23 = v35;
  v23[1] = v24;
  sub_1BFC66384((uint64_t)v53, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v25 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v16, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))v36);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v25, 0, 1, v41);
  uint64_t v26 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  uint64_t v27 = v37;
  sub_1BFF2389C((uint64_t)v10, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))v37);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v26, 0, 1, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFFFC630(v13, v14);
  uint64_t v28 = type metadata accessor for H6_V1.Bound();
  uint64_t v29 = v46;
  v46[3] = v28;
  v29[4] = sub_1C0FC6510(&qword_1EA1A9D20, (void (*)(uint64_t))type metadata accessor for H6_V1.Bound);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  unint64_t v31 = v39;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for H6_V1;
  boxed_opaque_existential_0[5] = v31;
  *((unsigned char *)boxed_opaque_existential_0 + 8) = v40;
  boxed_opaque_existential_0[2] = (uint64_t)v13;
  *((unsigned char *)boxed_opaque_existential_0 + 24) = v14;
  sub_1BFF1B00C(v43, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(void))v27);
  sub_1BFFFC7A0(v13, v14);
  uint64_t result = sub_1C0F535C8(0, 0, 0, 0, 0);
  uint64_t *boxed_opaque_existential_0 = v18;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

double sub_1C0FC39D0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for H6_V1.Bound() + 28));
  uint64_t v28 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0284398((void (*)(void *__return_ptr, uint64_t))sub_1C0FC6558, (uint64_t)v27, v8);
  swift_bridgeObjectRelease();
  char v23 = v9;
  *(void *)&long long v30 = v9;
  sub_1C0FC6C60(0, &qword_1EA1A9D40, (uint64_t)&type metadata for HGroupLayoutContext, MEMORY[0x1E4FBB320]);
  uint64_t v11 = v10;
  sub_1BFEB3634(&qword_1EA1A9D48, &qword_1EA1A9D40, (uint64_t)&type metadata for HGroupLayoutContext);
  uint64_t v24 = v11;
  uint64_t v12 = sub_1C151F0BC();
  uint64_t v13 = *MEMORY[0x1E4FAB6D8];
  uint64_t v14 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v25 = v12;
  uint64_t v26 = v2;
  sub_1C0FC6BDC(0, &qword_1EA1A9D50, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  sub_1C1517BFC();
  long long v22 = v30;
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  uint64_t v29 = v33;
  *(void *)&long long v30 = v23;
  uint64_t v17 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C0FC6C60(0, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FBB320]);
  sub_1BFEB3634(&qword_1EA1A9D70, &qword_1EA1A9D40, (uint64_t)&type metadata for HGroupLayoutContext);
  sub_1BFEB3634(&qword_1EA1A9D78, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v30 = v18;
  sub_1C0FC6C60(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v17);
  sub_1BFEB3634((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  sub_1BFEB0FD4();
  uint64_t v19 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = *(double *)&v22;
  *(_OWORD *)(a1 + 8) = v22;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v16;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v19;
  *(void *)(a1 + 48) = v21;
  return result;
}

uint64_t sub_1C0FC3E18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C024A070(a1, (uint64_t)&v49);
  if (!v58)
  {
    long long v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    long long v29 = v51;
    long long v30 = v52;
    long long v31 = v53;
    long long v32 = v54;
    long long v27 = v49;
    long long v28 = v50;
    long long v47 = v55;
    v48[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)&v56[9];
    long long v43 = v51;
    long long v44 = v52;
    long long v45 = v53;
    long long v46 = v54;
    uint64_t v13 = *a2;
    long long v41 = v49;
    long long v42 = v50;
    sub_1C01B3C58(v35);
    sub_1C0181C7C((uint64_t)v35, (uint64_t)v40);
    uint64_t v14 = (char *)a2 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
    uint64_t v15 = type metadata accessor for GroupLayoutContext();
    uint64_t v16 = *(void *)(*(void *)&v14[*(int *)(v15 + 40)] + 16);
    double v17 = *(double *)&v14[*(int *)(v15 + 32)];
    sub_1BFC66384(v16 + 16, (uint64_t)v38);
    sub_1BFC66384(v16 + 56, (uint64_t)v37);
    double v18 = v17 * *(double *)(v16 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    uint64_t v19 = swift_allocObject();
    sub_1BFC773DC(v38, v19 + 16);
    sub_1BFC773DC(v37, v19 + 56);
    *(double *)(v19 + 96) = v18;
    swift_retain();
    sub_1C0187FB0((uint64_t)&v27);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v19 + 16);
    __swift_destroy_boxed_opaque_existential_1(v19 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    uint64_t result = sub_1C01880A4((uint64_t)&v27);
    goto LABEL_5;
  }
  if (v58 == 1)
  {
    long long v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    long long v29 = v51;
    long long v30 = v52;
    long long v31 = v53;
    long long v32 = v54;
    long long v27 = v49;
    long long v28 = v50;
    sub_1C0181C7C((uint64_t)v57, (uint64_t)v35);
    uint64_t v5 = *a2;
    long long v47 = v33;
    v48[0] = v34[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v34 + 9);
    long long v43 = v29;
    long long v44 = v30;
    long long v45 = v31;
    long long v46 = v32;
    long long v41 = v27;
    long long v42 = v28;
    sub_1C0181C7C((uint64_t)v35, (uint64_t)v40);
    uint64_t v6 = (char *)a2 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(void *)(*(void *)&v6[*(int *)(v7 + 40)] + 16);
    double v9 = *(double *)&v6[*(int *)(v7 + 32)];
    sub_1BFC66384(v8 + 16, (uint64_t)v38);
    sub_1BFC66384(v8 + 56, (uint64_t)v37);
    double v10 = v9 * *(double *)(v8 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    uint64_t v11 = swift_allocObject();
    sub_1BFC773DC(v38, v11 + 16);
    sub_1BFC773DC(v37, v11 + 56);
    *(double *)(v11 + 96) = v10;
    swift_retain();
    sub_1C0187FB0((uint64_t)&v27);
    sub_1C0FC6D4C((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C0FC6CAC);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v11 + 16);
    __swift_destroy_boxed_opaque_existential_1(v11 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v5, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    sub_1C01880A4((uint64_t)&v27);
    uint64_t result = sub_1C0FC6D4C((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C01B3BB8);
LABEL_5:
    *(unsigned char *)(a3 + 392) = 0;
    return result;
  }
  v35[6] = v55;
  v35[7] = *(_OWORD *)v56;
  v35[8] = *(_OWORD *)&v56[16];
  char v36 = v57[0];
  v35[2] = v51;
  v35[3] = v52;
  v35[4] = v53;
  uint64_t v35[5] = v54;
  v35[0] = v49;
  v35[1] = v50;
  uint64_t v20 = *a2;
  sub_1BFEA435C((uint64_t)v35, (uint64_t)&v27);
  uint64_t v21 = (char *)a2 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
  uint64_t v22 = type metadata accessor for GroupLayoutContext();
  uint64_t v23 = *(void *)(*(void *)&v21[*(int *)(v22 + 40)] + 16);
  double v24 = *(double *)&v21[*(int *)(v22 + 32)];
  sub_1BFC66384(v23 + 16, (uint64_t)v40);
  sub_1BFC66384(v23 + 56, (uint64_t)v39);
  double v25 = v24 * *(double *)(v23 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v26 = swift_allocObject();
  sub_1BFC773DC(v40, v26 + 16);
  sub_1BFC773DC(v39, v26 + 56);
  *(double *)(v26 + 96) = v25;
  swift_retain();
  FeedLayoutStylerFactory.styler()((uint64_t *)&v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v26 + 16);
  __swift_destroy_boxed_opaque_existential_1(v26 + 56);
  swift_deallocClassInstance();
  CoverChannelViewLayout.Context.init(key:model:styler:)(v20, (uint64_t)&v27, (uint64_t)&v41, (void *)a3);
  uint64_t result = sub_1BFEA4290((uint64_t)v35);
  *(unsigned char *)(a3 + 392) = 1;
  return result;
}

void sub_1C0FC429C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0FC72A4(0, &qword_1EA1A9D88, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  double v10 = (char *)&v21 - v9;
  uint64_t v30 = a2;
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    unsigned int v27 = *MEMORY[0x1E4FAB9E0];
    uint64_t v26 = *(void (**)(char *, void, uint64_t))(v8 + 104);
    unsigned int v25 = *MEMORY[0x1E4FAB638];
    uint64_t v29 = v8 + 104;
    double v24 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    long long v23 = xmmword_1C1529AE0;
    uint64_t v21 = a3;
    uint64_t v22 = v11;
    uint64_t v28 = v7;
    do
    {
      ++v12;
      uint64_t v31 = a1;
      v26(v10, v27, v7);
      sub_1C0FC6984();
      sub_1C0FC72A4(0, &qword_1EA1A9D98, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v23;
      uint64_t v18 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, v25, v14);
      MEMORY[0x1F4188790](v18);
      uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
      sub_1C0FC6BDC(0, &qword_1EA1A9DA0, MEMORY[0x1E4FAB6F0]);
      sub_1C0FC6A1C(&qword_1EA1A9DA8, &qword_1EA1A9DA0, v19);
      swift_bridgeObjectRetain();
      uint64_t v7 = v28;
      uint64_t v20 = v22;
      sub_1C151731C();
      swift_bridgeObjectRelease();
      (*v24)(v10, v7);
      swift_bridgeObjectRelease();
    }
    while (v20 != v12);
    swift_bridgeObjectRelease();
  }
}

void sub_1C0FC461C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v119 = a1;
  uint64_t v120 = a3;
  uint64_t v101 = sub_1C1517A7C();
  uint64_t v4 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v104 = (uint64_t *)((char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0FC72A4(0, &qword_1EA1A9D88, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v124 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  unint64_t v102 = (uint64_t *)((char *)&v93 - v11);
  uint64_t v118 = sub_1C1517A9C();
  MEMORY[0x1F4188790](v118);
  uint64_t v117 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14) {
    return;
  }
  uint64_t v15 = a2;
  uint64_t v16 = a2 + 32;
  uint64_t v116 = (char *)&v135;
  unsigned int v108 = *MEMORY[0x1E4FAB8F8];
  long long v107 = (void (**)(char *, void, uint64_t, __n128))(v12 + 104);
  unsigned int v115 = *MEMORY[0x1E4FAB7A8];
  unsigned int v114 = *MEMORY[0x1E4FAB7B0];
  unsigned int v113 = *MEMORY[0x1E4FAB9E8];
  long long v112 = (void (**)(uint64_t *, void, uint64_t))(v7 + 104);
  unsigned int v111 = *MEMORY[0x1E4FAB5E8];
  unsigned int v110 = *MEMORY[0x1E4FAB620];
  uint64_t v106 = (void (**)(uint64_t *, uint64_t))(v7 + 8);
  uint64_t v99 = &v125[10];
  uint64_t v103 = (uint64_t)&v125[5] + 8;
  uint64_t v95 = &v128;
  unsigned int v94 = *MEMORY[0x1E4FAB8D0];
  uint64_t v97 = (uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 104);
  long long v96 = (void (**)(void *, uint64_t))(v4 + 8);
  unsigned int v98 = *MEMORY[0x1E4FAB8C0];
  uint64_t v93 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  long long v109 = xmmword_1C1529AE0;
  uint64_t v100 = v9;
  while (1)
  {
    sub_1C0FC6624(v16, (uint64_t)v134);
    char v44 = *v116;
    uint64_t v122 = v16;
    uint64_t v123 = v14;
    uint64_t v121 = v17;
    if ((v44 & 1) == 0)
    {
      memcpy(v125, v134, 0x188uLL);
      if ((BYTE8(v125[3]) & 0x10) != 0)
      {
        uint64_t v18 = v120 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
        uint64_t v19 = type metadata accessor for GroupLayoutContext();
        uint64_t v20 = *(void *)(*(void *)(v18 + *(int *)(v19 + 40)) + 24);
        __n128 v21 = MEMORY[0x1F4188790](v19);
        *(&v93 - 4) = (uint64_t)v125;
        *(&v93 - 3) = v20;
        uint64_t v91 = v22;
      }
      else
      {
        uint64_t v73 = v120 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
        uint64_t v74 = type metadata accessor for GroupLayoutContext();
        uint64_t v75 = *(void *)(*(void *)(v73 + *(int *)(v74 + 40)) + 24);
        __n128 v21 = MEMORY[0x1F4188790](v74);
        uint64_t v91 = v125;
        uint64_t v92 = v75;
      }
      (*v107)(v117, v108, v118, v21);
      sub_1C01BC774();
      swift_allocObject();
      swift_retain();
      uint64_t KeyPath = sub_1C1517BEC();
      swift_release();
      uint64_t v126 = v119;
      swift_getKeyPath();
      sub_1BFF35C38();
      uint64_t v24 = v23;
      uint64_t v25 = swift_allocBox();
      unsigned int v27 = v26;
      uint64_t v28 = (char *)v26 + *(int *)(v24 + 48);
      sub_1C151728C();
      uint64_t v29 = swift_allocBox();
      sub_1C151727C();
      *unsigned int v27 = v29;
      uint64_t v30 = sub_1C151786C();
      uint64_t v31 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104);
      v31(v27, v115, v30);
      v31((uint64_t *)v28, v114, v30);
      long long v32 = v102;
      uint64_t *v102 = v25;
      (*v112)(v32, v113, v124);
      sub_1C0FC6984();
      sub_1C0FC72A4(0, &qword_1EA1A9D98, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v34 = v33;
      uint64_t v35 = *(void *)(v33 - 8);
      unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v109;
      unint64_t v38 = v37 + v36;
      sub_1C0FC72A4(0, &qword_1EA1A9DB0, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FAB618]);
      (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v39 - 8) + 104))(v38, v111, v39);
      (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38, v110, v34);
      int v40 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0FC6BDC(0, &qword_1EA1A9DB8, MEMORY[0x1E4FAB4D0]);
      long long v42 = v41;
      uint64_t v43 = sub_1C0FC6A1C(&qword_1EA1A9DC0, &qword_1EA1A9DB8, v40);
      uint64_t v91 = v42;
      uint64_t v92 = v43;
      uint64_t v17 = v121;
      sub_1C15173DC();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*v106)(v32, v124);
      sub_1C01BC710((uint64_t)v125);
      uint64_t v9 = v100;
      goto LABEL_5;
    }
    v125[12] = *(_OWORD *)&v134[192];
    v125[13] = *(_OWORD *)&v134[208];
    v125[14] = *(_OWORD *)&v134[224];
    *(void *)&v125[15] = *(void *)&v134[240];
    v125[8] = *(_OWORD *)&v134[128];
    v125[9] = *(_OWORD *)&v134[144];
    v125[10] = *(_OWORD *)&v134[160];
    v125[11] = *(_OWORD *)&v134[176];
    v125[4] = *(_OWORD *)&v134[64];
    v125[5] = *(_OWORD *)&v134[80];
    v125[6] = *(_OWORD *)&v134[96];
    v125[7] = *(_OWORD *)&v134[112];
    v125[0] = *(_OWORD *)v134;
    v125[1] = *(_OWORD *)&v134[16];
    v125[2] = *(_OWORD *)&v134[32];
    v125[3] = *(_OWORD *)&v134[48];
    uint64_t v133 = v119;
    uint64_t KeyPath = swift_getKeyPath();
    sub_1BFF35C38();
    uint64_t v46 = v45;
    uint64_t v47 = swift_allocBox();
    long long v49 = v48;
    long long v50 = (char *)v48 + *(int *)(v46 + 48);
    sub_1C151728C();
    uint64_t v51 = swift_allocBox();
    sub_1C151727C();
    *long long v49 = v51;
    uint64_t v52 = sub_1C151786C();
    long long v53 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v52 - 8) + 104);
    v53(v49, v115, v52);
    v53((uint64_t *)v50, v114, v52);
    *uint64_t v9 = v47;
    long long v54 = v9;
    (*v112)(v9, v113, v124);
    sub_1C0FC6984();
    sub_1C0FC72A4(0, &qword_1EA1A9D98, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v56 = v55;
    uint64_t v57 = *(void *)(v55 - 8);
    unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v109;
    unint64_t v60 = v59 + v58;
    sub_1C0FC72A4(0, &qword_1EA1A9DB0, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v61 - 8) + 104))(v60, v111, v61);
    (*(void (**)(unint64_t, void, uint64_t))(v57 + 104))(v60, v110, v56);
    type metadata accessor for H6_V1.Bound();
    type metadata accessor for GroupLayoutContext();
    uint64_t v62 = *((void *)&v125[11] + 1);
    uint64_t v63 = *(void *)&v125[12];
    uint64_t v64 = v99;
    __swift_project_boxed_opaque_existential_1(v99, *((uint64_t *)&v125[11] + 1));
    uint64_t v65 = *(double (**)(uint64_t, uint64_t))(v63 + 48);
    swift_retain();
    double v66 = v65(v62, v63);
    uint64_t v67 = *((void *)&v125[11] + 1);
    uint64_t v68 = *(void *)&v125[12];
    __swift_project_boxed_opaque_existential_1(v64, *((uint64_t *)&v125[11] + 1));
    double v69 = (*(double (**)(uint64_t, uint64_t))(v68 + 56))(v67, v68);
    sub_1C0FC6A60(v103, (uint64_t)&v126, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
    if (v127 == 1)
    {
      uint64_t v70 = &v126;
      uint64_t v71 = &qword_1EB865538;
      uint64_t v72 = &type metadata for FeedTag.Overrides;
LABEL_18:
      sub_1C0FC6AE0((uint64_t)v70, v71, (uint64_t)v72);
      uint64_t v77 = v98;
      goto LABEL_19;
    }
    sub_1C0FC6A60((uint64_t)v95, (uint64_t)v129, (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
    sub_1C01B0DA4((uint64_t)&v126);
    if (!v130)
    {
      uint64_t v70 = (uint64_t *)v129;
      uint64_t v71 = (unint64_t *)&unk_1EA197CC0;
      uint64_t v72 = &type metadata for FeedTag.Overrides.Image;
      goto LABEL_18;
    }
    char v76 = v132;
    sub_1C01B0FEC((uint64_t)v129);
    uint64_t v77 = v98;
    if ((v76 & 1) == 0) {
      break;
    }
LABEL_19:
    long long v80 = v104;
    uint64_t v81 = v101;
    uint64_t v82 = (*v97)(v104, v77, v101);
    __n128 v83 = MEMORY[0x1F4188790](v82);
    *(&v93 - 4) = (uint64_t)v80;
    *((double *)&v93 - 3) = v66 + v69 + v69;
    uint64_t v91 = v125;
    (*v107)(v117, v108, v118, v83);
    sub_1C0FC6B60();
    swift_allocObject();
    sub_1C1517BEC();
    (*v96)(v80, v81);
    swift_release();
    uint64_t v84 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0FC6BDC(0, &qword_1EA1A9DB8, MEMORY[0x1E4FAB4D0]);
    uint64_t v86 = v85;
    uint64_t v87 = sub_1C0FC6A1C(&qword_1EA1A9DC0, &qword_1EA1A9DB8, v84);
    uint64_t v91 = v86;
    uint64_t v92 = v87;
    uint64_t v9 = v54;
    uint64_t v17 = v121;
    sub_1C15173DC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*v106)(v9, v124);
    sub_1C0FC6680((uint64_t)v125);
LABEL_5:
    uint64_t v16 = v122 + 400;
    uint64_t v14 = v123 - 1;
    if (v123 == 1)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_1C0FC6A60(v103, (uint64_t)&v126, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v127 == 1)
  {
    char v88 = &qword_1EB865538;
    uint64_t v89 = &type metadata for FeedTag.Overrides;
    unint64_t v90 = &v126;
    goto LABEL_24;
  }
  sub_1C0FC6A60((uint64_t)v95, (uint64_t)v129, (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
  sub_1C01B0DA4((uint64_t)&v126);
  if (v130)
  {
    uint64_t v78 = v131;
    char v79 = v132;
    sub_1C01B0FEC((uint64_t)v129);
    if (v79) {
      goto LABEL_25;
    }
    *uint64_t v104 = v78;
    uint64_t v77 = v94;
    goto LABEL_19;
  }
  char v88 = (unint64_t *)&unk_1EA197CC0;
  uint64_t v89 = &type metadata for FeedTag.Overrides.Image;
  unint64_t v90 = (uint64_t *)v129;
LABEL_24:
  sub_1C0FC6AE0((uint64_t)v90, v88, (uint64_t)v89);
LABEL_25:
  __break(1u);
}

void *sub_1C0FC54B8@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(__dst, __src, 0x180uLL);
  sub_1C098602C((uint64_t)__dst);
  return sub_1C0986018(__dst, a2);
}

void *sub_1C0FC5514@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  long long v3 = a1[9];
  v10[8] = a1[8];
  v10[9] = v3;
  long long v4 = a1[11];
  v10[10] = a1[10];
  v10[11] = v4;
  long long v5 = a1[5];
  v10[4] = a1[4];
  v10[5] = v5;
  long long v6 = a1[7];
  void v10[6] = a1[6];
  v10[7] = v6;
  long long v7 = a1[1];
  v10[0] = *a1;
  v10[1] = v7;
  long long v8 = a1[3];
  long long v10[2] = a1[2];
  void v10[3] = v8;
  sub_1C098600C((uint64_t)v10);
  return sub_1C0986018(v10, a2);
}

uint64_t sub_1C0FC5590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1C151635C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0986018(a3, v47);
  sub_1C0FC6624(a2, (uint64_t)v45);
  sub_1C0986018(v47, &v46);
  if ((v45[392] & 1) == 0)
  {
    sub_1C0FC6624((uint64_t)v45, (uint64_t)v43);
    sub_1C0986018(v47, v44);
    int v33 = sub_1C0984118((uint64_t)v44);
    uint64_t v34 = nullsub_1();
    if (v33 != 1)
    {
      int v40 = (const void *)v34;
      uint64_t v41 = swift_allocObject();
      memcpy((void *)(v41 + 16), v43, 0x188uLL);
      memcpy((void *)(v41 + 408), v40, 0x180uLL);
      *(void *)(v41 + 792) = a1;
      uint64_t v32 = v41 | 0x5000000000000000;
      goto LABEL_9;
    }
    sub_1C01BC710((uint64_t)v43);
LABEL_7:
    uint64_t v35 = swift_allocObject();
    sub_1C151634C();
    uint64_t v36 = sub_1C151633C();
    uint64_t v38 = v37;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)(v35 + 16) = v36;
    *(void *)(v35 + 24) = v38;
    *a4 = v35;
    return sub_1C0FC5E2C((uint64_t)v45, (uint64_t (*)(void))sub_1C0FC670C);
  }
  sub_1C0FC6624((uint64_t)v45, (uint64_t)v43);
  sub_1C0986018(v47, v44);
  int v12 = sub_1C0984118((uint64_t)v44);
  uint64_t v13 = nullsub_1();
  if (v12 != 1)
  {
    sub_1C0FC6680((uint64_t)v43);
    goto LABEL_7;
  }
  uint64_t v14 = (long long *)v13;
  uint64_t v15 = swift_allocObject();
  long long v16 = v43[13];
  *(_OWORD *)(v15 + 208) = v43[12];
  *(_OWORD *)(v15 + 224) = v16;
  *(_OWORD *)(v15 + 240) = v43[14];
  *(void *)(v15 + 256) = *(void *)&v43[15];
  long long v17 = v43[9];
  *(_OWORD *)(v15 + 144) = v43[8];
  *(_OWORD *)(v15 + 160) = v17;
  long long v18 = v43[11];
  *(_OWORD *)(v15 + 176) = v43[10];
  *(_OWORD *)(v15 + 192) = v18;
  long long v19 = v43[5];
  *(_OWORD *)(v15 + 80) = v43[4];
  *(_OWORD *)(v15 + 96) = v19;
  long long v20 = v43[7];
  *(_OWORD *)(v15 + 112) = v43[6];
  *(_OWORD *)(v15 + 128) = v20;
  long long v21 = v43[1];
  *(_OWORD *)(v15 + 16) = v43[0];
  *(_OWORD *)(v15 + 32) = v21;
  long long v22 = v43[3];
  *(_OWORD *)(v15 + 48) = v43[2];
  *(_OWORD *)(v15 + 64) = v22;
  long long v23 = *v14;
  long long v24 = v14[1];
  long long v25 = v14[3];
  *(_OWORD *)(v15 + 296) = v14[2];
  *(_OWORD *)(v15 + 312) = v25;
  *(_OWORD *)(v15 + 280) = v24;
  *(_OWORD *)(v15 + 264) = v23;
  long long v26 = v14[4];
  long long v27 = v14[5];
  long long v28 = v14[7];
  *(_OWORD *)(v15 + 360) = v14[6];
  *(_OWORD *)(v15 + 376) = v28;
  *(_OWORD *)(v15 + 328) = v26;
  *(_OWORD *)(v15 + 344) = v27;
  long long v29 = v14[8];
  long long v30 = v14[9];
  long long v31 = v14[11];
  *(_OWORD *)(v15 + 424) = v14[10];
  *(_OWORD *)(v15 + 440) = v31;
  *(_OWORD *)(v15 + 392) = v29;
  *(_OWORD *)(v15 + 408) = v30;
  *(void *)(v15 + 456) = a1;
  uint64_t v32 = v15 | 0x6000000000000000;
LABEL_9:
  *a4 = v32;
  return sub_1C0FC6824((uint64_t)v45);
}

uint64_t sub_1C0FC589C(uint64_t a1)
{
  return sub_1C0234964(*(void *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_1C0FC58AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0FC3514(a1, a2, a3);
}

uint64_t sub_1C0FC58C4()
{
  return sub_1C12BC49C();
}

unint64_t sub_1C0FC58D4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0FC5904();
  unint64_t result = sub_1C0FC5958();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0FC5904()
{
  unint64_t result = qword_1EA1A9D10;
  if (!qword_1EA1A9D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9D10);
  }
  return result;
}

unint64_t sub_1C0FC5958()
{
  unint64_t result = qword_1EA1A9D18;
  if (!qword_1EA1A9D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9D18);
  }
  return result;
}

uint64_t type metadata accessor for H6_V1.Bound()
{
  uint64_t result = qword_1EA1A9D28;
  if (!qword_1EA1A9D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C0FC59F8(void *a1, void *a2, uint64_t a3)
{
  long long v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  int v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  long long v17 = &v8[v16];
  long long v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)long long v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  long long v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *long long v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0FC5E2C((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *long long v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *long long v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  long long v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  long long v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C01BB2C0();
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    long long v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1C0FC5E2C(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    long long v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0FC5E2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0FC5E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  long long v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1C0FC5E2C((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *long long v18 = v19;
    goto LABEL_6;
  }
  *long long v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C01BB2C0();
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1C0FC5E2C(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0FC6288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0FC629C);
}

uint64_t sub_1C0FC629C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0FC634C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0FC6360);
}

void *sub_1C0FC6360(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0FC6408()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0FC64B8(uint64_t a1)
{
  uint64_t result = sub_1C0FC6510(&qword_1EA1A9D38, (void (*)(uint64_t))type metadata accessor for H6_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0FC6510(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0FC6558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0FC3E18(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1C0FC6574(uint64_t a1)
{
  sub_1C0FC429C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C0FC657C()
{
  unint64_t result = qword_1EA1A9D58;
  if (!qword_1EA1A9D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9D58);
  }
  return result;
}

unint64_t sub_1C0FC65D0()
{
  unint64_t result = qword_1EA1A9D60;
  if (!qword_1EA1A9D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9D60);
  }
  return result;
}

uint64_t sub_1C0FC6624(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0FC6680(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0FC66D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0FC670C()
{
  if (!qword_1EA1A9D80)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A9D80);
    }
  }
}

uint64_t sub_1C0FC6774()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 144)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 120);
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0FC6824(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0FC6878()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 152) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 296) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0FC6984()
{
  if (!qword_1EA1A9D90)
  {
    sub_1C0FC72A4(255, &qword_1EA1A9D98, (uint64_t (*)(void))sub_1C0FC657C, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9D90);
    }
  }
}

void sub_1C0FC6A14(uint64_t a1)
{
  sub_1C0FC461C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0FC6A1C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0FC6BDC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0FC6A60(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C0FC6C60(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0FC6AE0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1C0FC6C60(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0FC6B50(uint64_t a1)
{
  return sub_1C10A0854(a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(double *)(v1 + 24));
}

void sub_1C0FC6B60()
{
  if (!qword_1EA19AA58)
  {
    sub_1C03A7E04();
    sub_1C03A7E58();
    unint64_t v0 = sub_1C1517C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19AA58);
    }
  }
}

void sub_1C0FC6BDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for H6_V1.Layout;
    v8[1] = &type metadata for H6_V1.Layout.Attributes;
    void v8[2] = sub_1C0FC657C();
    v8[3] = sub_1C0FC65D0();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0FC6C60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_1C0FC6CAC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  if (result)
  {
    id v18 = result;
    swift_bridgeObjectRetain();
    id v19 = a8;
    sub_1C0188054(a10, a11, a12, a13, a14);
    return (void *)sub_1BFF7FF04(a16, a17);
  }
  return result;
}

uint64_t sub_1C0FC6D4C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

ValueMetadata *type metadata accessor for H6_V1.Layout.Attributes()
{
  return &type metadata for H6_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for H6_V1.Layout()
{
  return &type metadata for H6_V1.Layout;
}

unint64_t sub_1C0FC6DDC()
{
  unint64_t result = qword_1EA1A9DC8;
  if (!qword_1EA1A9DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9DC8);
  }
  return result;
}

unint64_t sub_1C0FC6E34()
{
  unint64_t result = qword_1EA1A9DD0;
  if (!qword_1EA1A9DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9DD0);
  }
  return result;
}

unint64_t sub_1C0FC6E8C()
{
  unint64_t result = qword_1EA1A9DD8;
  if (!qword_1EA1A9DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9DD8);
  }
  return result;
}

unint64_t sub_1C0FC6EE4()
{
  unint64_t result = qword_1EA1A9DE0;
  if (!qword_1EA1A9DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9DE0);
  }
  return result;
}

unint64_t sub_1C0FC6F38()
{
  unint64_t result = qword_1EA1A9DF0;
  if (!qword_1EA1A9DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9DF0);
  }
  return result;
}

uint64_t sub_1C0FC6F8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v18 = a2;
  sub_1C0FC72A4(0, &qword_1EA1A9DF8, (uint64_t (*)(void))sub_1C0FC7250, (uint64_t)&type metadata for H6_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FC7250();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0FC6510(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1C0FC6C60(0, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FBB320]);
  char v23 = 1;
  sub_1C0FC730C(&qword_1EA1A9E08, (void (*)(void))sub_1C0985E0C);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  long long v10[2] = v13;
  void v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0FC7250()
{
  unint64_t result = qword_1EA1A9E00;
  if (!qword_1EA1A9E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E00);
  }
  return result;
}

void sub_1C0FC72A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0FC730C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0FC6C60(255, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for H6_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FC7468);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for H6_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for H6_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0FC74A4()
{
  unint64_t result = qword_1EA1A9E20;
  if (!qword_1EA1A9E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E20);
  }
  return result;
}

unint64_t sub_1C0FC74FC()
{
  unint64_t result = qword_1EA1A9E28;
  if (!qword_1EA1A9E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E28);
  }
  return result;
}

unint64_t sub_1C0FC7554()
{
  unint64_t result = qword_1EA1A9E30;
  if (!qword_1EA1A9E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E30);
  }
  return result;
}

uint64_t sub_1C0FC75A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsDataConfigurationServiceError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0FC773CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfigurationServiceError()
{
  return &type metadata for SportsDataConfigurationServiceError;
}

unint64_t sub_1C0FC7778()
{
  unint64_t result = qword_1EA1A9E38;
  if (!qword_1EA1A9E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E38);
  }
  return result;
}

uint64_t sub_1C0FC77D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindingFloatExpressionLogic.init(from:)(a1, a2);
}

uint64_t sub_1C0FC77EC(void *a1)
{
  return FormatBindingFloatExpressionLogic.encode(to:)(a1);
}

void FormatBindingFloatExpressionLogicCompare.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatBindingFloatExpressionLogicCompare.value.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1C0FC7824@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingFloatExpressionLogicCompare.init(from:)(a1, a2);
}

uint64_t sub_1C0FC783C(void *a1)
{
  return FormatBindingFloatExpressionLogicCompare.encode(to:)(a1);
}

uint64_t _s8NewsFeed40FormatBindingFloatExpressionLogicCompareV2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *a2;
  unint64_t v4 = *((void *)a2 + 1);
  LOBYTE(v14) = *(unsigned char *)a1;
  LOBYTE(v13) = v3;
  unint64_t v5 = FormatOperator.rawValue.getter();
  uint64_t v7 = v6;
  if (v5 == FormatOperator.rawValue.getter() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
  }
  unint64_t v13 = v4;
  uint64_t v14 = v2;
  char v11 = static FormatFloat.== infix(_:_:)(&v14, &v13);
  return v11 & 1;
}

uint64_t _s8NewsFeed33FormatBindingFloatExpressionLogicO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  int v6 = *a1;
  if (v6 == 12)
  {
    if (*a2 != 12) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v6 != 13)
    {
      if ((v5 & 0xFE) != 0xC)
      {
        v11[0] = *a1;
        uint64_t v12 = v2;
        v9[0] = v5;
        uint64_t v10 = v4;
        sub_1C05D8AD4(v5);
        sub_1C05D8AD4(v3);
        sub_1C05D8AD4(v3);
        sub_1C05D8AD4(v5);
        char v7 = _s8NewsFeed40FormatBindingFloatExpressionLogicCompareV2eeoiySbAC_ACtFZ_0((uint64_t)v11, v9);
        sub_1C05D8C14(v3);
        sub_1C05D8C14(v5);
        sub_1C05D8C14(v5);
        sub_1C05D8C14(v3);
        return v7 & 1;
      }
      goto LABEL_8;
    }
    if (*a2 != 13)
    {
LABEL_8:
      sub_1C05D8AD4(*a1);
      sub_1C05D8AD4(v5);
      sub_1C05D8C14(v3);
      sub_1C05D8C14(v5);
      char v7 = 0;
      return v7 & 1;
    }
  }
  sub_1C05D8C14(*a1);
  sub_1C05D8C14(v5);
  char v7 = 1;
  return v7 & 1;
}

unint64_t sub_1C0FC7A7C(uint64_t a1)
{
  unint64_t result = sub_1C0FC7AA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FC7AA4()
{
  unint64_t result = qword_1EA1A9E40;
  if (!qword_1EA1A9E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E40);
  }
  return result;
}

uint64_t sub_1C0FC7AF8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0FC7C48(a1, a2, a3, (uint64_t (*)(void))sub_1C01FC730, (uint64_t (*)(void))sub_1C01FC788, (uint64_t (*)(void))sub_1C0FC7B38);
}

unint64_t sub_1C0FC7B38()
{
  unint64_t result = qword_1EA1A9E48;
  if (!qword_1EA1A9E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E48);
  }
  return result;
}

unint64_t sub_1C0FC7B8C(uint64_t a1)
{
  unint64_t result = sub_1C0FC7BB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0FC7BB4()
{
  unint64_t result = qword_1EA1A9E50;
  if (!qword_1EA1A9E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E50);
  }
  return result;
}

uint64_t sub_1C0FC7C08(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0FC7C48(a1, a2, a3, (uint64_t (*)(void))sub_1C08764A0, (uint64_t (*)(void))sub_1C08FF640, (uint64_t (*)(void))sub_1C0FC7C9C);
}

uint64_t sub_1C0FC7C48(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FC7C9C()
{
  unint64_t result = qword_1EA1A9E58;
  if (!qword_1EA1A9E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E58);
  }
  return result;
}

unsigned __int8 *destroy for FormatBindingFloatExpressionLogic(unsigned __int8 *result)
{
  if (*result <= 0xBu) {
    return (unsigned __int8 *)swift_release();
  }
  return result;
}

uint64_t _s8NewsFeed33FormatBindingFloatExpressionLogicOwCP_0(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v3 = *a2;
  if (v3 > 0xB)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(unsigned char *)a1 = v3;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    swift_retain();
  }
  return a1;
}

unsigned __int8 *assignWithCopy for FormatBindingFloatExpressionLogic(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4 = *a2;
  if (*a1 > 0xBu)
  {
    if (v4 <= 0xB)
    {
      *a1 = v4;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 > 0xB)
  {
    swift_release();
    goto LABEL_7;
  }
  *a1 = v4;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_retain();
  swift_release();
  return a1;
}

unsigned __int8 *assignWithTake for FormatBindingFloatExpressionLogic(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 > 0xBu) {
    goto LABEL_5;
  }
  unsigned int v4 = *a2;
  if (v4 > 0xB)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = v4;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingFloatExpressionLogic()
{
  return &type metadata for FormatBindingFloatExpressionLogic;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatBindingFloatExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for FormatBindingFloatExpressionLogicCompare()
{
  return swift_release();
}

uint64_t assignWithCopy for FormatBindingFloatExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatBindingFloatExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingFloatExpressionLogicCompare()
{
  return &type metadata for FormatBindingFloatExpressionLogicCompare;
}

uint64_t FCSportsEventController.fetchSportsEvents(for:cachePolicy:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1C0FC992C(0, &qword_1EB8614E0, (uint64_t (*)(uint64_t))sub_1C0FC98F8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    sub_1C0FC992C(0, &qword_1EB8614E0, (uint64_t (*)(uint64_t))sub_1C0FC98F8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
}

void sub_1C0FC808C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_retain();
  sub_1BFD430AC(a6);
  uint64_t v15 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)swift_allocObject();
  long long v16[2] = a3;
  v16[3] = a4;
  long long v16[4] = a6;
  v16[5] = sub_1C03CD68C;
  v16[6] = v14;
  v18[4] = sub_1C0FC9FE4;
  v18[5] = v16;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_1C0FC8394;
  v18[3] = &block_descriptor_32_0;
  uint64_t v17 = _Block_copy(v18);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a5, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v15, a7, 25, v17);
  _Block_release(v17);
}

void sub_1C0FC820C(uint64_t a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  if (a2)
  {
    id v8 = a2;
    a3(a2);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C0FC9DB8(a5, a1);
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v14 = *(void *)(v12 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v14; ++i)
      {
        if (*(void *)(v12 + 8 * i + 32))
        {
          uint64_t v16 = swift_unknownObjectRetain();
          MEMORY[0x1C18C66D0](v16);
          if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = v17;
    }
    swift_bridgeObjectRelease();
    a6(v13);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0FC8394(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C0059580();
    uint64_t v4 = sub_1C151E33C();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t FCSportsEventController.fetchSportsEventsMap(for:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1C0FC992C(0, &qword_1EB863EA8, (uint64_t (*)(uint64_t))sub_1C0FC9998, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    sub_1C018F998(MEMORY[0x1E4FBC860]);
    sub_1C0FC992C(0, &qword_1EB863EA8, (uint64_t (*)(uint64_t))sub_1C0FC9998, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
}

void sub_1C0FC8560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_retain();
  sub_1BFD430AC(a6);
  uint64_t v13 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_defaultCachePolicy);
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a3;
  v15[3] = a4;
  v15[4] = sub_1BFD35658;
  v15[5] = v12;
  __n128 v17[4] = sub_1C0FC9F90;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1C0FC8394;
  double v17[3] = &block_descriptor_23_1;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v13, v14, 25, v16);
  _Block_release(v16);
}

void sub_1C0FC86F8(unint64_t a1, id a2, void (*a3)(id), uint64_t a4, void (*a5)(unint64_t))
{
  if (a2)
  {
    id v7 = a2;
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
    swift_getErrorValue();
    uint64_t v10 = sub_1C1520D3C();
    uint64_t v12 = v11;
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1BFE9C558();
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v12;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    a3(a2);
  }
  else
  {
    if (a1) {
      unint64_t v14 = a1;
    }
    else {
      unint64_t v14 = sub_1C018F998(MEMORY[0x1E4FBC860]);
    }
    swift_bridgeObjectRetain();
    a5(v14);
    swift_bridgeObjectRelease();
  }
}

uint64_t FCSportsEventController.fetchSportsEvent(for:)(uint64_t a1, uint64_t a2)
{
  sub_1BFEF9A78();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  uint64_t v5 = self;
  swift_bridgeObjectRetain();
  id v9 = objc_msgSend(v5, sel_defaultCachePolicy);
  sub_1C0FC992C(0, &qword_1EB8614E0, (uint64_t (*)(uint64_t))sub_1C0FC98F8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1C151911C();
  swift_bridgeObjectRelease();

  id v6 = (void *)sub_1C1518E7C();
  sub_1C0059580();
  uint64_t v7 = sub_1C1518FEC();
  swift_release();

  return v7;
}

uint64_t FCSportsEventController.fetchSportsEvents(for:)(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_defaultCachePolicy);
  unsigned int v3 = v2;
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](v2);
    sub_1C0FC992C(0, &qword_1EB8614E0, (uint64_t (*)(uint64_t))sub_1C0FC98F8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v4 = sub_1C151911C();
  }
  else
  {
    sub_1C0FC992C(0, &qword_1EB8614E0, (uint64_t (*)(uint64_t))sub_1C0FC98F8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v4 = sub_1C151908C();
  }

  return v4;
}

uint64_t sub_1C0FC8B74(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1C0FC9EC4();
    swift_allocError();
    return swift_willThrow();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C18C7CB0](0, v1);
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1C0FC992C(0, &qword_1EA1A9E88, (uint64_t (*)(uint64_t))sub_1C0059580, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0FC8CA8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1C0FC992C(0, &qword_1EB8614E0, (uint64_t (*)(uint64_t))sub_1C0FC98F8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    sub_1C0FC992C(0, &qword_1EB8614E0, (uint64_t (*)(uint64_t))sub_1C0FC98F8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
}

uint64_t sub_1C0FC8DD4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1C0FC992C(0, &qword_1EB863EA8, (uint64_t (*)(uint64_t))sub_1C0FC9998, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    sub_1C018F998(MEMORY[0x1E4FBC860]);
    sub_1C0FC992C(0, &qword_1EB863EA8, (uint64_t (*)(uint64_t))sub_1C0FC9998, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
}

uint64_t sub_1C0FC8F00(uint64_t a1, uint64_t a2)
{
  return FCSportsEventController.fetchSportsEvent(for:)(a1, a2);
}

uint64_t sub_1C0FC8F24(uint64_t a1)
{
  return FCSportsEventController.fetchSportsEvents(for:)(a1);
}

uint64_t FCSportsEventController.fetchSportsEventsAsync(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C0FC8F6C, 0, 0);
}

uint64_t sub_1C0FC8F6C()
{
  uint64_t v1 = v0[3];
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = v0[4];
    uint64_t v2 = v0[5];
    uint64_t v4 = (void *)swift_task_alloc();
    v0[6] = v4;
    v4[2] = v2;
    v4[3] = v1;
    v4[4] = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[7] = v5;
    sub_1C0FC98F8(0);
    *uint64_t v5 = v0;
    v5[1] = sub_1C0239A90;
    return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000028, 0x80000001C1631660, sub_1C0FC9A00, v4, v6);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v8 = MEMORY[0x1E4FBC860];
    return v7(v8);
  }
}

void sub_1C0FC90C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1C0FC9BAC(0, &qword_1EA1A9E80, sub_1C0FC98F8);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)aBlock - v12;
  sub_1BFD430AC(a3);
  unint64_t v14 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v13, v9);
  *(void *)(v16 + ((v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_1C0FC9CF0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0FC8394;
  void aBlock[3] = &block_descriptor_14_3;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a2, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v14, a4, 25, v17);
  _Block_release(v17);
}

uint64_t sub_1C0FC92EC(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    id v4 = a2;
    sub_1C0FC9BAC(0, &qword_1EA1A9E80, sub_1C0FC98F8);
    return sub_1C151EDCC();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C0FC9DB8(a4, a1);
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)(v8 + 8 * i + 32))
        {
          uint64_t v11 = swift_unknownObjectRetain();
          MEMORY[0x1C18C66D0](v11);
          if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1C0FC9BAC(0, &qword_1EA1A9E80, sub_1C0FC98F8);
    return sub_1C151EDDC();
  }
}

uint64_t FCSportsEventController.fetchSportsEventsMapAsync(for:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1C0FC94A0, 0, 0);
}

uint64_t sub_1C0FC94A0()
{
  uint64_t v1 = v0[3];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[4];
    uint64_t v3 = swift_task_alloc();
    v0[5] = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    id v4 = (void *)swift_task_alloc();
    v0[6] = v4;
    sub_1C0FC9998();
    *id v4 = v0;
    v4[1] = sub_1C0243888;
    return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD00000000000001FLL, 0x80000001C1631690, sub_1C0FC9A0C, v3, v5);
  }
  else
  {
    unint64_t v6 = sub_1C018F998(MEMORY[0x1E4FBC860]);
    uint64_t v7 = (uint64_t (*)(unint64_t))v0[1];
    return v7(v6);
  }
}

void sub_1C0FC95F0(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C0FC9BAC(0, (unint64_t *)&unk_1EA1A9E70, (void (*)(uint64_t))sub_1C0FC9998);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)aBlock - v9;
  sub_1BFD430AC(a3);
  uint64_t v11 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(self, sel_defaultCachePolicy);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, v10, v7);
  aBlock[4] = sub_1C0FC9B10;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0FC8394;
  void aBlock[3] = &block_descriptor_76;
  unint64_t v15 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v11, v12, 25, v15);
  _Block_release(v15);
}

uint64_t sub_1C0FC981C(uint64_t a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    sub_1C0FC9BAC(0, (unint64_t *)&unk_1EA1A9E70, (void (*)(uint64_t))sub_1C0FC9998);
    return sub_1C151EDCC();
  }
  else
  {
    if (!a1) {
      sub_1C018F998(MEMORY[0x1E4FBC860]);
    }
    sub_1C0FC9BAC(0, (unint64_t *)&unk_1EA1A9E70, (void (*)(uint64_t))sub_1C0FC9998);
    swift_bridgeObjectRetain();
    return sub_1C151EDDC();
  }
}

void sub_1C0FC98EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0FC808C(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

void sub_1C0FC98F8(uint64_t a1)
{
}

void sub_1C0FC992C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0FC9990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0FC8560(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1C0FC9998()
{
  if (!qword_1EB86AF00)
  {
    sub_1C0059580();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86AF00);
    }
  }
}

void sub_1C0FC9A00(uint64_t a1)
{
  sub_1C0FC90C8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1C0FC9A0C(uint64_t a1)
{
  sub_1C0FC95F0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEvents(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEventsMap(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEvent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEvents(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1C0FC9A64()
{
  sub_1C0FC9BAC(0, (unint64_t *)&unk_1EA1A9E70, (void (*)(uint64_t))sub_1C0FC9998);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C0FC9B10(uint64_t a1, void *a2)
{
  sub_1C0FC9BAC(0, (unint64_t *)&unk_1EA1A9E70, (void (*)(uint64_t))sub_1C0FC9998);
  return sub_1C0FC981C(a1, a2);
}

void sub_1C0FC9BAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    unint64_t v4 = sub_1C151EDEC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0FC9C30()
{
  sub_1C0FC9BAC(0, &qword_1EA1A9E80, sub_1C0FC98F8);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0FC9CF0(uint64_t a1, void *a2)
{
  sub_1C0FC9BAC(0, &qword_1EA1A9E80, sub_1C0FC98F8);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C0FC92EC(a1, a2, v2 + v7, v8);
}

uint64_t sub_1C0FC9DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (a2 && *(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_1BFEF2D8C(v7, v8);
        if (v9) {
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease_n();
      }
      v6 += 2;
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      --v3;
    }
    while (v3);
    return v10;
  }
  return result;
}

unint64_t sub_1C0FC9EC4()
{
  unint64_t result = qword_1EA1A9E90;
  if (!qword_1EA1A9E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9E90);
  }
  return result;
}

uint64_t sub_1C0FC9F18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0FC9F50()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0FC9F90(unint64_t a1, void *a2)
{
  sub_1C0FC86F8(a1, a2, *(void (**)(id))(v2 + 16), *(void *)(v2 + 24), *(void (**)(unint64_t))(v2 + 32));
}

uint64_t sub_1C0FC9F9C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0FC9FE4(uint64_t a1, void *a2)
{
  sub_1C0FC820C(a1, a2, *(void (**)(id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(uint64_t))(v2 + 40));
}

unsigned char *_s6ErrorsOwst_1(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0FCA090);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s6ErrorsOMa_2()
{
  return &_s6ErrorsON_1;
}

unint64_t sub_1C0FCA0CC()
{
  unint64_t result = qword_1EA1A9EA0;
  if (!qword_1EA1A9EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9EA0);
  }
  return result;
}

uint64_t static FormatProcessedColor.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  unint64_t v6 = *a2;
  uint64_t v7 = v2;
  if ((static FormatColor.== infix(_:_:)(&v7, &v6) & 1) == 0) {
    return 0;
  }
  return sub_1C00E5A8C(v3, v4);
}

unint64_t sub_1C0FCA1B0(uint64_t a1)
{
  unint64_t result = sub_1C087AF20();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0FCA1D8(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  unint64_t v6 = *a2;
  uint64_t v7 = v2;
  if ((static FormatColor.== infix(_:_:)(&v7, &v6) & 1) == 0) {
    return 0;
  }
  return sub_1C00E5A8C(v3, v4);
}

unint64_t sub_1C0FCA244(void *a1)
{
  a1[1] = sub_1BFEB6C1C();
  a1[2] = sub_1BFE63DA8();
  unint64_t result = sub_1C0FCA27C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FCA27C()
{
  unint64_t result = qword_1EA1A9EB0;
  if (!qword_1EA1A9EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9EB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProcessedColor()
{
  return &type metadata for FormatProcessedColor;
}

NewsFeed::FormatContentSubgroupSection __swiftcall FormatContentSubgroupSection.init(identifier:contents:)(Swift::String identifier, Swift::OpaquePointer contents)
{
  *(Swift::String *)uint64_t v2 = identifier;
  *(Swift::OpaquePointer *)(v2 + 16) = contents;
  result.identifier = identifier;
  result.contents = contents;
  return result;
}

uint64_t FormatContentSubgroupSection.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroupSection.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatContentSubgroupSection.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C00DF0D4(v2, v3);
}

uint64_t sub_1C0FCA398(uint64_t a1)
{
  unint64_t v2 = sub_1C0FCA5EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0FCA3D4(uint64_t a1)
{
  unint64_t v2 = sub_1C0FCA5EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupSection.encode(to:)(void *a1)
{
  sub_1C0FCA8FC(0, &qword_1EA1A9EB8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - v6;
  v13[0] = *(void *)(v1 + 16);
  uint64_t v8 = a1[3];
  char v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1C0FCA5EC();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    v13[1] = v13[0];
    char v14 = 1;
    sub_1C0FCA640();
    sub_1C0FCA960((unint64_t *)&qword_1EB85DEE8, (void (*)(void))sub_1C0DC595C);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_1C0FCA5EC()
{
  unint64_t result = qword_1EA1A9EC0;
  if (!qword_1EA1A9EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9EC0);
  }
  return result;
}

void sub_1C0FCA640()
{
  if (!qword_1EB879DE0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879DE0);
    }
  }
}

uint64_t FormatContentSubgroupSection.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0FCA8FC(0, &qword_1EA1A9EC8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0FCA5EC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  sub_1C0FCA640();
  char v16 = 1;
  sub_1C0FCA960((unint64_t *)&qword_1EB879DE8, (void (*)(void))sub_1C007D080);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v13 = v15[1];
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0FCA8FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0FCA5EC();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSubgroupSection.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0FCA960(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0FCA640();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0FCA9CC(void *a1)
{
  a1[1] = sub_1C006BEA4();
  a1[2] = sub_1C0DC5A44();
  unint64_t result = sub_1C0FCAA04();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0FCAA04()
{
  unint64_t result = qword_1EA1A9ED0;
  if (!qword_1EA1A9ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9ED0);
  }
  return result;
}

uint64_t sub_1C0FCAA58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupSection.init(from:)(a1, a2);
}

uint64_t sub_1C0FCAA70(void *a1)
{
  return FormatContentSubgroupSection.encode(to:)(a1);
}

uint64_t sub_1C0FCAA88(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C00DF0D4(v2, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupSection()
{
  return &type metadata for FormatContentSubgroupSection;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupSection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0FCABD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupSection.CodingKeys()
{
  return &type metadata for FormatContentSubgroupSection.CodingKeys;
}

unint64_t sub_1C0FCAC14()
{
  unint64_t result = qword_1EA1A9ED8;
  if (!qword_1EA1A9ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9ED8);
  }
  return result;
}

unint64_t sub_1C0FCAC6C()
{
  unint64_t result = qword_1EA1A9EE0;
  if (!qword_1EA1A9EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9EE0);
  }
  return result;
}

unint64_t sub_1C0FCACC4()
{
  unint64_t result = qword_1EA1A9EE8;
  if (!qword_1EA1A9EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9EE8);
  }
  return result;
}

id sub_1C0FCAD18(uint64_t a1)
{
  uint64_t v2 = v1;
  unsigned int v4 = &v1[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame];
  uint64_t v5 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_editor] = a1;
  id v6 = objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerPaneViewController());
  uint64_t v7 = swift_retain_n();
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_debuggerPaneViewController] = sub_1C145BCC0(v7);
  uint64_t v8 = (void *)sub_1C151E5EC();
  id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

  v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  uint64_t v10 = &v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *uint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v13 = v2;
  *(void *)&v2[v11] = objc_msgSend(v12, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = MEMORY[0x1E4FBC860];
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v14;
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v9;
  swift_retain();
  id v15 = v9;

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
  id v16 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  char v17 = (void *)sub_1C151E5EC();
  objc_msgSend(v16, sel_setTitle_, v17);

  swift_release();
  return v16;
}

id sub_1C0FCB068()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    id v3 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    swift_retain();
    swift_retain();
    sub_1C151896C();
    swift_release();
    swift_release();
    sub_1C151891C();
    swift_release();
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    swift_release();
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0FCB244(uint64_t a1, uint64_t a2)
{
  sub_1BFF15CD0(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v17 - v6;
  sub_1C0FCEAB4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FCEA80(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0FCEB48(a2, (uint64_t)v10, (uint64_t (*)(void))sub_1C0FCEAB4);
  uint64_t v14 = type metadata accessor for FormatDebuggerContext();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v10, 1, v14) == 1)
  {
    sub_1C0FCEAE8((uint64_t)v10, (uint64_t (*)(void))sub_1C0FCEAB4);
    uint64_t v15 = type metadata accessor for FormatDebuggerCallStackFrame(0);
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v10[*(int *)(v14 + 24)], v4);
    sub_1C0FCEAE8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
    sub_1C1518E0C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1C0FCB508(a2, v13);
  return sub_1C0FCEAE8((uint64_t)v13, (uint64_t (*)(void))sub_1C0FCEA80);
}

id sub_1C0FCB508(uint64_t a1, void (**a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v322 = a2;
  sub_1C031439C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v292 = (uint64_t)v284 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v299 = (uint64_t)v284 - v6;
  uint64_t v7 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v300 = *(void *)(v7 - 8);
  uint64_t v301 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v293 = (char *)v284 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF15CD0(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
  uint64_t v318 = v9;
  uint64_t v297 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v296 = (char *)v284 - v10;
  uint64_t v320 = type metadata accessor for FormatInspectionFeedGroupItem();
  unint64_t v314 = *(void (***)(uint64_t, void, uint64_t, uint64_t))(v320 - 8);
  MEMORY[0x1F4188790](v320);
  uint64_t v308 = (uint64_t)v284 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v330 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v305 = *(void *)(v330 - 8);
  MEMORY[0x1F4188790](v330);
  uint64_t v329 = (ValueMetadata *)((char *)v284 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v321 = (char *)v284 - v14;
  sub_1C01F0778(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v284 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v317 = (char *)v284 - v19;
  *(void *)&long long v326 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v326);
  unint64_t v325 = (char *)v284 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C028A4E0(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v324 = (uint64_t)v284 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0181BEC(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v327 = v23;
  uint64_t v328 = v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v331 = (uint64_t)v284 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v323 = (uint64_t)v284 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v319 = (uint64_t)v284 - v29;
  sub_1BFF81FF0();
  uint64_t v302 = *(void *)(v30 - 8);
  uint64_t v303 = v30;
  MEMORY[0x1F4188790](v30);
  uint64_t v316 = (char *)v284 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1F4188790](v304);
  unint64_t v298 = (void *)((char *)v284 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v33);
  uint64_t v315 = (void **)((char *)v284 - v34);
  sub_1C0FCEA80(0);
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v291 = (char *)v284 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v306 = (uint64_t)v284 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)v284 - v40;
  uint64_t v42 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v289 = (uint64_t)v284 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v45);
  uint64_t v311 = (void *)((char *)v284 - v46);
  MEMORY[0x1F4188790](v47);
  uint64_t v309 = (uint64_t)v284 - v48;
  sub_1C0FCEAB4(0);
  MEMORY[0x1F4188790](v49 - 8);
  uint64_t v51 = (char *)v284 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for FormatDebuggerContext();
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v55 = (char *)v284 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FCEB48(a1, (uint64_t)v51, (uint64_t (*)(void))sub_1C0FCEAB4);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  uint64_t v295 = v52;
  if (v56(v51, 1, v52) == 1)
  {
    uint64_t v57 = sub_1C0FCEAB4;
    uint64_t v58 = (uint64_t)v51;
LABEL_5:
    sub_1C0FCEAE8(v58, (uint64_t (*)(void))v57);
    uint64_t v60 = v310;
    *(void *)(v310 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    sub_1C0CF0E84();
    uint64_t v61 = v306;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v306, 1, 1, v42);
    uint64_t v62 = v60 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame;
    swift_beginAccess();
    sub_1C0FCEBB0(v61, v62);
    swift_endAccess();
    return sub_1C145BA0C();
  }
  sub_1C0FCEC14((uint64_t)v51, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
  sub_1C0FCEB48((uint64_t)v322, (uint64_t)v41, (uint64_t (*)(void))sub_1C0FCEA80);
  uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  if (v59(v41, 1, v42) == 1)
  {
    sub_1C0FCEAE8((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
    uint64_t v57 = sub_1C0FCEA80;
    uint64_t v58 = (uint64_t)v41;
    goto LABEL_5;
  }
  uint64_t v286 = v43;
  v284[0] = v59;
  v284[1] = v43 + 48;
  unint64_t v290 = v55;
  uint64_t v64 = v309;
  sub_1C0FCEC14((uint64_t)v41, v309, type metadata accessor for FormatDebuggerCallStackFrame);
  uint64_t v287 = v42;
  uint64_t v65 = v64 + *(int *)(v42 + 24);
  uint64_t v288 = *(void *)(sub_1C0B2A190() + 40);
  swift_retain();
  swift_release();
  uint64_t v294 = v65;
  uint64_t v66 = sub_1C0B2A190();
  uint64_t v67 = *(void *)(*(void *)(v66 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v67 + 16) + 16))
  {
    *(void *)&long long v339 = *(void *)(v66 + 56);
    uint64_t v68 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_1BFEF3B08(v68);
    sub_1BFEF3808(v69);
    swift_release();
    uint64_t v285 = v339;
  }
  else
  {
    uint64_t v285 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v70 = (uint64_t)v317;
  uint64_t v71 = (_OWORD *)*((void *)v290 + 4);
  uint64_t v72 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v73 = &type metadata for FormatInspectionGroup;
  uint64_t v74 = &off_1F1BDEC90;
  if ((unint64_t)v71 < 4) {
    goto LABEL_12;
  }
  sub_1BFF15CD0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  unint64_t v75 = (*(unsigned __int8 *)(v328 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v328 + 80);
  uint64_t v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = xmmword_1C1529AE0;
  sub_1C0FCF834(v71);
  uint64_t v77 = v71;
  sub_1C0441478(0x726F727245, 0xE500000000000000, v71, (uint64_t *)(v76 + v75));
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v305 + 56))(v76 + v75, 0, 1, v330);
  sub_1C09BCFA4(0x726F727245, 0xE500000000000000, 0, 0, v76, v349);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *((void *)&v340 + 1) = &type metadata for FormatInspectionGroup;
  uint64_t v341 = &off_1F1BDEC90;
  uint64_t v78 = swift_allocObject();
  *(void *)&long long v339 = v78;
  long long v79 = v349[1];
  *(_OWORD *)(v78 + 16) = v349[0];
  *(_OWORD *)(v78 + 32) = v79;
  *(void *)(v78 + 48) = v350;
  uint64_t v72 = sub_1C0EE30E0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v81 = v72[2];
  unint64_t v80 = v72[3];
  uint64_t v82 = (_OWORD *)(v81 + 1);
  if (v81 >= v80 >> 1) {
    goto LABEL_106;
  }
  while (1)
  {
    _OWORD v72[2] = v82;
    sub_1C0FCEC14((uint64_t)&v339, (uint64_t)&v72[5 * v81 + 4], (uint64_t (*)(void))sub_1C01004A4);
    sub_1C0FCF824(v71);
    uint64_t v70 = (uint64_t)v317;
LABEL_12:
    uint64_t v307 = v72;
    __n128 v83 = v315;
    sub_1C0FCEB48(v294, (uint64_t)v315, type metadata accessor for FormatDebuggerCallStackFrameContext);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v313 = *v83;
      sub_1C065C470();
      (*(void (**)(void))(v302 + 32))();
      sub_1BFF15CD0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      uint64_t v84 = *(void *)(v328 + 72);
      unint64_t v85 = (*(unsigned __int8 *)(v328 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v328 + 80);
      uint64_t v86 = (char *)swift_allocObject();
      uint64_t v315 = (void **)v86;
      *((_OWORD *)v86 + 1) = xmmword_1C152A660;
      uint64_t v87 = &v86[v85];
      uint64_t v88 = sub_1C1517C7C();
      uint64_t v89 = v330;
      unint64_t v90 = (uint64_t *)&v87[*(int *)(v330 + 24)];
      *unint64_t v90 = v88;
      uint64_t v91 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 0, 1, v91);
      *(_OWORD *)uint64_t v87 = xmmword_1C157D0F0;
      *((void *)v87 + 2) = 0;
      *((void *)v87 + 3) = 0;
      uint64_t v92 = v89;
      uint64_t v93 = &v87[*(int *)(v89 + 28)];
      *(void *)uint64_t v93 = 0;
      *((void *)v93 + 1) = 0;
      v93[16] = -1;
      unsigned int v94 = *(void (**)(char *, void, uint64_t, uint64_t))(v305 + 56);
      uint64_t v322 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v305 + 56);
      v94(v87, 0, 1, v92);
      *(void *)&long long v312 = v94;
      sub_1C1517C7C();
      sub_1C1517B6C();
      uint64_t v96 = v95;
      uint64_t v98 = v97;
      swift_release();
      sub_1C0438BB8(0x6E6F697469736F50, 0xE800000000000000, v96, v98, 0, &v87[v84]);
      v94(&v87[v84], 0, 1, v92);
      sub_1C1517C7C();
      sub_1C1517AEC();
      swift_release();
      uint64_t v99 = sub_1C0C63964();
      sub_1C0433600(0x412064656C6C6946, 0xEB00000000616572, v99, v100, &v87[2 * v84]);
      uint64_t v101 = (void (*)(char *, void, uint64_t, uint64_t))v312;
      ((void (*)(char *, void, uint64_t, uint64_t))v312)(&v87[2 * v84], 0, 1, v92);
      sub_1C1517C7C();
      sub_1C1517B2C();
      swift_release();
      uint64_t v102 = sub_1C132DF38();
      sub_1C0433600(0xD000000000000010, 0x80000001C16317D0, v102, v103, &v87[3 * v84]);
      uint64_t v104 = &v87[3 * v84];
      uint64_t v74 = &off_1F1BDEC90;
      uint64_t v73 = &type metadata for FormatInspectionGroup;
      v101(v104, 0, 1, v330);
      sub_1C09BCFA4(0x74756F79614CLL, 0xE600000000000000, 0, 0, (uint64_t)v315, v351);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *((void *)&v340 + 1) = &type metadata for FormatInspectionGroup;
      uint64_t v341 = &off_1F1BDEC90;
      uint64_t v105 = swift_allocObject();
      *(void *)&long long v339 = v105;
      long long v106 = v351[1];
      *(_OWORD *)(v105 + 16) = v351[0];
      *(_OWORD *)(v105 + 32) = v106;
      *(void *)(v105 + 48) = v352;
      long long v107 = v307;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v107 = sub_1C0EE30E0(0, v107[2] + 1, 1, v107);
      }
      unint64_t v109 = v107[2];
      unint64_t v108 = v107[3];
      if (v109 >= v108 >> 1) {
        long long v107 = sub_1C0EE30E0((void *)(v108 > 1), v109 + 1, 1, v107);
      }
      v107[2] = v109 + 1;
      uint64_t v307 = v107;
      sub_1C0FCEC14((uint64_t)&v339, (uint64_t)&v107[5 * v109 + 4], (uint64_t (*)(void))sub_1C01004A4);
      swift_release();
      (*(void (**)(char *, uint64_t))(v302 + 8))(v316, v303);
      uint64_t v70 = (uint64_t)v317;
    }
    else
    {
      swift_release();
    }
    sub_1C0B2A2C0();
    uint64_t v111 = v110;
    swift_bridgeObjectRetain();
    sub_1C00B1E24(v111);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    uint64_t v112 = sub_1C151EC4C();
    swift_release();
    uint64_t v113 = *(void *)(v112 + 16);
    if (v113)
    {
      uint64_t v114 = v112 + 32;
      uint64_t v315 = (void **)(v314 + 6);
      uint64_t v316 = (char *)(v314 + 7);
      uint64_t v313 = v321 + 16;
      unint64_t v314 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v305 + 56);
      uint64_t v322 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56);
      unsigned int v115 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v328 + 48);
      v284[2] = v112;
      swift_bridgeObjectRetain();
      uint64_t v116 = MEMORY[0x1E4FBC860];
      long long v312 = xmmword_1C157D0F0;
      do
      {
        sub_1BFC66384(v114, (uint64_t)&v339);
        uint64_t v117 = *((void *)&v340 + 1);
        uint64_t v118 = v341;
        __swift_project_boxed_opaque_existential_1(&v339, *((uint64_t *)&v340 + 1));
        uint64_t v119 = v117;
        uint64_t v120 = (uint64_t)v325;
        ((void (*)(uint64_t, char **))v118[1])(v119, v118);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v121 = 1;
          uint64_t v122 = v324;
        }
        else
        {
          sub_1C0FCEAE8(v120, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
          uint64_t v123 = *((void *)&v340 + 1);
          uint64_t v124 = v341;
          __swift_project_boxed_opaque_existential_1(&v339, *((uint64_t *)&v340 + 1));
          ((void (*)(uint64_t, char **))v124[1])(v123, v124);
          uint64_t v125 = v320;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v316)(v70, 0, 1, v320);
          sub_1C0FCEB48(v70, (uint64_t)v17, (uint64_t (*)(void))sub_1C01F0778);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))*v315)(v17, 1, v125) == 1)
          {
            sub_1C0FCEAE8(v70, (uint64_t (*)(void))sub_1C01F0778);
            uint64_t v126 = v330;
            uint64_t v127 = (long long *)v321;
            uint64_t v128 = &v321[*(int *)(v330 + 24)];
            uint64_t v129 = type metadata accessor for FormatInspectionItem.Value(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v128, 1, 1, v129);
            uint64_t v130 = (uint64_t)v127;
            *uint64_t v127 = v312;
            uint64_t v131 = v313;
            *uint64_t v313 = 0;
            v131[1] = 0;
            char v132 = (char *)v127 + *(int *)(v126 + 28);
            *(void *)char v132 = 0;
            *((void *)v132 + 1) = 0;
            v132[16] = -1;
          }
          else
          {
            uint64_t v133 = v308;
            sub_1C0FCEB48((uint64_t)v17, v308, (uint64_t (*)(void))type metadata accessor for FormatInspectionFeedGroupItem);
            sub_1C0FCEAE8(v70, (uint64_t (*)(void))sub_1C01F0778);
            uint64_t v126 = v330;
            uint64_t v134 = (uint64_t)v17;
            uint64_t v135 = (long long *)v321;
            uint64_t v136 = (uint64_t)&v321[*(int *)(v330 + 24)];
            sub_1C0FCEC14(v133, v136, (uint64_t (*)(void))type metadata accessor for FormatInspectionFeedGroupItem);
            uint64_t v137 = type metadata accessor for FormatInspectionItem.Value(0);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v136, 0, 1, v137);
            *uint64_t v135 = v312;
            uint64_t v138 = v313;
            *uint64_t v313 = 0;
            v138[1] = 0;
            char v139 = (char *)v135 + *(int *)(v126 + 28);
            *(void *)char v139 = 0;
            *((void *)v139 + 1) = 0;
            v139[16] = -1;
            sub_1C0FCEAE8(v134, (uint64_t (*)(void))type metadata accessor for FormatInspectionFeedGroupItem);
            uint64_t v130 = (uint64_t)v135;
            uint64_t v17 = (char *)v134;
            uint64_t v70 = (uint64_t)v317;
          }
          uint64_t v122 = v324;
          sub_1C0FCEC14(v130, v324, type metadata accessor for FormatInspectionItem);
          (*v314)(v122, 0, 1, v126);
          uint64_t v121 = 0;
        }
        uint64_t v140 = v327;
        (*v322)(v122, v121, 1, v327);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v339);
        if ((*v115)(v122, 1, v140) == 1)
        {
          sub_1C0FCEAE8(v122, (uint64_t (*)(void))sub_1C028A4E0);
        }
        else
        {
          uint64_t v141 = v122;
          uint64_t v142 = v319;
          sub_1C0FCEC14(v141, v319, (uint64_t (*)(void))sub_1C0181BEC);
          sub_1C0FCEC14(v142, v323, (uint64_t (*)(void))sub_1C0181BEC);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v116 = sub_1C0EDFFC4(0, *(void *)(v116 + 16) + 1, 1, v116);
          }
          unint64_t v144 = *(void *)(v116 + 16);
          unint64_t v143 = *(void *)(v116 + 24);
          if (v144 >= v143 >> 1) {
            uint64_t v116 = sub_1C0EDFFC4(v143 > 1, v144 + 1, 1, v116);
          }
          *(void *)(v116 + 16) = v144 + 1;
          sub_1C0FCEC14(v323, v116+ ((*(unsigned __int8 *)(v328 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v328 + 80))+ *(void *)(v328 + 72) * v144, (uint64_t (*)(void))sub_1C0181BEC);
        }
        v114 += 40;
        --v113;
      }
      while (v113);
      swift_bridgeObjectRelease_n();
      uint64_t v73 = &type metadata for FormatInspectionGroup;
      uint64_t v74 = &off_1F1BDEC90;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v116 = MEMORY[0x1E4FBC860];
    }
    sub_1C09BCFA4(0x69422070756F7247, 0xEE0073676E69646ELL, 0, 0, v116, v353);
    swift_bridgeObjectRelease();
    *((void *)&v340 + 1) = v73;
    uint64_t v341 = v74;
    uint64_t v145 = swift_allocObject();
    *(void *)&long long v339 = v145;
    long long v146 = v353[1];
    *(_OWORD *)(v145 + 16) = v353[0];
    *(_OWORD *)(v145 + 32) = v146;
    *(void *)(v145 + 48) = v354;
    uint64_t v72 = v307;
    uint64_t v82 = v351;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v72 = sub_1C0EE30E0(0, v72[2] + 1, 1, v72);
    }
    uint64_t v73 = v329;
    uint64_t v147 = v330;
    unint64_t v149 = v72[2];
    unint64_t v148 = v72[3];
    if (v149 >= v148 >> 1) {
      uint64_t v72 = sub_1C0EE30E0((void *)(v148 > 1), v149 + 1, 1, v72);
    }
    _OWORD v72[2] = v149 + 1;
    sub_1C0FCEC14((uint64_t)&v339, (uint64_t)&v72[5 * v149 + 4], (uint64_t (*)(void))sub_1C01004A4);
    uint64_t v151 = sub_1C0B2A2C0();
    unint64_t v81 = (unint64_t)v150;
    uint64_t v74 = *(char ***)(v151 + 16);
    if (!v74)
    {
      swift_bridgeObjectRelease();
      uint64_t v167 = MEMORY[0x1E4FBC860];
      goto LABEL_54;
    }
    unint64_t v325 = v150;
    uint64_t v307 = v72;
    *(void *)&v361[0] = MEMORY[0x1E4FBC860];
    uint64_t v71 = v361;
    sub_1C05F62D0(0, (int64_t)v74, 0);
    unint64_t v80 = *(void *)(v151 + 16);
    if ((unint64_t)v74 <= v80) {
      break;
    }
    __break(1u);
LABEL_106:
    uint64_t v72 = sub_1C0EE30E0((void *)(v80 > 1), (int64_t)v82, 1, v72);
  }
  uint64_t v324 = v151;
  uint64_t v152 = v151 + 32;
  uint64_t v153 = v73 + 1;
  uint64_t v154 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v305 + 56);
  long long v326 = xmmword_1C157D0F0;
  do
  {
    sub_1BFC66384(v152, (uint64_t)v363);
    sub_1BFC66384((uint64_t)v363, (uint64_t)&v339);
    uint64_t v342 = MEMORY[0x1E4FBC860];
    uint64_t v343 = MEMORY[0x1E4FBC870];
    long long v344 = 0u;
    long long v345 = 0u;
    long long v346 = 0u;
    char v347 = 1;
    sub_1C0FCECC4((uint64_t)&v339, (uint64_t)v338);
    if (v338[3])
    {
      sub_1C0445330((uint64_t)v338, (uint64_t)&v332);
      sub_1C0FCED38((uint64_t)&v339);
      int64_t v155 = (_OWORD *)((char *)&v73->Kind + *(int *)(v147 + 24));
      long long v156 = v337[0];
      v155[4] = v336;
      void v155[5] = v156;
      *(_OWORD *)((char *)v155 + 89) = *(_OWORD *)((char *)v337 + 9);
      long long v157 = v333;
      *int64_t v155 = v332;
      v155[1] = v157;
      long long v158 = v335;
      v155[2] = v334;
      v155[3] = v158;
      uint64_t v159 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      unint64_t v160 = *(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56);
      uint64_t v161 = v159;
      uint64_t v73 = v329;
      v160(v155, 0, 1, v161);
      *uint64_t v73 = (ValueMetadata)v326;
      v153->Kind = 0;
      v153->Description = 0;
      uint64_t v162 = (char *)v73 + *(int *)(v147 + 28);
      *(void *)uint64_t v162 = 0;
      *((void *)v162 + 1) = 0;
      v162[16] = -1;
      sub_1C044538C((uint64_t)v338);
    }
    else
    {
      sub_1C0FCED38((uint64_t)&v339);
      unint64_t v163 = (char *)v73 + *(int *)(v147 + 24);
      uint64_t v164 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v163, 1, 1, v164);
      *uint64_t v73 = (ValueMetadata)v326;
      v153->Kind = 0;
      v153->Description = 0;
      unint64_t v165 = (char *)v73 + *(int *)(v147 + 28);
      *(void *)unint64_t v165 = 0;
      *((void *)v165 + 1) = 0;
      v165[16] = -1;
    }
    uint64_t v166 = v331;
    sub_1C0FCEC14((uint64_t)v73, v331, type metadata accessor for FormatInspectionItem);
    (*v154)(v166, 0, 1, v147);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v363);
    uint64_t v167 = *(void *)&v361[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F62D0(0, *(void *)(v167 + 16) + 1, 1);
      uint64_t v167 = *(void *)&v361[0];
    }
    unint64_t v169 = *(void *)(v167 + 16);
    unint64_t v168 = *(void *)(v167 + 24);
    if (v169 >= v168 >> 1)
    {
      sub_1C05F62D0(v168 > 1, v169 + 1, 1);
      uint64_t v167 = *(void *)&v361[0];
    }
    *(void *)(v167 + 16) = v169 + 1;
    sub_1C0FCEC14(v331, v167+ ((*(unsigned __int8 *)(v328 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v328 + 80))+ *(void *)(v328 + 72) * v169, (uint64_t (*)(void))sub_1C0181BEC);
    v152 += 40;
    uint64_t v74 = (char **)((char *)v74 - 1);
    uint64_t v73 = v329;
    uint64_t v147 = v330;
  }
  while (v74);
  swift_bridgeObjectRelease();
  uint64_t v72 = v307;
LABEL_54:
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x6E6942206D657449, 0xED000073676E6964, 0, 0, v167, v355);
  swift_bridgeObjectRelease();
  *((void *)&v340 + 1) = &type metadata for FormatInspectionGroup;
  uint64_t v341 = &off_1F1BDEC90;
  uint64_t v170 = swift_allocObject();
  *(void *)&long long v339 = v170;
  *(void *)(v170 + 48) = v356;
  long long v171 = v355[1];
  *(_OWORD *)(v170 + 16) = v355[0];
  *(_OWORD *)(v170 + 32) = v171;
  unint64_t v173 = v72[2];
  unint64_t v172 = v72[3];
  if (v173 >= v172 >> 1) {
    uint64_t v72 = sub_1C0EE30E0((void *)(v172 > 1), v173 + 1, 1, v72);
  }
  _OWORD v72[2] = v173 + 1;
  sub_1C0FCEC14((uint64_t)&v339, (uint64_t)&v72[5 * v173 + 4], (uint64_t (*)(void))sub_1C01004A4);
  uint64_t v174 = (uint64_t)v290;
  unint64_t v175 = *(void (**)(char *))(v297 + 16);
  uint64_t v329 = (ValueMetadata *)&v290[*(int *)(v295 + 24)];
  v175(v296);
  uint64_t v176 = sub_1C0E6A604();
  MEMORY[0x1F4188790](v176);
  uint64_t v177 = v310;
  v284[-4] = v309;
  v284[-3] = v177;
  v284[-2] = v174;
  uint64_t v178 = sub_1C0185414((void (*)(uint64_t))sub_1C0FCEDA4, (uint64_t)&v284[-6], v176);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x617453206C6C6143, 0xEA00000000006B63, 0, 0, v178, v357);
  swift_bridgeObjectRelease();
  v348[3] = &type metadata for FormatInspectionGroup;
  v348[4] = &off_1F1BDEC90;
  uint64_t v179 = swift_allocObject();
  v348[0] = v179;
  *(void *)(v179 + 48) = v358;
  long long v180 = v357[1];
  *(_OWORD *)(v179 + 16) = v357[0];
  *(_OWORD *)(v179 + 32) = v180;
  unint64_t v182 = v72[2];
  unint64_t v181 = v72[3];
  if (v182 >= v181 >> 1) {
    uint64_t v72 = sub_1C0EE30E0((void *)(v181 > 1), v182 + 1, 1, v72);
  }
  _OWORD v72[2] = v182 + 1;
  sub_1C0FCEC14((uint64_t)v348, (uint64_t)&v72[5 * v182 + 4], (uint64_t (*)(void))sub_1C01004A4);
  *(void *)&long long v326 = *(void *)(v310 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_editor);
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v183 = v339;
  uint64_t v184 = v288;
  swift_retain();
  uint64_t v185 = sub_1C0FCEDC8(v183, v184);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C09BCFA4(0x704F206863746157, 0xED0000736E6F6974, 0, 0, v185, v359);
  swift_bridgeObjectRelease();
  *((void *)&v340 + 1) = &type metadata for FormatInspectionGroup;
  uint64_t v341 = &off_1F1BDEC90;
  uint64_t v186 = swift_allocObject();
  *(void *)&long long v339 = v186;
  *(void *)(v186 + 48) = v360;
  long long v187 = v359[1];
  *(_OWORD *)(v186 + 16) = v359[0];
  *(_OWORD *)(v186 + 32) = v187;
  unint64_t v189 = v72[2];
  unint64_t v188 = v72[3];
  if (v189 >= v188 >> 1) {
    uint64_t v72 = sub_1C0EE30E0((void *)(v188 > 1), v189 + 1, 1, v72);
  }
  _OWORD v72[2] = v189 + 1;
  sub_1C0FCEC14((uint64_t)&v339, (uint64_t)&v72[5 * v189 + 4], (uint64_t (*)(void))sub_1C01004A4);
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v190 = v339;
  uint64_t v191 = v285;
  swift_bridgeObjectRetain();
  uint64_t v192 = sub_1C0FCF3CC(v190, v191);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1C09BCFA4(0x6553206863746157, 0xEF73726F7463656CLL, 0, 0, v192, v361);
  swift_bridgeObjectRelease();
  *((void *)&v340 + 1) = &type metadata for FormatInspectionGroup;
  uint64_t v341 = &off_1F1BDEC90;
  uint64_t v193 = swift_allocObject();
  *(void *)&long long v339 = v193;
  *(void *)(v193 + 48) = v362;
  long long v194 = v361[1];
  *(_OWORD *)(v193 + 16) = v361[0];
  *(_OWORD *)(v193 + 32) = v194;
  unint64_t v196 = v72[2];
  unint64_t v195 = v72[3];
  if (v196 >= v195 >> 1) {
    uint64_t v72 = sub_1C0EE30E0((void *)(v195 > 1), v196 + 1, 1, v72);
  }
  _OWORD v72[2] = v196 + 1;
  uint64_t v307 = v72;
  sub_1C0FCEC14((uint64_t)&v339, (uint64_t)&v72[5 * v196 + 4], (uint64_t (*)(void))sub_1C01004A4);
  sub_1BFF15CD0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  uint64_t v197 = *(void *)(v328 + 72);
  unint64_t v198 = (*(unsigned __int8 *)(v328 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v328 + 80);
  uint64_t v199 = swift_allocObject();
  *(_OWORD *)(v199 + 16) = xmmword_1C152C7F0;
  unint64_t v200 = v199 + v198;
  *(void *)&long long v339 = *(void *)v309;
  uint64_t v201 = v339;
  uint64_t v202 = sub_1C11523CC();
  unint64_t v203 = (uint64_t *)(v199 + v198 + *(int *)(v147 + 24));
  uint64_t *v203 = v202;
  v203[1] = v204;
  uint64_t v205 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v205 - 8) + 56))(v203, 0, 1, v205);
  *(_OWORD *)unint64_t v200 = xmmword_1C15BE9D0;
  *(void *)(v200 + 16) = 0;
  *(void *)(v200 + 24) = 0;
  unint64_t v206 = v200 + *(int *)(v147 + 28);
  *(void *)unint64_t v206 = 0;
  *(void *)(v206 + 8) = 0;
  *(unsigned char *)(v206 + 16) = -1;
  int64_t v207 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v305 + 56);
  v207(v200, 0, 1, v147);
  uint64_t v331 = v197;
  uint64_t v208 = (void *)(v200 + v197);
  unint64_t v209 = (void (*)(void *, void, uint64_t, uint64_t))v207;
  *(void *)&long long v339 = v201;
  char v210 = sub_1C1150A2C();
  uint64_t v211 = sub_1C1150A4C(v210);
  uint64_t v213 = v212;
  swift_bridgeObjectRetain();
  sub_1C0433600(1684957515, 0xE400000000000000, v211, v213, v208);
  v209(v208, 0, 1, v147);
  uint64_t v214 = v298;
  sub_1C0FCEB48(v294, (uint64_t)v298, type metadata accessor for FormatDebuggerCallStackFrameContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v216 = *v214;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C065C470();
    uint64_t v218 = (char *)v214 + *(int *)(v217 + 48);
    uint64_t v220 = *(void *)(v216 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    uint64_t v219 = *(void *)(v216 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    swift_bridgeObjectRetain();
    swift_release();
    (*(void (**)(char *, uint64_t))(v302 + 8))(v218, v303);
  }
  else
  {
    uint64_t v220 = *(void *)(v216 + 32);
    uint64_t v219 = *(void *)(v216 + 40);
    swift_bridgeObjectRetain();
    swift_release();
  }
  if (v219) {
    uint64_t v221 = v220;
  }
  else {
    uint64_t v221 = 0;
  }
  uint64_t v222 = (void *)(v200 + 2 * v331);
  sub_1C0434624(1953459283, 0xE400000000000000, v221, v219, v222);
  v209(v222, 0, 1, v330);
  sub_1C09BCFA4(1701080910, 0xE400000000000000, 0, 0, v199, v363);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *((void *)&v340 + 1) = &type metadata for FormatInspectionGroup;
  uint64_t v341 = &off_1F1BDEC90;
  uint64_t v223 = swift_allocObject();
  *(void *)&long long v339 = v223;
  *(void *)(v223 + 48) = v364;
  long long v224 = v363[1];
  *(_OWORD *)(v223 + 16) = v363[0];
  *(_OWORD *)(v223 + 32) = v224;
  uint64_t v225 = v307;
  unint64_t v227 = v307[2];
  unint64_t v226 = v307[3];
  if (v227 >= v226 >> 1) {
    uint64_t v225 = sub_1C0EE30E0((void *)(v226 > 1), v227 + 1, 1, v307);
  }
  v225[2] = v227 + 1;
  sub_1C0FCEC14((uint64_t)&v339, (uint64_t)&v225[5 * v227 + 4], (uint64_t (*)(void))sub_1C01004A4);
  uint64_t v228 = swift_bridgeObjectRetain();
  unint64_t v229 = sub_1C131B79C(v228);
  swift_bridgeObjectRelease();
  uint64_t v230 = sub_1C131B4D4((uint64_t)v229);
  swift_bridgeObjectRelease();
  uint64_t v231 = *(void *)(v230 + 16);
  uint64_t v307 = v225;
  uint64_t v328 = v230;
  if (v231)
  {
    uint64_t v232 = v230 + 64;
    uint64_t v233 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v237 = *(void *)v232;
      if (*(void *)(*(void *)v232 + 16))
      {
        uint64_t v238 = *(void *)(v232 - 32);
        uint64_t v239 = *(void *)(v232 - 24);
        uint64_t v240 = *(void *)(v232 - 8);
        uint64_t v330 = *(void *)(v232 - 16);
        uint64_t v331 = v238;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v339 = v233;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C05F7928(0, *(void *)(v233 + 16) + 1, 1);
          uint64_t v233 = v339;
        }
        unint64_t v235 = *(void *)(v233 + 16);
        unint64_t v234 = *(void *)(v233 + 24);
        if (v235 >= v234 >> 1)
        {
          sub_1C05F7928(v234 > 1, v235 + 1, 1);
          uint64_t v233 = v339;
        }
        *(void *)(v233 + 16) = v235 + 1;
        unint64_t v236 = (void *)(v233 + 40 * v235);
        v236[4] = v331;
        v236[5] = v239;
        v236[6] = v330;
        v236[7] = v240;
        v236[8] = v237;
      }
      v232 += 40;
      --v231;
    }
    while (v231);
  }
  else
  {
    uint64_t v233 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v242 = v310;
  *(void *)(v310 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v233;
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  uint64_t v243 = v309;
  uint64_t v244 = v306;
  sub_1C0FCEB48(v309, v306, type metadata accessor for FormatDebuggerCallStackFrame);
  uint64_t v245 = v287;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v286 + 56))(v244, 0, 1, v287);
  uint64_t v246 = v242 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame;
  swift_beginAccess();
  sub_1C0FCEBB0(v244, v246);
  swift_endAccess();
  sub_1C145BB24(v243);
  swift_retain();
  sub_1C151894C();
  swift_release();
  if (!(void)v339)
  {
    uint64_t v254 = v299;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 56))(v299, 1, 1, v301);
LABEL_89:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C0FCEAE8(v309, type metadata accessor for FormatDebuggerCallStackFrame);
    sub_1C0FCEAE8((uint64_t)v290, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
    return (id)sub_1C0FCEAE8(v254, (uint64_t (*)(void))sub_1C031439C);
  }
  uint64_t v247 = *(void *)(v339 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v249 = v300;
  uint64_t v248 = v301;
  if (*(void *)(v247 + 16))
  {
    uint64_t v251 = *(void *)(v309 + 8);
    uint64_t v250 = *(void *)(v309 + 16);
    swift_bridgeObjectRetain();
    unint64_t v252 = sub_1BFEF2D8C(v251, v250);
    if (v253)
    {
      uint64_t v254 = v299;
      sub_1C0FCEB48(*(void *)(v247 + 56) + *(void *)(v249 + 72) * v252, v299, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      uint64_t v255 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v249 + 56);
      v255(v254, 0, 1, v248);
    }
    else
    {
      uint64_t v255 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v249 + 56);
      uint64_t v254 = v299;
      v255(v299, 1, 1, v248);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v255 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 56);
    uint64_t v254 = v299;
    v255(v299, 1, 1, v301);
  }
  uint64_t v256 = (uint64_t)v293;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v249 + 48))(v254, 1, v248) == 1) {
    goto LABEL_89;
  }
  uint64_t v330 = (uint64_t)v255;
  sub_1C0FCEC14(v254, v256, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  unint64_t v257 = sub_1C0FCF79C();
  uint64_t v258 = sub_1C151F0CC();
  if (v258)
  {
    uint64_t v259 = v258;
    v338[0] = MEMORY[0x1E4FBC860];
    sub_1C05F850C(0, v258 & ~(v258 >> 63), 0);
    id result = (id)sub_1C151F09C();
    if (v259 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v331 = v257;
    do
    {
      int64_t v260 = (void (*)(long long *, void))sub_1C151F19C();
      char v261 = v311;
      sub_1C0FCEB48(v262, (uint64_t)v311, type metadata accessor for FormatDebuggerCallStackFrame);
      v260(&v339, 0);
      uint64_t v263 = v261[1];
      uint64_t v264 = v261[2];
      uint64_t v265 = v261[3];
      uint64_t v266 = v261[4];
      swift_bridgeObjectRetain();
      sub_1C0FCEAE8((uint64_t)v261, type metadata accessor for FormatDebuggerCallStackFrame);
      uint64_t v267 = v338[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F850C(0, *(void *)(v267 + 16) + 1, 1);
        uint64_t v267 = v338[0];
      }
      unint64_t v269 = *(void *)(v267 + 16);
      unint64_t v268 = *(void *)(v267 + 24);
      if (v269 >= v268 >> 1)
      {
        sub_1C05F850C(v268 > 1, v269 + 1, 1);
        uint64_t v267 = v338[0];
      }
      *(void *)(v267 + 16) = v269 + 1;
      uint64_t v270 = (void *)(v267 + 32 * v269);
      v270[4] = v263;
      v270[5] = v264;
      v270[6] = v265;
      v270[7] = v266;
      sub_1C151F0FC();
      --v259;
    }
    while (v259);
    swift_bridgeObjectRelease();
    uint64_t v248 = v301;
    uint64_t v245 = v287;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v267 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v339 = v267;
  swift_retain();
  sub_1C151895C();
  swift_release();
  uint64_t v271 = (uint64_t)v290;
  uint64_t v272 = (void *)*((void *)v290 + 4);
  uint64_t v273 = (uint64_t)v293;
  if ((unint64_t)v272 < 4)
  {
LABEL_103:
    uint64_t v276 = v292;
    sub_1C0FCEB48(v273, v292, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v330)(v276, 0, 1, v248);
    uint64_t v277 = v309;
    uint64_t v278 = *(void *)(v309 + 16);
    *(void *)&long long v332 = *(void *)(v309 + 8);
    *((void *)&v332 + 1) = v278;
    long long v333 = *(_OWORD *)(v309 + 24);
    uint64_t v341 = 0;
    long long v339 = 0u;
    long long v340 = 0u;
    swift_bridgeObjectRetain();
    sub_1C017ED10(v276, (uint64_t *)&v332, (uint64_t *)&v339, (uint64_t)v338);
    sub_1C09CFC44((uint64_t)v338, (uint64_t)&v339);
    sub_1C09CFC44((uint64_t)&v339, (uint64_t)&v332);
    swift_retain();
    sub_1C151895C();
    swift_release();
    swift_release();
    sub_1C0FCEAE8(v273, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    sub_1C0FCEAE8(v277, type metadata accessor for FormatDebuggerCallStackFrame);
    return (id)sub_1C0FCEAE8(v271, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
  }
  id v274 = v272;
  uint64_t v275 = (uint64_t)v291;
  sub_1C1518E0C();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v284[0])(v275, 1, v245) == 1)
  {
    sub_1C0FCF824(v272);
    sub_1C0FCEAE8(v275, (uint64_t (*)(void))sub_1C0FCEA80);
    uint64_t v271 = (uint64_t)v290;
    goto LABEL_103;
  }
  uint64_t v279 = v289;
  sub_1C0FCEC14(v275, v289, type metadata accessor for FormatDebuggerCallStackFrame);
  uint64_t v280 = v292;
  sub_1C0FCEB48(v273, v292, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v330)(v280, 0, 1, v248);
  uint64_t v281 = v309;
  uint64_t v282 = *(void *)(v309 + 16);
  *(void *)&long long v332 = *(void *)(v309 + 8);
  *((void *)&v332 + 1) = v282;
  long long v333 = *(_OWORD *)(v309 + 24);
  uint64_t v283 = *(void *)(v279 + 16);
  *(void *)&long long v339 = *(void *)(v279 + 8);
  *((void *)&v339 + 1) = v283;
  long long v340 = *(_OWORD *)(v279 + 24);
  uint64_t v341 = (char **)v272;
  sub_1C0FCF834(v272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C017ED10(v280, (uint64_t *)&v332, (uint64_t *)&v339, (uint64_t)v338);
  sub_1C09CFC44((uint64_t)v338, (uint64_t)&v339);
  sub_1C09CFC44((uint64_t)&v339, (uint64_t)&v332);
  swift_retain();
  sub_1C151895C();
  swift_release();
  swift_release();
  sub_1C0FCF824(v272);
  sub_1C0FCEAE8(v279, type metadata accessor for FormatDebuggerCallStackFrame);
  sub_1C0FCEAE8(v273, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  sub_1C0FCEAE8(v281, type metadata accessor for FormatDebuggerCallStackFrame);
  return (id)sub_1C0FCEAE8((uint64_t)v290, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
}

uint64_t sub_1C0FCE018(uint64_t a1)
{
  sub_1C0FCEA80(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0FCEAB4(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame;
  swift_beginAccess();
  sub_1C0FCEB48(v8, (uint64_t)v4, (uint64_t (*)(void))sub_1C0FCEA80);
  sub_1C0FCB508((uint64_t)v7, v4);
  sub_1C0FCEAE8((uint64_t)v4, (uint64_t (*)(void))sub_1C0FCEA80);
  return sub_1C0FCEAE8((uint64_t)v7, (uint64_t (*)(void))sub_1C0FCEAB4);
}

uint64_t sub_1C0FCE1F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v9 = sub_1BFED5EC4();
  uint64_t v11 = v10;
  uint64_t result = sub_1C0FCEAE8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1C0FCE2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v32 = a3;
  uint64_t v30 = a2;
  uint64_t v6 = type metadata accessor for FormatDebuggerContext();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v33 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v31 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v30 - v16;
  sub_1C0FCEB48(a1, (uint64_t)&v30 - v16, type metadata accessor for FormatDebuggerCallStackFrame);
  sub_1C0FCEB48(v30, (uint64_t)v14, type metadata accessor for FormatDebuggerCallStackFrame);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C0FCEB48(v34, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
  sub_1C0FCEB48(a1, (uint64_t)v11, type metadata accessor for FormatDebuggerCallStackFrame);
  unint64_t v19 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v20 = (v7 + *(unsigned __int8 *)(v31 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v18;
  sub_1C0FCEC14((uint64_t)v8, v21 + v19, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
  sub_1C0FCEC14((uint64_t)v11, v21 + v20, type metadata accessor for FormatDebuggerCallStackFrame);
  type metadata accessor for DebugFormatDebuggerCallStackEntry();
  uint64_t v22 = swift_allocObject();
  sub_1C0FCEC14((uint64_t)v17, v22 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_callStackFrame, type metadata accessor for FormatDebuggerCallStackFrame);
  sub_1C0FCEC14((uint64_t)v14, v22 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_selectedCallStackFrame, type metadata accessor for FormatDebuggerCallStackFrame);
  uint64_t v23 = (uint64_t (**)())(v22 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_onSelectBlock);
  *uint64_t v23 = sub_1C0FCFAB4;
  v23[1] = (uint64_t (*)())v21;
  uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v25 = v35;
  uint64_t v26 = (uint64_t *)(v35 + *(int *)(v24 + 24));
  uint64_t *v26 = v22;
  uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  *(_OWORD *)uint64_t v25 = xmmword_1C157D0F0;
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  uint64_t v28 = v25 + *(int *)(v24 + 28);
  *(void *)uint64_t v28 = 0;
  *(void *)(v28 + 8) = 0;
  *(unsigned char *)(v28 + 16) = -1;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v25, 0, 1, v24);
}

uint64_t sub_1C0FCE698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0FCEA80(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FCEAB4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](a1 + 16);
  if (result)
  {
    uint64_t v13 = (void *)result;
    sub_1C0FCEB48(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
    uint64_t v14 = type metadata accessor for FormatDebuggerContext();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 0, 1, v14);
    sub_1C0FCEB48(a3, (uint64_t)v8, type metadata accessor for FormatDebuggerCallStackFrame);
    uint64_t v15 = type metadata accessor for FormatDebuggerCallStackFrame(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
    sub_1C0FCB508(v11, v8);

    sub_1C0FCEAE8((uint64_t)v8, (uint64_t (*)(void))sub_1C0FCEA80);
    return sub_1C0FCEAE8((uint64_t)v11, (uint64_t (*)(void))sub_1C0FCEAB4);
  }
  return result;
}

void sub_1C0FCE894()
{
}

uint64_t sub_1C0FCE8C4()
{
  swift_release();
  return sub_1C0FCEAE8(v0 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame, (uint64_t (*)(void))sub_1C0FCEA80);
}

uint64_t sub_1C0FCE980()
{
  return type metadata accessor for DebugFormatDebuggerViewController();
}

uint64_t type metadata accessor for DebugFormatDebuggerViewController()
{
  uint64_t result = qword_1EA1A9F08;
  if (!qword_1EA1A9F08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0FCE9D4()
{
  sub_1C0FCEA80(319);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1C0FCEA80(uint64_t a1)
{
}

void sub_1C0FCEAB4(uint64_t a1)
{
}

uint64_t sub_1C0FCEAE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0FCEB48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0FCEBB0(uint64_t a1, uint64_t a2)
{
  sub_1C0FCEA80(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0FCEC14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0FCEC7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0FCECC4(uint64_t a1, uint64_t a2)
{
  sub_1BFC77FBC(0, (unint64_t *)&qword_1EA1ACFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0FCED38(uint64_t a1)
{
  sub_1BFC77FBC(0, (unint64_t *)&qword_1EA1ACFC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0FCEDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0FCE2D0(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C0FCEDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a2;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v56 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for FormatOption();
  uint64_t v13 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v48 = (uint64_t *)((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v54 = (uint64_t)&v44 - v16;
  sub_1C0181BEC(0);
  uint64_t v53 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (uint64_t *)((char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v20 = *(void *)(a1 + 16);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v20)
  {
    uint64_t v44 = v2;
    uint64_t v60 = MEMORY[0x1E4FBC860];
    int64_t v59 = v20;
    sub_1C05F62D0(0, v20, 0);
    uint64_t v21 = v60;
    uint64_t v45 = v19 + 2;
    uint64_t v46 = v9 + 2;
    uint64_t v51 = (void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v22 = (uint64_t *)(a1 + 40);
    uint64_t v47 = v12;
    do
    {
      uint64_t v58 = v21;
      uint64_t v23 = *(v22 - 1);
      uint64_t v24 = *v22;
      swift_bridgeObjectRetain();
      FormatOptionCollection.subscript.getter(v23, v24, (uint64_t)v12);
      if ((*v52)(v12, 1, v55) == 1)
      {
        sub_1C0FCEAE8((uint64_t)v12, (uint64_t (*)(void))sub_1C00AB000);
        uint64_t v25 = (uint64_t)v9 + *(int *)(v6 + 24);
        uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
        *uint64_t v9 = v23;
        v9[1] = v24;
        uint64_t v27 = v46;
        *uint64_t v46 = 0;
        v27[1] = 0;
        uint64_t v28 = (char *)v9 + *(int *)(v6 + 28);
        *(void *)uint64_t v28 = 0;
        *((void *)v28 + 1) = 0;
        unsigned char v28[16] = -1;
        uint64_t v29 = v56;
        sub_1C0FCEB48(v25, v56, (uint64_t (*)(void))sub_1C0444DD4);
        swift_bridgeObjectRetain_n();
        sub_1C0FCEAE8((uint64_t)v9, type metadata accessor for FormatInspectionItem);
        *unint64_t v19 = v23;
        v19[1] = v24;
        uint64_t v30 = v45;
        *uint64_t v45 = 0;
        v30[1] = 0;
        sub_1C0FCEC14(v29, (uint64_t)v19 + *(int *)(v6 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v31 = (char *)v19 + *(int *)(v6 + 28);
        *(void *)uint64_t v31 = v23;
        *((void *)v31 + 1) = v24;
        v31[16] = 0;
      }
      else
      {
        uint64_t v32 = v54;
        sub_1C0FCEC14((uint64_t)v12, v54, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v33 = v32;
        uint64_t v34 = v48;
        sub_1C0FCEB48(v33, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatOption);
        sub_1C0AF5D04(v34, v9);
        uint64_t v35 = *v9;
        uint64_t v36 = v9[1];
        uint64_t v49 = v9[2];
        uint64_t v50 = v35;
        uint64_t v37 = v6;
        uint64_t v38 = v9[3];
        uint64_t v39 = v56;
        sub_1C0FCEB48((uint64_t)v9 + *(int *)(v37 + 24), v56, (uint64_t (*)(void))sub_1C0444DD4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C0FCEAE8((uint64_t)v9, type metadata accessor for FormatInspectionItem);
        *unint64_t v19 = v50;
        v19[1] = v36;
        long long v19[2] = v49;
        v19[3] = v38;
        uint64_t v6 = v37;
        uint64_t v12 = v47;
        sub_1C0FCEC14(v39, (uint64_t)v19 + *(int *)(v6 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v40 = (char *)v19 + *(int *)(v6 + 28);
        *(void *)uint64_t v40 = v23;
        *((void *)v40 + 1) = v24;
        v40[16] = 0;
        sub_1C0FCEAE8(v54, (uint64_t (*)(void))type metadata accessor for FormatOption);
      }
      (*v51)(v19, 0, 1, v6);
      swift_bridgeObjectRelease();
      uint64_t v21 = v58;
      uint64_t v60 = v58;
      unint64_t v42 = *(void *)(v58 + 16);
      unint64_t v41 = *(void *)(v58 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1C05F62D0(v41 > 1, v42 + 1, 1);
        uint64_t v21 = v60;
      }
      v22 += 2;
      *(void *)(v21 + 16) = v42 + 1;
      sub_1C0FCEC14((uint64_t)v19, v21+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v42, (uint64_t (*)(void))sub_1C0181BEC);
      --v59;
    }
    while (v59);
  }
  return v21;
}

uint64_t sub_1C0FCF3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v40 = (uint64_t)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v8 = (void *)((char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0181BEC(0);
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    v34[1] = v2;
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v12, 0);
    uint64_t v36 = v11 + 2;
    uint64_t v37 = v8 + 2;
    uint64_t v13 = v43;
    uint64_t v35 = (void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v14 = (uint64_t *)(a1 + 40);
    do
    {
      int64_t v42 = v12;
      uint64_t v16 = *(v14 - 1);
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain_n();
      char v17 = sub_1BFF896B4(v16, v15, v41);
      uint64_t v18 = v39;
      unint64_t v19 = (char *)v8 + *(int *)(v39 + 24);
      *unint64_t v19 = v17 & 1;
      uint64_t v20 = v13;
      uint64_t v21 = v8;
      uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
      uint64_t v24 = v22;
      uint64_t v8 = v21;
      uint64_t v13 = v20;
      v23(v19, 0, 1, v24);
      *uint64_t v8 = v16;
      v8[1] = v15;
      uint64_t v25 = v37;
      *uint64_t v37 = 0;
      v25[1] = 0;
      uint64_t v26 = (char *)v8 + *(int *)(v18 + 28);
      *(void *)uint64_t v26 = 0;
      *((void *)v26 + 1) = 0;
      v26[16] = -1;
      uint64_t v27 = (uint64_t)v19;
      uint64_t v28 = v40;
      sub_1C0FCEB48(v27, v40, (uint64_t (*)(void))sub_1C0444DD4);
      swift_bridgeObjectRetain_n();
      sub_1C0FCEAE8((uint64_t)v8, type metadata accessor for FormatInspectionItem);
      *uint64_t v11 = v16;
      v11[1] = v15;
      uint64_t v29 = v36;
      *uint64_t v36 = 0;
      v29[1] = 0;
      sub_1C0FCEC14(v28, (uint64_t)v11 + *(int *)(v18 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v30 = (char *)v11 + *(int *)(v18 + 28);
      *(void *)uint64_t v30 = v16;
      *((void *)v30 + 1) = v15;
      v30[16] = 1;
      (*v35)(v11, 0, 1, v18);
      swift_bridgeObjectRelease();
      uint64_t v43 = v20;
      unint64_t v32 = *(void *)(v20 + 16);
      unint64_t v31 = *(void *)(v20 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1C05F62D0(v31 > 1, v32 + 1, 1);
        uint64_t v13 = v43;
      }
      v14 += 2;
      *(void *)(v13 + 16) = v32 + 1;
      sub_1C0FCEC14((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v32, (uint64_t (*)(void))sub_1C0181BEC);
      int64_t v12 = v42 - 1;
    }
    while (v42 != 1);
  }
  return v13;
}

unint64_t sub_1C0FCF79C()
{
  unint64_t result = qword_1EA1A9F18;
  if (!qword_1EA1A9F18)
  {
    sub_1BFF15CD0(255, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9F18);
  }
  return result;
}

void sub_1C0FCF824(id a1)
{
  if ((unint64_t)a1 >= 4) {
}
  }

id sub_1C0FCF834(id result)
{
  if ((unint64_t)result >= 4) {
    return result;
  }
  return result;
}

uint64_t sub_1C0FCF844()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0FCF87C()
{
  uint64_t v1 = type metadata accessor for FormatDebuggerContext();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_release();
  uint64_t v6 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(v6 + 32);
  if ((unint64_t)v7 >= 4) {

  }
  uint64_t v8 = v6 + *(int *)(v1 + 24);
  sub_1BFF15CD0(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v10 = v0 + v5 + *(int *)(v4 + 24);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  LODWORD(v8) = swift_getEnumCaseMultiPayload();
  swift_release();
  if (v8 == 1)
  {
    sub_1C065C470();
    unint64_t v12 = v10 + *(int *)(v11 + 48);
    sub_1BFF81FF0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  return swift_deallocObject();
}