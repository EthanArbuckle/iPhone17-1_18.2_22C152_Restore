uint64_t initializeWithCopy for FormatAbsoluteURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatAbsoluteURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatAbsoluteURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0988BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C0988C98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C1515FDC();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t FormatNodeCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for FormatNodeCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatNodeCache);
}

uint64_t static FormatCustomItem.Action.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0988F30();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&v10[*(int *)(v11 + 56)];
  sub_1C0988F94(a1, (uint64_t)v10);
  sub_1C0988F94(a2, v12);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  LOBYTE(a2) = MEMORY[0x1C18BDA40](v7, v12);
  v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v13(v12, v4);
  v13((uint64_t)v7, v4);
  return a2 & 1;
}

void sub_1C0988F30()
{
  if (!qword_1EB8612A0)
  {
    type metadata accessor for FormatCustomItem.Action();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8612A0);
    }
  }
}

uint64_t sub_1C0988F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCustomItem.Action();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0988FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0988F30();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&v10[*(int *)(v11 + 56)];
  sub_1C0988F94(a1, (uint64_t)v10);
  sub_1C0988F94(a2, v12);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  LOBYTE(a2) = MEMORY[0x1C18BDA40](v7, v12);
  v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v13(v12, v4);
  v13((uint64_t)v7, v4);
  return a2 & 1;
}

uint64_t FormatCustomItem.Action.encode(to:)(void *a1)
{
  sub_1BFEC2DA8();
  uint64_t v21 = v2;
  MEMORY[0x1F4188790](v2);
  v22 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatCustomItem.Action();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  v14 = (char *)&v21 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v15 = v4;
  v16 = v6;
  uint64_t v17 = v23;
  sub_1C1520F0C();
  sub_1C0988F94(v24, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v16, v9, v4);
  sub_1C0989878();
  long long v25 = 0uLL;
  uint64_t v18 = v26;
  sub_1C152080C();
  if (!v18)
  {
    uint64_t v19 = (uint64_t)v22;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v22, v16, v15);
    long long v25 = xmmword_1C152C800;
    sub_1BFF87804(&qword_1EB85CEF8, (void (*)(uint64_t))sub_1BFEC2DA8);
    sub_1C152080C();
    sub_1C09898CC(v19, (uint64_t (*)(void))sub_1BFEC2DA8);
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1C09894D8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C098952C()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0989544()
{
  return sub_1C1520E0C();
}

void sub_1C0989594(void *a1@<X8>)
{
  *a1 = 0x4C52556E65706FLL;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1C09895B0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0989600(void *a1)
{
  return FormatCustomItem.Action.encode(to:)(a1);
}

uint64_t FormatCustomItem.Action.perform(with:)()
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatCustomItem.Action();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0988F94(v0, (uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  swift_getObjectType();
  if (qword_1EB87B130 != -1) {
    swift_once();
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  sub_1C151AD8C();
  sub_1C09898CC((uint64_t)v3, (uint64_t (*)(void))sub_1BFF00BEC);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0989878()
{
  unint64_t result = qword_1EB865C38;
  if (!qword_1EB865C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865C38);
  }
  return result;
}

uint64_t sub_1C09898CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C098992C(void *a1)
{
  a1[1] = sub_1BFF87804(&qword_1EB865C58, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  a1[2] = sub_1BFF87804(&qword_1EB865C50, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  uint64_t result = sub_1BFF87804(&qword_1EA1A18A8, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  a1[3] = result;
  return result;
}

uint64_t *_s6ActionOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1C1515FDC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t _s6ActionOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s6ActionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s6ActionOwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s6ActionOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

ValueMetadata *_s6ActionO10CodingTypeOMa()
{
  return &_s6ActionO10CodingTypeON;
}

unint64_t sub_1C0989C54()
{
  unint64_t result = qword_1EA1A18B0;
  if (!qword_1EA1A18B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A18B0);
  }
  return result;
}

uint64_t sub_1C0989CA8(void (*a1)(uint64_t *__return_ptr, char *))
{
  void (*v13)(uint64_t *__return_ptr, char *);
  uint64_t v14;

  uint64_t v13 = a1;
  uint64_t v3 = sub_1C151928C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB0A8];
  sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1BFEC295C(v1, (uint64_t)&v12 - v9, &qword_1EB871500, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1) {
    return 2;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  v13(&v14, v6);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v14;
}

uint64_t FormatContentSubgroupCollection.subgroups.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FormatContentSubgroupCollection __swiftcall FormatContentSubgroupCollection.init(subgroups:)(NewsFeed::FormatContentSubgroupCollection subgroups)
{
  v1->subgroups._rawValue = subgroups.subgroups._rawValue;
  return subgroups;
}

uint64_t FormatContentSubgroupCollection.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFEC2A48(0, &qword_1EB879E70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, MEMORY[0x1E4FBB320]);
  sub_1C098A748();
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1C0989FA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v19 = (char *)&v17 - v5;
  sub_1BFEBAC24(0, &qword_1EB87BD78, (uint64_t (*)(void))sub_1C098C06C, (uint64_t)&type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v17 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for FormatContentSubgroupCollection.MetadataContainer();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C098C06C();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v14 = v17;
    uint64_t v13 = v18;
    type metadata accessor for FormatMetadata();
    sub_1BFEDB1E8(&qword_1EB874B00, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v15 = (uint64_t)v19;
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
    sub_1C098C0C0(v15, (uint64_t)v12);
    sub_1BFEBAA84((uint64_t)v12, v13, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C098A274()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1C098A28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C098A324(uint64_t a1)
{
  unint64_t v2 = sub_1C098C06C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C098A360(uint64_t a1)
{
  unint64_t v2 = sub_1C098C06C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C098A39C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0989FA0(a1, a2);
}

uint64_t sub_1C098A3B4(void *a1)
{
  sub_1BFEBAC24(0, &qword_1EA1A18D8, (uint64_t (*)(void))sub_1C098C06C, (uint64_t)&type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C098C06C();
  sub_1C1520F0C();
  type metadata accessor for FormatMetadata();
  sub_1BFEDB1E8(&qword_1EB85D128, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  sub_1C152078C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t static FormatContentSubgroupCollection.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DEB48(*a1, *a2);
}

uint64_t sub_1C098A570(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFEC2A48(0, &qword_1EB879E70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, MEMORY[0x1E4FBB320]);
  sub_1C098A748();
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1C098A650(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DEB48(*a1, *a2);
}

uint64_t sub_1C098A65C(uint64_t a1)
{
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C098A6E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C098A748()
{
  unint64_t result = qword_1EB85DF30;
  if (!qword_1EB85DF30)
  {
    sub_1BFEC2A48(255, &qword_1EB879E70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, MEMORY[0x1E4FBB320]);
    sub_1BFEDB1E8(&qword_1EB85D5E8, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DF30);
  }
  return result;
}

unint64_t sub_1C098A818(void *a1)
{
  a1[1] = sub_1BFE38C24();
  a1[2] = sub_1C098A850();
  unint64_t result = sub_1C098A8A4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C098A850()
{
  unint64_t result = qword_1EA1A18B8;
  if (!qword_1EA1A18B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A18B8);
  }
  return result;
}

unint64_t sub_1C098A8A4()
{
  unint64_t result = qword_1EA1A18C0;
  if (!qword_1EA1A18C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A18C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupCollection()
{
  return &type metadata for FormatContentSubgroupCollection;
}

uint64_t *sub_1C098A908(uint64_t *a1, uint64_t *a2)
{
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    char v7 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v23 = v8;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = v7[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1C151928C();
      uint64_t v15 = *(void *)(v14 - 8);
      v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      swift_bridgeObjectRetain();
      v16(v12, v13, v14);
      v16((char *)a1 + v7[6], (char *)a2 + v7[6], v14);
      uint64_t v17 = v7[7];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)a2 + v17, 1, v14))
      {
        sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      uint64_t v21 = *(void (**)(uint64_t *, void, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1C098AC2C(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for FormatMetadata();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[5];
    uint64_t v5 = sub_1C151928C();
    uint64_t v6 = *(void *)(v5 - 8);
    char v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v7(v4, v5);
    v7(a1 + v2[6], v5);
    uint64_t v8 = a1 + v2[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
      v7(v8, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1C098ADB4(void *a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v20 = v5;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = v4[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151928C();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v13((char *)a1 + v4[6], (char *)a2 + v4[6], v11);
    uint64_t v14 = v4[7];
    uint64_t v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v14, 1, v11))
    {
      sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
    *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
    *(void *)((char *)a1 + v4[10]) = *(void *)((char *)a2 + v4[10]);
    *(void *)((char *)a1 + v4[11]) = *(void *)((char *)a2 + v4[11]);
    uint64_t v18 = *(void (**)(void *, void, uint64_t, int *))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1C098B098(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = (void *)*((void *)v4 - 1);
  uint64_t v6 = (uint64_t (*)(char *, uint64_t, int *))v5[6];
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1C098A6E8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v4[5];
    uint64_t v21 = &a1[v20];
    v22 = &a2[v20];
    uint64_t v23 = sub_1C151928C();
    uint64_t v24 = *(void *)(v23 - 8);
    long long v25 = *(void (**)(char *, char *, uint64_t))(v24 + 24);
    v25(v21, v22, v23);
    v25(&a1[v4[6]], &a2[v4[6]], v23);
    uint64_t v26 = v4[7];
    v27 = &a2[v26];
    v37 = &a1[v26];
    v28 = *(uint64_t (**)(void))(v24 + 48);
    int v29 = v28();
    int v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v27, 1, v23);
    if (v29)
    {
      if (!v30)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v37, v27, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v37, 0, 1, v23);
        goto LABEL_18;
      }
      sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
      size_t v32 = *(void *)(*(void *)(v31 - 8) + 64);
      v33 = v37;
    }
    else
    {
      if (!v30)
      {
        v25(v37, v27, v23);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v23);
      sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
      size_t v32 = *(void *)(*(void *)(v35 - 8) + 64);
      v33 = v37;
    }
    memcpy(v33, v27, v32);
LABEL_18:
    *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v8)
  {
LABEL_7:
    sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  __src = v5;
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  uint64_t v9 = v4[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  v14(v10, v11, v12);
  v14(&a1[v4[6]], &a2[v4[6]], v12);
  uint64_t v15 = v4[7];
  v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
  {
    sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
  *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
  *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
  *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
  v34 = (void (*)(char *, void, uint64_t, int *))__src[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(a1, 0, 1, v4);
  return a1;
}

_OWORD *sub_1C098B654(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = v4[5];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151928C();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v12(v8, v9, v10);
    v12((char *)a1 + v4[6], (char *)a2 + v4[6], v10);
    uint64_t v13 = v4[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v13, 1, v10))
    {
      sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
    *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
    *(void *)((char *)a1 + v4[10]) = *(void *)((char *)a2 + v4[10]);
    *(void *)((char *)a1 + v4[11]) = *(void *)((char *)a2 + v4[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1C098B904(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1C098A6E8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      goto LABEL_7;
    }
    uint64_t v20 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = v4[5];
    v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_1C151928C();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v25 + 40);
    v26(v22, v23, v24);
    v26(&a1[v4[6]], &a2[v4[6]], v24);
    uint64_t v27 = v4[7];
    v28 = &a2[v27];
    v37 = &a1[v27];
    int v29 = *(uint64_t (**)(void))(v25 + 48);
    int v30 = v29();
    int v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v29)(v28, 1, v24);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v37, v28, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v37, 0, 1, v24);
        goto LABEL_18;
      }
      sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
      size_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
      v34 = v37;
    }
    else
    {
      if (!v31)
      {
        v26(v37, v28, v24);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v37, v24);
      sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
      size_t v33 = *(void *)(*(void *)(v35 - 8) + 64);
      v34 = v37;
    }
    memcpy(v34, v28, v33);
LABEL_18:
    *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v8)
  {
LABEL_7:
    sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v9 = v4[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v14(v10, v11, v12);
  v14(&a1[v4[6]], &a2[v4[6]], v12);
  uint64_t v15 = v4[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
  {
    sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
  *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
  *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
  *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1C098BE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C098BE70);
}

uint64_t sub_1C098BE70(uint64_t a1, uint64_t a2)
{
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C098BF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C098BF20);
}

uint64_t sub_1C098BF20(uint64_t a1, uint64_t a2)
{
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C098BFC0(void *a1)
{
  a1[1] = sub_1BFEDB1E8(&qword_1EB87B048, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer);
  a1[2] = sub_1BFEDB1E8(&qword_1EA1A18C8, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer);
  uint64_t result = sub_1BFEDB1E8(&qword_1EA1A18D0, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer);
  a1[3] = result;
  return result;
}

unint64_t sub_1C098C06C()
{
  unint64_t result = qword_1EB87BC18;
  if (!qword_1EB87BC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87BC18);
  }
  return result;
}

uint64_t sub_1C098C0C0(uint64_t a1, uint64_t a2)
{
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1C098C154(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for FormatMetadata();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (void **)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C098C4F4();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (void **)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v25 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v25 - v17;
  sub_1BFEC295C(a1, (uint64_t)&v25 - v17, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  sub_1BFEC295C(v26, (uint64_t)v15, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_1BFEC295C((uint64_t)v18, (uint64_t)v9, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  sub_1BFEC295C((uint64_t)v15, v19, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) == 1)
  {
    sub_1C098A65C((uint64_t)v15);
    sub_1C098A65C((uint64_t)v18);
    if (v20(v19, 1, v3) == 1)
    {
      sub_1C098A65C((uint64_t)v9);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BFEC295C((uint64_t)v9, (uint64_t)v12, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  if (v20(v19, 1, v3) == 1)
  {
    sub_1C098A65C((uint64_t)v15);
    sub_1C098A65C((uint64_t)v18);
    sub_1C098A6E8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
LABEL_6:
    sub_1C098A6E8((uint64_t)v9, (uint64_t (*)(void))sub_1C098C4F4);
    return 0;
  }
  uint64_t v21 = v19;
  v22 = v25;
  sub_1BFEBAA84(v21, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  char v23 = static FormatMetadata.== infix(_:_:)(v12, v22);
  sub_1C098A6E8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C098A65C((uint64_t)v15);
  sub_1C098A65C((uint64_t)v18);
  sub_1C098A6E8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C098A65C((uint64_t)v9);
  return (v23 & 1) != 0;
}

void sub_1C098C4F4()
{
  if (!qword_1EA1A18E0)
  {
    sub_1BFEC2A48(255, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A18E0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupCollection.MetadataContainer.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C098C624);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupCollection.MetadataContainer.CodingKeys()
{
  return &type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys;
}

unint64_t sub_1C098C660()
{
  unint64_t result = qword_1EA1A18E8;
  if (!qword_1EA1A18E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A18E8);
  }
  return result;
}

unint64_t sub_1C098C6B8()
{
  unint64_t result = qword_1EB87BC28;
  if (!qword_1EB87BC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87BC28);
  }
  return result;
}

unint64_t sub_1C098C710()
{
  unint64_t result = qword_1EB87BC20;
  if (!qword_1EB87BC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87BC20);
  }
  return result;
}

void FormatGroupBinding.SourceItemTip.tipSource(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (id *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v12 = *v2;
  switch(v12 >> 6)
  {
    case 1u:
      sub_1BFC4BD94(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v3)
      {
        if (v12)
        {
          if (qword_1EB86F710 != -1) {
            swift_once();
          }
          uint64_t v24 = sub_1C151CE3C();
          uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB86F6F0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a2, v25, v24);
        }
        else if (objc_msgSend(v11[5], sel_sourceChannel))
        {
          uint64_t v30 = 0x3A3A776F6C6C6F66;
          unint64_t v31 = 0xE800000000000000;
          id v16 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          sub_1C151E62C();

          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151CE2C();
          swift_unknownObjectRelease_n();
        }
        else
        {
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          void *v28 = 0xD000000000000012;
          v28[1] = 0x80000001C1616870;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        uint64_t v20 = type metadata accessor for FeedHeadline;
        uint64_t v21 = (uint64_t)v11;
        goto LABEL_26;
      }
      break;
    case 2u:
      sub_1BFFDAD48(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)&v30);
      if (!v3)
      {
        id v17 = (id)v30;
        uint64_t v18 = (void *)v31;
        if (v12)
        {
          if (qword_1EB86F710 != -1) {
            swift_once();
          }
          uint64_t v26 = sub_1C151CE3C();
          uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB86F6F0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a2, v27, v26);
        }
        else
        {
          uint64_t v30 = 0x3A3A776F6C6C6F66;
          unint64_t v31 = 0xE800000000000000;
          id v19 = objc_msgSend(v17, sel_identifier);
          sub_1C151E62C();

          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151CE2C();
        }
        swift_unknownObjectRelease();
      }
      break;
    case 3u:
      sub_1C098DB74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v8);
      if (!v3)
      {
        FormatWebEmbedBinding.SourceItemTip.tipSource(from:)((uint64_t)v8, a2);
        uint64_t v20 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
        uint64_t v21 = (uint64_t)v8;
LABEL_26:
        sub_1BFFEED10(v21, v20);
      }
      break;
    default:
      sub_1C098CEE0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), &v30);
      if (!v3)
      {
        id v13 = (id)v30;
        if (v12)
        {
          if (qword_1EB86F710 != -1) {
            swift_once();
          }
          uint64_t v22 = sub_1C151CE3C();
          uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB86F6F0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a2, v23, v22);
        }
        else
        {
          id v14 = objc_msgSend((id)v30, sel_backingTag);
          uint64_t v30 = 0x3A3A776F6C6C6F66;
          unint64_t v31 = 0xE800000000000000;
          id v15 = objc_msgSend(v14, sel_identifier);
          sub_1C151E62C();

          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151CE2C();

          swift_unknownObjectRelease();
        }
      }
      break;
  }
}

uint64_t sub_1C098CCF0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatGroupBinding.SourceItemTip.init(from:)(a1, a2);
}

uint64_t sub_1C098CD08(void *a1)
{
  return FormatGroupBinding.SourceItemTip.encode(to:)(a1);
}

uint64_t sub_1C098CD24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x726F705364656546, 0xEF746E6576457374), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v4, (uint64_t)v17);
    sub_1BFC773DC(v17, (uint64_t)v18);
    sub_1BFC66384((uint64_t)v18, (uint64_t)v17);
    sub_1C008B33C();
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      *(void *)a2 = v13;
      *(_OWORD *)(a2 + 8) = v14;
      *(void *)(a2 + 24) = v15;
      *(unsigned char *)(a2 + 32) = v16 & 1;
    }
    else
    {
      sub_1BFF7DFA8();
      swift_allocError();
      unsigned int v12 = v11;
      *uint64_t v11 = 0x726F705364656546;
      v11[1] = 0xEF746E6576457374;
      sub_1BFC66384((uint64_t)v18, (uint64_t)(v11 + 2));
      *((unsigned char *)v12 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = 0x726F705364656546;
    *(void *)(v8 + 8) = 0xEF746E6576457374;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C098CEE0@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x6373654464656546, 0xEE00726F74706972), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BFC773DC(v14, (uint64_t)v15);
    sub_1BFC66384((uint64_t)v15, (uint64_t)v14);
    sub_1C008B33C();
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      *a2 = v13;
    }
    else
    {
      sub_1BFF7DFA8();
      swift_allocError();
      unsigned int v12 = v11;
      strcpy(v11, "FeedDescriptor");
      v11[15] = -18;
      sub_1BFC66384((uint64_t)v15, (uint64_t)(v11 + 16));
      v12[56] = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    strcpy((char *)v8, "FeedDescriptor");
    *(unsigned char *)(v8 + 15) = -18;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C098D080@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C098E648(0, &qword_1EB865580, (void (*)(uint64_t))type metadata accessor for FeedWeather);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - v5;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_1BFEF2D8C(0x7461655764656546, 0xEB00000000726568), (v8 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BFC773DC(v19, (uint64_t)v20);
    sub_1BFC66384((uint64_t)v20, (uint64_t)v19);
    sub_1C008B33C();
    uint64_t v9 = type metadata accessor for FeedWeather(0);
    int v10 = swift_dynamicCast();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BFF7FF78((uint64_t)v6, a2, type metadata accessor for FeedWeather);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1C098E5E8((uint64_t)v6, (uint64_t)&qword_1EB865580, (uint64_t)type metadata accessor for FeedWeather, (uint64_t (*)(void))sub_1C098E648);
      sub_1BFF7DFA8();
      swift_allocError();
      uint64_t v18 = v17;
      *id v17 = 0x7461655764656546;
      v17[1] = 0xEB00000000726568;
      sub_1BFC66384((uint64_t)v20, (uint64_t)(v17 + 2));
      *((unsigned char *)v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = 0x7461655764656546;
    *(void *)(v14 + 8) = 0xEB00000000726568;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1C098D32C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x7573734964656546, 0xE900000000000065), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BFC773DC(v14, (uint64_t)v16);
    sub_1BFC66384((uint64_t)v16, (uint64_t)v15);
    sub_1C008B33C();
    if (swift_dynamicCast())
    {
      nullsub_1(v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1BFF66964((uint64_t)v14, (uint64_t)v13, (unint64_t *)&qword_1EB882CD0);
      return sub_1BFF66964((uint64_t)v13, a2, (unint64_t *)&qword_1EB882CD0);
    }
    else
    {
      sub_1BFF7DFA8();
      swift_allocError();
      unsigned int v12 = v11;
      *uint64_t v11 = 0x7573734964656546;
      v11[1] = 0xE900000000000065;
      sub_1BFC66384((uint64_t)v16, (uint64_t)(v11 + 2));
      *((unsigned char *)v12 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = 0x7573734964656546;
    *(void *)(v8 + 8) = 0xE900000000000065;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1C098D4FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x7A7A755064656546, 0xEE0065707954656CLL), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v4, (uint64_t)&v15);
    sub_1BFC773DC(&v15, (uint64_t)v21);
    sub_1BFC66384((uint64_t)v21, (uint64_t)v20);
    sub_1C008B33C();
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      char v7 = v16;
      uint64_t v8 = v18;
      *(_OWORD *)a2 = v15;
      *(unsigned char *)(a2 + 16) = v7 & 1;
      *(_OWORD *)(a2 + 24) = v17;
      *(void *)(a2 + 40) = v8;
      *(_OWORD *)(a2 + 48) = v19;
    }
    else
    {
      sub_1BFF7DFA8();
      swift_allocError();
      uint64_t v14 = v13;
      strcpy(v13, "FeedPuzzleType");
      v13[15] = -18;
      sub_1BFC66384((uint64_t)v21, (uint64_t)(v13 + 16));
      v14[56] = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v10 = v9;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C00B152C(v11);
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "FeedPuzzleType");
    *(unsigned char *)(v10 + 15) = -18;
    *(void *)(v10 + 16) = v12;
    *(unsigned char *)(v10 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C098D6C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C098E648(0, &qword_1EB890D98, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - v5;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_1BFEF2D8C(0xD000000000000013, 0x80000001C1614AB0), (v8 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BFC773DC(v19, (uint64_t)v20);
    sub_1BFC66384((uint64_t)v20, (uint64_t)v19);
    sub_1C008B33C();
    uint64_t v9 = type metadata accessor for FeedPuzzleStatistic();
    int v10 = swift_dynamicCast();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BFF7FF78((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1C098E5E8((uint64_t)v6, (uint64_t)&qword_1EB890D98, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1C098E648);
      sub_1BFF7DFA8();
      swift_allocError();
      uint64_t v18 = v17;
      *long long v17 = 0xD000000000000013;
      v17[1] = 0x80000001C1614AB0;
      sub_1BFC66384((uint64_t)v20, (uint64_t)(v17 + 2));
      *((unsigned char *)v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = 0xD000000000000013;
    *(void *)(v14 + 8) = 0x80000001C1614AB0;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1C098D960@<X0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x7A7A755064656546, 0xEA0000000000656CLL), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v4, (uint64_t)&v19);
    sub_1BFC773DC(&v19, (uint64_t)v33);
    sub_1BFC66384((uint64_t)v33, (uint64_t)v32);
    sub_1C008B33C();
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      long long v7 = v30;
      a2[10] = v29;
      a2[11] = v7;
      a2[12] = v31;
      long long v8 = v26;
      a2[6] = v25;
      a2[7] = v8;
      long long v9 = v28;
      a2[8] = v27;
      a2[9] = v9;
      long long v10 = v22;
      a2[2] = v21;
      a2[3] = v10;
      long long v11 = v24;
      a2[4] = v23;
      a2[5] = v11;
      long long v12 = v20;
      *a2 = v19;
      a2[1] = v12;
    }
    else
    {
      long long v30 = 0u;
      long long v31 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      long long v19 = 0u;
      sub_1C098E5E8((uint64_t)&v19, (uint64_t)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1BFC77FBC);
      sub_1BFF7DFA8();
      swift_allocError();
      uint64_t v18 = v17;
      *long long v17 = 0x7A7A755064656546;
      v17[1] = 0xEA0000000000656CLL;
      sub_1BFC66384((uint64_t)v33, (uint64_t)(v17 + 2));
      *((unsigned char *)v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = 0x7A7A755064656546;
    *(void *)(v14 + 8) = 0xEA0000000000656CLL;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C098DB74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C098E648(0, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - v5;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_1BFEF2D8C(0x4562655764656546, 0xEC0000006465626DLL), (v8 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BFC773DC(v19, (uint64_t)v20);
    sub_1BFC66384((uint64_t)v20, (uint64_t)v19);
    sub_1C008B33C();
    uint64_t v9 = type metadata accessor for FeedWebEmbed();
    int v10 = swift_dynamicCast();
    long long v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BFF7FF78((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1C098E5E8((uint64_t)v6, (uint64_t)&qword_1EB870AB0, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1C098E648);
      sub_1BFF7DFA8();
      swift_allocError();
      uint64_t v18 = v17;
      strcpy((char *)v17, "FeedWebEmbed");
      *(unsigned char *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BFC66384((uint64_t)v20, v17 + 16);
      *(unsigned char *)(v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedWebEmbed");
    *(unsigned char *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1C098DE20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x7779615064656546, 0xEB000000006C6C61), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BFC773DC(v14, (uint64_t)v16);
    sub_1BFC66384((uint64_t)v16, (uint64_t)v15);
    sub_1C008B33C();
    if (swift_dynamicCast())
    {
      nullsub_1(v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1BFF66964((uint64_t)v14, (uint64_t)v13, &qword_1EB8849B0);
      return sub_1BFF66964((uint64_t)v13, a2, &qword_1EB8849B0);
    }
    else
    {
      sub_1BFF7DFA8();
      swift_allocError();
      long long v12 = v11;
      *long long v11 = 0x7779615064656546;
      v11[1] = 0xEB000000006C6C61;
      sub_1BFC66384((uint64_t)v16, (uint64_t)(v11 + 2));
      *((unsigned char *)v12 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = 0x7779615064656546;
    *(void *)(v8 + 8) = 0xEB000000006C6C61;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1C098DFF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C098E648(0, &qword_1EB86C3B0, (void (*)(uint64_t))type metadata accessor for FeedSponsorshipBannerAd);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - v5;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_1BFEF2D8C(0xD000000000000017, 0x80000001C1616890), (v8 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BFC773DC(v19, (uint64_t)v20);
    sub_1BFC66384((uint64_t)v20, (uint64_t)v19);
    sub_1C008B33C();
    uint64_t v9 = type metadata accessor for FeedSponsorshipBannerAd();
    int v10 = swift_dynamicCast();
    long long v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BFF7FF78((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1C098E5E8((uint64_t)v6, (uint64_t)&qword_1EB86C3B0, (uint64_t)type metadata accessor for FeedSponsorshipBannerAd, (uint64_t (*)(void))sub_1C098E648);
      sub_1BFF7DFA8();
      swift_allocError();
      uint64_t v18 = v17;
      *uint64_t v17 = 0xD000000000000017;
      v17[1] = 0x80000001C1616890;
      sub_1BFC66384((uint64_t)v20, (uint64_t)(v17 + 2));
      *((unsigned char *)v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = 0xD000000000000017;
    *(void *)(v14 + 8) = 0x80000001C1616890;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

BOOL _s8NewsFeed18FormatGroupBindingV13SourceItemTipO2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 6)
  {
    case 1u:
      int v8 = v3 & 0xC0;
      BOOL v9 = ((v3 ^ v2) & 1) == 0;
      BOOL result = v8 == 64 && v9;
      break;
    case 2u:
      int v6 = v3 & 0xC0;
      BOOL v7 = ((v3 ^ v2) & 1) == 0;
      BOOL result = v6 == 128 && v7;
      break;
    case 3u:
      BOOL result = v3 > 0xBF;
      break;
    default:
      BOOL v4 = ((v3 ^ v2) & 1) == 0;
      BOOL result = v3 < 0x40 && v4;
      break;
  }
  return result;
}

unint64_t sub_1C098E330(uint64_t a1)
{
  unint64_t result = sub_1C098E358();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C098E358()
{
  unint64_t result = qword_1EA1A18F0;
  if (!qword_1EA1A18F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A18F0);
  }
  return result;
}

unint64_t sub_1C098E3AC(void *a1)
{
  a1[1] = sub_1C08B5134();
  a1[2] = sub_1C08EFA00();
  unint64_t result = sub_1C098E3E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C098E3E4()
{
  unint64_t result = qword_1EA1A18F8;
  if (!qword_1EA1A18F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A18F8);
  }
  return result;
}

uint64_t _s13SourceItemTipOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7D) {
    goto LABEL_17;
  }
  if (a2 + 131 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 131) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 131;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 131;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 131;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7C) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *_s13SourceItemTipOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 131 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 131) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7C)
  {
    unsigned int v6 = ((a2 - 125) >> 8) + 1;
    *unint64_t result = a2 - 125;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C098E5B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.SourceItemTip()
{
  return &type metadata for FormatGroupBinding.SourceItemTip;
}

uint64_t sub_1C098E5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1C098E648(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatPuzzleEmbedData.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedData.feedPuzzle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C01F09C0(v1 + 32, a1);
}

uint64_t FormatPuzzleEmbedData.config.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleEmbedData.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C01F0A74(v0 + 32);
  swift_release();
  return v0;
}

uint64_t FormatPuzzleEmbedData.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C01F0A74(v0 + 32);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatPuzzleEmbedData()
{
  return self;
}

uint64_t method lookup function for FormatPuzzleEmbedData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPuzzleEmbedData);
}

uint64_t sub_1C098E794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v67 = a4;
  uint64_t v60 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v60);
  uint64_t v65 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v59 = (uint64_t)&v57 - v9;
  uint64_t v10 = type metadata accessor for PuzzleStatistic();
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v64 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v57 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v66 = (uint64_t)&v57 - v21;
  sub_1C028A3A8();
  uint64_t v63 = v22;
  MEMORY[0x1F4188790](v22);
  long long v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v61 = (uint64_t)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  long long v29 = (char *)&v57 - v28;
  uint64_t v30 = *(void *)(v4 + 32);
  uint64_t ObjectType = swift_getObjectType();
  v62 = v29;
  FeedContextFactoryType.createFeedContext()(ObjectType, v30);
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C1527210;
  *(void *)(v32 + 32) = v58;
  *(void *)(v32 + 40) = a3;
  swift_bridgeObjectRetain();
  *(void *)(v32 + 48) = PuzzleStatistic.identifier.getter();
  *(void *)(v32 + 56) = v33;
  uint64_t v68 = v32;
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v34 = sub_1C151E55C();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  sub_1BFFD57BC(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  *(void *)long long v19 = 0;
  *((void *)v19 + 1) = 0;
  v19[16] = 1;
  *(_OWORD *)(v19 + 24) = xmmword_1C1538950;
  *((void *)v19 + 5) = v34;
  *((void *)v19 + 6) = v36;
  sub_1BFFD57BC((uint64_t)v13, (uint64_t)&v19[*(int *)(v15 + 40)], (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  swift_getObjectType();
  swift_bridgeObjectRetain();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v68);
  uint64_t v37 = v68;
  uint64_t v38 = *(int *)(v11 + 28);
  uint64_t v39 = v59;
  v40 = &v13[v38];
  sub_1BFFD57BC((uint64_t)&v13[v38], v59, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      char v42 = FCPuzzleTypeProviding.puzzleTypeTraits.getter();
      sub_1C098EE20(v39, type metadata accessor for PuzzleStatisticCategory);
      if ((v42 & 2) != 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1C098EE20(v39, type metadata accessor for PuzzleStatisticCategory);
    }
    uint64_t v43 = 0x80000000000;
    goto LABEL_8;
  }
  sub_1C098EE20(v39, type metadata accessor for PuzzleStatisticCategory);
LABEL_7:
  uint64_t v43 = 0x100000000000;
LABEL_8:
  uint64_t v44 = v37 | v43;
  uint64_t v45 = (uint64_t)v40;
  uint64_t v46 = v65;
  sub_1BFFD57BC(v45, v65, type metadata accessor for PuzzleStatisticCategory);
  int v47 = swift_getEnumCaseMultiPayload();
  sub_1C098EE20(v46, type metadata accessor for PuzzleStatisticCategory);
  if (v47 == 2) {
    uint64_t v48 = v44 | 0x1000000000000;
  }
  else {
    uint64_t v48 = v44;
  }
  sub_1C098EE20((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  *(void *)long long v19 = v48;
  uint64_t v49 = v66;
  sub_1BFEEF9B0((uint64_t)v19, v66, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  swift_bridgeObjectRelease();
  uint64_t v50 = v64;
  sub_1BFFD57BC(v49, v64, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v52 = v61;
  uint64_t v51 = (uint64_t)v62;
  sub_1BFFD57BC((uint64_t)v62, v61, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFEEF9B0(v50, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v53 = v63;
  sub_1BFEEF9B0(v52, (uint64_t)&v24[*(int *)(v63 + 52)], (uint64_t (*)(void))type metadata accessor for FeedContext);
  v54 = &v24[*(int *)(v53 + 56)];
  *(void *)v54 = 0;
  *((void *)v54 + 1) = 0;
  v55 = (uint64_t (**)())&v24[*(int *)(v53 + 64)];
  *v55 = sub_1BFE31C54;
  v55[1] = 0;
  sub_1C098EE20(v49, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  sub_1C098EE20(v51, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFFD57BC((uint64_t)v24, v67, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  return sub_1C098EE20((uint64_t)v24, (uint64_t (*)(void))sub_1C028A3A8);
}

uint64_t sub_1C098EDBC()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatModelFactory()
{
  return self;
}

uint64_t sub_1C098EE20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SportsRosterPlayer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v42 = (uint64_t)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v40 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v40 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v40 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v40 - v15;
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)v40 - v18;
  sub_1C0990154(0, &qword_1EB86B670, MEMORY[0x1E4FBBDC0]);
  uint64_t v45 = v20;
  uint64_t v43 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v40 - v21;
  uint64_t v46 = (int *)type metadata accessor for SportsRosterPlayer();
  MEMORY[0x1F4188790](v46);
  uint64_t v49 = (void *)((char *)v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = a1[3];
  int v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1C098F704();
  uint64_t v44 = v22;
  uint64_t v25 = v48;
  sub_1C1520EBC();
  if (v25) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  }
  uint64_t v26 = (uint64_t)v19;
  uint64_t v48 = v10;
  uint64_t v27 = v43;
  LOBYTE(v50) = 0;
  uint64_t v28 = sub_1C152069C();
  uint64_t v30 = v49;
  *uint64_t v49 = v28;
  v30[1] = v31;
  LOBYTE(v50) = 1;
  v30[2] = sub_1C152060C();
  v30[3] = v32;
  LOBYTE(v50) = 2;
  v30[4] = sub_1C152069C();
  v30[5] = v33;
  LOBYTE(v50) = 3;
  v30[6] = sub_1C152060C();
  v30[7] = v34;
  v40[2] = sub_1C1515FDC();
  LOBYTE(v50) = 4;
  v40[1] = sub_1BFEBF3E8((unint64_t *)&unk_1EB871120);
  sub_1C152065C();
  sub_1C002F694(v26, (uint64_t)v30 + v46[8]);
  LOBYTE(v50) = 5;
  sub_1C152065C();
  sub_1C002F694((uint64_t)v16, (uint64_t)v30 + v46[9]);
  LOBYTE(v50) = 6;
  sub_1C152065C();
  sub_1C002F694((uint64_t)v13, (uint64_t)v30 + v46[10]);
  LOBYTE(v50) = 7;
  uint64_t v35 = (uint64_t)v48;
  sub_1C152065C();
  sub_1C002F694(v35, (uint64_t)v30 + v46[11]);
  LOBYTE(v50) = 8;
  sub_1C152065C();
  sub_1C002F694((uint64_t)v7, (uint64_t)v30 + v46[12]);
  LOBYTE(v50) = 9;
  sub_1C152065C();
  sub_1C002F694(v42, (uint64_t)v49 + v46[13]);
  char v52 = 10;
  sub_1C098F7A4();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v44, v45);
  uint64_t v36 = v50;
  uint64_t v37 = v51;
  if (v51 == 4)
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  uint64_t v38 = (uint64_t)v49;
  uint64_t v39 = (uint64_t *)((char *)v49 + v46[14]);
  *uint64_t v39 = v36;
  v39[1] = v37;
  sub_1C098F7F8(v38, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1BFF510A4(v38, (uint64_t (*)(void))type metadata accessor for SportsRosterPlayer);
}

unint64_t sub_1C098F704()
{
  unint64_t result = qword_1EB866768;
  if (!qword_1EB866768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866768);
  }
  return result;
}

uint64_t type metadata accessor for SportsRosterPlayer()
{
  uint64_t result = qword_1EB866790;
  if (!qword_1EB866790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C098F7A4()
{
  unint64_t result = qword_1EB868050;
  if (!qword_1EB868050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868050);
  }
  return result;
}

uint64_t sub_1C098F7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsRosterPlayer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C098F85C(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449676174;
      break;
    case 2:
      unint64_t result = 0x656D614E6C6C7566;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C098F9C0(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449676174;
      break;
    case 2:
      unint64_t result = 0x656D614E6C6C7566;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C098FB24(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C098F85C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C098F85C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C098FBB0()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C098F85C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C098FC14()
{
  sub_1C098F85C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C098FC68()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C098F85C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C098FCC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09924C8();
  *a1 = result;
  return result;
}

unint64_t sub_1C098FCF8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C098F85C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C098FD24()
{
  return sub_1C098F9C0(*v0);
}

uint64_t sub_1C098FD2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09924C8();
  *a1 = result;
  return result;
}

uint64_t sub_1C098FD54(uint64_t a1)
{
  unint64_t v2 = sub_1C098F704();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C098FD90(uint64_t a1)
{
  unint64_t v2 = sub_1C098F704();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsRosterPlayer.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0990154(0, &qword_1EA1A1900, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C098F704();
  sub_1C1520F0C();
  LOBYTE(v12) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1C152074C();
    LOBYTE(v12) = 2;
    sub_1C15207CC();
    LOBYTE(v12) = 3;
    sub_1C152074C();
    uint64_t v10 = type metadata accessor for SportsRosterPlayer();
    LOBYTE(v12) = 4;
    sub_1C1515FDC();
    sub_1BFEBF3E8((unint64_t *)&unk_1EB8710F0);
    sub_1C152078C();
    LOBYTE(v12) = 5;
    sub_1C152078C();
    LOBYTE(v12) = 6;
    sub_1C152078C();
    LOBYTE(v12) = 7;
    sub_1C152078C();
    LOBYTE(v12) = 8;
    sub_1C152078C();
    LOBYTE(v12) = 9;
    sub_1C152078C();
    long long v12 = *(_OWORD *)(v3 + *(int *)(v10 + 56));
    char v13 = 10;
    sub_1C09901B8();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1C0990154(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C098F704();
    unint64_t v7 = a3(a1, &type metadata for SportsRosterPlayer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C09901B8()
{
  unint64_t result = qword_1EA1A1908;
  if (!qword_1EA1A1908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1908);
  }
  return result;
}

uint64_t sub_1C099020C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsRosterPlayer.init(from:)(a1, a2);
}

uint64_t sub_1C0990224(void *a1)
{
  return SportsRosterPlayer.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsRosterPlayer(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    uint64_t v10 = a3[8];
    __dst = (char *)a1 + v10;
    uint64_t v42 = (char *)a2 + v10;
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v42, 1, v11))
    {
      sub_1BFF00BEC();
      memcpy(__dst, v42, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v42, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v12;
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)v4 + v17;
    long long v19 = (char *)a2 + v17;
    if (v13((char *)a2 + v17, 1, v11))
    {
      sub_1BFF00BEC();
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v11);
    }
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    if (v13((char *)a2 + v21, 1, v11))
    {
      sub_1BFF00BEC();
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v11);
    }
    uint64_t v25 = a3[11];
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (char *)a2 + v25;
    if (v13((char *)a2 + v25, 1, v11))
    {
      sub_1BFF00BEC();
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v11);
    }
    uint64_t v29 = a3[12];
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v13((char *)a2 + v29, 1, v11))
    {
      sub_1BFF00BEC();
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v30, v31, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v11);
    }
    uint64_t v33 = a3[13];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v13((char *)a2 + v33, 1, v11))
    {
      sub_1BFF00BEC();
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v34, v35, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v11);
    }
    uint64_t v37 = a3[14];
    uint64_t v38 = (uint64_t *)((char *)v4 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    unint64_t v40 = v39[1];
    if (v40 >= 4)
    {
      *uint64_t v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    }
  }
  return v4;
}

unint64_t destroy for SportsRosterPlayer(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[9];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[10];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = a1 + a2[11];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = a1 + a2[12];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = a1 + a2[13];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  unint64_t result = *(void *)(a1 + a2[14] + 8);
  if (result >= 4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SportsRosterPlayer(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  uint64_t v9 = a3[8];
  __dst = (char *)a1 + v9;
  unint64_t v40 = &a2[v9];
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v40, 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(__dst, v40, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v40, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = v11;
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = &a2[v15];
  if (v12(&a2[v15], 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v17, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v10);
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  if (v12(&a2[v19], 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v21, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v10);
  }
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = &a2[v23];
  if (v12(&a2[v23], 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v25, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v10);
  }
  uint64_t v27 = a3[12];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = &a2[v27];
  if (v12(&a2[v27], 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v28, v29, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v10);
  }
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = &a2[v31];
  if (v12(&a2[v31], 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v32, v33, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v10);
  }
  uint64_t v35 = a3[14];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = &a2[v35];
  unint64_t v38 = *((void *)v37 + 1);
  if (v38 >= 4)
  {
    *uint64_t v36 = *(void *)v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  }
  return a1;
}

char *assignWithCopy for SportsRosterPlayer(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_1BFF00BEC();
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    sub_1BFF00BEC();
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[11];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (char *)a2 + v27;
  int v30 = v11(&a1[v27], 1, v9);
  int v31 = v11(v29, 1, v9);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
LABEL_24:
    sub_1BFF00BEC();
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v28, v29, v9);
LABEL_25:
  uint64_t v33 = a3[12];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  int v36 = v11(&a1[v33], 1, v9);
  int v37 = v11(v35, 1, v9);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v34, v35, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
LABEL_30:
    sub_1BFF00BEC();
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v34, v35, v9);
LABEL_31:
  uint64_t v39 = a3[13];
  unint64_t v40 = &a1[v39];
  uint64_t v41 = (char *)a2 + v39;
  int v42 = v11(&a1[v39], 1, v9);
  int v43 = v11(v41, 1, v9);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v9);
LABEL_36:
    sub_1BFF00BEC();
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v40, v41, v9);
LABEL_37:
  uint64_t v45 = a3[14];
  uint64_t v46 = &a1[v45];
  int v47 = (void *)((char *)a2 + v45);
  unint64_t v48 = *(void *)&a1[v45 + 8];
  unint64_t v49 = v47[1];
  if (v48 >= 4)
  {
    if (v49 >= 4)
    {
      *(void *)uint64_t v46 = *v47;
      *((void *)v46 + 1) = v47[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v46);
    goto LABEL_42;
  }
  if (v49 < 4)
  {
LABEL_42:
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    return a1;
  }
  *(void *)uint64_t v46 = *v47;
  *((void *)v46 + 1) = v47[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for SportsRosterPlayer(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = &a2[v15];
  if (v13(&a2[v15], 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  if (v13(&a2[v19], 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  uint64_t v23 = a3[11];
  int v24 = (char *)a1 + v23;
  int v25 = &a2[v23];
  if (v13(&a2[v23], 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v24, v25, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  uint64_t v27 = a3[12];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = &a2[v27];
  if (v13(&a2[v27], 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v28, v29, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = &a2[v31];
  if (v13(&a2[v31], 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v32, v33, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)&a2[a3[14]];
  return a1;
}

char *assignWithTake for SportsRosterPlayer(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  int v22 = v15(&a1[v19], 1, v13);
  int v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v21, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    sub_1BFF00BEC();
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v20, v21, v13);
LABEL_13:
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (char *)a2 + v25;
  int v28 = v15(&a1[v25], 1, v13);
  int v29 = v15(v27, 1, v13);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
LABEL_18:
    sub_1BFF00BEC();
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v26, v27, v13);
LABEL_19:
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  int v34 = v15(&a1[v31], 1, v13);
  int v35 = v15(v33, 1, v13);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v32, v33, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v13);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
LABEL_24:
    sub_1BFF00BEC();
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v32, v33, v13);
LABEL_25:
  uint64_t v37 = a3[12];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = (char *)a2 + v37;
  int v40 = v15(&a1[v37], 1, v13);
  int v41 = v15(v39, 1, v13);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v38, v39, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v13);
LABEL_30:
    sub_1BFF00BEC();
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v38, v39, v13);
LABEL_31:
  uint64_t v43 = a3[13];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = (char *)a2 + v43;
  int v46 = v15(&a1[v43], 1, v13);
  int v47 = v15(v45, 1, v13);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v44, v45, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v44, 0, 1, v13);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v13);
LABEL_36:
    sub_1BFF00BEC();
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v44, v45, v13);
LABEL_37:
  uint64_t v49 = a3[14];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = (void *)((char *)a2 + v49);
  if (*(void *)&a1[v49 + 8] >= 4uLL)
  {
    unint64_t v52 = v51[1];
    if (v52 >= 4)
    {
      *(void *)uint64_t v50 = *v51;
      *((void *)v50 + 1) = v52;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v50);
  }
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsRosterPlayer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0992098);
}

uint64_t sub_1C0992098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFF00BEC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SportsRosterPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C099215C);
}

uint64_t sub_1C099215C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFF00BEC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C0992204()
{
  sub_1BFF00BEC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for SportsRosterPlayer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0992388);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsRosterPlayer.CodingKeys()
{
  return &type metadata for SportsRosterPlayer.CodingKeys;
}

unint64_t sub_1C09923C4()
{
  unint64_t result = qword_1EA1A1910;
  if (!qword_1EA1A1910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1910);
  }
  return result;
}

unint64_t sub_1C099241C()
{
  unint64_t result = qword_1EB866778;
  if (!qword_1EB866778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866778);
  }
  return result;
}

unint64_t sub_1C0992474()
{
  unint64_t result = qword_1EB866770;
  if (!qword_1EB866770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866770);
  }
  return result;
}

uint64_t sub_1C09924C8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

unint64_t FormatPuzzleEmbedNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 48);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

uint64_t FormatPuzzleEmbedNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatPuzzleEmbedNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 160);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatPuzzleEmbedNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 88);
}

uint64_t FormatPuzzleEmbedNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleEmbedNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.contentFrameIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C099276C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v3 + 48) = v2;
  sub_1BFF35EA4(v2);
  return sub_1BFF322A8(v4);
}

unint64_t FormatPuzzleEmbedNode.size.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatPuzzleEmbedNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNode.config.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatPuzzleEmbedNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.style.getter@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  uint64_t v8 = v1[17];
  uint64_t v9 = v1[18];
  uint64_t v10 = v1[19];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return sub_1C05DDB68(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t FormatPuzzleEmbedNode.style.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[4];
  long long v14 = *(_OWORD *)(a1 + 5);
  long long v15 = *((_OWORD *)a1 + 1);
  uint64_t v5 = a1[7];
  swift_beginAccess();
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[13];
  uint64_t v8 = v1[14];
  uint64_t v9 = v1[15];
  uint64_t v10 = v1[16];
  uint64_t v11 = v1[17];
  uint64_t v12 = v1[18];
  v1[12] = v2;
  v1[13] = v3;
  *((_OWORD *)v1 + 7) = v15;
  v1[16] = v4;
  *(_OWORD *)(v1 + 17) = v14;
  v1[19] = v5;
  return sub_1C05DDBE4(v6, v7, v8, v9, v10, v11, v12);
}

uint64_t (*FormatPuzzleEmbedNode.style.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C0992B04(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 160);
  *(void *)(v3 + 160) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatPuzzleEmbedNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 160);
  *(void *)(v1 + 160) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatPuzzleEmbedNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0992C00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 168) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPuzzleEmbedNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 168) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

void FormatPuzzleEmbedNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 184);
  *(void *)a1 = *(void *)(v1 + 176);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatPuzzleEmbedNode.name.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNode.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.location.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNode.__allocating_init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v25 = swift_allocObject();
  FormatPuzzleEmbedNode.init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  return v25;
}

uint64_t FormatPuzzleEmbedNode.init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v23 = *a5;
  uint64_t v24 = *a6;
  uint64_t v25 = *a8;
  uint64_t v40 = *a11;
  uint64_t v39 = a11[1];
  long long v38 = *((_OWORD *)a11 + 1);
  uint64_t v37 = a11[4];
  long long v36 = *(_OWORD *)(a11 + 5);
  uint64_t v35 = a11[7];
  uint64_t v41 = *a12;
  uint64_t v43 = *a14;
  char v42 = *((unsigned char *)a14 + 8);
  *(_OWORD *)(v18 + 112) = 0u;
  *(_OWORD *)(v18 + 128) = 0u;
  *(_OWORD *)(v18 + 144) = 0u;
  *(_OWORD *)(v18 + 96) = 0u;
  *(void *)(v18 + 200) = 0;
  *(void *)(v18 + 192) = 0;
  swift_beginAccess();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  swift_beginAccess();
  *(void *)(v18 + 48) = v23;
  *(void *)(v18 + 56) = v24;
  swift_beginAccess();
  *(void *)(v18 + 64) = a7;
  *(void *)(v18 + 72) = v25;
  *(void *)(v18 + 80) = a9;
  swift_beginAccess();
  *(void *)(v18 + 88) = a10;
  swift_beginAccess();
  uint64_t v26 = *(void *)(v18 + 96);
  uint64_t v27 = *(void *)(v18 + 104);
  uint64_t v28 = *(void *)(v18 + 112);
  uint64_t v29 = *(void *)(v18 + 120);
  uint64_t v30 = *(void *)(v18 + 128);
  uint64_t v31 = *(void *)(v18 + 136);
  uint64_t v32 = *(void *)(v18 + 144);
  *(void *)(v18 + 96) = v40;
  *(void *)(v18 + 104) = v39;
  *(_OWORD *)(v18 + 112) = v38;
  *(void *)(v18 + 128) = v37;
  *(_OWORD *)(v18 + 136) = v36;
  *(void *)(v18 + 152) = v35;
  sub_1C05DDBE4(v26, v27, v28, v29, v30, v31, v32);
  swift_beginAccess();
  *(void *)(v18 + 160) = v41;
  swift_beginAccess();
  *(void *)(v18 + 168) = a13;
  *(void *)(v18 + 176) = v43;
  *(unsigned char *)(v18 + 184) = v42;
  swift_beginAccess();
  *(void *)(v18 + 192) = a15;
  *(void *)(v18 + 200) = a16;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 208) = a17;
  *(void *)(v18 + 216) = a18;
  return v18;
}

void *FormatPuzzleEmbedNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(v0[6]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1C05DDBE4(v0[12], v0[13], v0[14], v0[15], v0[16], v0[17], v0[18]);
  sub_1BFF0056C(v0[20]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzleEmbedNode.__deallocating_deinit()
{
  FormatPuzzleEmbedNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0993230(uint64_t a1)
{
  uint64_t result = sub_1C09933C4(&qword_1EA1A1918);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatPuzzleEmbedNode()
{
  return self;
}

uint64_t sub_1C0993298(void *a1)
{
  a1[1] = sub_1C09933C4(qword_1EB866E78);
  a1[2] = sub_1C09933C4(&qword_1EB861388);
  uint64_t result = sub_1C09933C4(&qword_1EA1A1920);
  a1[3] = result;
  return result;
}

void *sub_1C0993324@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C08A8EE8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0993350(void *a1)
{
  return FormatPuzzleEmbedNode.encode(to:)(a1);
}

uint64_t sub_1C0993374(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed21FormatPuzzleEmbedNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0993380(uint64_t a1)
{
  uint64_t result = sub_1C09933C4(&qword_1EA1A1928);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09933C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatPuzzleEmbedNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0993404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v19 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a4 + 16);
  uint64_t v21 = *(void *)(a4 + 24);
  uint64_t v22 = *(void *)(v19 + 40);
  if (v22)
  {
    *(void *)&v48[0] = *(void *)(v19 + 32);
    *((void *)&v48[0] + 1) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v38 = v22;
    uint64_t v39 = *(void *)&v48[0];
    uint64_t v20 = *(void *)(a4 + 16);
    uint64_t v21 = *(void *)(a4 + 24);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = v21;
    uint64_t v39 = v20;
  }
  sub_1C0993968((uint64_t)a5, (uint64_t)v48);
  uint64_t v23 = *(void *)(a4 + 56);
  uint64_t v40 = v20;
  if (v23)
  {
    uint64_t v24 = *(void *)(v23 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v37 = swift_allocObject();
  uint64_t v49 = v24;
  swift_beginAccess();
  uint64_t v36 = *(void *)(a4 + 88);
  swift_beginAccess();
  unint64_t v25 = *(void *)(a4 + 160);
  uint64_t v44 = v25;
  swift_bridgeObjectRetain();
  sub_1C0993A5C(a5);
  sub_1BFE6FA30(v25);
  sub_1BFE6EF70(a3, &v47);
  sub_1BFF0056C(v25);
  sub_1C1517EFC();
  uint64_t v26 = *(void *)(a4 + 40);
  uint64_t v35 = *(void *)(a4 + 32);
  uint64_t v28 = *(void *)(a6 + 72);
  uint64_t v27 = *(void *)(a6 + 80);
  char v29 = *(unsigned char *)(a4 + 184);
  uint64_t v45 = *(void *)(a4 + 176);
  char v46 = v29;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v30 = sub_1C14BD474();
  uint64_t v32 = *(void *)(a4 + 208);
  uint64_t v31 = *(void *)(a4 + 216);
  type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C1308BEC(a1, a2, v39, v38, v40, v21, v48, &v49, a8, a9, a10, a11, v36, &v47, v44, v35, v26, v28, v27,
          &v45,
          v30 & 1,
          v32,
          v31);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v37 + 16) = v33;
  *a7 = v37 | 0x9000000000000004;
  return result;
}

uint64_t sub_1C09936E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0993738@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 48);
  *a2 = v4;
  return sub_1BFF35EA4(v4);
}

uint64_t sub_1C0993788@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09937D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return result;
}

uint64_t sub_1C0993820(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 88) = v2;
  return result;
}

unint64_t sub_1C0993864@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 160);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C09938B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 168);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatPuzzleEmbedNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPuzzleEmbedNode);
}

uint64_t dispatch thunk of FormatPuzzleEmbedNode.__allocating_init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1C0993968(uint64_t a1, uint64_t a2)
{
  sub_1C09939CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C09939CC()
{
  if (!qword_1EB867F00)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB867F00);
    }
  }
}

uint64_t sub_1C0993A24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1C0993A5C(uint64_t *a1)
{
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatImageRenderingMode(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_retain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatImageRenderingMode(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_release();
  }
  return result;
}

unint64_t *assignWithCopy for FormatImageRenderingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_retain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for FormatImageRenderingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDebuggerBreakpointExecution.Execution(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FormatDebuggerBreakpointExecution.Execution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutViewPoolSize()
{
  return &type metadata for FormatLayoutViewPoolSize;
}

uint64_t sub_1C0993CA4(unint64_t a1)
{
  if (a1 < 4) {
    return qword_1C15808A0[a1];
  }
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  unsigned int v4 = self;
  sub_1C0993E0C(v2);
  sub_1C0993E0C(v3);
  id v5 = objc_msgSend(v4, sel_mainBundle);
  id v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  if (v7 == 0x6C7070612E6D6F63 && v9 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v11 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_11:
    unint64_t v12 = v2;
    goto LABEL_12;
  }
LABEL_9:
  unint64_t v12 = v3;
LABEL_12:
  uint64_t v13 = sub_1C0993CA4(v12);
  sub_1C0993E1C(v3);
  sub_1C0993E1C(v2);
  return v13;
}

unint64_t sub_1C0993E0C(unint64_t result)
{
  if (result >= 4) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1C0993E1C(unint64_t result)
{
  if (result >= 4) {
    return swift_release();
  }
  return result;
}

void static FormatScoreMatchupFormatName.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C0993E3C(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 32);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C15204BC();
    unint64_t result = swift_bridgeObjectRelease();
    if (v17 != 2) {
      return 0;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 2)
  {
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    unint64_t v2 = (void *)MEMORY[0x1C18C7CB0](1, v1);
  }
  else
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_20;
    }
    unint64_t v2 = *(void **)(v1 + 40);
    swift_unknownObjectRetain();
  }
  id v3 = objc_msgSend(v2, sel_asSports);
  unint64_t result = swift_unknownObjectRelease();
  if (!v3) {
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    unsigned int v4 = (void *)MEMORY[0x1C18C7CB0](0, v1);
LABEL_11:
    id v5 = objc_msgSend(v4, sel_asSports);
    swift_unknownObjectRelease();
    if (v5)
    {
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1C1515B8C();

      sub_1BFFDEB20();
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
      uint64_t v9 = FormatScoreMatchupFormatName.name(tag:)(v5);
      uint64_t v11 = v10;
      uint64_t v12 = MEMORY[0x1E4FBB1A0];
      *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v13 = sub_1BFE9C558();
      *(void *)(v8 + 64) = v13;
      *(void *)(v8 + 32) = v9;
      *(void *)(v8 + 40) = v11;
      uint64_t v14 = FormatScoreMatchupFormatName.name(tag:)(v3);
      *(void *)(v8 + 96) = v12;
      *(void *)(v8 + 104) = v13;
      *(void *)(v8 + 72) = v14;
      *(void *)(v8 + 80) = v15;
      uint64_t v16 = sub_1C151E66C();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    swift_unknownObjectRelease();
    return 0;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unsigned int v4 = *(void **)(v1 + 32);
    swift_unknownObjectRetain();
    goto LABEL_11;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t FormatScoreMatchupFormatName.name(tag:)(id a1)
{
  switch(*v1)
  {
    case 1:
      id v3 = objc_msgSend(a1, sel_sportsPrimaryName);
      if (!v3) {
        goto LABEL_12;
      }
      break;
    case 2:
      id v3 = objc_msgSend(a1, sel_sportsFullName);
      if (!v3)
      {
        id v3 = objc_msgSend(a1, sel_sportsPrimaryName);
        if (!v3) {
          goto LABEL_12;
        }
      }
      break;
    case 3:
      id v3 = objc_msgSend(a1, sel_sportsNickname);
      if (!v3)
      {
        id v3 = objc_msgSend(a1, sel_sportsPrimaryName);
        if (!v3) {
          goto LABEL_12;
        }
      }
      break;
    default:
      id v3 = objc_msgSend(a1, sel_sportsNameAbbreviation);
      if (!v3)
      {
        id v3 = objc_msgSend(a1, sel_sportsPrimaryName);
        if (!v3) {
LABEL_12:
        }
          id v3 = objc_msgSend(a1, sel_name);
      }
      break;
  }
  uint64_t v4 = sub_1C151E62C();

  return v4;
}

BOOL static FormatScoreMatchupFormat.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((v2 & 0x80u) == 0) {
    BOOL v4 = v3 >= 0;
  }
  else {
    BOOL v4 = v3 < 0;
  }
  return v2 == v3 && v4;
}

BOOL static FormatScoreMatchupFormatName.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C09943D4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatScoreMatchupFormat.init(from:)(a1, a2);
}

uint64_t sub_1C09943EC(void *a1)
{
  return FormatScoreMatchupFormat.encode(to:)(a1);
}

BOOL sub_1C0994404(unsigned __int8 *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((v2 & 0x80u) == 0) {
    BOOL v4 = v3 >= 0;
  }
  else {
    BOOL v4 = v3 < 0;
  }
  return v2 == v3 && v4;
}

uint64_t FormatScoreMatchupFormatName.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatScoreMatchupFormatName.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C09944A4(uint64_t a1)
{
  unint64_t result = sub_1C09944CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09944CC()
{
  unint64_t result = qword_1EA1A1930;
  if (!qword_1EA1A1930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1930);
  }
  return result;
}

uint64_t sub_1C0994520(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C09946C8(a1, a2, a3, (uint64_t (*)(void))sub_1C08CC0F0, (uint64_t (*)(void))sub_1C08E9AA0, (uint64_t (*)(void))sub_1C0994560);
}

unint64_t sub_1C0994560()
{
  unint64_t result = qword_1EA1A1938;
  if (!qword_1EA1A1938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1938);
  }
  return result;
}

unint64_t sub_1C09945B8()
{
  unint64_t result = qword_1EA1A1940;
  if (!qword_1EA1A1940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1940);
  }
  return result;
}

unint64_t sub_1C099460C(uint64_t a1)
{
  unint64_t result = sub_1C0994634();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0994634()
{
  unint64_t result = qword_1EA1A1948;
  if (!qword_1EA1A1948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1948);
  }
  return result;
}

uint64_t sub_1C0994688(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C09946C8(a1, a2, a3, (uint64_t (*)(void))sub_1C08AFF3C, (uint64_t (*)(void))sub_1C08F1394, (uint64_t (*)(void))sub_1C09945B8);
}

uint64_t sub_1C09946C8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

uint64_t sub_1C099471C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatScoreMatchupFormatName.init(from:)(a1, a2);
}

uint64_t sub_1C0994734(void *a1)
{
  return FormatScoreMatchupFormatName.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatScoreMatchupFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 193 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 193) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3E)
  {
    unsigned int v6 = ((a2 - 63) >> 8) + 1;
    *uint64_t result = a2 - 63;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0994824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatScoreMatchupFormat()
{
  return &type metadata for FormatScoreMatchupFormat;
}

unsigned char *storeEnumTagSinglePayload for FormatScoreMatchupFormatName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0994928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatScoreMatchupFormatName()
{
  return &type metadata for FormatScoreMatchupFormatName;
}

Swift::Bool __swiftcall ShortcutManager.canAddShortcut(identifier:)(Swift::String identifier)
{
  int v2 = v1;
  uint64_t v3 = sub_1C1515D7C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = (void *)v1[2];
  uint64_t v11 = (void *)sub_1C151E5EC();
  unsigned __int8 v12 = objc_msgSend(v10, sel_containsShortcut_, v11);

  if (v12)
  {
    if (qword_1EA194B38 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C15198DC();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EA2B5378);
    uint64_t v14 = sub_1C15198AC();
    os_log_type_t v15 = sub_1C151F36C();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1BFC31000, v14, v15, "ShortcutManager unable to add shortcut that is already in the list", v16, 2u);
      MEMORY[0x1C18C9B00](v16, -1, -1);
    }

LABEL_7:
    LOBYTE(v17) = 0;
    return (char)v17;
  }
  uint64_t v18 = sub_1C09951F8((uint64_t)v2);
  id v19 = objc_msgSend(v10, sel_orderedShortcuts);
  id v20 = objc_msgSend(v19, sel_count);

  if ((uint64_t)v20 < v18)
  {
    LOBYTE(v17) = 1;
    return (char)v17;
  }
  uint64_t v65 = v4;
  if (qword_1EA194B38 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C15198DC();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EA2B5378);
  swift_retain_n();
  uint64_t v22 = sub_1C15198AC();
  int v23 = sub_1C151F36C();
  BOOL v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  uint64_t v64 = v18;
  if (v24)
  {
    int v60 = v23;
    os_log_t v62 = v22;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v59 = (void *)swift_slowAlloc();
    id v68 = v59;
    *(_DWORD *)uint64_t v25 = 134218242;
    *(void *)&long long v71 = v18;
    sub_1C151FE1C();
    uint64_t v61 = (uint8_t *)v25;
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v63 = v10;
    id v26 = objc_msgSend(v10, sel_orderedShortcuts);
    sub_1C151F28C();

    sub_1C0995848();
    sub_1C151FE0C();
    id v58 = v26;
    uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
    if (v72)
    {
      uint64_t v66 = v2;
      do
      {
        sub_1BFF993A8(&v71, v70);
        sub_1BFF6A008((uint64_t)v70, (uint64_t)v69);
        sub_1C09958F4();
        if (swift_dynamicCast())
        {
          id v28 = v67;
          id v29 = objc_msgSend(v67, sel_identifier);

          uint64_t v30 = sub_1C151E62C();
          uint64_t v32 = v31;

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = sub_1BFEF9B68(0, v27[2] + 1, 1, v27);
          }
          unint64_t v34 = v27[2];
          unint64_t v33 = v27[3];
          if (v34 >= v33 >> 1) {
            uint64_t v27 = sub_1BFEF9B68((void *)(v33 > 1), v34 + 1, 1, v27);
          }
          v27[2] = v34 + 1;
          uint64_t v35 = &v27[2 * v34];
          v35[4] = v30;
          v35[5] = v32;
          int v2 = v66;
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
        }
        sub_1C151FE0C();
      }
      while (v72);
    }
    uint64_t v36 = v61;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v3);

    uint64_t v37 = MEMORY[0x1C18C6710](v27, MEMORY[0x1E4FBB1A0]);
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    *(void *)&long long v71 = sub_1BFDA76EC(v37, v39, (uint64_t *)&v68);
    sub_1C151FE1C();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v40 = v62;
    _os_log_impl(&dword_1BFC31000, v62, (os_log_type_t)v60, "ShortcutManager failed to add shortcut due to max shortcut count: %ld, with shortcuts: %s", v36, 0x16u);
    uint64_t v41 = v59;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v41, -1, -1);
    MEMORY[0x1C18C9B00](v36, -1, -1);

    uint64_t v10 = v63;
  }
  else
  {

    swift_release_n();
  }
  char v42 = objc_msgSend(v10, sel_orderedShortcuts);
  sub_1C151F28C();
  uint64_t v66 = v42;

  sub_1C0995848();
  sub_1C151FE0C();
  if (v72)
  {
    while (1)
    {
      sub_1BFF993A8(&v71, v70);
      sub_1BFF6A008((uint64_t)v70, (uint64_t)v69);
      sub_1C09958F4();
      if (!swift_dynamicCast()) {
        goto LABEL_28;
      }
      id v43 = v68;
      uint64_t v44 = (void *)v2[11];
      id v45 = objc_msgSend(v68, sel_identifier);
      sub_1C151E62C();

      char v46 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v47 = objc_msgSend(v44, sel_fastCachedTagForID_, v46);

      if (!v47)
      {
        id v48 = objc_msgSend(v43, sel_identifier);
        sub_1C151E62C();

        uint64_t v49 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v47 = objc_msgSend(v44, sel_slowCachedTagForID_, v49);

        if (!v47) {
          break;
        }
      }
      unsigned __int8 v50 = objc_msgSend(self, sel_isTagAllowedForNewsVersion_, v47);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
      if ((v50 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v6, v3);

        uint64_t v51 = 0;
        char v52 = 1;
        goto LABEL_36;
      }
LABEL_29:
      sub_1C151FE0C();
      if (!v72) {
        goto LABEL_35;
      }
    }

LABEL_28:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    goto LABEL_29;
  }
LABEL_35:
  (*(void (**)(char *, uint64_t))(v65 + 8))(v6, v3);

  char v52 = 0;
  uint64_t v51 = v64;
LABEL_36:
  __swift_project_boxed_opaque_existential_1(v2 + 5, v2[8]);
  uint64_t v17 = (void *)sub_1C151AE2C();
  if (v17)
  {
    uint64_t v53 = v17;
    id v54 = objc_msgSend(v17, sel_rootViewController);

    if (v54)
    {
      v55 = (void *)sub_1C151F49C();

      v72 = &type metadata for AlertShortcutsLimitReached;
      unint64_t v73 = sub_1C09958A0();
      *(void *)&long long v71 = v51;
      BYTE8(v71) = v52;
      sub_1C151C80C();
      swift_allocObject();
      sub_1C151C7CC();
      sub_1C151C7DC();

      swift_release();
    }
    goto LABEL_7;
  }
  return (char)v17;
}

uint64_t sub_1C09951F8(uint64_t a1)
{
  uint64_t result = (uint64_t)objc_msgSend(*(id *)(a1 + 80), sel_configuration);
  if (result)
  {
    int v2 = (void *)result;
    if (objc_msgSend((id)result, sel_respondsToSelector_, sel_shortcutsMaxCount))
    {
      id v3 = objc_msgSend(v2, sel_shortcutsMaxCount);
      swift_unknownObjectRelease();
      return (uint64_t)v3;
    }
    else
    {
      swift_unknownObjectRelease();
      if (qword_1EA194B38 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1C15198DC();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EA2B5378);
      uint64_t v5 = sub_1C15198AC();
      os_log_type_t v6 = sub_1C151F36C();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_1BFC31000, v5, v6, "ShortcutManager unable to get shortcutMaxCount from configuration, using default value: 8", v7, 2u);
        MEMORY[0x1C18C9B00](v7, -1, -1);
      }

      return 8;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall ShortcutManager.addShortcut(identifier:)(Swift::String identifier)
{
  uint64_t v2 = v1;
  object = identifier._object;
  uint64_t countAndFlagsBits = identifier._countAndFlagsBits;
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9._uint64_t countAndFlagsBits = countAndFlagsBits;
  v9._object = object;
  if (ShortcutManager.canAddShortcut(identifier:)(v9))
  {
    uint64_t v10 = *(void **)(v1 + 24);
    uint64_t v11 = (void *)sub_1C151E5EC();
    unsigned __int8 v12 = objc_msgSend(v10, sel_hasSubscriptionForTagID_, v11);

    if ((v12 & 1) == 0)
    {
      uint64_t v13 = (void *)sub_1C151E5EC();
      objc_msgSend(v10, sel_addSubscriptionForTagID_type_, v13, 0);
    }
    uint64_t v14 = *(void **)(v2 + 16);
    swift_bridgeObjectRetain();
    sub_1C151630C();
    id v15 = objc_msgSend(v14, sel_orderedShortcuts);
    id v16 = objc_msgSend(v15, sel_count);

    id v17 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v16);
    id v18 = objc_allocWithZone(MEMORY[0x1E4F7E7A8]);
    id v19 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v20 = (void *)sub_1C151621C();
    id v21 = objc_msgSend(v18, sel_initWithIdentifier_dateAdded_order_shortcutType_, v19, v20, v17, 0);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    objc_msgSend(v14, sel_addShortcut_, v21);

    uint64_t v22 = *(void **)(v2 + 32);
    if (objc_msgSend(v22, sel_shortcutsOnboardingState) != (id)2) {
      objc_msgSend(v22, sel_setShortcutsOnboardingState_, 2);
    }
  }
}

Swift::Void __swiftcall ShortcutManager.removeShortcut(identifier:)(Swift::String identifier)
{
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = (void *)sub_1C151E5EC();
  objc_msgSend(v2, sel_removeShortcutWithIdentifier_, v3);

  uint64_t v4 = *(void **)(v1 + 32);
  if (objc_msgSend(v4, sel_shortcutsOnboardingState) != (id)2)
  {
    objc_msgSend(v4, sel_setShortcutsOnboardingState_, 2);
  }
}

Swift::Bool __swiftcall ShortcutManager.hasShortcut(identifier:)(Swift::String identifier)
{
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = (void *)sub_1C151E5EC();
  LOBYTE(v2) = objc_msgSend(v2, sel_containsShortcut_, v3);

  return (char)v2;
}

id *ShortcutManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 5));
  swift_unknownObjectRelease();

  return v0;
}

uint64_t ShortcutManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 5));
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

BOOL sub_1C0995718(uint64_t a1, uint64_t a2)
{
  return ShortcutManager.canAddShortcut(identifier:)(*(Swift::String *)&a1);
}

void sub_1C0995740(uint64_t a1, uint64_t a2)
{
}

id sub_1C0995764()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 16);
  id v3 = (void *)sub_1C151E5EC();
  objc_msgSend(v2, sel_removeShortcutWithIdentifier_, v3);

  uint64_t v4 = *(void **)(v1 + 32);
  id result = objc_msgSend(v4, sel_shortcutsOnboardingState);
  if (result != (id)2)
  {
    return objc_msgSend(v4, sel_setShortcutsOnboardingState_, 2);
  }
  return result;
}

id sub_1C09957FC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 16);
  uint64_t v2 = (void *)sub_1C151E5EC();
  id v3 = objc_msgSend(v1, sel_containsShortcut_, v2);

  return v3;
}

unint64_t sub_1C0995848()
{
  unint64_t result = qword_1EB85C760;
  if (!qword_1EB85C760)
  {
    sub_1C1515D7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C760);
  }
  return result;
}

unint64_t sub_1C09958A0()
{
  unint64_t result = qword_1EA1A1958;
  if (!qword_1EA1A1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1958);
  }
  return result;
}

unint64_t sub_1C09958F4()
{
  unint64_t result = qword_1EA1A1960;
  if (!qword_1EA1A1960)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A1960);
  }
  return result;
}

uint64_t dispatch thunk of ShortcutManagerType.canAddShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ShortcutManagerType.addShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ShortcutManagerType.removeShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ShortcutManagerType.hasShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for ShortcutManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShortcutManager);
}

uint64_t sub_1C099599C(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  char v5 = a1 & 1;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections] = MEMORY[0x1E4FBC860];
  uint64_t v44 = v4;
  uint64_t v6 = v1;
  sub_1C152028C();
  type metadata accessor for DebugFormatRulerIndicatorView.Component();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v7 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(unsigned char *)(v7 + 32) = 0;
  sub_1C152025C();
  sub_1C152029C();
  sub_1C15202AC();
  sub_1C152026C();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v8 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(unsigned char *)(v8 + 32) = 0;
  sub_1C152025C();
  sub_1C152029C();
  sub_1C15202AC();
  sub_1C152026C();
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines] = v44;
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v10 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(unsigned char *)(v10 + 32) = 0;
  *(void *)&v6[v9] = v10;
  v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_direction] = v5;

  v43.receiver = v6;
  v43.super_class = ObjectType;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v43, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill;
  uint64_t v13 = *(void **)(*(void *)&v11[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill] + 16);
  uint64_t v14 = self;
  id v15 = v11;
  id v16 = v13;
  id v17 = objc_msgSend(v14, sel_systemRedColor);
  id v18 = objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.5);

  objc_msgSend(v16, sel_setBackgroundColor_, v18);
  uint64_t v19 = *(void *)&v11[v12];
  objc_msgSend(v15, sel_addSubview_, *(void *)(v19 + 16));
  id v20 = *(void **)(v19 + 24);
  id v21 = self;
  id v22 = v20;
  id v42 = v21;
  id v23 = objc_msgSend(v21, sel_systemFontOfSize_, 12.0);
  objc_msgSend(v22, sel_setFont_, v23);

  id v24 = *(id *)(*(void *)&v11[v12] + 24);
  id v25 = objc_msgSend(v14, sel_whiteColor);
  objc_msgSend(v24, sel_setTextColor_, v25);

  id v26 = *(void **)(*(void *)&v11[v12] + 24);
  objc_msgSend(v26, sel_setTextAlignment_, 1);
  id v27 = v26;
  id v28 = objc_msgSend(v14, sel_systemRedColor);
  objc_msgSend(v27, sel_setBackgroundColor_, v28);

  objc_msgSend(v15, sel_addSubview_, *(void *)(*(void *)&v11[v12] + 24));
  unint64_t v29 = *(void *)&v15[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines];
  if (!(v29 >> 62))
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v30) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C15204BC();
  uint64_t v30 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v30 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        uint64_t v33 = MEMORY[0x1C18C7CB0](v32, v29);
      }
      else
      {
        uint64_t v33 = *(void *)(v29 + 8 * v32 + 32);
        swift_retain();
      }
      ++v32;
      id v34 = *(id *)(v33 + 16);
      id v35 = objc_msgSend(v14, sel_systemRedColor);
      objc_msgSend(v34, sel_setBackgroundColor_, v35);

      objc_msgSend(v15, sel_addSubview_, *(void *)(v33 + 16));
      id v36 = *(id *)(v33 + 24);
      id v37 = objc_msgSend(v42, sel_systemFontOfSize_, 12.0);
      objc_msgSend(v36, sel_setFont_, v37);

      id v38 = *(id *)(v33 + 24);
      id v39 = objc_msgSend(v14, sel_whiteColor);
      objc_msgSend(v38, sel_setTextColor_, v39);

      id v40 = *(id *)(v33 + 24);
      id v41 = objc_msgSend(v14, sel_systemRedColor);
      objc_msgSend(v40, sel_setBackgroundColor_, v41);

      objc_msgSend(v15, sel_addSubview_, *(void *)(v33 + 24));
      swift_release();
    }
    while (v30 != v32);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1C0995FC8()
{
  uint64_t v1 = v0;
  v55.receiver = v0;
  v55.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v55, sel_layoutSubviews);
  unint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines];
  unint64_t v52 = v2 >> 62;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    return;
  }
  uint64_t v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = MEMORY[0x1C18C7CB0](v4, v2);
    }
    else
    {
      uint64_t v5 = *(void *)(v2 + 8 * v4 + 32);
      swift_retain();
    }
    ++v4;
    *(unsigned char *)(v5 + 32) = 1;
    objc_msgSend(*(id *)(v5 + 16), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v5 + 24), sel_setHidden_, *(unsigned __int8 *)(v5 + 32));
    swift_release();
  }
  while (v3 != v4);
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections;
  uint64_t v7 = *(double **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections];
  uint64_t v8 = *((void *)v7 + 2);
  if (!v8)
  {
LABEL_35:
    uint64_t v45 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill];
    *(unsigned char *)(v45 + 32) = 1;
    objc_msgSend(*(id *)(v45 + 16), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v45 + 24), sel_setHidden_, *(unsigned __int8 *)(v45 + 32));
    return;
  }
  uint64_t v9 = *((void *)v7 + 4);
  double v11 = v7[5];
  double v10 = v7[6];
  if (v52)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v13 <= 0)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12 <= 0) {
      goto LABEL_29;
    }
  }
  uint64_t v48 = v6;
  uint64_t v14 = 0;
  char v50 = v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_direction];
  uint64_t v51 = v1;
  id v15 = v7 + 9;
  uint64_t v49 = v8 - 1;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v17 = MEMORY[0x1C18C7CB0](v14, v2);
    }
    else
    {
      if ((unint64_t)v14 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      uint64_t v17 = *(void *)(v2 + 8 * v14 + 32);
      swift_retain();
    }
    *(unsigned char *)(v17 + 32) = 0;
    objc_msgSend(*(id *)(v17 + 16), sel_setHidden_, 0, v48);
    id v18 = *(void **)(v17 + 24);
    objc_msgSend(v18, sel_setHidden_, *(unsigned __int8 *)(v17 + 32));
    *(void *)&v53.a = 32;
    v53.b = -1.7573882e159;
    uint64_t v54 = v9;
    id v19 = v18;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    id v20 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setText_, v20);

    objc_msgSend(*(id *)(v17 + 24), sel_sizeToFit);
    id v21 = *(id *)(v17 + 16);
    id v22 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v21, sel_setFrame_, v11, 0.0, 1.0, CGRectGetHeight(v56));

    id v23 = *(void **)(v17 + 24);
    if (v50)
    {
      v53.b = 0.0;
      v53.c = 0.0;
      v53.a = 1.0;
      v53.d = 1.0;
      v53.tx = 0.0;
      v53.ty = 0.0;
      objc_msgSend(v23, sel_setTransform_, &v53);
      id v24 = v23;
      objc_msgSend(v1, sel_bounds);
      double Height = CGRectGetHeight(v57);
      objc_msgSend(v24, sel_bounds);
      objc_msgSend(v24, sel_setFrame_, v11, Height, CGRectGetWidth(v58), v10);

      id v26 = objc_msgSend(*(id *)(v17 + 24), sel_layer);
      objc_msgSend(v26, sel_setAnchorPoint_, 0.0, 0.0);

      id v27 = *(void **)(v17 + 24);
      CGAffineTransformMakeRotation(&v53, 3.14159265);
      id v22 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
      objc_msgSend(v27, sel_setTransform_, &v53);
      swift_release();
    }
    else
    {
      id v28 = v23;
      objc_msgSend(v28, sel_bounds);
      objc_msgSend(v28, sel_setFrame_, v11, 0.0, CGRectGetWidth(v59), v10);
      swift_release();
    }
    if (v49 == v14) {
      break;
    }
    if ((unint64_t)(v14 + 1) >= *((void *)v7 + 2))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    uint64_t v9 = *((void *)v15 - 2);
    double v11 = *(v15 - 1);
    double v10 = *v15;
    if (v52)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v14;
    v15 += 3;
    if (v14 >= v16) {
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)&v1[v48] + 16) != 2) {
    goto LABEL_35;
  }
  sub_1C0996914();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C151EC4C();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill];
  *(unsigned char *)(v30 + 32) = 0;
  objc_msgSend(*(id *)(v30 + 16), sel_setHidden_, 0);
  uint64_t v31 = *(void **)(v30 + 24);
  objc_msgSend(v31, sel_setHidden_, *(unsigned __int8 *)(v30 + 32));
  *(void *)&v53.a = 32;
  v53.b = -1.7573882e159;
  if (*(void *)(v29 + 16) < 2uLL) {
    goto LABEL_40;
  }
  uint64_t v32 = *(void *)(v29 + 56);
  uint64_t v33 = *(void *)(v29 + 32);
  BOOL v34 = __OFSUB__(v32, v33);
  uint64_t v35 = v32 - v33;
  if (v34) {
    goto LABEL_41;
  }
  uint64_t v54 = v35;
  id v36 = v31;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  id v37 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setText_, v37);

  objc_msgSend(*(id *)(v30 + 24), sel_sizeToFit);
  double v38 = *(double *)(v29 + 40);
  double v39 = *(double *)(v29 + 64);
  id v40 = *(id *)(v30 + 16);
  swift_bridgeObjectRelease();
  [v1 (SEL)v22[439]];
  objc_msgSend(v40, sel_setFrame_, v38, 0.0, v39 - v38, CGRectGetHeight(v60));

  id v41 = *(void **)(v30 + 24);
  if (v51[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_direction])
  {
    v53.a = 1.0;
    v53.b = 0.0;
    v53.c = 0.0;
    v53.d = 1.0;
    v53.tx = 0.0;
    v53.ty = 0.0;
    objc_msgSend(v41, sel_setTransform_, &v53);
    id v42 = *(void **)(v30 + 16);
    id v43 = v41;
    objc_msgSend(v42, sel_center);
    objc_msgSend(v43, sel_setCenter_);

    uint64_t v44 = *(void **)(v30 + 24);
    CGAffineTransformMakeRotation(&v53, -1.57079633);
    objc_msgSend(v44, sel_setTransform_, &v53);
  }
  else
  {
    char v46 = *(void **)(v30 + 16);
    id v47 = v41;
    objc_msgSend(v46, sel_center);
    objc_msgSend(v47, sel_setCenter_);
  }
}

double sub_1C099679C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1C09967F0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatRulerIndicatorView()
{
  return self;
}

uint64_t type metadata accessor for DebugFormatRulerIndicatorView.Component()
{
  return self;
}

ValueMetadata *type metadata accessor for DebugFormatRulerIndicatorView.Selection()
{
  return &type metadata for DebugFormatRulerIndicatorView.Selection;
}

unint64_t sub_1C0996914()
{
  unint64_t result = qword_1EA1A1988;
  if (!qword_1EA1A1988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1988);
  }
  return result;
}

void sub_1C0996968()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections] = MEMORY[0x1E4FBC860];
  uint64_t v7 = v2;
  sub_1C152028C();
  type metadata accessor for DebugFormatRulerIndicatorView.Component();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v3 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(unsigned char *)(v3 + 32) = 0;
  sub_1C152025C();
  sub_1C152029C();
  sub_1C15202AC();
  sub_1C152026C();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v4 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(unsigned char *)(v4 + 32) = 0;
  sub_1C152025C();
  sub_1C152029C();
  sub_1C15202AC();
  sub_1C152026C();
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines] = v7;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v6 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(unsigned char *)(v6 + 32) = 0;
  *(void *)&v1[v5] = v6;

  sub_1C152040C();
  __break(1u);
}

uint64_t FeedGroupConfigType.expandable.getter()
{
  return 0;
}

void sub_1C0996BC0(unsigned char *a1@<X8>)
{
}

void FeedGroupConfigType.dataKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C0996BE0()
{
  return FeedGroupConfigType.maxAppVersion.getter();
}

uint64_t _s8NewsFeed0B15GroupConfigTypePAAE13minAppVersion13TeaFoundation0H0VSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C151928C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t FeedGroupConfigType.allowedSegmentSetIds.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t FeedGroupConfigType.blockedSegmentSetIds.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t FeedGroupConfigType.allowedPlatforms.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t FeedGroupConfigType.blockedPlatforms.getter()
{
  return MEMORY[0x1E4FBC870];
}

void sub_1C0996C9C(unsigned char *a1@<X8>)
{
}

uint64_t static FeedGroupConfigType.== infix(_:_:)()
{
  uint64_t v0 = sub_1C151811C();
  uint64_t v2 = v1;
  if (v0 == sub_1C151811C() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t FeedGroupConfig.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupConfig.kindIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedGroupConfig.paidVisibility.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

uint64_t FeedGroupConfig.priority.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 84));
  return result;
}

uint64_t FeedGroupConfig.encode(to:)(void *a1, int *a2)
{
  type metadata accessor for FeedGroupConfig.CodingKeys();
  swift_getWitnessTable();
  uint64_t v13 = sub_1C152083C();
  uint64_t v6 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v11 = v2;
  uint64_t v12 = (char *)&v10 - v7;
  uint64_t result = sub_1C151E46C();
  if (!v3)
  {
    uint64_t v10 = v6;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C1520F0C();
    uint64_t v9 = v11;
    LOBYTE(v14) = 0;
    sub_1C15207CC();
    LOBYTE(v14) = 1;
    sub_1C15207CC();
    long long v14 = *(_OWORD *)(v9 + 32);
    char v15 = 2;
    sub_1BFF97D54();
    sub_1BFE1E6E4((unint64_t *)&qword_1EB85C2F0, (void (*)(uint64_t))sub_1BFF97D54);
    sub_1C152080C();
    *(void *)&long long v14 = *(void *)(v9 + 48);
    char v15 = 3;
    sub_1C0998CF0();
    sub_1C152080C();
    LOBYTE(v14) = *(unsigned char *)(v9 + 56);
    char v15 = 4;
    sub_1BFE503B4();
    sub_1C152080C();
    LOBYTE(v14) = 5;
    sub_1BFEC0CE8(0);
    sub_1C0998D44();
    sub_1C152080C();
    LOBYTE(v14) = 6;
    sub_1C152080C();
    *(void *)&long long v14 = *(void *)(v9 + a2[17]);
    char v15 = 7;
    sub_1BFE1E520();
    sub_1BFE1E6E4(&qword_1EB85C500, (void (*)(uint64_t))sub_1BFE1E520);
    sub_1C152080C();
    *(void *)&long long v14 = *(void *)(v9 + a2[18]);
    char v15 = 8;
    sub_1C152080C();
    *(void *)&long long v14 = *(void *)(v9 + a2[19]);
    char v15 = 9;
    sub_1BFE5191C();
    sub_1BFE1E580(&qword_1EB86B3B8, (void (*)(void))sub_1C00854EC);
    sub_1C152080C();
    *(void *)&long long v14 = *(void *)(v11 + a2[20]);
    char v15 = 10;
    sub_1C152080C();
    LOBYTE(v14) = *(unsigned char *)(v11 + a2[21]);
    char v15 = 11;
    sub_1C0998DD0();
    sub_1C152080C();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v13);
  }
  return result;
}

uint64_t sub_1C0997328()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0997378(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x696669746E656469;
      break;
    case 2:
      uint64_t result = 0xD000000000000013;
      break;
    case 3:
      uint64_t result = 0x73746F6C73;
      break;
    case 4:
      uint64_t result = 0x6973695664696170;
      break;
    case 5:
      unsigned int v3 = 1316512109;
      goto LABEL_8;
    case 6:
      unsigned int v3 = 1315858797;
LABEL_8:
      uint64_t result = v3 | 0x5673776500000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000014;
      break;
    case 8:
      uint64_t result = 0xD000000000000014;
      break;
    case 9:
    case 10:
      uint64_t result = 0xD000000000000010;
      break;
    case 11:
      uint64_t result = 0x797469726F697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0997520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0997594(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C0997600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0997670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C09976E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0997328();
  *a1 = result;
  return result;
}

uint64_t sub_1C099771C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0997378(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0997750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1C0997374(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_1C0997784@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C099A5B8();
  *a1 = result;
  return result;
}

uint64_t sub_1C09977B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C099780C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C0997860@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FeedGroupConfig.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1C0997884(void *a1, int *a2)
{
  return FeedGroupConfig.encode(to:)(a1, a2);
}

uint64_t sub_1C099789C()
{
  uint64_t v0 = sub_1BFE402EC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static FeedGroupConfig<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int (*a5)(uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v73 = a6;
  v77 = a5;
  uint64_t v78 = a3;
  uint64_t v8 = sub_1C151928C();
  uint64_t v79 = *(void *)(v8 - 8);
  uint64_t v80 = v8;
  MEMORY[0x1F4188790](v8);
  v76 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFEC3EE8();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  v75 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  char v15 = &v68[-v14];
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v16 - 8);
  v74 = &v68[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v18);
  id v20 = &v68[-v19];
  MEMORY[0x1F4188790](v21);
  id v23 = &v68[-v22];
  MEMORY[0x1F4188790](v24);
  id v26 = &v68[-v25];
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = &v68[-v28];
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = &v68[-v31];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v33 = sub_1C1520A9C(), v34 = 0, (v33 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v35 = sub_1C1520A9C(), v34 = 0, (v35 & 1) != 0))
    {
      uint64_t v36 = *(void *)(a1 + 40);
      uint64_t v37 = *(void *)(a2 + 40);
      if (v36)
      {
        if (!v37) {
          goto LABEL_34;
        }
        if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v36 != v37)
        {
          char v38 = sub_1C1520A9C();
          char v34 = 0;
          if ((v38 & 1) == 0) {
            return v34 & 1;
          }
        }
      }
      else if (v37)
      {
        goto LABEL_34;
      }
      double v39 = *(void **)(a1 + 48);
      id v40 = *(void **)(a2 + 48);
      if (v39)
      {
        if (!v40 || !sub_1C00F4E44(v39, v40)) {
          goto LABEL_34;
        }
      }
      else if (v40)
      {
        goto LABEL_34;
      }
      if ((sub_1C1493DDC(*(unsigned char *)(a1 + 56), *(unsigned char *)(a2 + 56)) & 1) == 0) {
        goto LABEL_34;
      }
      uint64_t v41 = type metadata accessor for FeedGroupConfig();
      sub_1BFEC03F4(a1 + *(int *)(v41 + 60), (uint64_t)v32);
      long long v71 = (int *)v41;
      sub_1BFEC03F4(a2 + *(int *)(v41 + 60), (uint64_t)v29);
      uint64_t v42 = (uint64_t)&v15[*(int *)(v11 + 48)];
      sub_1BFEC03F4((uint64_t)v32, (uint64_t)v15);
      uint64_t v72 = v42;
      sub_1BFEC03F4((uint64_t)v29, v42);
      uint64_t v43 = v79 + 48;
      v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
      unsigned int v44 = v77((uint64_t)v15, 1, v80);
      uint64_t v70 = v43;
      if (v44 == 1)
      {
        sub_1BFEC0984((uint64_t)v29, (uint64_t (*)(void))sub_1BFEC0CE8);
        sub_1BFEC0984((uint64_t)v32, (uint64_t (*)(void))sub_1BFEC0CE8);
        uint64_t v45 = v80;
        char v46 = v77;
        if (v77(v72, 1, v80) == 1)
        {
          sub_1BFEC0984((uint64_t)v15, (uint64_t (*)(void))sub_1BFEC0CE8);
LABEL_27:
          uint64_t v51 = v71;
          sub_1BFEC03F4(a1 + v71[16], (uint64_t)v23);
          sub_1BFEC03F4(a2 + v51[16], (uint64_t)v20);
          unint64_t v52 = v75;
          uint64_t v53 = (uint64_t)&v75[*(int *)(v11 + 48)];
          sub_1BFEC03F4((uint64_t)v23, (uint64_t)v75);
          sub_1BFEC03F4((uint64_t)v20, v53);
          if (v46((uint64_t)v52, 1, v45) == 1)
          {
            sub_1BFEC0984((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
            sub_1BFEC0984((uint64_t)v23, (uint64_t (*)(void))sub_1BFEC0CE8);
            if (v46(v53, 1, v45) == 1)
            {
              sub_1BFEC0984((uint64_t)v52, (uint64_t (*)(void))sub_1BFEC0CE8);
              uint64_t v54 = v71;
LABEL_37:
              if ((sub_1BFEC3898(*(void *)(a1 + v54[17]), *(void *)(a2 + v54[17])) & 1) != 0
                && (sub_1BFEC3898(*(void *)(a1 + v54[18]), *(void *)(a2 + v54[18])) & 1) != 0
                && (sub_1BFEC3A64(*(void *)(a1 + v54[19]), *(void *)(a2 + v54[19])) & 1) != 0
                && (sub_1BFEC3A64(*(void *)(a1 + v54[20]), *(void *)(a2 + v54[20])) & 1) != 0)
              {
                uint64_t v60 = v54[21];
                int v61 = *(unsigned __int8 *)(a1 + v60);
                int v62 = *(unsigned __int8 *)(a2 + v60);
                if (v61) {
                  uint64_t v63 = 0x6C616D726F6ELL;
                }
                else {
                  uint64_t v63 = 7827308;
                }
                if (v61) {
                  unint64_t v64 = 0xE600000000000000;
                }
                else {
                  unint64_t v64 = 0xE300000000000000;
                }
                if (v62) {
                  uint64_t v65 = 0x6C616D726F6ELL;
                }
                else {
                  uint64_t v65 = 7827308;
                }
                if (v62) {
                  unint64_t v66 = 0xE600000000000000;
                }
                else {
                  unint64_t v66 = 0xE300000000000000;
                }
                if (v63 == v65 && v64 == v66)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  char v67 = sub_1C1520A9C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  char v34 = 0;
                  if ((v67 & 1) == 0) {
                    return v34 & 1;
                  }
                }
                char v34 = sub_1C151E5CC();
                return v34 & 1;
              }
              goto LABEL_34;
            }
            goto LABEL_32;
          }
          objc_super v55 = v74;
          sub_1BFEC03F4((uint64_t)v52, (uint64_t)v74);
          if (v46(v53, 1, v45) == 1)
          {
            sub_1BFEC0984((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
            sub_1BFEC0984((uint64_t)v23, (uint64_t (*)(void))sub_1BFEC0CE8);
            (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v55, v45);
LABEL_32:
            uint64_t v47 = (uint64_t)v52;
            goto LABEL_33;
          }
          uint64_t v57 = v79;
          CGRect v58 = v76;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v79 + 32))(v76, v53, v45);
          sub_1BFE51A38(&qword_1EB85C8B8);
          LODWORD(v77) = sub_1C151E5CC();
          CGRect v59 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
          v59(v58, v45);
          sub_1BFEC0984((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
          sub_1BFEC0984((uint64_t)v23, (uint64_t (*)(void))sub_1BFEC0CE8);
          v59(v74, v45);
          uint64_t v54 = v71;
          sub_1BFEC0984((uint64_t)v52, (uint64_t (*)(void))sub_1BFEC0CE8);
          if (v77) {
            goto LABEL_37;
          }
LABEL_34:
          char v34 = 0;
          return v34 & 1;
        }
      }
      else
      {
        sub_1BFEC03F4((uint64_t)v15, (uint64_t)v26);
        if (v77(v72, 1, v80) != 1)
        {
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v79 + 32))(v76, v72, v80);
          sub_1BFE51A38(&qword_1EB85C8B8);
          int v69 = sub_1C151E5CC();
          uint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v79 + 8);
          uint64_t v72 = v79 + 8;
          v48(v76, v80);
          sub_1BFEC0984((uint64_t)v29, (uint64_t (*)(void))sub_1BFEC0CE8);
          uint64_t v49 = (uint64_t)v32;
          char v46 = v77;
          sub_1BFEC0984(v49, (uint64_t (*)(void))sub_1BFEC0CE8);
          char v50 = v26;
          uint64_t v45 = v80;
          v48(v50, v80);
          sub_1BFEC0984((uint64_t)v15, (uint64_t (*)(void))sub_1BFEC0CE8);
          if ((v69 & 1) == 0) {
            goto LABEL_34;
          }
          goto LABEL_27;
        }
        sub_1BFEC0984((uint64_t)v29, (uint64_t (*)(void))sub_1BFEC0CE8);
        sub_1BFEC0984((uint64_t)v32, (uint64_t (*)(void))sub_1BFEC0CE8);
        (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v26, v80);
      }
      uint64_t v47 = (uint64_t)v15;
LABEL_33:
      sub_1BFEC0984(v47, (uint64_t (*)(void))sub_1BFEC3EE8);
      goto LABEL_34;
    }
  }
  return v34 & 1;
}

uint64_t sub_1C0998170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static FeedGroupConfig<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(a3 + 32), *(void *)(a4 - 8));
}

uint64_t FeedGroupConfig.replacing(type:identifier:slots:paidVisibility:minNewsVersion:maxNewsVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:priority:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17 = v16;
  uint64_t v108 = a8;
  v121 = (void (*)(char *, uint64_t, uint64_t))a7;
  uint64_t v118 = a5;
  uint64_t v132 = a1;
  uint64_t v133 = a3;
  uint64_t v137 = a2;
  uint64_t v115 = a9;
  uint64_t v20 = *(void *)(a16 + 16);
  uint64_t v21 = sub_1C151FD8C();
  uint64_t v129 = *(void *)(v21 - 8);
  uint64_t v130 = v21;
  MEMORY[0x1F4188790](v21);
  v128 = (char *)&v105 - v22;
  uint64_t v131 = v20;
  uint64_t v127 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v23);
  v114 = (char *)&v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v107 = (uint64_t)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v136 = (uint64_t)&v105 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v120 = (uint64_t)&v105 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v135 = (uint64_t)&v105 - v32;
  uint64_t v33 = *(void *)(a16 - 8);
  MEMORY[0x1F4188790](v34);
  v126 = (char *)&v105 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v125 = (uint64_t)&v105 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v124 = (uint64_t)&v105 - v39;
  MEMORY[0x1F4188790](v40);
  v123 = (char *)&v105 - v41;
  MEMORY[0x1F4188790](v42);
  v109 = (char *)&v105 - v43;
  MEMORY[0x1F4188790](v44);
  v106 = (char *)&v105 - v45;
  MEMORY[0x1F4188790](v46);
  v119 = (char *)&v105 - v47;
  MEMORY[0x1F4188790](v48);
  v117 = (char *)&v105 - v49;
  MEMORY[0x1F4188790](v50);
  unint64_t v52 = (char *)&v105 - v51;
  MEMORY[0x1F4188790](v53);
  objc_super v55 = (char *)&v105 - v54;
  MEMORY[0x1F4188790](v56);
  CGRect v58 = (char *)&v105 - v57;
  __n128 v60 = MEMORY[0x1F4188790](v59);
  int v62 = (uint64_t *)((char *)&v105 - v61);
  int v116 = *a6;
  int v122 = *a14;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v33 + 16);
  uint64_t v138 = v17;
  v63((char *)&v105 - v61, v17, a16, v60);
  if (v137)
  {
    uint64_t v113 = v137;
  }
  else
  {
    uint64_t v132 = *v62;
    uint64_t v113 = v62[1];
    swift_bridgeObjectRetain();
  }
  unint64_t v64 = *(void (**)(uint64_t *, uint64_t))(v33 + 8);
  swift_bridgeObjectRetain();
  uint64_t v137 = v33 + 8;
  v64(v62, a16);
  uint64_t v65 = v138;
  ((void (*)(char *, uint64_t, uint64_t))v63)(v58, v138, a16);
  if (a4)
  {
    uint64_t v112 = a4;
  }
  else
  {
    uint64_t v66 = *((void *)v58 + 3);
    uint64_t v133 = *((void *)v58 + 2);
    uint64_t v112 = v66;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v64((uint64_t *)v58, a16);
  uint64_t v67 = *(void *)(v65 + 40);
  uint64_t v111 = *(void *)(v65 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v63)(v55, v65, a16);
  uint64_t v68 = v118;
  uint64_t v134 = v118;
  if (v118 == 1)
  {
    uint64_t v134 = *((void *)v55 + 6);
    swift_bridgeObjectRetain();
  }
  uint64_t v110 = v67;
  swift_bridgeObjectRetain();
  sub_1BFEF95A8(v68);
  v64((uint64_t *)v55, a16);
  ((void (*)(char *, uint64_t, uint64_t))v63)(v52, v65, a16);
  char v69 = v116;
  uint64_t v70 = v63;
  if (v116 == 4) {
    char v69 = v52[56];
  }
  v64((uint64_t *)v52, a16);
  char v140 = v69;
  uint64_t v71 = v120;
  sub_1BFEC03F4((uint64_t)v121, v120);
  uint64_t v72 = v117;
  v121 = (void (*)(char *, uint64_t, uint64_t))v70;
  ((void (*)(char *, uint64_t, uint64_t))v70)(v117, v65, a16);
  uint64_t v73 = v71;
  uint64_t v74 = sub_1C151928C();
  uint64_t v75 = *(void *)(v74 - 8);
  v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  int v77 = v76(v73, 1, v74);
  v105 = v64;
  if (v77 == 1)
  {
    sub_1BFEC03F4((uint64_t)&v72[*(int *)(a16 + 60)], v135);
    v64((uint64_t *)v72, a16);
    sub_1BFEC0984(v73, (uint64_t (*)(void))sub_1BFEC0CE8);
  }
  else
  {
    v64((uint64_t *)v72, a16);
    uint64_t v78 = v135;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v135, v73, v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v78, 0, 1, v74);
  }
  uint64_t v79 = v107;
  uint64_t v80 = v121;
  sub_1BFEC03F4(v108, v107);
  v81 = v119;
  v80(v119, v138, a16);
  if (v76(v79, 1, v74) == 1)
  {
    sub_1BFEC03F4((uint64_t)&v81[*(int *)(a16 + 64)], v136);
    v82 = v81;
    v83 = (void (*)(char *, uint64_t))v105;
    v105((uint64_t *)v82, a16);
    sub_1BFEC0984(v79, (uint64_t (*)(void))sub_1BFEC0CE8);
  }
  else
  {
    v84 = v81;
    v83 = (void (*)(char *, uint64_t))v105;
    v105((uint64_t *)v84, a16);
    uint64_t v85 = v136;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v136, v79, v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v85, 0, 1, v74);
  }
  uint64_t v86 = v138;
  v87 = v109;
  v88 = v106;
  v80(v106, v138, a16);
  if (a10)
  {
    v121 = (void (*)(char *, uint64_t, uint64_t))a10;
  }
  else
  {
    v121 = *(void (**)(char *, uint64_t, uint64_t))&v88[*(int *)(a16 + 68)];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v83(v88, a16);
  v80(v87, v86, a16);
  if (a11)
  {
    uint64_t v120 = a11;
  }
  else
  {
    uint64_t v120 = *(void *)&v87[*(int *)(a16 + 72)];
    swift_bridgeObjectRetain();
  }
  uint64_t v89 = v124;
  swift_bridgeObjectRetain();
  v83(v87, a16);
  v90 = v123;
  v80(v123, v86, a16);
  if (a12)
  {
    uint64_t v124 = a12;
  }
  else
  {
    uint64_t v124 = *(void *)&v90[*(int *)(a16 + 76)];
    swift_bridgeObjectRetain();
  }
  uint64_t v91 = v125;
  swift_bridgeObjectRetain();
  v83(v90, a16);
  v80((char *)v89, v138, a16);
  if (a13)
  {
    uint64_t v125 = a13;
  }
  else
  {
    uint64_t v125 = *(void *)(v89 + *(int *)(a16 + 80));
    swift_bridgeObjectRetain();
  }
  uint64_t v92 = v129;
  swift_bridgeObjectRetain();
  v83((char *)v89, a16);
  v80((char *)v91, v138, a16);
  if (v122 == 2) {
    char v93 = *(unsigned char *)(v91 + *(int *)(a16 + 84));
  }
  else {
    char v93 = v122 & 1;
  }
  uint64_t v94 = v111;
  v83((char *)v91, a16);
  char v139 = v93;
  v95 = v128;
  uint64_t v96 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v128, a15, v130);
  v97 = v126;
  v80(v126, v138, a16);
  v98 = v95;
  uint64_t v99 = v127;
  uint64_t v100 = v131;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v98, 1, v131) == 1)
  {
    v101 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
    uint64_t v102 = (uint64_t)v114;
    v101(v114, &v97[*(int *)(a16 + 88)], v100);
    v83(v97, a16);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v98, v96);
  }
  else
  {
    v83(v97, a16);
    v103 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
    uint64_t v102 = (uint64_t)v114;
    v103(v114, v98, v100);
  }
  return FeedGroupConfig.init(type:identifier:kindIdentifier:slots:paidVisibility:minNewsVersion:maxNewsVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:priority:data:)(v132, v113, v133, v112, v94, v110, v134, &v140, v115, v135, v136, (uint64_t)v121, v120, v124, v125, &v139, v102, v100);
}

unint64_t sub_1C0998CF0()
{
  unint64_t result = qword_1EB85C998[0];
  if (!qword_1EB85C998[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB85C998);
  }
  return result;
}

unint64_t sub_1C0998D44()
{
  unint64_t result = qword_1EB85C8C8;
  if (!qword_1EB85C8C8)
  {
    sub_1BFEC0CE8(255);
    sub_1BFE51A38(&qword_1EB85C8B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C8C8);
  }
  return result;
}

unint64_t sub_1C0998DD0()
{
  unint64_t result = qword_1EB85B2B8;
  if (!qword_1EB85B2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B2B8);
  }
  return result;
}

uint64_t dispatch thunk of FeedGroupConfigType.slots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedGroupConfigType.expandable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedGroupConfigType.dataKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedGroupConfigType.minAppVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeedGroupConfigType.maxAppVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedGroupConfigType.allowedSegmentSetIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedGroupConfigType.blockedSegmentSetIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FeedGroupConfigType.allowedPlatforms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeedGroupConfigType.blockedPlatforms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FeedGroupConfigType.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t *sub_1C0998EEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v7 + 64);
  }
  else {
    size_t v9 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v12
       + 9
       + ((((((((v9 + 7 + ((v9 + v8 + ((v8 + 57) & ~v8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + *(void *)(v11 + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = v15 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16));
    swift_retain();
  }
  else
  {
    size_t v45 = v9 + v8;
    size_t v46 = v9 + 7;
    uint64_t v48 = v12 + 9;
    uint64_t v49 = *(void *)(v10 - 8);
    uint64_t v50 = v10;
    uint64_t v51 = a1;
    uint64_t v17 = ~v8;
    uint64_t v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    uint64_t v19 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    uint64_t v47 = v6;
    v19[1] = v20[1];
    uint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v22;
    v21[1] = v22[1];
    unint64_t v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v23 = *(void *)v24;
    *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
    __dst = (void *)((v23 + v8 + 9) & ~v8);
    uint64_t v25 = (const void *)((v24 + v8 + 9) & ~v8);
    uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v25, 1, v47))
    {
      memcpy(__dst, v25, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dst, v25, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v47);
    }
    uint64_t v29 = ~v12;
    uint64_t v30 = (void *)(((unint64_t)__dst + v45) & v17);
    uint64_t v31 = (const void *)(((unint64_t)v25 + v45) & v17);
    if (v27(v31, 1, v47))
    {
      memcpy(v30, v31, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v30, v31, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v47);
    }
    uint64_t v32 = (void *)(((unint64_t)v30 + v46) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = (void *)(((unint64_t)v31 + v46) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v32 = *v33;
    uint64_t v34 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v35 = (void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v34 = *v35;
    uint64_t v36 = (void *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v37 = (void *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v36 = *v37;
    unint64_t v38 = ((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v38 = *(void *)v39;
    *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
    unint64_t v40 = (v48 + v38) & v29;
    unint64_t v41 = (v48 + v39) & v29;
    uint64_t v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v49 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v40, v41, v50);
    return v51;
  }
  return (uint64_t *)v16;
}

void *sub_1C09992E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v39 = a1;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = v13 + 9 + v9;
  uint64_t v37 = ~v13;
  unint64_t v15 = v13 + 9 + v10;
  uint64_t v16 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v12 + 48);
  int v17 = v16(v14 & ~v13, 1, v11);
  int v18 = v16(v15 & ~v13, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))(v14 & ~v13, v15 & ~v13, v11);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14 & ~v13, 0, 1, v11);
      goto LABEL_12;
    }
    int v19 = *(_DWORD *)(v12 + 84);
    size_t v20 = *(void *)(v12 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 24))(v14 & ~v13, v15 & ~v13, v11);
      goto LABEL_12;
    }
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v14 & ~v13, v11);
    int v19 = *(_DWORD *)(v12 + 84);
    size_t v20 = *(void *)(v12 + 64);
  }
  if (v19) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  memcpy((void *)(v14 & ~v13), (const void *)(v15 & ~v13), v21);
LABEL_12:
  if (*(_DWORD *)(v12 + 84)) {
    size_t v22 = *(void *)(v12 + 64);
  }
  else {
    size_t v22 = *(void *)(v12 + 64) + 1;
  }
  unint64_t v23 = (char *)(((v14 | v13) + v22) & v37);
  unint64_t v24 = (char *)(((v15 | v13) + v22) & v37);
  int v25 = v16((unint64_t)v23, 1, v11);
  int v26 = v16((unint64_t)v24, 1, v11);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v23, v24, v11);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
    goto LABEL_20;
  }
  if (v26)
  {
LABEL_20:
    memcpy(v23, v24, v22);
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v23, v24, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
LABEL_21:
  unint64_t v27 = (unint64_t)&v23[v22 + 7];
  unint64_t v28 = (unint64_t)&v24[v22 + 7];
  unint64_t v29 = (v28 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v27 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v28 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 &= 0xFFFFFFFFFFFFFFF8;
  v29 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = (void *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)((v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v33 = *(void *)v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  uint64_t v35 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v35 + 24))((*(unsigned __int8 *)(v35 + 80) + 9 + v33) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80), (*(unsigned __int8 *)(v35 + 80) + 9 + v34) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  return v39;
}

_OWORD *sub_1C0999714(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  unsigned int v3 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v3 = *v4;
  uint64_t v5 = (_OWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  unint64_t v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = v11 + 9 + v7;
  unint64_t v13 = v11 + 9 + v8;
  uint64_t v30 = ~v11;
  uint64_t v31 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v31(v13 & ~v11, 1, v9))
  {
    int v14 = *(_DWORD *)(v10 + 84);
    size_t v15 = *(void *)(v10 + 64);
    if (v14) {
      size_t v16 = *(void *)(v10 + 64);
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy((void *)(v12 & ~v11), (const void *)(v13 & ~v11), v16);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v12 & ~v11, v13 & ~v11, v9);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v10 + 56))(v12 & ~v11, 0, 1, v9);
    int v14 = *(_DWORD *)(v10 + 84);
    size_t v15 = *(void *)(v10 + 64);
  }
  if (v14) {
    size_t v17 = v15;
  }
  else {
    size_t v17 = v15 + 1;
  }
  int v18 = (void *)(((v12 | v11) + v17) & v30);
  int v19 = (const void *)(((v13 | v11) + v17) & v30);
  if (v31((unint64_t)v19, 1, v9))
  {
    memcpy(v18, v19, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v18, v19, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  size_t v20 = (void *)(((unint64_t)v18 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v21 = (void *)(((unint64_t)v19 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v20 = *v21;
  size_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v22 = *v23;
  unint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v24 = *v25;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v28 + 32))((*(unsigned __int8 *)(v28 + 80) + 9 + v26) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80), (*(unsigned __int8 *)(v28 + 80) + 9 + v27) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  return a1;
}

void *sub_1C09999C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  unint64_t v40 = a1;
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRelease();
  unint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  unint64_t v15 = v14 + 9 + v10;
  uint64_t v38 = ~v14;
  unint64_t v16 = v14 + 9 + v11;
  size_t v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48);
  int v18 = v17(v15 & ~v14, 1, v12);
  int v19 = v17(v16 & ~v14, 1, v12);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(v15 & ~v14, v16 & ~v14, v12);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15 & ~v14, 0, 1, v12);
      goto LABEL_12;
    }
    int v20 = *(_DWORD *)(v13 + 84);
    size_t v21 = *(void *)(v13 + 64);
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(v15 & ~v14, v16 & ~v14, v12);
      goto LABEL_12;
    }
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15 & ~v14, v12);
    int v20 = *(_DWORD *)(v13 + 84);
    size_t v21 = *(void *)(v13 + 64);
  }
  if (v20) {
    size_t v22 = v21;
  }
  else {
    size_t v22 = v21 + 1;
  }
  memcpy((void *)(v15 & ~v14), (const void *)(v16 & ~v14), v22);
LABEL_12:
  if (*(_DWORD *)(v13 + 84)) {
    size_t v23 = *(void *)(v13 + 64);
  }
  else {
    size_t v23 = *(void *)(v13 + 64) + 1;
  }
  unint64_t v24 = (char *)(((v15 | v14) + v23) & v38);
  int v25 = (const void *)(((v16 | v14) + v23) & v38);
  int v26 = v17((unint64_t)v24, 1, v12);
  int v27 = v17((unint64_t)v25, 1, v12);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, const void *, uint64_t))(v13 + 40))(v24, v25, v12);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v12);
    goto LABEL_20;
  }
  if (v27)
  {
LABEL_20:
    memcpy(v24, v25, v23);
    goto LABEL_21;
  }
  (*(void (**)(char *, const void *, uint64_t))(v13 + 32))(v24, v25, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v12);
LABEL_21:
  unint64_t v28 = (unint64_t)&v24[v23 + 7];
  unint64_t v29 = (void *)(((unint64_t)v25 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v28 & 0xFFFFFFFFFFFFFFF8) = *v29;
  unint64_t v30 = (v28 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v30 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v30 = *v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = (void *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  swift_bridgeObjectRelease();
  unint64_t v34 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v34 = *(void *)v35;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v36 + 40))((*(unsigned __int8 *)(v36 + 80) + 9 + v34) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80), (*(unsigned __int8 *)(v36 + 80) + 9 + v35) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  return v40;
}

uint64_t sub_1C0999DAC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1C151928C() - 8);
  uint64_t v7 = v6;
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  if (v8) {
    unsigned int v10 = v8 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = *(void *)(v9 + 64);
  if (v10 <= v11) {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v16 = v10;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v8) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v13 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v18 + v12;
  uint64_t v20 = v18 + 7;
  uint64_t v21 = v14 + 9;
  if (a2 > v17)
  {
    uint64_t v22 = ((v21
          + ((((((((v20 + ((v19 + ((v12 + 57) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
        + v15;
    char v23 = 8 * v22;
    if (v22 > 3) {
      goto LABEL_16;
    }
    unsigned int v25 = ((a2 - v17 + ~(-1 << v23)) >> v23) + 1;
    if (HIWORD(v25))
    {
      int v24 = *(_DWORD *)((char *)a1 + v22);
      if (v24) {
        goto LABEL_23;
      }
    }
    else
    {
      if (v25 <= 0xFF)
      {
        if (v25 < 2) {
          goto LABEL_33;
        }
LABEL_16:
        int v24 = *((unsigned __int8 *)a1 + v22);
        if (!*((unsigned char *)a1 + v22)) {
          goto LABEL_33;
        }
LABEL_23:
        int v26 = (v24 - 1) << v23;
        if (v22 > 3) {
          int v26 = 0;
        }
        if (v22)
        {
          if (v22 <= 3) {
            int v27 = v22;
          }
          else {
            int v27 = 4;
          }
          switch(v27)
          {
            case 2:
              int v28 = *a1;
              break;
            case 3:
              int v28 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v28 = *(_DWORD *)a1;
              break;
            default:
              int v28 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v28 = 0;
        }
        return v17 + (v28 | v26) + 1;
      }
      int v24 = *(unsigned __int16 *)((char *)a1 + v22);
      if (*(unsigned __int16 *)((char *)a1 + v22)) {
        goto LABEL_23;
      }
    }
  }
LABEL_33:
  if ((v16 & 0x80000000) == 0)
  {
    unint64_t v29 = *((void *)a1 + 1);
    if (v29 >= 0xFFFFFFFF) {
      LODWORD(v29) = -1;
    }
    return (v29 + 1);
  }
  uint64_t v31 = ~v12;
  unint64_t v32 = ((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + v12
       + 9) & ~v12;
  if (v10 == v17)
  {
    if (v8 >= 2)
    {
      unsigned int v35 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v32);
      if (v35 >= 2) {
        return v35 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v33 = (v21
       + ((((((((v20 + ((v19 + v32) & v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14;
  unint64_t v34 = *(uint64_t (**)(unint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 48);
  return v34(v33, v11);
}

void sub_1C099A0C8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v8 = 0;
  uint64_t v9 = *(void *)(sub_1C151928C() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  uint64_t v13 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v9 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v13 + 80);
  if (v12 <= v14) {
    unsigned int v18 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v18 = v12;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  if (!v11) {
    ++v16;
  }
  uint64_t v20 = v16 + v15;
  uint64_t v21 = v16 + 7;
  unint64_t v22 = (((((((v16 + 7 + ((v16 + v15 + ((v15 + 57) & ~v15)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = v17 + 9;
  size_t v24 = ((v17 + 9 + v22) & ~v17) + *(void *)(v13 + 64);
  if (a3 <= v19) {
    goto LABEL_20;
  }
  if (v24 <= 3)
  {
    unsigned int v25 = ((a3 - v19 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v25))
    {
      int v8 = 4;
      if (v19 >= a2) {
        goto LABEL_28;
      }
      goto LABEL_21;
    }
    if (v25 >= 0x100) {
      int v8 = 2;
    }
    else {
      int v8 = v25 > 1;
    }
LABEL_20:
    if (v19 >= a2) {
      goto LABEL_28;
    }
    goto LABEL_21;
  }
  int v8 = 1;
  if (v19 >= a2)
  {
LABEL_28:
    uint64_t v29 = ~v15;
    uint64_t v30 = ~v17;
    switch(v8)
    {
      case 1:
        a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      case 2:
        *(_WORD *)&a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v24] = 0;
        goto LABEL_32;
      default:
LABEL_32:
        if (a2)
        {
LABEL_33:
          if ((v18 & 0x80000000) != 0)
          {
            unint64_t v31 = (((((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                 + v15
                 + 9) & v29;
            if (v12 == v19)
            {
              if (v11 >= 2)
              {
                unint64_t v32 = *(void (**)(unint64_t, void))(v10 + 56);
                v32(v31, (a2 + 1));
              }
            }
            else
            {
              unint64_t v33 = (v23
                   + ((((((((v21 + ((v20 + v31) & v29)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)) & v30;
              unint64_t v34 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 56);
              v34(v33, a2, v14);
            }
          }
          else if ((a2 & 0x80000000) != 0)
          {
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = (a2 - 1);
          }
        }
        break;
    }
    return;
  }
LABEL_21:
  unsigned int v26 = ~v19 + a2;
  if (v24 < 4)
  {
    int v27 = (v26 >> (8 * v24)) + 1;
    if (v24)
    {
      int v28 = v26 & ~(-1 << (8 * v24));
      bzero(a1, v24);
      if (v24 == 3)
      {
        *(_WORD *)a1 = v28;
        a1[2] = BYTE2(v28);
      }
      else if (v24 == 2)
      {
        *(_WORD *)a1 = v28;
      }
      else
      {
        *a1 = v28;
      }
    }
  }
  else
  {
    bzero(a1, v24);
    *(_DWORD *)a1 = v26;
    int v27 = 1;
  }
  switch(v8)
  {
    case 1:
      a1[v24] = v27;
      break;
    case 2:
      *(_WORD *)&a1[v24] = v27;
      break;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1C099A480);
    case 4:
      *(_DWORD *)&a1[v24] = v27;
      break;
    default:
      return;
  }
}

unsigned char *sub_1C099A4A8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C099A574);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

uint64_t sub_1C099A59C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C099A5B8()
{
  return 12;
}

void AdFeedGroup.paidVisibility.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

double AdFeedGroup.rankMultiplier.getter()
{
  return 1.0;
}

unint64_t AdFeedGroup.personalizingScoreProfiles.getter()
{
  return sub_1BFE52C2C(MEMORY[0x1E4FBC860]);
}

void AdFeedGroup.repooling.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

unint64_t sub_1C099A5EC()
{
  return sub_1BFE52C2C(MEMORY[0x1E4FBC860]);
}

double sub_1C099A5F8()
{
  return 1.0;
}

uint64_t sub_1C099A600()
{
  return 25665;
}

uint64_t AdFeedGroup.debugName.getter()
{
  return 25665;
}

uint64_t AdFeedGroup.debugTitle.getter()
{
  return 0;
}

unint64_t sub_1C099A624(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C099A654();
  unint64_t result = sub_1C099A6A8();
  *(void *)(a1 + 24) = result;
  return result;
}

unint64_t sub_1C099A654()
{
  unint64_t result = qword_1EA1A1990;
  if (!qword_1EA1A1990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1990);
  }
  return result;
}

unint64_t sub_1C099A6A8()
{
  unint64_t result = qword_1EA1A1998;
  if (!qword_1EA1A1998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1998);
  }
  return result;
}

uint64_t static FormatActivityItemsConfiguration.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if (*a1)
  {
    if ((*a2 & 1) == 0) {
      return 0;
    }
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1C099A720(uint64_t a1)
{
  unint64_t result = sub_1C099A748();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C099A748()
{
  unint64_t result = qword_1EA1A19A0;
  if (!qword_1EA1A19A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A19A0);
  }
  return result;
}

unint64_t sub_1C099A79C(void *a1)
{
  a1[1] = sub_1C00691C4();
  a1[2] = sub_1C099A7D4();
  unint64_t result = sub_1C099A828();
  a1[3] = result;
  return result;
}

unint64_t sub_1C099A7D4()
{
  unint64_t result = qword_1EB85F1A0;
  if (!qword_1EB85F1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F1A0);
  }
  return result;
}

unint64_t sub_1C099A828()
{
  unint64_t result = qword_1EA1A19A8;
  if (!qword_1EA1A19A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A19A8);
  }
  return result;
}

uint64_t sub_1C099A87C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatActivityItemsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C099A894(void *a1)
{
  return FormatActivityItemsConfiguration.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatActivityItemsConfiguration()
{
  return &type metadata for FormatActivityItemsConfiguration;
}

uint64_t LayeredMediaLayerProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t LayeredMediaLayerProcessor.init()()
{
  return v0;
}

uint64_t LayeredMediaLayerProcessor.deinit()
{
  return v0;
}

uint64_t LayeredMediaLayerProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed26LayeredMediaLayerProcessorC7processySo7UIImageCSg5TeaUI25ProcessedImageRequestType_pF_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151FB0C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFC66384(a1, (uint64_t)v13);
  sub_1BFD05974();
  type metadata accessor for LayeredMediaLayerProcessorRequest();
  if (!swift_dynamicCast()) {
    return 0;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v12 + 64), *(void *)(v12 + 88));
  uint64_t result = sub_1C151A71C();
  if (v7)
  {
    id v8 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    uint64_t v9 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v8, sel_initWithContentsOfFile_, v9);

    if (v10)
    {
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD940], v2);
      id v11 = v10;
      id v10 = (id)sub_1C151FAFC();
      swift_release();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      swift_release();
    }
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t method lookup function for LayeredMediaLayerProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaLayerProcessor);
}

uint64_t dispatch thunk of LayeredMediaLayerProcessor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1C099AB50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1F4188790](v9);
  id v11 = (unsigned __int8 *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C099BB70(v2, (uint64_t)v11);
  uint64_t result = swift_getEnumCaseMultiPayload();
  uint64_t v13 = 0x8000000000000000;
  switch((int)result)
  {
    case 1:
      sub_1C099BBD4((uint64_t)v11, (uint64_t)v8);
      uint64_t v13 = sub_1BFC5F60C(a1);
      uint64_t result = sub_1C099BC9C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      if (!v3) {
        goto LABEL_11;
      }
      return result;
    case 2:
      uint64_t v13 = *v11 | 0x4000000000000000;
      goto LABEL_11;
    case 3:
      goto LABEL_11;
    case 4:
      uint64_t v13 = 0x8000000000000001;
      goto LABEL_11;
    case 5:
      uint64_t v13 = 0x8000000000000002;
      goto LABEL_11;
    case 6:
      uint64_t v13 = 0x8000000000000008;
      goto LABEL_11;
    case 7:
      uint64_t v13 = 0x8000000000000003;
      goto LABEL_11;
    default:
      uint64_t v14 = *(void *)v11;
      uint64_t v15 = *((void *)v11 + 1);
      uint64_t v16 = *((void *)v11 + 2);
      int v26 = v11[25];
      unsigned int v17 = v11[24];
      uint64_t v21 = v14;
      uint64_t v22 = v15;
      uint64_t v23 = v16;
      char v24 = v17;
      char v25 = v26;
      uint64_t v20 = v14;
      sub_1C099B634(v14, v15, v16, v17, v26, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      uint64_t v13 = sub_1BFF5AB10(a1);
      uint64_t v18 = v14;
      LOBYTE(v14) = v26;
      sub_1C099B634(v18, v15, v16, v17, v26, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      uint64_t result = sub_1C099B634(v20, v15, v16, v17, v14, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      if (!v3) {
LABEL_11:
      }
        *a2 = v13;
      return result;
  }
}

uint64_t _s8NewsFeed20FormatItemNodeActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (unsigned __int8 *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v36 - v14;
  sub_1C099BC38();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v18[*(int *)(v19 + 56)];
  sub_1C099BB70(a1, (uint64_t)v18);
  sub_1C099BB70(a2, (uint64_t)v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C099BB70((uint64_t)v18, (uint64_t)v12);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1C099BC9C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
        goto LABEL_19;
      }
      sub_1C099BBD4((uint64_t)v20, (uint64_t)v6);
      char v26 = _s8NewsFeed20FormatCommandOpenURLO2eeoiySbAC_ACtFZ_0((uint64_t)v12, (uint64_t)v6);
      sub_1C099BC9C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      sub_1C099BC9C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      break;
    case 2u:
      sub_1C099BB70((uint64_t)v18, (uint64_t)v9);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_19;
      }
      char v26 = *v9 == *v20;
      int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      break;
    case 3u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      if (EnumCaseMultiPayload != 3) {
        goto LABEL_19;
      }
      goto LABEL_17;
    case 4u:
      int v29 = swift_getEnumCaseMultiPayload();
      int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      if (v29 != 4) {
        goto LABEL_19;
      }
      goto LABEL_17;
    case 5u:
      int v30 = swift_getEnumCaseMultiPayload();
      int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      if (v30 != 5) {
        goto LABEL_19;
      }
      goto LABEL_17;
    case 6u:
      int v31 = swift_getEnumCaseMultiPayload();
      int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      if (v31 != 6) {
        goto LABEL_19;
      }
      goto LABEL_17;
    case 7u:
      int v32 = swift_getEnumCaseMultiPayload();
      int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      if (v32 != 7) {
        goto LABEL_19;
      }
LABEL_17:
      char v26 = 1;
      break;
    default:
      sub_1C099BB70((uint64_t)v18, (uint64_t)v15);
      uint64_t v22 = *(void *)v15;
      uint64_t v21 = *((void *)v15 + 1);
      uint64_t v23 = *((void *)v15 + 2);
      unsigned int v24 = v15[24];
      char v25 = v15[25];
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1C099B634(v22, v21, v23, v24, v25, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
LABEL_19:
        char v26 = 0;
        int v27 = (uint64_t (*)(void))sub_1C099BC38;
      }
      else
      {
        uint64_t v34 = *(void *)v20;
        uint64_t v37 = *((void *)v20 + 1);
        uint64_t v38 = v34;
        uint64_t v36 = *((void *)v20 + 2);
        int v39 = v20[25];
        unsigned int v35 = v20[24];
        v43[0] = v22;
        v43[1] = v21;
        v43[2] = v23;
        char v44 = v24;
        char v45 = v25;
        v40[0] = v34;
        v40[1] = v37;
        v40[2] = v36;
        char v41 = v35;
        char v42 = v39;
        char v26 = static FormatCommandBinding.== infix(_:_:)(v43, v40);
        sub_1C099B634(v38, v37, v36, v35, v39, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
        sub_1C099B634(v22, v21, v23, v24, v25, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
        int v27 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction;
      }
      break;
  }
  sub_1C099BC9C((uint64_t)v18, v27);
  return v26 & 1;
}

uint64_t sub_1C099B2F4(uint64_t a1)
{
  uint64_t result = sub_1C099B3C4(&qword_1EA1A19B0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C099B338(void *a1)
{
  a1[1] = sub_1C099B3C4(&qword_1EB889860);
  a1[2] = sub_1C099B3C4(&qword_1EB866AC0);
  uint64_t result = sub_1C099B3C4(&qword_1EA1A19B8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C099B3C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatItemNodeAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatItemNodeAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for FormatCommandOpenURL();
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 2)
      {
        uint64_t v16 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v16;
        a1[2] = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v14 == 1)
        {
          uint64_t v15 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v15;
          a1[2] = *((void *)a2 + 2);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v17 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
          uint64_t v18 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(void *)&a2[*(int *)(v18 + 20)];
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = *(void *)a2;
      uint64_t v9 = *((void *)a2 + 1);
      uint64_t v10 = *((void *)a2 + 2);
      char v11 = a2[25];
      unsigned int v12 = a2[24];
      sub_1C099B634(v8, v9, v10, v12, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      *a1 = v8;
      a1[1] = v9;
      a1[2] = v10;
      *((unsigned char *)a1 + 24) = v12;
      *((unsigned char *)a1 + 25) = v11;
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1C099B634(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      uint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      uint64_t result = a7();
      break;
    case 6u:
      uint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      uint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *assignWithCopy for FormatItemNodeAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C099BC9C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for FormatCommandOpenURL();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v12 == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v13 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          uint64_t v14 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)a1 + *(int *)(v14 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = *a2;
      uint64_t v8 = a2[1];
      uint64_t v9 = a2[2];
      char v10 = *((unsigned char *)a2 + 25);
      unsigned int v11 = *((unsigned __int8 *)a2 + 24);
      sub_1C099B634(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      *a1 = v7;
      a1[1] = v8;
      a1[2] = v9;
      *((unsigned char *)a1 + 24) = v11;
      *((unsigned char *)a1 + 25) = v10;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *initializeWithTake for FormatItemNodeAction(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for FormatCommandOpenURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FormatItemNodeAction(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C099BC9C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for FormatCommandOpenURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v7 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C099BB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatItemNodeAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C099BBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCommandOpenURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C099BC38()
{
  if (!qword_1EA1A19C0[0])
  {
    type metadata accessor for FormatItemNodeAction();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_1EA1A19C0);
    }
  }
}

uint64_t sub_1C099BC9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C099BCFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = swift_projectBox();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v5(a2, v4, v3);
}

uint64_t FormatMerge.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  uint64_t v66 = a5;
  uint64_t v67 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v70 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v63 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (!v5)
  {
    unint64_t v64 = v9;
    uint64_t v65 = 0;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v14 = sub_1C1520EAC();
    char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v16 = sub_1C152070C();
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        uint64_t v18 = (unint64_t *)(v16 + 40);
        while (1)
        {
          unint64_t v19 = *v18;
          if (*v18 >= 4) {
            break;
          }
          v18 += 2;
          if (!--v17) {
            goto LABEL_7;
          }
        }
        uint64_t v27 = *(v18 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1C02570B4();
        swift_allocError();
        *(void *)uint64_t v28 = v27;
        *(void *)(v28 + 8) = v19;
        *(void *)(v28 + 16) = &unk_1F1B89160;
        *(_OWORD *)(v28 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1C0257108(v27, v19);
        goto LABEL_12;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    type metadata accessor for FormatMerge.CodingType();
    long long v71 = 0uLL;
    swift_getWitnessTable();
    uint64_t v20 = v65;
    sub_1C15206EC();
    if (v20)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v70 + 8))(v13, v11);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    uint64_t v21 = v72;
    long long v71 = xmmword_1C152C800;
    uint64_t v22 = v64;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v13, v11);
    uint64_t v23 = v21;
    uint64_t v24 = v67;
    switch(v23)
    {
      case 1:
        uint64_t v30 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v31, v22, a2);
        unint64_t v25 = v30 | 4;
        break;
      case 2:
        uint64_t v32 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v33, v22, a2);
        unint64_t v25 = v32 | 0x1000000000000000;
        break;
      case 3:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v35, v22, a2);
        unint64_t v36 = 0x1000000000000004;
        goto LABEL_37;
      case 4:
        uint64_t v37 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v38, v22, a2);
        unint64_t v25 = v37 | 0x2000000000000000;
        break;
      case 5:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v39, v22, a2);
        unint64_t v36 = 0x2000000000000004;
        goto LABEL_37;
      case 6:
        uint64_t v40 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v41, v22, a2);
        unint64_t v25 = v40 | 0x3000000000000000;
        break;
      case 7:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v42, v22, a2);
        unint64_t v36 = 0x3000000000000004;
        goto LABEL_37;
      case 8:
        uint64_t v43 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v44, v22, a2);
        unint64_t v25 = v43 | 0x4000000000000000;
        break;
      case 9:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v45, v22, a2);
        unint64_t v36 = 0xB000000000000000;
        goto LABEL_37;
      case 10:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v46, v22, a2);
        unint64_t v36 = 0x4000000000000004;
        goto LABEL_37;
      case 11:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v47, v22, a2);
        unint64_t v36 = 0x5000000000000000;
        goto LABEL_37;
      case 12:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v48, v22, a2);
        unint64_t v36 = 0x5000000000000004;
        goto LABEL_37;
      case 13:
        uint64_t v49 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v50, v22, a2);
        unint64_t v25 = v49 | 0x8000000000000000;
        break;
      case 14:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v51, v22, a2);
        unint64_t v36 = 0x8000000000000004;
        goto LABEL_37;
      case 15:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v52, v22, a2);
        unint64_t v36 = 0x9000000000000000;
        goto LABEL_37;
      case 16:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v53, v22, a2);
        unint64_t v36 = 0x9000000000000004;
        goto LABEL_37;
      case 17:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v54, v22, a2);
        unint64_t v36 = 0xA000000000000000;
        goto LABEL_37;
      case 18:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v55, v22, a2);
        unint64_t v36 = 0xA000000000000004;
        goto LABEL_37;
      case 19:
        uint64_t v56 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v57, v22, a2);
        unint64_t v25 = v56 | 0x6000000000000000;
        break;
      case 20:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v58, v22, a2);
        unint64_t v36 = 0x6000000000000004;
        goto LABEL_37;
      case 21:
        uint64_t v59 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v60, v22, a2);
        unint64_t v25 = v59 | 0x7000000000000000;
        break;
      case 22:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v61, v22, a2);
        unint64_t v36 = 0xB000000000000004;
        goto LABEL_37;
      case 23:
        uint64_t v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v62, v22, a2);
        unint64_t v36 = 0x7000000000000004;
LABEL_37:
        unint64_t v25 = v34 | v36;
        break;
      default:
        unint64_t v25 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v26, v22, a2);
        break;
    }
    *uint64_t v66 = v25;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatMerge.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v127 = a2;
  uint64_t v129 = *(void *)(a2 + 16);
  uint64_t v130 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](a1);
  v126 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v125 = (char *)&v106 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v124 = (char *)&v106 - v8;
  MEMORY[0x1F4188790](v9);
  v123 = (char *)&v106 - v10;
  MEMORY[0x1F4188790](v11);
  int v122 = (char *)&v106 - v12;
  MEMORY[0x1F4188790](v13);
  v121 = (char *)&v106 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v120 = (char *)&v106 - v16;
  MEMORY[0x1F4188790](v17);
  v119 = (char *)&v106 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v118 = (char *)&v106 - v20;
  MEMORY[0x1F4188790](v21);
  v117 = (char *)&v106 - v22;
  MEMORY[0x1F4188790](v23);
  int v116 = (char *)&v106 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v115 = (char *)&v106 - v26;
  MEMORY[0x1F4188790](v27);
  v114 = (char *)&v106 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v113 = (char *)&v106 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v112 = (char *)&v106 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v111 = (char *)&v106 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v110 = (char *)&v106 - v36;
  MEMORY[0x1F4188790](v37);
  v109 = (char *)&v106 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v108 = (char *)&v106 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v107 = (char *)&v106 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v106 - v44;
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)&v106 - v47;
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v106 - v50;
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v106 - v53;
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v132 = v55;
  uint64_t v133 = v56;
  MEMORY[0x1F4188790](v55);
  uint64_t v58 = (char *)&v106 - v57;
  unint64_t v59 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v131 = v58;
  sub_1C1520F0C();
  switch((v59 >> 59) & 0x1E | (v59 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v66 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v51, v66, v129);
      char v69 = 1;
      goto LABEL_35;
    case 2uLL:
      uint64_t v70 = swift_projectBox();
      uint64_t v72 = v129;
      uint64_t v71 = v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v48, v70, v129);
      char v135 = 2;
      long long v134 = 0uLL;
      type metadata accessor for FormatMerge.CodingType();
      swift_getWitnessTable();
      uint64_t v63 = v132;
      unint64_t v64 = v131;
      uint64_t v73 = v128;
      sub_1C152080C();
      if (!v73)
      {
        long long v134 = xmmword_1C152C800;
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v48, v72);
      return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v64, v63);
    case 3uLL:
      uint64_t v74 = swift_projectBox();
      uint64_t v76 = v129;
      uint64_t v75 = v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v45, v74, v129);
      char v135 = 3;
      long long v134 = 0uLL;
      type metadata accessor for FormatMerge.CodingType();
      swift_getWitnessTable();
      uint64_t v77 = v132;
      uint64_t v78 = v131;
      uint64_t v79 = v128;
      sub_1C152080C();
      if (!v79)
      {
        long long v134 = xmmword_1C152C800;
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v76);
      return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v78, v77);
    case 4uLL:
      uint64_t v80 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v107, v80, v129);
      char v69 = 4;
      goto LABEL_35;
    case 5uLL:
      uint64_t v81 = swift_projectBox();
      uint64_t v83 = v129;
      uint64_t v82 = v130;
      v84 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v108, v81, v129);
      char v135 = 5;
      long long v134 = 0uLL;
      type metadata accessor for FormatMerge.CodingType();
      swift_getWitnessTable();
      uint64_t v78 = v131;
      uint64_t v77 = v132;
      uint64_t v85 = v128;
      sub_1C152080C();
      if (!v85)
      {
        long long v134 = xmmword_1C152C800;
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v83);
      return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v78, v77);
    case 6uLL:
      uint64_t v87 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v109, v87, v129);
      char v69 = 6;
      goto LABEL_35;
    case 7uLL:
      uint64_t v88 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v110;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v110, v88, v129);
      char v69 = 7;
      goto LABEL_35;
    case 8uLL:
      uint64_t v89 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v111;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v111, v89, v129);
      char v69 = 8;
      goto LABEL_35;
    case 9uLL:
      uint64_t v90 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v113;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v113, v90, v129);
      char v69 = 10;
      goto LABEL_35;
    case 0xAuLL:
      uint64_t v91 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v114, v91, v129);
      char v69 = 11;
      goto LABEL_35;
    case 0xBuLL:
      uint64_t v92 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v115, v92, v129);
      char v69 = 12;
      goto LABEL_35;
    case 0xCuLL:
      uint64_t v93 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v122, v93, v129);
      char v69 = 19;
      goto LABEL_35;
    case 0xDuLL:
      uint64_t v94 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v123, v94, v129);
      char v69 = 20;
      goto LABEL_35;
    case 0xEuLL:
      uint64_t v95 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v124;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v124, v95, v129);
      char v69 = 21;
      goto LABEL_35;
    case 0xFuLL:
      uint64_t v96 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v126;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v126, v96, v129);
      char v69 = 23;
      goto LABEL_35;
    case 0x10uLL:
      uint64_t v97 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v116;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v116, v97, v129);
      char v69 = 13;
      goto LABEL_35;
    case 0x11uLL:
      uint64_t v98 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v117, v98, v129);
      char v69 = 14;
      goto LABEL_35;
    case 0x12uLL:
      uint64_t v99 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v118, v99, v129);
      char v69 = 15;
      goto LABEL_35;
    case 0x13uLL:
      uint64_t v100 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v119, v100, v129);
      char v69 = 16;
      goto LABEL_35;
    case 0x14uLL:
      uint64_t v101 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v120;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v120, v101, v129);
      char v69 = 17;
      goto LABEL_35;
    case 0x15uLL:
      uint64_t v102 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v121;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v121, v102, v129);
      char v69 = 18;
      goto LABEL_35;
    case 0x16uLL:
      uint64_t v103 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v112, v103, v129);
      char v69 = 9;
      goto LABEL_35;
    case 0x17uLL:
      uint64_t v104 = swift_projectBox();
      uint64_t v68 = v129;
      uint64_t v67 = v130;
      uint64_t v51 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v125, v104, v129);
      char v69 = 22;
LABEL_35:
      char v135 = v69;
      long long v134 = 0uLL;
      type metadata accessor for FormatMerge.CodingType();
      swift_getWitnessTable();
      uint64_t v63 = v132;
      unint64_t v64 = v131;
      uint64_t v105 = v128;
      sub_1C152080C();
      if (!v105)
      {
        long long v134 = xmmword_1C152C800;
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v68);
      break;
    default:
      uint64_t v60 = swift_projectBox();
      uint64_t v62 = v129;
      uint64_t v61 = v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v54, v60, v129);
      char v135 = 0;
      long long v134 = 0uLL;
      type metadata accessor for FormatMerge.CodingType();
      swift_getWitnessTable();
      uint64_t v63 = v132;
      unint64_t v64 = v131;
      uint64_t v65 = v128;
      sub_1C152080C();
      if (!v65)
      {
        long long v134 = xmmword_1C152C800;
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v62);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v64, v63);
}

uint64_t sub_1C099D530()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x18) {
    return 24;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C099D584(char a1)
{
  uint64_t result = 0x6E69746C697562;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C626169726176;
      break;
    case 2:
      uint64_t result = 0x6769666E6F63;
      break;
    case 3:
      uint64_t result = 0x49746E65746E6F63;
      break;
    case 4:
      uint64_t result = 0xD000000000000014;
      break;
    case 5:
      uint64_t result = 0x53746E65746E6F63;
      break;
    case 6:
      uint64_t result = 0x47746E65746E6F63;
      break;
    case 7:
      uint64_t result = 0x746E65746E6F63;
      break;
    case 8:
      uint64_t result = 0x6567616B636170;
      break;
    case 9:
      uint64_t result = 0x656C797473;
      break;
    case 10:
      unsigned int v3 = 1835365481;
      goto LABEL_21;
    case 11:
      uint64_t result = 0xD000000000000011;
      break;
    case 12:
      uint64_t result = 0x4E74657070696E73;
      break;
    case 13:
      uint64_t result = 0x70756F7267;
      break;
    case 14:
      uint64_t result = 0x697461726F636564;
      break;
    case 15:
      uint64_t result = 1701080942;
      break;
    case 16:
      uint64_t result = 1835365481;
      break;
    case 17:
      uint64_t result = 0x656D656C70707573;
      break;
    case 18:
      uint64_t result = 0x74657070696E73;
      break;
    case 19:
      unsigned int v3 = 1953459315;
LABEL_21:
      uint64_t result = v3 | 0x65646F4E00000000;
      break;
    case 20:
      uint64_t result = 0x4E736E6F6974706FLL;
      break;
    case 21:
      uint64_t result = 0x646F4E6B636F6C62;
      break;
    case 22:
      uint64_t result = 0x6B636F6C62;
      break;
    case 23:
      uint64_t result = 0x7261696C69787561;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C099D85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C099D8D0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C099D93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C099D9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C099DA1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C099D530();
  *a1 = result;
  return result;
}

uint64_t sub_1C099DA58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C099D584(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C099DA8C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C099DB00()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C099DB64@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return FormatMerge.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1C099DB88(void *a1, uint64_t a2)
{
  return FormatMerge.encode(to:)(a1, a2);
}

uint64_t FormatMerge.order.getter()
{
  unsigned int v1 = (*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  if (v1 > 0x12) {
    return 10;
  }
  else {
    return qword_1C1581480[v1];
  }
}

uint64_t FormatMerge.reverseOrder.getter()
{
  return 10 - FormatMerge.order.getter();
}

uint64_t static FormatMerge<>.== infix(_:_:)(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  MEMORY[0x1F4188790](v1);
  MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v3);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  v201 = (char *)&v167 - v7;
  MEMORY[0x1F4188790](v8);
  v200 = (char *)&v167 - v9;
  MEMORY[0x1F4188790](v10);
  v199 = (char *)&v167 - v11;
  MEMORY[0x1F4188790](v12);
  v198 = (char *)&v167 - v13;
  MEMORY[0x1F4188790](v14);
  v197 = (char *)&v167 - v15;
  MEMORY[0x1F4188790](v16);
  v196 = (char *)&v167 - v17;
  MEMORY[0x1F4188790](v18);
  v195 = (char *)&v167 - v19;
  MEMORY[0x1F4188790](v20);
  v194 = (char *)&v167 - v21;
  MEMORY[0x1F4188790](v22);
  v193 = (char *)&v167 - v23;
  MEMORY[0x1F4188790](v24);
  v192 = (char *)&v167 - v25;
  MEMORY[0x1F4188790](v26);
  v191 = (char *)&v167 - v27;
  MEMORY[0x1F4188790](v28);
  v190 = (char *)&v167 - v29;
  MEMORY[0x1F4188790](v30);
  v189 = (char *)&v167 - v31;
  MEMORY[0x1F4188790](v32);
  v188 = (char *)&v167 - v33;
  MEMORY[0x1F4188790](v34);
  v187 = (char *)&v167 - v35;
  MEMORY[0x1F4188790](v36);
  v186 = (char *)&v167 - v37;
  MEMORY[0x1F4188790](v38);
  v185 = (char *)&v167 - v39;
  MEMORY[0x1F4188790](v40);
  v184 = (char *)&v167 - v41;
  MEMORY[0x1F4188790](v42);
  v183 = (char *)&v167 - v43;
  MEMORY[0x1F4188790](v44);
  v182 = (char *)&v167 - v45;
  MEMORY[0x1F4188790](v46);
  v181 = (char *)&v167 - v47;
  MEMORY[0x1F4188790](v48);
  v180 = (char *)&v167 - v49;
  MEMORY[0x1F4188790](v50);
  v179 = (char *)&v167 - v51;
  MEMORY[0x1F4188790](v52);
  v178 = (char *)&v167 - v53;
  MEMORY[0x1F4188790](v54);
  v177 = (char *)&v167 - v55;
  MEMORY[0x1F4188790](v56);
  v176 = (char *)&v167 - v57;
  MEMORY[0x1F4188790](v58);
  v175 = (char *)&v167 - v59;
  MEMORY[0x1F4188790](v60);
  v174 = (char *)&v167 - v61;
  MEMORY[0x1F4188790](v62);
  v173 = (char *)&v167 - v63;
  MEMORY[0x1F4188790](v64);
  v172 = (char *)&v167 - v65;
  MEMORY[0x1F4188790](v66);
  v171 = (char *)&v167 - v67;
  MEMORY[0x1F4188790](v68);
  v170 = (char *)&v167 - v69;
  MEMORY[0x1F4188790](v70);
  v169 = (char *)&v167 - v71;
  MEMORY[0x1F4188790](v72);
  uint64_t v74 = (char *)&v167 - v73;
  MEMORY[0x1F4188790](v75);
  uint64_t v77 = (char *)&v167 - v76;
  MEMORY[0x1F4188790](v78);
  uint64_t v80 = (char *)&v167 - v79;
  MEMORY[0x1F4188790](v81);
  uint64_t v83 = (char *)&v167 - v82;
  MEMORY[0x1F4188790](v84);
  uint64_t v86 = (char *)&v167 - v85;
  MEMORY[0x1F4188790](v87);
  uint64_t v89 = (char *)&v167 - v88;
  MEMORY[0x1F4188790](v90);
  uint64_t v92 = (char *)&v167 - v91;
  MEMORY[0x1F4188790](v93);
  uint64_t v95 = (char *)&v167 - v94;
  MEMORY[0x1F4188790](v96);
  uint64_t v107 = (char *)&v167 - v106;
  unint64_t v110 = *v109;
  switch((*v108 >> 59) & 0x1E | (*v108 >> 2) & 1)
  {
    case 1:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 1) {
        goto LABEL_55;
      }
      uint64_t v119 = v103;
      uint64_t v120 = v97;
      uint64_t v168 = v100;
      uint64_t v121 = swift_projectBox();
      uint64_t v122 = swift_projectBox();
      v123 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
      v123(v92, v121, v120);
      v123(v89, v122, v120);
      swift_retain();
      swift_retain();
      char v116 = sub_1C151E5CC();
      uint64_t v124 = *(void (**)(char *, uint64_t))(v119 + 8);
      v124(v89, v120);
      v124(v92, v120);
      goto LABEL_54;
    case 2:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 2) {
        goto LABEL_55;
      }
      uint64_t v125 = v103;
      uint64_t v126 = v97;
      uint64_t v168 = v100;
      uint64_t v127 = swift_projectBox();
      uint64_t v128 = swift_projectBox();
      uint64_t v129 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 16);
      v129(v86, v127, v126);
      v129(v83, v128, v126);
      swift_retain();
      swift_retain();
      char v116 = sub_1C151E5CC();
      uint64_t v130 = *(void (**)(char *, uint64_t))(v125 + 8);
      v130(v83, v126);
      v130(v86, v126);
      goto LABEL_54;
    case 3:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 3) {
        goto LABEL_55;
      }
      uint64_t v131 = v103;
      uint64_t v132 = v97;
      uint64_t v168 = v100;
      uint64_t v133 = swift_projectBox();
      uint64_t v134 = swift_projectBox();
      char v135 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
      v135(v80, v133, v132);
      v135(v77, v134, v132);
      swift_retain();
      swift_retain();
      char v116 = sub_1C151E5CC();
      uint64_t v136 = *(void (**)(char *, uint64_t))(v131 + 8);
      v136(v77, v132);
      v136(v80, v132);
      goto LABEL_54;
    case 4:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 4) {
        goto LABEL_55;
      }
      uint64_t v137 = v103;
      uint64_t v112 = v97;
      uint64_t v168 = v100;
      uint64_t v138 = swift_projectBox();
      uint64_t v139 = swift_projectBox();
      char v140 = *(void (**)(char *, uint64_t, uint64_t))(v137 + 16);
      v140(v74, v138, v112);
      v141 = v169;
      v140(v169, v139, v112);
      swift_retain();
      swift_retain();
      char v116 = sub_1C151E5CC();
      v117 = *(void (**)(char *, uint64_t))(v137 + 8);
      v117(v141, v112);
      uint64_t v118 = v74;
      goto LABEL_12;
    case 5:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 5) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v144 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v170;
      v146(v170, v144, v143);
      v148 = v171;
      goto LABEL_52;
    case 6:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 6) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v149 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v172;
      v146(v172, v149, v143);
      v148 = v173;
      goto LABEL_52;
    case 7:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 7) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v150 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v174;
      v146(v174, v150, v143);
      v148 = v175;
      goto LABEL_52;
    case 8:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 8) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v151 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v176;
      v146(v176, v151, v143);
      v148 = v177;
      goto LABEL_52;
    case 9:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 9) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v152 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v178;
      v146(v178, v152, v143);
      v148 = v179;
      goto LABEL_52;
    case 0xALL:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0xA) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v153 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v180;
      v146(v180, v153, v143);
      v148 = v181;
      goto LABEL_52;
    case 0xBLL:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0xB) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v154 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v182;
      v146(v182, v154, v143);
      v148 = v183;
      goto LABEL_52;
    case 0xCLL:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0xC) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v155 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v184;
      v146(v184, v155, v143);
      v148 = v185;
      goto LABEL_52;
    case 0xDLL:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0xD) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v156 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v186;
      v146(v186, v156, v143);
      v148 = v187;
      goto LABEL_52;
    case 0xELL:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0xE) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v157 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v188;
      v146(v188, v157, v143);
      v148 = v189;
      goto LABEL_52;
    case 0xFLL:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0xF) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v158 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v190;
      v146(v190, v158, v143);
      v148 = v191;
      goto LABEL_52;
    case 0x10:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x10) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v159 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v192;
      v146(v192, v159, v143);
      v148 = v193;
      goto LABEL_52;
    case 0x11:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x11) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v160 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v194;
      v146(v194, v160, v143);
      v148 = v195;
      goto LABEL_52;
    case 0x12:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x12) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v161 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v196;
      v146(v196, v161, v143);
      v148 = v197;
      goto LABEL_52;
    case 0x13:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x13) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v162 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v198;
      v146(v198, v162, v143);
      v148 = v199;
      goto LABEL_52;
    case 0x14:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x14) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      uint64_t v163 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v147 = v200;
      v146(v200, v163, v143);
      v148 = v201;
      goto LABEL_52;
    case 0x15:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x15) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      v148 = v101;
      v147 = v102;
      goto LABEL_51;
    case 0x16:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x16) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      v148 = v98;
      v147 = v99;
      goto LABEL_51;
    case 0x17:
      if (((v110 >> 59) & 0x1E | (v110 >> 2) & 1) != 0x17) {
        goto LABEL_55;
      }
      uint64_t v142 = v103;
      uint64_t v143 = v97;
      uint64_t v168 = v100;
      v148 = v104;
      v147 = v105;
LABEL_51:
      uint64_t v164 = swift_projectBox();
      uint64_t v145 = swift_projectBox();
      v146 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v146(v147, v164, v143);
LABEL_52:
      v146(v148, v145, v143);
      swift_retain();
      swift_retain();
      char v116 = sub_1C151E5CC();
      v165 = *(void (**)(char *, uint64_t))(v142 + 8);
      v165(v148, v143);
      v165(v147, v143);
      goto LABEL_54;
    default:
      if ((v110 >> 59) & 0x1E | (v110 >> 2) & 1)
      {
LABEL_55:
        char v116 = 0;
      }
      else
      {
        uint64_t v111 = v103;
        uint64_t v112 = v97;
        uint64_t v168 = v100;
        uint64_t v113 = swift_projectBox();
        uint64_t v114 = swift_projectBox();
        uint64_t v115 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
        v115(v107, v113, v112);
        v115(v95, v114, v112);
        swift_retain();
        swift_retain();
        char v116 = sub_1C151E5CC();
        v117 = *(void (**)(char *, uint64_t))(v111 + 8);
        v117(v95, v112);
        uint64_t v118 = v107;
LABEL_12:
        v117(v118, v112);
LABEL_54:
        swift_release();
        swift_release();
      }
      return v116 & 1;
  }
}

uint64_t sub_1C099F180(uint64_t a1)
{
  return static FormatMerge<>.== infix(_:_:)(a1);
}

uint64_t FormatMerge<>.identifier.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *v1;
  sub_1C099BCFC(v6, (uint64_t)v5);
  uint64_t v7 = sub_1C151811C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1C099F280(uint64_t a1)
{
  return FormatMerge<>.identifier.getter(a1);
}

uint64_t type metadata accessor for FormatMerge.CodingType()
{
  return __swift_instantiateGenericMetadata();
}

void *assignWithCopy for FormatLayoutValue(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C099F2EC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x69 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 105);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x68) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1C099F348(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x68)
  {
    *(void *)uint64_t result = a2 - 105;
    if (a3 >= 0x69) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x69) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C099F398(void *a1)
{
  return (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
}

unint64_t *sub_1C099F3AC(unint64_t *result, uint64_t a2)
{
  *uint64_t result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatContentSizeCategoryValue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1C099F45C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *uint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C099F528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

uint64_t sub_1C099F550()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C099F56C()
{
  return 0x614D726574736F72;
}

uint64_t sub_1C099F588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x614D726574736F72 && a2 == 0xE900000000000070)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C099F62C(uint64_t a1)
{
  unint64_t v2 = sub_1C099F808();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C099F668(uint64_t a1)
{
  unint64_t v2 = sub_1C099F808();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsEventRoster.encode(to:)(void *a1)
{
  sub_1C099FAF8(0, &qword_1EA1A1A48, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C099F808();
  sub_1C1520F0C();
  v10[1] = v8;
  sub_1C099F85C();
  sub_1C099F8C4();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C099F808()
{
  unint64_t result = qword_1EA1A1A50;
  if (!qword_1EA1A1A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1A50);
  }
  return result;
}

void sub_1C099F85C()
{
  if (!qword_1EB86AE80)
  {
    type metadata accessor for SportsRoster();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86AE80);
    }
  }
}

unint64_t sub_1C099F8C4()
{
  unint64_t result = qword_1EB86AE90;
  if (!qword_1EB86AE90)
  {
    sub_1C099F85C();
    sub_1C099FBF0(&qword_1EB8659C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AE90);
  }
  return result;
}

uint64_t SportsEventRoster.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C099FAF8(0, &qword_1EA1A1A58, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C099F808();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C099F85C();
    sub_1C099FB5C();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C099FAF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C099F808();
    unint64_t v7 = a3(a1, &type metadata for SportsEventRoster.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C099FB5C()
{
  unint64_t result = qword_1EB86AEA0;
  if (!qword_1EB86AEA0)
  {
    sub_1C099F85C();
    sub_1C099FBF0(&qword_1EB8659C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AEA0);
  }
  return result;
}

uint64_t sub_1C099FBF0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SportsRoster();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C099FC34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsEventRoster.init(from:)(a1, a2);
}

uint64_t sub_1C099FC4C(void *a1)
{
  return SportsEventRoster.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEventRoster()
{
  return &type metadata for SportsEventRoster;
}

unsigned char *storeEnumTagSinglePayload for SportsEventRoster.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C099FD10);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEventRoster.CodingKeys()
{
  return &type metadata for SportsEventRoster.CodingKeys;
}

unint64_t sub_1C099FD4C()
{
  unint64_t result = qword_1EA1A1A60;
  if (!qword_1EA1A1A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1A60);
  }
  return result;
}

unint64_t sub_1C099FDA4()
{
  unint64_t result = qword_1EA1A1A68;
  if (!qword_1EA1A1A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1A68);
  }
  return result;
}

unint64_t sub_1C099FDFC()
{
  unint64_t result = qword_1EA1A1A70[0];
  if (!qword_1EA1A1A70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A1A70);
  }
  return result;
}

uint64_t type metadata accessor for FeedItemFilterApplicator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C099FE68(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void *ShareAttributionViewItem.shareAttributionView.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t ShareAttributionViewItem.reuseIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShareAttributionViewItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*ShareAttributionViewItem.reuseIdentifier.modify())()
{
  return j__swift_endAccess;
}

id ShareAttributionViewItem.onReuse.getter()
{
  return *(id *)(v0 + 48);
}

Swift::Void __swiftcall ShareAttributionViewItem.prepareForReuse()()
{
  MEMORY[0x1C18C4390]();
  uint64_t v0 = (void *)sub_1C151C84C();
}

uint64_t ShareAttributionViewItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ShareAttributionViewItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1C09A006C()
{
  MEMORY[0x1C18C4390]();
  uint64_t v0 = (void *)sub_1C151C84C();
}

uint64_t sub_1C09A00A8()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C09A00F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C09A0150())()
{
  return j_j__swift_endAccess;
}

void sub_1C09A01A8()
{
  sub_1C09A0FC0(&qword_1EA1A1B10, (void (*)(void))type metadata accessor for ShareAttributionViewItem);
  JUMPOUT(0x1C18C4650);
}

uint64_t ShareAttributionViewReuseFactory.set(item:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFEDD8F4();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v12 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  char v13 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    sub_1C0977524(a1, (uint64_t)v8);
    uint64_t v15 = type metadata accessor for SharedItem();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C02E84DC((uint64_t)v8, a2, a3);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall ShareAttributionViewReuseFactory.resetItem(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  sub_1BFEDD8F4();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151E24C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v9 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  char v10 = sub_1C151E26C();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    sub_1C035425C(countAndFlagsBits, (uint64_t)object, (uint64_t)v5);
    swift_endAccess();
    sub_1BFEDD94C((uint64_t)v5, (uint64_t (*)(void))sub_1BFEDD8F4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t ShareAttributionViewReuseFactory.create(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a1;
  sub_1BFEDD8F4();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SharedItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151E24C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v15 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  char v16 = sub_1C151E26C();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  swift_beginAccess();
  uint64_t v17 = v3[7];
  if (!*(void *)(v17 + 16))
  {
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = v32;
  unint64_t v19 = sub_1BFEF2D8C(v32, a2);
  if (v20)
  {
    sub_1C0977524(*(void *)(v17 + 56) + *(void *)(v9 + 72) * v19, (uint64_t)v7);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_1C097768C((uint64_t)v7, (uint64_t)v11);
    swift_endAccess();
    uint64_t v22 = v3 + 2;
    uint64_t v24 = v3[5];
    uint64_t v23 = v3[6];
    __swift_project_boxed_opaque_existential_1(v22, v24);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, v24, v23);
    uint64_t v27 = v26;
    type metadata accessor for ShareAttributionViewItem();
    uint64_t v28 = (void *)swift_allocObject();
    sub_1BFD22278();
    v28[5] = 0;
    v28[4] = 0;
    id v30 = objc_allocWithZone(v29);
    swift_bridgeObjectRetain();
    v28[6] = objc_msgSend(v30, sel_init);
    v28[2] = v25;
    v28[3] = v27;
    swift_beginAccess();
    v28[4] = v18;
    v28[5] = a2;
    swift_bridgeObjectRelease();
    sub_1BFEDD94C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SharedItem);
    return (uint64_t)v28;
  }
LABEL_10:
  sub_1BFEDD94C((uint64_t)v7, (uint64_t (*)(void))sub_1BFEDD8F4);
  swift_endAccess();
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

uint64_t ShareAttributionViewReuseFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ShareAttributionViewReuseFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C09A0A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = ShareAttributionViewReuseFactory.create(for:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t SingletonShareAttributionViewReuseManager.__allocating_init(objectFactory:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = a1;
  sub_1C09A0DFC();
  swift_allocObject();
  swift_retain();
  *(void *)(v2 + 16) = sub_1C151B82C();
  return v2;
}

uint64_t SingletonShareAttributionViewReuseManager.init(objectFactory:)(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  sub_1C09A0DFC();
  swift_allocObject();
  swift_retain();
  *(void *)(v1 + 16) = sub_1C151B82C();
  return v1;
}

uint64_t SingletonShareAttributionViewReuseManager.dequeue(for:item:owner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFEDD8F4();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  ShareAttributionViewReuseFactory.set(item:for:)(a3, a1, a2);
  sub_1C151B84C();
  uint64_t v13 = v15[1];
  sub_1BFE4597C();
  *uint64_t v12 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  LOBYTE(a3) = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (a3)
  {
    swift_beginAccess();
    sub_1C035425C(a1, a2, (uint64_t)v8);
    swift_endAccess();
    sub_1BFEDD94C((uint64_t)v8, (uint64_t (*)(void))sub_1BFEDD8F4);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SingletonShareAttributionViewReuseManager.prepareForReuse(object:owner:)()
{
  return sub_1C151B83C();
}

uint64_t SingletonShareAttributionViewReuseManager.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C09A0DBC()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1C09A0DFC()
{
  if (!qword_1EB85F348)
  {
    type metadata accessor for ShareAttributionViewReuseFactory();
    sub_1C09A0FC0(&qword_1EB880768, (void (*)(void))type metadata accessor for ShareAttributionViewReuseFactory);
    unint64_t v0 = sub_1C151B85C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F348);
    }
  }
}

uint64_t sub_1C09A0E8C()
{
  return sub_1C09A0FC0(&qword_1EA1A1AF8, (void (*)(void))type metadata accessor for ShareAttributionViewItem);
}

uint64_t sub_1C09A0ED4()
{
  return sub_1C09A0FC0(&qword_1EA1A1B00, (void (*)(void))type metadata accessor for ShareAttributionViewItem);
}

uint64_t sub_1C09A0F1C()
{
  return sub_1C09A0FC0(&qword_1EA1A1B08, (void (*)(void))type metadata accessor for ShareAttributionViewItem);
}

uint64_t method lookup function for ShareAttributionViewItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShareAttributionViewItem);
}

uint64_t method lookup function for ShareAttributionViewReuseFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShareAttributionViewReuseFactory);
}

uint64_t method lookup function for SingletonShareAttributionViewReuseManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingletonShareAttributionViewReuseManager);
}

uint64_t dispatch thunk of SingletonShareAttributionViewReuseManager.__allocating_init(objectFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C09A0FC0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for DebugGroupLayoutContext(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for DebugGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_retain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for DebugGroupLayoutContext(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for DebugGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DebugGroupLayoutContext()
{
  return &type metadata for DebugGroupLayoutContext;
}

uint64_t LayeredMediaLoader.identifier.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t LayeredMediaLoader.load()()
{
  return sub_1C151911C();
}

uint64_t sub_1C09A1230(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = a5[5];
  uint64_t v7 = a5[6];
  __swift_project_boxed_opaque_existential_1(a5 + 2, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v19, v6, v7);
  uint64_t v8 = v19[0];
  uint64_t v9 = v19[1];
  uint64_t v10 = v19[2];
  uint64_t v11 = v19[3];
  uint64_t v12 = v19[4];
  uint64_t v13 = v19[5];
  uint64_t v14 = v19[6];
  uint64_t v15 = v19[8];
  char v16 = a1;
  LOBYTE(a1) = v20;
  uint64_t v18 = v19[7];
  v16(v19);
  sub_1C09A1858(v8, v9, v10, v11, v12, v13, v14, v18, v15, (char)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09A13B0(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C09A1230(a1, a2, a3, a4, v4);
}

void sub_1C09A13B8()
{
  if (!qword_1EB85C868)
  {
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C868);
    }
  }
}

uint64_t LayeredMediaLoader.syncLoad()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151E24C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v5 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
  char v6 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v8 = v1 + 2;
    uint64_t v10 = v1[5];
    uint64_t v9 = v1[6];
    __swift_project_boxed_opaque_existential_1(v8, v10);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t LayeredMediaLoader.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t LayeredMediaLoader.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C09A15C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1C09A161C()
{
  return sub_1C151911C();
}

uint64_t sub_1C09A1670()
{
  uint64_t v1 = sub_1C151E24C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = (void *)*v0;
  sub_1BFE4597C();
  *uint64_t v4 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBD8], v1);
  char v6 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if (v6)
  {
    uint64_t v8 = v5[5];
    uint64_t v9 = v5[6];
    __swift_project_boxed_opaque_existential_1(v5 + 2, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of LayeredMediaLoaderType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LayeredMediaLoaderType.load()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LayeredMediaLoaderType.syncLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for LayeredMediaLoader()
{
  return self;
}

uint64_t method lookup function for LayeredMediaLoader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaLoader);
}

uint64_t sub_1C09A1858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a10 < 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

NewsFeed::BundleSessionFamilyStatus_optional __swiftcall BundleSessionFamilyStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t BundleSessionFamilyStatus.rawValue.getter()
{
  uint64_t result = 0x656C626967696C65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x626967696C656E69;
      break;
    case 2:
      uint64_t result = 0x7265626D656DLL;
      break;
    case 3:
      uint64_t result = 0x657A696E6167726FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C09A199C()
{
  unint64_t result = qword_1EA1A1B18;
  if (!qword_1EA1A1B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1B18);
  }
  return result;
}

uint64_t sub_1C09A19F0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09A1AD0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09A1B98()
{
  return sub_1C1520E0C();
}

NewsFeed::BundleSessionFamilyStatus_optional sub_1C09A1C74(Swift::String *a1)
{
  return BundleSessionFamilyStatus.init(rawValue:)(*a1);
}

void sub_1C09A1C80(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x656C626967696C65;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000656CLL;
      uint64_t v3 = 0x626967696C656E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265626D656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x657A696E6167726FLL;
      a1[1] = 0xE900000000000072;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C09A1D20(uint64_t a1)
{
  unint64_t v2 = sub_1C09A1F28();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C09A1D74(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C09A1F28();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C09A1DD0(uint64_t a1)
{
  unint64_t v2 = sub_1C09A1F28();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

unsigned char *storeEnumTagSinglePayload for BundleSessionFamilyStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09A1EF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleSessionFamilyStatus()
{
  return &type metadata for BundleSessionFamilyStatus;
}

unint64_t sub_1C09A1F28()
{
  unint64_t result = qword_1EA1A1B20;
  if (!qword_1EA1A1B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1B20);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V25()
{
  return &type metadata for A12_V25;
}

uint64_t sub_1C09A1F8C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C09A653C(0, &qword_1EA1A1BD8, (uint64_t (*)(void))sub_1C09A64E8, (uint64_t)&type metadata for A12_V25.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09A64E8();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C09A65A4(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C09A21D4(uint64_t a1)
{
  unint64_t v2 = sub_1C09A64E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09A2210(uint64_t a1)
{
  unint64_t v2 = sub_1C09A64E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C09A224C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C09A6238(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C09A2294(void *a1)
{
  return sub_1C09A1F8C(a1);
}

uint64_t sub_1C09A22AC()
{
  sub_1C09A5E88();
  return sub_1C151798C();
}

uint64_t sub_1C09A2328@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C09A653C(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C09A23E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A12_V25;
  unint64_t v20 = sub_1C018638C();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A12_V25;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v31 = (void *)(v30 + 16);
  swift_beginAccess();
  uint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B83700, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F284(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B83728, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V25.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C09A65A4(&qword_1EA1A1B38, (void (*)(uint64_t))type metadata accessor for A12_V25.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C09A2B88@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v45 = sub_1C1517A9C();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v42 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A12_V25.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  *(void *)&long long v44 = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v56);
  sub_1BFC66384(v11 + 56, (uint64_t)v55);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v56, v14 + 16);
  sub_1BFC773DC(v55, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v54[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v54, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v60 = inited;
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v55);
  sub_1BFC66384(v15 + 56, (uint64_t)v54);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v55, v17 + 16);
  sub_1BFC773DC(v54, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v53[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v53, (uint64_t *)&v56);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  sub_1C00737F8();
  uint64_t v18 = sub_1C151ECCC();
  *(void *)(v18 + 16) = 2;
  sub_1BFC66384((uint64_t)&v56, v18 + 32);
  sub_1BFC773DC(&v56, v18 + 72);
  sub_1BFEB37F8(v18);
  uint64_t v19 = *(void *)(v10 + 16);
  sub_1BFC66384(v19 + 16, (uint64_t)v55);
  sub_1BFC66384(v19 + 56, (uint64_t)v54);
  double v20 = v12 * *(double *)(v19 + 96);
  uint64_t v21 = swift_initStackObject();
  sub_1BFC773DC(v55, v21 + 16);
  sub_1BFC773DC(v54, v21 + 56);
  *(double *)(v21 + 96) = v20;
  v53[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v53, (uint64_t *)&v56);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v21 + 16);
  __swift_destroy_boxed_opaque_existential_1(v21 + 56);
  uint64_t v22 = *(void *)(v2 + *(int *)(v5 + 28));
  uint64_t v23 = sub_1BFEB3714((uint64_t)&v56, *(void *)(v22 + 16) - 3);
  sub_1BFEB37F8(v23);
  uint64_t v24 = v60;
  v52[2] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C06472C0(v22, v24, (void (*)(char *, uint64_t))sub_1C09A5E14, (uint64_t)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v26 = *(void *)(v25 + 16);
  if (v26 >= 3) {
    uint64_t v27 = 3;
  }
  else {
    uint64_t v27 = *(void *)(v25 + 16);
  }
  uint64_t v28 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  unint64_t v29 = v25 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  uint64_t v30 = (2 * v26) | 1;
  uint64_t v31 = *MEMORY[0x1E4FAB6D8];
  uint64_t v32 = sub_1C151759C();
  uint64_t v33 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v42, v31, v32);
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v33, *MEMORY[0x1E4FAB8F0], v45);
  uint64_t v47 = v25;
  uint64_t v48 = v25;
  unint64_t v49 = v29;
  uint64_t v50 = v27;
  uint64_t v51 = v30;
  sub_1C09A5F68(0, &qword_1EA1A1B58, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1C1517BEC();
  sub_1C1517BFC();
  uint64_t v34 = swift_bridgeObjectRelease();
  long long v44 = v56;
  uint64_t v35 = v57;
  uint64_t v36 = v58;
  *(void *)&long long v56 = v25;
  *(void *)&v55[0] = v59;
  MEMORY[0x1F4188790](v34);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v56 = v37;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v38 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v46;
  *uint64_t v46 = 0;
  double result = *(double *)&v44;
  *(_OWORD *)(v39 + 8) = v44;
  *((void *)v39 + 3) = v35;
  *((void *)v39 + 4) = v36;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  *((void *)v39 + 5) = v38;
  *((void *)v39 + 6) = v41;
  return result;
}

uint64_t sub_1C09A327C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C09A334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  double v16 = (uint64_t *)&v20[-v15];
  uint64_t v26 = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 12;
  uint64_t *v16 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FABA10], v13);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C09A5F68(0, &qword_1EA1A1B78, MEMORY[0x1E4FAB6F0]);
  sub_1C09A5F24(&qword_1EA1A1B80, &qword_1EA1A1B78, v18);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1C09A3560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v70 = a6;
  uint64_t v69 = a5;
  uint64_t v68 = a4;
  uint64_t v67 = a3;
  uint64_t v79 = a2;
  uint64_t v66 = sub_1C09A5E34;
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v53 - v10);
  uint64_t v86 = a1;
  uint64_t v12 = sub_1C151729C();
  uint64_t v13 = swift_allocBox();
  unsigned int v77 = *MEMORY[0x1E4FAB4E8];
  uint64_t v74 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v76 = *(void (**)(uint64_t))(v14 + 104);
  uint64_t v78 = v14 + 104;
  v76(v15);
  *uint64_t v11 = v13;
  unsigned int v75 = *MEMORY[0x1E4FAB940];
  long long v72 = *(void (**)(uint64_t *))(v9 + 104);
  v72(v11);
  uint64_t v71 = v9 + 104;
  double v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09A5F68(0, &qword_1EA1A1B88, MEMORY[0x1E4FAB4D0]);
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C09A5F24(&qword_1EA1A1B90, &qword_1EA1A1B88, v16);
  sub_1C151738C();
  uint64_t v54 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v54(v11, v8);
  uint64_t v20 = v9 + 8;
  uint64_t v86 = a1;
  sub_1C0386118();
  uint64_t v22 = v21;
  uint64_t v23 = swift_allocBox();
  uint64_t v25 = (char *)v24 + *(int *)(v22 + 48);
  *uint64_t v24 = 7;
  uint64_t v26 = *MEMORY[0x1E4FAB8C8];
  uint64_t v27 = sub_1C1517A7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  *uint64_t v11 = v23;
  uint64_t v28 = v72;
  ((void (*)(uint64_t *, void, uint64_t))v72)(v11, *MEMORY[0x1E4FAB960], v8);
  uint64_t v85 = v79;
  uint64_t v73 = v19;
  uint64_t v59 = v18;
  sub_1C151731C();
  uint64_t v60 = v20;
  unint64_t v29 = v54;
  v54(v11, v8);
  uint64_t v30 = a1;
  uint64_t v86 = a1;
  uint64_t v31 = v74;
  uint64_t v32 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v76)(v33, v77, v31);
  *uint64_t v11 = v32;
  ((void (*)(uint64_t *, void, uint64_t))v28)(v11, v75, v8);
  sub_1C151738C();
  v29(v11, v8);
  uint64_t v34 = v29;
  uint64_t v86 = v30;
  uint64_t v35 = v30;
  unsigned int v65 = *MEMORY[0x1E4FABA28];
  v28(v11);
  sub_1C09A5FF4();
  uint64_t v64 = v36;
  sub_1C09A653C(0, &qword_1EA1A1BA0, (uint64_t (*)(void))v66, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v57 = v37;
  uint64_t v38 = *(unsigned __int8 *)(*(void *)(v37 - 8) + 80);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v66 = (unint64_t (*)())(((v38 + 32) & ~v38) + *(void *)(v39 + 72));
  uint64_t v40 = (v38 + 32) & ~v38;
  uint64_t v62 = v40;
  uint64_t v63 = v38 | 7;
  uint64_t v41 = swift_allocObject();
  long long v61 = xmmword_1C1529AE0;
  *(_OWORD *)(v41 + 16) = xmmword_1C1529AE0;
  unsigned int v55 = *MEMORY[0x1E4FAB638];
  uint64_t v42 = *(void (**)(void))(v39 + 104);
  uint64_t v56 = v39 + 104;
  uint64_t v58 = (void (*)(uint64_t, void, uint64_t))v42;
  v42(v41 + v40);
  uint64_t v84 = v79;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v43 = v34;
  v34(v11, v8);
  uint64_t v44 = v35;
  uint64_t v86 = v35;
  uint64_t v45 = v74;
  uint64_t v46 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v76)(v47, v77, v45);
  *uint64_t v11 = v46;
  uint64_t v48 = v8;
  uint64_t v49 = v8;
  uint64_t v50 = v72;
  ((void (*)(uint64_t *, void, uint64_t))v72)(v11, v75, v48);
  sub_1C151738C();
  v43(v11, v49);
  uint64_t v86 = v44;
  ((void (*)(uint64_t *, void, uint64_t))v50)(v11, v65, v49);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = v61;
  v58(v51 + v62, v55, v57);
  uint64_t v80 = v67;
  uint64_t v81 = v68;
  uint64_t v82 = v69;
  uint64_t v83 = v70;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v43)(v11, v49);
}

uint64_t sub_1C09A3D08(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v30 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB9E0], v12);
  if (*(void *)(a2 + 16))
  {
    sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v29 = KeyPath;
    uint64_t v18 = qword_1F1B89640;
    uint64_t v19 = (char *)v6 + v4[5];
    uint64_t v20 = *MEMORY[0x1E4FAB8C8];
    uint64_t v21 = sub_1C1517A7C();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v28 = v12;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v21);
    uint64_t v24 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = v18;
    *(uint64_t *)((char *)v6 + v4[6]) = 0;
    *(uint64_t *)((char *)v6 + v4[7]) = (uint64_t)v24;
    id v25 = v24;
    sub_1C04B9C70((uint64_t)v10, (uint64_t)v6);
    sub_1BFF1F284((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFF1F284((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C09A5F68(0, &qword_1EA1A1B88, MEMORY[0x1E4FAB4D0]);
    sub_1C09A5F24(&qword_1EA1A1B90, &qword_1EA1A1B88, v26);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C09A40F8(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09A5F68(0, &qword_1EA1A1B88, MEMORY[0x1E4FAB4D0]);
  sub_1C09A5F24(&qword_1EA1A1B90, &qword_1EA1A1B88, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C09A439C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09A5F68(0, &qword_1EA1A1B88, MEMORY[0x1E4FAB4D0]);
  sub_1C09A5F24(&qword_1EA1A1B90, &qword_1EA1A1B88, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C09A4974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09A5F68(0, &qword_1EA1A1B88, MEMORY[0x1E4FAB4D0]);
  sub_1C09A5F24(&qword_1EA1A1B90, &qword_1EA1A1B88, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

void sub_1C09A4F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v35 = a2;
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v26 - v12);
  uint64_t v14 = type metadata accessor for HeadlineViewLayout.Context(0) - 8;
  MEMORY[0x1F4188790](v14);
  int64_t v17 = a5 >> 1;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v17 != a4 && (a5 >> 1) - a4 == 3)
  {
    if (v17 > a4)
    {
      uint64_t v18 = *(void *)(v15 + 72);
      unsigned int v31 = *MEMORY[0x1E4FABA10];
      id v29 = (void (**)(uint64_t *, uint64_t))(v11 + 8);
      uint64_t v30 = (uint64_t (**)(uint64_t *, void, uint64_t))(v11 + 104);
      uint64_t v28 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_unknownObjectRetain();
      uint64_t v32 = v18;
      uint64_t v33 = a3;
      uint64_t v19 = a3 + v18 * a4;
      uint64_t v34 = v10;
      uint64_t v27 = a1;
      uint64_t v20 = (uint64_t)v28;
      do
      {
        sub_1BFF1AFA4(v19, v20, type metadata accessor for HeadlineViewLayout.Context);
        uint64_t v37 = a1;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = 4;
        *uint64_t v13 = v21;
        uint64_t v22 = (*v30)(v13, v31, v10);
        uint64_t v36 = &v26;
        MEMORY[0x1F4188790](v22);
        uint64_t v23 = v35;
        *(&v26 - 6) = v20;
        *(&v26 - 5) = v23;
        *(&v26 - 4) = a3;
        *(&v26 - 3) = a4;
        uint64_t v24 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C09A5F68(0, &qword_1EA1A1B88, MEMORY[0x1E4FAB4D0]);
        uint64_t v25 = sub_1C09A5F24(&qword_1EA1A1B90, &qword_1EA1A1B88, v24);
        a1 = v27;
        a3 = v33;
        uint64_t v10 = v34;
        sub_1C151734C();
        (*v29)(v13, v10);
        sub_1BFF1F284(v20, type metadata accessor for HeadlineViewLayout.Context);
        --v17;
        v19 += v32;
      }
      while (a4 != v17);
      swift_unknownObjectRelease();
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1C09A52CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v49 = a1;
  uint64_t v50 = a6;
  v41[1] = a3;
  uint64_t v43 = a2;
  uint64_t v45 = sub_1C1517A9C();
  uint64_t v42 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1C151794C();
  uint64_t v48 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v44 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (void *)((char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C09A653C(0, &qword_1EA1A1B70, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v41 - v20;
  uint64_t v52 = v49;
  v41[2] = swift_getKeyPath();
  uint64_t v22 = *MEMORY[0x1E4FABA28];
  uint64_t v46 = v19;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  uint64_t v49 = v18;
  v23(v21, v22, v18);
  uint64_t v24 = v51;
  uint64_t v25 = 0;
  int64_t v26 = (unint64_t)v50 >> 1;
  if ((unint64_t)v50 >> 1 != a5)
  {
    v41[0] = v16;
    uint64_t v16 = v14;
    uint64_t v50 = v21;
    swift_unknownObjectRetain();
    while (a5 < v26)
    {
      sub_1BFF1AFA4(a4 + *(void *)(v11 + 72) * a5, (uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v21 = *(char **)&v13[*(int *)(v10 + 20) + 32];
      sub_1BFF1F284((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      if ((v21 & 4) == 0)
      {
        swift_unknownObjectRelease();
        uint64_t v25 = qword_1F1B89668;
        goto LABEL_8;
      }
      if (v26 == ++a5)
      {
        swift_unknownObjectRelease();
        uint64_t v25 = 0;
LABEL_8:
        uint64_t v21 = v50;
        uint64_t v24 = v51;
        uint64_t v16 = (void *)v41[0];
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_9:
  a5 = v24;
  uint64_t v27 = (char *)v16 + v14[5];
  uint64_t v28 = *MEMORY[0x1E4FAB8C8];
  uint64_t v29 = sub_1C1517A7C();
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v27, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  unsigned int v31 = (void **)MEMORY[0x1E4FB27D0];
  void *v16 = v25;
  *(void *)((char *)v16 + v14[6]) = 0;
  uint64_t v32 = *v31;
  *(void *)((char *)v16 + v14[7]) = v32;
  uint64_t v33 = qword_1EB87CC48;
  id v34 = v32;
  if (v33 != -1) {
LABEL_12:
  }
    swift_once();
  swift_retain();
  uint64_t v35 = v44;
  sub_1C151709C();
  uint64_t v36 = swift_release();
  __n128 v37 = MEMORY[0x1F4188790](v36);
  v41[-4] = v43;
  v41[-3] = v16;
  unint64_t v40 = (unint64_t)v35;
  (*(void (**)(char *, void, uint64_t, __n128))(v42 + 104))(v47, *MEMORY[0x1E4FAB8F8], v45, v37);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v35, a5);
  sub_1BFF1F284((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v38 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09A5F68(0, &qword_1EA1A1B88, MEMORY[0x1E4FAB4D0]);
  sub_1C09A5F24(&qword_1EA1A1B90, &qword_1EA1A1B88, v38);
  unint64_t v40 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, v49);
}

uint64_t sub_1C09A5950@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V25.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C09A5A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C09A23E4(a1, a2, a3);
}

uint64_t sub_1C09A5A58()
{
  return sub_1C12BC2EC();
}

unint64_t sub_1C09A5A68(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C09A5A98();
  unint64_t result = sub_1C09A5AEC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C09A5A98()
{
  unint64_t result = qword_1EA1A1B28;
  if (!qword_1EA1A1B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1B28);
  }
  return result;
}

unint64_t sub_1C09A5AEC()
{
  unint64_t result = qword_1EA1A1B30;
  if (!qword_1EA1A1B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1B30);
  }
  return result;
}

uint64_t type metadata accessor for A12_V25.Bound()
{
  uint64_t result = qword_1EA1A1B40;
  if (!qword_1EA1A1B40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09A5B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C09A5BA0);
}

uint64_t sub_1C09A5BA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C09A5C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C09A5C64);
}

void *sub_1C09A5C64(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C09A5D0C()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C09A5DBC(uint64_t a1)
{
  uint64_t result = sub_1C09A65A4(&qword_1EA1A1B50, (void (*)(uint64_t))type metadata accessor for A12_V25.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09A5E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C09A327C(a1, a2, a3);
}

uint64_t sub_1C09A5E1C(uint64_t a1)
{
  return sub_1C09A5F0C(a1, sub_1C09A334C);
}

unint64_t sub_1C09A5E34()
{
  unint64_t result = qword_1EA1A1B60;
  if (!qword_1EA1A1B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1B60);
  }
  return result;
}

unint64_t sub_1C09A5E88()
{
  unint64_t result = qword_1EA1A1B68;
  if (!qword_1EA1A1B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1B68);
  }
  return result;
}

uint64_t sub_1C09A5EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C09A5950(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C09A5EE4()
{
  return swift_deallocObject();
}

uint64_t sub_1C09A5EF4(uint64_t a1)
{
  return sub_1C09A5F0C(a1, sub_1C09A3560);
}

uint64_t sub_1C09A5F0C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1C09A5F24(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C09A5F68(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C09A5F68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V25.Layout;
    v8[1] = &type metadata for A12_V25.Layout.Attributes;
    v8[2] = sub_1C09A5E34();
    v8[3] = sub_1C09A5E88();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C09A5FEC(uint64_t a1)
{
  return sub_1C09A3D08(a1, *(void *)(v1 + 16));
}

void sub_1C09A5FF4()
{
  if (!qword_1EA1A1B98)
  {
    sub_1C09A653C(255, &qword_1EA1A1BA0, (uint64_t (*)(void))sub_1C09A5E34, (uint64_t)&type metadata for A12_V25.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A1B98);
    }
  }
}

uint64_t sub_1C09A6084(uint64_t a1)
{
  return sub_1C09A40F8(a1, *(void *)(v1 + 16));
}

void sub_1C09A608C(uint64_t a1)
{
  sub_1C09A4F4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C09A6098(uint64_t a1)
{
  return sub_1C09A52CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(char **)(v1 + 48));
}

uint64_t sub_1C09A60A8(uint64_t a1)
{
  return sub_1C09A439C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09A60B0(uint64_t a1)
{
  return sub_1C09A4974(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V25.Layout.Attributes()
{
  return &type metadata for A12_V25.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V25.Layout()
{
  return &type metadata for A12_V25.Layout;
}

unint64_t sub_1C09A60DC()
{
  unint64_t result = qword_1EA1A1BA8;
  if (!qword_1EA1A1BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BA8);
  }
  return result;
}

unint64_t sub_1C09A6134()
{
  unint64_t result = qword_1EA1A1BB0;
  if (!qword_1EA1A1BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BB0);
  }
  return result;
}

unint64_t sub_1C09A618C()
{
  unint64_t result = qword_1EA1A1BB8;
  if (!qword_1EA1A1BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BB8);
  }
  return result;
}

unint64_t sub_1C09A61E4()
{
  unint64_t result = qword_1EA1A1BC0;
  if (!qword_1EA1A1BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BC0);
  }
  return result;
}

uint64_t sub_1C09A6238@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C09A653C(0, &qword_1EA1A1BC8, (uint64_t (*)(void))sub_1C09A64E8, (uint64_t)&type metadata for A12_V25.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09A64E8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C09A65A4(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C09A64E8()
{
  unint64_t result = qword_1EA1A1BD0;
  if (!qword_1EA1A1BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BD0);
  }
  return result;
}

void sub_1C09A653C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C09A65A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V25.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09A66B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V25.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V25.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C09A66F4()
{
  unint64_t result = qword_1EA1A1BE0;
  if (!qword_1EA1A1BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BE0);
  }
  return result;
}

unint64_t sub_1C09A674C()
{
  unint64_t result = qword_1EA1A1BE8;
  if (!qword_1EA1A1BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BE8);
  }
  return result;
}

unint64_t sub_1C09A67A4()
{
  unint64_t result = qword_1EA1A1BF0;
  if (!qword_1EA1A1BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1BF0);
  }
  return result;
}

uint64_t sub_1C09A67F8()
{
  return swift_initClassMetadata2();
}

char *sub_1C09A6840(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C151B01C();
  unint64_t v10 = v4;
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetWidth(v20);
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetHeight(v21);
  *(void *)&v10[qword_1EA1A1BF8] = sub_1C151AFDC();

  v19.receiver = v10;
  v19.super_class = ObjectType;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v12 = qword_1EA1A1BF8;
  uint64_t v13 = *(void **)&v11[qword_1EA1A1BF8];
  uint64_t v14 = self;
  uint64_t v15 = v11;
  id v16 = v13;
  id v17 = objc_msgSend(v14, sel_clearColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  objc_msgSend(v15, sel_addSubview_, *(void *)&v11[v12]);
  return v15;
}

char *sub_1C09A69F0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_1C09A6840(a1, a2, a3, a4);
}

void sub_1C09A6A14()
{
}

uint64_t sub_1C09A6A6C(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

uint64_t sub_1C09A6A84(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1C09A6AA4(a1, a2, a3, a4, (SEL *)&selRef_touchesBegan_withEvent_, 1);
}

uint64_t sub_1C09A6A94(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1C09A6AA4(a1, a2, a3, a4, (SEL *)&selRef_touchesEnded_withEvent_, 0);
}

uint64_t sub_1C09A6AA4(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5, char a6)
{
  sub_1C09A6E88();
  sub_1C09A6EC8();
  uint64_t v10 = sub_1C151EFBC();
  id v11 = a4;
  id v12 = a1;
  sub_1C09A6B4C(v10, (uint64_t)a4, a5, a6);

  return swift_bridgeObjectRelease();
}

id sub_1C09A6B4C(uint64_t a1, uint64_t a2, SEL *a3, char a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C09A6E88();
  sub_1C09A6EC8();
  uint64_t v9 = (void *)sub_1C151EFAC();
  v13.receiver = v4;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, *a3, v9, a2);

  uint64_t v10 = *(void **)&v4[qword_1EA1A1BF8];
  uint64_t v11 = a4 & 1;
  objc_msgSend(v10, sel_setSelected_, v11);
  return objc_msgSend(v10, sel_setHighlighted_, v11);
}

uint64_t sub_1C09A6C1C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1C09A6AA4(a1, a2, a3, a4, (SEL *)&selRef_touchesCancelled_withEvent_, 0);
}

void sub_1C09A6C2C(uint64_t a1)
{
}

uint64_t type metadata accessor for DebugItemLayoutView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C09A6C54()
{
  return sub_1C151B00C();
}

uint64_t sub_1C09A6C80()
{
  return sub_1C09A6C54();
}

uint64_t sub_1C09A6C88()
{
  swift_getObjectType();
  return sub_1C151C27C();
}

uint64_t sub_1C09A6CE0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162770](a1, a2, ObjectType);
}

uint64_t sub_1C09A6D38()
{
  swift_getObjectType();
  return sub_1C151C27C();
}

uint64_t sub_1C09A6D90()
{
  swift_getObjectType();
  return sub_1C151C27C();
}

uint64_t sub_1C09A6DE8()
{
  swift_getObjectType();
  return sub_1C151C2CC();
}

uint64_t sub_1C09A6E38()
{
  swift_getObjectType();
  return sub_1C151C2CC();
}

unint64_t sub_1C09A6E88()
{
  unint64_t result = qword_1EA1A1C80;
  if (!qword_1EA1A1C80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A1C80);
  }
  return result;
}

unint64_t sub_1C09A6EC8()
{
  unint64_t result = qword_1EA1A1C88;
  if (!qword_1EA1A1C88)
  {
    sub_1C09A6E88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1C88);
  }
  return result;
}

void sub_1C09A6F20()
{
}

double sub_1C09A6F7C(void *a1)
{
  void (*v11)(_OWORD *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  void *v13;
  id v14;
  double v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  id v19;
  double v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  _OWORD v28[7];
  _OWORD v29[2];
  uint64_t v30;
  unint64_t v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  _OWORD v39[2];
  _OWORD v40[7];
  _OWORD v41[3];

  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if (v8)
  {
    uint64_t v11 = *(void (**)(_OWORD *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v10 + 32);
    id v12 = sub_1BFEB031C();
    v11(v40, &type metadata for FeedIssue, &type metadata for FeedIssue, v12, v9, v10);
    if (!v2)
    {
      uint64_t v38 = v40[6];
      v39[0] = v41[0];
      *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v41 + 9);
      uint64_t v32 = v40[0];
      uint64_t v33 = v40[1];
      id v34 = v40[2];
      uint64_t v35 = v40[3];
      uint64_t v36 = v40[4];
      __n128 v37 = v40[5];
      objc_super v13 = *(void **)&v40[0];
      uint64_t v14 = objc_msgSend(*(id *)&v40[0], sel_layeredCoverJSON);
      if (v14)
      {

        objc_msgSend(v13, sel_layeredCoverAspectRatio);
        double v3 = v15;
      }
      else
      {
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA6DC((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v25 = v24;
        uint64_t v30 = 0;
        unsigned int v31 = 0xE000000000000000;
        v28[6] = v38;
        v29[0] = v39[0];
        *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v39 + 9);
        v28[2] = v34;
        v28[3] = v35;
        v28[4] = v36;
        v28[5] = v37;
        v28[0] = v32;
        v28[1] = v33;
        sub_1C152036C();
        int64_t v26 = v31;
        *uint64_t v25 = v30;
        v25[1] = v26;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
      sub_1C01880A4((uint64_t)&v32);
    }
  }
  else
  {
    id v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32);
    id v17 = sub_1BFFBA6DC((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    v16(v5, v5, v17, v9, v10);
    if (!v2)
    {
      uint64_t v18 = (void *)*((void *)v7 + 5);
      if ((objc_msgSend(v18, sel_respondsToSelector_, sel_layeredThumbnailJSON) & 1) != 0
        && (objc_super v19 = objc_msgSend(v18, sel_layeredThumbnailJSON)) != 0
        && (v19,
            (objc_msgSend(v18, sel_respondsToSelector_, sel_layeredThumbnailAspectRatio) & 1) != 0))
      {
        objc_msgSend(v18, sel_layeredThumbnailAspectRatio);
        double v3 = v20;
        sub_1BFF2F7F4((uint64_t)v7);
      }
      else
      {
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA6DC((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v22 = v21;
        *(void *)&v40[0] = 0;
        *((void *)&v40[0] + 1) = 0xE000000000000000;
        sub_1C152036C();
        char v23 = *((void *)&v40[0] + 1);
        char *v22 = *(void *)&v40[0];
        v22[1] = v23;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1BFF2F7F4((uint64_t)v7);
      }
    }
  }
  return v3;
}

uint64_t static FormatLayeredMediaRatioBinding.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if (*a1)
  {
    if ((*a2 & 1) == 0) {
      return 0;
    }
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1C09A7378(uint64_t a1)
{
  unint64_t result = sub_1C09A73A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09A73A0()
{
  unint64_t result = qword_1EA1A1C90;
  if (!qword_1EA1A1C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1C90);
  }
  return result;
}

unint64_t sub_1C09A73F4(void *a1)
{
  a1[1] = sub_1C006A2B0();
  a1[2] = sub_1C08F663C();
  unint64_t result = sub_1C09A742C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09A742C()
{
  unint64_t result = qword_1EA1A1C98;
  if (!qword_1EA1A1C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1C98);
  }
  return result;
}

uint64_t sub_1C09A7480(void *a1)
{
  return FormatLayeredMediaRatioBinding.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatLayeredMediaRatioBinding()
{
  return &type metadata for FormatLayeredMediaRatioBinding;
}

void static FormatCodingBooleanFalseStrategy.defaultValue.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t static FormatCodingBooleanFalseStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v4 = *(void *)a1 & 1;
  }
  sub_1BFE94AD4(v1, v2, v3);
  sub_1BFE94AD4(0, 0, 0);
  return v4;
}

void sub_1C09A7544(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t sub_1C09A7550(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v4 = *(void *)a1 & 1;
  }
  sub_1BFE94AD4(v1, v2, v3);
  sub_1BFE94AD4(0, 0, 0);
  return v4;
}

double static FormatCodingBooleanTrueStrategy.defaultValue.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1;
  *(_OWORD *)a1 = xmmword_1C153AB20;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

BOOL static FormatCodingBooleanTrueStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    BOOL v4 = 1;
  }
  else
  {
    BOOL v4 = (*(void *)a1 & 1) == 0;
  }
  sub_1BFE94AD4(v1, v2, v3);
  sub_1BFE94AD4(1, 0, 0);
  return v4;
}

unint64_t sub_1C09A7638(uint64_t a1)
{
  unint64_t result = sub_1C09A7660();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09A7660()
{
  unint64_t result = qword_1EA1A1CA0;
  if (!qword_1EA1A1CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CA0);
  }
  return result;
}

unint64_t sub_1C09A76BC(uint64_t a1)
{
  unint64_t result = sub_1C09A76E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09A76E4()
{
  unint64_t result = qword_1EA1A1CA8;
  if (!qword_1EA1A1CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CA8);
  }
  return result;
}

double sub_1C09A7738@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1;
  *(_OWORD *)a1 = xmmword_1C153AB20;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

BOOL sub_1C09A774C(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    BOOL v4 = 1;
  }
  else
  {
    BOOL v4 = (*(void *)a1 & 1) == 0;
  }
  sub_1BFE94AD4(v1, v2, v3);
  sub_1BFE94AD4(1, 0, 0);
  return v4;
}

ValueMetadata *type metadata accessor for FormatCodingBooleanFalseStrategy()
{
  return &type metadata for FormatCodingBooleanFalseStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingBooleanTrueStrategy()
{
  return &type metadata for FormatCodingBooleanTrueStrategy;
}

uint64_t FormatPluginData.init<A>(formatContent:feedContext:feedGroup:feedDescriptor:feedKind:dataProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v16 = *a5;
  sub_1BFECA61C(a1, a9, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  id v17 = (int *)type metadata accessor for FormatPluginData();
  uint64_t v39 = a2;
  sub_1BFECA61C(a2, a9 + v17[5], (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v18 = (uint64_t *)(a9 + v17[6]);
  uint64_t v19 = *(void *)(a8 + 8);
  v18[3] = a7;
  v18[4] = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v18);
  uint64_t v21 = *(void *)(a7 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 16))(boxed_opaque_existential_0, a3, a7);
  *(void *)(a9 + v17[8]) = a4;
  *(unsigned char *)(a9 + v17[7]) = v16;
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(a8 + 72);
  id v40 = a4;
  *(void *)(a9 + v17[9]) = v22(a7, a8);
  sub_1BFECA61C(a6, (uint64_t)v44 + 1, (uint64_t (*)(void))sub_1C09A7C00);
  uint64_t v23 = v45;
  if (v45)
  {
    uint64_t v24 = v46;
    __swift_project_boxed_opaque_existential_1((void *)((char *)v44 + 1), v45);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 8))(&v42, v23, v24);
    uint64_t v25 = v42;
    char v26 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44 + 1);
  }
  else
  {
    sub_1C09AB0D8((uint64_t)v44 + 1, (uint64_t (*)(void))sub_1C09A7C00);
    uint64_t v25 = 0;
    char v26 = 4;
  }
  uint64_t v27 = a9 + v17[10];
  *(void *)uint64_t v27 = v25;
  *(unsigned char *)(v27 + 8) = v26;
  uint64_t v28 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(v28 + 64);
    while (1)
    {
      uint64_t v32 = *v30;
      v30 += 10;
      uint64_t v31 = v32;
      if ((v32 & 0x8000000000000000) == 0)
      {
        uint64_t v33 = (unsigned __int8 *)(v31 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
        swift_beginAccess();
        int v34 = *v33;
        if (v34 != 4) {
          break;
        }
      }
      if (!--v29) {
        goto LABEL_10;
      }
    }
  }
  else
  {
LABEL_10:
    LOBYTE(v34) = 3;
  }
  *(unsigned char *)(a9 + v17[11]) = v34;
  sub_1BFECA61C(a6, (uint64_t)v44 + 1, (uint64_t (*)(void))sub_1C09A7C00);
  uint64_t v35 = v45;
  if (v45)
  {
    uint64_t v36 = v46;
    __swift_project_boxed_opaque_existential_1((void *)((char *)v44 + 1), v45);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v36 + 16))(v44, v35, v36);

    sub_1C09AB0D8(a6, (uint64_t (*)(void))sub_1C09A7C00);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, a7);
    sub_1C09AB0D8(v39, (uint64_t (*)(void))type metadata accessor for FeedContext);
    sub_1C09AB0D8(a1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    char v37 = v44[0];
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v44 + 1);
  }
  else
  {

    sub_1C09AB0D8(a6, (uint64_t (*)(void))sub_1C09A7C00);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, a7);
    sub_1C09AB0D8(v39, (uint64_t (*)(void))type metadata accessor for FeedContext);
    sub_1C09AB0D8(a1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    uint64_t result = sub_1C09AB0D8((uint64_t)v44 + 1, (uint64_t (*)(void))sub_1C09A7C00);
    char v37 = 1;
  }
  *(unsigned char *)(a9 + v17[12]) = v37;
  return result;
}

uint64_t type metadata accessor for FormatPluginData()
{
  uint64_t result = qword_1EB860000;
  if (!qword_1EB860000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C09A7C00(uint64_t a1)
{
}

unint64_t sub_1C09A7C34()
{
  unint64_t result = qword_1EB861818;
  if (!qword_1EB861818)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB861818);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatPluginData(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for FormatContent.Resolved();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v124 = v12;
    uint64_t v125 = v11;
    v12(v9, v10, v11);
    *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
    *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
    *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
    *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
    uint64_t v13 = v7[12];
    uint64_t v130 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v130;
    *(void *)((char *)a1 + v7[13]) = *(void *)((char *)a2 + v7[13]);
    uint64_t v126 = v7;
    uint64_t v14 = v7[14];
    __dst = (void *)((char *)a1 + v14);
    uint64_t v133 = a2;
    uint64_t v15 = (void *)((char *)a2 + v14);
    char v16 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    uint64_t v123 = *((void *)v16 - 1);
    uint64_t v127 = *(unsigned int (**)(void *, uint64_t, int *))(v123 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v17 = v130;
    swift_unknownObjectRetain();
    if (v127(v15, 1, v16))
    {
      sub_1C09A88B8(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v19 = a2;
      CGRect v20 = v126;
    }
    else
    {
      uint64_t v23 = v15[1];
      void *__dst = *v15;
      __dst[1] = v23;
      uint64_t v24 = v16[5];
      uint64_t v25 = (void *)((char *)__dst + v24);
      uint64_t v131 = v15;
      char v26 = (char *)v15 + v24;
      uint64_t v27 = *(void *)((char *)v15 + v24 + 8);
      *uint64_t v25 = *(void *)((char *)v15 + v24);
      v25[1] = v27;
      uint64_t v28 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v29 = v28[5];
      uint64_t v128 = (char *)v25 + v29;
      uint64_t v30 = &v26[v29];
      uint64_t v31 = sub_1C1515FDC();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v128, v30, v31);
      uint64_t v34 = v28[6];
      uint64_t v35 = (char *)v25 + v34;
      uint64_t v36 = &v26[v34];
      uint64_t v119 = v31;
      uint64_t v118 = v33;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v26[v34], 1, v31))
      {
        sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
      }
      *(void *)((char *)v25 + v28[7]) = *(void *)&v26[v28[7]];
      uint64_t v38 = v28[8];
      uint64_t v39 = (void *)((char *)v25 + v38);
      id v40 = &v26[v38];
      uint64_t v122 = *((void *)v40 + 1);
      *uint64_t v39 = *(void *)v40;
      v39[1] = v122;
      uint64_t v41 = v28[9];
      uint64_t v42 = (void *)((char *)v25 + v41);
      char v43 = &v26[v41];
      uint64_t v44 = *((void *)v43 + 1);
      *uint64_t v42 = *(void *)v43;
      v42[1] = v44;
      *(void *)((char *)v25 + v28[10]) = *(void *)&v26[v28[10]];
      *(void *)((char *)v25 + v28[11]) = *(void *)&v26[v28[11]];
      *(void *)((char *)v25 + v28[12]) = *(void *)&v26[v28[12]];
      *(void *)((char *)__dst + v16[6]) = *(void *)((char *)v131 + v16[6]);
      *(void *)((char *)__dst + v16[7]) = *(void *)((char *)v131 + v16[7]);
      uint64_t v45 = v16[8];
      uint64_t v120 = (void *)((char *)__dst + v45);
      uint64_t v121 = v16;
      uint64_t v46 = (void *)((char *)v131 + v45);
      uint64_t v47 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v48 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v49(v46, 1, v47))
      {
        sub_1C09A88B8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v120, v46, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v19 = v133;
        uint64_t v51 = v121;
        uint64_t v52 = v131;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v54 = *v46;
        uint64_t v19 = v133;
        uint64_t v51 = v121;
        uint64_t v52 = v131;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v129 = v47;
          uint64_t v55 = v46[1];
          *uint64_t v120 = v54;
          v120[1] = v55;
          uint64_t v56 = v46;
          uint64_t v57 = type metadata accessor for GenericDataVisualization();
          uint64_t v58 = *(int *)(v57 + 20);
          uint64_t v59 = (char *)v120 + v58;
          uint64_t v60 = (char *)v46 + v58;
          uint64_t v47 = v129;
          swift_bridgeObjectRetain();
          v118(v59, v60, v119);
          *(void *)((char *)v120 + *(int *)(v57 + 24)) = *(uint64_t *)((char *)v56 + *(int *)(v57 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *uint64_t v120 = v54;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v120, 0, 1, v47);
      }
      uint64_t v61 = v51[9];
      uint64_t v62 = (char *)__dst + v61;
      uint64_t v63 = (char *)v52 + v61;
      sub_1BFEC84E0();
      uint64_t v65 = v64;
      uint64_t v66 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v64))
      {
        sub_1C09A88B8(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v62, v63, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v62, 0, 1, v65);
      }
      CGRect v20 = v126;
      (*(void (**)(void *, void, uint64_t, int *))(v123 + 56))(__dst, 0, 1, v51);
    }
    uint64_t v68 = v20[15];
    uint64_t v69 = *(void **)((char *)v19 + v68);
    *(void *)((char *)a1 + v68) = v69;
    *((unsigned char *)a1 + v20[16]) = *((unsigned char *)v19 + v20[16]);
    *(void *)((char *)a1 + v20[17]) = *(void *)((char *)v19 + v20[17]);
    uint64_t v70 = v20[18];
    uint64_t v71 = (char *)a1 + v70;
    long long v72 = (char *)v19 + v70;
    uint64_t v73 = sub_1C151D6DC();
    uint64_t v74 = *(void *)(v73 - 8);
    unsigned int v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    id v76 = v69;
    swift_bridgeObjectRetain();
    if (v75(v72, 1, v73))
    {
      sub_1C09A88B8(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
      memcpy(v71, v72, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
    uint64_t v78 = a3[5];
    uint64_t v79 = (char *)a1 + v78;
    uint64_t v80 = (char *)v19 + v78;
    uint64_t v81 = *(void **)((char *)v19 + v78);
    *(void *)((char *)a1 + v78) = v81;
    uint64_t v82 = (int *)type metadata accessor for FeedContext();
    uint64_t v83 = v82[5];
    uint64_t v84 = &v79[v83];
    uint64_t v85 = &v80[v83];
    uint64_t v86 = (int *)type metadata accessor for BundleSession();
    uint64_t v87 = *((void *)v86 - 1);
    uint64_t v88 = *(unsigned int (**)(char *, uint64_t, int *))(v87 + 48);
    id v89 = v81;
    if (v88(v85, 1, v86))
    {
      sub_1C09A88B8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
      memcpy(v84, v85, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v84 = *(void *)v85;
      v124(&v84[v86[5]], &v85[v86[5]], v125);
      v84[v86[6]] = v85[v86[6]];
      v84[v86[7]] = v85[v86[7]];
      *(_OWORD *)&v84[v86[8]] = *(_OWORD *)&v85[v86[8]];
      *(void *)&v84[v86[9]] = *(void *)&v85[v86[9]];
      v84[v86[10]] = v85[v86[10]];
      v84[v86[11]] = v85[v86[11]];
      uint64_t v91 = *(void (**)(char *, void, uint64_t, int *))(v87 + 56);
      swift_bridgeObjectRetain();
      v91(v84, 0, 1, v86);
    }
    v79[v82[6]] = v80[v82[6]];
    v79[v82[7]] = v80[v82[7]];
    v79[v82[8]] = v80[v82[8]];
    v79[v82[9]] = v80[v82[9]];
    *(void *)&v79[v82[10]] = *(void *)&v80[v82[10]];
    *(void *)&v79[v82[11]] = *(void *)&v80[v82[11]];
    uint64_t v92 = v82[12];
    uint64_t v93 = &v79[v92];
    uint64_t v94 = &v80[v92];
    uint64_t v95 = *(void *)&v80[v92 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v95 - 1) >= 3)
    {
      *(void *)uint64_t v93 = *(void *)v94;
      *((void *)v93 + 1) = v95;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
    }
    v79[v82[13]] = v80[v82[13]];
    uint64_t v96 = v82[14];
    uint64_t v97 = *(void **)&v80[v96];
    *(void *)&v79[v96] = v97;
    uint64_t v98 = v82[15];
    uint64_t v99 = &v79[v98];
    uint64_t v100 = &v80[v98];
    uint64_t v101 = *((void *)v100 + 1);
    *(void *)uint64_t v99 = *(void *)v100;
    *((void *)v99 + 1) = v101;
    uint64_t v22 = a1;
    uint64_t v102 = a3[6];
    uint64_t v103 = (char *)a1 + v102;
    uint64_t v104 = (char *)v133 + v102;
    uint64_t v105 = *(void *)((char *)v133 + v102 + 24);
    id v106 = v97;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v105)
    {
      uint64_t v107 = *((void *)v104 + 4);
      *((void *)v103 + 3) = v105;
      *((void *)v103 + 4) = v107;
      (**(void (***)(char *, char *, uint64_t))(v105 - 8))(v103, v104, v105);
    }
    else
    {
      long long v108 = *((_OWORD *)v104 + 1);
      *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
      *((_OWORD *)v103 + 1) = v108;
      *((void *)v103 + 4) = *((void *)v104 + 4);
    }
    uint64_t v109 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)v133 + a3[7]);
    unint64_t v110 = *(void **)((char *)v133 + v109);
    *(void *)((char *)a1 + v109) = v110;
    uint64_t v111 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)v133 + a3[9]);
    uint64_t v112 = (char *)a1 + v111;
    uint64_t v113 = (char *)v133 + v111;
    uint64_t v114 = *(void *)v113;
    LOBYTE(v113) = v113[8];
    *(void *)uint64_t v112 = v114;
    v112[8] = (char)v113;
    uint64_t v115 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)v133 + a3[11]);
    *((unsigned char *)a1 + v115) = *((unsigned char *)v133 + v115);
    id v116 = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v22;
}

void sub_1C09A88B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for FormatPluginData(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  BOOL v4 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v8 = a1 + v4[14];
  uint64_t v9 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9))
  {
    uint64_t v33 = v7;
    uint64_t v34 = v6;
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + v9[5];
    swift_bridgeObjectRelease();
    uint64_t v11 = type metadata accessor for FormatWebEmbed();
    uint64_t v12 = v10 + *(int *)(v11 + 20);
    uint64_t v13 = sub_1C1515FDC();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v32(v12, v13);
    uint64_t v15 = v10 + *(int *)(v11 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13)) {
      v32(v15, v13);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v16 = v8 + v9[8];
    uint64_t v17 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = type metadata accessor for GenericDataVisualization();
        v32(v16 + *(int *)(v18 + 20), v13);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v19 = v8 + v9[9];
    sub_1BFEC84E0();
    uint64_t v21 = v20;
    uint64_t v22 = *(void *)(v20 - 8);
    uint64_t v7 = v33;
    uint64_t v6 = v34;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v21);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v23 = a1 + v4[18];
  uint64_t v24 = sub_1C151D6DC();
  uint64_t v25 = *(void *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
  char v26 = (id *)(a1 + a2[5]);

  uint64_t v27 = (int *)type metadata accessor for FeedContext();
  uint64_t v28 = (char *)v26 + v27[5];
  uint64_t v29 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29))
  {
    v7((uint64_t)&v28[*(int *)(v29 + 20)], v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v26 + v27[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = a1 + a2[6];
  if (*(void *)(v30 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v30);
  }

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatPluginData(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v124 = v11;
  uint64_t v125 = v10;
  v11(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  uint64_t v12 = v6[12];
  uint64_t v129 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v129;
  *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  uint64_t v126 = v6;
  uint64_t v13 = v6[14];
  uint64_t v134 = a1;
  __dst = (void *)((char *)a1 + v13);
  uint64_t v133 = a2;
  uint64_t v14 = (void *)((char *)a2 + v13);
  uint64_t v15 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v127 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v17 = v129;
  swift_unknownObjectRetain();
  if (v127(v14, 1, v15))
  {
    sub_1C09A88B8(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v20 = a2;
    uint64_t v19 = v134;
    uint64_t v21 = v126;
  }
  else
  {
    uint64_t v122 = v16;
    uint64_t v123 = (int *)v15;
    uint64_t v22 = v14[1];
    void *__dst = *v14;
    __dst[1] = v22;
    uint64_t v23 = *(int *)(v15 + 20);
    uint64_t v24 = (void *)((char *)__dst + v23);
    uint64_t v131 = v14;
    uint64_t v25 = (char *)v14 + v23;
    uint64_t v26 = *(void *)((char *)v14 + v23 + 8);
    *uint64_t v24 = *(void *)((char *)v14 + v23);
    v24[1] = v26;
    uint64_t v27 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v28 = v27[5];
    uint64_t v130 = (char *)v24 + v28;
    uint64_t v29 = &v25[v28];
    uint64_t v30 = sub_1C1515FDC();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v130, v29, v30);
    uint64_t v33 = v27[6];
    uint64_t v34 = (char *)v24 + v33;
    uint64_t v35 = &v25[v33];
    uint64_t v120 = v30;
    uint64_t v119 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v25[v33], 1, v30))
    {
      sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v32(v34, v35, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    }
    *(void *)((char *)v24 + v27[7]) = *(void *)&v25[v27[7]];
    uint64_t v37 = v27[8];
    uint64_t v38 = (void *)((char *)v24 + v37);
    uint64_t v39 = &v25[v37];
    uint64_t v128 = *((void *)v39 + 1);
    *uint64_t v38 = *(void *)v39;
    v38[1] = v128;
    uint64_t v40 = v27[9];
    uint64_t v41 = (void *)((char *)v24 + v40);
    uint64_t v42 = &v25[v40];
    uint64_t v43 = *((void *)v42 + 1);
    *uint64_t v41 = *(void *)v42;
    v41[1] = v43;
    *(void *)((char *)v24 + v27[10]) = *(void *)&v25[v27[10]];
    *(void *)((char *)v24 + v27[11]) = *(void *)&v25[v27[11]];
    *(void *)((char *)v24 + v27[12]) = *(void *)&v25[v27[12]];
    *(void *)((char *)__dst + v123[6]) = *(void *)((char *)v131 + v123[6]);
    *(void *)((char *)__dst + v123[7]) = *(void *)((char *)v131 + v123[7]);
    uint64_t v44 = v123[8];
    uint64_t v121 = (void *)((char *)__dst + v44);
    uint64_t v45 = (void *)((char *)v131 + v44);
    uint64_t v46 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v47 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v48(v45, 1, v46))
    {
      sub_1C09A88B8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(v121, v45, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v20 = v133;
      uint64_t v21 = v126;
      uint64_t v50 = v131;
      uint64_t v51 = __dst;
      uint64_t v52 = v123;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v54 = *v45;
      uint64_t v20 = v133;
      uint64_t v21 = v126;
      uint64_t v50 = v131;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v55 = v45[1];
        void *v121 = v54;
        v121[1] = v55;
        uint64_t v56 = type metadata accessor for GenericDataVisualization();
        uint64_t v57 = *(int *)(v56 + 20);
        uint64_t v58 = (char *)v121 + v57;
        uint64_t v59 = (char *)v45 + v57;
        swift_bridgeObjectRetain();
        uint64_t v60 = v59;
        uint64_t v52 = v123;
        v119(v58, v60, v120);
        *(void *)((char *)v121 + *(int *)(v56 + 24)) = *(uint64_t *)((char *)v45 + *(int *)(v56 + 24));
        swift_bridgeObjectRetain();
        uint64_t v61 = v47;
      }
      else
      {
        void *v121 = v54;
        swift_retain();
        uint64_t v61 = v47;
        uint64_t v52 = v123;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v121, 0, 1, v46);
      uint64_t v51 = __dst;
    }
    uint64_t v62 = v52[9];
    uint64_t v63 = (char *)v51 + v62;
    uint64_t v64 = (char *)v50 + v62;
    sub_1BFEC84E0();
    uint64_t v66 = v65;
    uint64_t v67 = *(void *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65))
    {
      sub_1C09A88B8(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
      memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v64, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
    }
    uint64_t v19 = v134;
    (*(void (**)(void *, void, uint64_t, int *))(v122 + 56))(v51, 0, 1, v52);
  }
  uint64_t v69 = v21[15];
  uint64_t v70 = *(void **)((char *)v20 + v69);
  *(void *)((char *)v19 + v69) = v70;
  *((unsigned char *)v19 + v21[16]) = *((unsigned char *)v20 + v21[16]);
  *(void *)((char *)v19 + v21[17]) = *(void *)((char *)v20 + v21[17]);
  uint64_t v71 = v21[18];
  long long v72 = (char *)v19 + v71;
  uint64_t v73 = (char *)v20 + v71;
  uint64_t v74 = sub_1C151D6DC();
  uint64_t v75 = *(void *)(v74 - 8);
  id v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  id v77 = v70;
  swift_bridgeObjectRetain();
  if (v76(v73, 1, v74))
  {
    sub_1C09A88B8(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v72, v73, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  uint64_t v79 = a3[5];
  uint64_t v80 = (void *)((char *)v19 + v79);
  uint64_t v81 = (char *)v20 + v79;
  uint64_t v82 = *(void **)((char *)v20 + v79);
  *uint64_t v80 = v82;
  uint64_t v83 = (int *)type metadata accessor for FeedContext();
  uint64_t v84 = v83[5];
  uint64_t v85 = (void *)((char *)v80 + v84);
  uint64_t v86 = &v81[v84];
  uint64_t v87 = (int *)type metadata accessor for BundleSession();
  uint64_t v88 = *((void *)v87 - 1);
  id v89 = *(unsigned int (**)(char *, uint64_t, int *))(v88 + 48);
  id v90 = v82;
  if (v89(v86, 1, v87))
  {
    sub_1C09A88B8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v85, v86, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    *uint64_t v85 = *(void *)v86;
    v124((char *)v85 + v87[5], &v86[v87[5]], v125);
    *((unsigned char *)v85 + v87[6]) = v86[v87[6]];
    *((unsigned char *)v85 + v87[7]) = v86[v87[7]];
    *(_OWORD *)((char *)v85 + v87[8]) = *(_OWORD *)&v86[v87[8]];
    *(void *)((char *)v85 + v87[9]) = *(void *)&v86[v87[9]];
    *((unsigned char *)v85 + v87[10]) = v86[v87[10]];
    *((unsigned char *)v85 + v87[11]) = v86[v87[11]];
    uint64_t v92 = *(void (**)(void *, void, uint64_t, int *))(v88 + 56);
    swift_bridgeObjectRetain();
    v92(v85, 0, 1, v87);
  }
  *((unsigned char *)v80 + v83[6]) = v81[v83[6]];
  *((unsigned char *)v80 + v83[7]) = v81[v83[7]];
  *((unsigned char *)v80 + v83[8]) = v81[v83[8]];
  *((unsigned char *)v80 + v83[9]) = v81[v83[9]];
  *(void *)((char *)v80 + v83[10]) = *(void *)&v81[v83[10]];
  *(void *)((char *)v80 + v83[11]) = *(void *)&v81[v83[11]];
  uint64_t v93 = v83[12];
  uint64_t v94 = (void *)((char *)v80 + v93);
  uint64_t v95 = &v81[v93];
  uint64_t v96 = *(void *)&v81[v93 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v96 - 1) >= 3)
  {
    *uint64_t v94 = *(void *)v95;
    v94[1] = v96;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
  }
  *((unsigned char *)v80 + v83[13]) = v81[v83[13]];
  uint64_t v97 = v83[14];
  uint64_t v98 = *(void **)&v81[v97];
  *(void *)((char *)v80 + v97) = v98;
  uint64_t v99 = v83[15];
  uint64_t v100 = (void *)((char *)v80 + v99);
  uint64_t v101 = &v81[v99];
  uint64_t v102 = *((void *)v101 + 1);
  *uint64_t v100 = *(void *)v101;
  v100[1] = v102;
  uint64_t v103 = a3[6];
  uint64_t v104 = (char *)v134 + v103;
  uint64_t v105 = (char *)v133 + v103;
  uint64_t v106 = *(void *)((char *)v133 + v103 + 24);
  id v107 = v98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v106)
  {
    uint64_t v108 = *((void *)v105 + 4);
    *((void *)v104 + 3) = v106;
    *((void *)v104 + 4) = v108;
    (**(void (***)(char *, char *, uint64_t))(v106 - 8))(v104, v105, v106);
  }
  else
  {
    long long v109 = *((_OWORD *)v105 + 1);
    *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
    *((_OWORD *)v104 + 1) = v109;
    *((void *)v104 + 4) = *((void *)v105 + 4);
  }
  uint64_t v110 = a3[8];
  *((unsigned char *)v134 + a3[7]) = *((unsigned char *)v133 + a3[7]);
  uint64_t v111 = *(void **)((char *)v133 + v110);
  *(void *)((char *)v134 + v110) = v111;
  uint64_t v112 = a3[10];
  *(void *)((char *)v134 + a3[9]) = *(void *)((char *)v133 + a3[9]);
  uint64_t v113 = (char *)v134 + v112;
  uint64_t v114 = (char *)v133 + v112;
  uint64_t v115 = *(void *)v114;
  LOBYTE(v114) = v114[8];
  *(void *)uint64_t v113 = v115;
  v113[8] = (char)v114;
  uint64_t v116 = a3[12];
  *((unsigned char *)v134 + a3[11]) = *((unsigned char *)v133 + a3[11]);
  *((unsigned char *)v134 + v116) = *((unsigned char *)v133 + v116);
  id v117 = v111;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v134;
}

void *assignWithCopy for FormatPluginData(void *a1, void *a2, int *a3)
{
  char v3 = a2;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)v3 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  v181 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v181(v7, v8, v9);
  *(void *)((char *)a1 + v5[6]) = *(void *)((char *)v3 + v5[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[7]) = *(void *)((char *)v3 + v5[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)v3 + v5[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[9]) = *(void *)((char *)v3 + v5[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[10]) = *(void *)((char *)v3 + v5[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[11]) = *(void *)((char *)v3 + v5[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v11 = v5[12];
  uint64_t v12 = *(void **)((char *)a1 + v11);
  uint64_t v13 = *(void **)((char *)v3 + v11);
  *(void *)((char *)a1 + v11) = v13;
  id v14 = v13;

  *(void *)((char *)a1 + v5[13]) = *(void *)((char *)v3 + v5[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v188 = v5;
  uint64_t v15 = v5[14];
  uint64_t v16 = (void *)((char *)a1 + v15);
  id v17 = (void *)((char *)v3 + v15);
  uint64_t v18 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v182 = *(void *)(v18 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v182 + 48);
  v192 = v16;
  LODWORD(v16) = v19(v16, 1, v18);
  v191 = v17;
  v189 = (int *)v18;
  int v20 = v19(v17, 1, v18);
  v190 = v3;
  uint64_t v186 = v10;
  uint64_t v187 = v9;
  if (!v16)
  {
    if (v20)
    {
      sub_1C09AB0D8((uint64_t)v192, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1C09A88B8(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
      size_t v22 = *(void *)(*(void *)(v24 - 8) + 64);
      uint64_t v23 = v192;
      goto LABEL_6;
    }
    void *v192 = *v17;
    v192[1] = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v41 = *(int *)(v18 + 20);
    uint64_t v42 = (void *)((char *)v192 + v41);
    uint64_t v43 = (char *)v17 + v41;
    *uint64_t v42 = *(void *)((char *)v17 + v41);
    v42[1] = *(void *)((char *)v17 + v41 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v44 = type metadata accessor for FormatWebEmbed();
    uint64_t v45 = *(int *)(v44 + 20);
    uint64_t v46 = (char *)v42 + v45;
    uint64_t v47 = &v43[v45];
    uint64_t v48 = sub_1C1515FDC();
    uint64_t v49 = *(void *)(v48 - 8);
    __dst = *(void (**)(char *, char *, uint64_t))(v49 + 24);
    __dst(v46, v47, v48);
    v177 = (int *)v44;
    uint64_t v50 = *(int *)(v44 + 24);
    uint64_t v51 = &v43[v50];
    uint64_t v52 = *(uint64_t (**)(void))(v49 + 48);
    v183 = (char *)v42 + v50;
    LODWORD(v46) = v52();
    int v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v51, 1, v48);
    uint64_t v171 = v48;
    uint64_t v172 = v49;
    if (v46)
    {
      if (v53)
      {
        sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v55 = *(void *)(*(void *)(v54 - 8) + 64);
        uint64_t v56 = v183;
LABEL_20:
        memcpy(v56, v51, v55);
        goto LABEL_58;
      }
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v183, v51, v48);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v183, 0, 1, v48);
    }
    else
    {
      if (v53)
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v183, v48);
        sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v55 = *(void *)(*(void *)(v73 - 8) + 64);
        uint64_t v56 = v183;
        goto LABEL_20;
      }
      __dst(v183, v51, v48);
    }
LABEL_58:
    *(void *)((char *)v42 + v177[7]) = *(void *)&v43[v177[7]];
    swift_retain();
    swift_release();
    uint64_t v136 = v177[8];
    uint64_t v137 = (void *)((char *)v42 + v136);
    uint64_t v138 = &v43[v136];
    *uint64_t v137 = *(void *)v138;
    v137[1] = *((void *)v138 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v139 = v177[9];
    char v140 = (void *)((char *)v42 + v139);
    v141 = &v43[v139];
    *char v140 = *(void *)v141;
    v140[1] = *((void *)v141 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v42 + v177[10]) = *(void *)&v43[v177[10]];
    *(void *)((char *)v42 + v177[11]) = *(void *)&v43[v177[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v42 + v177[12]) = *(void *)&v43[v177[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v192 + v189[6]) = *(void *)((char *)v191 + v189[6]);
    swift_retain();
    swift_release();
    *(void *)((char *)v192 + v189[7]) = *(void *)((char *)v191 + v189[7]);
    swift_retain();
    swift_release();
    uint64_t v142 = v189[8];
    uint64_t v143 = (void *)((char *)v192 + v142);
    uint64_t v144 = (void *)((char *)v191 + v142);
    uint64_t v145 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v146 = *(void *)(v145 - 8);
    v147 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v146 + 48);
    int v148 = v147(v143, 1, v145);
    int v149 = v147(v144, 1, v145);
    if (v148)
    {
      if (!v149)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v25 = v188;
        *uint64_t v143 = *v144;
        if (EnumCaseMultiPayload == 1)
        {
          v143[1] = v144[1];
          uint64_t v151 = type metadata accessor for GenericDataVisualization();
          uint64_t v152 = *(int *)(v151 + 20);
          v184 = (char *)v143 + v152;
          __srca = (char *)v144 + v152;
          uint64_t v153 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
          swift_bridgeObjectRetain();
          v153(v184, __srca, v171);
          *(void *)((char *)v143 + *(int *)(v151 + 24)) = *(void *)((char *)v144 + *(int *)(v151 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
        goto LABEL_71;
      }
    }
    else
    {
      if (!v149)
      {
        uint64_t v25 = v188;
        if (a1 != v190)
        {
          sub_1C09AB0D8((uint64_t)v143, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          int v155 = swift_getEnumCaseMultiPayload();
          *uint64_t v143 = *v144;
          if (v155 == 1)
          {
            v143[1] = v144[1];
            uint64_t v156 = type metadata accessor for GenericDataVisualization();
            uint64_t v157 = *(int *)(v156 + 20);
            uint64_t v158 = (char *)v143 + v157;
            v185 = (char *)v144 + v157;
            uint64_t v159 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
            swift_bridgeObjectRetain();
            v159(v158, v185, v171);
            *(void *)((char *)v143 + *(int *)(v156 + 24)) = *(void *)((char *)v144 + *(int *)(v156 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_71:
        uint64_t v160 = v189[9];
        uint64_t v161 = (char *)v192 + v160;
        uint64_t v162 = (char *)v191 + v160;
        sub_1BFEC84E0();
        uint64_t v164 = v163;
        uint64_t v165 = *(void *)(v163 - 8);
        v166 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v165 + 48);
        int v167 = v166(v161, 1, v163);
        int v168 = v166(v162, 1, v164);
        if (v167)
        {
          if (!v168)
          {
            (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v161, v162, v164);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(v161, 0, 1, v164);
            char v3 = v190;
            goto LABEL_7;
          }
        }
        else
        {
          if (!v168)
          {
            (*(void (**)(char *, char *, uint64_t))(v165 + 24))(v161, v162, v164);
            char v3 = v190;
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v165 + 8))(v161, v164);
        }
        sub_1C09A88B8(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v161, v162, *(void *)(*(void *)(v169 - 8) + 64));
        char v3 = v190;
        goto LABEL_7;
      }
      sub_1C09AB0D8((uint64_t)v143, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1C09A88B8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v143, v144, *(void *)(*(void *)(v154 - 8) + 64));
    uint64_t v25 = v188;
    goto LABEL_71;
  }
  if (v20)
  {
    sub_1C09A88B8(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    size_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
    uint64_t v23 = v192;
LABEL_6:
    memcpy(v23, v17, v22);
    uint64_t v25 = v188;
LABEL_7:
    uint64_t v26 = a3;
    goto LABEL_27;
  }
  void *v192 = *v17;
  v192[1] = v17[1];
  uint64_t v27 = *(int *)(v18 + 20);
  uint64_t v28 = (void *)((char *)v192 + v27);
  uint64_t v29 = (char *)v17 + v27;
  void *v28 = *(void *)((char *)v17 + v27);
  v28[1] = *(void *)((char *)v17 + v27 + 8);
  uint64_t v30 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v31 = v30[5];
  v176 = &v29[v31];
  __src = (char *)v28 + v31;
  uint64_t v32 = sub_1C1515FDC();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v35 = v32;
  uint64_t v36 = v34;
  v34(__src, v176, v35);
  uint64_t v37 = v30[6];
  uint64_t v38 = (char *)v28 + v37;
  uint64_t v39 = &v29[v37];
  uint64_t v170 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&v29[v37], 1, v35))
  {
    sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v36(v38, v39, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v38, 0, 1, v35);
  }
  *(void *)((char *)v28 + v30[7]) = *(void *)&v29[v30[7]];
  uint64_t v57 = v30[8];
  uint64_t v58 = (void *)((char *)v28 + v57);
  uint64_t v59 = &v29[v57];
  *uint64_t v58 = *(void *)v59;
  v58[1] = *((void *)v59 + 1);
  uint64_t v60 = v30[9];
  uint64_t v61 = (void *)((char *)v28 + v60);
  uint64_t v62 = &v29[v60];
  *uint64_t v61 = *(void *)v62;
  v61[1] = *((void *)v62 + 1);
  *(void *)((char *)v28 + v30[10]) = *(void *)&v29[v30[10]];
  *(void *)((char *)v28 + v30[11]) = *(void *)&v29[v30[11]];
  *(void *)((char *)v28 + v30[12]) = *(void *)&v29[v30[12]];
  *(void *)((char *)v192 + v189[6]) = *(void *)((char *)v191 + v189[6]);
  *(void *)((char *)v192 + v189[7]) = *(void *)((char *)v191 + v189[7]);
  uint64_t v63 = v189[8];
  __dsta = (void *)((char *)v192 + v63);
  uint64_t v64 = (void *)((char *)v191 + v63);
  uint64_t v65 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v173 = *(void *)(v65 - 8);
  v178 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v173 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v178(v64, 1, v65))
  {
    sub_1C09A88B8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(__dsta, v64, *(void *)(*(void *)(v66 - 8) + 64));
    char v3 = v190;
    uint64_t v26 = a3;
    uint64_t v25 = v188;
    uint64_t v67 = v182;
  }
  else
  {
    int v68 = swift_getEnumCaseMultiPayload();
    void *__dsta = *v64;
    if (v68 == 1)
    {
      __dsta[1] = v64[1];
      uint64_t v69 = type metadata accessor for GenericDataVisualization();
      uint64_t v70 = *(int *)(v69 + 20);
      uint64_t v71 = (char *)__dsta + v70;
      long long v72 = (char *)v64 + v70;
      swift_bridgeObjectRetain();
      v36(v71, v72, v170);
      *(void *)((char *)__dsta + *(int *)(v69 + 24)) = *(void *)((char *)v64 + *(int *)(v69 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    char v3 = v190;
    uint64_t v26 = a3;
    uint64_t v25 = v188;
    uint64_t v67 = v182;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(__dsta, 0, 1, v65);
  }
  uint64_t v74 = v189[9];
  uint64_t v75 = (char *)v192 + v74;
  id v76 = (char *)v191 + v74;
  sub_1BFEC84E0();
  uint64_t v78 = v77;
  uint64_t v79 = *(void *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v76, 1, v77))
  {
    sub_1C09A88B8(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
    memcpy(v75, v76, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v76, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v78);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v67 + 56))(v192, 0, 1, v189);
LABEL_27:
  uint64_t v81 = v25[15];
  uint64_t v82 = *(void **)((char *)a1 + v81);
  uint64_t v83 = *(void **)((char *)v3 + v81);
  *(void *)((char *)a1 + v81) = v83;
  id v84 = v83;

  *((unsigned char *)a1 + v25[16]) = *((unsigned char *)v3 + v25[16]);
  *(void *)((char *)a1 + v25[17]) = *(void *)((char *)v3 + v25[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = v25[18];
  uint64_t v86 = (char *)a1 + v85;
  uint64_t v87 = (char *)v3 + v85;
  uint64_t v88 = sub_1C151D6DC();
  uint64_t v89 = *(void *)(v88 - 8);
  id v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  LODWORD(v82) = v90(v86, 1, v88);
  int v91 = v90(v87, 1, v88);
  if (v82)
  {
    if (!v91)
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
LABEL_32:
    sub_1C09A88B8(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v86, v87, *(void *)(*(void *)(v92 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v89 + 24))(v86, v87, v88);
LABEL_33:
  uint64_t v93 = v26[5];
  v193 = a1;
  uint64_t v94 = (void **)((char *)a1 + v93);
  uint64_t v95 = (char *)v3 + v93;
  uint64_t v96 = *(void **)((char *)v3 + v93);
  uint64_t v97 = *v94;
  *uint64_t v94 = v96;
  id v98 = v96;

  uint64_t v99 = (int *)type metadata accessor for FeedContext();
  uint64_t v100 = v99[5];
  uint64_t v101 = (char *)v94 + v100;
  uint64_t v102 = &v95[v100];
  uint64_t v103 = (int *)type metadata accessor for BundleSession();
  uint64_t v104 = *((void *)v103 - 1);
  uint64_t v105 = *(uint64_t (**)(char *, uint64_t, int *))(v104 + 48);
  LODWORD(v97) = v105(v101, 1, v103);
  int v106 = v105(v102, 1, v103);
  if (v97)
  {
    if (!v106)
    {
      *(void *)uint64_t v101 = *(void *)v102;
      (*(void (**)(char *, char *, uint64_t))(v186 + 16))(&v101[v103[5]], &v102[v103[5]], v187);
      v101[v103[6]] = v102[v103[6]];
      v101[v103[7]] = v102[v103[7]];
      *(_OWORD *)&v101[v103[8]] = *(_OWORD *)&v102[v103[8]];
      *(void *)&v101[v103[9]] = *(void *)&v102[v103[9]];
      v101[v103[10]] = v102[v103[10]];
      v101[v103[11]] = v102[v103[11]];
      id v107 = *(void (**)(char *, void, uint64_t, int *))(v104 + 56);
      swift_bridgeObjectRetain();
      v107(v101, 0, 1, v103);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v106)
  {
    sub_1C09AB0D8((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_38:
    sub_1C09A88B8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v101, v102, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_39;
  }
  *(void *)uint64_t v101 = *(void *)v102;
  v181(&v101[v103[5]], &v102[v103[5]], v187);
  v101[v103[6]] = v102[v103[6]];
  v101[v103[7]] = v102[v103[7]];
  *(_OWORD *)&v101[v103[8]] = *(_OWORD *)&v102[v103[8]];
  *(void *)&v101[v103[9]] = *(void *)&v102[v103[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v101[v103[10]] = v102[v103[10]];
  v101[v103[11]] = v102[v103[11]];
LABEL_39:
  *((unsigned char *)v94 + v99[6]) = v95[v99[6]];
  *((unsigned char *)v94 + v99[7]) = v95[v99[7]];
  *((unsigned char *)v94 + v99[8]) = v95[v99[8]];
  *((unsigned char *)v94 + v99[9]) = v95[v99[9]];
  *(void **)((char *)v94 + v99[10]) = *(void **)&v95[v99[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v94 + v99[11]) = *(void **)&v95[v99[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = v99[12];
  uint64_t v110 = (void **)((char *)v94 + v109);
  uint64_t v111 = &v95[v109];
  uint64_t v112 = *(uint64_t *)((char *)v94 + v109 + 8);
  unint64_t v113 = *(void *)&v95[v109 + 8] - 1;
  if ((unint64_t)(v112 - 1) < 3)
  {
    if (v113 >= 3)
    {
      *uint64_t v110 = *(void *)v111;
      v110[1] = *((void *)v111 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_46;
    }
    goto LABEL_44;
  }
  if (v113 < 3)
  {
    sub_1C09AB0D8((uint64_t)v110, (uint64_t (*)(void))sub_1BFF97D54);
LABEL_44:
    *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
    goto LABEL_46;
  }
  *uint64_t v110 = *(void *)v111;
  v110[1] = *((void *)v111 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_46:
  *((unsigned char *)v94 + v99[13]) = v95[v99[13]];
  uint64_t v114 = v99[14];
  uint64_t v115 = *(void **)((char *)v94 + v114);
  uint64_t v116 = *(void **)&v95[v114];
  *(void **)((char *)v94 + v114) = v116;
  id v117 = v116;

  uint64_t v118 = v99[15];
  uint64_t v119 = (char *)v94 + v118;
  uint64_t v120 = &v95[v118];
  *(void **)((char *)v94 + v118) = *(void **)&v95[v118];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v119 + 1) = *((void *)v120 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v121 = a3[6];
  uint64_t v122 = (uint64_t)v193 + v121;
  uint64_t v123 = (char *)v190 + v121;
  uint64_t v124 = *(void *)((char *)v190 + v121 + 24);
  if (!*(void *)((char *)v193 + v121 + 24))
  {
    if (v124)
    {
      *(void *)(v122 + 24) = v124;
      *(void *)(v122 + 32) = *((void *)v123 + 4);
      (**(void (***)(uint64_t, char *))(v124 - 8))(v122, v123);
      goto LABEL_53;
    }
LABEL_52:
    long long v125 = *(_OWORD *)v123;
    long long v126 = *((_OWORD *)v123 + 1);
    *(void *)(v122 + 32) = *((void *)v123 + 4);
    *(_OWORD *)uint64_t v122 = v125;
    *(_OWORD *)(v122 + 16) = v126;
    goto LABEL_53;
  }
  if (!v124)
  {
    __swift_destroy_boxed_opaque_existential_1(v122);
    goto LABEL_52;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v122, (uint64_t *)v123);
LABEL_53:
  *((unsigned char *)v193 + a3[7]) = *((unsigned char *)v190 + a3[7]);
  uint64_t v127 = a3[8];
  uint64_t v128 = *(void **)((char *)v193 + v127);
  uint64_t v129 = *(void **)((char *)v190 + v127);
  *(void *)((char *)v193 + v127) = v129;
  id v130 = v129;

  *(void *)((char *)v193 + a3[9]) = *(void *)((char *)v190 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v131 = a3[10];
  uint64_t v132 = (char *)v193 + v131;
  uint64_t v133 = (char *)v190 + v131;
  uint64_t v134 = *(void *)v133;
  LOBYTE(v133) = v133[8];
  *(void *)uint64_t v132 = v134;
  v132[8] = (char)v133;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v193 + a3[11]) = *((unsigned char *)v190 + a3[11]);
  *((unsigned char *)v193 + a3[12]) = *((unsigned char *)v190 + a3[12]);
  return v193;
}

uint64_t sub_1C09AB0D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for FormatPluginData(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v80 = sub_1C151631C();
  uint64_t v79 = *(void (**)(char *, char *))(*(void *)(v80 - 8) + 32);
  v79(v8, v9);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
  *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  uint64_t v10 = v6[14];
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1C09A88B8(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v70 = v14;
    uint64_t v71 = v11;
    long long v72 = a3;
    *uint64_t v11 = *v12;
    uint64_t v75 = (int *)v13;
    id v76 = v12;
    uint64_t v16 = *(int *)(v13 + 20);
    id v17 = (_OWORD *)((char *)v11 + v16);
    uint64_t v18 = (char *)v12 + v16;
    *id v17 = *(_OWORD *)((char *)v12 + v16);
    uint64_t v19 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v20 = v19[5];
    __dsta = (char *)v17 + v20;
    __srca = &v18[v20];
    uint64_t v21 = sub_1C1515FDC();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v23(__dsta, __srca, v21);
    uint64_t v24 = v19[6];
    __dst = (char *)v17 + v24;
    __src = &v18[v24];
    uint64_t v69 = v23;
    if ((*(unsigned int (**)(void))(v22 + 48))())
    {
      sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dst, __src, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v23(__dst, __src, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(void *)((char *)v17 + v19[7]) = *(void *)&v18[v19[7]];
    *(_OWORD *)((char *)v17 + v19[8]) = *(_OWORD *)&v18[v19[8]];
    *(_OWORD *)((char *)v17 + v19[9]) = *(_OWORD *)&v18[v19[9]];
    *(void *)((char *)v17 + v19[10]) = *(void *)&v18[v19[10]];
    *(void *)((char *)v17 + v19[11]) = *(void *)&v18[v19[11]];
    *(void *)((char *)v17 + v19[12]) = *(void *)&v18[v19[12]];
    uint64_t v26 = v12;
    *(void *)((char *)v71 + v75[6]) = *(void *)((char *)v12 + v75[6]);
    *(void *)((char *)v71 + v75[7]) = *(void *)((char *)v12 + v75[7]);
    uint64_t v27 = v75[8];
    uint64_t v28 = (_OWORD *)((char *)v71 + v27);
    uint64_t v29 = (_OWORD *)((char *)v76 + v27);
    uint64_t v30 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      sub_1C09A88B8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        _OWORD *v28 = *v29;
        uint64_t v33 = type metadata accessor for GenericDataVisualization();
        v69((char *)v28 + *(int *)(v33 + 20), (char *)v29 + *(int *)(v33 + 20), v21);
        uint64_t v34 = *(int *)(v33 + 24);
        uint64_t v26 = v76;
        *(void *)((char *)v28 + v34) = *(void *)((char *)v29 + v34);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v28, v29, *(void *)(v31 + 64));
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    a3 = v72;
    uint64_t v35 = v75[9];
    uint64_t v36 = (char *)v71 + v35;
    uint64_t v37 = (char *)v26 + v35;
    sub_1BFEC84E0();
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v37, 1, v38))
    {
      sub_1C09A88B8(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
      memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v36, v37, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v70 + 56))(v71, 0, 1, v75);
  }
  *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  *(void *)((char *)a1 + v6[17]) = *(void *)((char *)a2 + v6[17]);
  uint64_t v42 = v6[18];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = sub_1C151D6DC();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    sub_1C09A88B8(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  uint64_t v48 = a3[5];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  *(void *)((char *)a1 + v48) = *(void *)((char *)a2 + v48);
  uint64_t v51 = (int *)type metadata accessor for FeedContext();
  uint64_t v52 = v51[5];
  int v53 = &v49[v52];
  uint64_t v54 = &v50[v52];
  size_t v55 = (int *)type metadata accessor for BundleSession();
  uint64_t v56 = *((void *)v55 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v56 + 48))(v54, 1, v55))
  {
    sub_1C09A88B8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    *(void *)int v53 = *(void *)v54;
    ((void (*)(char *, char *, uint64_t))v79)(&v53[v55[5]], &v54[v55[5]], v80);
    v53[v55[6]] = v54[v55[6]];
    v53[v55[7]] = v54[v55[7]];
    *(_OWORD *)&v53[v55[8]] = *(_OWORD *)&v54[v55[8]];
    *(void *)&v53[v55[9]] = *(void *)&v54[v55[9]];
    v53[v55[10]] = v54[v55[10]];
    v53[v55[11]] = v54[v55[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v56 + 56))(v53, 0, 1, v55);
  }
  v49[v51[6]] = v50[v51[6]];
  v49[v51[7]] = v50[v51[7]];
  v49[v51[8]] = v50[v51[8]];
  v49[v51[9]] = v50[v51[9]];
  *(void *)&v49[v51[10]] = *(void *)&v50[v51[10]];
  *(void *)&v49[v51[11]] = *(void *)&v50[v51[11]];
  *(_OWORD *)&v49[v51[12]] = *(_OWORD *)&v50[v51[12]];
  v49[v51[13]] = v50[v51[13]];
  *(void *)&v49[v51[14]] = *(void *)&v50[v51[14]];
  *(_OWORD *)&v49[v51[15]] = *(_OWORD *)&v50[v51[15]];
  uint64_t v58 = a3[6];
  uint64_t v59 = a3[7];
  uint64_t v60 = (char *)a1 + v58;
  uint64_t v61 = (char *)a2 + v58;
  long long v62 = *((_OWORD *)v61 + 1);
  *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
  *((_OWORD *)v60 + 1) = v62;
  *((void *)v60 + 4) = *((void *)v61 + 4);
  *((unsigned char *)a1 + v59) = *((unsigned char *)a2 + v59);
  uint64_t v63 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v63) = *(void *)((char *)a2 + v63);
  uint64_t v64 = a3[10];
  uint64_t v65 = a3[11];
  uint64_t v66 = (char *)a1 + v64;
  uint64_t v67 = (char *)a2 + v64;
  *(void *)uint64_t v66 = *(void *)v67;
  v66[8] = v67[8];
  *((unsigned char *)a1 + v65) = *((unsigned char *)a2 + v65);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

void *assignWithTake for FormatPluginData(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v156 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v156(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  swift_unknownObjectRelease();
  uint64_t v12 = v6[12];
  uint64_t v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  swift_unknownObjectRelease();
  uint64_t v14 = v6[14];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v157 = *(void *)(v17 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 48);
  uint64_t v165 = v15;
  LODWORD(v15) = v18(v15, 1, v17);
  uint64_t v162 = (int *)v17;
  __src = v16;
  int v19 = v18(v16, 1, v17);
  uint64_t v160 = v11;
  uint64_t v161 = v10;
  if (!v15)
  {
    if (v19)
    {
      sub_1C09AB0D8((uint64_t)v165, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1C09A88B8(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
      size_t v21 = *(void *)(*(void *)(v23 - 8) + 64);
      uint64_t v22 = v165;
      goto LABEL_6;
    }
    uint64_t v36 = *((void *)v16 + 1);
    *(void *)uint64_t v165 = *(void *)v16;
    *((void *)v165 + 1) = v36;
    swift_bridgeObjectRelease();
    uint64_t v37 = *(int *)(v17 + 20);
    uint64_t v38 = &v165[v37];
    uint64_t v39 = &v16[v37];
    uint64_t v40 = *(void *)&v16[v37 + 8];
    *(void *)uint64_t v38 = *(void *)&v16[v37];
    *((void *)v38 + 1) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = type metadata accessor for FormatWebEmbed();
    uint64_t v42 = *(int *)(v41 + 20);
    uint64_t v158 = &v38[v42];
    uint64_t v43 = &v39[v42];
    uint64_t v44 = sub_1C1515FDC();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v45 + 40);
    v146(v158, v43, v44);
    int v155 = (int *)v41;
    uint64_t v46 = *(int *)(v41 + 24);
    uint64_t v159 = v39;
    uint64_t v47 = &v39[v46];
    uint64_t v147 = v45;
    uint64_t v48 = *(uint64_t (**)(void))(v45 + 48);
    uint64_t v152 = &v38[v46];
    LODWORD(v39) = v48();
    uint64_t v149 = v44;
    int v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v48)(v47, 1, v44);
    if (v39)
    {
      if (v49)
      {
        sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v51 = *(void *)(*(void *)(v50 - 8) + 64);
        uint64_t v52 = v152;
LABEL_21:
        memcpy(v52, v47, v51);
        goto LABEL_52;
      }
      (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v152, v47, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v152, 0, 1, v44);
    }
    else
    {
      if (v49)
      {
        (*(void (**)(char *, uint64_t))(v147 + 8))(v152, v44);
        sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v51 = *(void *)(*(void *)(v61 - 8) + 64);
        uint64_t v52 = v152;
        goto LABEL_21;
      }
      v146(v152, v47, v44);
    }
LABEL_52:
    *(void *)&v38[v155[7]] = *(void *)&v159[v155[7]];
    swift_release();
    uint64_t v114 = v155[8];
    uint64_t v115 = &v38[v114];
    uint64_t v116 = &v159[v114];
    uint64_t v118 = *(void *)v116;
    uint64_t v117 = *((void *)v116 + 1);
    *(void *)uint64_t v115 = v118;
    *((void *)v115 + 1) = v117;
    swift_bridgeObjectRelease();
    uint64_t v119 = v155[9];
    uint64_t v120 = &v38[v119];
    uint64_t v121 = &v159[v119];
    uint64_t v123 = *(void *)v121;
    uint64_t v122 = *((void *)v121 + 1);
    *(void *)uint64_t v120 = v123;
    *((void *)v120 + 1) = v122;
    swift_bridgeObjectRelease();
    *(void *)&v38[v155[10]] = *(void *)&v159[v155[10]];
    *(void *)&v38[v155[11]] = *(void *)&v159[v155[11]];
    swift_bridgeObjectRelease();
    *(void *)&v38[v155[12]] = *(void *)&v159[v155[12]];
    swift_bridgeObjectRelease();
    *(void *)&v165[v162[6]] = *(void *)&__src[v162[6]];
    swift_release();
    *(void *)&v165[v162[7]] = *(void *)&__src[v162[7]];
    swift_release();
    uint64_t v124 = v162[8];
    long long v125 = &v165[v124];
    long long v126 = &__src[v124];
    uint64_t v127 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v128 = *(void *)(v127 - 8);
    uint64_t v129 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v128 + 48);
    int v130 = v129(v125, 1, v127);
    int v131 = v129(v126, 1, v127);
    if (v130)
    {
      if (!v131)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)long long v125 = *(_OWORD *)v126;
          uint64_t v132 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v147 + 32))(&v125[*(int *)(v132 + 20)], &v126[*(int *)(v132 + 20)], v149);
          *(void *)&v125[*(int *)(v132 + 24)] = *(void *)&v126[*(int *)(v132 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v125, v126, *(void *)(v128 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
        goto LABEL_65;
      }
    }
    else
    {
      if (!v131)
      {
        if (a1 == a2) {
          goto LABEL_65;
        }
        sub_1C09AB0D8((uint64_t)v125, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)long long v125 = *(_OWORD *)v126;
          uint64_t v135 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v147 + 32))(&v125[*(int *)(v135 + 20)], &v126[*(int *)(v135 + 20)], v149);
          *(void *)&v125[*(int *)(v135 + 24)] = *(void *)&v126[*(int *)(v135 + 24)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_65;
        }
        size_t v134 = *(void *)(v128 + 64);
LABEL_59:
        memcpy(v125, v126, v134);
LABEL_65:
        uint64_t v136 = v162[9];
        uint64_t v137 = &v165[v136];
        uint64_t v138 = &__src[v136];
        sub_1BFEC84E0();
        uint64_t v140 = v139;
        uint64_t v141 = *(void *)(v139 - 8);
        uint64_t v142 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
        int v143 = v142(v137, 1, v139);
        int v144 = v142(v138, 1, v140);
        if (v143)
        {
          if (!v144)
          {
            (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v137, v138, v140);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v137, 0, 1, v140);
            goto LABEL_8;
          }
        }
        else
        {
          if (!v144)
          {
            (*(void (**)(char *, char *, uint64_t))(v141 + 40))(v137, v138, v140);
            goto LABEL_8;
          }
          (*(void (**)(char *, uint64_t))(v141 + 8))(v137, v140);
        }
        sub_1C09A88B8(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        size_t v21 = *(void *)(*(void *)(v145 - 8) + 64);
        uint64_t v22 = v137;
        uint64_t v24 = v138;
LABEL_7:
        memcpy(v22, v24, v21);
LABEL_8:
        uint64_t v25 = a3;
        goto LABEL_28;
      }
      sub_1C09AB0D8((uint64_t)v125, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1C09A88B8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    size_t v134 = *(void *)(*(void *)(v133 - 8) + 64);
    goto LABEL_59;
  }
  if (v19)
  {
    sub_1C09A88B8(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    size_t v21 = *(void *)(*(void *)(v20 - 8) + 64);
    uint64_t v22 = v165;
LABEL_6:
    uint64_t v24 = v16;
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v165 = *(_OWORD *)v16;
  uint64_t v26 = *(int *)(v17 + 20);
  uint64_t v27 = &v165[v26];
  uint64_t v28 = &v16[v26];
  *(_OWORD *)&v165[v26] = *(_OWORD *)&v16[v26];
  uint64_t v29 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v30 = v29[5];
  uint64_t v150 = &v28[v30];
  uint64_t v153 = &v27[v30];
  uint64_t v31 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v33(v153, v150, v31);
  uint64_t v34 = v29[6];
  uint64_t v154 = &v27[v34];
  uint64_t v151 = &v28[v34];
  int v148 = v33;
  if ((*(unsigned int (**)(void))(v32 + 48))())
  {
    sub_1C09A88B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v154, v151, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v33(v154, v151, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v154, 0, 1, v31);
  }
  uint64_t v53 = v31;
  *(void *)&v27[v29[7]] = *(void *)&v28[v29[7]];
  *(_OWORD *)&v27[v29[8]] = *(_OWORD *)&v28[v29[8]];
  *(_OWORD *)&v27[v29[9]] = *(_OWORD *)&v28[v29[9]];
  *(void *)&v27[v29[10]] = *(void *)&v28[v29[10]];
  *(void *)&v27[v29[11]] = *(void *)&v28[v29[11]];
  *(void *)&v27[v29[12]] = *(void *)&v28[v29[12]];
  *(void *)&v165[v162[6]] = *(void *)&__src[v162[6]];
  *(void *)&v165[v162[7]] = *(void *)&__src[v162[7]];
  uint64_t v54 = v162[8];
  size_t v55 = &v165[v54];
  uint64_t v56 = &__src[v54];
  uint64_t v57 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    sub_1C09A88B8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    uint64_t v25 = a3;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)size_t v55 = *(_OWORD *)v56;
      uint64_t v60 = type metadata accessor for GenericDataVisualization();
      v148(&v55[*(int *)(v60 + 20)], &v56[*(int *)(v60 + 20)], v53);
      *(void *)&v55[*(int *)(v60 + 24)] = *(void *)&v56[*(int *)(v60 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v55, v56, *(void *)(v58 + 64));
    }
    uint64_t v25 = a3;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  uint64_t v62 = v162[9];
  uint64_t v63 = &v165[v62];
  uint64_t v64 = &__src[v62];
  sub_1BFEC84E0();
  uint64_t v66 = v65;
  uint64_t v67 = *(void *)(v65 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65))
  {
    sub_1C09A88B8(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
    memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v63, v64, v66);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v157 + 56))(v165, 0, 1, v162);
LABEL_28:
  uint64_t v69 = v6[15];
  uint64_t v70 = *(void **)((char *)a1 + v69);
  *(void *)((char *)a1 + v69) = *(void *)((char *)a2 + v69);

  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  *(void *)((char *)a1 + v6[17]) = *(void *)((char *)a2 + v6[17]);
  swift_bridgeObjectRelease();
  uint64_t v71 = v6[18];
  long long v72 = (char *)a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  uint64_t v74 = sub_1C151D6DC();
  uint64_t v75 = *(void *)(v74 - 8);
  id v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
  int v77 = v76(v72, 1, v74);
  int v78 = v76(v73, 1, v74);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v72, v73, v74);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
LABEL_33:
    sub_1C09A88B8(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v72, v73, *(void *)(*(void *)(v79 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 40))(v72, v73, v74);
LABEL_34:
  uint64_t v80 = v25[5];
  v166 = a1;
  uint64_t v81 = (char *)a1 + v80;
  __srca = a2;
  uint64_t v82 = (char *)a2 + v80;
  uint64_t v83 = *(void **)((char *)a1 + v80);
  *(void *)((char *)a1 + v80) = *(void *)((char *)a2 + v80);

  id v84 = (int *)type metadata accessor for FeedContext();
  uint64_t v85 = v84[5];
  uint64_t v86 = &v81[v85];
  uint64_t v87 = &v82[v85];
  uint64_t v88 = (int *)type metadata accessor for BundleSession();
  uint64_t v89 = *((void *)v88 - 1);
  id v90 = *(uint64_t (**)(char *, uint64_t, int *))(v89 + 48);
  int v91 = v90(v86, 1, v88);
  int v92 = v90(v87, 1, v88);
  if (v91)
  {
    if (!v92)
    {
      *(void *)uint64_t v86 = *(void *)v87;
      (*(void (**)(char *, char *, uint64_t))(v160 + 32))(&v86[v88[5]], &v87[v88[5]], v161);
      v86[v88[6]] = v87[v88[6]];
      v86[v88[7]] = v87[v88[7]];
      *(_OWORD *)&v86[v88[8]] = *(_OWORD *)&v87[v88[8]];
      *(void *)&v86[v88[9]] = *(void *)&v87[v88[9]];
      v86[v88[10]] = v87[v88[10]];
      v86[v88[11]] = v87[v88[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v92)
  {
    sub_1C09AB0D8((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_39:
    sub_1C09A88B8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v86, v87, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_40;
  }
  *(void *)uint64_t v86 = *(void *)v87;
  v156(&v86[v88[5]], &v87[v88[5]], v161);
  v86[v88[6]] = v87[v88[6]];
  v86[v88[7]] = v87[v88[7]];
  *(_OWORD *)&v86[v88[8]] = *(_OWORD *)&v87[v88[8]];
  *(void *)&v86[v88[9]] = *(void *)&v87[v88[9]];
  swift_bridgeObjectRelease();
  v86[v88[10]] = v87[v88[10]];
  v86[v88[11]] = v87[v88[11]];
LABEL_40:
  v81[v84[6]] = v82[v84[6]];
  v81[v84[7]] = v82[v84[7]];
  v81[v84[8]] = v82[v84[8]];
  v81[v84[9]] = v82[v84[9]];
  *(void *)&v81[v84[10]] = *(void *)&v82[v84[10]];
  swift_bridgeObjectRelease();
  *(void *)&v81[v84[11]] = *(void *)&v82[v84[11]];
  swift_bridgeObjectRelease();
  uint64_t v94 = v84[12];
  uint64_t v95 = (uint64_t)&v81[v94];
  uint64_t v96 = &v82[v94];
  if ((unint64_t)(*(void *)&v81[v94 + 8] - 1) < 3)
  {
LABEL_43:
    *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
    goto LABEL_45;
  }
  uint64_t v97 = *((void *)v96 + 1);
  if ((unint64_t)(v97 - 1) < 3)
  {
    sub_1C09AB0D8(v95, (uint64_t (*)(void))sub_1BFF97D54);
    goto LABEL_43;
  }
  *(void *)uint64_t v95 = *(void *)v96;
  *(void *)(v95 + 8) = v97;
  swift_bridgeObjectRelease();
LABEL_45:
  v81[v84[13]] = v82[v84[13]];
  uint64_t v98 = v84[14];
  uint64_t v99 = *(void **)&v81[v98];
  *(void *)&v81[v98] = *(void *)&v82[v98];

  uint64_t v100 = v84[15];
  uint64_t v101 = &v81[v100];
  uint64_t v102 = &v82[v100];
  *(void *)&v81[v100] = *(void *)&v82[v100];
  swift_bridgeObjectRelease();
  *((void *)v101 + 1) = *((void *)v102 + 1);
  swift_bridgeObjectRelease();
  uint64_t v103 = a3[6];
  uint64_t v104 = (char *)v166 + v103;
  if (*(void *)((char *)v166 + v103 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v166 + v103);
  }
  long long v105 = *(_OWORD *)&__srca[v103 + 16];
  *(_OWORD *)uint64_t v104 = *(_OWORD *)&__srca[v103];
  *((_OWORD *)v104 + 1) = v105;
  *((void *)v104 + 4) = *(void *)&__srca[v103 + 32];
  uint64_t v106 = a3[8];
  *((unsigned char *)v166 + a3[7]) = __srca[a3[7]];
  id v107 = *(void **)((char *)v166 + v106);
  *(void *)((char *)v166 + v106) = *(void *)&__srca[v106];

  *(void *)((char *)v166 + a3[9]) = *(void *)&__srca[a3[9]];
  swift_bridgeObjectRelease();
  uint64_t v108 = a3[10];
  uint64_t v109 = (char *)v166 + v108;
  uint64_t v110 = &__srca[v108];
  uint64_t v111 = *(void *)v110;
  LOBYTE(v110) = v110[8];
  *(void *)uint64_t v109 = v111;
  v109[8] = (char)v110;
  swift_bridgeObjectRelease();
  uint64_t v112 = a3[12];
  *((unsigned char *)v166 + a3[11]) = __srca[a3[11]];
  *((unsigned char *)v166 + v112) = __srca[v112];
  return v166;
}

uint64_t getEnumTagSinglePayload for FormatPluginData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C09ACE9C);
}

uint64_t sub_1C09ACE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatContent.Resolved();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for FeedContext();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPluginData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C09ACFC4);
}

uint64_t sub_1C09ACFC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FormatContent.Resolved();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for FeedContext();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1C09AD0D4()
{
  uint64_t result = type metadata accessor for FormatContent.Resolved();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t FeedGroupItem.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFED3A84(v1, a1, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
}

uint64_t sub_1C09AD284@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFED3A84(v1, a1, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
}

uint64_t FeedGroupItem.hash(into:)()
{
  sub_1BFED5EC4();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t FeedGroupItem.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09AD368()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09AD3C4()
{
  sub_1BFED5EC4();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09AD414()
{
  return sub_1C1520E0C();
}

uint64_t FeedGroupItem.debugIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1F4188790](v2);
  BOOL v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (id *)((char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFED3A84(v1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v25 = *((_OWORD *)v16 + 7);
      long long v64 = *((_OWORD *)v16 + 6);
      v65[0] = v25;
      *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)(v16 + 121);
      long long v26 = *((_OWORD *)v16 + 1);
      long long v58 = *(_OWORD *)v16;
      long long v59 = v26;
      long long v27 = *((_OWORD *)v16 + 3);
      long long v60 = *((_OWORD *)v16 + 2);
      long long v61 = v27;
      long long v28 = *((_OWORD *)v16 + 5);
      long long v62 = *((_OWORD *)v16 + 4);
      long long v63 = v28;
      uint64_t v29 = (void *)v58;
      sub_1C0187FB0((uint64_t)&v58);
      id v30 = objc_msgSend(v29, sel_identifier);
      uint64_t v24 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v58);
      sub_1C01880A4((uint64_t)&v58);
      return v24;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0x736E6F6974706FLL;
    case 3u:
      sub_1BFED03E0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      return 0x72656874616577;
    case 4u:
      long long v31 = *((_OWORD *)v16 + 13);
      long long v69 = *((_OWORD *)v16 + 12);
      long long v70 = v31;
      long long v71 = *((_OWORD *)v16 + 14);
      uint64_t v72 = *((void *)v16 + 30);
      long long v32 = *((_OWORD *)v16 + 9);
      v65[1] = *((_OWORD *)v16 + 8);
      long long v66 = v32;
      long long v33 = *((_OWORD *)v16 + 11);
      long long v67 = *((_OWORD *)v16 + 10);
      long long v68 = v33;
      long long v34 = *((_OWORD *)v16 + 5);
      long long v62 = *((_OWORD *)v16 + 4);
      long long v63 = v34;
      long long v35 = *((_OWORD *)v16 + 7);
      long long v64 = *((_OWORD *)v16 + 6);
      v65[0] = v35;
      long long v36 = *((_OWORD *)v16 + 1);
      long long v58 = *(_OWORD *)v16;
      long long v59 = v36;
      long long v37 = *((_OWORD *)v16 + 3);
      long long v60 = *((_OWORD *)v16 + 2);
      long long v61 = v37;
      sub_1C01F0AC8((uint64_t)&v58);
      return 0x6C6C6177796170;
    case 5u:
      sub_1BFED3084((uint64_t)v16, (uint64_t)v13, type metadata accessor for FeedHeadline);
      id v38 = objc_msgSend(v13[5], sel_identifier);
      uint64_t v24 = sub_1C151E62C();

      uint64_t v39 = type metadata accessor for FeedHeadline;
      uint64_t v40 = (uint64_t)v13;
      goto LABEL_16;
    case 6u:
      sub_1BFED3084((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v24 = FeedWebEmbed.debugIdentifier.getter();
      uint64_t v39 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      uint64_t v40 = (uint64_t)v10;
      goto LABEL_16;
    case 7u:
      uint64_t v41 = *(void **)v16;
      id v42 = objc_msgSend(v41, sel_backingTag);
      id v43 = objc_msgSend(v42, sel_identifier);
      uint64_t v44 = sub_1C151E62C();
      uint64_t v46 = v45;

      LOBYTE(v66) = 0;
      BYTE8(v59) = 0;
      BYTE8(v60) = 0;
      id v47 = objc_retainAutoreleasedReturnValue(objc_msgSend(v42, sel_identifier, v44, v46, v42, *((void *)&v59 + 1), 0, *((void *)&v60 + 1), 0, 0xE000000000000000, 0, MEMORY[0x1E4FBC870], 0, 1, 0, 0, 0, 0,
                0,
                0,
                (void)v66));
      uint64_t v24 = sub_1C151E62C();

      goto LABEL_10;
    case 8u:
      swift_bridgeObjectRetain();
      id v48 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v24 = sub_1C151E62C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();

      return v24;
    case 9u:
      long long v49 = *((_OWORD *)v16 + 11);
      long long v67 = *((_OWORD *)v16 + 10);
      long long v68 = v49;
      long long v69 = *((_OWORD *)v16 + 12);
      long long v50 = *((_OWORD *)v16 + 7);
      long long v64 = *((_OWORD *)v16 + 6);
      v65[0] = v50;
      long long v51 = *((_OWORD *)v16 + 9);
      v65[1] = *((_OWORD *)v16 + 8);
      long long v66 = v51;
      long long v52 = *((_OWORD *)v16 + 3);
      long long v60 = *((_OWORD *)v16 + 2);
      long long v61 = v52;
      long long v53 = *((_OWORD *)v16 + 5);
      long long v62 = *((_OWORD *)v16 + 4);
      long long v63 = v53;
      long long v54 = *((_OWORD *)v16 + 1);
      long long v58 = *(_OWORD *)v16;
      long long v59 = v54;
      uint64_t v24 = *((void *)&v60 + 1);
      swift_bridgeObjectRetain();
      sub_1C01F0A74((uint64_t)&v58);
      return v24;
    case 0xAu:
      uint64_t v55 = *((void *)v16 + 3);
      unint64_t v56 = *((void *)v16 + 4);
      uint64_t v24 = *((void *)v16 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEFC20(v55, v56);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v24;
    case 0xBu:
      sub_1BFED3084((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v24 = *((void *)v7 + 5);
      swift_bridgeObjectRetain();
      uint64_t v39 = (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic;
      uint64_t v40 = (uint64_t)v7;
      goto LABEL_16;
    case 0xCu:
      sub_1BFED3084((uint64_t)v16, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
      uint64_t v24 = sub_1C151D65C();
      uint64_t v39 = (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd;
      uint64_t v40 = (uint64_t)v4;
LABEL_16:
      sub_1BFED03E0(v40, v39);
      break;
    default:
      uint64_t v17 = *(void **)v16;
      uint64_t v18 = (void *)*((void *)v16 + 1);
      id v19 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v20 = sub_1C151E62C();
      uint64_t v22 = v21;

      LOBYTE(v66) = 0;
      BYTE8(v59) = 0;
      BYTE8(v60) = 0;
      id v23 = objc_retainAutoreleasedReturnValue(objc_msgSend(v17, sel_identifier, v20, v22, v17, *((void *)&v59 + 1), 0, *((void *)&v60 + 1), 0, 0xE000000000000000, 0, MEMORY[0x1E4FBC870], 0, 1, 0, 0, 0, 0,
                0,
                0,
                (void)v66));
      uint64_t v24 = sub_1C151E62C();
      swift_unknownObjectRelease();

LABEL_10:
      sub_1BFEA4290((uint64_t)&v58);
      break;
  }
  return v24;
}

uint64_t FeedGroupItem.debugSourceName.getter()
{
  uint64_t v1 = v0;
  sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  BOOL v4 = (id *)((char *)&v46 - v3);
  uint64_t v5 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (id *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFED3A84(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v21 = *((_OWORD *)v14 + 7);
      long long v52 = *((_OWORD *)v14 + 6);
      v53[0] = v21;
      *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)(v14 + 121);
      long long v22 = *((_OWORD *)v14 + 1);
      long long v46 = *(_OWORD *)v14;
      long long v47 = v22;
      long long v23 = *((_OWORD *)v14 + 3);
      long long v48 = *((_OWORD *)v14 + 2);
      long long v49 = v23;
      long long v24 = *((_OWORD *)v14 + 5);
      long long v50 = *((_OWORD *)v14 + 4);
      long long v51 = v24;
      long long v25 = (void *)v46;
      sub_1C0187FB0((uint64_t)&v46);
      id v26 = objc_msgSend(objc_msgSend(v25, sel_sourceChannel), sel_name);
      swift_unknownObjectRelease();
      uint64_t v27 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v46);
      sub_1C01880A4((uint64_t)&v46);
      return v27;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 3u:
    case 9u:
    case 0xBu:
    case 0xCu:
      sub_1BFED03E0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      return 0;
    case 4u:
      long long v28 = *((_OWORD *)v14 + 13);
      long long v57 = *((_OWORD *)v14 + 12);
      long long v58 = v28;
      long long v59 = *((_OWORD *)v14 + 14);
      uint64_t v60 = *((void *)v14 + 30);
      long long v29 = *((_OWORD *)v14 + 9);
      v53[1] = *((_OWORD *)v14 + 8);
      long long v54 = v29;
      long long v30 = *((_OWORD *)v14 + 11);
      long long v55 = *((_OWORD *)v14 + 10);
      long long v56 = v30;
      long long v31 = *((_OWORD *)v14 + 5);
      long long v50 = *((_OWORD *)v14 + 4);
      long long v51 = v31;
      long long v32 = *((_OWORD *)v14 + 7);
      long long v52 = *((_OWORD *)v14 + 6);
      v53[0] = v32;
      long long v33 = *((_OWORD *)v14 + 1);
      long long v46 = *(_OWORD *)v14;
      long long v47 = v33;
      long long v34 = *((_OWORD *)v14 + 3);
      long long v48 = *((_OWORD *)v14 + 2);
      long long v49 = v34;
      sub_1C01F0AC8((uint64_t)&v46);
      return 0;
    case 5u:
      sub_1BFED3084((uint64_t)v14, (uint64_t)v11, type metadata accessor for FeedHeadline);
      id v35 = objc_msgSend(v11[5], sel_sourceChannel);
      if (v35)
      {
        id v36 = objc_msgSend(v35, sel_name);
        swift_unknownObjectRelease();
        uint64_t v27 = sub_1C151E62C();
      }
      else
      {
        uint64_t v27 = 0;
      }
      sub_1BFED03E0((uint64_t)v11, type metadata accessor for FeedHeadline);
      return v27;
    case 6u:
      sub_1BFED3084((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C0485F0C((uint64_t)&v7[*(int *)(v5 + 48)], (uint64_t)v4);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
      {
        sub_1C0485F8C((uint64_t)v4);
        uint64_t v27 = 0;
      }
      else
      {
        id v44 = objc_msgSend(v4[5], sel_sourceChannel);
        uint64_t v27 = (uint64_t)v44;
        if (v44)
        {
          id v45 = objc_msgSend(v44, sel_name);
          swift_unknownObjectRelease();
          uint64_t v27 = sub_1C151E62C();
        }
        sub_1BFED03E0((uint64_t)v4, type metadata accessor for FeedHeadline);
      }
      sub_1BFED03E0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v27;
    case 7u:
      long long v37 = *(void **)v14;
      id v38 = objc_msgSend(*(id *)v14, sel_backingTag);
      id v39 = objc_msgSend(v38, sel_identifier);
      uint64_t v40 = sub_1C151E62C();
      uint64_t v42 = v41;

      long long v51 = xmmword_1C152C800;
      long long v52 = 0u;
      memset(v53, 0, sizeof(v53));
      LOBYTE(v54) = 0;

      *(void *)&long long v46 = v40;
      *((void *)&v46 + 1) = v42;
      *(void *)&long long v47 = v38;
      goto LABEL_12;
    case 8u:
      goto LABEL_14;
    case 0xAu:
      sub_1BFEEFC20(*((void *)v14 + 3), *((void *)v14 + 4));
LABEL_14:
      swift_unknownObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    default:
      id v15 = *(id *)v14;
      uint64_t v16 = (void *)*((void *)v14 + 1);
      id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v18 = sub_1C151E62C();
      uint64_t v20 = v19;

      long long v51 = xmmword_1C152C800;
      long long v52 = 0u;
      memset(v53, 0, sizeof(v53));
      LOBYTE(v54) = 0;
      swift_unknownObjectRelease();

      *(void *)&long long v46 = v18;
      *((void *)&v46 + 1) = v20;
      *(void *)&long long v47 = v15;
LABEL_12:
      BYTE8(v47) = 0;
      *(void *)&long long v49 = 0;
      *((void *)&v49 + 1) = 0xE000000000000000;
      *(void *)&long long v48 = 0;
      BYTE8(v48) = 0;
      *(void *)&long long v50 = 0;
      *((void *)&v50 + 1) = MEMORY[0x1E4FBC870];
      sub_1BFEA4290((uint64_t)&v46);
      break;
  }
  return 0;
}

uint64_t FeedGroupItem.debugTitle.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v2 - 8);
  BOOL v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (id *)((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFED3A84(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v19 = *((_OWORD *)v10 + 7);
      long long v61 = *((_OWORD *)v10 + 6);
      v62[0] = v19;
      *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)(v10 + 121);
      long long v20 = *((_OWORD *)v10 + 1);
      long long v55 = *(_OWORD *)v10;
      long long v56 = v20;
      long long v21 = *((_OWORD *)v10 + 3);
      long long v57 = *((_OWORD *)v10 + 2);
      long long v58 = v21;
      long long v22 = *((_OWORD *)v10 + 5);
      long long v59 = *((_OWORD *)v10 + 4);
      long long v60 = v22;
      long long v23 = (void *)v55;
      sub_1C0187FB0((uint64_t)&v55);
      id v24 = objc_msgSend(v23, sel_coverDate);
      uint64_t v18 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v55);
      sub_1C01880A4((uint64_t)&v55);
      return v18;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 3u:
    case 0xBu:
    case 0xCu:
      sub_1BFED03E0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      goto LABEL_21;
    case 4u:
      long long v25 = *((_OWORD *)v10 + 13);
      long long v66 = *((_OWORD *)v10 + 12);
      long long v67 = v25;
      long long v68 = *((_OWORD *)v10 + 14);
      uint64_t v69 = *((void *)v10 + 30);
      long long v26 = *((_OWORD *)v10 + 9);
      v62[1] = *((_OWORD *)v10 + 8);
      long long v63 = v26;
      long long v27 = *((_OWORD *)v10 + 11);
      long long v64 = *((_OWORD *)v10 + 10);
      long long v65 = v27;
      long long v28 = *((_OWORD *)v10 + 5);
      long long v59 = *((_OWORD *)v10 + 4);
      long long v60 = v28;
      long long v29 = *((_OWORD *)v10 + 7);
      long long v61 = *((_OWORD *)v10 + 6);
      v62[0] = v29;
      long long v30 = *((_OWORD *)v10 + 1);
      long long v55 = *(_OWORD *)v10;
      long long v56 = v30;
      long long v31 = *((_OWORD *)v10 + 3);
      long long v57 = *((_OWORD *)v10 + 2);
      long long v58 = v31;
      sub_1C01F0AC8((uint64_t)&v55);
      goto LABEL_21;
    case 5u:
      sub_1BFED3084((uint64_t)v10, (uint64_t)v7, type metadata accessor for FeedHeadline);
      id v32 = objc_msgSend(v7[5], sel_title);
      if (v32)
      {
        long long v33 = v32;
        uint64_t v18 = sub_1C151E62C();
      }
      else
      {
        uint64_t v18 = 0;
      }
      sub_1BFED03E0((uint64_t)v7, type metadata accessor for FeedHeadline);
      return v18;
    case 6u:
      sub_1BFED3084((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v18 = FeedWebEmbed.debugTitle.getter();
      sub_1BFED03E0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v18;
    case 7u:
      long long v34 = *(void **)v10;
      id v35 = objc_msgSend(*(id *)v10, sel_backingTag);
      id v36 = objc_msgSend(v35, sel_identifier);
      uint64_t v37 = sub_1C151E62C();
      uint64_t v39 = v38;

      LOBYTE(v63) = 0;
      BYTE8(v56) = 0;
      BYTE8(v57) = 0;
      id v40 = objc_retainAutoreleasedReturnValue(objc_msgSend(v35, sel_name, v37, v39, v35, *((void *)&v56 + 1), 0, *((void *)&v57 + 1), 0, 0xE000000000000000, 0, MEMORY[0x1E4FBC870], 0, 1, 0, 0, 0, 0,
                0,
                0,
                (void)v63));
      uint64_t v18 = sub_1C151E62C();

      goto LABEL_11;
    case 8u:
      swift_bridgeObjectRetain();
      id v41 = objc_msgSend((id)swift_unknownObjectRetain(), sel_name);
      uint64_t v18 = sub_1C151E62C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();

      return v18;
    case 9u:
      long long v42 = *((_OWORD *)v10 + 11);
      long long v64 = *((_OWORD *)v10 + 10);
      long long v65 = v42;
      long long v66 = *((_OWORD *)v10 + 12);
      long long v43 = *((_OWORD *)v10 + 7);
      long long v61 = *((_OWORD *)v10 + 6);
      v62[0] = v43;
      long long v44 = *((_OWORD *)v10 + 9);
      v62[1] = *((_OWORD *)v10 + 8);
      long long v63 = v44;
      long long v45 = *((_OWORD *)v10 + 3);
      long long v57 = *((_OWORD *)v10 + 2);
      long long v58 = v45;
      long long v46 = *((_OWORD *)v10 + 5);
      long long v59 = *((_OWORD *)v10 + 4);
      long long v60 = v46;
      long long v47 = *((_OWORD *)v10 + 1);
      long long v55 = *(_OWORD *)v10;
      id v48 = objc_retainAutoreleasedReturnValue(objc_msgSend(*((id *)&v45 + 1), sel_title, (void)v55, *((void *)&v55 + 1), v47, (void)v57, *((void *)&v57 + 1), v45, (void)v59, *((void *)&v59 + 1), (void)v60, *((void *)&v60 + 1), (void)v61, *((void *)&v61 + 1), *(void *)&v62[0], *((void *)&v62[0] + 1), *(void *)&v62[1], *((void *)&v62[1] + 1),
                (void)v63,
                *((void *)&v63 + 1),
                (void)v64,
                *((void *)&v64 + 1),
                (void)v65,
                *((void *)&v65 + 1),
                (void)v66,
                *((void *)&v66 + 1)));
      if (v48)
      {
        long long v49 = v48;
        uint64_t v18 = sub_1C151E62C();
      }
      else
      {
        uint64_t v18 = 0;
      }
      sub_1C01F0A74((uint64_t)&v55);
      return v18;
    case 0xAu:
      uint64_t v50 = *((void *)v10 + 3);
      unint64_t v51 = *((void *)v10 + 4);
      sub_1BFF7FF04(v50, v51);
      swift_bridgeObjectRetain();
      id v52 = objc_msgSend((id)swift_unknownObjectRetain(), sel_name);
      if (v52)
      {
        long long v53 = v52;
        uint64_t v18 = sub_1C151E62C();

        sub_1BFEEFC20(v50, v51);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v50, v51);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BFEEFC20(v50, v51);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v50, v51);
        swift_unknownObjectRelease();
LABEL_20:
        swift_bridgeObjectRelease();
LABEL_21:
        uint64_t v18 = 0;
      }
      break;
    default:
      id v11 = *(id *)v10;
      uint64_t v12 = (void *)*((void *)v10 + 1);
      id v13 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v14 = sub_1C151E62C();
      uint64_t v16 = v15;

      LOBYTE(v63) = 0;
      BYTE8(v56) = 0;
      BYTE8(v57) = 0;
      id v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(v11, sel_name, v14, v16, v11, *((void *)&v56 + 1), 0, *((void *)&v57 + 1), 0, 0xE000000000000000, 0, MEMORY[0x1E4FBC870], 0, 1, 0, 0, 0, 0,
                0,
                0,
                (void)v63));
      uint64_t v18 = sub_1C151E62C();
      swift_unknownObjectRelease();

LABEL_11:
      sub_1BFEA4290((uint64_t)&v55);
      break;
  }
  return v18;
}

id FeedGroupItem.debugAssetHandle.getter()
{
  uint64_t v1 = v0;
  sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  BOOL v4 = (id *)((char *)&v46 - v3);
  uint64_t v5 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (id *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFED3A84(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v22 = *((_OWORD *)v14 + 7);
      long long v52 = *((_OWORD *)v14 + 6);
      v53[0] = v22;
      *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)(v14 + 121);
      long long v23 = *((_OWORD *)v14 + 1);
      long long v46 = *(_OWORD *)v14;
      long long v47 = v23;
      long long v24 = *((_OWORD *)v14 + 3);
      long long v48 = *((_OWORD *)v14 + 2);
      long long v49 = v24;
      long long v25 = *((_OWORD *)v14 + 5);
      long long v50 = *((_OWORD *)v14 + 4);
      id v21 = objc_msgSend((id)v46, sel_coverImageAssetHandle, (void)v46, *((void *)&v46 + 1), (void)v47, *((void *)&v47 + 1), (void)v48, *((void *)&v48 + 1), v24, (void)v50, *((void *)&v50 + 1), v25, (void)v52, *((void *)&v52 + 1), *(void *)&v53[0], *((void *)&v53[0] + 1), *(void *)&v53[1], *((void *)&v53[1] + 1));
      sub_1C01880A4((uint64_t)&v46);
      return v21;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 3u:
    case 9u:
    case 0xBu:
    case 0xCu:
      sub_1BFED03E0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      return 0;
    case 4u:
      long long v26 = *((_OWORD *)v14 + 13);
      long long v57 = *((_OWORD *)v14 + 12);
      long long v58 = v26;
      long long v59 = *((_OWORD *)v14 + 14);
      uint64_t v60 = *((void *)v14 + 30);
      long long v27 = *((_OWORD *)v14 + 9);
      v53[1] = *((_OWORD *)v14 + 8);
      long long v54 = v27;
      long long v28 = *((_OWORD *)v14 + 11);
      long long v55 = *((_OWORD *)v14 + 10);
      long long v56 = v28;
      long long v29 = *((_OWORD *)v14 + 5);
      long long v50 = *((_OWORD *)v14 + 4);
      long long v51 = v29;
      long long v30 = *((_OWORD *)v14 + 7);
      long long v52 = *((_OWORD *)v14 + 6);
      v53[0] = v30;
      long long v31 = *((_OWORD *)v14 + 1);
      long long v46 = *(_OWORD *)v14;
      long long v47 = v31;
      long long v32 = *((_OWORD *)v14 + 3);
      long long v48 = *((_OWORD *)v14 + 2);
      long long v49 = v32;
      sub_1C01F0AC8((uint64_t)&v46);
      return 0;
    case 5u:
      sub_1BFED3084((uint64_t)v14, (uint64_t)v11, type metadata accessor for FeedHeadline);
      id v33 = objc_msgSend(v11[5], sel_thumbnail);
      id v21 = objc_msgSend(v33, sel_thumbnailAssetHandle);

      long long v34 = type metadata accessor for FeedHeadline;
      uint64_t v35 = (uint64_t)v11;
      goto LABEL_18;
    case 6u:
      sub_1BFED3084((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C0485F0C((uint64_t)&v7[*(int *)(v5 + 48)], (uint64_t)v4);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
      {
        sub_1C0485F8C((uint64_t)v4);
        id v21 = 0;
      }
      else
      {
        id v44 = objc_msgSend(v4[5], sel_thumbnail);
        id v21 = objc_msgSend(v44, sel_thumbnailAssetHandle);

        sub_1BFED03E0((uint64_t)v4, type metadata accessor for FeedHeadline);
      }
      long long v34 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      uint64_t v35 = (uint64_t)v7;
LABEL_18:
      sub_1BFED03E0(v35, v34);
      return v21;
    case 7u:
      id v36 = *(void **)v14;
      id v37 = objc_msgSend(*(id *)v14, sel_backingTag);
      id v38 = objc_msgSend(v37, sel_identifier);
      uint64_t v39 = sub_1C151E62C();
      uint64_t v41 = v40;

      long long v51 = xmmword_1C152C800;
      long long v52 = 0u;
      memset(v53, 0, sizeof(v53));
      LOBYTE(v54) = 0;
      *(void *)&long long v46 = v39;
      *((void *)&v46 + 1) = v41;
      *(void *)&long long v47 = v37;
      BYTE8(v47) = 0;
      *(void *)&long long v49 = 0;
      *((void *)&v49 + 1) = 0xE000000000000000;
      *(void *)&long long v48 = 0;
      BYTE8(v48) = 0;
      *(void *)&long long v50 = 0;
      *((void *)&v50 + 1) = MEMORY[0x1E4FBC870];
      id v21 = FeedTag.debugAssetHandle.getter();

      goto LABEL_14;
    case 8u:
      swift_unknownObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      return 0;
    case 0xAu:
      uint64_t v42 = *((void *)v14 + 3);
      unint64_t v43 = *((void *)v14 + 4);
      id v21 = objc_msgSend(*((id *)v14 + 7), sel_coverImageAssetHandle);
      sub_1BFEEFC20(v42, v43);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v21;
    default:
      id v15 = *(id *)v14;
      uint64_t v16 = (void *)*((void *)v14 + 1);
      id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v18 = sub_1C151E62C();
      uint64_t v20 = v19;

      long long v51 = xmmword_1C152C800;
      long long v52 = 0u;
      memset(v53, 0, sizeof(v53));
      LOBYTE(v54) = 0;
      *(void *)&long long v46 = v18;
      *((void *)&v46 + 1) = v20;
      *(void *)&long long v47 = v15;
      BYTE8(v47) = 0;
      *(void *)&long long v49 = 0;
      *((void *)&v49 + 1) = 0xE000000000000000;
      *(void *)&long long v48 = 0;
      BYTE8(v48) = 0;
      *(void *)&long long v50 = 0;
      *((void *)&v50 + 1) = MEMORY[0x1E4FBC870];
      id v21 = FeedTag.debugAssetHandle.getter();
      swift_unknownObjectRelease();

LABEL_14:
      sub_1BFEA4290((uint64_t)&v46);
      return v21;
  }
}

uint64_t FeedGroupItem.debugKind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFED3A84(v2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)(v15 + 121);
      long long v24 = *((_OWORD *)v15 + 7);
      long long v65 = *((_OWORD *)v15 + 6);
      v66[0] = v24;
      long long v25 = *((_OWORD *)v15 + 3);
      long long v61 = *((_OWORD *)v15 + 2);
      long long v62 = v25;
      long long v26 = *((_OWORD *)v15 + 5);
      long long v63 = *((_OWORD *)v15 + 4);
      long long v64 = v26;
      long long v27 = *((_OWORD *)v15 + 1);
      long long v59 = *(_OWORD *)v15;
      long long v60 = v27;
      uint64_t v28 = *((void *)&v66[0] + 1);
      unint64_t v29 = *(void *)&v66[1];
      *a1 = *((void *)&v66[0] + 1);
      a1[1] = v29;
      sub_1BFF7FF04(v28, v29);
      return sub_1C01880A4((uint64_t)&v59);
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
    case 0xCu:
      *(_OWORD *)a1 = xmmword_1C1582140;
      uint64_t v16 = (uint64_t (*)(void))type metadata accessor for FeedGroupItem;
      uint64_t v17 = (uint64_t)v15;
      goto LABEL_16;
    case 4u:
      long long v31 = *((_OWORD *)v15 + 13);
      long long v70 = *((_OWORD *)v15 + 12);
      long long v71 = v31;
      long long v72 = *((_OWORD *)v15 + 14);
      uint64_t v73 = *((void *)v15 + 30);
      long long v32 = *((_OWORD *)v15 + 9);
      v66[1] = *((_OWORD *)v15 + 8);
      long long v67 = v32;
      long long v33 = *((_OWORD *)v15 + 11);
      long long v68 = *((_OWORD *)v15 + 10);
      long long v69 = v33;
      long long v34 = *((_OWORD *)v15 + 5);
      long long v63 = *((_OWORD *)v15 + 4);
      long long v64 = v34;
      long long v35 = *((_OWORD *)v15 + 7);
      long long v65 = *((_OWORD *)v15 + 6);
      v66[0] = v35;
      long long v36 = *((_OWORD *)v15 + 1);
      long long v59 = *(_OWORD *)v15;
      long long v60 = v36;
      long long v37 = *((_OWORD *)v15 + 3);
      long long v61 = *((_OWORD *)v15 + 2);
      long long v62 = v37;
      uint64_t result = sub_1C01F0AC8((uint64_t)&v59);
LABEL_7:
      *(_OWORD *)a1 = xmmword_1C1582140;
      return result;
    case 5u:
      sub_1BFED3084((uint64_t)v15, (uint64_t)v12, type metadata accessor for FeedHeadline);
      id v38 = (uint64_t *)&v12[*(int *)(v10 + 48)];
      uint64_t v39 = *v38;
      unint64_t v40 = v38[1];
      *a1 = *v38;
      a1[1] = v40;
      sub_1BFF7FF04(v39, v40);
      uint64_t v16 = type metadata accessor for FeedHeadline;
      uint64_t v17 = (uint64_t)v12;
      goto LABEL_16;
    case 6u:
      sub_1BFED3084((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v41 = *((void *)v9 + 3);
      unint64_t v42 = *((void *)v9 + 4);
      *a1 = v41;
      a1[1] = v42;
      sub_1BFF7FF04(v41, v42);
      uint64_t v16 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      uint64_t v17 = (uint64_t)v9;
      goto LABEL_16;
    case 7u:
      unint64_t v43 = *(void **)v15;
      id v18 = objc_msgSend(v43, sel_backingTag);
      id v44 = objc_msgSend(v18, sel_identifier);
      uint64_t v45 = sub_1C151E62C();
      uint64_t v47 = v46;

      long long v64 = xmmword_1C152C800;
      long long v65 = 0u;
      memset(v66, 0, sizeof(v66));
      LOBYTE(v67) = 0;

      *(void *)&long long v59 = v45;
      *((void *)&v59 + 1) = v47;
      goto LABEL_11;
    case 8u:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(_OWORD *)a1 = xmmword_1C157BA40;
      return result;
    case 9u:
      long long v48 = *((_OWORD *)v15 + 11);
      long long v68 = *((_OWORD *)v15 + 10);
      long long v69 = v48;
      long long v70 = *((_OWORD *)v15 + 12);
      long long v49 = *((_OWORD *)v15 + 7);
      long long v65 = *((_OWORD *)v15 + 6);
      v66[0] = v49;
      long long v50 = *((_OWORD *)v15 + 9);
      v66[1] = *((_OWORD *)v15 + 8);
      long long v67 = v50;
      long long v51 = *((_OWORD *)v15 + 3);
      long long v61 = *((_OWORD *)v15 + 2);
      long long v62 = v51;
      long long v52 = *((_OWORD *)v15 + 5);
      long long v63 = *((_OWORD *)v15 + 4);
      long long v64 = v52;
      long long v53 = *((_OWORD *)v15 + 1);
      long long v59 = *(_OWORD *)v15;
      long long v60 = v53;
      unint64_t v54 = v61;
      *a1 = *((void *)&v53 + 1);
      a1[1] = v54;
      sub_1BFF7FF04(*((uint64_t *)&v53 + 1), v54);
      return sub_1C01F0A74((uint64_t)&v59);
    case 0xAu:
      uint64_t v55 = *((void *)v15 + 3);
      unint64_t v56 = *((void *)v15 + 4);
      *a1 = v55;
      a1[1] = v56;
      sub_1BFF7FF04(v55, v56);
      sub_1BFEEFC20(v55, v56);
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    case 0xBu:
      sub_1BFED3084((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v57 = *((void *)v6 + 3);
      unint64_t v58 = *((void *)v6 + 4);
      *a1 = v57;
      a1[1] = v58;
      sub_1BFF7FF04(v57, v58);
      uint64_t v16 = (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic;
      uint64_t v17 = (uint64_t)v6;
LABEL_16:
      uint64_t result = sub_1BFED03E0(v17, v16);
      break;
    default:
      id v18 = *(id *)v15;
      uint64_t v19 = (void *)*((void *)v15 + 1);
      id v20 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v21 = sub_1C151E62C();
      uint64_t v23 = v22;

      long long v64 = xmmword_1C152C800;
      long long v65 = 0u;
      memset(v66, 0, sizeof(v66));
      LOBYTE(v67) = 0;
      swift_unknownObjectRelease();

      *(void *)&long long v59 = v21;
      *((void *)&v59 + 1) = v23;
LABEL_11:
      *(void *)&long long v60 = v18;
      BYTE8(v60) = 0;
      *(void *)&long long v62 = 0;
      *((void *)&v62 + 1) = 0xE000000000000000;
      *(void *)&long long v61 = 0;
      BYTE8(v61) = 0;
      *(void *)&long long v63 = 0;
      *((void *)&v63 + 1) = MEMORY[0x1E4FBC870];
      *(_OWORD *)a1 = xmmword_1C1530560;
      uint64_t result = sub_1BFEA4290((uint64_t)&v59);
      break;
  }
  return result;
}

id FeedGroupItem.debugScoreProfile.getter()
{
  uint64_t v1 = v0;
  sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (id *)((char *)&v41 - v3);
  uint64_t v5 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (id *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFED3A84(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v21 = *((_OWORD *)v14 + 7);
      long long v47 = *((_OWORD *)v14 + 6);
      v48[0] = v21;
      *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)(v14 + 121);
      long long v22 = *((_OWORD *)v14 + 3);
      long long v43 = *((_OWORD *)v14 + 2);
      long long v44 = v22;
      long long v23 = *((_OWORD *)v14 + 5);
      long long v45 = *((_OWORD *)v14 + 4);
      long long v46 = v23;
      long long v24 = *((_OWORD *)v14 + 1);
      long long v41 = *(_OWORD *)v14;
      long long v42 = v24;
      id v25 = (id)*((void *)&v44 + 1);
      id v26 = *((id *)&v44 + 1);
      sub_1C01880A4((uint64_t)&v41);
      return v25;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 3u:
    case 9u:
    case 0xBu:
    case 0xCu:
      sub_1BFED03E0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      return 0;
    case 4u:
      long long v27 = *((_OWORD *)v14 + 13);
      long long v52 = *((_OWORD *)v14 + 12);
      long long v53 = v27;
      long long v54 = *((_OWORD *)v14 + 14);
      uint64_t v55 = *((void *)v14 + 30);
      long long v28 = *((_OWORD *)v14 + 9);
      v48[1] = *((_OWORD *)v14 + 8);
      long long v49 = v28;
      long long v29 = *((_OWORD *)v14 + 11);
      long long v50 = *((_OWORD *)v14 + 10);
      long long v51 = v29;
      long long v30 = *((_OWORD *)v14 + 5);
      long long v45 = *((_OWORD *)v14 + 4);
      long long v46 = v30;
      long long v31 = *((_OWORD *)v14 + 7);
      long long v47 = *((_OWORD *)v14 + 6);
      v48[0] = v31;
      long long v32 = *((_OWORD *)v14 + 1);
      long long v41 = *(_OWORD *)v14;
      long long v42 = v32;
      long long v33 = *((_OWORD *)v14 + 3);
      long long v43 = *((_OWORD *)v14 + 2);
      long long v44 = v33;
      sub_1C01F0AC8((uint64_t)&v41);
      return 0;
    case 5u:
      sub_1BFED3084((uint64_t)v14, (uint64_t)v11, type metadata accessor for FeedHeadline);
      id v25 = objc_msgSend(v11[5], sel_scoreProfile);
      sub_1BFED03E0((uint64_t)v11, type metadata accessor for FeedHeadline);
      return v25;
    case 6u:
      sub_1BFED3084((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C0485F0C((uint64_t)&v7[*(int *)(v5 + 48)], (uint64_t)v4);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
      {
        sub_1C0485F8C((uint64_t)v4);
        id v25 = 0;
      }
      else
      {
        id v25 = objc_msgSend(v4[5], sel_scoreProfile);
        sub_1BFED03E0((uint64_t)v4, type metadata accessor for FeedHeadline);
      }
      sub_1BFED03E0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v25;
    case 7u:
      long long v34 = *(void **)v14;
      id v35 = objc_msgSend(*(id *)v14, sel_backingTag);
      id v36 = objc_msgSend(v35, sel_identifier);
      uint64_t v37 = sub_1C151E62C();
      uint64_t v39 = v38;

      long long v46 = xmmword_1C152C800;
      long long v47 = 0u;
      memset(v48, 0, sizeof(v48));
      LOBYTE(v49) = 0;

      *(void *)&long long v41 = v37;
      *((void *)&v41 + 1) = v39;
      *(void *)&long long v42 = v35;
      goto LABEL_11;
    case 8u:
      goto LABEL_13;
    case 0xAu:
      sub_1BFEEFC20(*((void *)v14 + 3), *((void *)v14 + 4));
LABEL_13:
      swift_unknownObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    default:
      id v15 = *(id *)v14;
      uint64_t v16 = (void *)*((void *)v14 + 1);
      id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v18 = sub_1C151E62C();
      uint64_t v20 = v19;

      long long v46 = xmmword_1C152C800;
      long long v47 = 0u;
      memset(v48, 0, sizeof(v48));
      LOBYTE(v49) = 0;
      swift_unknownObjectRelease();

      *(void *)&long long v41 = v18;
      *((void *)&v41 + 1) = v20;
      *(void *)&long long v42 = v15;
LABEL_11:
      BYTE8(v42) = 0;
      *(void *)&long long v44 = 0;
      *((void *)&v44 + 1) = 0xE000000000000000;
      *(void *)&long long v43 = 0;
      BYTE8(v43) = 0;
      *(void *)&long long v45 = 0;
      *((void *)&v45 + 1) = MEMORY[0x1E4FBC870];
      sub_1BFEA4290((uint64_t)&v41);
      break;
  }
  return 0;
}

uint64_t dispatch thunk of FeedGroupItemType.groupItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

char *initializeBufferWithCopyOfBuffer for FeedGroupItem(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *a2;
        uint64_t v10 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v10;
        *((void *)a1 + 2) = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((void *)a1 + 4) = a2[4];
        a1[40] = *((unsigned char *)a2 + 40);
        uint64_t v11 = a2[7];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = v11;
        a1[64] = *((unsigned char *)a2 + 64);
        uint64_t v12 = a2[10];
        uint64_t v13 = v9;
        swift_bridgeObjectRetain();
        uint64_t v14 = v11;
        if (v12 == (char *)1)
        {
          long long v15 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 88) = v15;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          *((void *)a1 + 9) = a2[9];
          *((void *)a1 + 10) = v12;
          uint64_t v80 = a2[12];
          *((void *)a1 + 11) = a2[11];
          *((void *)a1 + 12) = v80;
          uint64_t v82 = a2[13];
          uint64_t v81 = a2[14];
          *((void *)a1 + 13) = v82;
          *((void *)a1 + 14) = v81;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v83 = v82;
        }
        id v84 = a2 + 15;
        unint64_t v85 = (unint64_t)a2[16];
        if (v85 >= 0x11)
        {
          *((void *)a1 + 15) = *v84;
          *((void *)a1 + 16) = v85;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v84;
        }
        a1[136] = *((unsigned char *)a2 + 136);
        goto LABEL_138;
      case 2u:
        uint64_t v16 = *a2;
        id v17 = a2[1];
        *(void *)a1 = v16;
        *((void *)a1 + 1) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v18 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v18;
        a1[32] = *((unsigned char *)a2 + 32);
        uint64_t v19 = (int *)type metadata accessor for FeedWeather(0);
        uint64_t v20 = v19[7];
        long long v21 = &a1[v20];
        uint64_t v22 = (uint64_t)a2 + v20;
        uint64_t v23 = sub_1C151E2BC();
        long long v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
        a1[v19[8]] = *((unsigned char *)a2 + v19[8]);
        uint64_t v25 = v19[9];
        id v26 = &a1[v25];
        uint64_t v27 = (uint64_t)a2 + v25;
        sub_1BFEEF884(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
        uint64_t v29 = v28;
        long long v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
        v30(v26, v27, v28);
        long long v31 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v30(&v26[v31[5]], v27 + v31[5], v29);
        v30(&v26[v31[6]], v27 + v31[6], v29);
        v30(&v26[v31[7]], v27 + v31[7], v29);
        uint64_t v32 = v19[10];
        long long v33 = &a1[v32];
        long long v34 = (char **)((char *)a2 + v32);
        uint64_t v35 = v34[1];
        *(void *)long long v33 = *v34;
        *((void *)v33 + 1) = v35;
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 4u:
        id v36 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v36;
        uint64_t v37 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v37;
        uint64_t v38 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v38;
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        uint64_t v39 = a2[10];
        *((void *)a1 + 9) = a2[9];
        *((void *)a1 + 10) = v39;
        unint64_t v40 = a2[12];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = v40;
        *((void *)a1 + 13) = a2[13];
        a1[112] = *((unsigned char *)a2 + 112);
        long long v41 = a2[16];
        *((void *)a1 + 15) = a2[15];
        *((void *)a1 + 16) = v41;
        a1[136] = *((unsigned char *)a2 + 136);
        long long v42 = a2[19];
        *((void *)a1 + 18) = a2[18];
        *((void *)a1 + 19) = v42;
        long long v43 = a2[21];
        *((void *)a1 + 20) = a2[20];
        *((void *)a1 + 21) = v43;
        a1[184] = *((unsigned char *)a2 + 184);
        *((void *)a1 + 22) = a2[22];
        long long v44 = a2[25];
        *((void *)a1 + 24) = a2[24];
        *((void *)a1 + 25) = v44;
        a1[224] = *((unsigned char *)a2 + 224);
        long long v45 = a2[27];
        *((void *)a1 + 26) = a2[26];
        *((void *)a1 + 27) = v45;
        v290 = a2 + 29;
        unint64_t v46 = (unint64_t)a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v46 >= 0x11)
        {
          *((void *)a1 + 29) = *v290;
          *((void *)a1 + 30) = v46;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)v290;
        }
        goto LABEL_138;
      case 5u:
        long long v47 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v47;
        *((void *)a1 + 2) = a2[2];
        a1[24] = *((unsigned char *)a2 + 24);
        long long v48 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v48;
        *((void *)a1 + 6) = a2[6];
        a1[56] = *((unsigned char *)a2 + 56);
        v291 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v49 = v291[10];
        long long v50 = &a1[v49];
        uint64_t v51 = (uint64_t)a2 + v49;
        *long long v50 = *((unsigned char *)a2 + v49);
        v50[1] = *((unsigned char *)a2 + v49 + 1);
        uint64_t v52 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v53 = *(int *)(v52 + 24);
        __dst = &v50[v53];
        v288 = (int *)v52;
        long long v54 = (char *)(v51 + v53);
        uint64_t v55 = (int *)type metadata accessor for SharedItem();
        uint64_t v285 = *((void *)v55 - 1);
        unint64_t v56 = *(unsigned int (**)(char *, uint64_t, int *))(v285 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v56(v54, 1, v55))
        {
          uint64_t v57 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v54, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          uint64_t v116 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(__dst, v54, v116);
          __dst[v55[5]] = v54[v55[5]];
          uint64_t v117 = v55[6];
          uint64_t v118 = *(void **)&v54[v117];
          *(void *)&__dst[v117] = v118;
          uint64_t v119 = v55[7];
          v293 = &__dst[v119];
          v283 = &v54[v119];
          uint64_t v120 = sub_1C1515FDC();
          uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
          id v122 = v118;
          v121(v293, v283, v120);
          (*(void (**)(char *, void, uint64_t, int *))(v285 + 56))(__dst, 0, 1, v55);
        }
        v50[v288[7]] = *(unsigned char *)(v51 + v288[7]);
        v50[v288[8]] = *(unsigned char *)(v51 + v288[8]);
        v50[v288[9]] = *(unsigned char *)(v51 + v288[9]);
        v50[v288[10]] = *(unsigned char *)(v51 + v288[10]);
        uint64_t v123 = v291[11];
        uint64_t v124 = &a1[v123];
        long long v125 = (char *)a2 + v123;
        uint64_t v126 = sub_1C151D2DC();
        uint64_t v127 = *(void *)(v126 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v124, v125, v126);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
        }
        uint64_t v141 = v291[12];
        uint64_t v142 = &a1[v141];
        int v143 = (char **)((char *)a2 + v141);
        unint64_t v144 = v143[1];
        if (v144 >= 0x11)
        {
          *(void *)uint64_t v142 = *v143;
          *((void *)v142 + 1) = v144;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v142 = *(_OWORD *)v143;
        }
        uint64_t v145 = v291[13];
        unint64_t v146 = *(unint64_t *)((char *)a2 + v145);
        if (v146 >= 2)
        {
          if (v146 == 2)
          {
            *(void *)&a1[v145] = 2;
          }
          else
          {
            *(void *)&a1[v145] = v146;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)&a1[v145] = v146;
        }
        uint64_t v182 = v291[14];
        v183 = *(char **)((char *)a2 + v182);
        *(void *)&a1[v182] = v183;
        id v184 = v183;
        goto LABEL_138;
      case 6u:
        unint64_t v58 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v58;
        a1[16] = *((unsigned char *)a2 + 16);
        long long v59 = a2 + 3;
        unint64_t v60 = (unint64_t)a2[4];
        if (v60 >= 0x11)
        {
          *((void *)a1 + 3) = *v59;
          *((void *)a1 + 4) = v60;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v59;
        }
        uint64_t v86 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v86;
        uint64_t v87 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v88 = v87[8];
        uint64_t v89 = &a1[v88];
        uint64_t v90 = (uint64_t)a2 + v88;
        uint64_t v91 = sub_1C1515FDC();
        uint64_t v92 = *(void *)(v91 - 8);
        uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
        swift_bridgeObjectRetain();
        v93(v89, v90, v91);
        uint64_t v94 = v87[9];
        uint64_t v95 = &a1[v94];
        uint64_t v96 = (char *)a2 + v94;
        uint64_t v289 = v91;
        v286 = (void (*)(char *, char *, uint64_t))v93;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))((uint64_t)a2 + v94, 1, v91))
        {
          sub_1BFEEF884(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          v93(v95, (uint64_t)v96, v91);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v95, 0, 1, v91);
        }
        *(void *)&a1[v87[10]] = *(char **)((char *)a2 + v87[10]);
        *(void *)&a1[v87[11]] = *(char **)((char *)a2 + v87[11]);
        uint64_t v129 = v87[12];
        v292 = &a1[v129];
        v294 = v87;
        int v130 = (char **)((char *)a2 + v129);
        uint64_t v131 = type metadata accessor for FeedHeadline(0);
        uint64_t v132 = *(void *)(v131 - 8);
        uint64_t v133 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v132 + 48);
        swift_retain();
        swift_retain();
        if (v133(v130, 1, v131))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
          memcpy(v292, v130, *(void *)(*(void *)(v134 - 8) + 64));
          uint64_t v135 = v294;
        }
        else
        {
          uint64_t v281 = v132;
          v282 = (int *)v131;
          uint64_t v147 = v130[1];
          *(void *)v292 = *v130;
          *((void *)v292 + 1) = v147;
          *((void *)v292 + 2) = v130[2];
          v292[24] = *((unsigned char *)v130 + 24);
          uint64_t v148 = v130[5];
          *((void *)v292 + 4) = v130[4];
          *((void *)v292 + 5) = v148;
          *((void *)v292 + 6) = v130[6];
          v292[56] = *((unsigned char *)v130 + 56);
          uint64_t v149 = *(int *)(v131 + 40);
          uint64_t v150 = &v292[v149];
          v284 = v130;
          uint64_t v151 = (char *)v130 + v149;
          *uint64_t v150 = *((unsigned char *)v130 + v149);
          v150[1] = *((unsigned char *)v130 + v149 + 1);
          uint64_t v152 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v153 = *(int *)(v152 + 24);
          v279 = &v150[v153];
          v280 = (int *)v152;
          uint64_t v154 = &v151[v153];
          int v155 = (int *)type metadata accessor for SharedItem();
          uint64_t v278 = *((void *)v155 - 1);
          uint64_t v156 = *(unsigned int (**)(char *, uint64_t, int *))(v278 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v156(v154, 1, v155))
          {
            uint64_t v157 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v279, v154, *(void *)(*(void *)(v157 - 8) + 64));
          }
          else
          {
            uint64_t v185 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(v279, v154, v185);
            v279[v155[5]] = v154[v155[5]];
            uint64_t v186 = v155[6];
            uint64_t v187 = *(void **)&v154[v186];
            *(void *)&v279[v186] = v187;
            uint64_t v188 = v155[7];
            v189 = &v279[v188];
            v190 = &v154[v188];
            id v191 = v187;
            v286(v189, v190, v289);
            (*(void (**)(char *, void, uint64_t, int *))(v278 + 56))(v279, 0, 1, v155);
          }
          v150[v280[7]] = v151[v280[7]];
          v150[v280[8]] = v151[v280[8]];
          v150[v280[9]] = v151[v280[9]];
          v150[v280[10]] = v151[v280[10]];
          uint64_t v192 = v282[11];
          v193 = &v292[v192];
          v194 = (char *)v130 + v192;
          uint64_t v195 = sub_1C151D2DC();
          uint64_t v196 = *(void *)(v195 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v194, 1, v195))
          {
            sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v193, v194, *(void *)(*(void *)(v197 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v193, v194, v195);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v196 + 56))(v193, 0, 1, v195);
          }
          uint64_t v135 = v294;
          uint64_t v198 = v282[12];
          v199 = &v292[v198];
          v200 = (void *)((char *)v284 + v198);
          unint64_t v201 = v200[1];
          if (v201 >= 0x11)
          {
            *(void *)v199 = *v200;
            *((void *)v199 + 1) = v201;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v199 = *(_OWORD *)v200;
          }
          uint64_t v202 = v282[13];
          unint64_t v203 = *(void *)((char *)v284 + v202);
          if (v203 >= 2)
          {
            if (v203 == 2)
            {
              *(void *)&v292[v202] = 2;
            }
            else
            {
              *(void *)&v292[v202] = v203;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)&v292[v202] = v203;
          }
          uint64_t v221 = v282[14];
          v222 = *(void **)((char *)v284 + v221);
          *(void *)&v292[v221] = v222;
          v223 = *(void (**)(char *, void, uint64_t, int *))(v281 + 56);
          id v224 = v222;
          v223(v292, 0, 1, v282);
        }
        uint64_t v225 = v135[13];
        v226 = &a1[v225];
        v227 = (uint64_t *)((char *)a2 + v225);
        uint64_t v228 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v229 = *(void *)(v228 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v229 + 48))(v227, 1, v228))
        {
          sub_1BFEEF884(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v226, v227, *(void *)(*(void *)(v230 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v232 = *v227;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v233 = v227[1];
            *(void *)v226 = v232;
            *((void *)v226 + 1) = v233;
            uint64_t v234 = type metadata accessor for GenericDataVisualization();
            uint64_t v235 = *(int *)(v234 + 20);
            v236 = &v226[v235];
            v237 = (char *)v227 + v235;
            swift_bridgeObjectRetain();
            v238 = v237;
            uint64_t v135 = v294;
            v286(v236, v238, v289);
            *(void *)&v226[*(int *)(v234 + 24)] = *(uint64_t *)((char *)v227 + *(int *)(v234 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *(void *)v226 = v232;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
        }
        a1[v135[14]] = *((unsigned char *)a2 + v135[14]);
        goto LABEL_138;
      case 7u:
        long long v61 = *a2;
        *(void *)a1 = *a2;
        long long v62 = v61;
        goto LABEL_138;
      case 8u:
        long long v63 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v63;
        long long v64 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v64;
        a1[32] = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 9u:
        long long v65 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v65;
        a1[16] = *((unsigned char *)a2 + 16);
        long long v66 = a2 + 3;
        unint64_t v67 = (unint64_t)a2[4];
        if (v67 >= 0x11)
        {
          *((void *)a1 + 3) = *v66;
          *((void *)a1 + 4) = v67;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v66;
        }
        uint64_t v98 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v98;
        uint64_t v99 = a2[8];
        *((void *)a1 + 7) = a2[7];
        *((void *)a1 + 8) = v99;
        a1[72] = *((unsigned char *)a2 + 72);
        *((void *)a1 + 10) = a2[10];
        uint64_t v100 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v101 = v99;
        swift_bridgeObjectRetain();
        if (v100)
        {
          uint64_t v102 = a2[15];
          *((void *)a1 + 14) = v100;
          *((void *)a1 + 15) = v102;
          (**((void (***)(uint64_t, uint64_t, uint64_t))v100 - 1))((uint64_t)(a1 + 88), (uint64_t)(a2 + 11), (uint64_t)v100);
        }
        else
        {
          long long v136 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 104) = v136;
          *((void *)a1 + 15) = a2[15];
        }
        uint64_t v137 = a1 + 128;
        uint64_t v138 = a2 + 16;
        uint64_t v139 = a2[19];
        if (v139)
        {
          uint64_t v140 = a2[20];
          *((void *)a1 + 19) = v139;
          *((void *)a1 + 20) = v140;
          (**((void (***)(_OWORD *, _OWORD *))v139 - 1))(v137, v138);
        }
        else
        {
          long long v158 = *((_OWORD *)a2 + 9);
          *uint64_t v137 = *v138;
          *((_OWORD *)a1 + 9) = v158;
          *((void *)a1 + 20) = a2[20];
        }
        uint64_t v159 = a1 + 168;
        uint64_t v160 = a2 + 21;
        uint64_t v161 = a2[24];
        if (v161)
        {
          uint64_t v162 = a2[25];
          *((void *)a1 + 24) = v161;
          *((void *)a1 + 25) = v162;
          (**((void (***)(_OWORD *, _OWORD *))v161 - 1))(v159, v160);
        }
        else
        {
          long long v163 = *(_OWORD *)(a2 + 23);
          *uint64_t v159 = *v160;
          *(_OWORD *)(a1 + 184) = v163;
          *((void *)a1 + 25) = a2[25];
        }
        goto LABEL_138;
      case 0xAu:
        long long v68 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v68;
        a1[16] = *((unsigned char *)a2 + 16);
        long long v69 = a2 + 3;
        unint64_t v70 = (unint64_t)a2[4];
        if (v70 >= 0x11)
        {
          *((void *)a1 + 3) = *v69;
          *((void *)a1 + 4) = v70;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v69;
        }
        uint64_t v103 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v103;
        *((void *)a1 + 7) = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xBu:
        long long v71 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v71;
        a1[16] = *((unsigned char *)a2 + 16);
        long long v72 = a2 + 3;
        unint64_t v73 = (unint64_t)a2[4];
        if (v73 >= 0x11)
        {
          *((void *)a1 + 3) = *v72;
          *((void *)a1 + 4) = v73;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v72;
        }
        break;
      case 0xCu:
        uint64_t v74 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v74;
        uint64_t v75 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        id v76 = &a1[v75];
        uint64_t v77 = (uint64_t)a2 + v75;
        uint64_t v78 = sub_1C151D6DC();
        uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16);
        swift_bridgeObjectRetain();
        v79(v76, v77, v78);
        goto LABEL_138;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v6;
        a1[16] = *((unsigned char *)a2 + 16);
        swift_unknownObjectRetain();
        uint64_t v7 = v6;
        goto LABEL_138;
    }
    uint64_t v104 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v104;
    uint64_t v105 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v106 = &a1[v105];
    uint64_t v107 = (uint64_t)a2 + v105;
    *(void *)&a1[v105] = *(char **)((char *)a2 + v105);
    uint64_t v108 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v109 = &v106[v108];
    uint64_t v110 = (void *)(v107 + v108);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v168 = type metadata accessor for PuzzleStatisticValue(0);
        int v169 = swift_getEnumCaseMultiPayload();
        if (v169 == 5)
        {
          uint64_t v170 = type metadata accessor for PuzzleStreak();
          uint64_t v171 = *(void *)(v170 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v171 + 48))(v110, 1, v170))
          {
LABEL_73:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v109, v110, *(void *)(*(void *)(v172 - 8) + 64));
            goto LABEL_117;
          }
        }
        else
        {
          if (v169 != 4)
          {
            memcpy(v109, v110, *(void *)(*(void *)(v168 - 8) + 64));
            goto LABEL_118;
          }
          uint64_t v170 = type metadata accessor for PuzzleStreak();
          uint64_t v171 = *(void *)(v170 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v171 + 48))(v110, 1, v170)) {
            goto LABEL_73;
          }
        }
        uint64_t v260 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v260 - 8) + 16))(v109, v110, v260);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v109, 0, 1, v170);
LABEL_117:
        swift_storeEnumTagMultiPayload();
LABEL_118:
        uint64_t v261 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v262 = *(int *)(v261 + 20);
        v263 = &v109[v262];
        v264 = (char *)v110 + v262;
        int v265 = swift_getEnumCaseMultiPayload();
        if (v265 == 5)
        {
          uint64_t v266 = type metadata accessor for PuzzleStreak();
          uint64_t v267 = *(void *)(v266 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v267 + 48))(v264, 1, v266))
          {
LABEL_123:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v263, v264, *(void *)(*(void *)(v268 - 8) + 64));
            goto LABEL_126;
          }
        }
        else
        {
          if (v265 != 4)
          {
            memcpy(v263, v264, *(void *)(*(void *)(v168 - 8) + 64));
            goto LABEL_127;
          }
          uint64_t v266 = type metadata accessor for PuzzleStreak();
          uint64_t v267 = *(void *)(v266 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v267 + 48))(v264, 1, v266)) {
            goto LABEL_123;
          }
        }
        uint64_t v269 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 16))(v263, v264, v269);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v263, 0, 1, v266);
LABEL_126:
        swift_storeEnumTagMultiPayload();
LABEL_127:
        uint64_t v270 = *(int *)(v261 + 24);
        v271 = &v109[v270];
        uint64_t v110 = (void *)((char *)v110 + v270);
        int v272 = swift_getEnumCaseMultiPayload();
        if (v272 == 5)
        {
          uint64_t v273 = type metadata accessor for PuzzleStreak();
          uint64_t v274 = *(void *)(v273 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v274 + 48))(v110, 1, v273))
          {
LABEL_132:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v271, v110, *(void *)(*(void *)(v275 - 8) + 64));
            goto LABEL_136;
          }
        }
        else
        {
          if (v272 != 4)
          {
            size_t v167 = *(void *)(*(void *)(v168 - 8) + 64);
            v252 = v271;
            goto LABEL_134;
          }
          uint64_t v273 = type metadata accessor for PuzzleStreak();
          uint64_t v274 = *(void *)(v273 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v274 + 48))(v110, 1, v273)) {
            goto LABEL_132;
          }
        }
        uint64_t v276 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v276 - 8) + 16))(v271, v110, v276);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v274 + 56))(v271, 0, 1, v273);
        goto LABEL_136;
      case 2u:
        uint64_t v164 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v165 = *((void *)v164 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v165 + 48))(v110, 1, v164))
        {
          sub_1BFEEF884(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v167 = *(void *)(*(void *)(v166 - 8) + 64);
          goto LABEL_107;
        }
        uint64_t v204 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v204 - 8) + 16))(v109, v110, v204);
        v205 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v206 = v205[5];
        v207 = &v109[v206];
        v208 = (void *)((char *)v110 + v206);
        uint64_t v209 = v208[1];
        *(void *)v207 = *v208;
        *((void *)v207 + 1) = v209;
        uint64_t v210 = v205[6];
        v211 = &v109[v210];
        v212 = (void *)((char *)v110 + v210);
        uint64_t v213 = v212[1];
        *(void *)v211 = *v212;
        *((void *)v211 + 1) = v213;
        v214 = v212 + 2;
        unint64_t v215 = v212[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v215 >> 60 == 15)
        {
          *((_OWORD *)v211 + 1) = *(_OWORD *)v214;
        }
        else
        {
          uint64_t v253 = *v214;
          sub_1BFE95820(*v214, v215);
          *((void *)v211 + 2) = v253;
          *((void *)v211 + 3) = v215;
        }
        *(void *)&v109[v205[7]] = *(void *)((char *)v110 + v205[7]);
        *(void *)&v109[v205[8]] = *(void *)((char *)v110 + v205[8]);
        *(void *)&v109[v164[5]] = *(void *)((char *)v110 + v164[5]);
        *(void *)&v109[v164[6]] = *(void *)((char *)v110 + v164[6]);
        uint64_t v254 = v164[7];
        v255 = &v109[v254];
        v256 = (void *)((char *)v110 + v254);
        uint64_t v257 = v256[1];
        *(void *)v255 = *v256;
        *((void *)v255 + 1) = v257;
        v258 = *(void (**)(char *, void, uint64_t, int *))(v165 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v258(v109, 0, 1, v164);
        goto LABEL_137;
      case 3u:
        uint64_t v173 = v110[1];
        *(void *)uint64_t v109 = *v110;
        *((void *)v109 + 1) = v173;
        v109[16] = *((unsigned char *)v110 + 16);
        v174 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v175 = v174[6];
        v176 = &v109[v175];
        v177 = (char *)v110 + v175;
        uint64_t v178 = type metadata accessor for PuzzleStreak();
        uint64_t v179 = *(void *)(v178 - 8);
        v180 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48);
        if (v180(v177, 1, v178))
        {
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v176, v177, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          uint64_t v216 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v176, v177, v216);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v179 + 56))(v176, 0, 1, v178);
        }
        uint64_t v217 = v174[7];
        v218 = &v109[v217];
        v219 = (char *)v110 + v217;
        if (v180((char *)v110 + v217, 1, v178))
        {
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
        }
        else
        {
          uint64_t v239 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16))(v218, v219, v239);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v179 + 56))(v218, 0, 1, v178);
        }
        uint64_t v240 = v174[8];
        v241 = &v109[v240];
        v242 = (_OWORD *)((char *)v110 + v240);
        long long v243 = v242[1];
        *(_OWORD *)v241 = *v242;
        *((_OWORD *)v241 + 1) = v243;
        *(_OWORD *)(v241 + 25) = *(_OWORD *)((char *)v242 + 25);
        uint64_t v244 = v174[9];
        v245 = &v109[v244];
        v246 = (_OWORD *)((char *)v110 + v244);
        *(_OWORD *)(v245 + 25) = *(_OWORD *)((char *)v246 + 25);
        long long v247 = v246[1];
        *(_OWORD *)v245 = *v246;
        *((_OWORD *)v245 + 1) = v247;
        uint64_t v248 = v174[10];
        v249 = &v109[v248];
        v250 = (_OWORD *)((char *)v110 + v248);
        long long v251 = v250[1];
        *(_OWORD *)v249 = *v250;
        *((_OWORD *)v249 + 1) = v251;
        *(_OWORD *)(v249 + 25) = *(_OWORD *)((char *)v250 + 25);
        goto LABEL_137;
      default:
        uint64_t v111 = type metadata accessor for PuzzleStatisticValue(0);
        int v112 = swift_getEnumCaseMultiPayload();
        if (v112 == 5)
        {
          uint64_t v113 = type metadata accessor for PuzzleStreak();
          uint64_t v114 = *(void *)(v113 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v114 + 48))(v110, 1, v113)) {
            goto LABEL_41;
          }
        }
        else
        {
          if (v112 != 4)
          {
            size_t v167 = *(void *)(*(void *)(v111 - 8) + 64);
LABEL_107:
            v252 = v109;
LABEL_134:
            memcpy(v252, v110, v167);
            goto LABEL_137;
          }
          uint64_t v113 = type metadata accessor for PuzzleStreak();
          uint64_t v114 = *(void *)(v113 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v114 + 48))(v110, 1, v113))
          {
LABEL_41:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v109, v110, *(void *)(*(void *)(v115 - 8) + 64));
            goto LABEL_136;
          }
        }
        uint64_t v259 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v259 - 8) + 16))(v109, v110, v259);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v109, 0, 1, v113);
LABEL_136:
        swift_storeEnumTagMultiPayload();
LABEL_137:
        swift_storeEnumTagMultiPayload();
LABEL_138:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t assignWithCopy for FeedGroupItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1BFED03E0(a1, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
        uint64_t v7 = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v7;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v8 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v8;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v9 = *(void *)(a2 + 80);
        id v10 = v6;
        swift_bridgeObjectRetain();
        id v11 = v8;
        if (v9 == 1)
        {
          long long v12 = *(_OWORD *)(a2 + 72);
          long long v13 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v13;
          *(_OWORD *)(a1 + 72) = v12;
        }
        else
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          long long v54 = *(void **)(a2 + 104);
          *(void *)(a1 + 104) = v54;
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v55 = v54;
        }
        if (*(void *)(a2 + 128) >= 0x11uLL)
        {
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        goto LABEL_137;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v14 = (int *)type metadata accessor for FeedWeather(0);
        uint64_t v15 = v14[7];
        uint64_t v16 = a1 + v15;
        uint64_t v17 = a2 + v15;
        uint64_t v18 = sub_1C151E2BC();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        *(unsigned char *)(a1 + v14[8]) = *(unsigned char *)(a2 + v14[8]);
        uint64_t v20 = v14[9];
        uint64_t v21 = a1 + v20;
        uint64_t v22 = a2 + v20;
        sub_1BFEEF884(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
        uint64_t v24 = v23;
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
        v25(v21, v22, v23);
        id v26 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v25(v21 + v26[5], v22 + v26[5], v24);
        v25(v21 + v26[6], v22 + v26[6], v24);
        v25(v21 + v26[7], v22 + v26[7], v24);
        uint64_t v27 = v14[10];
        uint64_t v28 = (void *)(a1 + v27);
        uint64_t v29 = (void *)(a2 + v27);
        void *v28 = *v29;
        v28[1] = v29[1];
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        uint64_t v30 = *(void *)(a2 + 176);
        *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
        *(void *)(a1 + 176) = v30;
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        uint64_t v31 = *(void *)(a2 + 216);
        *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
        *(void *)(a1 + 216) = v31;
        unint64_t v250 = *(void *)(a2 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v250 >= 0x11)
        {
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        }
        goto LABEL_137;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v32 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v32;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        v249 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v33 = v249[10];
        long long v34 = (unsigned char *)(a1 + v33);
        uint64_t v35 = a2 + v33;
        unsigned char *v34 = *(unsigned char *)(a2 + v33);
        v34[1] = *(unsigned char *)(a2 + v33 + 1);
        id v36 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v37 = v36[6];
        __dst = &v34[v37];
        uint64_t v38 = (char *)(v35 + v37);
        uint64_t v39 = (int *)type metadata accessor for SharedItem();
        uint64_t v245 = *((void *)v39 - 1);
        unint64_t v40 = *(unsigned int (**)(char *, uint64_t, int *))(v245 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v40(v38, 1, v39))
        {
          uint64_t v41 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v38, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v81 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(__dst, v38, v81);
          __dst[v39[5]] = v38[v39[5]];
          uint64_t v82 = v39[6];
          uint64_t v83 = *(void **)&v38[v82];
          *(void *)&__dst[v82] = v83;
          uint64_t v84 = v39[7];
          v252 = &v38[v84];
          uint64_t v253 = &__dst[v84];
          uint64_t v85 = sub_1C1515FDC();
          uint64_t v244 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
          id v86 = v83;
          v244(v253, v252, v85);
          (*(void (**)(char *, void, uint64_t, int *))(v245 + 56))(__dst, 0, 1, v39);
        }
        v34[v36[7]] = *(unsigned char *)(v35 + v36[7]);
        v34[v36[8]] = *(unsigned char *)(v35 + v36[8]);
        v34[v36[9]] = *(unsigned char *)(v35 + v36[9]);
        v34[v36[10]] = *(unsigned char *)(v35 + v36[10]);
        uint64_t v87 = v249[11];
        uint64_t v88 = (void *)(a1 + v87);
        uint64_t v89 = (const void *)(a2 + v87);
        uint64_t v90 = sub_1C151D2DC();
        uint64_t v91 = *(void *)(v90 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v88, v89, v90);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        uint64_t v106 = v249[12];
        uint64_t v107 = (void *)(a1 + v106);
        uint64_t v108 = (void *)(a2 + v106);
        if (v108[1] >= 0x11uLL)
        {
          *uint64_t v107 = *v108;
          v107[1] = v108[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
        }
        uint64_t v109 = v249[13];
        unint64_t v110 = *(void *)(a2 + v109);
        if (v110 >= 2)
        {
          if (v110 == 2)
          {
            *(void *)(a1 + v109) = 2;
          }
          else
          {
            *(void *)(a1 + v109) = v110;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)(a1 + v109) = v110;
        }
        uint64_t v146 = v249[14];
        uint64_t v147 = *(void **)(a2 + v146);
        *(void *)(a1 + v146) = v147;
        id v148 = v147;
        goto LABEL_137;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t v42 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v42;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        unint64_t v56 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v57 = v56[8];
        uint64_t v58 = a1 + v57;
        uint64_t v59 = a2 + v57;
        uint64_t v60 = sub_1C1515FDC();
        uint64_t v61 = *(void *)(v60 - 8);
        long long v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16);
        swift_bridgeObjectRetain();
        v62(v58, v59, v60);
        uint64_t v63 = v56[9];
        long long v64 = (void *)(a1 + v63);
        long long v65 = (const void *)(a2 + v63);
        uint64_t v251 = v60;
        __dsta = (void (*)(char *, char *, uint64_t))v62;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(a2 + v63, 1, v60))
        {
          sub_1BFEEF884(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          v62((uint64_t)v64, (uint64_t)v65, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v64, 0, 1, v60);
        }
        *(void *)(a1 + v56[10]) = *(void *)(a2 + v56[10]);
        *(void *)(a1 + v56[11]) = *(void *)(a2 + v56[11]);
        uint64_t v93 = v56[12];
        uint64_t v94 = (void *)(a1 + v93);
        uint64_t v254 = v56;
        uint64_t v95 = (void *)(a2 + v93);
        uint64_t v96 = type metadata accessor for FeedHeadline(0);
        uint64_t v97 = *(void *)(v96 - 8);
        uint64_t v98 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v97 + 48);
        swift_retain();
        swift_retain();
        if (v98(v95, 1, v96))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
          memcpy(v94, v95, *(void *)(*(void *)(v99 - 8) + 64));
          uint64_t v100 = v254;
        }
        else
        {
          uint64_t v242 = v97;
          long long v243 = (int *)v96;
          *uint64_t v94 = *v95;
          v246 = v95;
          v94[1] = v95[1];
          uint64_t v111 = v95[2];
          *((unsigned char *)v94 + 24) = *((unsigned char *)v95 + 24);
          v94[2] = v111;
          v94[4] = v95[4];
          v94[5] = v95[5];
          v94[6] = v95[6];
          *((unsigned char *)v94 + 56) = *((unsigned char *)v95 + 56);
          uint64_t v112 = *(int *)(v96 + 40);
          uint64_t v113 = (char *)v94 + v112;
          uint64_t v114 = (char *)v95 + v112;
          *uint64_t v113 = *((unsigned char *)v95 + v112);
          v113[1] = *((unsigned char *)v95 + v112 + 1);
          uint64_t v115 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v116 = *(int *)(v115 + 24);
          uint64_t v240 = &v113[v116];
          v241 = (int *)v115;
          uint64_t v117 = &v114[v116];
          uint64_t v118 = (int *)type metadata accessor for SharedItem();
          uint64_t v239 = *((void *)v118 - 1);
          uint64_t v119 = *(unsigned int (**)(char *, uint64_t, int *))(v239 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v119(v117, 1, v118))
          {
            uint64_t v120 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v240, v117, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            uint64_t v149 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v240, v117, v149);
            v240[v118[5]] = v117[v118[5]];
            uint64_t v150 = v118[6];
            uint64_t v151 = *(void **)&v117[v150];
            *(void *)&v240[v150] = v151;
            uint64_t v152 = v118[7];
            uint64_t v153 = &v240[v152];
            uint64_t v154 = &v117[v152];
            id v155 = v151;
            __dsta(v153, v154, v251);
            (*(void (**)(char *, void, uint64_t, int *))(v239 + 56))(v240, 0, 1, v118);
          }
          v113[v241[7]] = v114[v241[7]];
          v113[v241[8]] = v114[v241[8]];
          v113[v241[9]] = v114[v241[9]];
          v113[v241[10]] = v114[v241[10]];
          uint64_t v156 = v243[11];
          uint64_t v157 = (char *)v94 + v156;
          long long v158 = (char *)v95 + v156;
          uint64_t v159 = sub_1C151D2DC();
          uint64_t v160 = *(void *)(v159 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
          {
            sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v157, v158, *(void *)(*(void *)(v161 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v157, v158, v159);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
          }
          uint64_t v100 = v254;
          uint64_t v162 = v243[12];
          long long v163 = (void *)((char *)v94 + v162);
          uint64_t v164 = (void *)((char *)v246 + v162);
          if (v164[1] >= 0x11uLL)
          {
            *long long v163 = *v164;
            v163[1] = v164[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)long long v163 = *(_OWORD *)v164;
          }
          uint64_t v165 = v243[13];
          unint64_t v166 = *(void *)((char *)v246 + v165);
          if (v166 >= 2)
          {
            if (v166 == 2)
            {
              *(void *)((char *)v94 + v165) = 2;
            }
            else
            {
              *(void *)((char *)v94 + v165) = v166;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v94 + v165) = v166;
          }
          uint64_t v182 = v243[14];
          v183 = *(void **)((char *)v246 + v182);
          *(void *)((char *)v94 + v182) = v183;
          id v184 = *(void (**)(void *, void, uint64_t, int *))(v242 + 56);
          id v185 = v183;
          v184(v94, 0, 1, v243);
        }
        uint64_t v186 = v100[13];
        uint64_t v187 = (void *)(a1 + v186);
        uint64_t v188 = (void *)(a2 + v186);
        uint64_t v189 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v190 = *(void *)(v189 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
        {
          sub_1BFEEF884(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v187, v188, *(void *)(*(void *)(v191 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          void *v187 = *v188;
          if (EnumCaseMultiPayload == 1)
          {
            v187[1] = v188[1];
            uint64_t v193 = type metadata accessor for GenericDataVisualization();
            uint64_t v194 = *(int *)(v193 + 20);
            uint64_t v195 = (char *)v187 + v194;
            uint64_t v196 = (char *)v188 + v194;
            swift_bridgeObjectRetain();
            uint64_t v197 = v196;
            uint64_t v100 = v254;
            __dsta(v195, v197, v251);
            *(void *)((char *)v187 + *(int *)(v193 + 24)) = *(void *)((char *)v188 + *(int *)(v193 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
        }
        *(unsigned char *)(a1 + v100[14]) = *(unsigned char *)(a2 + v100[14]);
        goto LABEL_137;
      case 7u:
        long long v43 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v44 = v43;
        goto LABEL_137;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v45 = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 24) = v45;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_137;
      case 9u:
        *(void *)a1 = *(void *)a2;
        uint64_t v46 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v46;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v67 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v67;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        uint64_t v68 = *(void *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v69 = v67;
        swift_bridgeObjectRetain();
        if (v68)
        {
          *(void *)(a1 + 112) = v68;
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v68 - 8))(a1 + 88, a2 + 88, v68);
        }
        else
        {
          long long v101 = *(_OWORD *)(a2 + 88);
          long long v102 = *(_OWORD *)(a2 + 104);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(_OWORD *)(a1 + 88) = v101;
          *(_OWORD *)(a1 + 104) = v102;
        }
        uint64_t v103 = (_OWORD *)(a1 + 128);
        uint64_t v104 = (long long *)(a2 + 128);
        uint64_t v105 = *(void *)(a2 + 152);
        if (v105)
        {
          *(void *)(a1 + 152) = v105;
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          (**(void (***)(_OWORD *, long long *))(v105 - 8))(v103, v104);
        }
        else
        {
          long long v121 = *v104;
          long long v122 = *(_OWORD *)(a2 + 144);
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          *uint64_t v103 = v121;
          *(_OWORD *)(a1 + 144) = v122;
        }
        uint64_t v123 = (_OWORD *)(a1 + 168);
        uint64_t v124 = (long long *)(a2 + 168);
        uint64_t v125 = *(void *)(a2 + 192);
        if (v125)
        {
          *(void *)(a1 + 192) = v125;
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          (**(void (***)(_OWORD *, long long *))(v125 - 8))(v123, v124);
        }
        else
        {
          long long v126 = *v124;
          long long v127 = *(_OWORD *)(a2 + 184);
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          _OWORD *v123 = v126;
          *(_OWORD *)(a1 + 184) = v127;
        }
        goto LABEL_137;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        uint64_t v47 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v47;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_137;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v48 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v48;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        break;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v49 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        uint64_t v50 = a1 + v49;
        uint64_t v51 = a2 + v49;
        uint64_t v52 = sub_1C151D6DC();
        uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v50, v51, v52);
        goto LABEL_137;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v4 = *(void **)(a2 + 8);
        *(void *)(a1 + 8) = v4;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        swift_unknownObjectRetain();
        id v5 = v4;
        goto LABEL_137;
    }
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v70 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v71 = a1 + v70;
    uint64_t v72 = a2 + v70;
    *(void *)(a1 + v70) = *(void *)(a2 + v70);
    uint64_t v73 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v74 = (void *)(v71 + v73);
    uint64_t v75 = (void *)(v72 + v73);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v132 = type metadata accessor for PuzzleStatisticValue(0);
        int v133 = swift_getEnumCaseMultiPayload();
        if (v133 == 5)
        {
          uint64_t v134 = type metadata accessor for PuzzleStreak();
          uint64_t v135 = *(void *)(v134 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v135 + 48))(v75, 1, v134))
          {
LABEL_72:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v74, v75, *(void *)(*(void *)(v136 - 8) + 64));
            goto LABEL_116;
          }
        }
        else
        {
          if (v133 != 4)
          {
            memcpy(v74, v75, *(void *)(*(void *)(v132 - 8) + 64));
            goto LABEL_117;
          }
          uint64_t v134 = type metadata accessor for PuzzleStreak();
          uint64_t v135 = *(void *)(v134 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v135 + 48))(v75, 1, v134)) {
            goto LABEL_72;
          }
        }
        uint64_t v221 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v221 - 8) + 16))(v74, v75, v221);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v74, 0, 1, v134);
LABEL_116:
        swift_storeEnumTagMultiPayload();
LABEL_117:
        uint64_t v222 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v223 = *(int *)(v222 + 20);
        id v224 = (char *)v74 + v223;
        uint64_t v225 = (char *)v75 + v223;
        int v226 = swift_getEnumCaseMultiPayload();
        if (v226 == 5)
        {
          uint64_t v227 = type metadata accessor for PuzzleStreak();
          uint64_t v228 = *(void *)(v227 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v225, 1, v227))
          {
LABEL_122:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v224, v225, *(void *)(*(void *)(v229 - 8) + 64));
            goto LABEL_125;
          }
        }
        else
        {
          if (v226 != 4)
          {
            memcpy(v224, v225, *(void *)(*(void *)(v132 - 8) + 64));
            goto LABEL_126;
          }
          uint64_t v227 = type metadata accessor for PuzzleStreak();
          uint64_t v228 = *(void *)(v227 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v225, 1, v227)) {
            goto LABEL_122;
          }
        }
        uint64_t v230 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16))(v224, v225, v230);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v228 + 56))(v224, 0, 1, v227);
LABEL_125:
        swift_storeEnumTagMultiPayload();
LABEL_126:
        uint64_t v231 = *(int *)(v222 + 24);
        uint64_t v232 = (char *)v74 + v231;
        uint64_t v75 = (void *)((char *)v75 + v231);
        int v233 = swift_getEnumCaseMultiPayload();
        if (v233 == 5)
        {
          uint64_t v234 = type metadata accessor for PuzzleStreak();
          uint64_t v235 = *(void *)(v234 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v235 + 48))(v75, 1, v234))
          {
LABEL_131:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v232, v75, *(void *)(*(void *)(v236 - 8) + 64));
            goto LABEL_135;
          }
        }
        else
        {
          if (v233 != 4)
          {
            size_t v131 = *(void *)(*(void *)(v132 - 8) + 64);
            v214 = v232;
            goto LABEL_133;
          }
          uint64_t v234 = type metadata accessor for PuzzleStreak();
          uint64_t v235 = *(void *)(v234 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v235 + 48))(v75, 1, v234)) {
            goto LABEL_131;
          }
        }
        uint64_t v237 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v237 - 8) + 16))(v232, v75, v237);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56))(v232, 0, 1, v234);
        goto LABEL_135;
      case 2u:
        uint64_t v128 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v129 = *((void *)v128 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v129 + 48))(v75, 1, v128))
        {
          sub_1BFEEF884(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v131 = *(void *)(*(void *)(v130 - 8) + 64);
          goto LABEL_106;
        }
        uint64_t v167 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v167 - 8) + 16))(v74, v75, v167);
        uint64_t v168 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v169 = v168[5];
        uint64_t v170 = (void *)((char *)v74 + v169);
        uint64_t v171 = (void *)((char *)v75 + v169);
        void *v170 = *v171;
        v170[1] = v171[1];
        uint64_t v172 = v168[6];
        uint64_t v173 = (char *)v74 + v172;
        v174 = (void *)((char *)v75 + v172);
        *(void *)uint64_t v173 = *v174;
        *((void *)v173 + 1) = v174[1];
        uint64_t v175 = v174 + 2;
        unint64_t v176 = v174[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v176 >> 60 == 15)
        {
          *((_OWORD *)v173 + 1) = *(_OWORD *)v175;
        }
        else
        {
          uint64_t v215 = *v175;
          sub_1BFE95820(*v175, v176);
          *((void *)v173 + 2) = v215;
          *((void *)v173 + 3) = v176;
        }
        *(void *)((char *)v74 + v168[7]) = *(void *)((char *)v75 + v168[7]);
        *(void *)((char *)v74 + v168[8]) = *(void *)((char *)v75 + v168[8]);
        *(void *)((char *)v74 + v128[5]) = *(void *)((char *)v75 + v128[5]);
        *(void *)((char *)v74 + v128[6]) = *(void *)((char *)v75 + v128[6]);
        uint64_t v216 = v128[7];
        uint64_t v217 = (void *)((char *)v74 + v216);
        v218 = (void *)((char *)v75 + v216);
        *uint64_t v217 = *v218;
        v217[1] = v218[1];
        v219 = *(void (**)(void *, void, uint64_t, int *))(v129 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v219(v74, 0, 1, v128);
        goto LABEL_136;
      case 3u:
        void *v74 = *v75;
        uint64_t v137 = v75[1];
        *((unsigned char *)v74 + 16) = *((unsigned char *)v75 + 16);
        v74[1] = v137;
        uint64_t v138 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v139 = v138[6];
        uint64_t v140 = (char *)v74 + v139;
        uint64_t v141 = (char *)v75 + v139;
        uint64_t v142 = type metadata accessor for PuzzleStreak();
        uint64_t v143 = *(void *)(v142 - 8);
        unint64_t v144 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48);
        if (v144(v141, 1, v142))
        {
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v140, v141, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          uint64_t v177 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v140, v141, v177);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
        }
        uint64_t v178 = v138[7];
        uint64_t v179 = (char *)v74 + v178;
        v180 = (char *)v75 + v178;
        if (v144((char *)v75 + v178, 1, v142))
        {
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          uint64_t v198 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v179, v180, v198);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v179, 0, 1, v142);
        }
        uint64_t v199 = v138[8];
        v200 = (_OWORD *)((char *)v74 + v199);
        unint64_t v201 = (long long *)((char *)v75 + v199);
        long long v202 = *v201;
        long long v203 = v201[1];
        *(_OWORD *)((char *)v200 + 25) = *(long long *)((char *)v201 + 25);
        _OWORD *v200 = v202;
        v200[1] = v203;
        uint64_t v204 = v138[9];
        v205 = (_OWORD *)((char *)v74 + v204);
        uint64_t v206 = (long long *)((char *)v75 + v204);
        long long v207 = *v206;
        long long v208 = v206[1];
        *(_OWORD *)((char *)v205 + 25) = *(long long *)((char *)v206 + 25);
        _OWORD *v205 = v207;
        v205[1] = v208;
        uint64_t v209 = v138[10];
        uint64_t v210 = (_OWORD *)((char *)v74 + v209);
        v211 = (long long *)((char *)v75 + v209);
        long long v212 = *v211;
        long long v213 = v211[1];
        *(_OWORD *)((char *)v210 + 25) = *(long long *)((char *)v211 + 25);
        *uint64_t v210 = v212;
        v210[1] = v213;
        goto LABEL_136;
      default:
        uint64_t v76 = type metadata accessor for PuzzleStatisticValue(0);
        int v77 = swift_getEnumCaseMultiPayload();
        if (v77 == 5)
        {
          uint64_t v78 = type metadata accessor for PuzzleStreak();
          uint64_t v79 = *(void *)(v78 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v79 + 48))(v75, 1, v78)) {
            goto LABEL_40;
          }
        }
        else
        {
          if (v77 != 4)
          {
            size_t v131 = *(void *)(*(void *)(v76 - 8) + 64);
LABEL_106:
            v214 = (char *)v74;
LABEL_133:
            memcpy(v214, v75, v131);
            goto LABEL_136;
          }
          uint64_t v78 = type metadata accessor for PuzzleStreak();
          uint64_t v79 = *(void *)(v78 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v79 + 48))(v75, 1, v78))
          {
LABEL_40:
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v74, v75, *(void *)(*(void *)(v80 - 8) + 64));
            goto LABEL_135;
          }
        }
        uint64_t v220 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v220 - 8) + 16))(v74, v75, v220);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v74, 0, 1, v78);
LABEL_135:
        swift_storeEnumTagMultiPayload();
LABEL_136:
        swift_storeEnumTagMultiPayload();
LABEL_137:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FeedGroupItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v7 = (int *)type metadata accessor for FeedWeather(0);
      uint64_t v8 = v7[7];
      uint64_t v9 = (char *)a1 + v8;
      id v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C151E2BC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      uint64_t v12 = v7[9];
      long long v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      sub_1BFEEF884(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
      uint64_t v16 = v15;
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v17(v13, v14, v15);
      uint64_t v18 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v17(&v13[v18[5]], &v14[v18[5]], v16);
      v17(&v13[v18[6]], &v14[v18[6]], v16);
      v17(&v13[v18[7]], &v14[v18[7]], v16);
      *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
      goto LABEL_85;
    case 5u:
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      uint64_t v19 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v20 = v19[10];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *uint64_t v21 = *((unsigned char *)a2 + v20);
      v21[1] = *((unsigned char *)a2 + v20 + 1);
      uint64_t v23 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v24 = v23[6];
      uint64_t v25 = &v21[v24];
      id v26 = &v22[v24];
      uint64_t v27 = (int *)type metadata accessor for SharedItem();
      uint64_t v28 = *((void *)v27 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v58 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v25, v26, v58);
        v25[v27[5]] = v26[v27[5]];
        *(void *)&v25[v27[6]] = *(void *)&v26[v27[6]];
        uint64_t v59 = v27[7];
        uint64_t v168 = &v25[v59];
        uint64_t v60 = &v26[v59];
        uint64_t v61 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v168, v60, v61);
        (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
      }
      v21[v23[7]] = v22[v23[7]];
      v21[v23[8]] = v22[v23[8]];
      v21[v23[9]] = v22[v23[9]];
      v21[v23[10]] = v22[v23[10]];
      uint64_t v62 = v19[11];
      uint64_t v63 = (char *)a1 + v62;
      long long v64 = (char *)a2 + v62;
      uint64_t v65 = sub_1C151D2DC();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
      uint64_t v74 = v19[13];
      uint64_t v75 = *(void *)((char *)a2 + v74);
      if (v75 == 2) {
        uint64_t v75 = 2;
      }
      *(void *)((char *)a1 + v74) = v75;
      *(void *)((char *)a1 + v19[14]) = *(void *)((char *)a2 + v19[14]);
      goto LABEL_85;
    case 6u:
      uint64_t v30 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v30;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      uint64_t v31 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v32 = v31[8];
      uint64_t v33 = (char *)a1 + v32;
      long long v34 = (char *)a2 + v32;
      uint64_t v35 = sub_1C1515FDC();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v37(v33, v34, v35);
      uint64_t v38 = v31[9];
      uint64_t v39 = (char *)a1 + v38;
      unint64_t v40 = (char *)a2 + v38;
      uint64_t v167 = v35;
      unint64_t v166 = v37;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)a2 + v38, 1, v35))
      {
        sub_1BFEEF884(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v37(v39, v40, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      *(void *)((char *)a1 + v31[10]) = *(void *)((char *)a2 + v31[10]);
      *(void *)((char *)a1 + v31[11]) = *(void *)((char *)a2 + v31[11]);
      uint64_t v68 = v31[12];
      id v69 = (_OWORD *)((char *)a1 + v68);
      uint64_t v70 = (_OWORD *)((char *)a2 + v68);
      uint64_t v71 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v72 = *((void *)v71 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v72 + 48))(v70, 1, v71))
      {
        sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
        memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        uint64_t v163 = v72;
        uint64_t v164 = v31;
        *id v69 = *v70;
        *((void *)v69 + 2) = *((void *)v70 + 2);
        *((unsigned char *)v69 + 24) = *((unsigned char *)v70 + 24);
        *((void *)v69 + 4) = *((void *)v70 + 4);
        *(_OWORD *)((char *)v69 + 40) = *(_OWORD *)((char *)v70 + 40);
        *((unsigned char *)v69 + 56) = *((unsigned char *)v70 + 56);
        uint64_t v76 = v71[10];
        int v77 = (char *)v69 + v76;
        uint64_t v78 = (char *)v70 + v76;
        *int v77 = *((unsigned char *)v70 + v76);
        v77[1] = *((unsigned char *)v70 + v76 + 1);
        uint64_t v79 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v80 = v79[6];
        __dst = &v77[v80];
        uint64_t v81 = &v78[v80];
        uint64_t v82 = (int *)type metadata accessor for SharedItem();
        uint64_t v162 = *((void *)v82 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v162 + 48))(v81, 1, v82))
        {
          uint64_t v83 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v81, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          uint64_t v102 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(__dst, v81, v102);
          __dst[v82[5]] = v81[v82[5]];
          *(void *)&__dst[v82[6]] = *(void *)&v81[v82[6]];
          v166(&__dst[v82[7]], &v81[v82[7]], v167);
          (*(void (**)(char *, void, uint64_t, int *))(v162 + 56))(__dst, 0, 1, v82);
        }
        v77[v79[7]] = v78[v79[7]];
        v77[v79[8]] = v78[v79[8]];
        v77[v79[9]] = v78[v79[9]];
        v77[v79[10]] = v78[v79[10]];
        uint64_t v103 = v71[11];
        uint64_t v104 = (char *)v69 + v103;
        uint64_t v105 = (char *)v70 + v103;
        uint64_t v106 = sub_1C151D2DC();
        uint64_t v107 = *(void *)(v106 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v104, v105, v106);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
        }
        uint64_t v31 = v164;
        *(_OWORD *)((char *)v69 + v71[12]) = *(_OWORD *)((char *)v70 + v71[12]);
        uint64_t v109 = v71[13];
        uint64_t v110 = *(void *)((char *)v70 + v109);
        if (v110 == 2) {
          uint64_t v110 = 2;
        }
        *(void *)((char *)v69 + v109) = v110;
        *(void *)((char *)v69 + v71[14]) = *(void *)((char *)v70 + v71[14]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v163 + 56))(v69, 0, 1, v71);
      }
      uint64_t v111 = v31[13];
      uint64_t v112 = (_OWORD *)((char *)a1 + v111);
      uint64_t v113 = (_OWORD *)((char *)a2 + v111);
      uint64_t v114 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v115 = *(void *)(v114 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
      {
        sub_1BFEEF884(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v112 = *v113;
          uint64_t v117 = type metadata accessor for GenericDataVisualization();
          v166((char *)v112 + *(int *)(v117 + 20), (char *)v113 + *(int *)(v117 + 20), v167);
          *(void *)((char *)v112 + *(int *)(v117 + 24)) = *(void *)((char *)v113 + *(int *)(v117 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v112, v113, *(void *)(v115 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
      }
      *((unsigned char *)a1 + v31[14]) = *((unsigned char *)a2 + v31[14]);
      goto LABEL_85;
    case 0xBu:
      uint64_t v42 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v42;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      uint64_t v43 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      id v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
      uint64_t v46 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v47 = &v44[v46];
      uint64_t v48 = &v45[v46];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v88 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v90 = type metadata accessor for PuzzleStreak();
            uint64_t v91 = *(void *)(v90 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v48, 1, v90))
            {
LABEL_31:
              sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v47, v48, *(void *)(*(void *)(v92 - 8) + 64));
              goto LABEL_65;
            }
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              memcpy(v47, v48, *(void *)(*(void *)(v88 - 8) + 64));
              goto LABEL_66;
            }
            uint64_t v90 = type metadata accessor for PuzzleStreak();
            uint64_t v91 = *(void *)(v90 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v48, 1, v90)) {
              goto LABEL_31;
            }
          }
          uint64_t v143 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v47, v48, v143);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v47, 0, 1, v90);
LABEL_65:
          swift_storeEnumTagMultiPayload();
LABEL_66:
          uint64_t v144 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v145 = *(int *)(v144 + 20);
          uint64_t v146 = &v47[v145];
          uint64_t v147 = &v48[v145];
          int v148 = swift_getEnumCaseMultiPayload();
          if (v148 == 5)
          {
            uint64_t v149 = type metadata accessor for PuzzleStreak();
            uint64_t v150 = *(void *)(v149 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v147, 1, v149))
            {
LABEL_71:
              sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
              goto LABEL_74;
            }
          }
          else
          {
            if (v148 != 4)
            {
              memcpy(v146, v147, *(void *)(*(void *)(v88 - 8) + 64));
              goto LABEL_75;
            }
            uint64_t v149 = type metadata accessor for PuzzleStreak();
            uint64_t v150 = *(void *)(v149 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v147, 1, v149)) {
              goto LABEL_71;
            }
          }
          uint64_t v152 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v146, v147, v152);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v146, 0, 1, v149);
LABEL_74:
          swift_storeEnumTagMultiPayload();
LABEL_75:
          uint64_t v153 = *(int *)(v144 + 24);
          uint64_t v154 = &v47[v153];
          id v155 = &v48[v153];
          int v156 = swift_getEnumCaseMultiPayload();
          if (v156 == 5)
          {
            uint64_t v157 = type metadata accessor for PuzzleStreak();
            uint64_t v158 = *(void *)(v157 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v155, 1, v157))
            {
LABEL_80:
              sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v154, v155, *(void *)(*(void *)(v159 - 8) + 64));
              goto LABEL_83;
            }
          }
          else
          {
            if (v156 != 4)
            {
              memcpy(v154, v155, *(void *)(*(void *)(v88 - 8) + 64));
              goto LABEL_84;
            }
            uint64_t v157 = type metadata accessor for PuzzleStreak();
            uint64_t v158 = *(void *)(v157 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v155, 1, v157)) {
              goto LABEL_80;
            }
          }
          uint64_t v160 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v154, v155, v160);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v154, 0, 1, v157);
          goto LABEL_83;
        case 2u:
          uint64_t v84 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v85 = *((void *)v84 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v85 + 48))(v48, 1, v84))
          {
            sub_1BFEEF884(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            size_t v87 = *(void *)(*(void *)(v86 - 8) + 64);
            goto LABEL_57;
          }
          uint64_t v118 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v47, v48, v118);
          uint64_t v119 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)&v47[v119[5]] = *(_OWORD *)&v48[v119[5]];
          uint64_t v120 = v119[6];
          long long v121 = &v47[v120];
          long long v122 = &v48[v120];
          long long v123 = *((_OWORD *)v122 + 1);
          *(_OWORD *)long long v121 = *(_OWORD *)v122;
          *((_OWORD *)v121 + 1) = v123;
          *(void *)&v47[v119[7]] = *(void *)&v48[v119[7]];
          *(void *)&v47[v119[8]] = *(void *)&v48[v119[8]];
          *(void *)&v47[v84[5]] = *(void *)&v48[v84[5]];
          *(void *)&v47[v84[6]] = *(void *)&v48[v84[6]];
          *(_OWORD *)&v47[v84[7]] = *(_OWORD *)&v48[v84[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v85 + 56))(v47, 0, 1, v84);
          goto LABEL_84;
        case 3u:
          uint64_t v93 = *((void *)v48 + 1);
          *(void *)uint64_t v47 = *(void *)v48;
          *((void *)v47 + 1) = v93;
          v47[16] = v48[16];
          uint64_t v94 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v95 = v94[6];
          uint64_t v96 = &v47[v95];
          uint64_t v97 = &v48[v95];
          uint64_t v98 = type metadata accessor for PuzzleStreak();
          uint64_t v99 = *(void *)(v98 - 8);
          uint64_t v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
          if (v100(v97, 1, v98))
          {
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v96, v97, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            uint64_t v124 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v96, v97, v124);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          uint64_t v125 = v94[7];
          long long v126 = &v47[v125];
          long long v127 = &v48[v125];
          if (v100(&v48[v125], 1, v98))
          {
            sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
          }
          else
          {
            uint64_t v129 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v126, v127, v129);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v126, 0, 1, v98);
          }
          uint64_t v130 = v94[8];
          size_t v131 = &v47[v130];
          uint64_t v132 = &v48[v130];
          long long v133 = *((_OWORD *)v132 + 1);
          *(_OWORD *)size_t v131 = *(_OWORD *)v132;
          *((_OWORD *)v131 + 1) = v133;
          *(_OWORD *)(v131 + 25) = *(_OWORD *)(v132 + 25);
          uint64_t v134 = v94[9];
          uint64_t v135 = &v47[v134];
          uint64_t v136 = &v48[v134];
          *(_OWORD *)(v135 + 25) = *(_OWORD *)(v136 + 25);
          long long v137 = *((_OWORD *)v136 + 1);
          *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
          *((_OWORD *)v135 + 1) = v137;
          uint64_t v138 = v94[10];
          uint64_t v139 = &v47[v138];
          uint64_t v140 = &v48[v138];
          long long v141 = *((_OWORD *)v140 + 1);
          *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
          *((_OWORD *)v139 + 1) = v141;
          *(_OWORD *)(v139 + 25) = *(_OWORD *)(v140 + 25);
          goto LABEL_84;
        default:
          uint64_t v49 = type metadata accessor for PuzzleStatisticValue(0);
          int v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5)
          {
            uint64_t v51 = type metadata accessor for PuzzleStreak();
            uint64_t v52 = *(void *)(v51 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v48, 1, v51)) {
              goto LABEL_12;
            }
          }
          else
          {
            if (v50 != 4)
            {
              size_t v87 = *(void *)(*(void *)(v49 - 8) + 64);
LABEL_57:
              memcpy(v47, v48, v87);
              goto LABEL_84;
            }
            uint64_t v51 = type metadata accessor for PuzzleStreak();
            uint64_t v52 = *(void *)(v51 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v48, 1, v51))
            {
LABEL_12:
              sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v47, v48, *(void *)(*(void *)(v53 - 8) + 64));
              goto LABEL_83;
            }
          }
          uint64_t v142 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v47, v48, v142);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v47, 0, 1, v51);
LABEL_83:
          swift_storeEnumTagMultiPayload();
LABEL_84:
          swift_storeEnumTagMultiPayload();
LABEL_85:
          swift_storeEnumTagMultiPayload();
          return a1;
      }
    case 0xCu:
      *a1 = *a2;
      uint64_t v54 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      id v55 = (char *)a1 + v54;
      unint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = sub_1C151D6DC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      goto LABEL_85;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

_OWORD *assignWithTake for FeedGroupItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFED03E0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v7 = (int *)type metadata accessor for FeedWeather(0);
        uint64_t v8 = v7[7];
        uint64_t v9 = (char *)a1 + v8;
        id v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C151E2BC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
        uint64_t v12 = v7[9];
        long long v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        sub_1BFEEF884(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
        uint64_t v16 = v15;
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v17(v13, v14, v15);
        uint64_t v18 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v17(&v13[v18[5]], &v14[v18[5]], v16);
        v17(&v13[v18[6]], &v14[v18[6]], v16);
        v17(&v13[v18[7]], &v14[v18[7]], v16);
        *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
        goto LABEL_86;
      case 5u:
        *a1 = *a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v19 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v20 = v19[10];
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        *uint64_t v21 = *((unsigned char *)a2 + v20);
        v21[1] = *((unsigned char *)a2 + v20 + 1);
        uint64_t v23 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v24 = v23[6];
        uint64_t v25 = &v21[v24];
        id v26 = &v22[v24];
        uint64_t v27 = (int *)type metadata accessor for SharedItem();
        uint64_t v28 = *((void *)v27 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
        {
          uint64_t v29 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          uint64_t v58 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v25, v26, v58);
          v25[v27[5]] = v26[v27[5]];
          *(void *)&v25[v27[6]] = *(void *)&v26[v27[6]];
          uint64_t v59 = v27[7];
          uint64_t v168 = &v25[v59];
          uint64_t v60 = &v26[v59];
          uint64_t v61 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v168, v60, v61);
          (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
        }
        v21[v23[7]] = v22[v23[7]];
        v21[v23[8]] = v22[v23[8]];
        v21[v23[9]] = v22[v23[9]];
        v21[v23[10]] = v22[v23[10]];
        uint64_t v62 = v19[11];
        uint64_t v63 = (char *)a1 + v62;
        long long v64 = (char *)a2 + v62;
        uint64_t v65 = sub_1C151D2DC();
        uint64_t v66 = *(void *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
        uint64_t v74 = v19[13];
        uint64_t v75 = *(void *)((char *)a2 + v74);
        if (v75 == 2) {
          uint64_t v75 = 2;
        }
        *(void *)((char *)a1 + v74) = v75;
        *(void *)((char *)a1 + v19[14]) = *(void *)((char *)a2 + v19[14]);
        goto LABEL_86;
      case 6u:
        uint64_t v30 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v30;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v31 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v32 = v31[8];
        uint64_t v33 = (char *)a1 + v32;
        long long v34 = (char *)a2 + v32;
        uint64_t v35 = sub_1C1515FDC();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
        v37(v33, v34, v35);
        uint64_t v38 = v31[9];
        uint64_t v39 = (char *)a1 + v38;
        unint64_t v40 = (char *)a2 + v38;
        uint64_t v167 = v35;
        unint64_t v166 = v37;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)a2 + v38, 1, v35))
        {
          sub_1BFEEF884(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          v37(v39, v40, v35);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
        }
        *(void *)((char *)a1 + v31[10]) = *(void *)((char *)a2 + v31[10]);
        *(void *)((char *)a1 + v31[11]) = *(void *)((char *)a2 + v31[11]);
        uint64_t v68 = v31[12];
        id v69 = (_OWORD *)((char *)a1 + v68);
        uint64_t v70 = (_OWORD *)((char *)a2 + v68);
        uint64_t v71 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v72 = *((void *)v71 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v72 + 48))(v70, 1, v71))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
          memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          uint64_t v163 = v72;
          uint64_t v164 = v31;
          *id v69 = *v70;
          *((void *)v69 + 2) = *((void *)v70 + 2);
          *((unsigned char *)v69 + 24) = *((unsigned char *)v70 + 24);
          *((void *)v69 + 4) = *((void *)v70 + 4);
          *(_OWORD *)((char *)v69 + 40) = *(_OWORD *)((char *)v70 + 40);
          *((unsigned char *)v69 + 56) = *((unsigned char *)v70 + 56);
          uint64_t v76 = v71[10];
          int v77 = (char *)v69 + v76;
          uint64_t v78 = (char *)v70 + v76;
          *int v77 = *((unsigned char *)v70 + v76);
          v77[1] = *((unsigned char *)v70 + v76 + 1);
          uint64_t v79 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v80 = v79[6];
          __dst = &v77[v80];
          uint64_t v81 = &v78[v80];
          uint64_t v82 = (int *)type metadata accessor for SharedItem();
          uint64_t v162 = *((void *)v82 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v162 + 48))(v81, 1, v82))
          {
            uint64_t v83 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v81, *(void *)(*(void *)(v83 - 8) + 64));
          }
          else
          {
            uint64_t v102 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(__dst, v81, v102);
            __dst[v82[5]] = v81[v82[5]];
            *(void *)&__dst[v82[6]] = *(void *)&v81[v82[6]];
            v166(&__dst[v82[7]], &v81[v82[7]], v167);
            (*(void (**)(char *, void, uint64_t, int *))(v162 + 56))(__dst, 0, 1, v82);
          }
          v77[v79[7]] = v78[v79[7]];
          v77[v79[8]] = v78[v79[8]];
          v77[v79[9]] = v78[v79[9]];
          v77[v79[10]] = v78[v79[10]];
          uint64_t v103 = v71[11];
          uint64_t v104 = (char *)v69 + v103;
          uint64_t v105 = (char *)v70 + v103;
          uint64_t v106 = sub_1C151D2DC();
          uint64_t v107 = *(void *)(v106 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
          {
            sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v104, v105, v106);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
          }
          uint64_t v31 = v164;
          *(_OWORD *)((char *)v69 + v71[12]) = *(_OWORD *)((char *)v70 + v71[12]);
          uint64_t v109 = v71[13];
          uint64_t v110 = *(void *)((char *)v70 + v109);
          if (v110 == 2) {
            uint64_t v110 = 2;
          }
          *(void *)((char *)v69 + v109) = v110;
          *(void *)((char *)v69 + v71[14]) = *(void *)((char *)v70 + v71[14]);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v163 + 56))(v69, 0, 1, v71);
        }
        uint64_t v111 = v31[13];
        uint64_t v112 = (_OWORD *)((char *)a1 + v111);
        uint64_t v113 = (_OWORD *)((char *)a2 + v111);
        uint64_t v114 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v115 = *(void *)(v114 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
        {
          sub_1BFEEF884(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v112 = *v113;
            uint64_t v117 = type metadata accessor for GenericDataVisualization();
            v166((char *)v112 + *(int *)(v117 + 20), (char *)v113 + *(int *)(v117 + 20), v167);
            *(void *)((char *)v112 + *(int *)(v117 + 24)) = *(void *)((char *)v113 + *(int *)(v117 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v112, v113, *(void *)(v115 + 64));
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
        }
        *((unsigned char *)a1 + v31[14]) = *((unsigned char *)a2 + v31[14]);
        goto LABEL_86;
      case 0xBu:
        uint64_t v42 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v42;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v43 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        id v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
        uint64_t v46 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v47 = &v44[v46];
        uint64_t v48 = &v45[v46];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v88 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v90 = type metadata accessor for PuzzleStreak();
              uint64_t v91 = *(void *)(v90 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v48, 1, v90))
              {
LABEL_32:
                sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v47, v48, *(void *)(*(void *)(v92 - 8) + 64));
                goto LABEL_66;
              }
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                memcpy(v47, v48, *(void *)(*(void *)(v88 - 8) + 64));
                goto LABEL_67;
              }
              uint64_t v90 = type metadata accessor for PuzzleStreak();
              uint64_t v91 = *(void *)(v90 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v48, 1, v90)) {
                goto LABEL_32;
              }
            }
            uint64_t v143 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v47, v48, v143);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v47, 0, 1, v90);
LABEL_66:
            swift_storeEnumTagMultiPayload();
LABEL_67:
            uint64_t v144 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v145 = *(int *)(v144 + 20);
            uint64_t v146 = &v47[v145];
            uint64_t v147 = &v48[v145];
            int v148 = swift_getEnumCaseMultiPayload();
            if (v148 == 5)
            {
              uint64_t v149 = type metadata accessor for PuzzleStreak();
              uint64_t v150 = *(void *)(v149 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v147, 1, v149))
              {
LABEL_72:
                sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
                goto LABEL_75;
              }
            }
            else
            {
              if (v148 != 4)
              {
                memcpy(v146, v147, *(void *)(*(void *)(v88 - 8) + 64));
                goto LABEL_76;
              }
              uint64_t v149 = type metadata accessor for PuzzleStreak();
              uint64_t v150 = *(void *)(v149 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v147, 1, v149)) {
                goto LABEL_72;
              }
            }
            uint64_t v152 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v146, v147, v152);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v146, 0, 1, v149);
LABEL_75:
            swift_storeEnumTagMultiPayload();
LABEL_76:
            uint64_t v153 = *(int *)(v144 + 24);
            uint64_t v154 = &v47[v153];
            id v155 = &v48[v153];
            int v156 = swift_getEnumCaseMultiPayload();
            if (v156 == 5)
            {
              uint64_t v157 = type metadata accessor for PuzzleStreak();
              uint64_t v158 = *(void *)(v157 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v155, 1, v157))
              {
LABEL_81:
                sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v154, v155, *(void *)(*(void *)(v159 - 8) + 64));
                goto LABEL_84;
              }
            }
            else
            {
              if (v156 != 4)
              {
                memcpy(v154, v155, *(void *)(*(void *)(v88 - 8) + 64));
                goto LABEL_85;
              }
              uint64_t v157 = type metadata accessor for PuzzleStreak();
              uint64_t v158 = *(void *)(v157 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v155, 1, v157)) {
                goto LABEL_81;
              }
            }
            uint64_t v160 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v154, v155, v160);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v154, 0, 1, v157);
            goto LABEL_84;
          case 2u:
            uint64_t v84 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v85 = *((void *)v84 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v85 + 48))(v48, 1, v84))
            {
              sub_1BFEEF884(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
              size_t v87 = *(void *)(*(void *)(v86 - 8) + 64);
              goto LABEL_58;
            }
            uint64_t v118 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v47, v48, v118);
            uint64_t v119 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v47[v119[5]] = *(_OWORD *)&v48[v119[5]];
            uint64_t v120 = v119[6];
            long long v121 = &v47[v120];
            long long v122 = &v48[v120];
            long long v123 = *((_OWORD *)v122 + 1);
            *(_OWORD *)long long v121 = *(_OWORD *)v122;
            *((_OWORD *)v121 + 1) = v123;
            *(void *)&v47[v119[7]] = *(void *)&v48[v119[7]];
            *(void *)&v47[v119[8]] = *(void *)&v48[v119[8]];
            *(void *)&v47[v84[5]] = *(void *)&v48[v84[5]];
            *(void *)&v47[v84[6]] = *(void *)&v48[v84[6]];
            *(_OWORD *)&v47[v84[7]] = *(_OWORD *)&v48[v84[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v85 + 56))(v47, 0, 1, v84);
            goto LABEL_85;
          case 3u:
            uint64_t v93 = *((void *)v48 + 1);
            *(void *)uint64_t v47 = *(void *)v48;
            *((void *)v47 + 1) = v93;
            v47[16] = v48[16];
            uint64_t v94 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v95 = v94[6];
            uint64_t v96 = &v47[v95];
            uint64_t v97 = &v48[v95];
            uint64_t v98 = type metadata accessor for PuzzleStreak();
            uint64_t v99 = *(void *)(v98 - 8);
            uint64_t v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
            if (v100(v97, 1, v98))
            {
              sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v96, v97, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v124 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v96, v97, v124);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
            }
            uint64_t v125 = v94[7];
            long long v126 = &v47[v125];
            long long v127 = &v48[v125];
            if (v100(&v48[v125], 1, v98))
            {
              sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
            }
            else
            {
              uint64_t v129 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v126, v127, v129);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v126, 0, 1, v98);
            }
            uint64_t v130 = v94[8];
            size_t v131 = &v47[v130];
            uint64_t v132 = &v48[v130];
            long long v133 = *((_OWORD *)v132 + 1);
            *(_OWORD *)size_t v131 = *(_OWORD *)v132;
            *((_OWORD *)v131 + 1) = v133;
            *(_OWORD *)(v131 + 25) = *(_OWORD *)(v132 + 25);
            uint64_t v134 = v94[9];
            uint64_t v135 = &v47[v134];
            uint64_t v136 = &v48[v134];
            *(_OWORD *)(v135 + 25) = *(_OWORD *)(v136 + 25);
            long long v137 = *((_OWORD *)v136 + 1);
            *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
            *((_OWORD *)v135 + 1) = v137;
            uint64_t v138 = v94[10];
            uint64_t v139 = &v47[v138];
            uint64_t v140 = &v48[v138];
            long long v141 = *((_OWORD *)v140 + 1);
            *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
            *((_OWORD *)v139 + 1) = v141;
            *(_OWORD *)(v139 + 25) = *(_OWORD *)(v140 + 25);
            goto LABEL_85;
          default:
            uint64_t v49 = type metadata accessor for PuzzleStatisticValue(0);
            int v50 = swift_getEnumCaseMultiPayload();
            if (v50 == 5)
            {
              uint64_t v51 = type metadata accessor for PuzzleStreak();
              uint64_t v52 = *(void *)(v51 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v48, 1, v51)) {
                goto LABEL_13;
              }
            }
            else
            {
              if (v50 != 4)
              {
                size_t v87 = *(void *)(*(void *)(v49 - 8) + 64);
LABEL_58:
                memcpy(v47, v48, v87);
                goto LABEL_85;
              }
              uint64_t v51 = type metadata accessor for PuzzleStreak();
              uint64_t v52 = *(void *)(v51 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v48, 1, v51))
              {
LABEL_13:
                sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v47, v48, *(void *)(*(void *)(v53 - 8) + 64));
                goto LABEL_84;
              }
            }
            uint64_t v142 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v47, v48, v142);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v47, 0, 1, v51);
LABEL_84:
            swift_storeEnumTagMultiPayload();
LABEL_85:
            swift_storeEnumTagMultiPayload();
LABEL_86:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      case 0xCu:
        *a1 = *a2;
        uint64_t v54 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        id v55 = (char *)a1 + v54;
        unint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = sub_1C151D6DC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        goto LABEL_86;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1C09B7C64()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09B7CB4()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  }
  if (*(void *)(v0 + 168)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  }
  if (*(void *)(v0 + 208)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  }
  return swift_deallocObject();
}

uint64_t sub_1C09B7D44()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09B7D84()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C09B7E14()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C09B7E8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09B9FD4(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      strcpy((char *)v12, "standing::");
      BYTE3(v12[1]) = 0;
      HIDWORD(v12[1]) = -369098752;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_11;
    case 2u:
      strcpy((char *)v12, "bracket::");
      WORD1(v12[1]) = 0;
      HIDWORD(v12[1]) = -385875968;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 3u:
      uint64_t v9 = 0x65726F6353786F62;
      unint64_t v10 = 0xEA00000000003A3ALL;
      goto LABEL_9;
    case 4u:
      uint64_t v9 = 0x726F6353656E696CLL;
      unint64_t v10 = 0xEB000000003A3A65;
      goto LABEL_9;
    case 5u:
      v12[0] = 0;
      v12[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v12, "injuryReport::");
      HIBYTE(v12[1]) = -18;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 6u:
      uint64_t v9 = 0x6579616C5079656BLL;
      unint64_t v10 = 0xEB000000003A3A72;
LABEL_9:
      v12[0] = v9;
      v12[1] = v10;
      swift_bridgeObjectRetain();
LABEL_10:
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_11:
      swift_bridgeObjectRelease();
      uint64_t v8 = v12[0];
      break;
    default:
      sub_1C09BC4B8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      strcpy((char *)v12, "score::");
      v12[1] = 0xE700000000000000;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v8 = v12[0];
      sub_1C09BB868((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      break;
  }
  return v8;
}

uint64_t sub_1C09B8238()
{
  uint64_t v1 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C09B9FD4(v0, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = *v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      uint64_t v7 = *v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v7 = *v6;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      sub_1C09BC4B8((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      uint64_t v7 = *v3;
      swift_bridgeObjectRetain();
      sub_1C09BB868((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      break;
  }
  return v7;
}

void *sub_1C09B8418()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C09B9FD4(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 2u:
      uint64_t v17 = v11[8];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(v17 + 16);
      if (!v18)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      uint64_t v19 = v17 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      uint64_t v20 = *(void *)(v3 + 72);
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        sub_1C09B9FD4(v19, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        uint64_t v23 = *((void *)v5 + 2);
        uint64_t v22 = *((void *)v5 + 3);
        swift_bridgeObjectRetain();
        sub_1C09BB868((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        if (v22)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = sub_1BFEF9B68(0, v14[2] + 1, 1, v14);
          }
          unint64_t v25 = v14[2];
          unint64_t v24 = v14[3];
          if (v25 >= v24 >> 1) {
            uint64_t v14 = sub_1BFEF9B68((void *)(v24 > 1), v25 + 1, 1, v14);
          }
          long long v14[2] = v25 + 1;
          uint64_t v21 = &v14[2 * v25];
          v21[4] = v23;
          v21[5] = v22;
        }
        v19 += v20;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease_n();
      break;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v12 = v11[2];
      uint64_t v13 = v11[3];
      sub_1BFEF9A78();
      uint64_t v14 = (void *)swift_allocObject();
      *((_OWORD *)v14 + 1) = xmmword_1C1529AE0;
      v14[4] = v12;
      v14[5] = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    default:
      sub_1C09BC4B8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      uint64_t v15 = *((void *)v8 + 3);
      if (v15)
      {
        uint64_t v16 = *((void *)v8 + 2);
        sub_1BFEF9A78();
        uint64_t v14 = (void *)swift_allocObject();
        *((_OWORD *)v14 + 1) = xmmword_1C1529AE0;
        v14[4] = v16;
        v14[5] = v15;
        swift_bridgeObjectRetain();
        sub_1C09BB868((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      }
      else
      {
        sub_1C09BB868((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
LABEL_18:
        uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
      }
      break;
  }
  return v14;
}

uint64_t sub_1C09B8800@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  sub_1C09BCBBC(0, &qword_1EB86B7B0, (uint64_t (*)(void))sub_1C09BC410, (uint64_t)&type metadata for SportsDataVisualizationResponseItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v67 = v3;
  uint64_t v62 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v56 - v4;
  uint64_t v65 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v65);
  long long v64 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v63 = (char *)&v56 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (_OWORD *)((char *)&v56 - v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v56 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v56 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  MEMORY[0x1F4188790](v23);
  unint64_t v25 = (char *)&v56 - v24;
  uint64_t v26 = a1[3];
  id v69 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1C09BC410();
  uint64_t v68 = v5;
  uint64_t v27 = v77;
  sub_1C1520EBC();
  if (v27)
  {
    uint64_t v28 = (uint64_t)v69;
  }
  else
  {
    uint64_t v59 = v22;
    int v77 = v19;
    uint64_t v57 = v16;
    uint64_t v58 = v13;
    uint64_t v29 = v63;
    uint64_t v30 = (uint64_t)v64;
    uint64_t v60 = v25;
    uint64_t v31 = v66;
    sub_1C09BC464();
    uint64_t v32 = v67;
    sub_1C15206EC();
    uint64_t v28 = (uint64_t)v69;
    uint64_t v33 = (uint64_t)v77;
    switch((char)v70)
    {
      case 1:
        sub_1BFC66384((uint64_t)v69, (uint64_t)v76);
        sub_1C0A8F958(v76, (uint64_t *)&v70);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v32);
        uint64_t v34 = *((void *)&v70 + 1);
        char v35 = v73;
        *(void *)uint64_t v33 = v70;
        *(void *)(v33 + 8) = v34;
        long long v36 = v72;
        *(_OWORD *)(v33 + 16) = v71;
        *(_OWORD *)(v33 + 32) = v36;
        *(unsigned char *)(v33 + 48) = v35;
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = v33;
        goto LABEL_12;
      case 2:
        sub_1BFC66384((uint64_t)v69, (uint64_t)v76);
        sub_1C119FC3C(v76, (uint64_t)&v70);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v32);
        uint64_t v38 = *((void *)&v70 + 1);
        uint64_t v39 = v74;
        char v40 = v75;
        uint64_t v30 = (uint64_t)v57;
        *uint64_t v57 = v70;
        *(void *)(v30 + 8) = v38;
        long long v41 = v72;
        *(_OWORD *)(v30 + 16) = v71;
        *(_OWORD *)(v30 + 32) = v41;
        *(_OWORD *)(v30 + 48) = v73;
        *(void *)(v30 + 64) = v39;
        *(unsigned char *)(v30 + 72) = v40;
        goto LABEL_11;
      case 3:
        sub_1BFC66384((uint64_t)v69, (uint64_t)v76);
        sub_1C12F6D74(v76, (uint64_t)&v70);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v32);
        long long v42 = v71;
        uint64_t v43 = v73;
        char v44 = BYTE8(v73);
        uint64_t v30 = (uint64_t)v58;
        *uint64_t v58 = v70;
        *(_OWORD *)(v30 + 16) = v42;
        *(_OWORD *)(v30 + 32) = v72;
        *(void *)(v30 + 48) = v43;
        *(unsigned char *)(v30 + 56) = v44;
        goto LABEL_11;
      case 4:
        sub_1BFC66384((uint64_t)v69, (uint64_t)v76);
        sub_1C131C37C(v76, (uint64_t)&v70);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v32);
        long long v45 = v71;
        uint64_t v46 = v73;
        char v47 = BYTE8(v73);
        uint64_t v30 = (uint64_t)v61;
        *uint64_t v61 = v70;
        *(_OWORD *)(v30 + 16) = v45;
        *(_OWORD *)(v30 + 32) = v72;
        *(void *)(v30 + 48) = v46;
        *(unsigned char *)(v30 + 56) = v47;
        goto LABEL_11;
      case 5:
        sub_1BFC66384((uint64_t)v69, (uint64_t)v76);
        sub_1C01CB6E8(v76, (uint64_t)&v70);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v32);
        long long v48 = v71;
        uint64_t v49 = v73;
        char v50 = BYTE8(v73);
        *(_OWORD *)uint64_t v29 = v70;
        *((_OWORD *)v29 + 1) = v48;
        *((_OWORD *)v29 + 2) = v72;
        *((void *)v29 + 6) = v49;
        v29[56] = v50;
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = (uint64_t)v29;
        goto LABEL_12;
      case 6:
        sub_1BFC66384((uint64_t)v69, (uint64_t)v76);
        sub_1C0952078(v76, (uint64_t)&v70);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v32);
        long long v51 = v71;
        uint64_t v52 = v73;
        char v53 = BYTE8(v73);
        *(_OWORD *)uint64_t v30 = v70;
        *(_OWORD *)(v30 + 16) = v51;
        *(_OWORD *)(v30 + 32) = v72;
        *(void *)(v30 + 48) = v52;
        *(unsigned char *)(v30 + 56) = v53;
        goto LABEL_11;
      default:
        sub_1BFC66384((uint64_t)v69, (uint64_t)&v70);
        uint64_t v30 = (uint64_t)v59;
        sub_1C0C206FC(&v70, (uint64_t)v59);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v32);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = v30;
LABEL_12:
        uint64_t v54 = (uint64_t)v60;
        sub_1C09BC4B8(v37, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
        sub_1C09BC4B8(v54, v31, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_1C09B8F64(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09BCBBC(0, &qword_1EA1A1CB0, (uint64_t (*)(void))sub_1C09BC410, (uint64_t)&type metadata for SportsDataVisualizationResponseItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v89 = v10;
  uint64_t v77 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v71 - v11;
  uint64_t v13 = a1[3];
  char v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C09BC410();
  uint64_t v78 = v12;
  sub_1C1520F0C();
  sub_1C09B9FD4(v2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = *((void *)v9 + 1);
      uint64_t v74 = *(void *)v9;
      uint64_t v20 = *((void *)v9 + 2);
      uint64_t v19 = *((void *)v9 + 3);
      uint64_t v22 = *((void *)v9 + 4);
      uint64_t v21 = *((void *)v9 + 5);
      char v23 = v9[48];
      LOBYTE(v79) = 1;
      sub_1C09BC520();
      uint64_t v24 = v89;
      unint64_t v25 = v78;
      uint64_t v26 = v76;
      sub_1C152080C();
      if (v26)
      {
        (*(void (**)(char *, uint64_t))(v77 + 8))(v25, v24);
      }
      else
      {
        uint64_t v79 = v74;
        uint64_t v80 = v18;
        uint64_t v81 = v20;
        uint64_t v82 = v19;
        uint64_t v83 = v22;
        uint64_t v84 = v21;
        LOBYTE(v85) = v23;
        sub_1C0A8FF60(v75);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v89);
      }
      goto LABEL_22;
    case 2u:
      uint64_t v27 = *(void *)v9;
      uint64_t v28 = *((void *)v9 + 1);
      uint64_t v29 = *((void *)v9 + 3);
      uint64_t v72 = *((void *)v9 + 2);
      uint64_t v73 = v27;
      uint64_t v71 = *((void *)v9 + 4);
      uint64_t v30 = *((void *)v9 + 6);
      uint64_t v74 = *((void *)v9 + 5);
      uint64_t v31 = *((void *)v9 + 7);
      uint64_t v32 = *((void *)v9 + 8);
      char v33 = v9[72];
      LOBYTE(v79) = 2;
      sub_1C09BC520();
      uint64_t v34 = v89;
      char v35 = v78;
      uint64_t v36 = v76;
      sub_1C152080C();
      if (v36)
      {
        (*(void (**)(char *, uint64_t))(v77 + 8))(v35, v34);
      }
      else
      {
        uint64_t v79 = v73;
        uint64_t v80 = v28;
        uint64_t v81 = v72;
        uint64_t v82 = v29;
        uint64_t v83 = v71;
        uint64_t v84 = v74;
        uint64_t v85 = v30;
        uint64_t v86 = v31;
        uint64_t v87 = v32;
        char v88 = v33;
        sub_1C11A04BC(v75);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v89);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3u:
      uint64_t v37 = *(void *)v9;
      uint64_t v38 = *((void *)v9 + 1);
      uint64_t v39 = *((void *)v9 + 3);
      uint64_t v73 = *((void *)v9 + 2);
      uint64_t v74 = v37;
      uint64_t v41 = *((void *)v9 + 4);
      uint64_t v40 = *((void *)v9 + 5);
      uint64_t v42 = *((void *)v9 + 6);
      char v43 = v9[56];
      LOBYTE(v79) = 3;
      sub_1C09BC520();
      uint64_t v44 = v89;
      long long v45 = v78;
      uint64_t v46 = v76;
      sub_1C152080C();
      if (v46) {
        goto LABEL_17;
      }
      uint64_t v79 = v74;
      uint64_t v80 = v38;
      uint64_t v81 = v73;
      uint64_t v82 = v39;
      uint64_t v83 = v41;
      uint64_t v84 = v40;
      uint64_t v85 = v42;
      LOBYTE(v86) = v43;
      sub_1C12F7180(v75);
      goto LABEL_21;
    case 4u:
      uint64_t v47 = *(void *)v9;
      uint64_t v48 = *((void *)v9 + 1);
      uint64_t v49 = *((void *)v9 + 3);
      uint64_t v73 = *((void *)v9 + 2);
      uint64_t v74 = v47;
      uint64_t v51 = *((void *)v9 + 4);
      uint64_t v50 = *((void *)v9 + 5);
      uint64_t v52 = *((void *)v9 + 6);
      char v53 = v9[56];
      LOBYTE(v79) = 4;
      sub_1C09BC520();
      uint64_t v44 = v89;
      long long v45 = v78;
      uint64_t v54 = v76;
      sub_1C152080C();
      if (v54) {
        goto LABEL_17;
      }
      uint64_t v79 = v74;
      uint64_t v80 = v48;
      uint64_t v81 = v73;
      uint64_t v82 = v49;
      uint64_t v83 = v51;
      uint64_t v84 = v50;
      uint64_t v85 = v52;
      LOBYTE(v86) = v53;
      sub_1C131C788(v75);
      goto LABEL_21;
    case 5u:
      uint64_t v55 = *(void *)v9;
      uint64_t v56 = *((void *)v9 + 1);
      uint64_t v57 = *((void *)v9 + 3);
      uint64_t v73 = *((void *)v9 + 2);
      uint64_t v74 = v55;
      uint64_t v59 = *((void *)v9 + 4);
      uint64_t v58 = *((void *)v9 + 5);
      uint64_t v60 = *((void *)v9 + 6);
      char v61 = v9[56];
      LOBYTE(v79) = 5;
      sub_1C09BC520();
      uint64_t v44 = v89;
      long long v45 = v78;
      uint64_t v62 = v76;
      sub_1C152080C();
      if (v62) {
        goto LABEL_17;
      }
      uint64_t v79 = v74;
      uint64_t v80 = v56;
      uint64_t v81 = v73;
      uint64_t v82 = v57;
      uint64_t v83 = v59;
      uint64_t v84 = v58;
      uint64_t v85 = v60;
      LOBYTE(v86) = v61;
      sub_1C01CB4A0(v75);
      goto LABEL_21;
    case 6u:
      uint64_t v63 = *(void *)v9;
      uint64_t v64 = *((void *)v9 + 1);
      uint64_t v65 = *((void *)v9 + 3);
      uint64_t v73 = *((void *)v9 + 2);
      uint64_t v74 = v63;
      uint64_t v67 = *((void *)v9 + 4);
      uint64_t v66 = *((void *)v9 + 5);
      uint64_t v68 = *((void *)v9 + 6);
      char v69 = v9[56];
      LOBYTE(v79) = 6;
      sub_1C09BC520();
      uint64_t v44 = v89;
      long long v45 = v78;
      uint64_t v70 = v76;
      sub_1C152080C();
      if (v70)
      {
LABEL_17:
        (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v44);
      }
      else
      {
        uint64_t v79 = v74;
        uint64_t v80 = v64;
        uint64_t v81 = v73;
        uint64_t v82 = v65;
        uint64_t v83 = v67;
        uint64_t v84 = v66;
        uint64_t v85 = v68;
        LOBYTE(v86) = v69;
        sub_1C0951E30(v75);
LABEL_21:
        (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v89);
      }
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      sub_1C09BC4B8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      LOBYTE(v79) = 0;
      sub_1C09BC520();
      uint64_t v14 = v89;
      uint64_t v15 = v78;
      uint64_t v16 = v76;
      sub_1C152080C();
      if (!v16) {
        sub_1C0C20ED8(v75);
      }
      sub_1C09BB868((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v15, v14);
  }
}

unint64_t sub_1C09B9658(char a1)
{
  unint64_t result = 0x535F5354524F5053;
  switch(a1)
  {
    case 2:
      unint64_t result = 0x425F5354524F5053;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C09B975C()
{
  return 0x7079546465626D65;
}

uint64_t sub_1C09B9778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7079546465626D65 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C09B981C(uint64_t a1)
{
  unint64_t v2 = sub_1C09BC410();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09B9858(uint64_t a1)
{
  unint64_t v2 = sub_1C09BC410();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C09B9894(unsigned __int8 *a1, char *a2)
{
  return sub_1C1478558(*a1, *a2);
}

uint64_t sub_1C09B98A0()
{
  return sub_1C044C384();
}

uint64_t sub_1C09B98AC()
{
  return sub_1C0447414();
}

uint64_t sub_1C09B98B4()
{
  return sub_1C044C384();
}

uint64_t sub_1C09B98BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09BC910();
  *a1 = result;
  return result;
}

unint64_t sub_1C09B98EC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C09B9658(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C09B9918()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09B9978()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C09B99C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C09B8800(a1, a2);
}

uint64_t sub_1C09B99E0(void *a1)
{
  return sub_1C09B8F64(a1);
}

uint64_t sub_1C09B99F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[2] = a5;
  v13[1] = a4;
  sub_1C09BCBBC(0, &qword_1EA1A1CD0, (uint64_t (*)(void))sub_1C09BCB68, (uint64_t)&type metadata for SportsDataVisualizationResponseDataSource.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v13 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09BCB68();
  sub_1C1520F0C();
  char v15 = 0;
  uint64_t v11 = v13[3];
  sub_1C15207CC();
  if (!v11)
  {
    char v14 = 1;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C09B9B9C(char *a1, char *a2)
{
  return sub_1C1494F0C(*a1, *a2);
}

uint64_t sub_1C09B9BA8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09B9C40()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09B9CC4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09B9D58@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C09B9DB8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6144636974617473;
  if (*v1) {
    uint64_t v2 = 0x617461446576696CLL;
  }
  unint64_t v3 = 0xED00006C72556174;
  if (*v1) {
    unint64_t v3 = 0xEB000000006C7255;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C09B9E0C()
{
  if (*v0) {
    return 0x617461446576696CLL;
  }
  else {
    return 0x6144636974617473;
  }
}

uint64_t sub_1C09B9E5C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C09B9EC0(uint64_t a1)
{
  unint64_t v2 = sub_1C09BCB68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09B9EFC(uint64_t a1)
{
  unint64_t v2 = sub_1C09BCB68();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C09B9F38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C09BC95C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1C09B9F68(void *a1)
{
  return sub_1C09B99F8(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t type metadata accessor for SportsDataVisualizationResponseItem()
{
  uint64_t result = qword_1EB86A3F0;
  if (!qword_1EB86A3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09B9FD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09BA03C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v17;
        uint64_t v18 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v18;
        uint64_t v19 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v19;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v20 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v20;
        uint64_t v21 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v21;
        uint64_t v22 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v22;
        uint64_t v23 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v23;
        *(void *)(a1 + 64) = a2[8];
        *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v24 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v24;
        uint64_t v25 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v25;
        uint64_t v26 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v26;
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        uint64_t v8 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v8;
        uint64_t v9 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v9;
        uint64_t v10 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
        uint64_t v11 = *(int *)(v10 + 36);
        uint64_t v31 = v10;
        __dst = (unsigned char *)(a1 + v11);
        uint64_t v12 = (char *)a2 + v11;
        uint64_t v13 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
            uint64_t v14 = sub_1C151631C();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v12, v14);
            uint64_t started = type metadata accessor for StartTime(0);
            __dst[*(int *)(started + 20)] = v12[*(int *)(started + 20)];
            goto LABEL_11;
          case 8u:
          case 9u:
            uint64_t v27 = sub_1C151631C();
            uint64_t v28 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 16);
            v28(__dst, v12, v27);
            uint64_t v29 = type metadata accessor for StartTimeEndTime(0);
            v28(&__dst[*(int *)(v29 + 20)], &v12[*(int *)(v29 + 20)], v27);
LABEL_11:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dst, v12, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        *(unsigned char *)(a1 + *(int *)(v31 + 40)) = *((unsigned char *)a2 + *(int *)(v31 + 40));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C09BA854(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(type metadata accessor for SportsDataVisualizationResponseScoreItem() + 36);
      type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          uint64_t v4 = sub_1C151631C();
          int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
          uint64_t v6 = v4;
          uint64_t v7 = v3;
          goto LABEL_10;
        case 8:
        case 9:
          uint64_t v8 = sub_1C151631C();
          uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
          ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v8 - 8), v3, v8);
          uint64_t v7 = v3 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
          uint64_t v6 = v8;
          int v5 = v9;
LABEL_10:
          uint64_t result = v5(v7, v6);
          break;
        default:
          return result;
      }
      break;
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C09BAAA8(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      uint64_t v17 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v17;
      uint64_t v18 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v18;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      goto LABEL_6;
    case 2u:
      uint64_t v20 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v20;
      uint64_t v21 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v21;
      uint64_t v22 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v22;
      uint64_t v23 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v23;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_6:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v8;
      uint64_t v9 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v9;
      uint64_t v10 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v10;
      uint64_t v27 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
      uint64_t v11 = *(int *)(v27 + 36);
      __dst = (unsigned char *)(a1 + v11);
      uint64_t v12 = (unsigned char *)(a2 + v11);
      uint64_t v13 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          uint64_t v14 = sub_1C151631C();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v12, v14);
          uint64_t started = type metadata accessor for StartTime(0);
          __dst[*(int *)(started + 20)] = v12[*(int *)(started + 20)];
          goto LABEL_12;
        case 8u:
        case 9u:
          uint64_t v24 = sub_1C151631C();
          uint64_t v25 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16);
          v25(__dst, v12, v24);
          uint64_t v26 = type metadata accessor for StartTimeEndTime(0);
          v25(&__dst[*(int *)(v26 + 20)], &v12[*(int *)(v26 + 20)], v24);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(__dst, v12, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
      *(unsigned char *)(a1 + *(int *)(v27 + 40)) = *(unsigned char *)(a2 + *(int *)(v27 + 40));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C09BB13C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C09BB868(a1, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        goto LABEL_7;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_7:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        uint64_t v13 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
        uint64_t v4 = *(int *)(v13 + 36);
        __dst = (unsigned char *)(a1 + v4);
        uint64_t v5 = (unsigned char *)(a2 + v4);
        uint64_t v6 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
            uint64_t v7 = sub_1C151631C();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(__dst, v5, v7);
            uint64_t started = type metadata accessor for StartTime(0);
            __dst[*(int *)(started + 20)] = v5[*(int *)(started + 20)];
            goto LABEL_14;
          case 8u:
          case 9u:
            uint64_t v10 = sub_1C151631C();
            uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16);
            v11(__dst, v5, v10);
            uint64_t v12 = type metadata accessor for StartTimeEndTime(0);
            v11(&__dst[*(int *)(v12 + 20)], &v5[*(int *)(v12 + 20)], v10);
LABEL_14:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dst, v5, *(void *)(*(void *)(v6 - 8) + 64));
            break;
        }
        *(unsigned char *)(a1 + *(int *)(v13 + 40)) = *(unsigned char *)(a2 + *(int *)(v13 + 40));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C09BB868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1C09BB8C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
    uint64_t v9 = *(int *)(v8 + 36);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v13 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
        uint64_t started = type metadata accessor for StartTime(0);
        v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
        goto LABEL_7;
      case 8u:
      case 9u:
        uint64_t v15 = sub_1C151631C();
        uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16(v10, v11, v15);
        uint64_t v17 = type metadata accessor for StartTimeEndTime(0);
        v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
    *((unsigned char *)a1 + *(int *)(v8 + 40)) = *((unsigned char *)a2 + *(int *)(v8 + 40));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1C09BBE04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C09BB868((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
      uint64_t v9 = *(int *)(v8 + 36);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          uint64_t v13 = sub_1C151631C();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
          uint64_t started = type metadata accessor for StartTime(0);
          v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
          goto LABEL_8;
        case 8u:
        case 9u:
          uint64_t v15 = sub_1C151631C();
          uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32);
          v16(v10, v11, v15);
          uint64_t v17 = type metadata accessor for StartTimeEndTime(0);
          v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_8:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      *((unsigned char *)a1 + *(int *)(v8 + 40)) = *((unsigned char *)a2 + *(int *)(v8 + 40));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C09BC364()
{
  uint64_t result = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1C09BC410()
{
  unint64_t result = qword_1EB86A3B0;
  if (!qword_1EB86A3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A3B0);
  }
  return result;
}

unint64_t sub_1C09BC464()
{
  unint64_t result = qword_1EB86A3D0;
  if (!qword_1EB86A3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A3D0);
  }
  return result;
}

uint64_t sub_1C09BC4B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C09BC520()
{
  unint64_t result = qword_1EA1A1CB8;
  if (!qword_1EA1A1CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseDataSource()
{
  return &type metadata for SportsDataVisualizationResponseDataSource;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseItem.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09BC650);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseItem.CodingType()
{
  return &type metadata for SportsDataVisualizationResponseItem.CodingType;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseItem.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C09BC724);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseItem.CodingKeys;
}

unint64_t sub_1C09BC760()
{
  unint64_t result = qword_1EA1A1CC0;
  if (!qword_1EA1A1CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CC0);
  }
  return result;
}

unint64_t sub_1C09BC7B8()
{
  unint64_t result = qword_1EA1A1CC8;
  if (!qword_1EA1A1CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CC8);
  }
  return result;
}

unint64_t sub_1C09BC810()
{
  unint64_t result = qword_1EB86A3C0;
  if (!qword_1EB86A3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A3C0);
  }
  return result;
}

unint64_t sub_1C09BC868()
{
  unint64_t result = qword_1EB86A3B8;
  if (!qword_1EB86A3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A3B8);
  }
  return result;
}

unint64_t sub_1C09BC8BC()
{
  unint64_t result = qword_1EB86A3C8;
  if (!qword_1EB86A3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A3C8);
  }
  return result;
}

uint64_t sub_1C09BC910()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C09BC95C(void *a1)
{
  sub_1C09BCBBC(0, &qword_1EB863468, (uint64_t (*)(void))sub_1C09BCB68, (uint64_t)&type metadata for SportsDataVisualizationResponseDataSource.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09BCB68();
  sub_1C1520EBC();
  if (!v1)
  {
    char v12 = 0;
    uint64_t v8 = sub_1C152069C();
    char v11 = 1;
    sub_1C152060C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1C09BCB68()
{
  unint64_t result = qword_1EB862AC0;
  if (!qword_1EB862AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862AC0);
  }
  return result;
}

void sub_1C09BCBBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseDataSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09BCCF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseDataSource.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseDataSource.CodingKeys;
}

unint64_t sub_1C09BCD2C()
{
  unint64_t result = qword_1EA1A1CD8;
  if (!qword_1EA1A1CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CD8);
  }
  return result;
}

unint64_t sub_1C09BCD84()
{
  unint64_t result = qword_1EB862AD0;
  if (!qword_1EB862AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862AD0);
  }
  return result;
}

unint64_t sub_1C09BCDDC()
{
  unint64_t result = qword_1EB862AC8;
  if (!qword_1EB862AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862AC8);
  }
  return result;
}

void *assignWithCopy for FormatOptionEnum(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatOptionEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatInspectionGroup()
{
  return &type metadata for FormatInspectionGroup;
}

uint64_t sub_1C09BCF20()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  sub_1C09BD3E8();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v4;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void sub_1C09BCFA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  char v35 = a6;
  uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (char *)&v32 - v12;
  sub_1C0181BEC(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v20 = *(void *)(a5 + 16);
  if (v20)
  {
    uint64_t v21 = a5 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v22 = *(void *)(v17 + 72);
    uint64_t v40 = v8;
    uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    unint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v38 = v7;
    uint64_t v39 = v10;
    uint64_t v25 = (uint64_t)v41;
    do
    {
      sub_1C09BD2C0(v21, (uint64_t)v19);
      sub_1C09BD380((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))sub_1C0181BEC);
      if ((*v23)(v15, 1, v7) == 1)
      {
        sub_1C09BD324((uint64_t)v15);
      }
      else
      {
        sub_1C09BD380((uint64_t)v15, v25, type metadata accessor for FormatInspectionItem);
        sub_1C09BD380(v25, (uint64_t)v10, type metadata accessor for FormatInspectionItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v24 = sub_1C0EDFAD8(0, *(void *)(v24 + 16) + 1, 1, v24);
        }
        unint64_t v27 = *(void *)(v24 + 16);
        unint64_t v26 = *(void *)(v24 + 24);
        if (v27 >= v26 >> 1) {
          unint64_t v24 = sub_1C0EDFAD8(v26 > 1, v27 + 1, 1, v24);
        }
        *(void *)(v24 + 16) = v27 + 1;
        uint64_t v28 = v24
            + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
            + *(void *)(v40 + 72) * v27;
        unint64_t v10 = v39;
        sub_1C09BD380((uint64_t)v39, v28, type metadata accessor for FormatInspectionItem);
        uint64_t v7 = v38;
      }
      v21 += v22;
      --v20;
    }
    while (v20);
  }
  else
  {
    unint64_t v24 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = v35;
  uint64_t v30 = v34;
  *char v35 = v33;
  v29[1] = v30;
  uint64_t v31 = v37;
  v29[2] = v36;
  v29[3] = v31;
  v29[4] = v24;
}

uint64_t sub_1C09BD2C0(uint64_t a1, uint64_t a2)
{
  sub_1C0181BEC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09BD324(uint64_t a1)
{
  sub_1C0181BEC(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C09BD380(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C09BD3E8()
{
  if (!qword_1EA1A8720)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8720);
    }
  }
}

uint64_t FormatFileVersionURIReference.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatVersionableValue();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FormatFileVersionURIReference.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatVersionableValue();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t FormatFileVersionURIReference.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v18 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v23 = *(void *)(v5 + 32);
  uint64_t v21 = type metadata accessor for FormatVersionableValue();
  v17[0] = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = (uint64_t)v17 - v7;
  type metadata accessor for FormatFileVersionURIReference.CodingKeys();
  swift_getWitnessTable();
  uint64_t v8 = sub_1C152083C();
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)v17 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  char v27 = 0;
  v17[1] = v6;
  uint64_t v11 = v10;
  type metadata accessor for FormatFileVersionURIReference.CodingType();
  swift_getWitnessTable();
  uint64_t v12 = v24;
  sub_1C152080C();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  }
  uint64_t v14 = (uint64_t)v18;
  uint64_t v15 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v18, v20, v3);
  uint64_t v16 = v21;
  FormatVersionableValue.init(value:versions:)(v14, *(void *)(v15 + *(int *)(v21 + 44)), v3, v22);
  char v26 = 1;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C152080C();
  (*(void (**)(uint64_t, uint64_t))(v17[0] + 8))(v22, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v8);
}

uint64_t sub_1C09BD8AC()
{
  uint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C09BD900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C09BD974(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C09BD9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C09BDA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C09BDAC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09BD8AC();
  *a1 = result;
  return result;
}

uint64_t sub_1C09BDAFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C004B538(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C09BDB34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09BD8AC();
  *a1 = result;
  return result;
}

uint64_t sub_1C09BDB68(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C09BDBBC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C09BDC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C09BDC84(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C09BDCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C09BDD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

void sub_1C09BDDD0(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1C09BDDF4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C09BDE58(void *a1, uint64_t a2)
{
  return FormatFileVersionURIReference.encode(to:)(a1, a2);
}

unsigned char *sub_1C09BDED4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09BDFA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C09BDFC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C09BDFE4()
{
  return swift_getWitnessTable();
}

uint64_t FormatStateViewNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeLayoutAttributes.stateLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateViewNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatStateViewNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 40);
}

unint64_t FormatStateViewNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 48);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatStateViewNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatStateViewNodeLayoutAttributes.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatStateViewNodeLayoutAttributes.isUserInteractionEnabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatStateViewNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeLayoutAttributes.__allocating_init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = *a3;
  uint64_t v16 = *a5;
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = v15;
  *(void *)(v14 + 40) = a4;
  *(void *)(v14 + 48) = v16;
  swift_beginAccess();
  *(unsigned char *)(v14 + 56) = a6;
  *(void *)(v14 + 64) = a7;
  return v14;
}

uint64_t FormatStateViewNodeLayoutAttributes.init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7)
{
  uint64_t v10 = *a3;
  uint64_t v11 = *a5;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = v11;
  swift_beginAccess();
  *(unsigned char *)(v7 + 56) = a6;
  *(void *)(v7 + 64) = a7;
  return v7;
}

double FormatStateViewNodeLayoutAttributes.frame.getter()
{
  return *(double *)(*(void *)(v0 + 16) + 16);
}

uint64_t FormatStateViewNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C09BE280(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x676E697A69736572;
      break;
    case 3:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 4:
      unint64_t result = 0x696C696269736976;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C09BE35C()
{
  return sub_1C09BE280(*v0);
}

uint64_t sub_1C09BE364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C09BF670(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C09BE38C(uint64_t a1)
{
  unint64_t v2 = sub_1C09BE808();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09BE3C8(uint64_t a1)
{
  unint64_t v2 = sub_1C09BE808();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatStateViewNodeLayoutAttributes.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 48));
  swift_release();
  return v0;
}

uint64_t FormatStateViewNodeLayoutAttributes.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 48));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FormatStateViewNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C09BEF08(0, &qword_1EA1A1CE0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09BE808();
  sub_1C1520F0C();
  uint64_t v14 = *(void *)(v3 + 16);
  LOBYTE(v12) = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFFD3E68(&qword_1EB88A8A8, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    LOBYTE(v12) = 1;
    sub_1C09BE85C();
    sub_1C09BE8C4();
    sub_1C152080C();
    uint64_t v14 = *(void *)(v3 + 32);
    LOBYTE(v12) = 2;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v14) = 3;
    sub_1C15207FC();
    uint64_t v14 = *(void *)(v3 + 48);
    LOBYTE(v12) = 4;
    sub_1C009DA10();
    sub_1C152080C();
    swift_beginAccess();
    if ((*(unsigned char *)(v3 + 56) & 1) == 0)
    {
      LOBYTE(v12) = 5;
      char v13 = 0;
      sub_1C09BE970();
      sub_1C1520BAC();
    }
    uint64_t v12 = *(void *)(v3 + 64);
    char v13 = 6;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFFD3E68(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C09BE808()
{
  unint64_t result = qword_1EA1A1CE8;
  if (!qword_1EA1A1CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CE8);
  }
  return result;
}

void sub_1C09BE85C()
{
  if (!qword_1EA1A1CF0)
  {
    type metadata accessor for FormatStateViewNodeStateLayoutAttributes();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A1CF0);
    }
  }
}

unint64_t sub_1C09BE8C4()
{
  unint64_t result = qword_1EA1A1CF8;
  if (!qword_1EA1A1CF8)
  {
    sub_1C09BE85C();
    sub_1BFFD3E68(&qword_1EA1A1D00, 255, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeStateLayoutAttributes);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1CF8);
  }
  return result;
}

unint64_t sub_1C09BE970()
{
  unint64_t result = qword_1EA1A1D08;
  if (!qword_1EA1A1D08)
  {
    sub_1C09BEF08(255, &qword_1EA1A1CE0, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D08);
  }
  return result;
}

uint64_t FormatStateViewNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatStateViewNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatStateViewNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C09BEF08(0, &qword_1EA1A1D10, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09BE808();
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    uint64_t v9 = (uint64_t)a1;
  }
  else
  {
    uint64_t v8 = v13;
    type metadata accessor for FormatLayoutAttributes();
    char v15 = 0;
    sub_1BFFD3E68(&qword_1EB88A8B0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    sub_1C15206EC();
    *(void *)(v1 + 16) = v16;
    sub_1C09BE85C();
    char v15 = 1;
    sub_1C09BEF6C();
    sub_1C15206EC();
    *(void *)(v1 + 24) = v16;
    char v15 = 2;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 32) = v16;
    LOBYTE(v16) = 3;
    v12[1] = 0;
    *(void *)(v1 + 40) = sub_1C15206DC();
    char v15 = 4;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 48) = v16;
    LOBYTE(v16) = 5;
    if (sub_1C152071C())
    {
      char v15 = 5;
      sub_1C15206EC();
      char v11 = v14;
    }
    else
    {
      char v11 = 1;
    }
    *(unsigned char *)(v1 + 56) = v11;
    type metadata accessor for FormatContextLayoutOptions();
    char v15 = 6;
    sub_1BFFD3E68(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v5);
    *(void *)(v1 + 64) = v16;
    uint64_t v9 = (uint64_t)a1;
  }
  __swift_destroy_boxed_opaque_existential_1(v9);
  return v1;
}

void sub_1C09BEF08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C09BE808();
    unint64_t v7 = a3(a1, &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C09BEF6C()
{
  unint64_t result = qword_1EA1A1D18;
  if (!qword_1EA1A1D18)
  {
    sub_1C09BE85C();
    sub_1BFFD3E68(&qword_1EA1A1D20, 255, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeStateLayoutAttributes);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D18);
  }
  return result;
}

uint64_t sub_1C09BF018@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatStateViewNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C09BF070(void *a1)
{
  return FormatStateViewNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C09BF094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatStateViewNodeLayoutAttributes.flipRightToLeft(bounds:)();
  *a1 = result;
  return result;
}

uint64_t FormatStateViewNodeLayoutAttributes.flipRightToLeft(bounds:)()
{
  uint64_t v1 = v0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFFD3E68(&qword_1EB88A8A0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C151798C();
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  unint64_t v4 = *(void *)(v1 + 48);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v10;
  *(void *)(v8 + 24) = v2;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v5;
  *(void *)(v8 + 48) = v4;
  swift_beginAccess();
  *(unsigned char *)(v8 + 56) = v6;
  *(void *)(v8 + 64) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v4);
  swift_retain();
  return v8;
}

uint64_t sub_1C09BF240(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E68(&qword_1EA1A1D28, a2, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatStateViewNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C09BF2AC(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E68(&qword_1EA1A1D30, a2, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes);
}

uint64_t sub_1C09BF2F4(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E68(&qword_1EA1A1D38, a2, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes);
}

uint64_t sub_1C09BF33C(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E68(&qword_1EA1A1D40, a2, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes);
}

uint64_t sub_1C09BF384@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 56);
  return result;
}

uint64_t sub_1C09BF3CC(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 56) = v2;
  return result;
}

uint64_t method lookup function for FormatStateViewNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatStateViewNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatStateViewNodeLayoutAttributes.__allocating_init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FormatStateViewNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unsigned char *storeEnumTagSinglePayload for FormatStateViewNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09BF530);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C09BF56C()
{
  unint64_t result = qword_1EA1A1D48;
  if (!qword_1EA1A1D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D48);
  }
  return result;
}

unint64_t sub_1C09BF5C4()
{
  unint64_t result = qword_1EA1A1D50;
  if (!qword_1EA1A1D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D50);
  }
  return result;
}

unint64_t sub_1C09BF61C()
{
  unint64_t result = qword_1EA1A1D58;
  if (!qword_1EA1A1D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D58);
  }
  return result;
}

uint64_t sub_1C09BF670(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C1608CE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C1610900 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void static FormatFlexibleExpression.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

NewsFeed::FormatFlexibleExpression __swiftcall FormatFlexibleExpression.init(direction:)(NewsFeed::FormatFlexibleExpression direction)
{
  *uint64_t v1 = *(unsigned char *)direction.direction.value;
  return direction;
}

uint64_t FormatFlexibleExpression.Direction.rawValue.getter()
{
  uint64_t v1 = 0x6C61636974726576;
  if (*v0 != 1) {
    uint64_t v1 = 0x746E6F7A69726F68;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74756F79616CLL;
  }
}

void FormatFlexibleExpression.direction.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C09BF9BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148E75C(*a1, *a2);
}

uint64_t sub_1C09BF9C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09BFA6C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09BFAFC()
{
  return sub_1C1520E0C();
}

void sub_1C09BFB9C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6C61636974726576;
  if (v2 != 1)
  {
    uint64_t v5 = 0x746E6F7A69726F68;
    unint64_t v4 = 0xEA00000000006C61;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x74756F79616CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t _s8NewsFeed24FormatFlexibleExpressionV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 3)
  {
    if (v3 == 3) {
      return 1;
    }
  }
  else if (v3 != 3)
  {
    if (*a1)
    {
      if (v2 == 1)
      {
        unint64_t v4 = 0xE800000000000000;
        uint64_t v5 = 0x6C61636974726576;
      }
      else
      {
        uint64_t v5 = 0x746E6F7A69726F68;
        unint64_t v4 = 0xEA00000000006C61;
      }
    }
    else
    {
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x74756F79616CLL;
    }
    unint64_t v6 = 0xE800000000000000;
    uint64_t v7 = 0x6C61636974726576;
    if (v3 != 1)
    {
      uint64_t v7 = 0x746E6F7A69726F68;
      unint64_t v6 = 0xEA00000000006C61;
    }
    if (*a2) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0x74756F79616CLL;
    }
    if (*a2) {
      unint64_t v9 = v6;
    }
    else {
      unint64_t v9 = 0xE600000000000000;
    }
    if (v5 == v8 && v4 == v9)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v11 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1C09BFD4C()
{
  unint64_t result = qword_1EA1A1D60;
  if (!qword_1EA1A1D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D60);
  }
  return result;
}

unint64_t sub_1C09BFDA0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C09BFDD0();
  unint64_t result = sub_1BFC483F4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C09BFDD0()
{
  unint64_t result = qword_1EA1A1D68;
  if (!qword_1EA1A1D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D68);
  }
  return result;
}

unint64_t sub_1C09BFE24(uint64_t a1)
{
  unint64_t result = sub_1C09BFE4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09BFE4C()
{
  unint64_t result = qword_1EA1A1D70;
  if (!qword_1EA1A1D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D70);
  }
  return result;
}

uint64_t sub_1C09BFEA0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C09BFF9C(a1, a2, a3, (uint64_t (*)(void))sub_1BFCAC568, (uint64_t (*)(void))sub_1C0071600, (uint64_t (*)(void))sub_1C09BFD4C);
}

unint64_t sub_1C09BFEE0(uint64_t a1)
{
  unint64_t result = sub_1C09BFF08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09BFF08()
{
  unint64_t result = qword_1EA1A1D78;
  if (!qword_1EA1A1D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D78);
  }
  return result;
}

uint64_t sub_1C09BFF5C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C09BFF9C(a1, a2, a3, (uint64_t (*)(void))sub_1BFE663CC, (uint64_t (*)(void))sub_1C0071594, (uint64_t (*)(void))sub_1C09BFFF0);
}

uint64_t sub_1C09BFF9C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09BFFF0()
{
  unint64_t result = qword_1EA1A1D80;
  if (!qword_1EA1A1D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1D80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFlexibleExpression(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  if (*a1 <= 3u) {
    int v6 = 3;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 4;
  if (*a1 < 3u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FormatFlexibleExpression()
{
  return &type metadata for FormatFlexibleExpression;
}

ValueMetadata *type metadata accessor for FormatFlexibleExpression.Direction()
{
  return &type metadata for FormatFlexibleExpression.Direction;
}

void sub_1C09C0154(uint64_t a1)
{
  int v3 = sub_1C12A0810();
  FormatContentSizeCategory.groupLayoutContentSizeCategory.getter((uint64_t)&v11);
  int v4 = v11;
  unsigned __int8 v5 = v12;
  type metadata accessor for GroupLayoutFactoryValidator();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v4;
  *(unsigned char *)(inited + 32) = v5;
  sub_1BFFFC7A0(v4, v5);
  int v7 = (void *)sub_1C15176CC();
  char v8 = sub_1BFFFB824();

  sub_1BFFFC630(v4, v5);
  if (v8)
  {
    sub_1BFFFBAF8(a1);
    if (!v1)
    {
      swift_bridgeObjectRelease();
      sub_1BFFFC630(v4, v5);
      return;
    }
  }
  else
  {
    sub_1C0020AF0();
    swift_allocError();
    uint64_t v10 = v9;
    *unint64_t v9 = sub_1C15176CC();
    *((unsigned char *)v10 + 40) = 1;
    swift_willThrow();
  }
  swift_release();
}

void *sub_1C09C0294(uint64_t a1)
{
  uint64_t v11 = a1;
  uint64_t v10 = sub_1C151F55C();
  uint64_t v2 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151F52C();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v6 - 8);
  v9[1] = sub_1BFE4597C();
  sub_1C151E1CC();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1BFDE8D84((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  int v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1BFDE8F6C(0, (unint64_t *)&unk_1EB879FB0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1BFD011F4((unint64_t *)&qword_1EB879FC0, (unint64_t *)&unk_1EB879FB0, v7);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v10);
  v1[3] = sub_1C151F5AC();
  char v12 = 0;
  sub_1C09C5920(0, (unint64_t *)&qword_1EB87C798, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB060]);
  swift_allocObject();
  v1[4] = sub_1C1518E9C();
  v1[2] = v11;
  return v1;
}

uint64_t sub_1C09C0564(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v7 = sub_1C151E16C();
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151E1DC();
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v28 = v10;
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for GroupLayoutContext();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  memcpy(v32, a1, 0x150uLL);
  uint64_t v26 = *(void *)(v4 + 24);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  sub_1BFF1EBE0(a2, (uint64_t)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 360) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  memcpy((void *)(v18 + 24), v32, 0x150uLL);
  sub_1C09C5674((uint64_t)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  uint64_t v19 = (void *)(v18 + ((v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v20 = v25;
  *uint64_t v19 = v24;
  v19[1] = v20;
  v31[4] = sub_1C09C3EB4;
  v31[5] = v18;
  v31[0] = MEMORY[0x1E4F143A8];
  v31[1] = 1107296256;
  v31[2] = sub_1BFC9FC68;
  v31[3] = &block_descriptor_35;
  uint64_t v21 = _Block_copy(v31);
  swift_retain();
  sub_1C09C3F4C((uint64_t)v32);
  swift_retain();
  sub_1C151E19C();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1BFDE8D84((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1BFDE8F6C(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1BFD011F4((unint64_t *)&qword_1EB879C80, (unint64_t *)&qword_1EB879C70, v22);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v12, v9, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  swift_release();
  return swift_release();
}

uint64_t sub_1C09C0988(uint64_t a1, const void *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    memcpy(__dst, a2, sizeof(__dst));
    swift_retain();
    swift_retain();
    sub_1C09C48B4(__dst, a3, v11, a1, a4, a5);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C09C0A54(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a4;
  int v23 = a2;
  uint64_t v7 = sub_1C151E16C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1C151E1DC();
  uint64_t v11 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE4597C();
  uint64_t v24 = sub_1C151F56C();
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v22;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v16;
  *(void *)(v15 + 32) = a5;
  *(void *)(v15 + 40) = a1;
  *(unsigned char *)(v15 + 48) = v23;
  aBlock[4] = sub_1C09C5910;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_14;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1C151E19C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1BFDE8D84((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1BFDE8F6C(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1BFD011F4((unint64_t *)&qword_1EB879C80, (unint64_t *)&qword_1EB879C70, v18);
  sub_1C151FFBC();
  uint64_t v19 = (void *)v24;
  MEMORY[0x1C18C70C0](0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_1C09C0DC4(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

unint64_t sub_1C09C0E48()
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  if (v1 == 1)
  {
    unint64_t v2 = 0xD000000000000015;
    swift_retain();
    sub_1C151709C();
    swift_release();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
  }
  else
  {
    unint64_t v2 = 0x7420656C676E6953;
    swift_retain();
    sub_1C151709C();
    swift_release();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_retain();
    sub_1C151709C();
    swift_release();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1C09C1058(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7, void (*a8)(void *, uint64_t), uint64_t a9, void **a10)
{
  uint64_t v99 = a8;
  uint64_t v106 = a6;
  uint64_t v107 = a7;
  uint64_t v108 = a4;
  int v85 = a3;
  uint64_t v97 = a1;
  uint64_t v100 = a10;
  uint64_t v98 = a9;
  uint64_t v123 = *MEMORY[0x1E4F143B8];
  uint64_t v101 = a5;
  sub_1C09C54B4((uint64_t)a5, (uint64_t)v120);
  sub_1C09C54B4((uint64_t)v120, (uint64_t)v122);
  uint64_t v11 = type metadata accessor for DebugFormatTestSuiteResultItem();
  uint64_t v96 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v95 = &v84[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v94 = &v84[-v14];
  uint64_t v15 = type metadata accessor for DebugFormatTestCaseResult(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = &v84[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = &v84[-v20];
  MEMORY[0x1F4188790](v22);
  uint64_t v93 = &v84[-v23];
  double v24 = CACurrentMediaTime();
  uint64_t v92 = *(void *)(a2 + 16);
  if (v92)
  {
    uint64_t v91 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    long long v90 = xmmword_1C1529AE0;
    uint64_t v104 = a2;
    unint64_t v105 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v26 = *(void *)(v91 + 8 * v25);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C1518EBC();
      swift_release();
      if (v111) {
        break;
      }
      sub_1C09C54B4((uint64_t)v101, (uint64_t)v121);
      int v27 = sub_1C09C56DC((uint64_t)v121);
      uint64_t v28 = (_OWORD *)sub_1C09C56E8((uint64_t)v121);
      uint64_t v102 = v25;
      if (v27 == 1)
      {
        uint64_t v29 = *(void *)(*(void *)v28 + 16);
        if (v29)
        {
          uint64_t v30 = (_OWORD *)(*(void *)v28 + 32);
          sub_1C09C54B4((uint64_t)v122, (uint64_t)&v111);
          sub_1C09C56E8((uint64_t)&v111);
          swift_bridgeObjectRetain();
          uint64_t v31 = v29 - 1;
          uint64_t v32 = MEMORY[0x1E4FBC860];
          while (1)
          {
            v110[0] = *v30;
            long long v33 = v30[1];
            long long v34 = v30[2];
            long long v35 = v30[4];
            v110[3] = v30[3];
            v110[4] = v35;
            v110[1] = v33;
            v110[2] = v34;
            long long v36 = v30[5];
            long long v37 = v30[6];
            long long v38 = v30[8];
            v110[7] = v30[7];
            v110[8] = v38;
            v110[5] = v36;
            v110[6] = v37;
            long long v39 = v30[7];
            v109[6] = v30[6];
            v109[7] = v39;
            v109[8] = v30[8];
            long long v40 = v30[3];
            v109[2] = v30[2];
            v109[3] = v40;
            long long v41 = v30[5];
            v109[4] = v30[4];
            v109[5] = v41;
            long long v42 = v30[1];
            v109[0] = *v30;
            v109[1] = v42;
            sub_1C0187D08((uint64_t)v110);
            sub_1C09C1AD8(v26, v109, v106, v107, (uint64_t)v21);
            sub_1C0187DF4((uint64_t)v110);
            sub_1BFF1EBE0((uint64_t)v21, (uint64_t)v18, type metadata accessor for DebugFormatTestCaseResult);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v32 = sub_1C0EE687C(0, *(void *)(v32 + 16) + 1, 1, v32);
            }
            unint64_t v44 = *(void *)(v32 + 16);
            unint64_t v43 = *(void *)(v32 + 24);
            if (v44 >= v43 >> 1) {
              uint64_t v32 = sub_1C0EE687C(v43 > 1, v44 + 1, 1, v32);
            }
            *(void *)(v32 + 16) = v44 + 1;
            sub_1C09C5674((uint64_t)v18, v32+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v44, type metadata accessor for DebugFormatTestCaseResult);
            sub_1C09C580C((uint64_t)v21, type metadata accessor for DebugFormatTestCaseResult);
            if (!v31) {
              break;
            }
            --v31;
            v30 += 9;
          }
          sub_1C09C56F8(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C09C5588);
        }
        else
        {
          uint64_t v32 = MEMORY[0x1E4FBC860];
        }
        sub_1C14474DC(v26, v32, (uint64_t)&v111);
        long long v55 = v111;
        char v56 = v112;
        uint64_t v57 = *((void *)&v112 + 1);
        id v87 = (id)*((void *)&v112 + 1);
        char v58 = v113;
        uint64_t v59 = (void *)*((void *)&v113 + 1);
        uint64_t v60 = v95;
        _OWORD *v95 = v111;
        *((unsigned char *)v60 + 16) = v56;
        *((void *)v60 + 3) = v57;
        *((unsigned char *)v60 + 32) = v58;
        *((void *)v60 + 5) = v59;
        uint64_t v61 = type metadata accessor for DebugFormatTestSuiteScopeResult();
        swift_storeEnumTagMultiPayload();
        uint64_t v62 = *(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
        uint64_t v103 = v61;
        v62(v60, 0, 1, v61);
        uint64_t v89 = v55;
        swift_bridgeObjectRetain();
        uint64_t v88 = *((void *)&v55 + 1);
        swift_bridgeObjectRetain();
        id v86 = v87;
        id v87 = v59;
        swift_bridgeObjectRetain();
        unint64_t v53 = v105;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v53 = sub_1C0EE6834(0, *(void *)(v53 + 16) + 1, 1, v53);
        }
        unint64_t v64 = *(void *)(v53 + 16);
        unint64_t v63 = *(void *)(v53 + 24);
        if (v64 >= v63 >> 1) {
          unint64_t v53 = sub_1C0EE6834(v63 > 1, v64 + 1, 1, v53);
        }
        *(void *)(v53 + 16) = v64 + 1;
        unint64_t v54 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
        sub_1C09C5674((uint64_t)v95, v53 + v54 + *(void *)(v96 + 72) * v64, (uint64_t (*)(void))type metadata accessor for DebugFormatTestSuiteResultItem);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v116 = v28[5];
        long long v117 = v28[6];
        long long v118 = v28[7];
        long long v119 = v28[8];
        long long v112 = v28[1];
        long long v113 = v28[2];
        long long v114 = v28[3];
        long long v115 = v28[4];
        long long v111 = *v28;
        long long v45 = v93;
        sub_1C09C1AD8(v26, &v111, v106, v107, (uint64_t)v93);
        swift_bridgeObjectRelease();
        uint64_t v46 = v94;
        sub_1BFF1EBE0((uint64_t)v45, (uint64_t)v94, type metadata accessor for DebugFormatTestCaseResult);
        uint64_t v47 = type metadata accessor for DebugFormatTestSuiteScopeResult();
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
        uint64_t v103 = v47;
        v48(v46, 0, 1, v47);
        unint64_t v49 = v105;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v49 = sub_1C0EE6834(0, *(void *)(v49 + 16) + 1, 1, v49);
        }
        unint64_t v51 = *(void *)(v49 + 16);
        unint64_t v50 = *(void *)(v49 + 24);
        uint64_t v52 = v49;
        if (v51 >= v50 >> 1) {
          uint64_t v52 = sub_1C0EE6834(v50 > 1, v51 + 1, 1, v49);
        }
        unint64_t v53 = v52;
        *(void *)(v52 + 16) = v51 + 1;
        unint64_t v54 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
        sub_1C09C5674((uint64_t)v94, v52 + v54 + *(void *)(v96 + 72) * v51, (uint64_t (*)(void))type metadata accessor for DebugFormatTestSuiteResultItem);
        sub_1C09C580C((uint64_t)v93, type metadata accessor for DebugFormatTestCaseResult);
      }
      sub_1BFDE8F6C(0, (unint64_t *)&unk_1EA1A8740, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatTestSuiteResultItem, MEMORY[0x1E4FBBE00]);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v90;
      type metadata accessor for DebugFormatTestSuiteScopeResult();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v65 + v54, 1, 1);
      *(void *)&long long v111 = v53;
      swift_bridgeObjectRetain();
      unint64_t v105 = v53;
      swift_bridgeObjectRetain();
      sub_1C104AAEC(v65);
      uint64_t v66 = v111;
      uint64_t v67 = *v100;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v68 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v68 = sub_1C0EE680C(0, v67[2] + 1, 1, v67);
      }
      unint64_t v70 = v68[2];
      unint64_t v69 = v68[3];
      if (v70 >= v69 >> 1) {
        uint64_t v68 = sub_1C0EE680C((void *)(v69 > 1), v70 + 1, 1, v68);
      }
      uint64_t v25 = v102 + 1;
      v68[2] = v70 + 1;
      uint64_t v71 = &v68[5 * v70];
      a2 = v104;
      v71[4] = v97;
      v71[5] = a2;
      v71[6] = v66;
      v71[7] = 0;
      *((unsigned char *)v71 + 64) = 65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v99(v68, 0);
      swift_bridgeObjectRelease();
      if (v25 == v92)
      {
        swift_bridgeObjectRelease();
        unint64_t v72 = v105;
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v72 = MEMORY[0x1E4FBC860];
LABEL_33:
    swift_bridgeObjectRetain();
    double v73 = CACurrentMediaTime() - v24;
    uint64_t v74 = v100;
    char v75 = *v100;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v74 = v75;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v75 = sub_1C0EE680C(0, v75[2] + 1, 1, v75);
      *uint64_t v100 = v75;
    }
    double v77 = v73 * 1000.0;
    unint64_t v79 = v75[2];
    unint64_t v78 = v75[3];
    if (v79 >= v78 >> 1)
    {
      char v75 = sub_1C0EE680C((void *)(v78 > 1), v79 + 1, 1, v75);
      *uint64_t v100 = v75;
    }
    v75[2] = v79 + 1;
    uint64_t v80 = (double *)&v75[5 * v79];
    *((void *)v80 + 4) = v97;
    *((void *)v80 + 5) = a2;
    *((void *)v80 + 6) = v72;
    v80[7] = v77;
    *((unsigned char *)v80 + 64) = 64;
    uint64_t v81 = v85 & 1;
    if (v85) {
      uint64_t v82 = (void *)MEMORY[0x1E4FBC860];
    }
    else {
      uint64_t v82 = &unk_1F1B89670;
    }
    *(void *)&long long v111 = *v100;
    swift_bridgeObjectRetain();
    sub_1C104A98C((uint64_t)v82);
    v99((void *)v111, v81);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09C1AD8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v126 = a4;
  uint64_t v129 = a1;
  uint64_t v130 = a3;
  uint64_t v118 = a5;
  uint64_t v117 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v117);
  uint64_t v119 = (uint64_t)v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v110);
  uint64_t v111 = (uint64_t)v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1C151757C();
  uint64_t v109 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v108 = (uint64_t (*)(uint64_t))((char *)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1C151772C();
  uint64_t v112 = *(void *)(v11 - 8);
  uint64_t v113 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v107 = (char *)v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151787C();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v125 = (char *)v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C1517ADC();
  uint64_t v123 = *(void *)(v15 - 8);
  uint64_t v124 = v15;
  MEMORY[0x1F4188790](v15);
  long long v122 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C151928C();
  uint64_t v120 = *(void **)(v17 - 8);
  uint64_t v121 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v127 = (uint64_t)v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  int v27 = (char *)v105 - v26;
  uint64_t v28 = sub_1C151E24C();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (uint64_t *)((char *)v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v32 = a2[7];
  long long v163 = a2[6];
  long long v164 = v32;
  long long v165 = a2[8];
  long long v33 = a2[3];
  long long v159 = a2[2];
  long long v160 = v33;
  long long v34 = a2[5];
  long long v161 = a2[4];
  long long v162 = v34;
  long long v35 = a2[1];
  long long v157 = *a2;
  long long v158 = v35;
  long long v36 = *(void **)(v5 + 24);
  *uint64_t v31 = v36;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x1E4FBCBF0], v28);
  id v37 = v36;
  uint64_t v38 = sub_1C151E26C();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if ((v38 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  double v6 = CACurrentMediaTime();
  long long v146 = v163;
  long long v147 = v164;
  long long v148 = v165;
  long long v142 = v159;
  long long v143 = v160;
  long long v144 = v161;
  long long v145 = v162;
  uint64_t v31 = *(void **)(v5 + 16);
  uint64_t v39 = (uint64_t)v31 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindings;
  long long v140 = v157;
  long long v141 = v158;
  swift_beginAccess();
  v105[1] = v39;
  sub_1C0187D08((uint64_t)&v157);
  uint64_t v40 = v129;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  v105[0] = (uint64_t)(v27 + 8);
  sub_1BFC66384((uint64_t)(v27 + 8), (uint64_t)&v131);
  uint64_t v106 = v27;
  sub_1C09C580C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v41 = v133;
  long long v42 = v134;
  __swift_project_boxed_opaque_existential_1(&v131, v133);
  uint64_t v43 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v42[3])(v41, v42);
  uint64_t v116 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutOrder;
  swift_retain();
  sub_1C151709C();
  swift_release();
  v156[0] = v137[0];
  uint64_t v38 = type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  uint64_t v128 = sub_1C104EB74(&v140, v40, v43, (char *)v156);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v131);
  sub_1C0187D08((uint64_t)&v157);
  swift_retain();
  uint64_t v115 = sub_1C0D273B8();
  if (qword_1EA1943D0 != -1) {
LABEL_5:
  }
    swift_once();
  uint64_t v44 = qword_1EA2B4EF0;
  uint64_t v133 = type metadata accessor for DebugFormatLogger();
  uint64_t v134 = &off_1F1B94598;
  *(void *)&long long v131 = v44;
  uint64_t v45 = *(void *)((char *)v31 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_defaultSystemFactory);
  swift_weakInit();
  swift_weakAssign();
  sub_1C09C575C((uint64_t)v137, (uint64_t)&v140);
  swift_retain();
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C037C124((uint64_t)v19);
  sub_1C09C580C((uint64_t)v22, type metadata accessor for FormatVersioningModeSelection);
  uint64_t v46 = sub_1C09C416C((uint64_t)&v140, (uint64_t)v19, v45);
  ((void (*)(char *, uint64_t))v120[1])(v19, v121);
  sub_1C09C57B8((uint64_t)&v140);
  uint64_t v47 = type metadata accessor for FeedLayoutTracker();
  uint64_t v48 = swift_allocObject();
  v151[10] = &off_1F1B9A710;
  v151[9] = v47;
  v151[6] = v48;
  uint64_t v49 = qword_1EA2B4EF0;
  type metadata accessor for FormatOptionConverter();
  unint64_t v50 = (void *)swift_allocObject();
  uint64_t v51 = (uint64_t)v130;
  swift_retain();
  swift_retain();
  uint64_t v52 = sub_1C0186C60(v51, v49, v50);
  long long v146 = v163;
  long long v147 = v164;
  long long v148 = v165;
  long long v142 = v159;
  long long v143 = v160;
  long long v144 = v161;
  long long v145 = v162;
  long long v140 = v157;
  long long v141 = v158;
  uint64_t v149 = v51;
  uint64_t v150 = v115;
  sub_1BFC773DC(&v131, (uint64_t)v151);
  v151[5] = v46;
  v151[11] = v52;
  long long v152 = xmmword_1C1582FC0;
  uint64_t v155 = 0;
  uint64_t v153 = 0;
  uint64_t v154 = 0;
  uint64_t v133 = v38;
  uint64_t v134 = (_UNKNOWN **)sub_1BFDE8D84((unint64_t *)&qword_1EB885A20, (void (*)(uint64_t))type metadata accessor for FeedGroupRegion);
  *(void *)&long long v131 = v128;
  swift_retain();
  unint64_t v53 = sub_1BFE5CE10(MEMORY[0x1E4FBC860]);
  swift_retain();
  sub_1C151709C();
  swift_release();
  LOBYTE(v52) = v137[0];
  uint64_t v54 = (uint64_t)v31;
  uint64_t v55 = type metadata accessor for GroupLayoutContext();
  uint64_t v56 = v126;
  uint64_t v57 = v126 + *(int *)(v55 + 20);
  char v58 = v122;
  sub_1C151752C();
  uint64_t v59 = (uint64_t)v125;
  sub_1C1517AAC();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v58, v124);
  swift_retain();
  sub_1C151709C();
  swift_release();
  v156[0] = v137[0];
  uint64_t v60 = v56;
  unint64_t v61 = sub_1C018E004(MEMORY[0x1E4FBC860]);
  uint64_t v62 = v127;
  sub_1BFE9F050(&v131, v53, (char)v52, v59, v156, v61, v127);
  sub_1C09C0154(v60);
  uint64_t v63 = v57;
  uint64_t v125 = (char *)v55;
  sub_1BFFCDE30(v62, v60, v137);
  uint64_t v64 = v138;
  uint64_t v65 = v139;
  __swift_project_boxed_opaque_existential_1(v137, v138);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v65 + 32))(&v131, v64, v65);
  LODWORD(v124) = v131;
  uint64_t v66 = *((void *)&v131 + 1);
  uint64_t v67 = v132;
  uint64_t v68 = v133;
  uint64_t v69 = (uint64_t)v134;
  long long v122 = v136;
  uint64_t v123 = v135;
  swift_retain();
  uint64_t v121 = 0;
  uint64_t v70 = (uint64_t)v106;
  sub_1C151894C();
  swift_release();
  sub_1BFC66384(v105[0], (uint64_t)&v131);
  sub_1C09C580C(v70, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v72 = v133;
  uint64_t v71 = v134;
  __swift_project_boxed_opaque_existential_1(&v131, v133);
  uint64_t v73 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v71[3])(v72, v71);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v131);
  sub_1C09C5920(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1C15320E0;
  *(void *)(v74 + 32) = v130;
  *(void *)&long long v131 = v74;
  sub_1C151EBEC();
  uint64_t v75 = v131;
  swift_retain();
  swift_retain();
  uint64_t v76 = (void *)sub_1C144AAEC(v75, v73, v54);
  swift_release();
  uint64_t v77 = (uint64_t)v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v107, v60, v113);
  unint64_t v79 = v108;
  uint64_t v78 = v109;
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(v109 + 16))(v108, v63, v114);
  LOBYTE(v70) = *(unsigned char *)(v60 + *((int *)v125 + 11));
  uint64_t v125 = *(char **)(v128 + 256);
  unint64_t v80 = v76[16];
  LOBYTE(v131) = v70;
  uint64_t v81 = v76[20];
  uint64_t v82 = v76[21];
  uint64_t v83 = __swift_project_boxed_opaque_existential_1(v76 + 17, v81);
  uint64_t v84 = sub_1C0F1E0A4(v77, v79, (unsigned __int8 *)&v131, (uint64_t)v83, v80, v81, v82);
  uint64_t v130 = v105;
  unint64_t v85 = v76[2];
  MEMORY[0x1F4188790](v84);
  v105[-10] = (uint64_t)v79;
  v105[-9] = (uint64_t)v76;
  uint64_t v120 = v76;
  uint64_t v86 = (uint64_t)v125;
  v105[-8] = v87;
  v105[-7] = v86;
  v105[-6] = v77;
  LOBYTE(v105[-5]) = v70;
  uint64_t v88 = v122;
  v105[-4] = v66;
  v105[-3] = v67;
  v105[-2] = v68;
  v105[-1] = v69;
  swift_bridgeObjectRetain();
  uint64_t v89 = v123;
  uint64_t v90 = sub_1BFFC2D44((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BFFC3408, (uint64_t)&v105[-12], v85);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(v78 + 8))(v79, v114);
  uint64_t v91 = v127;
  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v77, v113);
  uint64_t v92 = v111;
  sub_1BFC66384((uint64_t)v137, v111);
  uint64_t v93 = (int *)v110;
  sub_1BFF1EBE0(v126, v92 + *(int *)(v110 + 20), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFF1EBE0(v91, v92 + v93[6], (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v94 = v92 + v93[7];
  *(unsigned char *)uint64_t v94 = v124;
  *(void *)(v94 + 8) = v66;
  *(void *)(v94 + 16) = v67;
  *(void *)(v94 + 24) = v68;
  *(void *)(v94 + 32) = v69;
  *(void *)(v94 + 40) = v89;
  *(void *)(v94 + 48) = v88;
  *(void *)(v92 + v93[8]) = v90;
  uint64_t v95 = v119;
  sub_1BFF1EBE0(v92, v119, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
  swift_storeEnumTagMultiPayload();
  sub_1C0187D08((uint64_t)&v157);
  uint64_t v96 = v129;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v97 = CACurrentMediaTime();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C09C580C(v92, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
  sub_1C09C580C(v91, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1BFFD07D8((uint64_t)&v140);
  long long v98 = v164;
  uint64_t v99 = v118;
  *(_OWORD *)(v118 + 96) = v163;
  *(_OWORD *)(v99 + 112) = v98;
  *(_OWORD *)(v99 + 128) = v165;
  long long v100 = v160;
  *(_OWORD *)(v99 + 32) = v159;
  *(_OWORD *)(v99 + 48) = v100;
  long long v101 = v162;
  *(_OWORD *)(v99 + 64) = v161;
  *(_OWORD *)(v99 + 80) = v101;
  long long v102 = v158;
  *(_OWORD *)uint64_t v99 = v157;
  *(_OWORD *)(v99 + 16) = v102;
  *(void *)(v99 + 144) = v96;
  uint64_t v103 = type metadata accessor for DebugFormatTestCaseResult(0);
  sub_1C09C5674(v95, v99 + *(int *)(v103 + 24), type metadata accessor for DebugFormatTestCaseResult.Result);
  *(double *)(v99 + *(int *)(v103 + 28)) = (v97 - v6) * 1000.0;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v137);
}

uint64_t sub_1C09C2A48(uint64_t a1, void (*a2)(uint64_t, void *, BOOL), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  double v6 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (_WORD *)((char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFDE8F6C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (char *)v57 - v10;
  uint64_t v11 = type metadata accessor for FeedItem(0);
  uint64_t v68 = *(void *)(v11 - 8);
  uint64_t v69 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v67 = (uint64_t)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151E24C();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (void *)((char *)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v4 + 24);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t, __n128))(v14 + 104))(v17, *MEMORY[0x1E4FBCBF0], v13, v15);
  id v19 = v18;
  LOBYTE(v18) = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v17, v13);
  if ((v18 & 1) == 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v21 = *(void **)(v4 + 16);
  swift_retain();
  sub_1C151709C();
  uint64_t result = swift_release();
  uint64_t v63 = a1;
  uint64_t v22 = v4;
  if (v72 != 1) {
    goto LABEL_5;
  }
  if (a1 < 1)
  {
LABEL_50:
    __break(1u);
    return result;
  }
  uint64_t v63 = 1;
LABEL_5:
  uint64_t v59 = a1;
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v62 = v4;
  if (v76 == 1)
  {
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v23 = v59;
    while (1)
    {
      swift_retain();
      sub_1C1518EBC();
      uint64_t result = swift_release();
      if (v72) {
        break;
      }
      uint64_t v24 = v63;
      uint64_t v72 = v21;
      sub_1C09C3608(&v72, v21, v63);
      uint64_t v22 = v62;
      v60(v24, v72, v23 == v24);
      uint64_t result = swift_bridgeObjectRelease();
      if (v23 == v24) {
        break;
      }
      BOOL v25 = __OFADD__(v63++, 1);
      if (v25)
      {
        __break(1u);
        goto LABEL_12;
      }
    }
  }
  else
  {
LABEL_12:
    uint64_t v58 = 0;
    v57[0] = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testSubject;
    uint64_t v65 = v63;
    v57[1] = v21;
    while (1)
    {
      swift_retain();
      sub_1C1518EBC();
      uint64_t result = swift_release();
      if (v72) {
        break;
      }
      if (v63 < 1)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      swift_retain();
      uint64_t v26 = v22;
      uint64_t v27 = v58;
      sub_1C09C438C(1, v65, v26);
      uint64_t v29 = v28;
      uint64_t v58 = v27;
      uint64_t v22 = v62;
      swift_release();
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1C0EE67F8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v32 = v30[2];
      unint64_t v31 = v30[3];
      if (v32 >= v31 >> 1) {
        uint64_t v30 = sub_1C0EE67F8((void *)(v31 > 1), v32 + 1, 1, v30);
      }
      v30[2] = v32 + 1;
      v30[v32 + 4] = v29;
      swift_retain();
      sub_1C151709C();
      swift_release();
      if (v72 == 2)
      {
        int64_t v33 = 1;
        uint64_t v64 = v29;
LABEL_19:
        uint64_t v66 = v30;
        uint64_t v75 = (void *)MEMORY[0x1E4FBC860];
        uint64_t result = sub_1C05F7878(0, v33, 0);
        BOOL v34 = 0;
        long long v35 = v75;
        int64_t v36 = v33;
        uint64_t v37 = 1;
        while (1)
        {
          if (v34) {
            goto LABEL_48;
          }
          id v38 = sub_1C11A24DC();
          uint64_t v39 = sub_1C151D2DC();
          uint64_t v40 = (uint64_t)v70;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v70, 1, 1, v39);
          uint64_t v74 = 0;
          uint64_t v72 = 0;
          char v73 = 1;
          char v71 = 0;
          uint64_t v41 = (char *)v8 + v6[6];
          uint64_t v42 = type metadata accessor for SharedItem();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
          *uint64_t v8 = 258;
          *((unsigned char *)v8 + v6[7]) = 1;
          *((unsigned char *)v8 + v6[8]) = 0;
          *((unsigned char *)v8 + v6[9]) = 0;
          *((unsigned char *)v8 + v6[10]) = 0;
          uint64_t v43 = v67;
          FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v38, 0, &v71, v40, (uint64_t)v8, &v74, v67, (uint64_t)&v72);
          swift_storeEnumTagMultiPayload();
          uint64_t v75 = v35;
          unint64_t v45 = v35[2];
          unint64_t v44 = v35[3];
          if (v45 >= v44 >> 1)
          {
            sub_1C05F7878(v44 > 1, v45 + 1, 1);
            long long v35 = v75;
          }
          v35[2] = v45 + 1;
          unint64_t v46 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
          uint64_t result = sub_1C09C5674(v43, (uint64_t)v35 + v46 + *(void *)(v68 + 72) * v45, type metadata accessor for FeedItem);
          BOOL v34 = v37 == v33;
          if (v37 == v33)
          {
            uint64_t v37 = 0;
          }
          else
          {
            BOOL v25 = __OFADD__(v37++, 1);
            if (v25)
            {
              __break(1u);
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
          }
          if (!--v36)
          {
            int64_t v47 = *(void *)(v64 + 16);
            if (v47 >= v33) {
              uint64_t v48 = v33;
            }
            else {
              uint64_t v48 = *(void *)(v64 + 16);
            }
            uint64_t v49 = v64 + v46;
            unint64_t v50 = (2 * v47) | 1;
            uint64_t v72 = v35;
            unint64_t v51 = swift_bridgeObjectRetain();
            uint64_t result = sub_1C104A300(v51, v49, v48, v50);
            uint64_t v52 = v72;
            uint64_t v30 = v66;
            unint64_t v54 = v66[2];
            unint64_t v53 = v66[3];
            if (v54 >= v53 >> 1)
            {
              uint64_t result = (uint64_t)sub_1C0EE67F8((void *)(v53 > 1), v54 + 1, 1, v66);
              uint64_t v30 = (void *)result;
            }
            v30[2] = v54 + 1;
            v30[v54 + 4] = v52;
            if (v33 == v65)
            {
              swift_bridgeObjectRelease();
              uint64_t v22 = v62;
              goto LABEL_40;
            }
            BOOL v25 = __OFADD__(v33++, 1);
            if (!v25) {
              goto LABEL_19;
            }
            goto LABEL_45;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_40:
      uint64_t v55 = v59;
      uint64_t v56 = v65;
      v60(v65, v30, v65 == v59);
      uint64_t result = swift_bridgeObjectRelease();
      if (v56 == v55) {
        return result;
      }
      BOOL v25 = __OFADD__(v65++, 1);
      if (v25) {
        goto LABEL_47;
      }
    }
  }
  return result;
}

uint64_t sub_1C09C31E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v3 = (int *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFDE8F6C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v14[-v7];
  id v9 = sub_1C11A24DC();
  uint64_t v10 = sub_1C151D2DC();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v18 = 0;
  uint64_t v16 = 0;
  char v17 = 1;
  char v15 = 0;
  uint64_t v11 = (char *)v5 + v3[8];
  uint64_t v12 = type metadata accessor for SharedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *uint64_t v5 = 258;
  *((unsigned char *)v5 + v3[9]) = 1;
  *((unsigned char *)v5 + v3[10]) = 0;
  *((unsigned char *)v5 + v3[11]) = 0;
  *((unsigned char *)v5 + v3[12]) = 0;
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v9, 0, &v15, (uint64_t)v8, (uint64_t)v5, &v18, a1, (uint64_t)&v16);
  type metadata accessor for FeedItem(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C09C33F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v3 = (int *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFDE8F6C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v14[-v7];
  id v9 = sub_1C11A20B8();
  uint64_t v10 = sub_1C151D2DC();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v18 = 0;
  uint64_t v16 = 0;
  char v17 = 1;
  char v15 = 0;
  uint64_t v11 = (char *)v5 + v3[8];
  uint64_t v12 = type metadata accessor for SharedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *uint64_t v5 = 258;
  *((unsigned char *)v5 + v3[9]) = 1;
  *((unsigned char *)v5 + v3[10]) = 0;
  *((unsigned char *)v5 + v3[11]) = 0;
  *((unsigned char *)v5 + v3[12]) = 0;
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v9, 0, &v15, (uint64_t)v8, (uint64_t)v5, &v18, a1, (uint64_t)&v16);
  type metadata accessor for FeedItem(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C09C3608(void **a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = (void *)sub_1C151E24C();
  uint64_t v9 = *(v8 - 1);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v4 + 24);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, void *, __n128))(v9 + 104))(v12, *MEMORY[0x1E4FBCBF0], v8, v10);
  id v14 = v13;
  LOBYTE(v13) = sub_1C151E26C();
  (*(void (**)(void *, void *))(v9 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_retain();
  sub_1C1518EBC();
  uint64_t result = swift_release();
  if ((v34 & 1) != 0 || a2[2] >= a3) {
    return result;
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (v34 != 1)
  {
    sub_1BFDE8F6C(0, &qword_1EB861B10, type metadata accessor for FeedItem, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = *(void *)(type metadata accessor for FeedItem(0) - 8);
    unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
    sub_1C09C33F8(v18 + v17);
    BOOL v34 = a2;
    swift_bridgeObjectRetain();
    sub_1C104A2D4(v18);
    uint64_t v12 = v34;
    if (v34[2] != a3)
    {
LABEL_10:
      sub_1C09C3608(a1, v12, a3);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v8 = *a1;
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_7:
      unint64_t v19 = v8[2];
      unint64_t v20 = v8[3];
      unint64_t v21 = v19 + 1;
      if (v19 >= v20 >> 1)
      {
        unint64_t v33 = v19 + 1;
        uint64_t v29 = v8;
        unint64_t v30 = v19;
        unint64_t v31 = sub_1C0EE67F8((void *)(v20 > 1), v19 + 1, 1, v29);
        unint64_t v19 = v30;
        unint64_t v21 = v33;
        uint64_t v8 = v31;
      }
      v8[2] = v21;
      v8[v19 + 4] = v12;
      *a1 = v8;
      goto LABEL_10;
    }
LABEL_21:
    uint64_t v8 = sub_1C0EE67F8(0, v8[2] + 1, 1, v8);
    goto LABEL_7;
  }
LABEL_11:
  swift_retain();
  sub_1C151709C();
  uint64_t result = swift_release();
  if (v34 - 1 <= 1)
  {
    sub_1BFDE8F6C(0, &qword_1EB861B10, type metadata accessor for FeedItem, MEMORY[0x1E4FBBE00]);
    uint64_t v22 = *(void *)(type metadata accessor for FeedItem(0) - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    sub_1C09C31E8(v24 + v23);
    BOOL v34 = a2;
    swift_bridgeObjectRetain();
    sub_1C104A2D4(v24);
    BOOL v25 = v34;
    if (v34[2] == a3)
    {
      uint64_t v26 = *a1;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_1C0EE67F8(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        uint64_t v26 = sub_1C0EE67F8((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      v26[v28 + 4] = v25;
      *a1 = v26;
    }
    sub_1C09C3608(a1, v25, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C09C3AE8()
{
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatTestRunner()
{
  return self;
}

uint64_t sub_1C09C3B54()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C09C3B8C()
{
  uint64_t v1 = type metadata accessor for GroupLayoutContext();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 360) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v5 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + *(int *)(v1 + 24);
  if (*(void *)(v6 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v7 = v6 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C09C3EB4()
{
  uint64_t v1 = *(void *)(type metadata accessor for GroupLayoutContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 360) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = v0 + v2;
  uint64_t v5 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  return sub_1C09C0988(v3, (const void *)(v0 + 24), v4, v6, v7);
}

uint64_t sub_1C09C3F4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C09C416C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[3] = &type metadata for DebugFormatFeatureAvailability;
  v20[4] = &off_1F1C37788;
  v20[0] = swift_allocObject();
  sub_1C09C586C(a1, v20[0] + 16);
  sub_1BFC66384(a3 + 16, (uint64_t)v19);
  sub_1BFC66384((uint64_t)v20, (uint64_t)v18);
  sub_1BFC66384(a3 + 96, (uint64_t)v17);
  uint64_t v10 = *(void *)(a3 + 136);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v11 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_offlineManager);
  sub_1BFC66384(a3 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_bundleSessionManager, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  sub_1BFC773DC(v19, v12 + 16);
  sub_1BFC773DC(v18, v12 + 56);
  sub_1BFC773DC(v17, v12 + 96);
  *(void *)(v12 + 136) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion, v9, v6);
  *(void *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_offlineManager) = v11;
  sub_1BFC773DC(v16, v12 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_bundleSessionManager);
  swift_unknownObjectRetain();
  id v13 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v12;
}

void sub_1C09C438C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v5 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (_WORD *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFDE8F6C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v31 = (char *)&v28 - v9;
  uint64_t v10 = type metadata accessor for FeedItem(0);
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v14 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v13 == -1) {
    return;
  }
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1C05F7878(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    BOOL v15 = 0;
    uint64_t v16 = a1 - 1;
    uint64_t v17 = v39;
    uint64_t v29 = v12;
    uint64_t v30 = a2;
    while (a2 != v16)
    {
      if (v15) {
        goto LABEL_25;
      }
      swift_retain();
      sub_1C151709C();
      swift_release();
      if (v36 == 1) {
        id v18 = sub_1C11A24DC();
      }
      else {
        id v18 = sub_1C11A20B8();
      }
      unint64_t v19 = v18;
      uint64_t v20 = sub_1C151D2DC();
      uint64_t v21 = (uint64_t)v31;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
      id v38 = 0;
      uint64_t v36 = 0;
      char v37 = 1;
      char v35 = 0;
      uint64_t v22 = (char *)v7 + v5[6];
      uint64_t v23 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
      *uint64_t v7 = 258;
      *((unsigned char *)v7 + v5[7]) = 1;
      *((unsigned char *)v7 + v5[8]) = 0;
      *((unsigned char *)v7 + v5[9]) = 0;
      *((unsigned char *)v7 + v5[10]) = 0;
      uint64_t v24 = (uint64_t)v29;
      FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v19, 0, &v35, v21, (uint64_t)v7, &v38, (uint64_t)v29, (uint64_t)&v36);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v17;
      unint64_t v26 = *(void *)(v17 + 16);
      unint64_t v25 = *(void *)(v17 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1C05F7878(v25 > 1, v26 + 1, 1);
        uint64_t v17 = v39;
      }
      *(void *)(v17 + 16) = v26 + 1;
      sub_1C09C5674(v24, v17+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v26, type metadata accessor for FeedItem);
      a2 = v30;
      BOOL v15 = a1 == v30;
      if (a1 == v30)
      {
        a1 = 0;
      }
      else if (__OFADD__(a1++, 1))
      {
        goto LABEL_21;
      }
      if (v30 == ++v16) {
        return;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1C09C4784(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(v5 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_1BFEF2D8C(v7, v8);
        if (v9)
        {
          swift_retain();
          uint64_t v10 = swift_bridgeObjectRelease_n();
          MEMORY[0x1C18C66D0](v10);
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1C09C48B4(const void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1C151E24C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  BOOL v15 = (uint64_t *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[2] = a4;
  v71[3] = a5;
  v71[4] = a6;
  memcpy(v79, a1, sizeof(v79));
  uint64_t v16 = *(void **)(a3 + 24);
  *BOOL v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  id v17 = v16;
  LOBYTE(v16) = sub_1C151E26C();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v67 = a6;
    unint64_t v18 = v79[22];
    uint64_t v80 = v79[1];
    v78[0] = v79[1];
    sub_1BFFAF7A4((uint64_t)&v80);
    swift_bridgeObjectRetain();
    sub_1C09C3F4C((uint64_t)v79);
    sub_1BFDBB6AC(v18);
    unint64_t v19 = swift_bridgeObjectRetain();
    sub_1BFDBB6AC(v19);
    unint64_t v20 = swift_bridgeObjectRetain();
    sub_1BFDBB6AC(v20);
    sub_1C09C51F8((uint64_t)v79);
    a6 = v78[0];
    uint64_t v68 = a5;
    if (!(v78[0] >> 62))
    {
      uint64_t v21 = *(void *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v21) {
        goto LABEL_4;
      }
LABEL_47:
      swift_release();
LABEL_48:
      swift_bridgeObjectRelease_n();
      return sub_1C09C0A54(MEMORY[0x1E4FBC860], 1, a4, v68, v67);
    }
  }
  else
  {
LABEL_45:
    __break(1u);
  }
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C15204BC();
  if (!v21) {
    goto LABEL_47;
  }
LABEL_4:
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  unint64_t v64 = a2;
  a2 = a6 & 0xC000000000000001;
  uint64_t v69 = *(void *)(a3 + 16);
  a4 = 4;
  while (1)
  {
    uint64_t v22 = a4 - 4;
    if (a2)
    {
      uint64_t v23 = MEMORY[0x1C18C7CB0](a4 - 4, a6);
      uint64_t v24 = a4 - 3;
      if (__OFADD__(v22, 1)) {
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v23 = swift_retain();
      uint64_t v24 = a4 - 3;
      if (__OFADD__(v22, 1))
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
    }
    a3 = *(void *)(v23 + 16);
    uint64_t v25 = *(void *)(v23 + 24);
    uint64_t v70 = v23;
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (a3 == v78[0] && v25 == v78[1])
    {
      uint64_t v28 = v65;
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    char v27 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v27) {
      break;
    }
    swift_release();
    ++a4;
    if (v24 == v21)
    {
      swift_release();
      a4 = v66;
      goto LABEL_48;
    }
  }
  uint64_t v28 = v65;
  swift_release();
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C151709C();
  swift_release();
  unint64_t v29 = v64;
  sub_1C0A929D4(v70, v78[0], (uint64_t)v75);
  sub_1C09C5414((uint64_t)v75, (uint64_t)v76);
  sub_1C09C5414((uint64_t)v76, (uint64_t)v77);
  if (sub_1C09C549C((uint64_t)v77) == 1)
  {
    sub_1C09C0A54(MEMORY[0x1E4FBC860], 1, v66, v68, v67);
    return swift_release();
  }
  else
  {
    sub_1C09C54B4((uint64_t)v77, (uint64_t)v78);
    swift_beginAccess();
    swift_retain();
    sub_1C151894C();
    swift_release();
    uint64_t v31 = v73;
    sub_1C09C3F4C((uint64_t)v79);
    unint64_t v32 = sub_1C09C4784(v31, (uint64_t)v79);
    sub_1C09C51F8((uint64_t)v79);
    swift_bridgeObjectRelease();
    uint64_t v65 = FormatPackageInventory.merging(with:)(v32);
    swift_bridgeObjectRelease();
    sub_1C09C5920(0, &qword_1EA1A1D90, (uint64_t)&type metadata for DebugFormatTestSummaryItem, MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C152FC70;
    unint64_t v34 = sub_1C09C0E48();
    *(void *)(v33 + 32) = 0x7470697263736544;
    *(void *)(v33 + 40) = 0xEB000000006E6F69;
    *(void *)(v33 + 48) = v34;
    *(void *)(v33 + 56) = v35;
    swift_retain();
    sub_1C151709C();
    swift_release();
    if ((_BYTE)v73)
    {
      if (v73 == 1)
      {
        unint64_t v36 = 0xD000000000000018;
        char v37 = "Headlines (No Thumbnail)";
      }
      else
      {
        unint64_t v36 = 0xD000000000000024;
        char v37 = "Headlines (Thumbnail + No Thumbnail)";
      }
      unint64_t v38 = (unint64_t)(v37 - 32) | 0x8000000000000000;
    }
    else
    {
      unint64_t v38 = 0x80000001C1604700;
      unint64_t v36 = 0xD000000000000015;
    }
    *(void *)(v33 + 64) = 0x7463656A627553;
    *(void *)(v33 + 72) = 0xE700000000000000;
    *(void *)(v33 + 80) = v36;
    *(void *)(v33 + 88) = v38;
    swift_retain();
    sub_1C151709C();
    swift_release();
    unint64_t v39 = 0x614C206C61656449;
    if ((_BYTE)v72) {
      unint64_t v39 = 0xD000000000000010;
    }
    unint64_t v40 = 0x80000001C1615190;
    if (!(_BYTE)v72) {
      unint64_t v40 = 0xEC00000074756F79;
    }
    strcpy((char *)(v33 + 96), "Layout Order");
    *(unsigned char *)(v33 + 109) = 0;
    *(_WORD *)(v33 + 110) = -5120;
    *(void *)(v33 + 112) = v39;
    *(void *)(v33 + 120) = v40;
    swift_retain();
    sub_1C151709C();
    swift_release();
    uint64_t v41 = 0x70756F7247;
    if ((_BYTE)v73)
    {
      uint64_t v41 = 0x6567616B636150;
      unint64_t v42 = 0xE700000000000000;
    }
    else
    {
      unint64_t v42 = 0xE500000000000000;
    }
    *(void *)(v33 + 128) = 0x65706F6353;
    *(void *)(v33 + 136) = 0xE500000000000000;
    *(void *)(v33 + 144) = v41;
    *(void *)(v33 + 152) = v42;
    uint64_t v43 = v70;
    unint64_t v44 = (uint64_t *)(v70 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
    swift_beginAccess();
    if (v44[1])
    {
      uint64_t v45 = *v44;
      uint64_t v46 = v44[1];
    }
    else
    {
      uint64_t v45 = *(void *)(v43 + 16);
      uint64_t v46 = swift_bridgeObjectRetain();
    }
    *(void *)(v33 + 160) = 0x6567616B636150;
    *(void *)(v33 + 168) = 0xE700000000000000;
    *(void *)(v33 + 176) = v45;
    *(void *)(v33 + 184) = v46;
    type metadata accessor for GroupLayoutContext();
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_1C151754C();
    sub_1BFF01BC4();
    uint64_t v47 = sub_1C151FF2C();
    *(void *)(v33 + 192) = 0x736E6D756C6F43;
    *(void *)(v33 + 200) = 0xE700000000000000;
    *(void *)(v33 + 208) = v47;
    *(void *)(v33 + 216) = v48;
    uint64_t v49 = (void *)sub_1C15176CC();
    uint64_t v50 = UIContentSizeCategory.description.getter();
    uint64_t v52 = v51;

    *(void *)(v33 + 224) = 0xD000000000000015;
    *(void *)(v33 + 232) = 0x80000001C1616EC0;
    *(void *)(v33 + 240) = v50;
    *(void *)(v33 + 248) = v52;
    unint64_t v53 = sub_1C0EE680C(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v55 = v53[2];
    unint64_t v54 = v53[3];
    if (v55 >= v54 >> 1) {
      unint64_t v53 = sub_1C0EE680C((void *)(v54 > 1), v55 + 1, 1, v53);
    }
    uint64_t v56 = v67;
    _OWORD v53[2] = v55 + 1;
    uint64_t v57 = &v53[5 * v55];
    v57[4] = v33;
    v57[5] = 0;
    v57[6] = 0;
    v57[7] = 0;
    *((unsigned char *)v57 + 64) = 0;
    uint64_t v74 = (uint64_t)v53;
    swift_bridgeObjectRetain_n();
    uint64_t v58 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v58 = sub_1C0EE680C(0, v53[2] + 1, 1, v53);
    }
    unint64_t v60 = v58[2];
    unint64_t v59 = v58[3];
    if (v60 >= v59 >> 1) {
      uint64_t v58 = sub_1C0EE680C((void *)(v59 > 1), v60 + 1, 1, v58);
    }
    v58[2] = v60 + 1;
    uint64_t v61 = &v58[5 * v60];
    *((_OWORD *)v61 + 2) = 0u;
    *((_OWORD *)v61 + 3) = 0u;
    *((unsigned char *)v61 + 64) = 0x80;
    swift_bridgeObjectRelease();
    sub_1C09C0A54((uint64_t)v58, 0, v66, v68, v56);
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1C151709C();
    swift_release();
    MEMORY[0x1F4188790](v72);
    *(&v63 - 8) = v28;
    *(&v63 - 7) = (uint64_t)v78;
    *(&v63 - 6) = v65;
    *(&v63 - 5) = v29;
    *(&v63 - 4) = (uint64_t)sub_1C09C51EC;
    *(&v63 - 3) = (uint64_t)v71;
    *(&v63 - 2) = (uint64_t)&v74;
    sub_1C09C2A48(v62, (void (*)(uint64_t, void *, BOOL))sub_1C09C5510, (uint64_t)(&v63 - 10));
    swift_release();
    sub_1C09C56F8(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C09C5544);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C09C51EC(uint64_t a1, int a2)
{
  return sub_1C09C0A54(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C09C51F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C09C5414(uint64_t a1, uint64_t a2)
{
  sub_1C09C5920(0, (unint64_t *)&qword_1EA1A1D88, (uint64_t)&type metadata for DebugFormatTestScope.Resolved, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09C549C(uint64_t a1)
{
  if ((*(void *)(a1 + 48) >> 2) > 0x80000000) {
    return -(*(void *)(a1 + 48) >> 2);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C09C54B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C09C5510(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1C09C1058(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(uint64_t **)(v3 + 32), *(void *)(v3 + 40), *(void (**)(void *, uint64_t))(v3 + 48), *(void *)(v3 + 56), *(void ***)(v3 + 64));
}

uint64_t sub_1C09C5544(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  if (a7 >> 2 != 0xFFFFFFFF || a17 >= 0x100) {
    return sub_1C09C5588(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  }
  return result;
}

uint64_t sub_1C09C5588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if ((a17 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFFD0438(a9, a10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09C5674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09C56DC(uint64_t a1)
{
  return *(void *)(a1 + 128) >> 63;
}

uint64_t sub_1C09C56E8(uint64_t result)
{
  *(void *)(result + 128) &= ~0x8000000000000000;
  return result;
}

void *sub_1C09C56F8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C09C575C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C09C57B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C09C580C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C09C586C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C09C58C8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09C5910()
{
  return sub_1C09C0DC4(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_1C09C5920(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t FormatViewNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 FormatViewNodeStyle.Selector.init(selector:background:borders:cornerRadius:shadow:alpha:ignoresSmartInvertColors:)@<Q0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_OWORD *)(a8 + 32) = *(_OWORD *)a4;
  long long v8 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a8 + 56) = *(_OWORD *)a5;
  *(_OWORD *)(a8 + 72) = v8;
  long long v9 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a8 + 88) = *(_OWORD *)(a5 + 32);
  uint64_t v10 = a1[1];
  uint64_t v11 = *a2;
  char v12 = *(unsigned char *)(a4 + 16);
  char v13 = *(unsigned char *)(a5 + 80);
  uint64_t v14 = *a6;
  *(void *)a8 = *a1;
  *(void *)(a8 + 8) = v10;
  *(void *)(a8 + 16) = v11;
  *(void *)(a8 + 24) = a3;
  *(unsigned char *)(a8 + 48) = v12;
  *(_OWORD *)(a8 + 104) = v9;
  __n128 result = *(__n128 *)(a5 + 64);
  *(__n128 *)(a8 + 120) = result;
  *(unsigned char *)(a8 + 136) = v13;
  *(void *)(a8 + 144) = v14;
  *(unsigned char *)(a8 + 152) = a7;
  return result;
}

uint64_t FormatViewNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatViewNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatViewNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatViewNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatViewNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t v5 = *(void *)(v1 + 128);
  uint64_t v6 = *(void *)(v1 + 136);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t v8 = *(void *)(v1 + 152);
  uint64_t v9 = *(void *)(v1 + 160);
  uint64_t v10 = *(void *)(v1 + 168);
  uint64_t v11 = *(void *)(v1 + 176);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 184);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatViewNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 185);
}

uint64_t FormatViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, long long *a10, char a11)
{
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = *a6;
  uint64_t v16 = *a7;
  uint64_t v17 = *a9;
  uint64_t v18 = a9[1];
  char v19 = *((unsigned char *)a9 + 16);
  long long v26 = a10[1];
  long long v27 = *a10;
  long long v24 = a10[3];
  long long v25 = a10[2];
  uint64_t v20 = *((void *)a10 + 8);
  uint64_t v21 = *((void *)a10 + 9);
  char v22 = *((unsigned char *)a10 + 80);
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = v16;
  *(void *)(v14 + 72) = a8;
  *(void *)(v14 + 80) = v17;
  *(void *)(v14 + 88) = v18;
  *(unsigned char *)(v14 + 96) = v19;
  *(_OWORD *)(v14 + 104) = v27;
  *(_OWORD *)(v14 + 120) = v26;
  *(_OWORD *)(v14 + 136) = v25;
  *(_OWORD *)(v14 + 152) = v24;
  *(void *)(v14 + 168) = v20;
  *(void *)(v14 + 176) = v21;
  *(unsigned char *)(v14 + 184) = v22;
  *(unsigned char *)(v14 + 185) = a11;
  return v14;
}

uint64_t FormatViewNodeStyle.init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, long long *a10, char a11)
{
  uint64_t v16 = *a6;
  uint64_t v17 = *a7;
  uint64_t v18 = *a9;
  uint64_t v28 = a9[1];
  char v19 = *((unsigned char *)a9 + 16);
  long long v26 = a10[1];
  long long v27 = *a10;
  long long v24 = a10[3];
  long long v25 = a10[2];
  uint64_t v22 = *((void *)a10 + 9);
  uint64_t v23 = *((void *)a10 + 8);
  char v20 = *((unsigned char *)a10 + 80);
  swift_beginAccess();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  swift_beginAccess();
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 56) = v16;
  *(void *)(v11 + 64) = v17;
  *(void *)(v11 + 72) = a8;
  *(void *)(v11 + 80) = v18;
  *(void *)(v11 + 88) = v28;
  *(unsigned char *)(v11 + 96) = v19;
  *(_OWORD *)(v11 + 104) = v27;
  *(_OWORD *)(v11 + 120) = v26;
  *(_OWORD *)(v11 + 136) = v25;
  *(_OWORD *)(v11 + 152) = v24;
  *(void *)(v11 + 168) = v23;
  *(void *)(v11 + 176) = v22;
  *(unsigned char *)(v11 + 184) = v20;
  *(unsigned char *)(v11 + 185) = a11;
  return v11;
}

uint64_t sub_1C09C5EB8()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v30 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v31 = v2;
  uint64_t v27 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0)
  {
    sub_1C0EF4E60(v32);
    uint64_t v6 = v32[0];
  }
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v28 = v5;
  uint64_t v29 = v4;
  uint64_t v26 = v3;
  if (v7) {
    uint64_t v8 = sub_1C096BB70(v7);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  char v11 = *(unsigned char *)(v1 + 96);
  uint64_t v12 = *(void *)(v1 + 112);
  uint64_t v13 = *(void *)(v1 + 136);
  int v14 = *(unsigned __int8 *)(v1 + 184);
  uint64_t v24 = *(void *)(v1 + 120);
  uint64_t v25 = *(void *)(v1 + 104);
  uint64_t v22 = *(void *)(v1 + 144);
  uint64_t v23 = *(void *)(v1 + 128);
  uint64_t v20 = *(void *)(v1 + 160);
  uint64_t v21 = *(void *)(v1 + 152);
  uint64_t v18 = *(void *)(v1 + 176);
  uint64_t v19 = *(void *)(v1 + 168);
  sub_1BFEF6828(v9, v10, v11);
  if (v14 != 254)
  {
    sub_1C10E55EC(v32);
    uint64_t v13 = v32[0];
    uint64_t v12 = v12;
  }
  char v15 = *(unsigned char *)(v1 + 185);
  uint64_t v16 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v16 + 16) = v31;
  *(void *)(v16 + 24) = v26;
  *(void *)(v16 + 32) = v30;
  *(void *)(v16 + 40) = v29;
  swift_beginAccess();
  *(void *)(v16 + 48) = v28;
  *(void *)(v16 + 56) = v27;
  *(void *)(v16 + 64) = v6;
  *(void *)(v16 + 72) = v8;
  *(void *)(v16 + 80) = v9;
  *(void *)(v16 + 88) = v10;
  *(unsigned char *)(v16 + 96) = v11;
  *(void *)(v16 + 104) = v25;
  *(void *)(v16 + 112) = v12;
  *(void *)(v16 + 120) = v24;
  *(void *)(v16 + 128) = v23;
  *(void *)(v16 + 136) = v13;
  *(void *)(v16 + 144) = v22;
  *(void *)(v16 + 152) = v21;
  *(void *)(v16 + 160) = v20;
  *(void *)(v16 + 168) = v19;
  *(void *)(v16 + 176) = v18;
  *(unsigned char *)(v16 + 184) = v14;
  *(unsigned char *)(v16 + 185) = v15;
  return v16;
}

uint64_t sub_1C09C6110(void *a1, void *a2)
{
  return static FormatViewNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatViewNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatViewNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatViewNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  uint64_t v10 = *(void *)(v1 + 120);
  uint64_t v11 = *(void *)(v1 + 128);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatViewNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t sub_1C09C61C4()
{
  uint64_t v1 = *v0;
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v3 = *(void *)(v1 + 64);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    uint64_t v6 = &protocol witness table for FormatBackground;
    uint64_t v5 = &type metadata for FormatBackground;
    uint64_t v4 = *(void *)(v1 + 64);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = v6;
  sub_1BFEF683C(v3);
  uint64_t v7 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v7;
}

uint64_t _s8NewsFeed19FormatViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v49 = *(void *)(a1 + 56);
  uint64_t v50 = *(void *)(a1 + 64);
  uint64_t v51 = *(void *)(a1 + 72);
  uint64_t v52 = *(void *)(a1 + 80);
  uint64_t v53 = *(void *)(a1 + 88);
  uint64_t v54 = *(void *)(a1 + 96);
  uint64_t v55 = *(void *)(a1 + 104);
  uint64_t v56 = *(void *)(a1 + 112);
  uint64_t v47 = *(void *)(a1 + 128);
  uint64_t v48 = *(void *)(a1 + 120);
  int v57 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v34 = *(void *)(a1 + 144);
  int v32 = *(unsigned __int8 *)(a1 + 152);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v37 = *(void *)(a2 + 56);
  uint64_t v38 = *(void *)(a2 + 64);
  uint64_t v39 = *(void *)(a2 + 72);
  uint64_t v40 = *(void *)(a2 + 80);
  uint64_t v41 = *(void *)(a2 + 88);
  uint64_t v42 = *(void *)(a2 + 96);
  uint64_t v43 = *(void *)(a2 + 104);
  uint64_t v44 = *(void *)(a2 + 112);
  uint64_t v35 = *(void *)(a2 + 128);
  uint64_t v36 = *(void *)(a2 + 120);
  int v45 = *(unsigned __int8 *)(a2 + 136);
  uint64_t v33 = *(void *)(a2 + 144);
  int v31 = *(unsigned __int8 *)(a2 + 152);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1C1520A9C(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if ((~v2 & 0xF000000000000007) != 0)
    {
      uint64_t v69 = v2;
      if ((~v8 & 0xF000000000000007) != 0)
      {
        uint64_t v58 = v8;
        swift_retain_n();
        char v14 = static FormatBackground.== infix(_:_:)(&v69, (unint64_t *)&v58);
        swift_release();
        sub_1BFEF68C0(v2);
        if ((v14 & 1) == 0) {
          return 0;
        }
LABEL_11:
        if (v4)
        {
          if (!v7) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v15 = swift_bridgeObjectRetain();
          BOOL v16 = sub_1C00DFB58(v15, v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v16) {
            return 0;
          }
        }
        else if (v7)
        {
          return 0;
        }
        if (v6 <= 0xFD)
        {
          uint64_t v69 = v3;
          uint64_t v70 = v5;
          LOBYTE(v71) = v6;
          if (v11 <= 0xFD)
          {
            uint64_t v58 = v9;
            uint64_t v59 = v10;
            LOBYTE(v60) = v11;
            sub_1BFEF6828(v3, v5, v6);
            sub_1BFF046A0(v3, v5, v6);
            char v17 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v69, (uint64_t)&v58);
            sub_1BFF04738(v69, v70, v71);
            sub_1BFEF68AC(v3, v5, v6);
            if ((v17 & 1) == 0) {
              return 0;
            }
LABEL_23:
            char v18 = v57;
            if (v57 == 254)
            {
              unsigned __int8 v19 = v45;
              uint64_t v21 = v55;
              uint64_t v20 = v56;
              uint64_t v23 = v53;
              uint64_t v22 = v54;
              uint64_t v25 = v51;
              uint64_t v24 = v52;
              uint64_t v27 = v49;
              uint64_t v26 = v50;
              uint64_t v28 = v47;
              uint64_t v29 = v48;
              if (v45 == 254)
              {
LABEL_30:
                if (v34)
                {
                  if (!v33) {
                    return 0;
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  char v30 = sub_1C00DE998(v34, v33);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v30 & 1) == 0) {
                    return 0;
                  }
LABEL_35:
                  if (v32 == 2)
                  {
                    if (v31 != 2) {
                      return 0;
                    }
                  }
                  else if (v31 == 2 || ((((v32 & 1) == 0) ^ v31) & 1) == 0)
                  {
                    return 0;
                  }
                  return 1;
                }
                if (!v33) {
                  goto LABEL_35;
                }
                return 0;
              }
            }
            else
            {
              uint64_t v27 = v49;
              uint64_t v26 = v50;
              uint64_t v69 = v49;
              uint64_t v70 = v50;
              uint64_t v25 = v51;
              uint64_t v24 = v52;
              uint64_t v71 = v51;
              uint64_t v72 = v52;
              uint64_t v23 = v53;
              uint64_t v22 = v54;
              uint64_t v73 = v53;
              uint64_t v74 = v54;
              uint64_t v21 = v55;
              uint64_t v75 = v55;
              uint64_t v76 = v56;
              uint64_t v28 = v47;
              uint64_t v29 = v48;
              uint64_t v77 = v48;
              uint64_t v78 = v47;
              char v79 = v57;
              unsigned __int8 v19 = v45;
              if (v45 != 254)
              {
                uint64_t v58 = v37;
                LODWORD(v59) = v38;
                uint64_t v60 = v39;
                uint64_t v61 = v40;
                uint64_t v62 = v41;
                uint64_t v63 = v42;
                uint64_t v64 = v43;
                uint64_t v65 = v44;
                uint64_t v66 = v36;
                uint64_t v67 = v35;
                char v68 = v45;
                sub_1BFEF8708(v49, v50, v51, v52, v53, v54, v55, v56, v48, v47, v57);
                swift_retain();
                char v46 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v69, (uint64_t)&v58);
                swift_release();
                sub_1BFEF8738(v49, v50, v51, v52, v53, v54, v55, v56, v48, v47, v57);
                if ((v46 & 1) == 0) {
                  return 0;
                }
                goto LABEL_30;
              }
              swift_retain();
              uint64_t v20 = v56;
              char v18 = v57;
            }
            uint64_t v69 = v27;
            uint64_t v70 = v26;
            uint64_t v71 = v25;
            uint64_t v72 = v24;
            uint64_t v73 = v23;
            uint64_t v74 = v22;
            uint64_t v75 = v21;
            uint64_t v76 = v20;
            uint64_t v77 = v29;
            uint64_t v78 = v28;
            char v79 = v18;
            uint64_t v80 = v37;
            uint64_t v81 = v38;
            uint64_t v82 = v39;
            uint64_t v83 = v40;
            uint64_t v84 = v41;
            uint64_t v85 = v42;
            uint64_t v86 = v43;
            uint64_t v87 = v44;
            uint64_t v88 = v36;
            uint64_t v89 = v35;
            unsigned __int8 v90 = v19;
            sub_1BFEF8708(v37, v38, v39, v40, v41, v42, v43, v44, v36, v35, v19);
            sub_1C02D2004((uint64_t)&v69);
            return 0;
          }
          sub_1BFF046A0(v3, v5, v6);
          sub_1BFF046A0(v3, v5, v6);
          sub_1BFF04738(v3, v5, v6);
        }
        else if (v11 > 0xFD)
        {
          goto LABEL_23;
        }
        sub_1BFEF6828(v9, v10, v11);
        sub_1BFEF68AC(v3, v5, v6);
        sub_1BFEF68AC(v9, v10, v11);
        return 0;
      }
      swift_retain();
    }
    else if ((~v8 & 0xF000000000000007) == 0)
    {
      goto LABEL_11;
    }
    sub_1BFEF683C(v8);
    sub_1BFEF68C0(v2);
    sub_1BFEF68C0(v8);
    return 0;
  }
  return result;
}

uint64_t sub_1C09C67E0(uint64_t a1)
{
  uint64_t result = sub_1C09C6918(&qword_1EA1A1D98);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09C6824(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C09C6918(&qword_1EB889208);
  uint64_t result = sub_1C09C6918(&qword_1EB866978);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C09C688C(void *a1)
{
  a1[1] = sub_1C09C6918(&qword_1EB889208);
  a1[2] = sub_1C09C6918(&qword_1EB866978);
  uint64_t result = sub_1C09C6918(&qword_1EA1A1DA0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C09C6918(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatViewNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09C6958(uint64_t a1)
{
  unint64_t result = sub_1C09C6980();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09C6980()
{
  unint64_t result = qword_1EA1A1DA8;
  if (!qword_1EA1A1DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1DA8);
  }
  return result;
}

unint64_t sub_1C09C69D4(void *a1)
{
  a1[1] = sub_1C0078BC8();
  a1[2] = sub_1C0078C1C();
  unint64_t result = sub_1C09C6A0C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09C6A0C()
{
  unint64_t result = qword_1EA1A1DB0;
  if (!qword_1EA1A1DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1DB0);
  }
  return result;
}

uint64_t sub_1C09C6A60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09C6AB0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatViewNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatViewNodeStyle);
}

uint64_t dispatch thunk of FormatViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:ignoresSmartInvertColors:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t assignWithCopy for FormatViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1C09C6DD8(a1 + 16);
    uint64_t v5 = *(void *)(a2 + 16);
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a1 + 32);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      uint64_t v14 = *(void *)(a2 + 32);
      uint64_t v15 = *(void *)(a2 + 40);
      sub_1BFF046A0(v14, v15, *(unsigned char *)(a2 + 48));
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v15;
      char v18 = *(unsigned char *)(a1 + 48);
      *(unsigned char *)(a1 + 48) = v9;
      sub_1BFF04738(v16, v17, v18);
    }
    else
    {
      sub_1C02D0F84(a1 + 32);
      char v11 = *(unsigned char *)(a2 + 48);
      *uint64_t v7 = *v8;
      *(unsigned char *)(a1 + 48) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    uint64_t v12 = *(void *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 40);
    sub_1BFF046A0(v12, v13, *(unsigned char *)(a2 + 48));
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    *(unsigned char *)(a1 + 48) = v9;
  }
  else
  {
    long long v10 = *v8;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *uint64_t v7 = v10;
  }
  unsigned __int8 v19 = (_OWORD *)(a1 + 56);
  uint64_t v20 = (_OWORD *)(a2 + 56);
  int v21 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v21 == 254)
    {
      long long v22 = *(_OWORD *)(a2 + 72);
      *unsigned __int8 v19 = *v20;
      *(_OWORD *)(a1 + 72) = v22;
      long long v23 = *(_OWORD *)(a2 + 88);
      long long v24 = *(_OWORD *)(a2 + 104);
      long long v25 = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v24;
      *(_OWORD *)(a1 + 120) = v25;
      *(_OWORD *)(a1 + 88) = v23;
    }
    else
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v30 = *(_OWORD *)(a2 + 96);
      long long v31 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v30;
      *(_OWORD *)(a1 + 112) = v31;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1C02D0FD8(a1 + 56);
    long long v26 = *(_OWORD *)(a2 + 72);
    *unsigned __int8 v19 = *v20;
    *(_OWORD *)(a1 + 72) = v26;
    long long v28 = *(_OWORD *)(a2 + 104);
    long long v27 = *(_OWORD *)(a2 + 120);
    long long v29 = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v28;
    *(_OWORD *)(a1 + 120) = v27;
    *(_OWORD *)(a1 + 88) = v29;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_retain();
    swift_release();
    long long v32 = *(_OWORD *)(a2 + 96);
    long long v33 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v32;
    *(_OWORD *)(a1 + 112) = v33;
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  return a1;
}

uint64_t sub_1C09C6DD8(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C09C6DD8(a1 + 16);
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a2 + 32);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 48);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v7;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    goto LABEL_11;
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 48);
  if (v9 > 0xFD)
  {
    sub_1C02D0F84(a1 + 32);
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v7;
  *(unsigned char *)(a1 + 48) = v9;
  sub_1BFF04738(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 136) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 136) != 254)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_release();
      long long v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      goto LABEL_16;
    }
    sub_1C02D0FD8(a1 + 56);
  }
  long long v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v12;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  long long v13 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v13;
LABEL_16:
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  return a1;
}

ValueMetadata *type metadata accessor for FormatViewNodeStyle.Selector()
{
  return &type metadata for FormatViewNodeStyle.Selector;
}

void *sub_1C09C6FB8(double *a1, uint64_t a2)
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EA1974D0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  sub_1C09C76D8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v48 = *(void *)(*(void *)(v4 - 8) + 72);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  uint64_t v43 = v6;
  unsigned int v8 = (void *)(v7 + v6);
  if (a2)
  {
    uint64_t v10 = *(void *)(a2 + 32);
    unint64_t v9 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1C09C5EB8();
    long long v51 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    uint64_t v54 = 0;
    uint64_t v11 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v50, v11 + 16);
    long long v12 = sub_1C02D1FE8;
  }
  else
  {
    long long v12 = sub_1C139486C;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
  long long v14 = (uint64_t (**)())((char *)v8 + *(int *)(v13 + 24));
  void *v14 = v12;
  v14[1] = (uint64_t (*)())v11;
  uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *(void *)(v7 + v43) = v10;
  v8[2] = 0;
  v8[3] = 0;
  v8[1] = v9;
  uint64_t v16 = (char *)v8 + *(int *)(v13 + 28);
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = -1;
  uint64_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v17(v8, 0, 1, v13);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v7, v58);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v18 = swift_allocObject();
  *(void *)(inited + 32) = v18;
  *(void *)(v18 + 48) = v59;
  long long v19 = v58[1];
  *(_OWORD *)(v18 + 16) = v58[0];
  *(_OWORD *)(v18 + 32) = v19;
  uint64_t v20 = v48;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C152A660;
  uint64_t v22 = v21 + v43;
  sub_1C0433600(1701869908, 0xE400000000000000, 2003134806, 0xE400000000000000, (void *)(v21 + v43));
  v17((void *)(v21 + v43), 0, 1, v13);
  if (a2)
  {
    uint64_t v23 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v23, (void *)(v22 + v48));
    uint64_t v20 = v48;
    v17((void *)(v22 + v48), 0, 1, v13);
    unint64_t v24 = *(void *)(a2 + 64);
    sub_1BFEF683C(v24);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v22 + v48));
    v17((void *)(v22 + v48), 0, 1, v13);
    unint64_t v24 = 0xF000000000000007;
  }
  uint64_t v25 = v22 + 2 * v20;
  sub_1C0439948(0x756F72676B636142, 0xEA0000000000646ELL, v24, v25);
  v17((void *)v25, 0, 1, v13);
  if (a2) {
    char v26 = *(unsigned char *)(a2 + 185);
  }
  else {
    char v26 = 2;
  }
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v26, (void *)(v22 + 3 * v48));
  v17((void *)(v22 + 3 * v48), 0, 1, v13);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v21, v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v27 = swift_allocObject();
  *(void *)(inited + 72) = v27;
  *(void *)(v27 + 48) = v61;
  long long v28 = v60[1];
  *(_OWORD *)(v27 + 16) = v60[0];
  *(_OWORD *)(v27 + 32) = v28;
  if (a2)
  {
    uint64_t v29 = *(void *)(a2 + 80);
    uint64_t v30 = *(void *)(a2 + 88);
    char v31 = *(unsigned char *)(a2 + 96);
    sub_1BFEF6828(v29, v30, v31);
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    char v31 = -2;
  }
  uint64_t v50 = v29;
  *(void *)&long long v51 = v30;
  BYTE8(v51) = v31;
  long long v32 = sub_1C108626C(a1, (uint64_t)&v50);
  sub_1BFEF68AC(v29, v30, v31);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  uint64_t v49 = (void *)inited;
  *(void *)(inited + 112) = v32;
  if (a2)
  {
    unsigned __int8 v44 = *(unsigned char *)(a2 + 184);
    uint64_t v46 = *(void *)(a2 + 176);
    uint64_t v47 = *(void *)(a2 + 168);
    uint64_t v33 = *(void *)(a2 + 104);
    uint64_t v34 = *(void *)(a2 + 112);
    uint64_t v35 = *(void *)(a2 + 120);
    uint64_t v36 = *(void *)(a2 + 128);
    uint64_t v37 = *(void *)(a2 + 136);
    uint64_t v38 = *(void *)(a2 + 144);
    uint64_t v39 = *(void *)(a2 + 152);
    a2 = *(void *)(a2 + 160);
    sub_1BFEF8708(v33, v34, v35, v36, v37, v38, v39, a2, v47, v46, v44);
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    unsigned __int8 v44 = -2;
  }
  uint64_t v50 = v33;
  *(void *)&long long v51 = v34;
  *((void *)&v51 + 1) = v35;
  *(void *)&long long v52 = v36;
  *((void *)&v52 + 1) = v37;
  *(void *)&long long v53 = v38;
  *((void *)&v53 + 1) = v39;
  uint64_t v54 = a2;
  uint64_t v55 = v47;
  uint64_t v56 = v46;
  unsigned __int8 v57 = v44;
  uint64_t v42 = sub_1C0AD49A4((uint64_t)&v50);
  sub_1BFEF8738(v33, v34, v35, v36, v37, v38, v39, a2, v47, v46, v44);
  v49[22] = &type metadata for FormatInspection;
  v49[23] = &off_1F1C29D30;
  v49[19] = v42;
  uint64_t v40 = sub_1C131B79C((uint64_t)v49);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  return v40;
}

void sub_1C09C76D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C09C773C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09C7784()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

void *sub_1C09C77C8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      long long v12 = (void *)a2[4];
      swift_bridgeObjectRetain();
      if ((unint64_t)v12 >= 4) {
        id v13 = v12;
      }
      uint64_t v14 = a2[5];
      a1[4] = v12;
      a1[5] = v14;
      uint64_t v15 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      sub_1C09C862C(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      unint64_t v8 = (void *)*a2;
      id v9 = v8;
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1C09C7960(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void **)(a1 + 32);
    if ((unint64_t)v4 >= 4) {

    }
    uint64_t v5 = a1 + *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
    sub_1C09C862C(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    v7(v5, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v3 = *(void **)a1;
  }
}

void *sub_1C09C7A58(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    uint64_t v10 = (void *)a2[4];
    swift_bridgeObjectRetain();
    if ((unint64_t)v10 >= 4) {
      id v11 = v10;
    }
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    uint64_t v13 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    sub_1C09C862C(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = (void *)*a2;
    id v8 = v7;
    *a1 = v7;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C09C7BAC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C09C8784((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DebugFormatDebuggerSourceHighlight);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v9 = (void *)a2[4];
      swift_bridgeObjectRetain();
      if ((unint64_t)v9 >= 4) {
        id v10 = v9;
      }
      a1[4] = v9;
      a1[5] = a2[5];
      uint64_t v11 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      sub_1C09C862C(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = (void *)*a2;
      id v8 = v7;
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceHighlight()
{
  uint64_t result = qword_1EA1A1DB8;
  if (!qword_1EA1A1DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C09C7D84(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v7;
    uint64_t v8 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    sub_1C09C862C(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1C09C7E90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C09C8784((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DebugFormatDebuggerSourceHighlight);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v7;
      uint64_t v8 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
      uint64_t v9 = (char *)a1 + v8;
      id v10 = (char *)a2 + v8;
      sub_1C09C862C(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C09C7FC0()
{
  uint64_t result = type metadata accessor for FormatDebuggerContext();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C09C8054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  sub_1C09C862C(0, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for FormatDebuggerContext();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  uint64_t v12 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C09C871C(a2, (uint64_t)v38, (uint64_t (*)(void))sub_1C017F2CC);
  sub_1C09C871C((uint64_t)v38, (uint64_t)v39, (uint64_t (*)(void))sub_1C017F2CC);
  if (sub_1C0263AB8((uint64_t)v39) != 1)
  {
    uint64_t v35 = a1;
    uint64_t v18 = v45;
    if (v45)
    {
      uint64_t v20 = v46;
      uint64_t v19 = v47;
      uint64_t v21 = v48;
      uint64_t v22 = v44;
      if (v41)
      {
        uint64_t v23 = v42;
        uint64_t v34 = v43;
        if (v44 == v40 && v45 == v41)
        {
          swift_bridgeObjectRetain_n();
          sub_1C09C87E4(v22, v18, v20, v19, v21);
          swift_bridgeObjectRetain();
          swift_release();
          sub_1C02F6040((uint64_t)v38);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v17 = v36;
          if (v20 != v23) {
            goto LABEL_18;
          }
        }
        else
        {
          LODWORD(v33) = sub_1C1520A9C();
          swift_bridgeObjectRetain_n();
          sub_1C09C87E4(v22, v18, v20, v19, v21);
          swift_bridgeObjectRetain();
          swift_release();
          sub_1C02F6040((uint64_t)v38);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v17 = v36;
          if ((v33 & 1) == 0 || v20 != v23) {
            goto LABEL_18;
          }
        }
        if (v19 == v34)
        {
          id v25 = v21;
          sub_1C017F270(v22, v18, v20, v19, v21);
          void *v14 = v21;
LABEL_32:
          uint64_t v16 = v37;
          swift_storeEnumTagMultiPayload();
          sub_1C09C871C((uint64_t)v14, v17, (uint64_t (*)(void))type metadata accessor for DebugFormatDebuggerSourceHighlight);
          uint64_t v15 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, v15, 1, v16);
        }
      }
      else
      {
        swift_bridgeObjectRetain_n();
        sub_1C09C87E4(v22, v18, v20, v19, v21);
        swift_release();
        sub_1C02F6040((uint64_t)v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v17 = v36;
      }
LABEL_18:
      sub_1C017F270(v22, v18, v20, v19, v21);
      void *v14 = 0;
      goto LABEL_32;
    }
    uint64_t v24 = v41;
    if (!v41)
    {
      swift_release();
      sub_1C02F6040((uint64_t)v38);
      goto LABEL_3;
    }
    uint64_t v33 = v42;
    uint64_t v34 = v40;
    uint64_t v32 = v43;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C151894C();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C02F6040((uint64_t)v38);
      sub_1C09C8690((uint64_t)v7);
LABEL_31:
      uint64_t v17 = v36;
      goto LABEL_32;
    }
    sub_1C09C871C((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
    uint64_t v27 = v11[2];
    uint64_t v26 = v11[3];
    if (v34 == *v11 && v24 == v11[1])
    {
      swift_bridgeObjectRetain();
      swift_release();
      sub_1C02F6040((uint64_t)v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v29 = sub_1C1520A9C();
      swift_bridgeObjectRetain();
      swift_release();
      sub_1C02F6040((uint64_t)v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_30;
      }
    }
    if (v33 == v27 && v32 == v26)
    {
      sub_1C09C871C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
      goto LABEL_31;
    }
LABEL_30:
    sub_1C09C8784((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatDebuggerContext);
    goto LABEL_31;
  }
  swift_release();
LABEL_3:
  uint64_t v15 = 1;
  uint64_t v17 = v36;
  uint64_t v16 = v37;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, v15, 1, v16);
}

void sub_1C09C862C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C09C8690(uint64_t a1)
{
  sub_1C09C862C(0, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C09C871C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09C8784(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C09C87E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v6 = a5;
  }
}

char *sub_1C09C8828(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        uint64_t v8 = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        if (v8)
        {
          uint64_t v9 = *((void *)a2 + 6);
          *((void *)a1 + 5) = v8;
          *((void *)a1 + 6) = v9;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v8);
        }
        else
        {
          long long v31 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v31;
          *((void *)a1 + 6) = *((void *)a2 + 6);
        }
        goto LABEL_15;
      case 1u:
        uint64_t v12 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        uint64_t v13 = *((void *)a2 + 2);
        uint64_t v14 = *((void *)a2 + 3);
        char v15 = a2[32];
        swift_bridgeObjectRetain();
        sub_1C09C8BD8();
        *((void *)a1 + 2) = v13;
        *((void *)a1 + 3) = v14;
        a1[32] = v15;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        long long v16 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v16;
        (**(void (***)(void *, const void *))(v16 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        long long v17 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v17;
        (**(void (***)(void *, const void *))(v17 - 8))(a1, a2);
        uint64_t v18 = (void *)*((void *)a2 + 5);
        uint64_t v19 = (void *)*((void *)a2 + 6);
        char v20 = a2[56];
        sub_1C09C8BE0(v18, v19, v20);
        *((void *)a1 + 5) = v18;
        *((void *)a1 + 6) = v19;
        a1[56] = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v21 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v21;
        sub_1C09C8C08();
        uint64_t v23 = *(int *)(v22 + 48);
        uint64_t v24 = &a1[v23];
        id v25 = &a2[v23];
        uint64_t v26 = sub_1C151CA7C();
        uint64_t v27 = *(void *)(v26 - 8);
        long long v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (v28(v25, 1, v26))
        {
          sub_1C04456A0(0);
          memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v30 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v30;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C09C8BD8()
{
  return swift_bridgeObjectRetain();
}

id sub_1C09C8BE0(id result, id a2, char a3)
{
  if (a3 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a3 != 1)
  {
    if (a3) {
      return result;
    }
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C09C8C08()
{
  if (!qword_1EA1A7450)
  {
    sub_1C04456A0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A7450);
    }
  }
}

void sub_1C09C8C74(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40))
      {
        uint64_t v2 = a1 + 16;
        goto LABEL_8;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      sub_1C02F6038();
      break;
    case 2u:
      uint64_t v2 = a1;
LABEL_8:
      __swift_destroy_boxed_opaque_existential_1(v2);
      break;
    case 3u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      uint64_t v3 = *(void **)(a1 + 40);
      uint64_t v4 = *(void **)(a1 + 48);
      char v5 = *(unsigned char *)(a1 + 56);
      sub_1C09C8E58(v3, v4, v5);
      break;
    case 4u:
      swift_bridgeObjectRelease();
      sub_1C09C8C08();
      uint64_t v7 = a1 + *(int *)(v6 + 48);
      uint64_t v8 = sub_1C151CA7C();
      uint64_t v10 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8))
      {
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
        v9(v7, v8);
      }
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_release();
      break;
    default:
      return;
  }
}

void sub_1C09C8E58(void *a1, id a2, char a3)
{
  if (a3 == 2)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  if (a3 != 1)
  {
    if (a3) {
      return;
    }
    goto LABEL_4;
  }
}

char *sub_1C09C8E80(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (v7)
      {
        uint64_t v8 = *((void *)a2 + 6);
        *((void *)a1 + 5) = v7;
        *((void *)a1 + 6) = v8;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v7);
      }
      else
      {
        long long v28 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v28;
        *((void *)a1 + 6) = *((void *)a2 + 6);
      }
      goto LABEL_14;
    case 1u:
      uint64_t v9 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v9;
      uint64_t v10 = *((void *)a2 + 2);
      uint64_t v11 = *((void *)a2 + 3);
      char v12 = a2[32];
      swift_bridgeObjectRetain();
      sub_1C09C8BD8();
      *((void *)a1 + 2) = v10;
      *((void *)a1 + 3) = v11;
      a1[32] = v12;
      goto LABEL_14;
    case 2u:
      long long v13 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v13;
      (**(void (***)(void *, const void *))(v13 - 8))(a1, a2);
      goto LABEL_14;
    case 3u:
      long long v14 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v14;
      (**(void (***)(void *, const void *))(v14 - 8))(a1, a2);
      char v15 = (void *)*((void *)a2 + 5);
      long long v16 = (void *)*((void *)a2 + 6);
      char v17 = a2[56];
      sub_1C09C8BE0(v15, v16, v17);
      *((void *)a1 + 5) = v15;
      *((void *)a1 + 6) = v16;
      a1[56] = v17;
      goto LABEL_14;
    case 4u:
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      sub_1C09C8C08();
      uint64_t v20 = *(int *)(v19 + 48);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_1C151CA7C();
      uint64_t v24 = *(void *)(v23 - 8);
      id v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        sub_1C04456A0(0);
        memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      goto LABEL_14;
    case 5u:
      uint64_t v27 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v27;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1C09C91D8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C09C956C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v6 = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        if (v6)
        {
          *((void *)a1 + 5) = v6;
          *((void *)a1 + 6) = *((void *)a2 + 6);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v6);
        }
        else
        {
          long long v23 = *((_OWORD *)a2 + 1);
          long long v24 = *((_OWORD *)a2 + 2);
          *((void *)a1 + 6) = *((void *)a2 + 6);
          *((_OWORD *)a1 + 1) = v23;
          *((_OWORD *)a1 + 2) = v24;
        }
        goto LABEL_15;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v7 = *((void *)a2 + 2);
        uint64_t v8 = *((void *)a2 + 3);
        char v9 = a2[32];
        swift_bridgeObjectRetain();
        sub_1C09C8BD8();
        *((void *)a1 + 2) = v7;
        *((void *)a1 + 3) = v8;
        a1[32] = v9;
        goto LABEL_15;
      case 2u:
        uint64_t v10 = *((void *)a2 + 3);
        *((void *)a1 + 3) = v10;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        (**(void (***)(void *, const void *))(v10 - 8))(a1, a2);
        goto LABEL_15;
      case 3u:
        uint64_t v11 = *((void *)a2 + 3);
        *((void *)a1 + 3) = v11;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        (**(void (***)(void *, const void *))(v11 - 8))(a1, a2);
        char v12 = (void *)*((void *)a2 + 5);
        long long v13 = (void *)*((void *)a2 + 6);
        char v14 = a2[56];
        sub_1C09C8BE0(v12, v13, v14);
        *((void *)a1 + 5) = v12;
        *((void *)a1 + 6) = v13;
        a1[56] = v14;
        goto LABEL_15;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        sub_1C09C8C08();
        uint64_t v16 = *(int *)(v15 + 48);
        char v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_1C151CA7C();
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        swift_bridgeObjectRetain();
        if (v21(v18, 1, v19))
        {
          sub_1C04456A0(0);
          memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        goto LABEL_15;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_retain();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C09C956C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugInspectViewItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugInspectViewItem()
{
  uint64_t result = qword_1EA1A1DC8;
  if (!qword_1EA1A1DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C09C9614(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    sub_1C09C8C08();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    char v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151CA7C();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1C04456A0(0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1C09C977C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C09C956C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      sub_1C09C8C08();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      char v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C151CA7C();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_1C04456A0(0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1C09C98F4()
{
  v1[4] = "8";
  v1[5] = &unk_1C1583340;
  v1[6] = &unk_1C1583358;
  v1[7] = &unk_1C1583370;
  sub_1C04456A0(319);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[8] = v1;
    v1[9] = &unk_1C15833A0;
    swift_initEnumMetadataMultiPayload();
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectViewItem.LoadingItemType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C09C9A5CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectViewItem.LoadingItemType()
{
  return &type metadata for DebugInspectViewItem.LoadingItemType;
}

void destroy for DebugInspectViewItem.GroupLayoutFactoryMatch(uint64_t a1)
{
}

uint64_t _s8NewsFeed20DebugInspectViewItemO23GroupLayoutFactoryMatchOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C09C8BE0(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugInspectViewItem.GroupLayoutFactoryMatch(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C09C8BE0(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C09C8E58(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugInspectViewItem.GroupLayoutFactoryMatch(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  unsigned int v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C09C8E58(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectViewItem.GroupLayoutFactoryMatch()
{
  return &type metadata for DebugInspectViewItem.GroupLayoutFactoryMatch;
}

uint64_t destroy for DebugInspectViewItem.RequirementMatch()
{
  return sub_1C02F6038();
}

uint64_t _s8NewsFeed20DebugInspectViewItemO16RequirementMatchOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1C09C8BD8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugInspectViewItem.RequirementMatch(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1C09C8BD8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C02F6038();
  return a1;
}

uint64_t assignWithTake for DebugInspectViewItem.RequirementMatch(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C02F6038();
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectViewItem.RequirementMatch()
{
  return &type metadata for DebugInspectViewItem.RequirementMatch;
}

unint64_t sub_1C09C9CB8()
{
  unint64_t result = qword_1EA1A1DD8;
  if (!qword_1EA1A1DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1DD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V23()
{
  return &type metadata for A12_V23;
}

uint64_t sub_1C09C9D1C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C09CD91C(0, &qword_1EA1A1E90, (uint64_t (*)(void))sub_1C09CD8C8, (uint64_t)&type metadata for A12_V23.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09CD8C8();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C09CD984(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C09C9F64(uint64_t a1)
{
  unint64_t v2 = sub_1C09CD8C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09C9FA0(uint64_t a1)
{
  unint64_t v2 = sub_1C09CD8C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C09C9FDC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C09CD618(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C09CA024(void *a1)
{
  return sub_1C09C9D1C(a1);
}

uint64_t sub_1C09CA03C()
{
  sub_1C09CD278();
  return sub_1C151798C();
}

uint64_t sub_1C09CA0B8@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C09CD91C(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C09CA174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v46 = a3;
  uint64_t v49 = sub_1C151635C();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v9);
  long long v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  char v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v58 = a1;
  sub_1BFF1AFA4(a1, v50, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v54 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v47 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  uint64_t v67 = &type metadata for A12_V23;
  unint64_t v20 = sub_1C0186434();
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v22;
  uint64_t v63 = 95;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 45;
  unint64_t v62 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v47;
  *uint64_t v26 = v48;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v65, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  uint64_t v29 = (uint64_t)v53;
  sub_1BFF2389C(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v30, 0, 1, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  sub_1BFFFC630(v17, v18);
  uint64_t v67 = &type metadata for A12_V23;
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  uint64_t v31 = v29;
  sub_1BFF1AFA4(v55, v29, (uint64_t (*)(void))v54);
  sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v33 = (void *)(v32 + 16);
  swift_beginAccess();
  uint64_t v34 = *(void **)(v32 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v32 + 16) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v34 = sub_1BFFB83AC(0, v34[2] + 1, 1, v34);
    void *v33 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v34 = sub_1BFFB83AC((void *)(v36 > 1), v37 + 1, 1, v34);
    void *v33 = v34;
  }
  v34[2] = v37 + 1;
  uint64_t v38 = &v34[2 * v37];
  v38[4] = sub_1C064667C;
  v38[5] = 0;
  swift_endAccess();
  uint64_t v39 = v69;
  uint64_t v40 = sub_1C001E608((uint64_t)&unk_1F1B836D8, 0, 0, v32, 4, 0, 0, 0);
  if (v39)
  {
    swift_release();
    swift_release();
    sub_1BFF1F284(v31, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  }
  else
  {
    uint64_t v42 = v40;
    swift_release();
    uint64_t v43 = type metadata accessor for A12_V23.Bound();
    uint64_t v44 = v46;
    v46[3] = v43;
    v44[4] = sub_1C09CD984(&qword_1EA1A1DF0, (void (*)(uint64_t))type metadata accessor for A12_V23.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v65, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v31, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

double sub_1C09CA7E8@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  *(void *)&long long v39 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  long long v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A12_V23.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(int *)(v8 + 40);
  uint64_t v10 = v7;
  uint64_t v40 = v7;
  uint64_t v11 = *(void *)(v7 + v9);
  uint64_t v12 = *(void *)(v11 + 16);
  double v13 = *(double *)(v10 + *(int *)(v8 + 32));
  sub_1BFC66384(v12 + 16, (uint64_t)v50);
  sub_1BFC66384(v12 + 56, (uint64_t)v49);
  double v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v50, inited + 16);
  sub_1BFC773DC(v49, inited + 56);
  *(double *)(inited + 96) = v14;
  v48[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1C00737F8();
  uint64_t v16 = sub_1C151ECCC();
  *(void *)(v16 + 16) = 2;
  sub_1BFC66384((uint64_t)&v51, v16 + 32);
  sub_1BFC773DC(&v51, v16 + 72);
  uint64_t v17 = *(void *)(v11 + 16);
  sub_1BFC66384(v17 + 16, (uint64_t)v50);
  sub_1BFC66384(v17 + 56, (uint64_t)v49);
  double v18 = v13 * *(double *)(v17 + 96);
  uint64_t v19 = swift_initStackObject();
  sub_1BFC773DC(v50, v19 + 16);
  sub_1BFC773DC(v49, v19 + 56);
  *(double *)(v19 + 96) = v18;
  v48[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v19 + 16);
  __swift_destroy_boxed_opaque_existential_1(v19 + 56);
  uint64_t v20 = sub_1BFEB3714((uint64_t)&v51, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(void *)&long long v51 = v16;
  sub_1BFEB37F8(v20);
  uint64_t v21 = v51;
  v47[2] = v2;
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C06472C0(v22, v21, (void (*)(char *, uint64_t))sub_1C09CD204, (uint64_t)v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v24 = *(void *)(v23 + 16);
  if (v24 >= 2) {
    uint64_t v25 = 2;
  }
  else {
    uint64_t v25 = *(void *)(v23 + 16);
  }
  uint64_t v26 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  unint64_t v27 = v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  uint64_t v28 = (2 * v24) | 1;
  uint64_t v29 = *MEMORY[0x1E4FAB6D8];
  uint64_t v30 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v5, v29, v30);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v39);
  uint64_t v42 = v23;
  uint64_t v43 = v23;
  unint64_t v44 = v27;
  uint64_t v45 = v25;
  uint64_t v46 = v28;
  sub_1C09CD358(0, &qword_1EA1A1E10, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1C1517BEC();
  uint64_t v31 = sub_1C1517BFC();
  long long v39 = v51;
  uint64_t v32 = v52;
  uint64_t v33 = v53;
  *(void *)&long long v51 = v23;
  *(void *)&v50[0] = v54;
  MEMORY[0x1F4188790](v31);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v51 = v34;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v35 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v36 = v41;
  *uint64_t v41 = 0;
  double result = *(double *)&v39;
  *(_OWORD *)(v36 + 8) = v39;
  *((void *)v36 + 3) = v32;
  *((void *)v36 + 4) = v33;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  *((void *)v36 + 5) = v35;
  *((void *)v36 + 6) = v38;
  return result;
}

uint64_t sub_1C09CADD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C09CAEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C09CD91C(0, &qword_1EA1A1E28, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)&v20[-v15];
  uint64_t v26 = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 12;
  uint64_t *v16 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FABA10], v13);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  double v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C09CD358(0, &qword_1EA1A1E30, MEMORY[0x1E4FAB6F0]);
  sub_1C09CD314(&qword_1EA1A1E38, &qword_1EA1A1E30, v18);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1C09CB0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v59 = a5;
  uint64_t v60 = a6;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v56 = a2;
  uint64_t v50 = sub_1C09CD224;
  sub_1C09CD91C(0, &qword_1EA1A1E28, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v35 - v10);
  uint64_t v66 = a1;
  uint64_t v40 = a1;
  uint64_t v12 = sub_1C151729C();
  uint64_t v13 = swift_allocBox();
  unsigned int v54 = *MEMORY[0x1E4FAB4E8];
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v53 = *(void (**)(uint64_t))(v14 + 104);
  uint64_t v55 = v14 + 104;
  v53(v15);
  *uint64_t v11 = v13;
  unsigned int v52 = *MEMORY[0x1E4FAB940];
  uint64_t v16 = *(void (**)(uint64_t *))(v9 + 104);
  v16(v11);
  uint64_t v49 = v9 + 104;
  uint64_t v48 = v16;
  uint64_t v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09CD358(0, &qword_1EA1A1E40, MEMORY[0x1E4FAB4D0]);
  uint64_t v41 = v18;
  v35[1] = sub_1C09CD314(&qword_1EA1A1E48, &qword_1EA1A1E40, v17);
  sub_1C151738C();
  uint64_t v19 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t v42 = v9 + 8;
  uint64_t v43 = v19;
  v19(v11, v8);
  uint64_t v66 = a1;
  unsigned int v51 = *MEMORY[0x1E4FABA28];
  v16(v11);
  sub_1C09CD3DC();
  uint64_t v47 = v20;
  sub_1C09CD91C(0, &qword_1EA1A1E58, (uint64_t (*)(void))v50, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v38 = v21;
  uint64_t v22 = *(unsigned __int8 *)(*(void *)(v21 - 8) + 80);
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v50 = (unint64_t (*)())(((v22 + 32) & ~v22) + *(void *)(v23 + 72));
  uint64_t v24 = (v22 + 32) & ~v22;
  uint64_t v45 = v24;
  uint64_t v46 = v22 | 7;
  uint64_t v25 = swift_allocObject();
  long long v44 = xmmword_1C1529AE0;
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  unsigned int v36 = *MEMORY[0x1E4FAB638];
  uint64_t v26 = *(void (**)(void))(v23 + 104);
  uint64_t v37 = v23 + 104;
  long long v39 = (void (*)(uint64_t, void, uint64_t))v26;
  v26(v25 + v24);
  uint64_t v65 = v56;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v27 = v8;
  uint64_t v28 = v43;
  v43(v11, v8);
  uint64_t v29 = v40;
  uint64_t v66 = v40;
  uint64_t v30 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v53)(v31, v54, v12);
  *uint64_t v11 = v30;
  uint64_t v32 = v48;
  ((void (*)(uint64_t *, void, uint64_t))v48)(v11, v52, v27);
  sub_1C151738C();
  v28(v11, v27);
  uint64_t v66 = v29;
  ((void (*)(uint64_t *, void, uint64_t))v32)(v11, v51, v27);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v44;
  v39(v33 + v45, v36, v38);
  uint64_t v61 = v57;
  uint64_t v62 = v58;
  uint64_t v63 = v59;
  uint64_t v64 = v60;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v28)(v11, v27);
}

uint64_t sub_1C09CB688(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C09CD91C(0, &qword_1EA1A1E28, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09CD358(0, &qword_1EA1A1E40, MEMORY[0x1E4FAB4D0]);
  sub_1C09CD314(&qword_1EA1A1E48, &qword_1EA1A1E40, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C09CB92C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  long long v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09CD91C(0, &qword_1EA1A1E28, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09CD358(0, &qword_1EA1A1E40, MEMORY[0x1E4FAB4D0]);
  sub_1C09CD314(&qword_1EA1A1E48, &qword_1EA1A1E40, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C09CBEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  long long v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09CD91C(0, &qword_1EA1A1E28, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09CD358(0, &qword_1EA1A1E40, MEMORY[0x1E4FAB4D0]);
  sub_1C09CD314(&qword_1EA1A1E48, &qword_1EA1A1E40, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

void sub_1C09CC4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_1C09CD91C(0, &qword_1EA1A1E28, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v33 = (uint64_t *)((char *)&v27 - v13);
  uint64_t v14 = type metadata accessor for HeadlineViewLayout.Context(0) - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = a5 >> 1;
  uint64_t v19 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v18 != a4 && v19 == 3)
  {
    if (v18 > a4)
    {
      uint64_t v20 = *(void *)(v15 + 72);
      unsigned int v31 = *MEMORY[0x1E4FABA10];
      uint64_t v27 = a2;
      uint64_t v28 = v11;
      id v29 = (void (**)(uint64_t *, uint64_t))(v12 + 8);
      uint64_t v30 = (uint64_t (**)(uint64_t *, void, uint64_t))(v12 + 104);
      swift_unknownObjectRetain();
      uint64_t v32 = v20;
      uint64_t v21 = a3 + v20 * a4;
      uint64_t v22 = v33;
      uint64_t v23 = v28;
      do
      {
        sub_1BFF1AFA4(v21, (uint64_t)v17, type metadata accessor for HeadlineViewLayout.Context);
        uint64_t v34 = a1;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = 4;
        uint64_t *v22 = v24;
        uint64_t v25 = (*v30)(v22, v31, v23);
        MEMORY[0x1F4188790](v25);
        uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C09CD358(0, &qword_1EA1A1E40, MEMORY[0x1E4FAB4D0]);
        sub_1C09CD314(&qword_1EA1A1E48, &qword_1EA1A1E40, v26);
        uint64_t v22 = v33;
        sub_1C151734C();
        (*v29)(v22, v23);
        sub_1BFF1F284((uint64_t)v17, type metadata accessor for HeadlineViewLayout.Context);
        v21 += v32;
        --v19;
      }
      while (v19);
      swift_unknownObjectRelease();
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1C09CC838(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v35 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v36 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C09CD91C(0, &qword_1EA1A1E28, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&KeyPath - v15;
  uint64_t v40 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = *MEMORY[0x1E4FABA28];
  int64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v39 = v13;
  v18(v16, v17, v13);
  uint64_t v19 = (char *)v11 + v9[7];
  uint64_t v20 = *MEMORY[0x1E4FAB8C8];
  uint64_t v21 = sub_1C1517A7C();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  uint64_t v23 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[8]) = 0;
  uint64_t v24 = *v23;
  *(void *)((char *)v11 + v9[9]) = v24;
  uint64_t v25 = qword_1EB87CC48;
  id v26 = v24;
  if (v25 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  uint64_t v27 = swift_release();
  __n128 v28 = MEMORY[0x1F4188790](v27);
  uint64_t v29 = v35;
  *(&KeyPath - 4) = v34;
  *(&KeyPath - 3) = (uint64_t)v11;
  unint64_t v32 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v36, *MEMORY[0x1E4FAB8F8], v29, v28);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v30 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09CD358(0, &qword_1EA1A1E40, MEMORY[0x1E4FAB4D0]);
  sub_1C09CD314(&qword_1EA1A1E48, &qword_1EA1A1E40, v30);
  unint64_t v32 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v39);
}

uint64_t sub_1C09CCD40@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V23.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C09CCE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C09CA174(a1, a2, a3);
}

uint64_t sub_1C09CCE48()
{
  return sub_1C12BC304();
}

unint64_t sub_1C09CCE58(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C09CCE88();
  unint64_t result = sub_1C09CCEDC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C09CCE88()
{
  unint64_t result = qword_1EA1A1DE0;
  if (!qword_1EA1A1DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1DE0);
  }
  return result;
}

unint64_t sub_1C09CCEDC()
{
  unint64_t result = qword_1EA1A1DE8;
  if (!qword_1EA1A1DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1DE8);
  }
  return result;
}

uint64_t type metadata accessor for A12_V23.Bound()
{
  uint64_t result = qword_1EA1A1DF8;
  if (!qword_1EA1A1DF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09CCF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C09CCF90);
}

uint64_t sub_1C09CCF90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C09CD040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C09CD054);
}

void *sub_1C09CD054(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C09CD0FC()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C09CD1AC(uint64_t a1)
{
  uint64_t result = sub_1C09CD984(&qword_1EA1A1E08, (void (*)(uint64_t))type metadata accessor for A12_V23.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09CD204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C09CADD8(a1, a2, a3);
}

uint64_t sub_1C09CD20C(uint64_t a1)
{
  return sub_1C09CD2FC(a1, sub_1C09CAEA8);
}

unint64_t sub_1C09CD224()
{
  unint64_t result = qword_1EA1A1E18;
  if (!qword_1EA1A1E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E18);
  }
  return result;
}

unint64_t sub_1C09CD278()
{
  unint64_t result = qword_1EA1A1E20;
  if (!qword_1EA1A1E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E20);
  }
  return result;
}

uint64_t sub_1C09CD2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C09CCD40(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C09CD2D4()
{
  return swift_deallocObject();
}

uint64_t sub_1C09CD2E4(uint64_t a1)
{
  return sub_1C09CD2FC(a1, sub_1C09CB0BC);
}

uint64_t sub_1C09CD2FC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1C09CD314(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C09CD358(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C09CD358(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V23.Layout;
    v8[1] = &type metadata for A12_V23.Layout.Attributes;
    v8[2] = sub_1C09CD224();
    v8[3] = sub_1C09CD278();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C09CD3DC()
{
  if (!qword_1EA1A1E50)
  {
    sub_1C09CD91C(255, &qword_1EA1A1E58, (uint64_t (*)(void))sub_1C09CD224, (uint64_t)&type metadata for A12_V23.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A1E50);
    }
  }
}

uint64_t sub_1C09CD46C(uint64_t a1)
{
  return sub_1C09CB688(a1, *(void *)(v1 + 16));
}

void sub_1C09CD474(uint64_t a1)
{
  sub_1C09CC4D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C09CD480(uint64_t a1)
{
  return sub_1C09CC838(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09CD488(uint64_t a1)
{
  return sub_1C09CB92C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09CD490(uint64_t a1)
{
  return sub_1C09CBEF8(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V23.Layout.Attributes()
{
  return &type metadata for A12_V23.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V23.Layout()
{
  return &type metadata for A12_V23.Layout;
}

unint64_t sub_1C09CD4BC()
{
  unint64_t result = qword_1EA1A1E60;
  if (!qword_1EA1A1E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E60);
  }
  return result;
}

unint64_t sub_1C09CD514()
{
  unint64_t result = qword_1EA1A1E68;
  if (!qword_1EA1A1E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E68);
  }
  return result;
}

unint64_t sub_1C09CD56C()
{
  unint64_t result = qword_1EA1A1E70;
  if (!qword_1EA1A1E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E70);
  }
  return result;
}

unint64_t sub_1C09CD5C4()
{
  unint64_t result = qword_1EA1A1E78;
  if (!qword_1EA1A1E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E78);
  }
  return result;
}

uint64_t sub_1C09CD618@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C09CD91C(0, &qword_1EA1A1E80, (uint64_t (*)(void))sub_1C09CD8C8, (uint64_t)&type metadata for A12_V23.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09CD8C8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C09CD984(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C09CD8C8()
{
  unint64_t result = qword_1EA1A1E88;
  if (!qword_1EA1A1E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E88);
  }
  return result;
}

void sub_1C09CD91C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C09CD984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V23.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09CDA98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V23.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V23.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C09CDAD4()
{
  unint64_t result = qword_1EA1A1E98;
  if (!qword_1EA1A1E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1E98);
  }
  return result;
}

unint64_t sub_1C09CDB2C()
{
  unint64_t result = qword_1EA1A1EA0;
  if (!qword_1EA1A1EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1EA0);
  }
  return result;
}

unint64_t sub_1C09CDB84()
{
  unint64_t result = qword_1EA1A1EA8;
  if (!qword_1EA1A1EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1EA8);
  }
  return result;
}

uint64_t ArticleURLHandlerMatchIDProvider.articleIDPathComponent.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleURLHandlerMatchIDProvider.paywallArticleIDPathComponent.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void *ArticleURLHandlerMatchIDProvider.__allocating_init()()
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = 0x49656C6369747261;
  result[3] = 0xE900000000000044;
  result[4] = 0xD000000000000010;
  result[5] = 0x80000001C1616F90;
  return result;
}

void *ArticleURLHandlerMatchIDProvider.init()()
{
  unint64_t result = v0;
  v0[2] = 0x49656C6369747261;
  v0[3] = 0xE900000000000044;
  v0[4] = 0xD000000000000010;
  v0[5] = 0x80000001C1616F90;
  return result;
}

uint64_t ArticleURLHandlerMatchIDProvider.articleIDFromURLHandlerMatch(_:)()
{
  uint64_t v0 = sub_1C15185BC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v17 - v5;
  sub_1C15185DC();
  uint64_t v7 = sub_1C15185CC();
  uint64_t v9 = v8;
  unint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v6, v0);
  if (v9) {
    return v7;
  }
  sub_1C15185DC();
  uint64_t v7 = sub_1C15185CC();
  unint64_t v12 = v11;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v3, v0);
  if (!v12) {
    return v7;
  }
  uint64_t v19 = v7;
  unint64_t v20 = v12;
  uint64_t v14 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v14 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    uint64_t result = sub_1BFE7E4D4(v7, v12);
    if (v15)
    {
      sub_1C09CDF54(1);
      swift_bridgeObjectRelease();
      uint64_t v17 = v19;
      unint64_t v18 = v20;
      sub_1C09CDFDC();
      sub_1C09CE038();
      uint64_t v17 = sub_1C151E8CC();
      unint64_t v18 = v16;
      sub_1C151E81C();
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ArticleURLHandlerMatchIDProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ArticleURLHandlerMatchIDProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C09CDF30()
{
  return ArticleURLHandlerMatchIDProvider.articleIDFromURLHandlerMatch(_:)();
}

uint64_t sub_1C09CDF54(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t result = sub_1C151E7DC();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        uint64_t result = 15;
        uint64_t v1 = v2;
        return MEMORY[0x1F41838E8](result, v1);
      }
    }
    __break(1u);
    return MEMORY[0x1F41838E8](result, v1);
  }
  return result;
}

void sub_1C09CDFDC()
{
  if (!qword_1EB86F760)
  {
    sub_1C0180128();
    unint64_t v0 = sub_1C15204AC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86F760);
    }
  }
}

unint64_t sub_1C09CE038()
{
  unint64_t result = qword_1EB870130;
  if (!qword_1EB870130)
  {
    sub_1C09CDFDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870130);
  }
  return result;
}

uint64_t dispatch thunk of ArticleURLHandlerMatchIDProviderType.articleIDPathComponent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ArticleURLHandlerMatchIDProviderType.paywallArticleIDPathComponent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArticleURLHandlerMatchIDProviderType.articleIDFromURLHandlerMatch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for ArticleURLHandlerMatchIDProvider()
{
  return self;
}

uint64_t method lookup function for ArticleURLHandlerMatchIDProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ArticleURLHandlerMatchIDProvider);
}

uint64_t dispatch thunk of ArticleURLHandlerMatchIDProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C09CE11C(uint64_t a1, uint64_t a2)
{
  uint64_t v83 = sub_1C15155DC();
  uint64_t v3 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v82 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC201C(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v79 - v9;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](a2 + 16);
  if (!result) {
    return result;
  }
  unint64_t v12 = (char *)result;
  sub_1C151564C();
  sub_1C09CFBB0((uint64_t)v10, (uint64_t)v7);
  uint64_t v13 = sub_1C15156FC();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
  {
    sub_1C09D043C((uint64_t)v7, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    goto LABEL_28;
  }
  uint64_t v15 = sub_1C15155FC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
  if (!v15)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v16 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v16)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      unint64_t v20 = (void *)MEMORY[0x1E4FBC868];
      if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
        goto LABEL_93;
      }
LABEL_32:
      unint64_t v48 = sub_1BFEF2D8C(0x7865646E69, 0xE500000000000000);
      if ((v49 & 1) == 0) {
        goto LABEL_93;
      }
      uint64_t v50 = (uint64_t *)(v20[7] + 16 * v48);
      uint64_t v29 = *v50;
      unint64_t v30 = v50[1];
      unint64_t v51 = HIBYTE(v30) & 0xF;
      uint64_t v52 = v29 & 0xFFFFFFFFFFFFLL;
      if (!((v30 & 0x2000000000000000) != 0 ? HIBYTE(v30) & 0xF : v29 & 0xFFFFFFFFFFFFLL)) {
        goto LABEL_93;
      }
      if ((v30 & 0x1000000000000000) != 0) {
        goto LABEL_92;
      }
      if ((v30 & 0x2000000000000000) == 0)
      {
        if ((v29 & 0x1000000000000000) != 0) {
          unsigned int v54 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
LABEL_97:
        }
          unsigned int v54 = (unsigned __int8 *)sub_1C152020C();
        uint64_t v55 = sub_1C02968B8(v54, v52, 10);
        if ((v56 & 1) == 0)
        {
          uint64_t v57 = (uint64_t)v55;
          goto LABEL_68;
        }
        goto LABEL_93;
      }
      uint64_t v88 = (void *)v29;
      uint64_t v89 = v30 & 0xFFFFFFFFFFFFFFLL;
      if (v29 == 43)
      {
        if (v51)
        {
          if (v51 == 1) {
            goto LABEL_99;
          }
          if ((BYTE1(v29) - 48) > 9u) {
            goto LABEL_64;
          }
          uint64_t v57 = (BYTE1(v29) - 48);
          if (v51 != 2)
          {
            if ((BYTE2(v29) - 48) > 9u) {
              goto LABEL_64;
            }
            uint64_t v57 = 10 * (BYTE1(v29) - 48) + (BYTE2(v29) - 48);
            unint64_t v58 = v51 - 3;
            if (v51 != 3)
            {
              uint64_t v59 = (unsigned __int8 *)&v88 + 3;
              while (1)
              {
                unsigned int v60 = *v59 - 48;
                if (v60 > 9) {
                  goto LABEL_64;
                }
                uint64_t v61 = 10 * v57;
                if ((unsigned __int128)(v57 * (__int128)10) >> 64 != (10 * v57) >> 63) {
                  goto LABEL_64;
                }
                uint64_t v57 = v61 + v60;
                if (__OFADD__(v61, v60)) {
                  goto LABEL_64;
                }
                LOBYTE(v51) = 0;
                ++v59;
                if (!--v58) {
                  goto LABEL_67;
                }
              }
            }
          }
          goto LABEL_66;
        }
      }
      else
      {
        if (v29 != 45)
        {
          if (!v51 || (v29 - 48) > 9u) {
            goto LABEL_64;
          }
          uint64_t v57 = (v29 - 48);
          if (v51 != 1)
          {
            if ((BYTE1(v29) - 48) > 9u) {
              goto LABEL_64;
            }
            uint64_t v57 = 10 * (v29 - 48) + (BYTE1(v29) - 48);
            unint64_t v69 = v51 - 2;
            if (v51 != 2)
            {
              uint64_t v70 = (unsigned __int8 *)&v88 + 2;
              while (1)
              {
                unsigned int v71 = *v70 - 48;
                if (v71 > 9) {
                  goto LABEL_64;
                }
                uint64_t v72 = 10 * v57;
                if ((unsigned __int128)(v57 * (__int128)10) >> 64 != (10 * v57) >> 63) {
                  goto LABEL_64;
                }
                uint64_t v57 = v72 + v71;
                if (__OFADD__(v72, v71)) {
                  goto LABEL_64;
                }
                LOBYTE(v51) = 0;
                ++v70;
                if (!--v69) {
                  goto LABEL_67;
                }
              }
            }
          }
LABEL_66:
          LOBYTE(v51) = 0;
          goto LABEL_67;
        }
        if (v51)
        {
          if (v51 == 1) {
            goto LABEL_99;
          }
          if ((BYTE1(v29) - 48) > 9u) {
            goto LABEL_64;
          }
          if (v51 == 2)
          {
            LOBYTE(v51) = 0;
            uint64_t v57 = -(uint64_t)(BYTE1(v29) - 48);
            goto LABEL_67;
          }
          if ((BYTE2(v29) - 48) > 9u) {
            goto LABEL_64;
          }
          uint64_t v57 = -10 * (BYTE1(v29) - 48) - (BYTE2(v29) - 48);
          unint64_t v73 = v51 - 3;
          if (v51 != 3)
          {
            uint64_t v74 = (unsigned __int8 *)&v88 + 3;
            while (1)
            {
              unsigned int v75 = *v74 - 48;
              if (v75 > 9) {
                break;
              }
              uint64_t v76 = 10 * v57;
              if ((unsigned __int128)(v57 * (__int128)10) >> 64 != (10 * v57) >> 63) {
                break;
              }
              uint64_t v57 = v76 - v75;
              if (__OFSUB__(v76, v75)) {
                break;
              }
              LOBYTE(v51) = 0;
              ++v74;
              if (!--v73) {
                goto LABEL_67;
              }
            }
LABEL_64:
            uint64_t v57 = 0;
            LOBYTE(v51) = 1;
            goto LABEL_67;
          }
          goto LABEL_66;
        }
        __break(1u);
      }
      __break(1u);
LABEL_102:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_29;
  }
LABEL_6:
  uint64_t v80 = v10;
  uint64_t v81 = v12;
  unint64_t v18 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v17 = v3 + 16;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 64);
  uint64_t v79 = v15;
  unint64_t v10 = (char *)(v15 + ((v19 + 32) & ~v19));
  uint64_t v85 = (void (**)(char *, uint64_t))(v17 - 8);
  uint64_t v86 = v18;
  uint64_t v87 = v17;
  uint64_t v84 = *(void *)(v17 + 56);
  unint64_t v20 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v12 = v82;
  uint64_t v21 = v83;
  v18(v82, v10, v83);
  while (1)
  {
    uint64_t v23 = sub_1C15155BC();
    uint64_t v25 = v24;
    uint64_t v26 = sub_1C15155CC();
    if (v27) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v39 = sub_1BFEF2D8C(v23, v25);
    char v41 = v40;
    swift_bridgeObjectRelease();
    if (v41)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v88 = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C106AFB0();
        unint64_t v20 = v88;
      }
      swift_bridgeObjectRelease();
      sub_1C091D5A0(v39, (uint64_t)v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_9:
    (*v85)(v12, v21);
    v10 += v84;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = v80;
      unint64_t v12 = v81;
      if (!v20[2]) {
        goto LABEL_93;
      }
      goto LABEL_32;
    }
    v86(v12, v10, v21);
  }
  uint64_t v28 = v26;
  uint64_t v29 = v27;
  unint64_t v30 = (unint64_t)v20;
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v88 = (void *)v30;
  unint64_t v33 = sub_1BFEF2D8C(v23, v25);
  uint64_t v34 = *(void *)(v30 + 16);
  BOOL v35 = (v32 & 1) == 0;
  uint64_t v36 = v34 + v35;
  if (!__OFADD__(v34, v35))
  {
    unint64_t v12 = v32;
    if (*(void *)(v30 + 24) < v36)
    {
      sub_1C105548C(v36, v31);
      unint64_t v30 = (unint64_t)v88;
      unint64_t v37 = sub_1BFEF2D8C(v23, v25);
      if ((v12 & 1) != (v38 & 1)) {
        goto LABEL_102;
      }
      unint64_t v33 = v37;
      unint64_t v20 = v88;
      if ((v12 & 1) == 0) {
        goto LABEL_23;
      }
LABEL_7:
      uint64_t v22 = (uint64_t *)(v20[7] + 16 * v33);
      swift_bridgeObjectRelease();
      uint64_t *v22 = v28;
      v22[1] = v29;
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v12 = v82;
      uint64_t v21 = v83;
      goto LABEL_9;
    }
    if (v31)
    {
      unint64_t v20 = v88;
      if (v32) {
        goto LABEL_7;
      }
    }
    else
    {
      unint64_t v30 = (unint64_t)&v88;
      sub_1C106AFB0();
      unint64_t v20 = v88;
      if (v12) {
        goto LABEL_7;
      }
    }
LABEL_23:
    v20[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v43 = (uint64_t *)(v20[6] + 16 * v33);
    *uint64_t v43 = v23;
    v43[1] = v25;
    long long v44 = (uint64_t *)(v20[7] + 16 * v33);
    *long long v44 = v28;
    v44[1] = v29;
    uint64_t v45 = v20[2];
    BOOL v46 = __OFADD__(v45, 1);
    uint64_t v47 = v45 + 1;
    if (v46) {
      goto LABEL_91;
    }
    v20[2] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  swift_bridgeObjectRetain();
  uint64_t v57 = (uint64_t)sub_1C02969B8(v29, v30, 10);
  char v78 = v77;
  swift_bridgeObjectRelease();
  if (v78)
  {
LABEL_93:
    sub_1C09D043C((uint64_t)v10, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  }
  else
  {
    while (1)
    {
LABEL_68:
      swift_retain();
      sub_1C151894C();
      swift_release();
      if (v57 < 0)
      {
        __break(1u);
        goto LABEL_97;
      }
      unint64_t v51 = v88[2];
      if (v57 < v51) {
        break;
      }
      __break(1u);
LABEL_99:
      uint64_t v57 = 0;
LABEL_67:
      if (v51) {
        goto LABEL_93;
      }
    }
    uint64_t v62 = &v88[4 * v57];
    uint64_t v64 = (void *)v62[4];
    uint64_t v63 = v62[5];
    uint64_t v65 = v62[6];
    uint64_t v66 = v62[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v67 = &v12[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
    swift_beginAccess();
    unint64_t v68 = *(void (**)(void **))v67;
    if (*(void *)v67)
    {
      swift_endAccess();
      uint64_t v88 = v64;
      uint64_t v89 = v63;
      uint64_t v90 = v65;
      uint64_t v91 = v66;
      swift_retain();
      v68(&v88);
      sub_1BFC3E5C0((uint64_t)v68);

      sub_1C09D043C((uint64_t)v10, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    }
    else
    {
      sub_1C09D043C((uint64_t)v10, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
      swift_endAccess();
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

char *sub_1C09CEA60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label;
  id v6 = objc_allocWithZone((Class)sub_1C151AC2C());
  uint64_t v7 = v1;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView;
  *(void *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView;
  *(void *)&v7[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink] = 0;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_linkHandler;
  *(void *)&v7[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLabelLinkHandler()), sel_init);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_editor] = a1;
  swift_retain();

  v25.receiver = v7;
  v25.super_class = ObjectType;
  unint64_t v11 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView;
  uint64_t v13 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView];
  uint64_t v14 = v11;
  objc_msgSend(v14, sel_addSubview_, v13);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView;
  objc_msgSend(v14, sel_addSubview_, *(void *)&v14[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView]);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label;
  objc_msgSend(v13, sel_addSubview_, *(void *)&v14[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label]);
  uint64_t v17 = self;
  id v18 = v13;
  id v19 = objc_msgSend(v17, sel_secondarySystemBackgroundColor);
  objc_msgSend(v18, sel_setBackgroundColor_, v19);

  unint64_t v20 = *(void **)&v11[v12];
  objc_msgSend(v20, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v20, sel_setAlwaysBounceHorizontal_, 1);
  id v21 = *(id *)&v14[v15];
  id v22 = objc_msgSend(v17, sel_separatorColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  objc_msgSend(*(id *)&v14[v16], sel_setUserInteractionEnabled_, 1);
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();

  swift_release();
  return v14;
}

void sub_1C09CEDD8(uint64_t a1)
{
  swift_retain();
  sub_1C151894C();
  swift_release();
  id v2 = sub_1C09CEE74(v3);
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label), sel_setAttributedText_, v2);
}

id sub_1C09CEE74(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
  id v3 = objc_msgSend(self, sel_systemFontOfSize_weight_, 10.0, *MEMORY[0x1E4FB09D0]);
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    id v6 = (uint64_t *)(a1 + 56);
    id v22 = v2;
    while (1)
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v24 = *(v6 - 3);
      uint64_t v9 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C151894C();
      swift_release();
      sub_1C09CFC44((uint64_t)&v26, (uint64_t)v32);
      sub_1C09CFC44((uint64_t)v32, (uint64_t)v33);
      if (sub_1C0263AB8((uint64_t)v33) == 1) {
        goto LABEL_10;
      }
      uint64_t v23 = v8;
      uint64_t v11 = v28;
      uint64_t v10 = v29;
      uint64_t v12 = v30;
      uint64_t v13 = v31;
      sub_1C09CFC44((uint64_t)&v26, (uint64_t)v25);
      swift_bridgeObjectRetain();
      sub_1C02F6040((uint64_t)v25);
      if (!v10) {
        break;
      }
      if (v11 == v24 && v10 == v7)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v14 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          goto LABEL_15;
        }
      }
      if (v12 != v9 || v13 != v23)
      {
LABEL_15:
        id v2 = v22;
        goto LABEL_16;
      }
      id v15 = objc_msgSend(self, sel_labelColor);
      id v2 = v22;
LABEL_17:
      sub_1C09CFCA8(0x747865742E636F64, 0xE800000000000000, v3, v15);
      uint64_t v17 = v16;
      objc_msgSend(v2, sel_appendAttributedString_, v16);

      uint64_t v26 = 47;
      uint64_t v27 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      v25[0] = v9;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v18 = sub_1C09CFE88(v26, v27, v3, v15, v5, 0);
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_appendAttributedString_, v18);

      if (v5 < v4 - 1)
      {
        id v19 = objc_msgSend(self, sel_systemGray2Color);
        id v20 = sub_1C09CFE88(0x2020207C2020, 0xE600000000000000, v3, v19, 0, 1);

        objc_msgSend(v2, sel_appendAttributedString_, v20);
      }

      ++v5;
      v6 += 4;
      if (v4 == v5) {
        goto LABEL_19;
      }
    }
    id v2 = v22;
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_16:
    id v15 = objc_msgSend(self, sel_secondaryLabelColor);
    goto LABEL_17;
  }
LABEL_19:

  swift_bridgeObjectRelease();
  return v2;
}

void sub_1C09CF240(uint64_t a1, uint64_t *a2)
{
}

void sub_1C09CF268(uint64_t a1)
{
  id v2 = v1;
  id v3 = sub_1C09CEE74(a1);
  objc_msgSend(v2, sel_bounds);
  CGRectGetHeight(v34);
  sub_1C151F60C();
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label];
  objc_msgSend(v12, sel_setAttributedText_, v3);
  sub_1C151F73C();
  objc_msgSend(v2, sel_bounds);
  CGRectGetHeight(v35);
  v36.origin.x = v5;
  v36.origin.y = v7;
  v36.size.width = v9;
  v36.size.height = v11;
  CGRectGetHeight(v36);
  sub_1C151F79C();
  objc_msgSend(v12, sel_setFrame_);
  uint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView];
  sub_1C151F81C();
  objc_msgSend(v13, sel_setContentSize_);
  id v32 = v3;
  objc_msgSend(v12, sel_frame);
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  type metadata accessor for FormatTextLink();
  swift_allocObject();
  uint64_t v22 = sub_1BFE2E0B8(v32, v15, v17, v19, v21);
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink;
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink] = v22;
  swift_retain();
  swift_release();
  uint64_t v24 = *(void *)&v2[v23];
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  sub_1BFE6A860(v24, (uint64_t)sub_1C09CFBA8, v25);
  swift_release();
  swift_release();
  swift_release_n();
  objc_msgSend(v13, sel_contentSize);
  double v27 = v26;
  objc_msgSend(v13, sel_bounds);
  if (CGRectGetWidth(v37) >= v27)
  {
    objc_msgSend(v13, sel_setContentOffset_, 0.0, 0.0);
  }
  else
  {
    objc_msgSend(v13, sel_contentSize);
    double v29 = v28;
    objc_msgSend(v13, sel_bounds);
    double v30 = v29 - CGRectGetWidth(v38);
    objc_msgSend(v13, sel_contentInset);
    objc_msgSend(v13, sel_setContentOffset_, v30 + v31, 0.0);
  }
}

id sub_1C09CF588()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView];
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v10);
  id v4 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v4, sel_displayScale);
  double v6 = v5;

  if (v6 < 1.0) {
    double v7 = 1.0;
  }
  else {
    double v7 = 1.0 / v6;
  }
  return objc_msgSend(v2, sel_setFrame_, 0.0, 0.0, Width, v7);
}

uint64_t sub_1C09CF6C4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C15156FC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  objc_super v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC201C(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v18 - v11;
  if (a2)
  {
    uint64_t v15 = sub_1C1515FDC();
    double v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    return v16(a3, 1, 1, v15);
  }
  else
  {
    sub_1C15156BC();
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    if (!v13(v12, 1, v6))
    {
      sub_1BFEC201C(0, &qword_1EB87A570, MEMORY[0x1E4F26EA0], MEMORY[0x1E4FBBE00]);
      sub_1C15155DC();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
      v18[1] = a1;
      sub_1BFF01BC4();
      sub_1C151FF2C();
      sub_1C15155AC();
      swift_bridgeObjectRelease();
      sub_1C151560C();
    }
    if (v13(v12, 1, v6))
    {
      uint64_t v14 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a3, 1, 1, v14);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
      sub_1C151565C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return sub_1C09D043C((uint64_t)v12, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  }
}

uint64_t type metadata accessor for DebugFormatEditorPathView()
{
  return self;
}

uint64_t sub_1C09CFB70()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C09CFBA8(uint64_t a1)
{
  return sub_1C09CE11C(a1, v1);
}

uint64_t sub_1C09CFBB0(uint64_t a1, uint64_t a2)
{
  sub_1BFEC201C(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09CFC44(uint64_t a1, uint64_t a2)
{
  sub_1C017F2CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C09CFCA8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_systemImageNamed_, v6);

  if (v7)
  {
    id v8 = objc_msgSend(self, sel_configurationWithFont_, a3);
    id v9 = objc_msgSend(v7, sel_imageWithConfiguration_, v8);

    id v10 = objc_msgSend(self, sel_textAttachmentWithImage_, v9);
    id v11 = objc_msgSend(self, sel_attributedStringWithAttachment_, v10);
    uint64_t v16 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    v15[0] = a4;
    id v12 = a4;
    uint64_t v13 = (void *)sub_1C151F5FC();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v16 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    v15[0] = a3;
    id v14 = a3;
    sub_1C151F5FC();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C09CFE88(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v64 = a3;
  char v8 = a6 & 1;
  sub_1BFEC201C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v57 - v10;
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  CGFloat v17 = (char *)&v57 - v16;
  sub_1C09CF6C4(a5, v8, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1C09D043C((uint64_t)v11, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v66 = 32;
    unint64_t v67 = 0xE100000000000000;
    sub_1C151E80C();
    sub_1BFEC201C(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    CGFloat v19 = a4;
    double v20 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v21 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    uint64_t v22 = v64;
    *(void *)(inited + 40) = v64;
    uint64_t v23 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(inited + 64) = v21;
    *(void *)(inited + 72) = v23;
    *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    *(void *)(inited + 80) = v19;
    id v24 = v22;
    id v25 = v19;
    id v26 = v20;
    id v27 = v23;
    sub_1BFF991DC(inited);
    id v28 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    double v29 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BFF9A290();
    double v30 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    uint64_t v66 = 32;
    unint64_t v67 = 0xE100000000000000;
    sub_1C151E80C();
    unint64_t v61 = v67;
    uint64_t v62 = v66;
    sub_1BFEC201C(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
    uint64_t v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C152C7F0;
    unint64_t v33 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v32 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v34 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    CGRect v35 = v17;
    unsigned int v60 = v17;
    CGRect v36 = v64;
    *(void *)(v32 + 40) = v64;
    CGRect v37 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(v32 + 64) = v34;
    *(void *)(v32 + 72) = v37;
    uint64_t v38 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    *(void *)(v32 + 80) = a4;
    id v58 = a4;
    unint64_t v39 = (void *)*MEMORY[0x1E4FB06B8];
    *(void *)(v32 + 104) = v38;
    *(void *)(v32 + 112) = v39;
    char v40 = v63;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v63, v35, v12);
    char v41 = (objc_class *)type metadata accessor for FormatAttributedStringLink();
    id v59 = objc_allocWithZone(v41);
    id v42 = v33;
    id v43 = v36;
    id v44 = v37;
    id v45 = v58;
    id v46 = v39;
    uint64_t v47 = sub_1C1515E8C();
    unint64_t v49 = v48;
    uint64_t v50 = (void *)sub_1C151605C();
    sub_1BFE95664(v47, v49);
    v65.receiver = v59;
    v65.super_class = v41;
    id v51 = objc_msgSendSuper2(&v65, sel_initWithData_ofType_, v50, 0);

    uint64_t v52 = *(void (**)(char *, uint64_t))(v13 + 8);
    v52(v40, v12);
    *(void *)(v32 + 144) = v41;
    *(void *)(v32 + 120) = v51;
    sub_1BFF991DC(v32);
    id v53 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    unsigned int v54 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BFF9A290();
    uint64_t v55 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v53, sel_initWithString_attributes_, v54, v55);

    v52(v60, v12);
  }
  return v31;
}

uint64_t sub_1C09D043C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEC201C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C09D04AC()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)sub_1C151AC2C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_linkHandler;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLabelLinkHandler()), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatSwitchCell()
{
  return self;
}

char *sub_1C09D0808(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1CD0]);
  char v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = &v8[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;

  if (a2)
  {
    uint64_t v10 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  v19.receiver = v8;
  v19.super_class = ObjectType;
  id v11 = (char *)objc_msgSendSuper2(&v19, sel_initWithStyle_reuseIdentifier_, 1, v10);

  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl;
  uint64_t v13 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl];
  uint64_t v14 = v11;
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, v14, sel_valueChanged, 4096);
  objc_msgSend(v13, sel_setPreferredStyle_, 2);
  uint64_t v15 = self;
  id v16 = v13;
  id v17 = objc_msgSend(v15, sel_systemBlueColor);
  objc_msgSend(v16, sel_setTintColor_, v17);

  objc_msgSend(v14, sel_setAccessoryView_, *(void *)&v11[v12]);
  return v14;
}

uint64_t FormatPreviewParameters.backgroundColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFDC11A4(v2);
}

__n128 FormatPreviewParameters.edgeInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  __n128 result = *(__n128 *)(v1 + 8);
  long long v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t FormatPreviewParameters.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t sub_1C09D09F0@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v11 = *(void *)(v5 + 48);
  uint64_t v12 = *(void *)(v5 + 56);
  unsigned int v13 = *(unsigned __int8 *)(v5 + 64);
  if (*(unsigned char *)(v5 + 40))
  {
    if (v13 > 0xFD)
    {
      uint64_t v14 = (unsigned int *)MEMORY[0x1E4FAC550];
      goto LABEL_19;
    }
    if ((v13 & 0x80) != 0)
    {
      double Height = CGRectGetHeight(*(CGRect *)&a2);
      v32.origin.x = a2;
      v32.origin.y = a3;
      v32.size.width = a4;
      v32.size.height = a5;
      double Width = CGRectGetWidth(v32);
      if (Width >= Height) {
        double Width = Height;
      }
      double v19 = Width * 0.5;
      sub_1BFEF68AC(v11, v12, v13);
    }
    else
    {
      double v19 = *(double *)(v5 + 48);
      sub_1BFF046A0(*(uint64_t *)&v19, *(void *)(v5 + 56), *(unsigned char *)(v5 + 64));
    }
    long long v29 = *MEMORY[0x1E4FB2848];
    uint64_t v22 = *(void *)(MEMORY[0x1E4FB2848] + 16);
    uint64_t v23 = *(void *)(MEMORY[0x1E4FB2848] + 24);
    swift_bridgeObjectRelease();
    *(_OWORD *)a1 = v29;
    *(void *)(a1 + 16) = v22;
    *(void *)(a1 + 24) = v23;
  }
  else
  {
    uint64_t v16 = *(void *)(v5 + 24);
    uint64_t v15 = *(void *)(v5 + 32);
    uint64_t v17 = *(void *)(v5 + 8);
    uint64_t v18 = *(void *)(v5 + 16);
    if (v13 > 0xFD)
    {
      *(void *)a1 = v17;
      *(void *)(a1 + 8) = v18;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = v15;
      uint64_t v14 = (unsigned int *)MEMORY[0x1E4FAC548];
      goto LABEL_19;
    }
    if ((v13 & 0x80) != 0)
    {
      double v30 = CGRectGetHeight(*(CGRect *)&a2);
      v33.origin.x = a2;
      v33.origin.y = a3;
      v33.size.width = a4;
      v33.size.height = a5;
      double v24 = CGRectGetWidth(v33);
      if (v24 >= v30) {
        double v24 = v30;
      }
      double v19 = v24 * 0.5;
      sub_1BFEF68AC(v11, v12, v13);
    }
    else
    {
      double v19 = *(double *)(v5 + 48);
      sub_1BFF046A0(*(uint64_t *)&v19, *(void *)(v5 + 56), *(unsigned char *)(v5 + 64));
    }
    swift_bridgeObjectRelease();
    *(void *)a1 = v17;
    *(void *)(a1 + 8) = v18;
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v15;
  }
  *(double *)(a1 + 32) = v19;
  uint64_t v14 = (unsigned int *)MEMORY[0x1E4FAC540];
LABEL_19:
  uint64_t v25 = *v14;
  uint64_t v26 = sub_1C151B1FC();
  id v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);
  return v27(a1, v25, v26);
}

BOOL _s8NewsFeed23FormatPreviewParametersV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v7 = *(void *)a2;
  float64x2_t v8 = *(float64x2_t *)(a1 + 24);
  float64x2_t v9 = *(float64x2_t *)(a1 + 8);
  float64x2_t v10 = *(float64x2_t *)(a2 + 24);
  float64x2_t v11 = *(float64x2_t *)(a2 + 8);
  int v12 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  unsigned int v15 = *(unsigned __int8 *)(a2 + 64);
  if ((~*(void *)a1 & 0xF000000000000007) == 0)
  {
    if ((~v7 & 0xF000000000000007) == 0) {
      goto LABEL_10;
    }
LABEL_6:
    sub_1BFDC11A4(v7);
    sub_1BFDC11BC(v2);
    sub_1BFDC11BC(v7);
    return 0;
  }
  uint64_t v25 = *(void *)a1;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_6;
  }
  v23[0] = v7;
  float64x2_t v21 = v9;
  float64x2_t v22 = v8;
  float64x2_t v19 = v11;
  float64x2_t v20 = v10;
  swift_retain_n();
  char v17 = static FormatColor.== infix(_:_:)(&v25, v23);
  swift_release();
  sub_1BFDC11BC(v2);
  float64x2_t v11 = v19;
  float64x2_t v10 = v20;
  float64x2_t v9 = v21;
  float64x2_t v8 = v22;
  if ((v17 & 1) == 0) {
    return 0;
  }
LABEL_10:
  if (v3)
  {
    if (!v12) {
      return 0;
    }
    goto LABEL_15;
  }
  BOOL result = 0;
  if ((v12 & 1) == 0
    && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, v11), (int32x4_t)vceqq_f64(v8, v10))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0)
  {
LABEL_15:
    if (v6 <= 0xFD)
    {
      uint64_t v25 = v5;
      uint64_t v26 = v4;
      char v27 = v6;
      if (v15 <= 0xFD)
      {
        v23[0] = v14;
        v23[1] = v13;
        char v24 = v15;
        sub_1BFEF6828(v5, v4, v6);
        sub_1BFF046A0(v5, v4, v6);
        char v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v25, (uint64_t)v23);
        sub_1BFF04738(v25, v26, v27);
        sub_1BFEF68AC(v5, v4, v6);
        return (v18 & 1) != 0;
      }
      sub_1BFF046A0(v5, v4, v6);
      sub_1BFF046A0(v5, v4, v6);
      sub_1BFF04738(v5, v4, v6);
    }
    else if (v15 > 0xFD)
    {
      return 1;
    }
    sub_1BFEF6828(v14, v13, v15);
    sub_1BFEF68AC(v5, v4, v6);
    sub_1BFEF68AC(v14, v13, v15);
    return 0;
  }
  return result;
}

unint64_t sub_1C09D0E54(uint64_t a1)
{
  unint64_t result = sub_1C09D0E7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09D0E7C()
{
  unint64_t result = qword_1EA1A1EF8;
  if (!qword_1EA1A1EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1EF8);
  }
  return result;
}

unint64_t sub_1C09D0ED0(void *a1)
{
  a1[1] = sub_1BFD880B4();
  a1[2] = sub_1C0020B98();
  unint64_t result = sub_1C09D0F08();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09D0F08()
{
  unint64_t result = qword_1EA1A1F00;
  if (!qword_1EA1A1F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F00);
  }
  return result;
}

void *destroy for FormatPreviewParameters(void *result)
{
  uint64_t v1 = result;
  if ((~*result & 0xF000000000000007) != 0) {
    unint64_t result = (void *)swift_release();
  }
  unsigned int v2 = *((unsigned __int8 *)v1 + 64);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = v1[6];
    uint64_t v4 = v1[7];
    return (void *)sub_1BFF04738(v3, v4, v2);
  }
  return result;
}

uint64_t initializeWithCopy for FormatPreviewParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  unsigned int v5 = *((unsigned __int8 *)a2 + 64);
  if (v5 <= 0xFD)
  {
    uint64_t v7 = a2[6];
    uint64_t v6 = a2[7];
    sub_1BFF046A0(v7, v6, v5);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v6;
    *(unsigned char *)(a1 + 64) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  }
  return a1;
}

uint64_t assignWithCopy for FormatPreviewParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = *a2 & 0xF000000000000007;
  if ((~*(void *)a1 & 0xF000000000000007) == 0)
  {
    if (v5 != 0xF000000000000007)
    {
      *(void *)a1 = v4;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
    sub_1C036EDB0(a1);
    uint64_t v4 = *a2;
LABEL_6:
    *(void *)a1 = v4;
    goto LABEL_8;
  }
  *(void *)a1 = v4;
  swift_retain();
  swift_release();
LABEL_8:
  long long v6 = *(_OWORD *)(a2 + 1);
  long long v7 = *(_OWORD *)(a2 + 3);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  float64x2_t v8 = (_OWORD *)(a1 + 48);
  float64x2_t v9 = a2 + 6;
  unsigned int v10 = *((unsigned __int8 *)a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) <= 0xFDu)
  {
    if (v10 <= 0xFD)
    {
      uint64_t v16 = a2[6];
      uint64_t v15 = a2[7];
      sub_1BFF046A0(v16, v15, v10);
      uint64_t v17 = *(void *)(a1 + 48);
      uint64_t v18 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v16;
      *(void *)(a1 + 56) = v15;
      char v19 = *(unsigned char *)(a1 + 64);
      *(unsigned char *)(a1 + 64) = v10;
      sub_1BFF04738(v17, v18, v19);
    }
    else
    {
      sub_1C02D0F84(a1 + 48);
      char v12 = *((unsigned char *)a2 + 64);
      *float64x2_t v8 = *v9;
      *(unsigned char *)(a1 + 64) = v12;
    }
  }
  else if (v10 <= 0xFD)
  {
    uint64_t v14 = a2[6];
    uint64_t v13 = a2[7];
    sub_1BFF046A0(v14, v13, v10);
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v13;
    *(unsigned char *)(a1 + 64) = v10;
  }
  else
  {
    long long v11 = *v9;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *float64x2_t v8 = v11;
  }
  return a1;
}

uint64_t assignWithTake for FormatPreviewParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((~*(void *)a1 & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v4 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0(a1);
LABEL_4:
    *(void *)a1 = v4;
    goto LABEL_6;
  }
  *(void *)a1 = v4;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  unint64_t v5 = a2 + 6;
  unsigned int v6 = *(unsigned __int8 *)(a1 + 64);
  if (v6 <= 0xFD)
  {
    unsigned int v7 = *((unsigned __int8 *)a2 + 64);
    if (v7 <= 0xFD)
    {
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(a1 + 56);
      *(_OWORD *)(a1 + 48) = *v5;
      *(unsigned char *)(a1 + 64) = v7;
      sub_1BFF04738(v8, v9, v6);
      return a1;
    }
    sub_1C02D0F84(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *v5;
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for FormatPreviewParameters()
{
  return &type metadata for FormatPreviewParameters;
}

void *sub_1C09D129C(double *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  uint64_t v28 = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v26 = *(void *)(a2 + 24);
  uint64_t v27 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v25 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  char v6 = *(unsigned char *)(a2 + 64);
  unsigned int v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E4C4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E4C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, v7);
  uint64_t v9 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1527210;
  uint64_t v13 = (void *)(v12 + v11);
  if ((v6 & 0xFE) == 0x7E)
  {
    sub_1C0433BC8(0xD000000000000010, 0x80000001C1617150, 0xF000000000000007, v13);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v3 = 0;
    char v17 = 1;
  }
  else
  {
    sub_1BFDC11A4(v2);
    sub_1C0433BC8(0xD000000000000010, 0x80000001C1617150, v2, v13);
    uint64_t v16 = v26;
    char v17 = v25 & 1;
    uint64_t v15 = v27;
    uint64_t v14 = v28;
  }
  v33[0] = v14;
  v33[1] = v15;
  v33[2] = v16;
  v33[3] = v3;
  char v34 = v17;
  sub_1C043A010(0x736E492065676445, 0xEB00000000737465, (uint64_t)v33, (void *)((char *)v13 + v10));
  if ((v6 & 0xFE) == 0x7E)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    char v6 = -2;
  }
  else
  {
    sub_1BFEF6828(v4, v5, v6);
  }
  *(void *)&long long v30 = v4;
  *((void *)&v30 + 1) = v5;
  LOBYTE(v31) = v6;
  uint64_t v18 = sub_1C108626C(a1, (uint64_t)&v30);
  sub_1BFEF68AC(v4, v5, v6);
  uint64_t v19 = sub_1C0AF5F74(v12, (uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C0233D40(v19);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0xD000000000000012, 0x80000001C1617170, 0, 0, v20, &v30);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v21 = swift_allocObject();
  *(void *)(inited + 32) = v21;
  *(void *)(v21 + 48) = v32;
  long long v22 = v31;
  *(_OWORD *)(v21 + 16) = v30;
  *(_OWORD *)(v21 + 32) = v22;
  uint64_t v23 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v23;
}

uint64_t sub_1C09D15E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

NewsFeed::ShortcutCommandState_optional __swiftcall ShortcutCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = NewsFeed_ShortcutCommandState_notShortcut;
  }
  else {
    v2.value = NewsFeed_ShortcutCommandState_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t ShortcutCommandState.rawValue.getter(char a1)
{
  if (a1) {
    return 0x74726F6853746F6ELL;
  }
  else {
    return 0x6374726F68537369;
  }
}

uint64_t sub_1C09D16C4(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x74726F6853746F6ELL;
  }
  else {
    uint64_t v3 = 0x6374726F68537369;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007475;
  }
  else {
    unint64_t v4 = 0xEB00000000747563;
  }
  if (*a2) {
    uint64_t v5 = 0x74726F6853746F6ELL;
  }
  else {
    uint64_t v5 = 0x6374726F68537369;
  }
  if (*a2) {
    unint64_t v6 = 0xEB00000000747563;
  }
  else {
    unint64_t v6 = 0xEA00000000007475;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C09D177C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09D180C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09D1888()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09D1914@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C09D1974(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6374726F68537369;
  if (*v1) {
    uint64_t v2 = 0x74726F6853746F6ELL;
  }
  unint64_t v3 = 0xEA00000000007475;
  if (*v1) {
    unint64_t v3 = 0xEB00000000747563;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C09D19C0(uint64_t a1)
{
  unint64_t v2 = sub_1C09D1FFC();
  return MEMORY[0x1F4163458](a1, v2);
}

uint64_t static Commands.Shortcuts.setShortcut.getter()
{
  if (qword_1EB885468 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1C09D1A6C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v2 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_1C09D1B90(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EA194A08 != -1) {
      swift_once();
    }
    id v1 = &qword_1EA1AA288;
  }
  else
  {
    if (qword_1EA194A10 != -1) {
      swift_once();
    }
    id v1 = &qword_1EA1AA290;
  }
  uint64_t v2 = (void *)*v1;
  return v2;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE14toggleShortcut3forACSS_tFZ_0()
{
  sub_1C09D2050(0, &qword_1EA1A1F18, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C09D2050(0, &qword_1EA1A1F20, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1C09D2050(0, (unint64_t *)&unk_1EA1A1F28, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EB885468 != -1) {
    swift_once();
  }
  sub_1C0076614();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C151AEBC();
  sub_1C151AE9C();
  sub_1C151B2DC();
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A80C();
}

unint64_t sub_1C09D1EA0()
{
  unint64_t result = qword_1EA1A1F08;
  if (!qword_1EA1A1F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShortcutCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09D1FC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.Shortcuts()
{
  return &type metadata for Commands.Shortcuts;
}

unint64_t sub_1C09D1FFC()
{
  unint64_t result = qword_1EA1A1F10;
  if (!qword_1EA1A1F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F10);
  }
  return result;
}

void sub_1C09D2050(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0076614();
    unint64_t v7 = a3(a1, &type metadata for ShortcutCommandState, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C09D20B4()
{
  if (!qword_1EB87C860)
  {
    unint64_t v0 = sub_1C151C98C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C860);
    }
  }
}

void sub_1C09D210C()
{
  if (!qword_1EB890B40)
  {
    sub_1C0076614();
    unint64_t v0 = sub_1C151A23C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890B40);
    }
  }
}

uint64_t SportsStandingDataVisualization.with(config:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v24 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v20 = *a1;
  uint64_t v21 = v8;
  uint64_t v10 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v11 = v1[4];
  uint64_t v25 = v1[5];
  uint64_t v12 = v1[7];
  uint64_t v22 = v1[6];
  uint64_t v23 = v6;
  (*(void (**)(uint64_t, uint64_t, __n128))(v13 + 16))(v24, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v4);
  uint64_t v14 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
  uint64_t v15 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata);
  v26[5] = v9;
  uint64_t v27 = v15;
  v26[0] = v20;
  v26[1] = v6;
  v26[2] = v8;
  v26[3] = v7;
  v26[4] = v10;
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v22;
  swift_bridgeObjectRetain();
  sub_1C09D27BC(v15);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(v11, v25, v17, v12, v24, v14, &v27, v26);
  return v16;
}

uint64_t SportsStandingDataVisualization.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsStandingDataVisualization.competitorTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsStandingDataVisualization.umcCanonicalId.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsStandingDataVisualization.leagueTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsStandingDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, a1);
}

uint64_t SportsStandingDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsStandingDataVisualization.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata);
  *a1 = v2;
  return sub_1C09D27BC(v2);
}

uint64_t SportsStandingDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 24);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 32);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1C025C670(v2, v3);
}

uint64_t SportsStandingDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl, a1);
}

uint64_t SportsStandingDataVisualization.routeTag.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8)) {
    BOOL v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16) == 0;
  }
  else {
    BOOL v1 = 1;
  }
  if (!v1) {
    return swift_unknownObjectRetain();
  }
  uint64_t result = *(void *)(v0 + 56);
  if (result) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t SportsStandingDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8)
{
  uint64_t v16 = swift_allocObject();
  SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

void *SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8)
{
  uint64_t v49 = a6;
  uint64_t v53 = a1;
  uint64_t v54 = a5;
  uint64_t v14 = sub_1C1515FDC();
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *a7;
  uint64_t v18 = *a8;
  uint64_t v17 = a8[1];
  uint64_t v19 = (void *)a8[2];
  uint64_t v20 = a8[3];
  uint64_t v22 = a8[4];
  uint64_t v21 = a8[5];
  uint64_t v23 = v54;
  void v8[4] = v53;
  v8[5] = a2;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  v8[6] = a3;
  v8[7] = a4;
  uint64_t v52 = v24;
  uint64_t v53 = a4;
  uint64_t v51 = v25;
  (*(void (**)(uint64_t, uint64_t, __n128))(v25 + 16))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v23, v15);
  uint64_t v26 = 0;
  *(void *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources) = v49;
  *(void *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata) = v44;
  uint64_t v27 = (void *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  uint64_t *v27 = v18;
  v27[1] = v17;
  v27[2] = (uint64_t)v19;
  v27[3] = v20;
  v27[4] = v22;
  v27[5] = v21;
  uint64_t v28 = v18;
  uint64_t v55 = v18;
  uint64_t v56 = v17;
  uint64_t v57 = v19;
  uint64_t v58 = v20;
  uint64_t v29 = v20;
  uint64_t v30 = v22;
  uint64_t v59 = v22;
  uint64_t v60 = v21;
  uint64_t v49 = v21;
  if (v17 && v19)
  {
    swift_unknownObjectRetain();
    uint64_t v26 = v19;
  }
  uint64_t v31 = v28;
  uint64_t v43 = v28;
  uint64_t v45 = v17;
  uint64_t v46 = v29;
  uint64_t v32 = v49;
  sub_1C025C670(v28, v17);
  swift_unknownObjectRetain();
  uint64_t v33 = v48;
  swift_bridgeObjectRetain();
  uint64_t v34 = v54;
  uint64_t v35 = sub_1C0B9CF88(v47, v33, v54, (uint64_t)&v55, v26);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v8[2] = v35;
  v8[3] = v37;
  uint64_t v38 = v45;
  uint64_t v55 = v31;
  uint64_t v56 = v45;
  uint64_t v57 = v19;
  uint64_t v58 = v46;
  uint64_t v59 = v30;
  uint64_t v60 = v32;
  uint64_t v39 = v50;
  sub_1C0B98938(v34, &v55, 0xD000000000000018, 0x80000001C1617270, v50);
  swift_unknownObjectRelease();
  uint64_t v41 = v51;
  uint64_t v40 = v52;
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v34, v52);
  sub_1C025EF94(v43, v38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl, v39, v40);
  return v8;
}

uint64_t sub_1C09D27BC(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t SportsStandingDataVisualization.with(metadata:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v24 = (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  uint64_t v23 = v1[4];
  uint64_t v7 = v1[6];
  uint64_t v25 = v1[5];
  uint64_t v8 = v1[7];
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 16))(v24, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v4);
  uint64_t v22 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
  uint64_t v10 = (void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  uint64_t v11 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  uint64_t v12 = v10[1];
  uint64_t v13 = v10[2];
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[4];
  uint64_t v16 = v10[5];
  v26[0] = v11;
  v26[1] = v12;
  v26[2] = v13;
  v26[3] = v14;
  v26[4] = v15;
  v26[5] = v16;
  uint64_t v27 = v6;
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v17 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v18 = v22;
  swift_bridgeObjectRetain();
  sub_1C025C670(v11, v12);
  uint64_t v19 = v21;
  SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(v17, v25, v7, v8, v24, v18, &v27, v26);
  return v19;
}

uint64_t SportsStandingDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsStandingDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsStandingDataVisualization.init(from:)(void *a1)
{
  uint64_t v4 = *v1;
  uint64_t v54 = (void *)v2;
  uint64_t v55 = v4;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)&v44 - v8;
  sub_1C09D5C78(0, (unint64_t *)&unk_1EB863F70, (unint64_t *)&unk_1EB863F60, MEMORY[0x1E4FAB160], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v50 = (char *)&v44 - v10;
  sub_1C09D5C78(0, &qword_1EB863F00, (unint64_t *)&qword_1EB86B310, MEMORY[0x1E4FBB320], MEMORY[0x1E4FAB160]);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v44 - v12;
  sub_1C09D60E0(0, &qword_1EA1A1F38, (uint64_t (*)(void))sub_1C09D5CF4, (uint64_t)&type metadata for SportsStandingDataVisualization.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v14 = v13;
  uint64_t v15 = *((void *)v13 - 1);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v44 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09D5CF4();
  uint64_t v18 = v1;
  uint64_t v19 = (uint64_t)v54;
  sub_1C1520EBC();
  if (v19)
  {
LABEL_11:
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (char *)v18;
  }
  uint64_t v20 = v51;
  uint64_t v54 = a1;
  LOBYTE(v56) = 0;
  sub_1C09D5EA4((unint64_t *)&unk_1EB863EF0);
  uint64_t v21 = v52;
  sub_1C15206EC();
  uint64_t v22 = v53;
  sub_1C151948C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v21);
  v18[4] = v56;
  LOBYTE(v56) = 1;
  v18[5] = sub_1C152069C();
  v18[6] = v23;
  uint64_t v53 = v14;
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB160];
  sub_1C09D5C10(0, (unint64_t *)&unk_1EB863F60, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, MEMORY[0x1E4FAB160]);
  uint64_t v26 = v25;
  LOBYTE(v56) = 4;
  sub_1C09D5F20((unint64_t *)&unk_1EB863F50, (unint64_t *)&unk_1EB863F60, v24);
  uint64_t v27 = (uint64_t)v50;
  sub_1C152065C();
  uint64_t v45 = v18;
  uint64_t v52 = 0;
  uint64_t v28 = v17;
  uint64_t v29 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v26) == 1)
  {
    sub_1C09D5D58(v27);
    uint64_t v30 = 0;
  }
  else
  {
    sub_1C151948C();
    uint64_t v30 = v56;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v26);
  }
  uint64_t v32 = v48;
  uint64_t v31 = v49;
  uint64_t v33 = v47;
  v18[7] = v30;
  LOBYTE(v56) = 2;
  sub_1C09D5DEC((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
  uint64_t v35 = v52;
  uint64_t v34 = v53;
  sub_1C15206EC();
  if (v35)
  {
    (*(void (**)(char *, char *))(v15 + 8))(v28, v34);
    uint64_t v42 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v42) {
      swift_unknownObjectRelease();
    }
    uint64_t v18 = v45;
    a1 = v54;
    goto LABEL_11;
  }
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v36((char *)v45 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v33, v31);
  sub_1C09D67A0(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
  char v59 = 3;
  sub_1C09D5F78(&qword_1EB86B2E0, &qword_1EB86A8C0);
  sub_1C15206EC();
  *(void *)((char *)v45 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources) = v56;
  char v59 = 5;
  sub_1C09D5E34();
  sub_1C152065C();
  *(void *)((char *)v45 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata) = v56;
  char v59 = 6;
  sub_1C025F15C();
  sub_1C152065C();
  uint64_t v37 = (_OWORD *)((char *)v45 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  long long v38 = v57;
  _OWORD *v37 = v56;
  v37[1] = v38;
  v37[2] = v58;
  LOBYTE(v56) = 7;
  uint64_t v39 = sub_1C152069C();
  uint64_t v40 = (char *)v45;
  v45[2] = v39;
  *((void *)v40 + 3) = v41;
  LOBYTE(v56) = 8;
  sub_1C15206EC();
  (*(void (**)(void, char *))(v15 + 8))(0, v34);
  v36(&v40[OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl], v46, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v40;
}

uint64_t SportsStandingDataVisualization.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1C09D5C78(0, (unint64_t *)&unk_1EB863F70, (unint64_t *)&unk_1EB863F60, MEMORY[0x1E4FAB160], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v30 = (uint64_t)&v30 - v5;
  uint64_t v6 = sub_1C151829C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09D5C78(0, &qword_1EB863F00, (unint64_t *)&qword_1EB86B310, MEMORY[0x1E4FBB320], MEMORY[0x1E4FAB160]);
  uint64_t v36 = v10;
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v35 = (char *)&v30 - v11;
  sub_1C09D60E0(0, &qword_1EA1A1F58, (uint64_t (*)(void))sub_1C09D5CF4, (uint64_t)&type metadata for SportsStandingDataVisualization.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v34 = v12;
  uint64_t v32 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09D5CF4();
  sub_1C1520F0C();
  uint64_t v31 = v2;
  *(void *)&long long v38 = *(void *)(v2 + 32);
  uint64_t v15 = qword_1EB85E820;
  swift_bridgeObjectRetain_n();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB85AAB0);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C09D5C10(0, (unint64_t *)&qword_1EB86B310, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, MEMORY[0x1E4FBB320]);
  *(&v30 - 2) = v19;
  *(&v30 - 1) = sub_1C09D5F20((unint64_t *)&unk_1EB86B320, (unint64_t *)&qword_1EB86B310, v18);
  swift_getKeyPath();
  uint64_t v20 = v35;
  sub_1C15194AC();
  swift_bridgeObjectRelease();
  LOBYTE(v38) = 0;
  sub_1C09D5EA4(&qword_1EB863EE8);
  uint64_t v21 = v34;
  uint64_t v22 = v36;
  uint64_t v23 = v37;
  sub_1C152080C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v22);
  if (!v23)
  {
    uint64_t v24 = v31;
    LOBYTE(v38) = 1;
    sub_1C15207CC();
    uint64_t v25 = swift_unknownObjectRetain();
    uint64_t v26 = v30;
    sub_1C09D3C50(v25, v30);
    LOBYTE(v38) = 4;
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB160];
    sub_1C09D5C10(0, (unint64_t *)&unk_1EB863F60, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, MEMORY[0x1E4FAB160]);
    sub_1C09D5F20((unint64_t *)&unk_1EB863F40, (unint64_t *)&unk_1EB863F60, v27);
    sub_1C152078C();
    sub_1C09D5D58(v26);
    LOBYTE(v38) = 2;
    sub_1C1515FDC();
    sub_1C09D5DEC((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    sub_1C152080C();
    *(void *)&long long v38 = *(void *)(v24 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
    char v41 = 3;
    sub_1C09D67A0(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C09D5F78((unint64_t *)&qword_1EB86B2D0, (unint64_t *)&unk_1EB86A8B0);
    sub_1C152080C();
    *(void *)&long long v38 = *(void *)(v24 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata);
    char v41 = 5;
    sub_1C09D6038();
    sub_1C152078C();
    long long v29 = *(_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16);
    long long v38 = *(_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
    long long v39 = v29;
    long long v40 = *(_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 32);
    char v41 = 6;
    sub_1C025F3F0();
    sub_1C152078C();
    LOBYTE(v38) = 7;
    sub_1C15207CC();
    LOBYTE(v38) = 8;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v21);
}

uint64_t sub_1C09D3C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151829C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09D5C78(0, (unint64_t *)&unk_1EB863F70, (unint64_t *)&unk_1EB863F60, MEMORY[0x1E4FAB160], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v19 - v9;
  v19[1] = a1;
  uint64_t v11 = qword_1EB85E820;
  swift_unknownObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB85AAB0);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  MEMORY[0x1F4188790](v13);
  v19[-2] = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
  swift_getKeyPath();
  sub_1C151946C();
  swift_unknownObjectRelease();
  sub_1C09D5C10(0, (unint64_t *)&unk_1EB863F60, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, MEMORY[0x1E4FAB160]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v14))
  {
    sub_1C09D5D58((uint64_t)v10);
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

unint64_t sub_1C09D3F3C(char a1)
{
  unint64_t result = 0x74697465706D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6E6143636D75;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x615465756761656CLL;
      break;
    case 5:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 6:
      unint64_t result = 0x6769666E6F63;
      break;
    case 7:
      unint64_t result = 0x696669746E656469;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C09D4088(char a1)
{
  unint64_t result = 0x74697465706D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6E6143636D75;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x615465756761656CLL;
      break;
    case 5:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 6:
      unint64_t result = 0x6769666E6F63;
      break;
    case 7:
      unint64_t result = 0x696669746E656469;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C09D41D4(unsigned __int8 *a1, char *a2)
{
  return sub_1C1479DE0(*a1, *a2);
}

uint64_t sub_1C09D41E0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09D4228()
{
  return sub_1C044790C();
}

uint64_t sub_1C09D4230()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09D4274@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09D6754();
  *a1 = result;
  return result;
}

unint64_t sub_1C09D42A4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C09D3F3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C09D42D0()
{
  return sub_1C09D4088(*v0);
}

uint64_t sub_1C09D42D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09D6754();
  *a1 = result;
  return result;
}

uint64_t sub_1C09D4300(uint64_t a1)
{
  unint64_t v2 = sub_1C09D5CF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09D433C(uint64_t a1)
{
  unint64_t v2 = sub_1C09D5CF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsStandingDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl;
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  sub_1C09D5D48(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata));
  sub_1C025EF94(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsStandingDataVisualization.__deallocating_deinit()
{
  SportsStandingDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1C09D44C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsStandingDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C09D4518(void *a1)
{
  return SportsStandingDataVisualization.encode(to:)(a1);
}

uint64_t static SportsStandingDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t SportsStandingDataVisualizationMetadata.backingTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsStandingDataVisualizationMetadata.init(backingTag:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SportsStandingDataVisualizationMetadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1C09D5C78(0, (unint64_t *)&unk_1EB863F70, (unint64_t *)&unk_1EB863F60, MEMORY[0x1E4FAB160], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v20 = (char *)&v19 - v5;
  sub_1C09D60E0(0, &qword_1EA1A1F70, (uint64_t (*)(void))sub_1C09D608C, (uint64_t)&type metadata for SportsStandingDataVisualizationMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v19 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09D608C();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v11 = v8;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB160];
    sub_1C09D5C10(0, (unint64_t *)&unk_1EB863F60, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, MEMORY[0x1E4FAB160]);
    uint64_t v14 = v13;
    sub_1C09D5F20((unint64_t *)&unk_1EB863F50, (unint64_t *)&unk_1EB863F60, v12);
    uint64_t v15 = (uint64_t)v20;
    sub_1C152065C();
    uint64_t v16 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v15, 1, v14) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v7);
      sub_1C09D5D58(v15);
      uint64_t v17 = 0;
    }
    else
    {
      sub_1C151948C();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v7);
      uint64_t v17 = v21;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v14);
    }
    *uint64_t v19 = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t SportsStandingDataVisualizationMetadata.encode(to:)(void *a1)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB160];
  sub_1C09D5C78(0, (unint64_t *)&unk_1EB863F70, (unint64_t *)&unk_1EB863F60, MEMORY[0x1E4FAB160], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v13 - v3;
  sub_1C09D60E0(0, (unint64_t *)&unk_1EA1A1F80, (uint64_t (*)(void))sub_1C09D608C, (uint64_t)&type metadata for SportsStandingDataVisualizationMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09D608C();
  sub_1C1520F0C();
  uint64_t v10 = swift_unknownObjectRetain();
  sub_1C09D3C50(v10, (uint64_t)v4);
  uint64_t v11 = v14;
  sub_1C09D5C10(0, (unint64_t *)&unk_1EB863F60, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, v14);
  sub_1C09D5F20((unint64_t *)&unk_1EB863F40, (unint64_t *)&unk_1EB863F60, v11);
  sub_1C152078C();
  sub_1C09D5D58((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C09D4B38()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09D4B90()
{
  return sub_1C151E77C();
}

uint64_t sub_1C09D4BAC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09D4C00@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C09D4C54(void *a1@<X8>)
{
  *a1 = 0x54676E696B636162;
  a1[1] = 0xEA00000000006761;
}

uint64_t sub_1C09D4C74()
{
  return 0x54676E696B636162;
}

uint64_t sub_1C09D4C90@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C09D4CE8(uint64_t a1)
{
  unint64_t v2 = sub_1C09D608C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09D4D24(uint64_t a1)
{
  unint64_t v2 = sub_1C09D608C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C09D4D60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsStandingDataVisualizationMetadata.init(from:)(a1, a2);
}

uint64_t sub_1C09D4D78(void *a1)
{
  return SportsStandingDataVisualizationMetadata.encode(to:)(a1);
}

void *sub_1C09D4D90(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v117 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09D67A0(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v116 = (void *)((char *)&v109 - v6);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v109 - v12;
  if (a1)
  {
    uint64_t v131 = v11;
    uint64_t v132 = v10;
    sub_1C01B2D70();
    uint64_t inited = swift_initStackObject();
    long long v109 = xmmword_1C1529AE0;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1C09D67A0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    uint64_t v138 = v2;
    uint64_t v14 = v3;
    uint64_t v16 = v15;
    sub_1C0181BEC(0);
    uint64_t v137 = v17;
    uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v19 = *(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
    uint64_t v20 = (v19 + 32) & ~v19;
    uint64_t v129 = v19 | 7;
    uint64_t v130 = v16;
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C152A660;
    uint64_t v110 = v21;
    uint64_t v135 = v20;
    uint64_t v22 = (void *)(v21 + v20);
    uint64_t v24 = *(void *)(a1 + 40);
    long long v147 = *(void (**)(void, void, void, void))(a1 + 48);
    uint64_t v23 = v147;
    uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v26 = (char *)v22 + *(int *)(v25 + 24);
    *(void *)uint64_t v26 = v24;
    *((void *)v26 + 1) = v23;
    uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = *(void *)(v27 - 8);
    long long v144 = *(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
    uint64_t v145 = v27;
    uint64_t v143 = v28 + 56;
    v144(v26, 0, 1, v27);
    void *v22 = 0xD000000000000010;
    v22[1] = 0x80000001C1608E60;
    v22[2] = 0;
    v22[3] = 0;
    long long v29 = (char *)v22 + *(int *)(v25 + 28);
    *(void *)long long v29 = 0;
    *((void *)v29 + 1) = 0;
    v29[16] = -1;
    uint64_t v30 = *(void *)(v25 - 8);
    uint64_t v31 = *(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56);
    uint64_t v32 = a1;
    uint64_t v33 = v30 + 56;
    v31(v22, 0, 1, v25);
    uint64_t v112 = v22;
    uint64_t v139 = v18;
    uint64_t v34 = (void *)((char *)v22 + v18);
    uint64_t v35 = v25;
    uint64_t v36 = (void (*)(void, void, void, void))v31;
    uint64_t v37 = *(char **)(v14 + 16);
    uint64_t v38 = v138;
    uint64_t v134 = v14 + 16;
    ((void (*)(char *, uint64_t, uint64_t))v37)(v13, v32 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v138);
    uint64_t v142 = v14;
    uint64_t v127 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v128 = v14 + 56;
    v127(v13, 0, 1, v38);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C04338EC(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v13, v34);
    uint64_t v146 = v33;
    long long v147 = v36;
    v36(v34, 0, 1, v35);
    uint64_t v39 = v32;
    unint64_t v40 = *(void *)(v32 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
    if (v40 >> 62) {
      goto LABEL_30;
    }
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v136 = v35;
      uint64_t v111 = v39;
      if (!v41) {
        break;
      }
      uint64_t v154 = MEMORY[0x1E4FBC860];
      uint64_t result = (void *)sub_1C05F6B44(0, v41 & ~(v41 >> 63), 0);
      if (v41 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v43 = 0;
      uint64_t v44 = v154;
      uint64_t v133 = 2 * v139;
      uint64_t v123 = v135 + 3 * v139;
      unint64_t v124 = v40 & 0xC000000000000001;
      long long v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
      uint64_t v114 = (void (**)(uint64_t, uint64_t))(v142 + 8);
      uint64_t v115 = (void (**)(char *, char *, uint64_t))(v142 + 32);
      long long v121 = xmmword_1C152C7F0;
      uint64_t v45 = MEMORY[0x1E4FBB1A0];
      long long v119 = xmmword_1C1536B40;
      long long v118 = xmmword_1C1536B50;
      uint64_t v39 = v134;
      uint64_t v125 = v41;
      uint64_t v126 = v37;
      unint64_t v120 = v40;
      while (v41 != v43)
      {
        uint64_t v141 = v44;
        uint64_t v142 = v43;
        if (v124)
        {
          uint64_t v46 = (void *)MEMORY[0x1C18C7CB0](v43, v40);
        }
        else
        {
          uint64_t v46 = *(void **)(v40 + 8 * v43 + 32);
          swift_retain();
        }
        uint64_t v47 = v133;
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = v121;
        uint64_t v140 = v48;
        uint64_t v49 = (void *)(v48 + v135);
        uint64_t v50 = v46[2];
        unint64_t v51 = v46[3];
        sub_1C025F810(v50, v51);
        sub_1C0436838(0x20746E65746E6F43, 0xEC00000065707954, v50, v51, v49);
        v147(v49, 0, 1, v35);
        uint64_t v52 = (char *)v49 + v139;
        uint64_t v53 = v46[5];
        *(void *)&long long v153 = v46[4];
        *((void *)&v153 + 1) = v53;
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          uint64_t v54 = &v52[*(int *)(v35 + 24)];
          *(void *)uint64_t v54 = v148;
          uint64_t v55 = v145;
          swift_storeEnumTagMultiPayload();
          v144(v54, 0, 1, v55);
          *(_OWORD *)uint64_t v52 = v119;
          *((void *)v52 + 2) = 0;
          *((void *)v52 + 3) = 0;
          long long v56 = &v52[*(int *)(v35 + 28)];
          *(void *)long long v56 = 0;
          *((void *)v56 + 1) = 0;
          v56[16] = -1;
        }
        else
        {
          *((void *)&v149 + 1) = v45;
          uint64_t v150 = (char **)MEMORY[0x1E4FBB208];
          long long v148 = v153;
          sub_1BFC773DC(&v148, (uint64_t)v152);
          long long v57 = __swift_project_boxed_opaque_existential_1(v152, v152[3]);
          uint64_t v58 = *v57;
          uint64_t v59 = v57[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v60 = (uint64_t)v116;
          *uint64_t v116 = v58;
          *(void *)(v60 + 8) = v59;
          uint64_t v35 = v136;
          uint64_t v61 = v145;
          swift_storeEnumTagMultiPayload();
          v144((char *)v60, 0, 1, v61);
          *(_OWORD *)uint64_t v52 = v119;
          *((void *)v52 + 2) = 0;
          *((void *)v52 + 3) = 0;
          sub_1C025F820(v60, (uint64_t)&v52[*(int *)(v35 + 24)]);
          uint64_t v62 = &v52[*(int *)(v35 + 28)];
          *(void *)uint64_t v62 = 0;
          *((void *)v62 + 1) = 0;
          v62[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v152);
        }
        swift_bridgeObjectRelease();
        v147(v52, 0, 1, v35);
        uint64_t v63 = (char *)v49 + v47;
        uint64_t v64 = v131;
        uint64_t v65 = v138;
        uint64_t v66 = v126;
        ((void (*)(uint64_t, char *, uint64_t))v126)(v131, (char *)v46 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v138);
        v127((char *)v64, 0, 1, v65);
        uint64_t v67 = v132;
        sub_1C0025B10(v64, v132);
        if ((*v122)(v67, 1, v65) == 1)
        {
          sub_1BFDDDA14(v64, (uint64_t (*)(void))sub_1BFF00BEC);
          v144(&v63[*(int *)(v35 + 24)], 1, 1, v145);
          *(_OWORD *)uint64_t v63 = v118;
          *((void *)v63 + 2) = 0;
          *((void *)v63 + 3) = 0;
          unint64_t v68 = &v63[*(int *)(v35 + 28)];
          *(void *)unint64_t v68 = 0;
          *((void *)v68 + 1) = 0;
          v68[16] = -1;
        }
        else
        {
          uint64_t v69 = v35;
          uint64_t v70 = v64;
          unsigned int v71 = v117;
          ((void (*)(char *, uint64_t, uint64_t))v66)(v117, v67, v65);
          sub_1BFDDDA14(v70, (uint64_t (*)(void))sub_1BFF00BEC);
          uint64_t v72 = *(int *)(v69 + 24);
          uint64_t v39 = v134;
          unint64_t v73 = &v63[v72];
          (*v115)(&v63[v72], v71, v65);
          uint64_t v74 = v145;
          swift_storeEnumTagMultiPayload();
          unsigned int v75 = v73;
          uint64_t v35 = v136;
          v144(v75, 0, 1, v74);
          *(_OWORD *)uint64_t v63 = v118;
          *((void *)v63 + 2) = 0;
          *((void *)v63 + 3) = 0;
          uint64_t v76 = &v63[*(int *)(v35 + 28)];
          *(void *)uint64_t v76 = 0;
          *((void *)v76 + 1) = 0;
          v76[16] = -1;
          (*v114)(v67, v65);
        }
        unint64_t v40 = v120;
        v147(v63, 0, 1, v35);
        sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, v140, v155);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((void *)&v149 + 1) = &type metadata for FormatInspectionGroup;
        uint64_t v150 = &off_1F1BDEC90;
        uint64_t v77 = swift_allocObject();
        *(void *)&long long v148 = v77;
        swift_release();
        *(void *)(v77 + 48) = v156;
        long long v78 = v155[1];
        *(_OWORD *)(v77 + 16) = v155[0];
        *(_OWORD *)(v77 + 32) = v78;
        uint64_t v79 = v142;
        uint64_t v154 = v141;
        unint64_t v81 = *(void *)(v141 + 16);
        unint64_t v80 = *(void *)(v141 + 24);
        if (v81 >= v80 >> 1) {
          sub_1C05F6B44(v80 > 1, v81 + 1, 1);
        }
        uint64_t v43 = v79 + 1;
        uint64_t v82 = *((void *)&v149 + 1);
        uint64_t v83 = (uint64_t)v150;
        uint64_t v84 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v148, *((uint64_t *)&v149 + 1));
        __n128 v85 = MEMORY[0x1F4188790](v84);
        uint64_t v37 = (char *)&v109 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v87 + 16))(v37, v85);
        sub_1BFEA7C90(v81, (uint64_t)v37, &v154, v82, v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
        uint64_t v44 = v154;
        uint64_t v41 = v125;
        uint64_t v45 = MEMORY[0x1E4FBB1A0];
        if (v125 == v43)
        {
          swift_bridgeObjectRelease();
          uint64_t v39 = v111;
          uint64_t v88 = v133;
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1C15204BC();
    }
    swift_bridgeObjectRelease();
    uint64_t v88 = 2 * v139;
    uint64_t v44 = MEMORY[0x1E4FBC860];
LABEL_25:
    uint64_t v145 = inited + 32;
    uint64_t v90 = (void *)((char *)v112 + v88);
    uint64_t v91 = sub_1C0233FC8(v44);
    swift_bridgeObjectRelease();
    uint64_t v92 = sub_1C131B79C(v91);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x756F532061746144, 0xEC00000073656372, (uint64_t)v92, 0, 0, v90);
    v147(v90, 0, 1, v35);
    uint64_t v93 = (void *)(v39 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
    uint64_t v95 = *(void (**)(char *, void, uint64_t, uint64_t))(v39
                                                                  + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
    uint64_t v94 = v93[1];
    uint64_t v96 = v93[2];
    uint64_t v97 = v93[3];
    uint64_t v99 = (char **)v93[4];
    uint64_t v98 = v93[5];
    if (v94)
    {
      swift_bridgeObjectRetain();
      long long v144 = v95;
    }
    else
    {
      long long v144 = 0;
    }
    long long v100 = (void *)((char *)v112 + 3 * v139);
    sub_1BFE70080(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
    uint64_t v101 = swift_initStackObject();
    *(_OWORD *)(v101 + 16) = v109;
    *(void *)&long long v148 = v95;
    *((void *)&v148 + 1) = v94;
    *(void *)&long long v149 = v96;
    *((void *)&v149 + 1) = v97;
    uint64_t v150 = v99;
    uint64_t v151 = v98;
    long long v102 = sub_1C0B9C40C((uint64_t *)&v148);
    *(void *)(v101 + 56) = &type metadata for FormatInspection;
    *(void *)(v101 + 64) = &off_1F1C29D30;
    *(void *)(v101 + 32) = v102;
    uint64_t v103 = sub_1C0233FC8(v101);
    swift_setDeallocating();
    sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
    swift_arrayDestroy();
    uint64_t v104 = sub_1C131B79C(v103);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x6769666E6F43, 0xE600000000000000, (uint64_t)v104, (uint64_t)v144, v94, v100);
    v147(v100, 0, 1, v136);
    sub_1C09BCFA4(0x676E69646E617453, 0xE800000000000000, 0, 0, v110, &v148);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v105 = inited;
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v105 + 64) = &off_1F1BDEC90;
    uint64_t v106 = swift_allocObject();
    *(void *)(v105 + 32) = v106;
    *(void *)(v106 + 48) = v150;
    long long v107 = v149;
    *(_OWORD *)(v106 + 16) = v148;
    *(_OWORD *)(v106 + 32) = v107;
    uint64_t v108 = sub_1C131B79C(v105);
    swift_setDeallocating();
    sub_1BFE70080(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    swift_release();
    return v108;
  }
  else
  {
    uint64_t v89 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v89);
  }
}

void sub_1C09D5C10(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC9DBE8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C09D5C78(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C09D5C10(255, a3, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C09D5CF4()
{
  unint64_t result = qword_1EA1A1F40;
  if (!qword_1EA1A1F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F40);
  }
  return result;
}

uint64_t sub_1C09D5D48(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C09D5D58(uint64_t a1)
{
  sub_1C09D5C78(0, (unint64_t *)&unk_1EB863F70, (unint64_t *)&unk_1EB863F60, MEMORY[0x1E4FAB160], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C09D5DEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09D5E34()
{
  unint64_t result = qword_1EA1A1F48;
  if (!qword_1EA1A1F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F48);
  }
  return result;
}

uint64_t sub_1C09D5E8C()
{
  return 16;
}

__n128 sub_1C09D5E98(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C09D5EA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C09D5C78(255, &qword_1EB863F00, (unint64_t *)&qword_1EB86B310, MEMORY[0x1E4FBB320], MEMORY[0x1E4FAB160]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C09D5F20(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C09D5C10(255, a2, (unint64_t *)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C09D5F78(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C09D67A0(255, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C09D5DEC(a2, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09D6038()
{
  unint64_t result = qword_1EA1A1F60;
  if (!qword_1EA1A1F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F60);
  }
  return result;
}

unint64_t sub_1C09D608C()
{
  unint64_t result = qword_1EA1A1F78;
  if (!qword_1EA1A1F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F78);
  }
  return result;
}

void sub_1C09D60E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C09D6148()
{
  return type metadata accessor for SportsStandingDataVisualization();
}

uint64_t type metadata accessor for SportsStandingDataVisualization()
{
  uint64_t result = qword_1EB869640;
  if (!qword_1EB869640) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09D619C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SportsStandingDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsStandingDataVisualization);
}

uint64_t dispatch thunk of SportsStandingDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of SportsStandingDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

void *initializeBufferWithCopyOfBuffer for SportsStandingDataVisualizationMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for SportsStandingDataVisualizationMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *assignWithTake for SportsStandingDataVisualizationMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsStandingDataVisualizationMetadata()
{
  return &type metadata for SportsStandingDataVisualizationMetadata;
}

unsigned char *storeEnumTagSinglePayload for SportsStandingDataVisualizationMetadata.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C09D6408);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingDataVisualizationMetadata.CodingKeys()
{
  return &type metadata for SportsStandingDataVisualizationMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SportsStandingDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09D650CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingDataVisualization.CodingKeys()
{
  return &type metadata for SportsStandingDataVisualization.CodingKeys;
}

unint64_t sub_1C09D6548()
{
  unint64_t result = qword_1EA1A1F90;
  if (!qword_1EA1A1F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F90);
  }
  return result;
}

unint64_t sub_1C09D65A0()
{
  unint64_t result = qword_1EA1A1F98;
  if (!qword_1EA1A1F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1F98);
  }
  return result;
}

unint64_t sub_1C09D65F8()
{
  unint64_t result = qword_1EA1A1FA0;
  if (!qword_1EA1A1FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1FA0);
  }
  return result;
}

unint64_t sub_1C09D6650()
{
  unint64_t result = qword_1EA1A1FA8;
  if (!qword_1EA1A1FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1FA8);
  }
  return result;
}

unint64_t sub_1C09D66A8()
{
  unint64_t result = qword_1EA1A1FB0;
  if (!qword_1EA1A1FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1FB0);
  }
  return result;
}

unint64_t sub_1C09D6700()
{
  unint64_t result = qword_1EA1A1FB8;
  if (!qword_1EA1A1FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1FB8);
  }
  return result;
}

uint64_t sub_1C09D6754()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

void sub_1C09D67A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C09D6804()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C09D684C()
{
  if (!qword_1EB85ABE0)
  {
    sub_1C09D5C10(255, (unint64_t *)&unk_1EB85ABD0, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, MEMORY[0x1E4FAB160]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85ABE0);
    }
  }
}

uint64_t sub_1C09D68D4()
{
  return 8;
}

void *sub_1C09D68E0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t FormatLayeredMediaNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatLayeredMediaNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatLayeredMediaNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t v5 = *(void *)(v1 + 128);
  uint64_t v6 = *(void *)(v1 + 136);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t v8 = *(void *)(v1 + 152);
  uint64_t v9 = *(void *)(v1 + 160);
  uint64_t v10 = *(void *)(v1 + 168);
  uint64_t v11 = *(void *)(v1 + 176);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 184);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatLayeredMediaNodeStyle.video.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 200);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 208);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.motion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 216);
  uint64_t v3 = *(void *)(v1 + 224);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 232);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 233);
}

uint64_t FormatLayeredMediaNodeStyle.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09D6BAC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v276 = v1[4];
  swift_beginAccess();
  v277 = v1;
  uint64_t v6 = v1[6];
  swift_beginAccess();
  uint64_t v278 = a1;
  uint64_t v7 = *(void *)(a1 + 48);
  v361 = (void *)MEMORY[0x1E4FBC868];
  int64_t v8 = *(void *)(v6 + 16);
  int64_t v9 = *(void *)(v7 + 16);
  if (__OFADD__(v8, v9)) {
    goto LABEL_90;
  }
  uint64_t v275 = v4;
  sub_1C09DA730();
  swift_bridgeObjectRetain();
  uint64_t v273 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E3AC();
  uint64_t v10 = sub_1BFEF692C(0, v8, 0, MEMORY[0x1E4FBC860]);
  uint64_t v11 = *(void *)(v6 + 16);
  uint64_t v280 = v7;
  uint64_t v282 = v6;
  uint64_t v274 = v3;
  if (!v11) {
    goto LABEL_20;
  }
  int64_t v279 = v9;
  swift_bridgeObjectRetain();
  long long v12 = *(_OWORD *)(v6 + 192);
  long long v357 = *(_OWORD *)(v6 + 176);
  long long v358 = v12;
  long long v13 = *(_OWORD *)(v6 + 224);
  long long v359 = *(_OWORD *)(v6 + 208);
  long long v360 = v13;
  long long v14 = *(_OWORD *)(v6 + 128);
  long long v353 = *(_OWORD *)(v6 + 112);
  long long v354 = v14;
  long long v15 = *(_OWORD *)(v6 + 160);
  long long v355 = *(_OWORD *)(v6 + 144);
  long long v356 = v15;
  long long v16 = *(_OWORD *)(v6 + 48);
  long long v17 = *(_OWORD *)(v6 + 80);
  long long v18 = *(_OWORD *)(v6 + 96);
  long long v350 = *(_OWORD *)(v6 + 64);
  long long v351 = v17;
  long long v352 = v18;
  long long v19 = *(_OWORD *)(v6 + 32);
  long long v349 = v16;
  long long v348 = v19;
  uint64_t v20 = *((void *)&v19 + 1);
  uint64_t v21 = v11 - 1;
  for (uint64_t i = 240; ; i += 208)
  {
    uint64_t v23 = v348;
    sub_1C05DCC88((uint64_t)&v348);
    sub_1C05DCC88((uint64_t)&v348);
    swift_bridgeObjectRetain();
    uint64_t v24 = v361;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v324 = v24;
    unint64_t v27 = sub_1BFEF2D8C(v23, v20);
    uint64_t v28 = v24[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29))
    {
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v31 = v26;
    if (v24[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v26) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C1071228();
        if (v31) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C105E6C4(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_1BFEF2D8C(v23, v20);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_91;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_11:
        uint64_t v34 = (void *)v324;
        uint64_t v35 = (long long *)(*(void *)(v324 + 56) + 208 * v27);
        long long v336 = *v35;
        long long v36 = v35[3];
        long long v38 = v35[1];
        long long v37 = v35[2];
        long long v340 = v35[4];
        long long v339 = v36;
        long long v337 = v38;
        long long v338 = v37;
        long long v39 = v35[7];
        long long v41 = v35[5];
        long long v40 = v35[6];
        long long v344 = v35[8];
        long long v343 = v39;
        long long v341 = v41;
        long long v342 = v40;
        long long v42 = v35[11];
        long long v44 = v35[9];
        long long v43 = v35[10];
        long long v347 = v35[12];
        long long v346 = v42;
        *(_OWORD *)v345 = v44;
        *(_OWORD *)&v345[16] = v43;
        sub_1C05DCDB4((uint64_t)&v336);
        *uint64_t v35 = v348;
        long long v45 = v352;
        long long v46 = v350;
        long long v47 = v349;
        v35[3] = v351;
        v35[4] = v45;
        v35[1] = v47;
        void v35[2] = v46;
        long long v48 = v356;
        long long v49 = v354;
        long long v50 = v353;
        v35[7] = v355;
        v35[8] = v48;
        v35[5] = v50;
        v35[6] = v49;
        long long v51 = v360;
        long long v52 = v358;
        long long v53 = v357;
        v35[11] = v359;
        v35[12] = v51;
        v35[9] = v53;
        v35[10] = v52;
        goto LABEL_15;
      }
    }
    uint64_t v34 = (void *)v324;
    *(void *)(v324 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    uint64_t v54 = (uint64_t *)(v34[6] + 16 * v27);
    uint64_t *v54 = v23;
    v54[1] = v20;
    uint64_t v55 = (_OWORD *)(v34[7] + 208 * v27);
    long long v56 = v360;
    long long v57 = v359;
    long long v58 = v358;
    v55[9] = v357;
    v55[10] = v58;
    v55[11] = v57;
    v55[12] = v56;
    long long v59 = v356;
    long long v60 = v355;
    long long v61 = v354;
    v55[5] = v353;
    v55[6] = v61;
    v55[7] = v60;
    v55[8] = v59;
    long long v62 = v352;
    long long v63 = v351;
    long long v64 = v350;
    v55[1] = v349;
    long long v55[2] = v64;
    v55[3] = v63;
    v55[4] = v62;
    _OWORD *v55 = v348;
    uint64_t v65 = v34[2];
    BOOL v66 = __OFADD__(v65, 1);
    uint64_t v67 = v65 + 1;
    if (v66) {
      goto LABEL_86;
    }
    v34[2] = v67;
    swift_bridgeObjectRetain();
LABEL_15:
    v361 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v68 = v10[2];
    unint64_t v69 = v10[3];
    swift_bridgeObjectRetain();
    if (v68 >= v69 >> 1) {
      uint64_t v10 = sub_1BFEF692C((void *)(v69 > 1), v68 + 1, 1, v10);
    }
    void v10[2] = v68 + 1;
    uint64_t v70 = &v10[2 * v68];
    v70[4] = v23;
    v70[5] = v20;
    sub_1C05DCDB4((uint64_t)&v348);
    if (!v21) {
      break;
    }
    long long v348 = *(_OWORD *)(v282 + i);
    long long v71 = *(_OWORD *)(v282 + i + 16);
    long long v72 = *(_OWORD *)(v282 + i + 32);
    long long v73 = *(_OWORD *)(v282 + i + 48);
    long long v352 = *(_OWORD *)(v282 + i + 64);
    long long v351 = v73;
    long long v350 = v72;
    long long v349 = v71;
    long long v74 = *(_OWORD *)(v282 + i + 80);
    long long v75 = *(_OWORD *)(v282 + i + 96);
    long long v76 = *(_OWORD *)(v282 + i + 112);
    long long v356 = *(_OWORD *)(v282 + i + 128);
    long long v355 = v76;
    long long v354 = v75;
    long long v353 = v74;
    long long v77 = *(_OWORD *)(v282 + i + 144);
    long long v78 = *(_OWORD *)(v282 + i + 160);
    long long v79 = *(_OWORD *)(v282 + i + 176);
    long long v360 = *(_OWORD *)(v282 + i + 192);
    long long v359 = v79;
    long long v358 = v78;
    long long v357 = v77;
    uint64_t v20 = *((void *)&v348 + 1);
    --v21;
  }
  swift_bridgeObjectRelease();
  int64_t v9 = v279;
  uint64_t v7 = v280;
LABEL_20:
  unint64_t v80 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v81 = *(void *)(v7 + 16);
  if (!v81) {
    goto LABEL_52;
  }
  swift_bridgeObjectRetain();
  uint64_t v82 = v81 - 1;
  uint64_t v83 = 32;
  while (2)
  {
    long long v348 = *(_OWORD *)(v7 + v83);
    long long v84 = *(_OWORD *)(v7 + v83 + 16);
    long long v85 = *(_OWORD *)(v7 + v83 + 32);
    long long v86 = *(_OWORD *)(v7 + v83 + 48);
    long long v352 = *(_OWORD *)(v7 + v83 + 64);
    long long v351 = v86;
    long long v350 = v85;
    long long v349 = v84;
    long long v87 = *(_OWORD *)(v7 + v83 + 80);
    long long v88 = *(_OWORD *)(v7 + v83 + 96);
    long long v89 = *(_OWORD *)(v7 + v83 + 112);
    long long v356 = *(_OWORD *)(v7 + v83 + 128);
    long long v355 = v89;
    long long v354 = v88;
    long long v353 = v87;
    long long v90 = *(_OWORD *)(v7 + v83 + 144);
    long long v91 = *(_OWORD *)(v7 + v83 + 160);
    long long v92 = *(_OWORD *)(v7 + v83 + 176);
    long long v360 = *(_OWORD *)(v7 + v83 + 192);
    long long v359 = v92;
    long long v358 = v91;
    long long v357 = v90;
    long long v93 = v348;
    *(_OWORD *)v345 = *(_OWORD *)(v7 + v83 + 144);
    *(_OWORD *)&v345[16] = *(_OWORD *)(v7 + v83 + 160);
    long long v346 = *(_OWORD *)(v7 + v83 + 176);
    long long v347 = *(_OWORD *)(v7 + v83 + 192);
    long long v341 = *(_OWORD *)(v7 + v83 + 80);
    long long v342 = *(_OWORD *)(v7 + v83 + 96);
    long long v343 = *(_OWORD *)(v7 + v83 + 112);
    long long v344 = *(_OWORD *)(v7 + v83 + 128);
    long long v337 = *(_OWORD *)(v7 + v83 + 16);
    long long v338 = *(_OWORD *)(v7 + v83 + 32);
    long long v339 = *(_OWORD *)(v7 + v83 + 48);
    long long v340 = *(_OWORD *)(v7 + v83 + 64);
    long long v336 = *(_OWORD *)(v7 + v83);
    uint64_t v94 = v361;
    uint64_t v95 = v361[2];
    sub_1C05DCC88((uint64_t)&v348);
    if (!v95) {
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    unint64_t v96 = sub_1BFEF2D8C(v93, *((uint64_t *)&v93 + 1));
    if ((v97 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_29:
      long long v119 = v80;
      sub_1C05DCC88((uint64_t)&v348);
      swift_bridgeObjectRetain();
      char v120 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v311 = v94;
      unint64_t v122 = sub_1BFEF2D8C(v93, *((uint64_t *)&v93 + 1));
      uint64_t v123 = v94[2];
      BOOL v124 = (v121 & 1) == 0;
      uint64_t v125 = v123 + v124;
      if (__OFADD__(v123, v124)) {
        goto LABEL_85;
      }
      char v126 = v121;
      if (v94[3] >= v125)
      {
        if ((v120 & 1) == 0) {
          sub_1C1071228();
        }
      }
      else
      {
        sub_1C105E6C4(v125, v120);
        unint64_t v127 = sub_1BFEF2D8C(v93, *((uint64_t *)&v93 + 1));
        if ((v126 & 1) != (v128 & 1)) {
          goto LABEL_91;
        }
        unint64_t v122 = v127;
      }
      unint64_t v80 = v119;
      if (v126)
      {
        uint64_t v129 = (void *)v311;
        uint64_t v130 = (long long *)(*(void *)(v311 + 56) + 208 * v122);
        long long v324 = *v130;
        long long v131 = v130[3];
        long long v133 = v130[1];
        long long v132 = v130[2];
        long long v328 = v130[4];
        long long v327 = v131;
        long long v325 = v133;
        long long v326 = v132;
        long long v134 = v130[7];
        long long v136 = v130[5];
        long long v135 = v130[6];
        long long v332 = v130[8];
        long long v331 = v134;
        long long v329 = v136;
        long long v330 = v135;
        long long v137 = v130[11];
        long long v139 = v130[9];
        long long v138 = v130[10];
        long long v335 = v130[12];
        long long v334 = v137;
        *(_OWORD *)v333 = v139;
        *(_OWORD *)&v333[16] = v138;
        sub_1C05DCDB4((uint64_t)&v324);
        *uint64_t v130 = v348;
        long long v140 = v352;
        long long v141 = v350;
        long long v142 = v349;
        v130[3] = v351;
        v130[4] = v140;
        v130[1] = v142;
        v130[2] = v141;
        long long v143 = v356;
        long long v144 = v354;
        long long v145 = v353;
        v130[7] = v355;
        v130[8] = v143;
        v130[5] = v145;
        v130[6] = v144;
        long long v146 = v360;
        long long v147 = v358;
        long long v148 = v357;
        v130[11] = v359;
        v130[12] = v146;
        v130[9] = v148;
        v130[10] = v147;
      }
      else
      {
        uint64_t v129 = (void *)v311;
        *(void *)(v311 + 8 * (v122 >> 6) + 64) |= 1 << v122;
        *(_OWORD *)(v129[6] + 16 * v122) = v93;
        long long v149 = (_OWORD *)(v129[7] + 208 * v122);
        long long v150 = v360;
        long long v151 = v359;
        long long v152 = v358;
        v149[9] = v357;
        v149[10] = v152;
        v149[11] = v151;
        v149[12] = v150;
        long long v153 = v356;
        long long v154 = v355;
        long long v155 = v354;
        v149[5] = v353;
        v149[6] = v155;
        v149[7] = v154;
        v149[8] = v153;
        long long v156 = v352;
        long long v157 = v351;
        long long v158 = v350;
        v149[1] = v349;
        v149[2] = v158;
        v149[3] = v157;
        v149[4] = v156;
        *long long v149 = v348;
        uint64_t v159 = v129[2];
        BOOL v66 = __OFADD__(v159, 1);
        uint64_t v160 = v159 + 1;
        if (v66) {
          goto LABEL_87;
        }
        v129[2] = v160;
        swift_bridgeObjectRetain();
      }
      v361 = v129;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v161 = v336;
      unint64_t v162 = v119[2];
      unint64_t v163 = v119[3];
      swift_bridgeObjectRetain();
      uint64_t v7 = v280;
      if (v162 >= v163 >> 1) {
        unint64_t v80 = sub_1BFEF692C((void *)(v163 > 1), v162 + 1, 1, v119);
      }
      v80[2] = v162 + 1;
      *(_OWORD *)&v80[2 * v162 + 4] = v161;
      long long v324 = v161;
      long long v325 = v337;
      long long v326 = v338;
      *(void *)&long long v327 = v339;
      BYTE8(v327) = BYTE8(v339);
      long long v328 = v340;
      long long v329 = v341;
      long long v330 = v342;
      long long v331 = v343;
      long long v332 = v344;
      v333[0] = v345[0];
      *(_OWORD *)&v333[8] = *(_OWORD *)&v345[8];
      v333[24] = v345[24];
      long long v334 = v346;
      LOWORD(v335) = v347;
      *((void *)&v335 + 1) = *((void *)&v347 + 1);
      sub_1C05DCDB4((uint64_t)&v324);
      if (!v82) {
        break;
      }
      goto LABEL_50;
    }
    uint64_t v98 = v80;
    uint64_t v99 = (long long *)(v94[7] + 208 * v96);
    long long v298 = *v99;
    long long v100 = v99[3];
    long long v101 = v99[4];
    long long v102 = v99[2];
    long long v299 = v99[1];
    long long v300 = v102;
    long long v301 = v100;
    long long v302 = v101;
    long long v103 = v99[5];
    long long v104 = v99[6];
    long long v105 = v99[8];
    long long v305 = v99[7];
    long long v306 = v105;
    long long v303 = v103;
    long long v304 = v104;
    long long v106 = v99[9];
    long long v107 = v99[10];
    long long v108 = v99[12];
    long long v309 = v99[11];
    long long v310 = v108;
    long long v307 = v106;
    long long v308 = v107;
    sub_1C05DCC88((uint64_t)&v298);
    swift_bridgeObjectRelease();
    *(_OWORD *)&v333[16] = v308;
    long long v334 = v309;
    long long v335 = v310;
    long long v330 = v304;
    long long v331 = v305;
    *(_OWORD *)v333 = v307;
    long long v332 = v306;
    long long v326 = v300;
    long long v327 = v301;
    long long v109 = v298;
    long long v329 = v303;
    long long v328 = v302;
    long long v325 = v299;
    long long v324 = v298;
    sub_1C09D8930((uint64_t)&v336, (uint64_t)&v311);
    swift_bridgeObjectRetain();
    char v110 = swift_isUniquelyReferenced_nonNull_native();
    v297 = v94;
    unint64_t v112 = sub_1BFEF2D8C(v109, *((uint64_t *)&v109 + 1));
    uint64_t v113 = v94[2];
    BOOL v114 = (v111 & 1) == 0;
    uint64_t v115 = v113 + v114;
    if (__OFADD__(v113, v114)) {
      goto LABEL_88;
    }
    char v116 = v111;
    if (v94[3] >= v115)
    {
      if ((v110 & 1) == 0) {
        sub_1C1071228();
      }
    }
    else
    {
      sub_1C105E6C4(v115, v110);
      unint64_t v117 = sub_1BFEF2D8C(v109, *((uint64_t *)&v109 + 1));
      if ((v116 & 1) != (v118 & 1)) {
        goto LABEL_91;
      }
      unint64_t v112 = v117;
    }
    unint64_t v80 = v98;
    if (v116)
    {
      long long v164 = v297;
      long long v165 = (long long *)(v297[7] + 208 * v112);
      long long v284 = *v165;
      long long v166 = v165[4];
      long long v168 = v165[1];
      long long v167 = v165[2];
      long long v287 = v165[3];
      long long v288 = v166;
      long long v285 = v168;
      long long v286 = v167;
      long long v169 = v165[8];
      long long v171 = v165[5];
      long long v170 = v165[6];
      long long v291 = v165[7];
      long long v292 = v169;
      long long v289 = v171;
      long long v290 = v170;
      long long v172 = v165[12];
      long long v174 = v165[9];
      long long v173 = v165[10];
      long long v295 = v165[11];
      long long v296 = v172;
      long long v293 = v174;
      long long v294 = v173;
      sub_1C05DCDB4((uint64_t)&v284);
      long long v175 = v322;
      v165[10] = v321;
      v165[11] = v175;
      v165[12] = v323;
      long long v176 = v318;
      v165[6] = v317;
      v165[7] = v176;
      long long v177 = v320;
      v165[8] = v319;
      v165[9] = v177;
      long long v178 = v314;
      v165[2] = v313;
      v165[3] = v178;
      long long v179 = v316;
      v165[4] = v315;
      v165[5] = v179;
      long long v180 = v312;
      *long long v165 = v311;
      v165[1] = v180;
    }
    else
    {
      long long v164 = v297;
      v297[(v112 >> 6) + 8] |= 1 << v112;
      *(_OWORD *)(v164[6] + 16 * v112) = v109;
      uint64_t v181 = (_OWORD *)(v164[7] + 208 * v112);
      long long v182 = v314;
      v181[2] = v313;
      v181[3] = v182;
      long long v183 = v312;
      _OWORD *v181 = v311;
      v181[1] = v183;
      long long v184 = v318;
      v181[6] = v317;
      v181[7] = v184;
      long long v185 = v316;
      v181[4] = v315;
      v181[5] = v185;
      long long v186 = v323;
      long long v187 = v321;
      v181[11] = v322;
      v181[12] = v186;
      long long v188 = v320;
      v181[8] = v319;
      v181[9] = v188;
      v181[10] = v187;
      uint64_t v189 = v164[2];
      BOOL v66 = __OFADD__(v189, 1);
      uint64_t v190 = v189 + 1;
      if (v66) {
        goto LABEL_89;
      }
      v164[2] = v190;
      swift_bridgeObjectRetain();
    }
    v361 = v164;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v283[10] = *(_OWORD *)&v333[16];
    v283[11] = v334;
    v283[12] = v335;
    v283[6] = v330;
    v283[7] = v331;
    v283[8] = v332;
    v283[9] = *(_OWORD *)v333;
    v283[2] = v326;
    v283[3] = v327;
    v283[4] = v328;
    v283[5] = v329;
    v283[0] = v324;
    v283[1] = v325;
    sub_1C05DCDB4((uint64_t)v283);
    long long v294 = *(_OWORD *)&v345[16];
    long long v295 = v346;
    long long v296 = v347;
    long long v290 = v342;
    long long v291 = v343;
    long long v292 = v344;
    long long v293 = *(_OWORD *)v345;
    long long v286 = v338;
    long long v287 = v339;
    long long v288 = v340;
    long long v289 = v341;
    long long v284 = v336;
    long long v285 = v337;
    sub_1C05DCDB4((uint64_t)&v284);
    uint64_t v7 = v280;
    if (v82)
    {
LABEL_50:
      --v82;
      v83 += 208;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_52:
  *(void *)&long long v348 = v80;
  swift_bridgeObjectRetain();
  uint64_t v191 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v191);
  uint64_t v192 = v348;
  uint64_t v193 = *(void *)(v348 + 16);
  if (v193)
  {
    swift_bridgeObjectRetain();
    uint64_t v194 = (uint64_t *)(v192 + 40);
    uint64_t v195 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v196 = v361;
      if (v361[2])
      {
        uint64_t v198 = *(v194 - 1);
        uint64_t v197 = *v194;
        swift_bridgeObjectRetain_n();
        unint64_t v199 = sub_1BFEF2D8C(v198, v197);
        if (v200)
        {
          unint64_t v201 = (long long *)(v196[7] + 208 * v199);
          long long v348 = *v201;
          long long v202 = v201[3];
          long long v203 = v201[4];
          long long v204 = v201[2];
          long long v349 = v201[1];
          long long v350 = v204;
          long long v352 = v203;
          long long v351 = v202;
          long long v205 = v201[5];
          long long v206 = v201[6];
          long long v207 = v201[7];
          long long v356 = v201[8];
          long long v355 = v207;
          long long v354 = v206;
          long long v353 = v205;
          long long v208 = v201[9];
          long long v209 = v201[10];
          long long v210 = v201[11];
          long long v360 = v201[12];
          long long v359 = v210;
          long long v358 = v209;
          long long v357 = v208;
          sub_1C05DCC88((uint64_t)&v348);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v195 = sub_1C0EE0FBC(0, v195[2] + 1, 1, v195);
          }
          unint64_t v212 = v195[2];
          unint64_t v211 = v195[3];
          if (v212 >= v211 >> 1) {
            uint64_t v195 = sub_1C0EE0FBC((void *)(v211 > 1), v212 + 1, 1, v195);
          }
          v195[2] = v212 + 1;
          long long v213 = &v195[26 * v212];
          v213[2] = v348;
          long long v214 = v349;
          long long v215 = v350;
          long long v216 = v352;
          v213[5] = v351;
          v213[6] = v216;
          v213[3] = v214;
          v213[4] = v215;
          long long v217 = v353;
          long long v218 = v354;
          long long v219 = v356;
          v213[9] = v355;
          v213[10] = v219;
          v213[7] = v217;
          v213[8] = v218;
          long long v220 = v357;
          long long v221 = v358;
          long long v222 = v360;
          v213[13] = v359;
          v213[14] = v222;
          v213[11] = v220;
          v213[12] = v221;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v194 += 2;
      --v193;
    }
    while (v193);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v195 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v223 = v277[7];
  if (!v223) {
    uint64_t v223 = swift_bridgeObjectRetain();
  }
  *(void *)&long long v298 = v223;
  uint64_t v281 = v277[8];
  uint64_t v224 = v281;
  if ((~v281 & 0xF000000000000007) == 0)
  {
    uint64_t v224 = *(void *)(v278 + 64);
    sub_1BFEF683C(v224);
  }
  *(void *)&long long v284 = v224;
  uint64_t v225 = v277[9];
  if (!v225) {
    uint64_t v225 = swift_bridgeObjectRetain();
  }
  uint64_t v269 = v225;
  uint64_t v226 = v277[10];
  uint64_t v227 = v277[11];
  uint64_t v271 = v227;
  uint64_t v272 = v226;
  unsigned int v228 = *((unsigned __int8 *)v277 + 96);
  char v270 = *((unsigned char *)v277 + 96);
  if (v228 >= 0xFE)
  {
    uint64_t v226 = *(void *)(v278 + 80);
    uint64_t v227 = *(void *)(v278 + 88);
    LOBYTE(v228) = *(unsigned char *)(v278 + 96);
    sub_1BFEF6828(v226, v227, v228);
  }
  *(void *)&long long v336 = v226;
  *((void *)&v336 + 1) = v227;
  uint64_t v229 = v277[14];
  uint64_t v230 = v277[16];
  uint64_t v231 = v277[17];
  uint64_t v232 = v277[18];
  uint64_t v234 = v277[19];
  uint64_t v233 = v277[20];
  uint64_t v267 = v229;
  uint64_t v268 = v277[13];
  uint64_t v235 = v268;
  uint64_t v265 = v230;
  uint64_t v266 = v277[15];
  uint64_t v236 = v266;
  uint64_t v263 = v232;
  uint64_t v264 = v231;
  uint64_t v261 = v233;
  uint64_t v262 = v234;
  uint64_t v237 = v277[21];
  uint64_t v238 = v277[22];
  uint64_t v259 = v238;
  uint64_t v260 = v237;
  LOBYTE(v337) = v228;
  int v239 = *((unsigned __int8 *)v277 + 184);
  unsigned __int8 v258 = *((unsigned char *)v277 + 184);
  if (v239 == 254)
  {
    uint64_t v255 = *(void *)(v278 + 112);
    uint64_t v256 = *(void *)(v278 + 104);
    uint64_t v236 = *(void *)(v278 + 120);
    uint64_t v230 = *(void *)(v278 + 128);
    uint64_t v231 = *(void *)(v278 + 136);
    uint64_t v232 = *(void *)(v278 + 144);
    uint64_t v234 = *(void *)(v278 + 152);
    uint64_t v233 = *(void *)(v278 + 160);
    uint64_t v237 = *(void *)(v278 + 168);
    uint64_t v238 = *(void *)(v278 + 176);
    LOBYTE(v239) = *(unsigned char *)(v278 + 184);
    sub_1BFEF8708(v256, v255, v236, v230, v231, v232, v234, v233, v237, v238, v239);
    uint64_t v229 = v255;
    uint64_t v235 = v256;
  }
  *(void *)&long long v348 = v235;
  *((void *)&v348 + 1) = v229;
  *(void *)&long long v349 = v236;
  *((void *)&v349 + 1) = v230;
  *(void *)&long long v350 = v231;
  *((void *)&v350 + 1) = v232;
  *(void *)&long long v351 = v234;
  *((void *)&v351 + 1) = v233;
  *(void *)&long long v352 = v237;
  *((void *)&v352 + 1) = v238;
  uint64_t v240 = v277[24];
  uint64_t v241 = v277[25];
  uint64_t v257 = v240;
  int v242 = *((unsigned __int8 *)v277 + 208);
  uint64_t v243 = v241;
  unsigned __int8 v244 = *((unsigned char *)v277 + 208);
  LOBYTE(v353) = v239;
  if (v242 == 255)
  {
    uint64_t v240 = *(void *)(v278 + 192);
    uint64_t v243 = *(void *)(v278 + 200);
    unsigned __int8 v244 = *(unsigned char *)(v278 + 208);
    sub_1BFFC8784(v240, v243, v244);
  }
  *(void *)&long long v324 = v240;
  *((void *)&v324 + 1) = v243;
  LOBYTE(v325) = v244;
  uint64_t v245 = v277[27];
  uint64_t v246 = v277[28];
  int v247 = *((unsigned __int8 *)v277 + 232);
  uint64_t v248 = v245;
  uint64_t v249 = v246;
  unsigned __int8 v250 = *((unsigned char *)v277 + 232);
  if (v247 == 255)
  {
    uint64_t v248 = *(void *)(v278 + 216);
    uint64_t v249 = *(void *)(v278 + 224);
    unsigned __int8 v250 = *(unsigned char *)(v278 + 232);
    sub_1BFFC8784(v248, v249, v250);
  }
  *(void *)&long long v311 = v248;
  *((void *)&v311 + 1) = v249;
  LOBYTE(v312) = v250;
  int v251 = *((unsigned __int8 *)v277 + 233);
  if (v251 == 2) {
    LOBYTE(v251) = *(unsigned char *)(v278 + 233);
  }
  uint64_t v252 = v277[30];
  if (!v252)
  {
    uint64_t v252 = *(void *)(v278 + 240);
    swift_bridgeObjectRetain();
  }
  uint64_t v253 = swift_allocObject();
  sub_1BFD5F7B0(v275, v274, v276, v273, (uint64_t)v195, (uint64_t *)&v298, (uint64_t *)&v284, v269, (uint64_t *)&v336, &v348, (uint64_t *)&v324, (uint64_t *)&v311, v251, v252);
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v281);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v272, v271, v270);
  sub_1BFEF8708(v268, v267, v266, v265, v264, v263, v262, v261, v260, v259, v258);
  sub_1BFFC8784(v257, v241, v242);
  sub_1BFFC8784(v245, v246, v247);
  swift_bridgeObjectRetain();
  return v253;
}

uint64_t sub_1C09D7D1C(uint64_t a1)
{
  uint64_t v114 = a1;
  uint64_t v115 = 0;
  uint64_t v143 = *MEMORY[0x1E4F143B8];
  uint64_t v108 = *v1;
  swift_beginAccess();
  long long v103 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1C0EE0FBC(0, v3, 0, MEMORY[0x1E4FBC860]);
  long long v104 = sub_1C0EE0E94(0, v3, 0, v4);
  uint64_t v107 = *(void *)(v2 + 16);
  if (!v107)
  {
LABEL_32:
    sub_1C09DA794();
    uint64_t v62 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void *)(v62 + 16);
    if (v63)
    {
      uint64_t v64 = v63 - 1;
      for (uint64_t i = 32; ; i += 216)
      {
        long long v66 = *(_OWORD *)(v62 + i + 16);
        long long v129 = *(_OWORD *)(v62 + i);
        long long v130 = v66;
        long long v67 = *(_OWORD *)(v62 + i + 32);
        long long v68 = *(_OWORD *)(v62 + i + 48);
        long long v69 = *(_OWORD *)(v62 + i + 80);
        long long v133 = *(_OWORD *)(v62 + i + 64);
        long long v134 = v69;
        long long v131 = v67;
        long long v132 = v68;
        long long v70 = *(_OWORD *)(v62 + i + 96);
        long long v71 = *(_OWORD *)(v62 + i + 112);
        long long v72 = *(_OWORD *)(v62 + i + 144);
        long long v137 = *(_OWORD *)(v62 + i + 128);
        long long v138 = v72;
        long long v135 = v70;
        long long v136 = v71;
        long long v73 = *(_OWORD *)(v62 + i + 160);
        long long v74 = *(_OWORD *)(v62 + i + 176);
        long long v75 = *(_OWORD *)(v62 + i + 192);
        uint64_t v142 = *(void *)(v62 + i + 208);
        long long v140 = v74;
        long long v141 = v75;
        long long v139 = v73;
        sub_1C05DCC88((uint64_t)&v129);
        unint64_t v77 = v5[2];
        unint64_t v76 = v5[3];
        if (v77 >= v76 >> 1) {
          uint64_t v5 = sub_1C0EE0FBC((void *)(v76 > 1), v77 + 1, 1, v5);
        }
        v5[2] = v77 + 1;
        long long v78 = &v5[26 * v77];
        v78[2] = v129;
        long long v79 = v130;
        long long v80 = v131;
        long long v81 = v133;
        v78[5] = v132;
        v78[6] = v81;
        v78[3] = v79;
        v78[4] = v80;
        long long v82 = v134;
        long long v83 = v135;
        long long v84 = v137;
        v78[9] = v136;
        v78[10] = v84;
        v78[7] = v82;
        v78[8] = v83;
        long long v85 = v138;
        long long v86 = v139;
        long long v87 = v141;
        v78[13] = v140;
        v78[14] = v87;
        v78[11] = v85;
        v78[12] = v86;
        if (!v64) {
          break;
        }
        --v64;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v88 = v5[2];
    if (v88)
    {
      uint64_t v89 = (uint64_t)v103;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v90 = v88 - 1;
      uint64_t v91 = v89;
      for (uint64_t j = 4; ; j += 26)
      {
        long long v129 = *(_OWORD *)&v5[j];
        long long v93 = *(_OWORD *)&v5[j + 2];
        long long v94 = *(_OWORD *)&v5[j + 4];
        long long v95 = *(_OWORD *)&v5[j + 8];
        long long v132 = *(_OWORD *)&v5[j + 6];
        long long v133 = v95;
        long long v130 = v93;
        long long v131 = v94;
        long long v96 = *(_OWORD *)&v5[j + 10];
        long long v97 = *(_OWORD *)&v5[j + 12];
        long long v98 = *(_OWORD *)&v5[j + 16];
        long long v136 = *(_OWORD *)&v5[j + 14];
        long long v137 = v98;
        long long v134 = v96;
        long long v135 = v97;
        long long v99 = *(_OWORD *)&v5[j + 18];
        long long v100 = *(_OWORD *)&v5[j + 20];
        long long v101 = *(_OWORD *)&v5[j + 24];
        long long v140 = *(_OWORD *)&v5[j + 22];
        long long v141 = v101;
        long long v138 = v99;
        long long v139 = v100;
        long long v126 = v100;
        long long v127 = v140;
        long long v128 = v101;
        long long v122 = v135;
        long long v123 = v136;
        long long v124 = v137;
        long long v125 = v99;
        long long v118 = v131;
        long long v119 = v132;
        long long v120 = v133;
        long long v121 = v134;
        long long v116 = v129;
        long long v117 = v130;
        swift_allocObject();
        sub_1C05DCC88((uint64_t)&v129);
        uint64_t v91 = sub_1C09D9A04(v91, &v116);
        swift_release();
        if (!v90) {
          break;
        }
        --v90;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v91 = (uint64_t)v103;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v91;
  }
  uint64_t v106 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  uint64_t v105 = v2;
LABEL_3:
  unint64_t v110 = v6;
  uint64_t v7 = (long long *)(v106 + 208 * v6);
  long long v129 = *v7;
  long long v8 = v7[1];
  long long v9 = v7[2];
  long long v10 = v7[4];
  long long v132 = v7[3];
  long long v133 = v10;
  long long v130 = v8;
  long long v131 = v9;
  long long v11 = v7[5];
  long long v12 = v7[6];
  long long v13 = v7[8];
  long long v136 = v7[7];
  long long v137 = v13;
  long long v134 = v11;
  long long v135 = v12;
  long long v14 = v7[9];
  long long v15 = v7[10];
  long long v16 = v7[12];
  long long v140 = v7[11];
  long long v141 = v16;
  long long v138 = v14;
  long long v139 = v15;
  long long v17 = v129;
  sub_1C05DCC88((uint64_t)&v129);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  long long v116 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1BFEF53C0((uint64_t *)&v116);
  swift_bridgeObjectRelease();
  uint64_t v112 = *(void *)(v18 + 16);
  if (!v112)
  {
    swift_bridgeObjectRelease();
    sub_1C05DCDB4((uint64_t)&v129);
    goto LABEL_23;
  }
  long long v109 = v5;
  unint64_t v19 = 0;
  uint64_t v20 = (uint64_t *)(v18 + 64);
  while (1)
  {
    if (v19 >= *(void *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v111 = *(v20 - 2);
    uint64_t v21 = *(v20 - 1);
    uint64_t v22 = *v20;
    char v23 = *(unsigned char *)(v21 + 32);
    unsigned int v24 = v23 & 0x3F;
    unint64_t v25 = (unint64_t)((1 << v23) + 63) >> 6;
    size_t v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 > 0xD)
    {
      uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        uint64_t v28 = (char *)swift_slowAlloc();
        bzero(v28, v26);
        uint64_t v32 = v25;
        uint64_t v30 = v115;
        uint64_t v31 = sub_1BFEFB09C((uint64_t)v28, v32, v21, v114);
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_48;
        }
        uint64_t v115 = 0;
        MEMORY[0x1C18C9B00](v28, -1, -1);
        goto LABEL_15;
      }
    }
    uint64_t v113 = &v103;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v28 = (char *)&v103 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v28, v26);
    uint64_t v29 = v25;
    uint64_t v30 = v115;
    uint64_t v31 = sub_1BFEFB09C((uint64_t)v28, v29, v21, v114);
    swift_bridgeObjectRelease();
    if (v30) {
      break;
    }
    uint64_t v115 = 0;
LABEL_15:
    char v33 = sub_1BFEFAE14(v31, v21);
    swift_release();
    if (v33 & 1) != 0 && (sub_1BFEFB810(v114, v22))
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = v111;
      if (v111 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DCC88((uint64_t)&v129);
        uint64_t v5 = v109;
        unint64_t v39 = v110;
        unint64_t v51 = v109[2];
        unint64_t v50 = v109[3];
        uint64_t v36 = v105;
        if (v51 >= v50 >> 1) {
          uint64_t v5 = sub_1C0EE0FBC((void *)(v50 > 1), v51 + 1, 1, v109);
        }
        v5[2] = v51 + 1;
        long long v52 = &v5[26 * v51];
        v52[2] = v129;
        long long v53 = v130;
        long long v54 = v131;
        long long v55 = v133;
        v52[5] = v132;
        v52[6] = v55;
        v52[3] = v53;
        v52[4] = v54;
        long long v56 = v134;
        long long v57 = v135;
        long long v58 = v137;
        v52[9] = v136;
        v52[10] = v58;
        v52[7] = v56;
        v52[8] = v57;
        long long v59 = v138;
        long long v60 = v139;
        long long v61 = v141;
        v52[13] = v140;
        v52[14] = v61;
        v52[11] = v59;
        v52[12] = v60;
      }
      else
      {
        sub_1C05DCC88((uint64_t)&v129);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = v104;
        uint64_t v36 = v105;
        unint64_t v38 = v104[2];
        unint64_t v37 = v104[3];
        uint64_t v5 = v109;
        unint64_t v39 = v110;
        if (v38 >= v37 >> 1) {
          uint64_t v35 = sub_1C0EE0E94((void *)(v37 > 1), v38 + 1, 1, v104);
        }
        long long v118 = v131;
        long long v119 = v132;
        long long v122 = v135;
        long long v123 = v136;
        long long v120 = v133;
        long long v121 = v134;
        long long v127 = v140;
        long long v128 = v141;
        long long v124 = v137;
        long long v125 = v138;
        long long v126 = v139;
        long long v116 = v129;
        long long v117 = v130;
        void v35[2] = v38 + 1;
        long long v104 = v35;
        long long v40 = &v35[27 * v38];
        *((_OWORD *)v40 + 2) = v116;
        long long v41 = v117;
        long long v42 = v118;
        long long v43 = v120;
        *((_OWORD *)v40 + 5) = v119;
        *((_OWORD *)v40 + 6) = v43;
        *((_OWORD *)v40 + 3) = v41;
        *((_OWORD *)v40 + 4) = v42;
        long long v44 = v121;
        long long v45 = v122;
        long long v46 = v124;
        *((_OWORD *)v40 + 9) = v123;
        *((_OWORD *)v40 + 10) = v46;
        *((_OWORD *)v40 + 7) = v44;
        *((_OWORD *)v40 + 8) = v45;
        long long v47 = v125;
        long long v48 = v126;
        long long v49 = v128;
        *((_OWORD *)v40 + 13) = v127;
        *((_OWORD *)v40 + 14) = v49;
        *((_OWORD *)v40 + 11) = v47;
        *((_OWORD *)v40 + 12) = v48;
        v40[30] = v34;
      }
      sub_1C05DCDB4((uint64_t)&v129);
LABEL_28:
      unint64_t v6 = v39 + 1;
      if (v6 == v107)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v6 >= *(void *)(v36 + 16)) {
LABEL_46:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 5;
    if (v112 == v19)
    {
      swift_bridgeObjectRelease();
      sub_1C05DCDB4((uint64_t)&v129);
      uint64_t v5 = v109;
LABEL_23:
      uint64_t v36 = v105;
      unint64_t v39 = v110;
      goto LABEL_28;
    }
  }
  swift_willThrow();

  __break(1u);
LABEL_48:

  uint64_t result = MEMORY[0x1C18C9B00](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C09D850C()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v34 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v49 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v35 = v2;
  if ((~v6 & 0xF000000000000007) != 0)
  {
    v46[0] = *(void *)(v1 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0EF4E60(v40);
    uint64_t v6 = *(void *)&v40[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v48 = v6;
  uint64_t v7 = *(void *)(v1 + 72);
  if (v7) {
    uint64_t v8 = sub_1C096BB70(v7);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  char v11 = *(unsigned char *)(v1 + 96);
  v46[0] = v9;
  v46[1] = v10;
  char v47 = v11;
  uint64_t v12 = *(void *)(v1 + 104);
  uint64_t v13 = *(void *)(v1 + 112);
  uint64_t v14 = *(void *)(v1 + 136);
  uint64_t v15 = *(void *)(v1 + 176);
  int v16 = *(unsigned __int8 *)(v1 + 184);
  long long v32 = *(_OWORD *)(v1 + 144);
  long long v33 = *(_OWORD *)(v1 + 120);
  long long v31 = *(_OWORD *)(v1 + 160);
  if (v16 == 254)
  {
    sub_1BFEF6828(v9, v10, v11);
    long long v18 = v31;
    long long v17 = v32;
    long long v19 = v33;
  }
  else
  {
    v38[0] = *(void *)(v1 + 136);
    sub_1BFEF6828(v9, v10, v11);
    sub_1C10E55EC(v40);
    long long v18 = v31;
    long long v17 = v32;
    long long v19 = v33;
    uint64_t v14 = *(void *)&v40[0];
    uint64_t v13 = v13;
  }
  *(void *)&v40[0] = v12;
  *((void *)&v40[0] + 1) = v13;
  v40[1] = v19;
  uint64_t v41 = v14;
  long long v42 = v17;
  long long v43 = v18;
  uint64_t v44 = v15;
  char v45 = v16;
  uint64_t v20 = *(void *)(v1 + 192);
  uint64_t v21 = *(void *)(v1 + 200);
  unsigned __int8 v22 = *(unsigned char *)(v1 + 208);
  v38[0] = v20;
  v38[1] = v21;
  unsigned __int8 v39 = v22;
  uint64_t v23 = *(void *)(v1 + 216);
  uint64_t v24 = *(void *)(v1 + 224);
  unsigned __int8 v25 = *(unsigned char *)(v1 + 232);
  v36[0] = v23;
  v36[1] = v24;
  unsigned __int8 v37 = v25;
  char v26 = *(unsigned char *)(v1 + 233);
  uint64_t v27 = *(void *)(v1 + 240);
  sub_1BFFC8784(v20, v21, v22);
  sub_1BFFC8784(v23, v24, v25);
  if (v27) {
    uint64_t v28 = sub_1C096BCCC(v27);
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = swift_allocObject();
  sub_1BFD5F7B0(v35, v3, v34, v4, v5, &v49, &v48, v8, v46, v40, v38, v36, v26, v28);
  return v29;
}

uint64_t FormatLayeredMediaNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(*(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  sub_1BFEF8738(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(unsigned char *)(v0 + 184));
  sub_1BFFC879C(*(void *)(v0 + 192), *(void *)(v0 + 200), *(unsigned char *)(v0 + 208));
  sub_1BFFC879C(*(void *)(v0 + 216), *(void *)(v0 + 224), *(unsigned char *)(v0 + 232));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayeredMediaNodeStyle.__deallocating_deinit()
{
  FormatLayeredMediaNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C09D8854(void *a1, void *a2)
{
  return static FormatLayeredMediaNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t v6 = *(void *)(v1 + 96);
  uint64_t v7 = *(void *)(v1 + 104);
  uint64_t v8 = *(void *)(v1 + 112);
  uint64_t v9 = *(void *)(v1 + 120);
  uint64_t v10 = *(void *)(v1 + 128);
  uint64_t v11 = *(void *)(v1 + 136);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 144);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.video.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 160);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 168);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.motion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 184);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 192);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 193);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09D8930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v88 = *v2;
  uint64_t v6 = v2[2];
  uint64_t v89 = v2[1];
  uint64_t v7 = v2[3];
  uint64_t v100 = v2[4];
  uint64_t v103 = v2[6];
  uint64_t v104 = v2[5];
  unsigned int v102 = *((unsigned __int8 *)v2 + 56);
  uint64_t v8 = v2[8];
  uint64_t v113 = v2[10];
  uint64_t v114 = v2[9];
  uint64_t v111 = v2[12];
  uint64_t v112 = v2[11];
  uint64_t v109 = v2[14];
  uint64_t v110 = v2[13];
  uint64_t v101 = v2[16];
  uint64_t v99 = v2[17];
  int v98 = *((unsigned __int8 *)v2 + 144);
  uint64_t v107 = v2[19];
  uint64_t v108 = v2[15];
  uint64_t v106 = v2[20];
  int v105 = *((unsigned __int8 *)v2 + 168);
  uint64_t v116 = v2[23];
  uint64_t v117 = v2[22];
  int v115 = *((unsigned __int8 *)v2 + 192);
  int v87 = *((unsigned __int8 *)v2 + 193);
  uint64_t v9 = v2[25];
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v63 = *(void *)(a1 + 88);
  uint64_t v66 = *(void *)(a1 + 96);
  uint64_t v69 = *(void *)(a1 + 104);
  uint64_t v73 = *(void *)(a1 + 112);
  uint64_t v76 = *(void *)(a1 + 120);
  uint64_t v79 = *(void *)(a1 + 128);
  uint64_t v81 = v9;
  uint64_t v91 = *(void *)(a1 + 136);
  unsigned __int8 v93 = *(unsigned char *)(a1 + 144);
  uint64_t v56 = *(void *)(a1 + 152);
  uint64_t v57 = *(void *)(a1 + 160);
  unsigned __int8 v58 = *(unsigned char *)(a1 + 168);
  uint64_t v59 = *(void *)(a1 + 176);
  uint64_t v60 = *(void *)(a1 + 184);
  unsigned __int8 v61 = *(unsigned char *)(a1 + 192);
  char v86 = *(unsigned char *)(a1 + 193);
  uint64_t v95 = v6;
  uint64_t v96 = v7;
  if (!v6)
  {
    uint64_t v95 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v7 = v96;
  }
  uint64_t v97 = v7;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    sub_1BFEF683C(v4);
    uint64_t v97 = v4;
  }
  uint64_t v16 = v100;
  if (!v100)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = v5;
  }
  uint64_t v18 = v103;
  uint64_t v17 = v104;
  char v19 = v102;
  if (v102 >= 0xFE)
  {
    sub_1BFEF6828(v10, v11, v12);
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    char v19 = v12;
  }
  char v82 = v19;
  uint64_t v83 = v18;
  uint64_t v84 = v17;
  uint64_t v85 = v16;
  uint64_t v90 = v8;
  uint64_t v20 = v8;
  uint64_t v22 = v113;
  uint64_t v21 = v114;
  uint64_t v24 = v111;
  uint64_t v23 = v112;
  uint64_t v25 = v109;
  uint64_t v26 = v110;
  uint64_t v27 = v108;
  uint64_t v28 = v101;
  uint64_t v29 = v99;
  unsigned __int8 v30 = v98;
  if (v98 == 254)
  {
    uint64_t v26 = v69;
    uint64_t v25 = v73;
    sub_1BFEF8708(v13, v14, v15, v63, v66, v69, v73, v76, v79, v91, v93);
    uint64_t v20 = v13;
    uint64_t v21 = v14;
    uint64_t v22 = v15;
    uint64_t v23 = v63;
    uint64_t v24 = v66;
    uint64_t v27 = v76;
    uint64_t v28 = v79;
    uint64_t v29 = v91;
    unsigned __int8 v30 = v93;
  }
  uint64_t v80 = v26;
  uint64_t v32 = v106;
  uint64_t v31 = v107;
  unsigned __int8 v33 = v105;
  uint64_t v94 = v28;
  unsigned __int8 v92 = v30;
  if (v105 == 255)
  {
    uint64_t v70 = v21;
    uint64_t v34 = v20;
    uint64_t v35 = v23;
    uint64_t v36 = v24;
    uint64_t v37 = v27;
    uint64_t v38 = v29;
    sub_1BFFC8784(v56, v57, v58);
    unsigned __int8 v30 = v92;
    uint64_t v29 = v38;
    uint64_t v28 = v94;
    uint64_t v27 = v37;
    uint64_t v24 = v36;
    uint64_t v23 = v35;
    uint64_t v20 = v34;
    uint64_t v31 = v56;
    uint64_t v32 = v57;
    unsigned __int8 v33 = v58;
    uint64_t v21 = v70;
  }
  uint64_t v40 = v116;
  uint64_t v39 = v117;
  unsigned __int8 v41 = v115;
  if (v115 == 255)
  {
    uint64_t v39 = v59;
    uint64_t v40 = v60;
    uint64_t v74 = v31;
    uint64_t v77 = v22;
    unsigned __int8 v41 = v61;
    uint64_t v64 = v32;
    uint64_t v67 = v24;
    uint64_t v42 = v20;
    uint64_t v71 = v21;
    uint64_t v43 = v23;
    uint64_t v44 = v27;
    uint64_t v45 = v29;
    unsigned __int8 v46 = v33;
    sub_1BFFC8784(v59, v60, v61);
    unsigned __int8 v33 = v46;
    uint64_t v32 = v64;
    uint64_t v24 = v67;
    uint64_t v21 = v71;
    uint64_t v31 = v74;
    unsigned __int8 v30 = v92;
    uint64_t v29 = v45;
    uint64_t v28 = v94;
    uint64_t v27 = v44;
    uint64_t v23 = v43;
    uint64_t v22 = v77;
    uint64_t v20 = v42;
  }
  uint64_t v47 = v81;
  if (!v81)
  {
    uint64_t v72 = v20;
    uint64_t v75 = v25;
    uint64_t v78 = v22;
    uint64_t v48 = v21;
    uint64_t v49 = v23;
    uint64_t v65 = v32;
    uint64_t v68 = v24;
    uint64_t v50 = v27;
    uint64_t v51 = v29;
    uint64_t v52 = v31;
    unsigned __int8 v62 = v33;
    uint64_t v53 = swift_bridgeObjectRetain();
    unsigned __int8 v33 = v62;
    uint64_t v32 = v65;
    uint64_t v24 = v68;
    uint64_t v31 = v52;
    uint64_t v29 = v51;
    uint64_t v28 = v94;
    uint64_t v27 = v50;
    uint64_t v23 = v49;
    uint64_t v21 = v48;
    uint64_t v25 = v75;
    uint64_t v22 = v78;
    uint64_t v20 = v72;
    uint64_t v47 = v53;
    unsigned __int8 v30 = v92;
  }
  char v54 = v87;
  if (v87 == 2) {
    char v54 = v86;
  }
  *(void *)a2 = v88;
  *(void *)(a2 + 8) = v89;
  *(void *)(a2 + 16) = v95;
  *(void *)(a2 + 24) = v97;
  *(void *)(a2 + 32) = v85;
  *(void *)(a2 + 40) = v84;
  *(void *)(a2 + 48) = v83;
  *(unsigned char *)(a2 + 56) = v82;
  *(void *)(a2 + 64) = v20;
  *(void *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v23;
  *(void *)(a2 + 96) = v24;
  *(void *)(a2 + 104) = v80;
  *(void *)(a2 + 112) = v25;
  *(void *)(a2 + 120) = v27;
  *(void *)(a2 + 128) = v28;
  *(void *)(a2 + 136) = v29;
  *(unsigned char *)(a2 + 144) = v30;
  *(void *)(a2 + 152) = v31;
  *(void *)(a2 + 160) = v32;
  *(unsigned char *)(a2 + 168) = v33;
  *(void *)(a2 + 176) = v39;
  *(void *)(a2 + 184) = v40;
  *(unsigned char *)(a2 + 192) = v41;
  *(unsigned char *)(a2 + 193) = v54;
  *(void *)(a2 + 200) = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v96);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v104, v103, v102);
  sub_1BFEF8708(v90, v114, v113, v112, v111, v110, v109, v108, v101, v99, v98);
  sub_1BFFC8784(v107, v106, v105);
  sub_1BFFC8784(v117, v116, v115);
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.auxViewRequirements.getter()
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v2 = *(void *)(v0 + 64);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v5 = &protocol witness table for FormatBackground;
    uint64_t v4 = &type metadata for FormatBackground;
    uint64_t v3 = *(void *)(v0 + 64);
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = v5;
  sub_1BFEF683C(v2);
  uint64_t v6 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v6;
}

uint64_t sub_1C09D8F30@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 208);
  return result;
}

uint64_t _s8NewsFeed27FormatLayeredMediaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v93 = *(void *)(a1 + 40);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v89 = *(void *)(a1 + 64);
  uint64_t v90 = *(void *)(a1 + 72);
  uint64_t v81 = *(void *)(a1 + 80);
  uint64_t v82 = *(void *)(a1 + 88);
  uint64_t v83 = *(void *)(a1 + 96);
  uint64_t v84 = *(void *)(a1 + 104);
  uint64_t v85 = *(void *)(a1 + 112);
  uint64_t v86 = *(void *)(a1 + 120);
  uint64_t v88 = *(void *)(a1 + 128);
  uint64_t v80 = *(void *)(a1 + 136);
  int v87 = *(unsigned __int8 *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v66 = *(void *)(a1 + 152);
  int v78 = *(unsigned __int8 *)(a1 + 168);
  uint64_t v60 = *(void *)(a1 + 176);
  uint64_t v61 = *(void *)(a1 + 184);
  int v63 = *(unsigned __int8 *)(a1 + 192);
  int v57 = *(unsigned __int8 *)(a1 + 193);
  uint64_t v55 = *(void *)(a1 + 200);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v91 = *(void *)(a2 + 40);
  uint64_t v92 = *(void *)(a2 + 48);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
  uint64_t v69 = *(void *)(a2 + 64);
  uint64_t v70 = *(void *)(a2 + 72);
  uint64_t v71 = *(void *)(a2 + 80);
  uint64_t v72 = *(void *)(a2 + 88);
  uint64_t v73 = *(void *)(a2 + 96);
  uint64_t v74 = *(void *)(a2 + 104);
  uint64_t v75 = *(void *)(a2 + 112);
  uint64_t v76 = *(void *)(a2 + 120);
  uint64_t v67 = *(void *)(a2 + 136);
  uint64_t v68 = *(void *)(a2 + 128);
  int v79 = *(unsigned __int8 *)(a2 + 144);
  uint64_t v64 = *(void *)(a2 + 160);
  uint64_t v65 = *(void *)(a2 + 152);
  int v77 = *(unsigned __int8 *)(a2 + 168);
  uint64_t v58 = *(void *)(a2 + 184);
  uint64_t v59 = *(void *)(a2 + 176);
  int v62 = *(unsigned __int8 *)(a2 + 192);
  int v56 = *(unsigned __int8 *)(a2 + 193);
  uint64_t v54 = *(void *)(a2 + 200);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v12 = sub_1C1520A9C();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (v2)
  {
    if (!v8) {
      return 0;
    }
    uint64_t v53 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C00DE998(v2, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v53 = v7;
    if (v8) {
      return 0;
    }
  }
  if ((~v4 & 0xF000000000000007) == 0)
  {
    if ((~v9 & 0xF000000000000007) == 0) {
      goto LABEL_16;
    }
LABEL_14:
    sub_1BFEF683C(v9);
    sub_1BFEF68C0(v4);
    sub_1BFEF68C0(v9);
    return 0;
  }
  uint64_t v105 = v4;
  if ((~v9 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_14;
  }
  uint64_t v94 = v9;
  swift_retain_n();
  char v15 = static FormatBackground.== infix(_:_:)(&v105, (unint64_t *)&v94);
  swift_release();
  sub_1BFEF68C0(v4);
  if ((v15 & 1) == 0) {
    return 0;
  }
LABEL_16:
  if (v3)
  {
    if (!v10) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_bridgeObjectRetain();
    BOOL v17 = sub_1C00DFB58(v16, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v17) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  char v18 = v6;
  if (v6 > 0xFD)
  {
    char v19 = v11;
    uint64_t v20 = v5;
    uint64_t v21 = v93;
    if (v11 > 0xFD) {
      goto LABEL_28;
    }
LABEL_26:
    sub_1BFEF6828(v91, v92, v19);
    sub_1BFEF68AC(v21, v20, v18);
    sub_1BFEF68AC(v91, v92, v19);
    return 0;
  }
  uint64_t v21 = v93;
  uint64_t v105 = v93;
  uint64_t v106 = v5;
  uint64_t v20 = v5;
  LOBYTE(v107) = v18;
  char v19 = v11;
  if (v11 > 0xFD)
  {
    sub_1BFF046A0(v93, v5, v18);
    sub_1BFF046A0(v93, v5, v18);
    sub_1BFF04738(v93, v5, v18);
    goto LABEL_26;
  }
  uint64_t v94 = v91;
  uint64_t v95 = v92;
  LOBYTE(v96) = v11;
  sub_1BFEF6828(v93, v5, v18);
  sub_1BFF046A0(v93, v5, v18);
  char v22 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v105, (uint64_t)&v94);
  sub_1BFF04738(v105, v106, v107);
  sub_1BFEF68AC(v93, v5, v18);
  if ((v22 & 1) == 0) {
    return 0;
  }
LABEL_28:
  char v23 = v87;
  if (v87 == 254)
  {
    unsigned __int8 v24 = v79;
    uint64_t v26 = v85;
    uint64_t v25 = v86;
    uint64_t v28 = v83;
    uint64_t v27 = v84;
    uint64_t v29 = v81;
    uint64_t v30 = v82;
    uint64_t v31 = v90;
    if (v79 == 254) {
      goto LABEL_35;
    }
LABEL_33:
    uint64_t v105 = v89;
    uint64_t v106 = v31;
    uint64_t v107 = v29;
    uint64_t v108 = v30;
    uint64_t v109 = v28;
    uint64_t v110 = v27;
    uint64_t v111 = v26;
    uint64_t v112 = v25;
    uint64_t v113 = v88;
    uint64_t v114 = v80;
    char v115 = v23;
    uint64_t v116 = v69;
    uint64_t v117 = v70;
    uint64_t v118 = v71;
    uint64_t v119 = v72;
    uint64_t v120 = v73;
    uint64_t v121 = v74;
    uint64_t v122 = v75;
    uint64_t v123 = v76;
    uint64_t v124 = v68;
    uint64_t v125 = v67;
    unsigned __int8 v126 = v24;
    sub_1BFEF8708(v69, v70, v71, v72, v73, v74, v75, v76, v68, v67, v24);
    sub_1C02D2004((uint64_t)&v105);
    return 0;
  }
  uint64_t v105 = v89;
  uint64_t v106 = v90;
  uint64_t v29 = v81;
  uint64_t v30 = v82;
  uint64_t v107 = v81;
  uint64_t v108 = v82;
  uint64_t v28 = v83;
  uint64_t v27 = v84;
  uint64_t v109 = v83;
  uint64_t v110 = v84;
  uint64_t v26 = v85;
  uint64_t v25 = v86;
  uint64_t v111 = v85;
  uint64_t v112 = v86;
  uint64_t v113 = v88;
  uint64_t v114 = v80;
  char v115 = v87;
  if (v79 == 254)
  {
    swift_retain();
    char v23 = v87;
    uint64_t v31 = v90;
    unsigned __int8 v24 = -2;
    goto LABEL_33;
  }
  uint64_t v94 = v69;
  LODWORD(v95) = v70;
  uint64_t v96 = v71;
  uint64_t v97 = v72;
  uint64_t v98 = v73;
  uint64_t v99 = v74;
  uint64_t v100 = v75;
  uint64_t v101 = v76;
  uint64_t v102 = v68;
  uint64_t v103 = v67;
  char v104 = v79;
  sub_1BFEF8708(v89, v90, v81, v82, v83, v84, v85, v86, v88, v80, v87);
  swift_retain();
  char v32 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v105, (uint64_t)&v94);
  swift_release();
  sub_1BFEF8738(v89, v90, v81, v82, v83, v84, v85, v86, v88, v80, v87);
  if ((v32 & 1) == 0) {
    return 0;
  }
LABEL_35:
  if (v78 == 255)
  {
    uint64_t v33 = v53;
    if (v77 == 255) {
      goto LABEL_50;
    }
LABEL_43:
    uint64_t v38 = v64;
    uint64_t v37 = v65;
    unsigned __int8 v39 = v77;
    sub_1BFFC8784(v65, v64, v77);
    uint64_t v40 = v66;
    uint64_t v41 = v66;
    uint64_t v42 = v33;
    unsigned __int8 v43 = v78;
LABEL_59:
    sub_1BFFC8784(v41, v42, v43);
    sub_1BFFC879C(v40, v33, v43);
    sub_1BFFC879C(v37, v38, v39);
    return 0;
  }
  uint64_t v33 = v53;
  if (v77 == 255) {
    goto LABEL_43;
  }
  if ((v78 & 1) == 0)
  {
    uint64_t v44 = v53;
    uint64_t v35 = v65;
    uint64_t v34 = v66;
    uint64_t v36 = v64;
    char v45 = v77;
    if ((v77 & 1) == 0)
    {
      sub_1BFE94AD4(v66, v53, 0);
      sub_1BFE94AD4(v65, v64, 0);
      uint64_t result = 0;
      if (((((v66 & 1) == 0) ^ v65) & 1) == 0) {
        return result;
      }
      goto LABEL_50;
    }
LABEL_48:
    char v46 = v45 & 1;
    sub_1BFE94AB4(v35, v36, v45 & 1);
    char v47 = v78;
LABEL_65:
    sub_1BFE94AD4(v34, v44, v47 & 1);
    sub_1BFE94AD4(v35, v36, v46);
    return 0;
  }
  uint64_t v35 = v65;
  uint64_t v34 = v66;
  uint64_t v36 = v64;
  if ((v77 & 1) == 0)
  {
    uint64_t v44 = v53;
    swift_bridgeObjectRetain();
    char v45 = v77;
    goto LABEL_48;
  }
  if (v66 == v65 && v53 == v64)
  {
    sub_1BFFC8784(v66, v53, v77);
    sub_1BFFC8784(v66, v53, v78);
    sub_1BFE94AD4(v66, v53, 1);
    sub_1BFE94AD4(v66, v53, 1);
  }
  else
  {
    char v48 = sub_1C1520A9C();
    sub_1BFFC8784(v65, v64, v77);
    sub_1BFFC8784(v66, v53, v78);
    sub_1BFE94AD4(v66, v53, 1);
    sub_1BFE94AD4(v65, v64, 1);
    uint64_t result = 0;
    if ((v48 & 1) == 0) {
      return result;
    }
  }
LABEL_50:
  if (v63 == 255)
  {
    if (v62 == 255) {
      goto LABEL_69;
    }
    goto LABEL_58;
  }
  if (v62 == 255)
  {
LABEL_58:
    uint64_t v38 = v58;
    uint64_t v37 = v59;
    unsigned __int8 v39 = v62;
    sub_1BFFC8784(v59, v58, v62);
    uint64_t v40 = v60;
    uint64_t v33 = v61;
    uint64_t v41 = v60;
    uint64_t v42 = v61;
    unsigned __int8 v43 = v63;
    goto LABEL_59;
  }
  if (v63)
  {
    uint64_t v34 = v60;
    uint64_t v44 = v61;
    uint64_t v36 = v58;
    uint64_t v35 = v59;
    char v49 = v62;
    if (v62)
    {
      if (v60 == v59 && v61 == v58)
      {
        sub_1BFFC8784(v60, v61, v62);
        sub_1BFFC8784(v60, v61, v63);
        sub_1BFE94AD4(v60, v61, 1);
        sub_1BFE94AD4(v60, v61, 1);
      }
      else
      {
        char v50 = sub_1C1520A9C();
        sub_1BFFC8784(v59, v58, v62);
        sub_1BFFC8784(v60, v61, v63);
        sub_1BFE94AD4(v60, v61, 1);
        sub_1BFE94AD4(v59, v58, 1);
        uint64_t result = 0;
        if ((v50 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_69;
    }
    swift_bridgeObjectRetain();
    goto LABEL_64;
  }
  uint64_t v34 = v60;
  uint64_t v44 = v61;
  uint64_t v36 = v58;
  uint64_t v35 = v59;
  char v49 = v62;
  if (v62)
  {
LABEL_64:
    char v46 = v49 & 1;
    sub_1BFE94AB4(v35, v36, v49 & 1);
    char v47 = v63;
    goto LABEL_65;
  }
  sub_1BFE94AD4(v60, v61, 0);
  sub_1BFE94AD4(v59, v58, 0);
  uint64_t result = 0;
  if (((((v60 & 1) == 0) ^ v59) & 1) == 0) {
    return result;
  }
LABEL_69:
  if (v57 == 2)
  {
    if (v56 == 2) {
      goto LABEL_74;
    }
    return 0;
  }
  uint64_t result = 0;
  if (v56 != 2 && ((((v57 & 1) == 0) ^ v56) & 1) != 0)
  {
LABEL_74:
    if (v55)
    {
      if (v54)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = swift_bridgeObjectRetain();
        BOOL v52 = sub_1C00DFC2C(v51, v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v52) {
          return 1;
        }
      }
    }
    else if (!v54)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C09D98AC(uint64_t a1, uint64_t (*a2)(long long *))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F6B44(0, v2, 0);
    uint64_t v3 = v18;
    unsigned int v6 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      *(void *)&long long v14 = v7;
      *((void *)&v14 + 1) = v8;
      uint64_t v15 = v9;
      sub_1BFDC11A4(v7);
      sub_1BFEF683C(v8);
      sub_1BFEF683C(v9);
      uint64_t v10 = a2(&v14);
      sub_1BFDC11BC(v7);
      sub_1BFEF68C0(v8);
      sub_1BFEF68C0(v9);
      uint64_t v18 = v3;
      unint64_t v12 = *(void *)(v3 + 16);
      unint64_t v11 = *(void *)(v3 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C05F6B44(v11 > 1, v12 + 1, 1);
        uint64_t v3 = v18;
      }
      v6 += 3;
      BOOL v17 = &off_1F1C29D30;
      uint64_t v16 = &type metadata for FormatInspection;
      *(void *)&long long v14 = v10;
      *(void *)(v3 + 16) = v12 + 1;
      sub_1BFC773DC(&v14, v3 + 40 * v12 + 32);
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C09D9A04(uint64_t a1, long long *a2)
{
  long long v4 = a2[11];
  long long v74 = a2[10];
  long long v75 = v4;
  long long v76 = a2[12];
  long long v5 = a2[7];
  long long v70 = a2[6];
  long long v71 = v5;
  long long v6 = a2[9];
  unsigned long long v72 = a2[8];
  long long v73 = v6;
  long long v7 = a2[3];
  long long v66 = a2[2];
  long long v67 = v7;
  long long v8 = a2[5];
  long long v68 = a2[4];
  long long v69 = v8;
  long long v9 = a2[1];
  long long v64 = *a2;
  long long v65 = v9;
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = v10;
  *(void *)(v2 + 24) = v11;
  uint64_t v12 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  *(void *)(v2 + 40) = v12;
  uint64_t v13 = *((void *)&v65 + 1);
  uint64_t v63 = *((void *)&v65 + 1);
  if ((~*((void *)&v65 + 1) & 0xF000000000000007) == 0)
  {
    uint64_t v13 = *(void *)(a1 + 64);
    sub_1BFEF683C(v13);
  }
  *(void *)(v2 + 64) = v13;
  uint64_t v14 = v66;
  if (!(void)v66) {
    uint64_t v14 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 72) = v14;
  uint64_t v15 = *((void *)&v66 + 1);
  uint64_t v16 = v67;
  uint64_t v61 = v67;
  uint64_t v62 = *((void *)&v66 + 1);
  char v17 = BYTE8(v67);
  char v60 = BYTE8(v67);
  if (BYTE8(v67) >= 0xFEu)
  {
    uint64_t v15 = *(void *)(a1 + 80);
    uint64_t v16 = *(void *)(a1 + 88);
    char v17 = *(unsigned char *)(a1 + 96);
    sub_1BFEF6828(v15, v16, v17);
  }
  *(void *)(v2 + 80) = v15;
  *(void *)(v2 + 88) = v16;
  uint64_t v18 = *((void *)&v68 + 1);
  uint64_t v20 = *((void *)&v69 + 1);
  uint64_t v19 = v69;
  uint64_t v22 = *((void *)&v70 + 1);
  uint64_t v21 = v70;
  uint64_t v24 = *((void *)&v71 + 1);
  uint64_t v23 = v71;
  uint64_t v58 = *((void *)&v68 + 1);
  uint64_t v59 = v68;
  uint64_t v25 = v68;
  uint64_t v56 = *((void *)&v69 + 1);
  uint64_t v57 = v69;
  uint64_t v54 = *((void *)&v70 + 1);
  uint64_t v55 = v70;
  uint64_t v52 = *((void *)&v71 + 1);
  uint64_t v53 = v71;
  uint64_t v26 = *((void *)&v72 + 1);
  unsigned long long v28 = v72;
  uint64_t v50 = v28 >> 64;
  uint64_t v27 = v28;
  uint64_t v51 = v72;
  *(unsigned char *)(v2 + 96) = v17;
  unsigned __int8 v29 = v73;
  unsigned __int8 v49 = v73;
  if (v73 == 254)
  {
    uint64_t v46 = *(void *)(a1 + 112);
    uint64_t v48 = *(void *)(a1 + 104);
    uint64_t v20 = *(void *)(a1 + 128);
    uint64_t v44 = *(void *)(a1 + 120);
    uint64_t v21 = *(void *)(a1 + 136);
    uint64_t v22 = *(void *)(a1 + 144);
    uint64_t v23 = *(void *)(a1 + 152);
    uint64_t v24 = *(void *)(a1 + 160);
    uint64_t v27 = *(void *)(a1 + 168);
    uint64_t v26 = *(void *)(a1 + 176);
    unsigned __int8 v29 = *(unsigned char *)(a1 + 184);
    sub_1BFEF8708(v48, v46, v44, v20, v21, v22, v23, v24, v27, v26, v29);
    uint64_t v19 = v44;
    uint64_t v18 = v46;
    uint64_t v25 = v48;
  }
  *(void *)(v2 + 104) = v25;
  *(void *)(v2 + 112) = v18;
  *(void *)(v2 + 120) = v19;
  *(void *)(v2 + 128) = v20;
  *(void *)(v2 + 136) = v21;
  *(void *)(v2 + 144) = v22;
  *(void *)(v2 + 152) = v23;
  *(void *)(v2 + 160) = v24;
  *(void *)(v2 + 168) = v27;
  *(void *)(v2 + 176) = v26;
  uint64_t v30 = v65;
  *(unsigned char *)(v2 + 184) = v29;
  if (!v30) {
    uint64_t v30 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 56) = v30;
  swift_beginAccess();
  uint64_t v31 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v31;
  uint64_t v32 = *((void *)&v73 + 1);
  uint64_t v33 = v74;
  unsigned __int8 v34 = BYTE8(v74);
  uint64_t v45 = v74;
  uint64_t v47 = *((void *)&v73 + 1);
  unsigned __int8 v35 = BYTE8(v74);
  if (BYTE8(v74) == 255)
  {
    uint64_t v32 = *(void *)(a1 + 192);
    uint64_t v33 = *(void *)(a1 + 200);
    unsigned __int8 v35 = *(unsigned char *)(a1 + 208);
    sub_1BFFC8784(v32, v33, v35);
  }
  *(void *)(v2 + 192) = v32;
  *(void *)(v2 + 200) = v33;
  *(unsigned char *)(v2 + 208) = v35;
  long long v36 = v75;
  unsigned __int8 v37 = v76;
  uint64_t v38 = *((void *)&v75 + 1);
  uint64_t v39 = v75;
  unsigned __int8 v40 = v76;
  if (v76 == 255)
  {
    uint64_t v39 = *(void *)(a1 + 216);
    uint64_t v38 = *(void *)(a1 + 224);
    unsigned __int8 v40 = *(unsigned char *)(a1 + 232);
    sub_1BFFC8784(v39, v38, v40);
  }
  *(void *)(v2 + 216) = v39;
  *(void *)(v2 + 224) = v38;
  *(unsigned char *)(v2 + 232) = v40;
  char v41 = BYTE1(v76);
  if (BYTE1(v76) == 2) {
    char v41 = *(unsigned char *)(a1 + 233);
  }
  *(unsigned char *)(v2 + 233) = v41;
  uint64_t v42 = *((void *)&v76 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v63);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v62, v61, v60);
  sub_1BFEF8708(v59, v58, v57, v56, v55, v54, v53, v52, v51, v50, v49);
  swift_bridgeObjectRetain();
  sub_1BFFC8784(v47, v45, v34);
  sub_1BFFC8784(v36, *((uint64_t *)&v36 + 1), v37);
  swift_bridgeObjectRetain();
  sub_1C05DCDB4((uint64_t)&v64);
  if (!v42)
  {
    uint64_t v42 = *(void *)(a1 + 240);
    swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 240) = v42;
  return v2;
}

uint64_t sub_1C09D9D60(uint64_t a1)
{
  uint64_t result = sub_1C09D9E98(&qword_1EA1A1FC8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09D9DA4(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C09D9E98(&qword_1EB88CA20);
  uint64_t result = sub_1C09D9E98(&qword_1EB868200);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C09D9E0C(void *a1)
{
  a1[1] = sub_1C09D9E98(&qword_1EB88CA20);
  a1[2] = sub_1C09D9E98(&qword_1EB868200);
  uint64_t result = sub_1C09D9E98(&qword_1EA1A1FD0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C09D9E98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatLayeredMediaNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09D9ED8(uint64_t a1)
{
  unint64_t result = sub_1C09D9F00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09D9F00()
{
  unint64_t result = qword_1EA1A1FD8;
  if (!qword_1EA1A1FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1FD8);
  }
  return result;
}

unint64_t sub_1C09D9F54(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C006C7FC();
  unint64_t result = sub_1C006C850();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C09D9F84(void *a1)
{
  a1[1] = sub_1C006C7FC();
  a1[2] = sub_1C006C850();
  unint64_t result = sub_1C09D9FBC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09D9FBC()
{
  unint64_t result = qword_1EA1A1FE0;
  if (!qword_1EA1A1FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1FE0);
  }
  return result;
}

uint64_t sub_1C09DA010@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09DA060@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatLayeredMediaNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLayeredMediaNodeStyle);
}

uint64_t assignWithCopy for FormatLayeredMediaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1C09C6DD8(a1 + 24);
    uint64_t v5 = *(void *)(a2 + 24);
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a1 + 40);
  long long v8 = (_OWORD *)(a2 + 40);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      uint64_t v14 = *(void *)(a2 + 40);
      uint64_t v15 = *(void *)(a2 + 48);
      sub_1BFF046A0(v14, v15, *(unsigned char *)(a2 + 56));
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v14;
      *(void *)(a1 + 48) = v15;
      char v18 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v9;
      sub_1BFF04738(v16, v17, v18);
    }
    else
    {
      sub_1C02D0F84(a1 + 40);
      char v11 = *(unsigned char *)(a2 + 56);
      *long long v7 = *v8;
      *(unsigned char *)(a1 + 56) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_1BFF046A0(v12, v13, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = v9;
  }
  else
  {
    long long v10 = *v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *long long v7 = v10;
  }
  uint64_t v19 = (_OWORD *)(a1 + 64);
  uint64_t v20 = (_OWORD *)(a2 + 64);
  int v21 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
    if (v21 == 254)
    {
      long long v22 = *(_OWORD *)(a2 + 80);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 80) = v22;
      long long v23 = *(_OWORD *)(a2 + 96);
      long long v24 = *(_OWORD *)(a2 + 112);
      long long v25 = *(_OWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v24;
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 96) = v23;
    }
    else
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      long long v30 = *(_OWORD *)(a2 + 104);
      long long v31 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 120) = v31;
      *(_OWORD *)(a1 + 104) = v30;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1C02D0FD8(a1 + 64);
    long long v26 = *(_OWORD *)(a2 + 80);
    *uint64_t v19 = *v20;
    *(_OWORD *)(a1 + 80) = v26;
    long long v28 = *(_OWORD *)(a2 + 112);
    long long v27 = *(_OWORD *)(a2 + 128);
    long long v29 = *(_OWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v28;
    *(_OWORD *)(a1 + 128) = v27;
    *(_OWORD *)(a1 + 96) = v29;
  }
  else
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_retain();
    swift_release();
    long long v32 = *(_OWORD *)(a2 + 104);
    long long v33 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 120) = v33;
    *(_OWORD *)(a1 + 104) = v32;
  }
  unsigned __int8 v34 = (long long *)(a1 + 152);
  unsigned __int8 v35 = (long long *)(a2 + 152);
  int v36 = *(unsigned __int8 *)(a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) == 255)
  {
    if (v36 == 255)
    {
      long long v38 = *v35;
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      long long *v34 = v38;
    }
    else
    {
      char v45 = v36 & 1;
      uint64_t v46 = *(void *)(a2 + 152);
      uint64_t v47 = *(void *)(a2 + 160);
      sub_1BFE94AB4(v46, v47, v36 & 1);
      *(void *)(a1 + 152) = v46;
      *(void *)(a1 + 160) = v47;
      *(unsigned char *)(a1 + 168) = v45;
    }
  }
  else if (v36 == 255)
  {
    sub_1C0457C38(a1 + 152);
    char v37 = *(unsigned char *)(a2 + 168);
    long long *v34 = *v35;
    *(unsigned char *)(a1 + 168) = v37;
  }
  else
  {
    char v39 = v36 & 1;
    uint64_t v40 = *(void *)(a2 + 152);
    uint64_t v41 = *(void *)(a2 + 160);
    sub_1BFE94AB4(v40, v41, v36 & 1);
    uint64_t v42 = *(void *)(a1 + 152);
    uint64_t v43 = *(void *)(a1 + 160);
    char v44 = *(unsigned char *)(a1 + 168);
    *(void *)(a1 + 152) = v40;
    *(void *)(a1 + 160) = v41;
    *(unsigned char *)(a1 + 168) = v39;
    sub_1BFE94AD4(v42, v43, v44);
  }
  uint64_t v48 = (long long *)(a1 + 176);
  unsigned __int8 v49 = (long long *)(a2 + 176);
  int v50 = *(unsigned __int8 *)(a2 + 192);
  if (*(unsigned __int8 *)(a1 + 192) == 255)
  {
    if (v50 == 255)
    {
      long long v52 = *v49;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *uint64_t v48 = v52;
    }
    else
    {
      char v59 = v50 & 1;
      uint64_t v60 = *(void *)(a2 + 176);
      uint64_t v61 = *(void *)(a2 + 184);
      sub_1BFE94AB4(v60, v61, v50 & 1);
      *(void *)(a1 + 176) = v60;
      *(void *)(a1 + 184) = v61;
      *(unsigned char *)(a1 + 192) = v59;
    }
  }
  else if (v50 == 255)
  {
    sub_1C0457C38(a1 + 176);
    char v51 = *(unsigned char *)(a2 + 192);
    *uint64_t v48 = *v49;
    *(unsigned char *)(a1 + 192) = v51;
  }
  else
  {
    char v53 = v50 & 1;
    uint64_t v54 = *(void *)(a2 + 176);
    uint64_t v55 = *(void *)(a2 + 184);
    sub_1BFE94AB4(v54, v55, v50 & 1);
    uint64_t v56 = *(void *)(a1 + 176);
    uint64_t v57 = *(void *)(a1 + 184);
    char v58 = *(unsigned char *)(a1 + 192);
    *(void *)(a1 + 176) = v54;
    *(void *)(a1 + 184) = v55;
    *(unsigned char *)(a1 + 192) = v53;
    sub_1BFE94AD4(v56, v57, v58);
  }
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatLayeredMediaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C09C6DD8(a1 + 24);
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a2 + 40);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 56);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *v7;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    goto LABEL_11;
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 56);
  if (v9 > 0xFD)
  {
    sub_1C02D0F84(a1 + 40);
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *v7;
  *(unsigned char *)(a1 + 56) = v9;
  sub_1BFF04738(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
LABEL_14:
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 144) == 254)
  {
    sub_1C02D0FD8(a1 + 64);
    goto LABEL_14;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
LABEL_16:
  uint64_t v14 = (_OWORD *)(a2 + 152);
  int v15 = *(unsigned __int8 *)(a1 + 168);
  if (v15 == 255)
  {
LABEL_19:
    *(_OWORD *)(a1 + 152) = *v14;
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    goto LABEL_21;
  }
  int v16 = *(unsigned __int8 *)(a2 + 168);
  if (v16 == 255)
  {
    sub_1C0457C38(a1 + 152);
    goto LABEL_19;
  }
  uint64_t v17 = *(void *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 160);
  *(_OWORD *)(a1 + 152) = *v14;
  *(unsigned char *)(a1 + 168) = v16 & 1;
  sub_1BFE94AD4(v17, v18, v15 & 1);
LABEL_21:
  uint64_t v19 = (_OWORD *)(a2 + 176);
  int v20 = *(unsigned __int8 *)(a1 + 192);
  if (v20 != 255)
  {
    int v21 = *(unsigned __int8 *)(a2 + 192);
    if (v21 != 255)
    {
      uint64_t v22 = *(void *)(a1 + 176);
      uint64_t v23 = *(void *)(a1 + 184);
      *(_OWORD *)(a1 + 176) = *v19;
      *(unsigned char *)(a1 + 192) = v21 & 1;
      sub_1BFE94AD4(v22, v23, v20 & 1);
      goto LABEL_26;
    }
    sub_1C0457C38(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *v19;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
LABEL_26:
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeStyle.Selector()
{
  return &type metadata for FormatLayeredMediaNodeStyle.Selector;
}

void sub_1C09DA730()
{
  if (!qword_1EB870748)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB870748);
    }
  }
}

void sub_1C09DA794()
{
  if (!qword_1EB870730)
  {
    sub_1C09DA7F0();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB870730);
    }
  }
}

unint64_t sub_1C09DA7F0()
{
  unint64_t result = qword_1EB870728;
  if (!qword_1EB870728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870728);
  }
  return result;
}

void *sub_1C09DA844(double *a1, uint64_t a2)
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EA1974D0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  sub_1C09C76D8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v62 = *(void *)(*(void *)(v3 - 8) + 72);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  long long v7 = (void *)(v6 + v5);
  if (a2)
  {
    unint64_t v8 = *(void *)(a2 + 40);
    uint64_t v61 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_1C09D850C();
    long long v65 = 0u;
    long long v66 = 0u;
    uint64_t v67 = 0;
    long long v68 = xmmword_1C157D900;
    uint64_t v9 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v64, v9 + 16);
    uint64_t v10 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v10 = sub_1C139486C;
    uint64_t v9 = 0;
    uint64_t v61 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
  long long v12 = (uint64_t (**)())((char *)v7 + *(int *)(v11 + 24));
  *long long v12 = v10;
  v12[1] = (uint64_t (*)())v9;
  uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  *(void *)(v6 + v5) = v61;
  v7[2] = 0;
  v7[3] = 0;
  v7[1] = v8;
  uint64_t v14 = (char *)v7 + *(int *)(v11 + 28);
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  v14[16] = -1;
  int v15 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v15((uint64_t)v7, 0, 1, v11);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v72);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v16 = swift_allocObject();
  *(void *)(inited + 32) = v16;
  *(void *)(v16 + 48) = v73;
  long long v17 = v72[1];
  *(_OWORD *)(v16 + 16) = v72[0];
  *(_OWORD *)(v16 + 32) = v17;
  uint64_t v18 = v62;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152FC70;
  uint64_t v20 = v19 + v5;
  sub_1C0433600(1701869908, 0xE400000000000000, 0x4D6465726579614CLL, 0xEC00000061696465, (void *)(v19 + v5));
  v15(v19 + v5, 0, 1, v11);
  uint64_t v57 = v19;
  if (a2)
  {
    uint64_t v21 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v21, (void *)(v20 + v62));
    v15(v20 + v62, 0, 1, v11);
    unint64_t v22 = *(void *)(a2 + 64);
    sub_1BFEF683C(v22);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v20 + v62));
    v15(v20 + v62, 0, 1, v11);
    unint64_t v22 = 0xF000000000000007;
  }
  sub_1C0439948(0x756F72676B636142, 0xEA0000000000646ELL, v22, v20 + 2 * v62);
  v15(v20 + 2 * v62, 0, 1, v11);
  if (a2)
  {
    uint64_t v23 = *(void *)(a2 + 192);
    uint64_t v24 = *(void *)(a2 + 200);
    long long v25 = v15;
    unsigned __int8 v26 = *(unsigned char *)(a2 + 208);
    sub_1BFFC8784(v23, v24, v26);
    sub_1C0437874(0x6F65646956, 0xE500000000000000, v23, v24, v26, (void *)(v20 + 3 * v62));
    uint64_t v18 = v62;
    v25(v20 + 3 * v62, 0, 1, v11);
    uint64_t v27 = *(void *)(a2 + 216);
    uint64_t v28 = *(void *)(a2 + 224);
    unsigned __int8 v29 = *(unsigned char *)(a2 + 232);
    sub_1BFFC8784(v27, v28, v29);
  }
  else
  {
    unsigned __int8 v29 = -1;
    sub_1C0437874(0x6F65646956, 0xE500000000000000, 0, 0, 0xFFu, (void *)(v20 + 3 * v62));
    v15(v20 + 3 * v62, 0, 1, v11);
    uint64_t v27 = 0;
    long long v25 = v15;
    uint64_t v28 = 0;
  }
  uint64_t v30 = v18;
  long long v31 = (void *)(v20 + 4 * v18);
  sub_1C0437874(0x6E6F69746F4DLL, 0xE600000000000000, v27, v28, v29, v31);
  v25((uint64_t)v31, 0, 1, v11);
  if (a2)
  {
    sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, *(unsigned char *)(a2 + 233), (void *)(v20 + 5 * v30));
    uint64_t v32 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v25)(v20 + 5 * v30, 0, 1, v11);
    if (*(void *)(a2 + 240))
    {
      MEMORY[0x1F4188790](v32);
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = sub_1C09D98AC(v33, (uint64_t (*)(long long *))sub_1C09DB2A4);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = MEMORY[0x1E4FBC860];
    }
    uint64_t v30 = v62;
  }
  else
  {
    sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, 2, (void *)(v20 + 5 * v30));
    v25(v20 + 5 * v30, 0, 1, v11);
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  uint64_t v35 = sub_1C0233FC8(v34);
  swift_bridgeObjectRelease();
  int v36 = sub_1C131B79C(v35);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x737265746C6946, 0xE700000000000000, (uint64_t)v36, 0, 0, (void *)(v20 + 6 * v30));
  v25(v20 + 6 * v30, 0, 1, v11);
  sub_1C09BCFA4(0x4D6465726579614CLL, 0xEC00000061696465, 0, 0, v57, v74);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v37 = swift_allocObject();
  *(void *)(inited + 72) = v37;
  *(void *)(v37 + 48) = v75;
  long long v38 = v74[1];
  *(_OWORD *)(v37 + 16) = v74[0];
  *(_OWORD *)(v37 + 32) = v38;
  if (a2)
  {
    uint64_t v39 = *(void *)(a2 + 80);
    uint64_t v40 = *(void *)(a2 + 88);
    char v41 = *(unsigned char *)(a2 + 96);
    sub_1BFEF6828(v39, v40, v41);
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    char v41 = -2;
  }
  uint64_t v64 = v39;
  *(void *)&long long v65 = v40;
  BYTE8(v65) = v41;
  uint64_t v42 = sub_1C108626C(a1, (uint64_t)&v64);
  sub_1BFEF68AC(v39, v40, v41);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  *(void *)(inited + 112) = v42;
  if (a2)
  {
    uint64_t v43 = *(void *)(a2 + 144);
    uint64_t v44 = *(void *)(a2 + 152);
    uint64_t v45 = *(void *)(a2 + 160);
    unsigned __int8 v55 = *(unsigned char *)(a2 + 184);
    uint64_t v56 = *(void *)(a2 + 176);
    uint64_t v58 = *(void *)(a2 + 168);
    uint64_t v46 = *(void *)(a2 + 104);
    uint64_t v47 = *(void *)(a2 + 112);
    uint64_t v48 = *(void *)(a2 + 120);
    uint64_t v49 = *(void *)(a2 + 128);
    a2 = *(void *)(a2 + 136);
    uint64_t v50 = v43;
    uint64_t v51 = v44;
    uint64_t v52 = v45;
    sub_1BFEF8708(v46, v47, v48, v49, a2, v43, v44, v45, v58, v56, v55);
  }
  else
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v56 = 0;
    uint64_t v58 = 0;
    unsigned __int8 v55 = -2;
  }
  uint64_t v64 = v46;
  *(void *)&long long v65 = v47;
  *((void *)&v65 + 1) = v48;
  *(void *)&long long v66 = v49;
  *((void *)&v66 + 1) = a2;
  uint64_t v67 = v50;
  *(void *)&long long v68 = v51;
  *((void *)&v68 + 1) = v52;
  uint64_t v69 = v58;
  uint64_t v70 = v56;
  unsigned __int8 v71 = v55;
  uint64_t v60 = sub_1C0AD49A4((uint64_t)&v64);
  sub_1BFEF8738(v46, v47, v48, v49, a2, v50, v51, v52, v58, v56, v55);
  *(void *)(inited + 176) = &type metadata for FormatInspection;
  *(void *)(inited + 184) = &off_1F1C29D30;
  *(void *)(inited + 152) = v60;
  char v53 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  return v53;
}

uint64_t sub_1C09DB25C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_1C09DB2A4(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  long long v3 = *a1;
  uint64_t v4 = v1;
  return sub_1C110DD58((uint64_t *)&v3);
}

uint64_t sub_1C09DB2D8()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C09DB31C(void **a1)
{
  uint64_t v3 = v1;
  sub_1C09DB5E8(*a1);
  sub_1C09DCB98(a1);
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_1C09DF984((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PuzzleDatastoreInfo);
    swift_deallocPartialClassInstance();
  }
  else
  {
    id v5 = objc_allocWithZone(MEMORY[0x1E4F9F8F0]);
    uint64_t v6 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v5, sel_initWithJSONString_, v6);

    *(void *)(v3 + 16) = v7;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    *(void *)&long long v9 = 0x7250656C7A7A7570;
    *((void *)&v9 + 1) = 0xEF3D73736572676FLL;
    if (*(void **)((char *)a1 + *(int *)(type metadata accessor for PuzzleDatastoreInfo() + 28) + 64) != (void *)1) {
      PuzzleProgress.debugDescription.getter();
    }
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C09DF984((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PuzzleDatastoreInfo);
    *(_OWORD *)(v3 + 24) = v9;
  }
  return v3;
}

uint64_t sub_1C09DB5E8(void *a1)
{
  uint64_t v128 = *MEMORY[0x1E4F143B8];
  sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v6 = MEMORY[0x1F4188790](v5).n128_u64[0];
  unint64_t v8 = (char *)&v120 - v7;
  unint64_t v121 = MEMORY[0x1E4FBC868];
  id v9 = objc_msgSend(a1, sel_identifier, v6);
  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  uint64_t v127 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v126 = v10;
  *((void *)&v126 + 1) = v12;
  sub_1BFF993A8(&v126, v122);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  uint64_t v127 = v13;
  *(void *)&long long v126 = v16;
  *((void *)&v126 + 1) = v18;
  sub_1BFF993A8(&v126, v122);
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0xD000000000000014, 0x80000001C16174D0, v19);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(a1, sel_title);
  uint64_t v21 = MEMORY[0x1E4FBC840];
  if (v20)
  {
    unint64_t v22 = v20;
    uint64_t v23 = sub_1C151E62C();
    uint64_t v25 = v24;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v23;
    *((void *)&v126 + 1) = v25;
    sub_1BFF993A8(&v126, v122);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x656C746974, 0xE500000000000000, v26);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x656C746974, 0xE500000000000000, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v27 = objc_msgSend(a1, sel_subtitle);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1C151E62C();
    uint64_t v31 = v30;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v29;
    *((void *)&v126 + 1) = v31;
    sub_1BFF993A8(&v126, v122);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x656C746974627573, 0xE800000000000000, v32);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x656C746974627573, 0xE800000000000000, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v33 = objc_msgSend(a1, sel_puzzleDescription);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_1C151E62C();
    uint64_t v37 = v36;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v35;
    *((void *)&v126 + 1) = v37;
    sub_1BFF993A8(&v126, v122);
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x7470697263736564, 0xEB000000006E6F69, v38);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x7470697263736564, 0xEB000000006E6F69, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v39 = objc_msgSend(a1, sel_authors);
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    uint64_t v42 = sub_1C151EBCC();

    sub_1C09DFB60(0, (unint64_t *)&qword_1EB879F20, v41, MEMORY[0x1E4FBB320]);
    uint64_t v127 = v43;
    *(void *)&long long v126 = v42;
    sub_1BFF993A8(&v126, v122);
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x726F68747561, 0xE600000000000000, v44);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x726F68747561, 0xE600000000000000, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v45 = objc_msgSend(a1, sel_publishDate);
  if (v45)
  {
    uint64_t v46 = v45;
    sub_1C15162BC();

    uint64_t v47 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v4, 0, 1, v47);
  }
  else
  {
    uint64_t v47 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v4, 1, 1, v47);
  }
  sub_1BFCB311C((uint64_t)v4, (uint64_t)v8);
  sub_1C151631C();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v8, 1, v47) == 1)
  {
    sub_1BFE54830((uint64_t)v8, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
    sub_1C035332C(0x656873696C627570, 0xED00006574614464, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  else
  {
    sub_1C151629C();
    uint64_t v127 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v126 = v49;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v47);
    sub_1BFF993A8(&v126, v122);
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x656873696C627570, 0xED00006574614464, v50);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v51 = objc_msgSend(a1, sel_isPaid);
  uint64_t v52 = MEMORY[0x1E4FBB390];
  uint64_t v127 = MEMORY[0x1E4FBB390];
  LOBYTE(v126) = v51;
  sub_1BFF993A8(&v126, v122);
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0x646961507369, 0xE600000000000000, v53);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  id v54 = objc_msgSend(a1, sel_teaserClue);
  if (v54)
  {
    unsigned __int8 v55 = v54;
    uint64_t v56 = sub_1C151E62C();
    uint64_t v58 = v57;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v56;
    *((void *)&v126 + 1) = v58;
    sub_1BFF993A8(&v126, v122);
    char v59 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x6C43726573616574, 0xEA00000000006575, v59);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x6C43726573616574, 0xEA00000000006575, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v60 = objc_msgSend(a1, sel_teaserInfo);
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v62 = sub_1C151E62C();
    uint64_t v64 = v63;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v62;
    *((void *)&v126 + 1) = v64;
    sub_1BFF993A8(&v126, v122);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x6948726573616574, 0xEA0000000000746ELL, v65);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x6948726573616574, 0xEA0000000000746ELL, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v66 = objc_msgSend(a1, sel_teaserAnswer);
  if (v66)
  {
    uint64_t v67 = v66;
    uint64_t v68 = sub_1C151E62C();
    uint64_t v70 = v69;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v68;
    *((void *)&v126 + 1) = v70;
    sub_1BFF993A8(&v126, v122);
    char v71 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x6E41726573616574, 0xEC00000072657773, v71);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x6E41726573616574, 0xEC00000072657773, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v72 = objc_msgSend(a1, sel_teaserNumber);
  if (v72)
  {
    uint64_t v73 = v72;
    uint64_t v74 = sub_1C151E62C();
    uint64_t v76 = v75;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v74;
    *((void *)&v126 + 1) = v76;
    sub_1BFF993A8(&v126, v122);
    char v77 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x754E726573616574, 0xEC0000007265626DLL, v77);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x754E726573616574, 0xEC0000007265626DLL, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v78 = objc_msgSend(a1, sel_teaserDirection);
  if (v78)
  {
    int v79 = v78;
    uint64_t v80 = sub_1C151E62C();
    uint64_t v82 = v81;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v80;
    *((void *)&v126 + 1) = v82;
    sub_1BFF993A8(&v126, v122);
    char v83 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0x6944726573616574, 0xEF6E6F6974636572, v83);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0x6944726573616574, 0xEF6E6F6974636572, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  id v84 = objc_msgSend(a1, sel_difficulty);
  uint64_t v127 = MEMORY[0x1E4FBC1C8];
  *(void *)&long long v126 = v84;
  sub_1BFF993A8(&v126, v122);
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0x6C75636966666964, 0xEA00000000007974, v85);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  id v86 = objc_msgSend(a1, sel_difficultyDescription);
  if (v86)
  {
    int v87 = v86;
    uint64_t v88 = sub_1C151E62C();
    uint64_t v90 = v89;

    uint64_t v127 = v13;
    *(void *)&long long v126 = v88;
    *((void *)&v126 + 1) = v90;
    sub_1BFF993A8(&v126, v122);
    char v91 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v124 = v121;
    unint64_t v121 = 0x8000000000000000;
    sub_1BFFB4A24(v122, 0xD000000000000015, 0x80000001C16174F0, v91);
    unint64_t v121 = v124;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C035332C(0xD000000000000015, 0x80000001C16174F0, &v126);
    sub_1BFE54830((uint64_t)&v126, (uint64_t)&qword_1EB87A940, v21 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
  }
  *(void *)&long long v126 = 0;
  *((void *)&v126 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&long long v126 = 0xD000000000000013;
  *((void *)&v126 + 1) = 0x80000001C1615F80;
  id v92 = objc_msgSend(a1, sel_identifier);
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v127 = v13;
  sub_1BFF993A8(&v126, v122);
  char v93 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 7107189, 0xE300000000000000, v93);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  char v94 = sub_1C09DF774(a1);
  uint64_t v127 = v52;
  LOBYTE(v126) = v94 & 1;
  sub_1BFF993A8(&v126, v122);
  char v95 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0xD000000000000018, 0x80000001C1617510, v95);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  unsigned __int8 v96 = objc_msgSend(a1, sel_ignoreFromStatsAndStreaks);
  uint64_t v127 = v52;
  LOBYTE(v126) = v96;
  sub_1BFF993A8(&v126, v122);
  char v97 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0xD000000000000019, 0x80000001C15FFC30, v97);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  unsigned __int8 v98 = objc_msgSend(a1, sel_isDeprecated);
  uint64_t v127 = v52;
  LOBYTE(v126) = v98;
  sub_1BFF993A8(&v126, v122);
  char v99 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0x6365727065447369, 0xEC00000064657461, v99);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  unsigned __int8 v100 = objc_msgSend(a1, sel_isDraft);
  uint64_t v127 = v52;
  LOBYTE(v126) = v100;
  sub_1BFF993A8(&v126, v122);
  char v101 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v124 = v121;
  unint64_t v121 = 0x8000000000000000;
  sub_1BFFB4A24(v122, 0x74666172447369, 0xE700000000000000, v101);
  unint64_t v121 = v124;
  swift_bridgeObjectRelease();
  uint64_t v102 = self;
  uint64_t v103 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  *(void *)&long long v126 = 0;
  id v104 = objc_msgSend(v102, sel_dataWithJSONObject_options_error_, v103, 2, &v126);

  id v105 = (id)v126;
  if (v104)
  {
    uint64_t v106 = sub_1C151606C();
    unint64_t v108 = v107;

    switch(v108 >> 62)
    {
      case 1uLL:
        if (v106 >> 32 < (int)v106) {
          __break(1u);
        }
        sub_1BFE95820(v106, v108);
        swift_retain();
        uint64_t v112 = sub_1C037F8CC((int)v106, v106 >> 32, v108 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
        uint64_t v114 = v113;
        sub_1BFE95664(v106, v108);
        if (v114) {
          goto LABEL_53;
        }
        goto LABEL_45;
      case 2uLL:
        uint64_t v115 = *(void *)(v106 + 16);
        uint64_t v116 = *(void *)(v106 + 24);
        sub_1BFE95820(v106, v108);
        swift_retain();
        swift_retain();
        uint64_t v112 = sub_1C037F8CC(v115, v116, v108 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
        uint64_t v118 = v117;
        swift_release();
        swift_release();
        if (v118) {
          goto LABEL_53;
        }
LABEL_45:
        unint64_t v124 = v106;
        unint64_t v125 = v108;
        sub_1BFE95820(v106, v108);
        sub_1C00C2AD4();
        if (swift_dynamicCast())
        {
          sub_1BFC773DC(v122, (uint64_t)&v126);
          __swift_project_boxed_opaque_existential_1(&v126, v127);
          if (sub_1C152054C())
          {
            __swift_project_boxed_opaque_existential_1(&v126, v127);
            sub_1C152053C();
            sub_1BFE95664(v106, v108);
            uint64_t v112 = *(void *)&v122[0];
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
            goto LABEL_54;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
        }
        else
        {
          uint64_t v123 = 0;
          memset(v122, 0, sizeof(v122));
          sub_1BFE54830((uint64_t)v122, (uint64_t)&qword_1EA1A2000, (uint64_t)sub_1C00C2AD4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
        }
        uint64_t v109 = sub_1C037F818(v106, v108);
LABEL_52:
        uint64_t v112 = v109;
LABEL_53:
        sub_1BFE95664(v106, v108);
LABEL_54:
        sub_1BFE95664(v106, v108);
        break;
      case 3uLL:
        *(void *)((char *)&v126 + 6) = 0;
        *(void *)&long long v126 = 0;
        uint64_t v109 = sub_1C151E75C();
        goto LABEL_52;
      default:
        *(void *)&long long v126 = v106;
        WORD4(v126) = v108;
        BYTE10(v126) = BYTE2(v108);
        BYTE11(v126) = BYTE3(v108);
        BYTE12(v126) = BYTE4(v108);
        BYTE13(v126) = BYTE5(v108);
        uint64_t v109 = sub_1C151E75C();
        goto LABEL_52;
    }
  }
  else
  {
    uint64_t v110 = v105;
    uint64_t v111 = (void *)sub_1C1515D3C();

    swift_willThrow();
    return 0;
  }
  return v112;
}

void *sub_1C09DCB98(void **a1)
{
  uint64_t v135 = *MEMORY[0x1E4F143B8];
  sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  double v6 = (char *)&v118 - v5;
  uint64_t v7 = type metadata accessor for PuzzleHistoryInfo();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PuzzleResource();
  uint64_t v11 = sub_1C09DDE60();
  if (!v12)
  {
    sub_1C09DE19C();
    swift_allocError();
LABEL_51:
    swift_willThrow();
    return v1;
  }
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  uint64_t v121 = v8;
  uint64_t v122 = v7;
  uint64_t v119 = v10;
  uint64_t v123 = v2;
  uint64_t v120 = sub_1C09DB5E8(*a1);
  uint64_t v16 = v15;
  *((void *)&v130 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v129 = v13;
  *((void *)&v129 + 1) = v14;
  sub_1BFF993A8(&v129, &v124);
  uint64_t v17 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v127 = v17;
  sub_1BFFB4A24(&v124, 0x6144656C7A7A7570, 0xEA00000000006174, isUniquelyReferenced_nonNull_native);
  uint64_t v19 = v127;
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_currentDevice);
  id v21 = objc_msgSend(v20, sel_userInterfaceIdiom);

  BOOL v22 = v21 == 0;
  uint64_t v23 = MEMORY[0x1E4FBB390];
  char v24 = v22;
  *((void *)&v130 + 1) = MEMORY[0x1E4FBB390];
  LOBYTE(v129) = v24;
  sub_1BFF993A8(&v129, &v124);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v127 = v19;
  sub_1BFFB4A24(&v124, 0x4F676E696E6E7572, 0xEF656C69626F4D6ELL, v25);
  uint64_t v26 = v127;
  swift_bridgeObjectRelease();
  id v27 = (int *)type metadata accessor for PuzzleDatastoreInfo();
  char v28 = *((unsigned char *)a1 + v27[5]);
  *((void *)&v130 + 1) = v23;
  LOBYTE(v129) = v28;
  sub_1BFF993A8(&v129, &v124);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v127 = v26;
  sub_1BFFB4A24(&v124, 0x6269726373627573, 0xEA00000000006465, v29);
  uint64_t v30 = v127;
  swift_bridgeObjectRelease();
  char v31 = *((unsigned char *)a1 + v27[6]);
  *((void *)&v130 + 1) = v23;
  LOBYTE(v129) = v31;
  sub_1BFF993A8(&v129, &v124);
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v127 = v30;
  sub_1BFFB4A24(&v124, 0x7365636341736168, 0xE900000000000073, v32);
  uint64_t v33 = v127;
  swift_bridgeObjectRelease();
  char v34 = *((unsigned char *)a1 + v27[14]);
  *((void *)&v130 + 1) = v23;
  LOBYTE(v129) = v34;
  sub_1BFF993A8(&v129, &v124);
  char v35 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v127 = v33;
  sub_1BFFB4A24(&v124, 0xD000000000000018, 0x80000001C1617380, v35);
  uint64_t v36 = v127;
  swift_bridgeObjectRelease();
  uint64_t v37 = (char *)a1 + v27[8];
  uint64_t v38 = *((void *)v37 + 1);
  if (v38 != 1)
  {
    __int16 v39 = *((_WORD *)v37 + 8);
    *(void *)&long long v129 = *(void *)v37;
    *((void *)&v129 + 1) = v38;
    LOWORD(v130) = v39;
    uint64_t v40 = sub_1C09DE1F0((uint64_t *)&v129);
    sub_1BFFB4FA4();
    *((void *)&v130 + 1) = v41;
    *(void *)&long long v129 = v40;
    sub_1BFF993A8(&v129, &v124);
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v36;
    sub_1BFFB4A24(&v124, 0x634168636E75616CLL, 0xEC0000006E6F6974, v42);
    uint64_t v36 = v127;
    swift_bridgeObjectRelease();
    uint64_t v38 = *((void *)v37 + 1);
  }
  __int16 v43 = *((_WORD *)v37 + 8);
  *(void *)&long long v129 = *(void *)v37;
  *((void *)&v129 + 1) = v38;
  LOWORD(v130) = v43;
  if ((sub_1C09DE304((uint64_t)&v129) & 1) == 0)
  {
    char v44 = (char *)a1 + v27[7];
    uint64_t v45 = *((void *)v44 + 8);
    char v46 = v44[72];
    long long v47 = *((_OWORD *)v44 + 1);
    long long v129 = *(_OWORD *)v44;
    long long v130 = v47;
    long long v48 = *((_OWORD *)v44 + 3);
    long long v131 = *((_OWORD *)v44 + 2);
    long long v132 = v48;
    uint64_t v133 = v45;
    char v134 = v46;
    uint64_t v49 = sub_1C09DE414((uint64_t)&v129, 0);
    if (v50)
    {
      *((void *)&v130 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v129 = v49;
      *((void *)&v129 + 1) = v50;
      sub_1BFF993A8(&v129, &v124);
      char v51 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v127 = v36;
      sub_1BFFB4A24(&v124, 0xD000000000000011, 0x80000001C1617480, v51);
      uint64_t v36 = v127;
      swift_bridgeObjectRelease();
    }
  }
  if (v16)
  {
    *((void *)&v130 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v129 = v120;
    *((void *)&v129 + 1) = v16;
    sub_1BFF993A8(&v129, &v124);
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v36;
    sub_1BFFB4A24(&v124, 0x6F43656C7A7A7570, 0xEC0000006769666ELL, v52);
    uint64_t v36 = v127;
    swift_bridgeObjectRelease();
  }
  char v53 = (char *)a1 + v27[9];
  unint64_t v54 = *((void *)v53 + 1);
  if (v54 >> 60 != 15)
  {
    uint64_t v55 = *(void *)v53;
    switch(v54 >> 62)
    {
      case 1uLL:
        if (v55 >> 32 < (int)v55) {
          goto LABEL_70;
        }
        sub_1BFE95820(*(void *)v53, *((void *)v53 + 1));
        sub_1BFE95820(v55, v54);
        swift_retain();
        uint64_t v66 = v123;
        uint64_t v67 = sub_1C037F8CC((int)v55, v55 >> 32, v54 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
        uint64_t v123 = v66;
        if (v66) {
          goto LABEL_74;
        }
        uint64_t v63 = v67;
        uint64_t v64 = v68;
        sub_1BFE95878(v55, v54);
        if (v64) {
          goto LABEL_30;
        }
LABEL_23:
        uint64_t v127 = v55;
        unint64_t v128 = v54;
        sub_1BFE95820(v55, v54);
        sub_1C00C2AD4();
        if (swift_dynamicCast())
        {
          sub_1BFC773DC(&v124, (uint64_t)&v129);
          __swift_project_boxed_opaque_existential_1(&v129, *((uint64_t *)&v130 + 1));
          if (sub_1C152054C())
          {
            __swift_project_boxed_opaque_existential_1(&v129, *((uint64_t *)&v130 + 1));
            uint64_t v69 = v123;
            sub_1C152053C();
            uint64_t v123 = v69;
            sub_1BFE95878(v55, v54);
            uint64_t v64 = *((void *)&v124 + 1);
            uint64_t v63 = v124;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
            goto LABEL_31;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
        }
        else
        {
          uint64_t v126 = 0;
          long long v124 = 0u;
          long long v125 = 0u;
          sub_1BFE54830((uint64_t)&v124, (uint64_t)&qword_1EA1A2000, (uint64_t)sub_1C00C2AD4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
        }
        uint64_t v56 = sub_1C037F818(v55, v54);
LABEL_29:
        uint64_t v63 = v56;
        uint64_t v64 = v57;
LABEL_30:
        sub_1BFE95878(v55, v54);
LABEL_31:
        *((void *)&v130 + 1) = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v129 = v63;
        *((void *)&v129 + 1) = v64;
        sub_1BFF993A8(&v129, &v124);
        char v70 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v127 = v36;
        sub_1BFFB4A24(&v124, 0x6553656C7A7A7570, 0xEE0073676E697474, v70);
        uint64_t v36 = v127;
        swift_bridgeObjectRelease();
        sub_1BFE95878(v55, v54);
        break;
      case 2uLL:
        uint64_t v58 = *(void *)(v55 + 16);
        uint64_t v59 = *(void *)(v55 + 24);
        sub_1C00C2AC0(*(void *)v53, *((void *)v53 + 1));
        sub_1C00C2AC0(v55, v54);
        swift_retain();
        swift_retain();
        uint64_t v60 = v123;
        uint64_t v61 = sub_1C037F8CC(v58, v59, v54 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
        uint64_t v123 = v60;
        if (v60) {
          goto LABEL_73;
        }
        uint64_t v63 = v61;
        uint64_t v64 = v62;
        swift_release();
        swift_release();
        if (!v64) {
          goto LABEL_23;
        }
        goto LABEL_30;
      case 3uLL:
        *(void *)((char *)&v124 + 6) = 0;
        *(void *)&long long v124 = 0;
        uint64_t v65 = v123;
        sub_1C037FB34((uint64_t *)&v129);
        uint64_t v123 = v65;
        sub_1BFE95878(v55, v54);
        uint64_t v64 = *((void *)&v129 + 1);
        uint64_t v63 = v129;
        goto LABEL_31;
      default:
        *(void *)&long long v129 = *(void *)v53;
        WORD4(v129) = v54;
        BYTE10(v129) = BYTE2(v54);
        BYTE11(v129) = BYTE3(v54);
        BYTE12(v129) = BYTE4(v54);
        BYTE13(v129) = BYTE5(v54);
        uint64_t v56 = sub_1C151E75C();
        goto LABEL_29;
    }
  }
  char v71 = (uint64_t *)((char *)a1 + v27[10]);
  uint64_t v72 = v71[1];
  unint64_t v54 = 0xD000000000000011;
  if (v72)
  {
    uint64_t v73 = *v71;
    *((void *)&v130 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v129 = v73;
    *((void *)&v129 + 1) = v72;
    sub_1BFF993A8(&v129, &v124);
    swift_bridgeObjectRetain();
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v36;
    sub_1BFFB4A24(&v124, 0xD000000000000012, 0x80000001C1617460, v74);
    uint64_t v36 = v127;
    swift_bridgeObjectRelease();
  }
  uint64_t v75 = (uint64_t *)((char *)a1 + v27[16]);
  uint64_t v76 = v75[1];
  if (v76)
  {
    uint64_t v77 = *v75;
    *((void *)&v130 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v129 = v77;
    *((void *)&v129 + 1) = v76;
    sub_1BFF993A8(&v129, &v124);
    swift_bridgeObjectRetain();
    char v78 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v36;
    sub_1BFFB4A24(&v124, 0xD000000000000011, 0x80000001C1617440, v78);
    uint64_t v36 = v127;
    swift_bridgeObjectRelease();
  }
  if (*(void **)((char *)a1 + v27[11]))
  {
    swift_retain();
    uint64_t v79 = sub_1C1247830();
    sub_1BFFB4FA4();
    *((void *)&v130 + 1) = v80;
    *(void *)&long long v129 = v79;
    sub_1BFF993A8(&v129, &v124);
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v36;
    sub_1BFFB4A24(&v124, 0x7453656C7A7A7570, 0xEF6F666E49737461, v81);
    uint64_t v36 = v127;
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v82 = (uint64_t *)((char *)a1 + v27[15]);
  uint64_t v83 = v82[1];
  if (v83)
  {
    uint64_t v84 = *v82;
    *((void *)&v130 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v129 = v84;
    *((void *)&v129 + 1) = v83;
    sub_1BFF993A8(&v129, &v124);
    swift_bridgeObjectRetain();
    char v85 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v36;
    sub_1BFFB4A24(&v124, 0xD000000000000011, 0x80000001C1617420, v85);
    uint64_t v36 = v127;
    swift_bridgeObjectRelease();
  }
  char v86 = *((unsigned char *)a1 + v27[13]);
  *((void *)&v130 + 1) = MEMORY[0x1E4FBB390];
  LOBYTE(v129) = v86;
  sub_1BFF993A8(&v129, &v124);
  char v87 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v127 = v36;
  sub_1BFFB4A24(&v124, 0xD00000000000001ALL, 0x80000001C16173A0, v87);
  uint64_t v88 = v127;
  swift_bridgeObjectRelease();
  sub_1C09DF838((uint64_t)a1 + v27[12], (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v6, 1, v122) == 1)
  {
    sub_1BFE54830((uint64_t)v6, (uint64_t)&unk_1EA199008, (uint64_t)type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
  }
  else
  {
    uint64_t v89 = (uint64_t)v119;
    sub_1C09DF920((uint64_t)v6, (uint64_t)v119);
    uint64_t v90 = PuzzleHistoryInfo.asDictionary.getter();
    sub_1BFFB4FA4();
    *((void *)&v130 + 1) = v91;
    *(void *)&long long v129 = v90;
    sub_1BFF993A8(&v129, &v124);
    char v92 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v88;
    sub_1BFFB4A24(&v124, 0xD000000000000011, 0x80000001C1617400, v92);
    uint64_t v88 = v127;
    swift_bridgeObjectRelease();
    sub_1C09DF984(v89, (uint64_t (*)(void))type metadata accessor for PuzzleHistoryInfo);
  }
  uint64_t v93 = sub_1C09DEF30(*a1);
  if (v93)
  {
    uint64_t v94 = v93;
    sub_1BFFB4FA4();
    *((void *)&v130 + 1) = v95;
    *(void *)&long long v129 = v94;
    sub_1BFF993A8(&v129, &v124);
    char v96 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v88;
    sub_1BFFB4A24(&v124, 0xD000000000000013, 0x80000001C16173E0, v96);
    uint64_t v88 = v127;
    swift_bridgeObjectRelease();
  }
  char v97 = sub_1C09DF3A0(*(uint64_t *)((char *)a1 + v27[17]));
  if (v97)
  {
    unsigned __int8 v98 = v97;
    sub_1C09DFB60(0, &qword_1EB880D28, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB320]);
    *((void *)&v130 + 1) = v99;
    *(void *)&long long v129 = v98;
    sub_1BFF993A8(&v129, &v124);
    char v100 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v88;
    sub_1BFFB4A24(&v124, 0xD000000000000012, 0x80000001C16173C0, v100);
    swift_bridgeObjectRelease();
  }
  char v101 = self;
  uint64_t v102 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  *(void *)&long long v129 = 0;
  id v103 = objc_msgSend(v101, sel_dataWithJSONObject_options_error_, v102, 2, &v129);

  id v104 = (id)v129;
  if (!v103)
  {
    uint64_t v1 = v104;
    sub_1C1515D3C();

    goto LABEL_51;
  }
  uint64_t v105 = sub_1C151606C();
  unint64_t v107 = v106;

  uint64_t v55 = v123;
  switch(v107 >> 62)
  {
    case 1uLL:
      if (v105 >> 32 < (int)v105)
      {
        __break(1u);
LABEL_70:
        __break(1u);
      }
      sub_1BFE95820(v105, v107);
      swift_retain();
      uint64_t v114 = sub_1C037F8CC((int)v105, v105 >> 32, v107 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      if (v55) {
        goto LABEL_72;
      }
      uint64_t v1 = (void *)v114;
      uint64_t v116 = v115;
      sub_1BFE95664(v105, v107);
      if (!v116) {
        goto LABEL_59;
      }
      goto LABEL_66;
    case 2uLL:
      uint64_t v109 = *(void *)(v105 + 16);
      uint64_t v110 = *(void *)(v105 + 24);
      sub_1BFE95820(v105, v107);
      swift_retain();
      swift_retain();
      uint64_t v111 = sub_1C037F8CC(v109, v110, v107 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      if (v55)
      {
        swift_release();
        swift_release();
        __break(1u);
LABEL_72:
        sub_1BFE95664(v105, v107);
        __break(1u);
LABEL_73:
        swift_release();
        swift_release();
        __break(1u);
LABEL_74:
        sub_1BFE95878(v55, v54);
        __break(1u);
        JUMPOUT(0x1C09DDD84);
      }
      uint64_t v1 = (void *)v111;
      uint64_t v113 = v112;
      swift_release();
      swift_release();
      if (v113) {
        goto LABEL_66;
      }
LABEL_59:
      uint64_t v127 = v105;
      unint64_t v128 = v107;
      sub_1BFE95820(v105, v107);
      sub_1C00C2AD4();
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v124, (uint64_t)&v129);
        __swift_project_boxed_opaque_existential_1(&v129, *((uint64_t *)&v130 + 1));
        if (sub_1C152054C())
        {
          __swift_project_boxed_opaque_existential_1(&v129, *((uint64_t *)&v130 + 1));
          sub_1C152053C();
          sub_1BFE95664(v105, v107);
          uint64_t v1 = (void *)v124;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
          goto LABEL_67;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
      }
      else
      {
        uint64_t v126 = 0;
        long long v124 = 0u;
        long long v125 = 0u;
        sub_1BFE54830((uint64_t)&v124, (uint64_t)&qword_1EA1A2000, (uint64_t)sub_1C00C2AD4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
      }
      uint64_t v108 = sub_1C037F818(v105, v107);
LABEL_65:
      uint64_t v1 = (void *)v108;
LABEL_66:
      sub_1BFE95664(v105, v107);
LABEL_67:
      sub_1BFE95664(v105, v107);
      break;
    case 3uLL:
      *(void *)((char *)&v124 + 6) = 0;
      *(void *)&long long v124 = 0;
      sub_1C037FB34((uint64_t *)&v129);
      sub_1BFE95664(v105, v107);
      sub_1BFE95664(v105, v107);
      return (void *)v129;
    default:
      *(void *)&long long v129 = v105;
      WORD4(v129) = v107;
      BYTE10(v129) = BYTE2(v107);
      BYTE11(v129) = BYTE3(v107);
      BYTE12(v129) = BYTE4(v107);
      BYTE13(v129) = BYTE5(v107);
      uint64_t v108 = sub_1C151E75C();
      goto LABEL_65;
  }
  return v1;
}

uint64_t sub_1C09DDDA4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PuzzleDatastore()
{
  return self;
}

uint64_t sub_1C09DDE08(uint64_t *a1, uint64_t *a2)
{
  return sub_1C09DFBAC(*a1, *a2);
}

uint64_t type metadata accessor for PuzzleDatastoreInfo()
{
  uint64_t result = qword_1EA1A2030;
  if (!qword_1EA1A2030) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09DDE60()
{
  uint64_t v0 = sub_1C15154CC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151E68C();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C1515F4C();
  sub_1C151E67C();
  uint64_t v5 = sub_1C151E5DC();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  v10[0] = v5;
  v10[1] = v7;
  sub_1C151545C();
  sub_1BFF27ECC();
  uint64_t v8 = sub_1C151FE9C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1C09DE19C()
{
  unint64_t result = qword_1EA1A1FF0;
  if (!qword_1EA1A1FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1FF0);
  }
  return result;
}

uint64_t sub_1C09DE1F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  unint64_t v3 = 0xD000000000000011;
  if (v1) {
    unint64_t v3 = 0xD000000000000013;
  }
  unint64_t v4 = 0x80000001C1609E10;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  if (!v1) {
    unint64_t v4 = 0x80000001C1609E30;
  }
  *(void *)&long long v11 = v3;
  *((void *)&v11 + 1) = v4;
  sub_1BFF993A8(&v11, v10);
  uint64_t v6 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BFFB4A24(v10, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v12 = v5;
    *(void *)&long long v11 = v2;
    *((void *)&v11 + 1) = v1;
    sub_1BFF993A8(&v11, v10);
    swift_bridgeObjectRetain();
    char v8 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BFFB4A24(v10, 25705, 0xE200000000000000, v8);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1C09DE304(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  uint64_t result = NFInternalBuild();
  if (result)
  {
    unint64_t v3 = self;
    id v4 = objc_msgSend(v3, sel_standardUserDefaults);
    uint64_t v5 = (void *)sub_1C151E5EC();
    unsigned int v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

    if (v6) {
      BOOL v7 = v1 > 1;
    }
    else {
      BOOL v7 = 1;
    }
    if (v7)
    {
      return 0;
    }
    else
    {
      id v8 = objc_msgSend(v3, sel_standardUserDefaults);
      uint64_t v9 = (void *)sub_1C151E5EC();
      objc_msgSend(v8, sel_setBool_forKey_, 0, v9);

      return 1;
    }
  }
  return result;
}

uint64_t sub_1C09DE414(uint64_t a1, char a2)
{
  uint64_t v2 = 0;
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a1 + 64);
  if (v3 != 1)
  {
    uint64_t v5 = *(void *)a1;
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    unint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v57 = *(void *)(a1 + 56);
    char v52 = *(unsigned char *)(a1 + 72);
    uint64_t v12 = MEMORY[0x1E4FBB550];
    uint64_t v64 = MEMORY[0x1E4FBB550];
    uint64_t v53 = v5;
    *(void *)&long long v63 = v5;
    sub_1BFF993A8(&v63, &v58);
    uint64_t v55 = v7;
    unint64_t v56 = v9;
    sub_1C00C2AC0(v7, v9);
    swift_bridgeObjectRetain();
    uint64_t v13 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = v13;
    sub_1BFFB4A24(&v58, 0x73736572676F7270, 0xED00006C6576654CLL, isUniquelyReferenced_nonNull_native);
    uint64_t v15 = v61;
    swift_bridgeObjectRelease();
    uint64_t v64 = v12;
    uint64_t v54 = v6;
    *(void *)&long long v63 = v6;
    sub_1BFF993A8(&v63, &v58);
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = v15;
    sub_1BFFB4A24(&v58, 0x6172754479616C70, 0xEC0000006E6F6974, v16);
    uint64_t v17 = v61;
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBB390];
    uint64_t v64 = MEMORY[0x1E4FBB390];
    LOBYTE(v63) = v8 & 1;
    sub_1BFF993A8(&v63, &v58);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = v17;
    sub_1BFFB4A24(&v58, 0x6465766C6F537369, 0xE800000000000000, v19);
    uint64_t v20 = v61;
    swift_bridgeObjectRelease();
    uint64_t v64 = v18;
    LOBYTE(v63) = v52 & 1;
    sub_1BFF993A8(&v63, &v58);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = v20;
    sub_1BFFB4A24(&v58, 0x6576655264657375, 0xEA00000000006C61, v21);
    uint64_t v22 = v61;
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v64 = v12;
      *(void *)&long long v63 = v10;
      sub_1BFF993A8(&v63, &v58);
      char v23 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v61 = v22;
      sub_1BFFB4A24(&v58, 0x65726F6373, 0xE500000000000000, v23);
      uint64_t v22 = v61;
      swift_bridgeObjectRelease();
    }
    uint64_t v24 = MEMORY[0x1E4FBB1A0];
    if (v3)
    {
      uint64_t v64 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v63 = v57;
      *((void *)&v63 + 1) = v3;
      sub_1BFF993A8(&v63, &v58);
      swift_bridgeObjectRetain();
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v61 = v22;
      sub_1BFFB4A24(&v58, 0x44496B6E6172, 0xE600000000000000, v25);
      uint64_t v22 = v61;
      swift_bridgeObjectRelease();
    }
    if ((a2 & 1) == 0 && v9 >> 60 != 15)
    {
      switch(v9 >> 62)
      {
        case 1uLL:
          if (v55 >> 32 < (int)v55) {
            goto LABEL_44;
          }
          sub_1C00C2AC0(v55, v9);
          sub_1BFE95820(v55, v9);
          swift_retain();
          uint64_t v26 = sub_1C037F8CC((int)v55, v55 >> 32, v9 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
          uint64_t v28 = v29;
          sub_1BFE95878(v55, v56);
          if (v28) {
            goto LABEL_22;
          }
LABEL_15:
          uint64_t v61 = v55;
          unint64_t v62 = v56;
          sub_1BFE95820(v55, v56);
          sub_1C00C2AD4();
          if (swift_dynamicCast())
          {
            sub_1BFC773DC(&v58, (uint64_t)&v63);
            __swift_project_boxed_opaque_existential_1(&v63, v64);
            if (sub_1C152054C())
            {
              __swift_project_boxed_opaque_existential_1(&v63, v64);
              sub_1C152053C();
              sub_1BFE95878(v55, v56);
              uint64_t v28 = *((void *)&v58 + 1);
              uint64_t v26 = v58;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
              goto LABEL_23;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
          }
          else
          {
            uint64_t v60 = 0;
            long long v58 = 0u;
            long long v59 = 0u;
            sub_1BFE54830((uint64_t)&v58, (uint64_t)&qword_1EA1A2000, (uint64_t)sub_1C00C2AD4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
          }
          uint64_t v26 = sub_1C037F818(v55, v56);
          uint64_t v28 = v33;
LABEL_22:
          sub_1BFE95878(v55, v56);
LABEL_23:
          uint64_t v64 = v24;
          *(void *)&long long v63 = v26;
          *((void *)&v63 + 1) = v28;
          sub_1BFF993A8(&v63, &v58);
          char v34 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v61 = v22;
          sub_1BFFB4A24(&v58, 0x73736572676F7270, 0xEC00000061746144, v34);
          swift_bridgeObjectRelease();
          sub_1BFE95878(v55, v56);
          break;
        case 2uLL:
          uint64_t v30 = *(void *)(v55 + 16);
          uint64_t v31 = *(void *)(v55 + 24);
          sub_1C00C2AC0(v55, v56);
          sub_1C00C2AC0(v55, v56);
          swift_retain();
          swift_retain();
          uint64_t v26 = sub_1C037F8CC(v30, v31, v56 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
          uint64_t v28 = v32;
          swift_release();
          swift_release();
          if (!v28) {
            goto LABEL_15;
          }
          goto LABEL_22;
        case 3uLL:
          *(void *)((char *)&v58 + 6) = 0;
          *(void *)&long long v58 = 0;
          sub_1C037FB34((uint64_t *)&v63);
          sub_1BFE95878(v55, v9);
          uint64_t v28 = *((void *)&v63 + 1);
          uint64_t v26 = v63;
          goto LABEL_23;
        default:
          *(void *)&long long v63 = v55;
          DWORD2(v63) = v9;
          WORD6(v63) = WORD2(v9);
          uint64_t v26 = sub_1C151E75C();
          uint64_t v28 = v27;
          sub_1BFE95878(v55, v56);
          goto LABEL_23;
      }
    }
    char v35 = self;
    uint64_t v36 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    *(void *)&long long v63 = 0;
    id v37 = objc_msgSend(v35, sel_dataWithJSONObject_options_error_, v36, 2, &v63);

    id v38 = (id)v63;
    if (v37)
    {
      uint64_t v39 = sub_1C151606C();
      unint64_t v41 = v40;

      switch(v41 >> 62)
      {
        case 1uLL:
          if (v39 >> 32 < (int)v39)
          {
            __break(1u);
LABEL_44:
            __break(1u);
          }
          sub_1BFE95820(v39, v41);
          swift_retain();
          uint64_t v2 = sub_1C037F8CC((int)v39, v39 >> 32, v41 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
          uint64_t v46 = v45;
          sub_1BFE95664(v39, v41);
          if (v46) {
            goto LABEL_40;
          }
LABEL_32:
          uint64_t v61 = v39;
          unint64_t v62 = v41;
          sub_1BFE95820(v39, v41);
          sub_1C00C2AD4();
          if (swift_dynamicCast())
          {
            sub_1BFC773DC(&v58, (uint64_t)&v63);
            __swift_project_boxed_opaque_existential_1(&v63, v64);
            if (sub_1C152054C())
            {
              __swift_project_boxed_opaque_existential_1(&v63, v64);
              sub_1C152053C();
              sub_1BFE95664(v39, v41);
              uint64_t v2 = v58;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
              goto LABEL_41;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
          }
          else
          {
            uint64_t v60 = 0;
            long long v58 = 0u;
            long long v59 = 0u;
            sub_1BFE54830((uint64_t)&v58, (uint64_t)&qword_1EA1A2000, (uint64_t)sub_1C00C2AD4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
          }
          uint64_t v42 = sub_1C037F818(v39, v41);
LABEL_39:
          uint64_t v2 = v42;
LABEL_40:
          sub_1BFE95664(v39, v41);
LABEL_41:
          sub_1BFE95664(v39, v41);
          sub_1C01DA250(v53, v54, v8, v55, v56, v10, v11, v57, v3);
          break;
        case 2uLL:
          uint64_t v47 = *(void *)(v39 + 16);
          uint64_t v48 = *(void *)(v39 + 24);
          sub_1BFE95820(v39, v41);
          swift_retain();
          swift_retain();
          uint64_t v2 = sub_1C037F8CC(v47, v48, v41 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
          uint64_t v50 = v49;
          swift_release();
          swift_release();
          if (!v50) {
            goto LABEL_32;
          }
          goto LABEL_40;
        case 3uLL:
          *(void *)((char *)&v58 + 6) = 0;
          *(void *)&long long v58 = 0;
          sub_1C037FB34((uint64_t *)&v63);
          sub_1BFE95664(v39, v41);
          sub_1BFE95664(v39, v41);
          sub_1C01DA250(v53, v54, v8, v55, v56, v10, v11, v57, v3);
          return v63;
        default:
          *(void *)&long long v63 = v39;
          WORD4(v63) = v41;
          BYTE10(v63) = BYTE2(v41);
          BYTE11(v63) = BYTE3(v41);
          BYTE12(v63) = BYTE4(v41);
          BYTE13(v63) = BYTE5(v41);
          uint64_t v42 = sub_1C151E75C();
          goto LABEL_39;
      }
    }
    else
    {
      __int16 v43 = v38;
      char v44 = (void *)sub_1C1515D3C();

      swift_willThrow();
      sub_1C01DA250(v53, v54, v8, v55, v56, v10, v11, v57, v3);

      return 0;
    }
  }
  return v2;
}

uint64_t sub_1C09DEF30(void *a1)
{
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v34 - v7;
  swift_getObjectType();
  id v9 = objc_msgSend(a1, sel_publishDate);
  if (!v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
LABEL_30:
    sub_1BFE54830((uint64_t)v8, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
    return 0;
  }
  uint64_t v10 = v9;
  sub_1C15162BC();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    goto LABEL_30;
  }
  sub_1BFE54830((uint64_t)v8, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFAFC);
  uint64_t v11 = 0;
  uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    int v14 = byte_1F1B6DB18[v11 + 32];
    LOBYTE(v37.value._countAndFlagsBits) = byte_1F1B6DB18[v11 + 32];
    Swift::String_optional v15 = FCPuzzleProviding.publishDateString(format:)((NewsFeed::PuzzlePublishDateFormat)&v37);
    if (!v15.value._object) {
      goto LABEL_6;
    }
    uint64_t v16 = 0x6D756964656DLL;
    if (v14 != 1) {
      uint64_t v16 = 1735290732;
    }
    unint64_t v17 = 0xE600000000000000;
    if (v14 != 1) {
      unint64_t v17 = 0xE400000000000000;
    }
    uint64_t v18 = v14 ? v16 : 0x74726F6873;
    uint64_t v19 = v14 ? v17 : 0xE500000000000000;
    uint64_t v38 = MEMORY[0x1E4FBB1A0];
    Swift::String_optional v37 = v15;
    sub_1BFF993A8(&v37, v36);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v35 = v12;
    unint64_t v22 = sub_1BFEF2D8C(v18, v19);
    uint64_t v23 = v12[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (v12[3] >= v25)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v12 = v35;
        if ((v21 & 1) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        sub_1C106AA18();
        uint64_t v12 = v35;
        if ((v26 & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    else
    {
      sub_1BFFB4BE4(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_1BFEF2D8C(v18, v19);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_34;
      }
      unint64_t v22 = v27;
      uint64_t v12 = v35;
      if ((v26 & 1) == 0)
      {
LABEL_25:
        v12[(v22 >> 6) + 8] |= 1 << v22;
        uint64_t v29 = (uint64_t *)(v12[6] + 16 * v22);
        *uint64_t v29 = v18;
        v29[1] = v19;
        sub_1BFF993A8(v36, (_OWORD *)(v12[7] + 32 * v22));
        uint64_t v30 = v12[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_33;
        }
        _OWORD v12[2] = v32;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    uint64_t v13 = (_OWORD *)(v12[7] + 32 * v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    sub_1BFF993A8(v36, v13);
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    if (++v11 == 3) {
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

void *sub_1C09DF3A0(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v39 = *(void *)(a1 + 16);
  if (!v39) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v2 = v1 + 56;
  uint64_t v28 = MEMORY[0x1E4FBC840] + 8;
  do
  {
    uint64_t v3 = *(void *)(v2 - 16);
    BOOL v31 = *(void **)(v2 - 24);
    uint64_t v32 = v2;
    uint64_t v4 = *(void *)(v2 - 8);
    uint64_t v5 = *(void *)v2;
    uint64_t v7 = *(void *)(v2 + 8);
    unint64_t v6 = *(void *)(v2 + 16);
    uint64_t v8 = *(void *)(v2 + 24);
    uint64_t v9 = *(void *)(v2 + 32);
    uint64_t v10 = *(void *)(v2 + 40);
    uint64_t v11 = *(void *)(v2 + 48);
    char v12 = *(unsigned char *)(v2 + 56);
    swift_unknownObjectRetain();
    char v33 = v12;
    uint64_t v34 = v11;
    uint64_t v36 = v9;
    uint64_t v37 = v8;
    uint64_t v35 = v10;
    sub_1C02B0C18(v3, v4, v5, v7, v6, v8, v9, v10, v11);
    uint64_t v13 = sub_1C09DB5E8(v31);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v30 = v13;
      sub_1C09DFAFC(0, &qword_1EA1A2010, (uint64_t (*)(uint64_t))sub_1C09DF9E4, MEMORY[0x1E4FBBE00]);
      uint64_t v16 = v3;
      uint64_t v29 = v3;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
      *(void *)(inited + 32) = 0x696669746E656469;
      *(void *)(inited + 40) = 0xEA00000000007265;
      id v18 = objc_msgSend(v31, sel_identifier);
      uint64_t v19 = sub_1C151E62C();
      uint64_t v21 = v20;

      *(void *)(inited + 48) = v19;
      *(void *)(inited + 56) = v21;
      *(void *)(inited + 64) = 0x656C7A7A7570;
      *(void *)(inited + 72) = 0xE600000000000000;
      *(void *)(inited + 80) = v30;
      *(void *)(inited + 88) = v15;
      *(void *)(inited + 96) = 0x73736572676F7270;
      *(void *)(inited + 104) = 0xE800000000000000;
      *(void *)&long long v40 = v16;
      *((void *)&v40 + 1) = v4;
      uint64_t v41 = v5;
      uint64_t v42 = v7;
      unint64_t v43 = v6;
      uint64_t v44 = v37;
      uint64_t v45 = v36;
      uint64_t v46 = v35;
      uint64_t v47 = v34;
      char v48 = v33;
      *(void *)(inited + 112) = sub_1C09DE414((uint64_t)&v40, 1);
      *(void *)(inited + 120) = v22;
      unint64_t v23 = sub_1C018E198(inited);
      sub_1C09DFA70();
      *((void *)&v50 + 1) = v24;
      *(void *)&long long v49 = v23;
      swift_unknownObjectRelease();
      sub_1C01DA250(v29, v4, v5, v7, v6, v37, v36, v35, v34);
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
      swift_unknownObjectRelease();
      sub_1C01DA250(v3, v4, v5, v7, v6, v8, v9, v10, v11);
    }
    if (*((void *)&v50 + 1))
    {
      sub_1BFF993A8(&v49, &v40);
      sub_1BFF993A8(&v40, &v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = sub_1C0EE41A0(0, v38[2] + 1, 1, v38);
      }
      unint64_t v26 = v38[2];
      unint64_t v25 = v38[3];
      if (v26 >= v25 >> 1) {
        uint64_t v38 = sub_1C0EE41A0((void *)(v25 > 1), v26 + 1, 1, v38);
      }
      uint64_t v38[2] = v26 + 1;
      sub_1BFF993A8(&v49, &v38[4 * v26 + 4]);
    }
    else
    {
      sub_1BFE54830((uint64_t)&v49, (uint64_t)&qword_1EB87A940, v28, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C09DFB60);
    }
    uint64_t v2 = v32 + 88;
    --v39;
  }
  while (v39);
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_1C09DF774(void *a1)
{
  if (!NFInternalBuild()) {
    return (uint64_t)objc_msgSend(a1, sel_showInfoModalOnFirstPlay);
  }
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v3 = (void *)sub_1C151E5EC();
  id v4 = objc_msgSend(v2, sel_integerForKey_, v3);

  if (v4 == (id)2) {
    return 0;
  }
  if (v4 != (id)1) {
    return (uint64_t)objc_msgSend(a1, sel_showInfoModalOnFirstPlay);
  }
  return 1;
}

uint64_t sub_1C09DF838(uint64_t a1, uint64_t a2)
{
  sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1C09DF8CC(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_1C09DF920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleHistoryInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09DF984(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C09DF9E4()
{
  if (!qword_1EA1A2018)
  {
    sub_1C09DFB60(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A2018);
    }
  }
}

void sub_1C09DFA70()
{
  if (!qword_1EA1A2028)
  {
    sub_1C09DFB60(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2028);
    }
  }
}

void sub_1C09DFAFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C09DFB60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C09DFBAC(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(*(id *)(a1 + 16), sel_JSONString);
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(*(id *)(a2 + 16), sel_JSONString);
  uint64_t v8 = sub_1C151E62C();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t destroy for PuzzleDatastoreRelatedPuzzleInfo(uint64_t *a1)
{
  uint64_t result = swift_unknownObjectRelease();
  if (a1[9] != 1)
  {
    unint64_t v3 = a1[5];
    if (v3 >> 60 != 15) {
      sub_1BFE95664(a1[4], v3);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PuzzleDatastoreRelatedPuzzleInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 72);
  swift_unknownObjectRetain();
  if (v5 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    long long v7 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v8 = (uint64_t *)(a2 + 32);
    unint64_t v9 = *(void *)(a2 + 40);
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
    }
    else
    {
      uint64_t v10 = *v8;
      sub_1BFE95820(*v8, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v9;
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v5;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PuzzleDatastoreRelatedPuzzleInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) != 1)
  {
    if (v6 == 1)
    {
      sub_1C09DFFDC(a1 + 8);
      *uint64_t v4 = *v5;
      long long v11 = *(_OWORD *)(a2 + 40);
      long long v10 = *(_OWORD *)(a2 + 56);
      long long v12 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
      *(_OWORD *)(a1 + 40) = v11;
      *(_OWORD *)(a1 + 56) = v10;
      *(_OWORD *)(a1 + 24) = v12;
      return a1;
    }
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v15 = (uint64_t *)(a2 + 32);
    unint64_t v16 = *(void *)(a2 + 40);
    if (*(void *)(a1 + 40) >> 60 == 15)
    {
      if (v16 >> 60 != 15)
      {
        uint64_t v17 = *v15;
        sub_1BFE95820(*v15, *(void *)(a2 + 40));
        *(void *)(a1 + 32) = v17;
        *(void *)(a1 + 40) = v16;
LABEL_17:
        uint64_t v23 = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        *(void *)(a1 + 48) = v23;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        return a1;
      }
    }
    else
    {
      if (v16 >> 60 != 15)
      {
        uint64_t v20 = *v15;
        sub_1BFE95820(*v15, *(void *)(a2 + 40));
        uint64_t v21 = *(void *)(a1 + 32);
        unint64_t v22 = *(void *)(a1 + 40);
        *(void *)(a1 + 32) = v20;
        *(void *)(a1 + 40) = v16;
        sub_1BFE95664(v21, v22);
        goto LABEL_17;
      }
      sub_1C01D91B8(a1 + 32);
    }
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v15;
    goto LABEL_17;
  }
  if (v6 == 1)
  {
    *uint64_t v4 = *v5;
    long long v7 = *(_OWORD *)(a2 + 24);
    long long v8 = *(_OWORD *)(a2 + 40);
    long long v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    *(_OWORD *)(a1 + 24) = v7;
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v13 = (uint64_t *)(a2 + 32);
    unint64_t v14 = *(void *)(a2 + 40);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v18 = *v13;
      sub_1BFE95820(*v13, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v14;
    }
    uint64_t v19 = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 48) = v19;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C09DFFDC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for PuzzleDatastoreRelatedPuzzleInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  if (*(void *)(a1 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v5 = *(void *)(a2 + 72);
  if (v5 != 1)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    long long v8 = (void *)(a2 + 32);
    unint64_t v9 = *(void *)(a1 + 40);
    if (v9 >> 60 != 15)
    {
      unint64_t v10 = *(void *)(a2 + 40);
      if (v10 >> 60 != 15)
      {
        uint64_t v11 = *(void *)(a1 + 32);
        *(void *)(a1 + 32) = *v8;
        *(void *)(a1 + 40) = v10;
        sub_1BFE95664(v11, v9);
        goto LABEL_10;
      }
      sub_1C01D91B8(a1 + 32);
    }
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
LABEL_10:
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v5;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    return a1;
  }
  sub_1C09DFFDC(a1 + 8);
LABEL_4:
  long long v6 = v4[3];
  *(_OWORD *)(a1 + 40) = v4[2];
  *(_OWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 65) = *(_OWORD *)((char *)v4 + 57);
  long long v7 = v4[1];
  *(_OWORD *)(a1 + 8) = *v4;
  *(_OWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleDatastoreRelatedPuzzleInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleDatastoreRelatedPuzzleInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleDatastoreRelatedPuzzleInfo()
{
  return &type metadata for PuzzleDatastoreRelatedPuzzleInfo;
}

unsigned char *storeEnumTagSinglePayload for PuzzleDatastoreError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C09E028CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleDatastoreError()
{
  return &type metadata for PuzzleDatastoreError;
}

char *sub_1C09E02C4(char *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    long long v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    long long v7 = a1;
    uint64_t v8 = type metadata accessor for PuzzleResource();
    uint64_t v9 = *(int *)(v8 + 20);
    unint64_t v10 = &v7[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_unknownObjectRetain();
    v13(v10, v11, v12);
    v13(&v7[*(int *)(v8 + 24)], &a2[*(int *)(v8 + 24)], v12);
    uint64_t v14 = a3[6];
    v7[a3[5]] = a2[a3[5]];
    v7[v14] = a2[v14];
    uint64_t v15 = a3[7];
    unint64_t v16 = &v7[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *(void *)&a2[v15 + 64];
    if (v18 == 1)
    {
      long long v19 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v19;
      *(_OWORD *)(v16 + 57) = *(_OWORD *)(v17 + 57);
      long long v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v20;
    }
    else
    {
      *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
      v16[16] = v17[16];
      unint64_t v21 = *((void *)v17 + 4);
      if (v21 >> 60 == 15)
      {
        *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
      }
      else
      {
        uint64_t v22 = *((void *)v17 + 3);
        sub_1BFE95820(v22, *((void *)v17 + 4));
        *((void *)v16 + 3) = v22;
        *((void *)v16 + 4) = v21;
        uint64_t v18 = *((void *)v17 + 8);
      }
      *((void *)v16 + 5) = *((void *)v17 + 5);
      v16[48] = v17[48];
      *((void *)v16 + 7) = *((void *)v17 + 7);
      *((void *)v16 + 8) = v18;
      v16[72] = v17[72];
      swift_bridgeObjectRetain();
    }
    uint64_t v23 = a3[8];
    uint64_t v24 = &v7[v23];
    unint64_t v25 = &a2[v23];
    uint64_t v26 = *((void *)v25 + 1);
    if (v26 == 1)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
    }
    else
    {
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
      swift_bridgeObjectRetain();
    }
    uint64_t v27 = a3[9];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = &a2[v27];
    unint64_t v30 = *((void *)v29 + 1);
    if (v30 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    }
    else
    {
      uint64_t v31 = *(void *)v29;
      sub_1BFE95820(*(void *)v29, *((void *)v29 + 1));
      *(void *)uint64_t v28 = v31;
      *((void *)v28 + 1) = v30;
    }
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = &v7[v32];
    uint64_t v35 = &a2[v32];
    uint64_t v36 = *((void *)v35 + 1);
    uint64_t v37 = *(void *)&a2[v33];
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    *(void *)&v7[v33] = v37;
    uint64_t v38 = a3[12];
    __dst = &v7[v38];
    uint64_t v39 = &a2[v38];
    uint64_t v40 = type metadata accessor for PuzzleHistoryInfo();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v42(v39, 1, v40))
    {
      sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      uint64_t v44 = sub_1C151631C();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v39, 1, v44))
      {
        sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        memcpy(__dst, v39, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, v39, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
      }
      uint64_t v47 = *(int *)(v40 + 20);
      char v48 = &__dst[v47];
      long long v49 = &v39[v47];
      *(void *)char v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = *(int *)(v40 + 24);
      char v51 = &__dst[v50];
      char v52 = &v39[v50];
      v51[8] = v52[8];
      *(void *)char v51 = *(void *)v52;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
    }
    uint64_t v53 = a3[14];
    v7[a3[13]] = a2[a3[13]];
    v7[v53] = a2[v53];
    uint64_t v54 = a3[15];
    uint64_t v55 = a3[16];
    unint64_t v56 = &v7[v54];
    uint64_t v57 = &a2[v54];
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)unint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = v58;
    long long v59 = &v7[v55];
    uint64_t v60 = &a2[v55];
    uint64_t v61 = *((void *)v60 + 1);
    *(void *)long long v59 = *(void *)v60;
    *((void *)v59 + 1) = v61;
    *(void *)&v7[a3[17]] = *(void *)&a2[a3[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1C09E07D0(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = type metadata accessor for PuzzleResource();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1C1515FDC();
  long long v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(v4 + 24), v6);
  uint64_t v8 = (uint64_t *)(a1 + a2[7]);
  if (v8[8] != 1)
  {
    unint64_t v9 = v8[4];
    if (v9 >> 60 != 15) {
      sub_1BFE95664(v8[3], v9);
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[8] + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  unint64_t v10 = (uint64_t *)(a1 + a2[9]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_1BFE95664(*v10, v11);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = type metadata accessor for PuzzleHistoryInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = sub_1C151631C();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1C09E0A0C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = type metadata accessor for PuzzleResource();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = &a1[v7];
  unint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C1515FDC();
  unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_unknownObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 24)], &a2[*(int *)(v6 + 24)], v10);
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)&a2[v13 + 64];
  if (v16 == 1)
  {
    long long v17 = *((_OWORD *)v15 + 3);
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 3) = v17;
    *(_OWORD *)(v14 + 57) = *(_OWORD *)(v15 + 57);
    long long v18 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v18;
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    v14[16] = v15[16];
    unint64_t v19 = *((void *)v15 + 4);
    if (v19 >> 60 == 15)
    {
      *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
    }
    else
    {
      uint64_t v20 = *((void *)v15 + 3);
      sub_1BFE95820(v20, *((void *)v15 + 4));
      *((void *)v14 + 3) = v20;
      *((void *)v14 + 4) = v19;
      uint64_t v16 = *((void *)v15 + 8);
    }
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((void *)v14 + 8) = v16;
    v14[72] = v15[72];
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  if (v24 == 1)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *((_WORD *)v22 + 8) = *((_WORD *)v23 + 8);
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    *((_WORD *)v22 + 8) = *((_WORD *)v23 + 8);
    swift_bridgeObjectRetain();
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  unint64_t v28 = *((void *)v27 + 1);
  if (v28 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  else
  {
    uint64_t v29 = *(void *)v27;
    sub_1BFE95820(*(void *)v27, *((void *)v27 + 1));
    *(void *)uint64_t v26 = v29;
    *((void *)v26 + 1) = v28;
  }
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  uint64_t v34 = *((void *)v33 + 1);
  uint64_t v35 = *(void *)&a2[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = v34;
  *(void *)&a1[v31] = v35;
  uint64_t v36 = a3[12];
  __dst = &a1[v36];
  uint64_t v37 = &a2[v36];
  uint64_t v38 = type metadata accessor for PuzzleHistoryInfo();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v40(v37, 1, v38))
  {
    sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = sub_1C151631C();
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v37, 1, v42))
    {
      sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v37, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v37, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
    }
    uint64_t v45 = *(int *)(v38 + 20);
    uint64_t v46 = &__dst[v45];
    uint64_t v47 = &v37[v45];
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = *(int *)(v38 + 24);
    long long v49 = &__dst[v48];
    uint64_t v50 = &v37[v48];
    v49[8] = v50[8];
    *(void *)long long v49 = *(void *)v50;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  uint64_t v51 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v51] = a2[v51];
  uint64_t v52 = a3[15];
  uint64_t v53 = a3[16];
  uint64_t v54 = &a1[v52];
  uint64_t v55 = &a2[v52];
  uint64_t v56 = *((void *)v55 + 1);
  *(void *)uint64_t v54 = *(void *)v55;
  *((void *)v54 + 1) = v56;
  uint64_t v57 = &a1[v53];
  uint64_t v58 = &a2[v53];
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = *(void *)v58;
  *((void *)v57 + 1) = v59;
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1C09E0ECC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for PuzzleResource();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = &a1[v7];
  unint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C1515FDC();
  unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 24)], &a2[*(int *)(v6 + 24)], v10);
  a1[a3[5]] = a2[a3[5]];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v12 = a3[7];
  uint64_t v13 = (uint64_t)&a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)&a1[v12 + 64];
  uint64_t v16 = *(void *)&a2[v12 + 64];
  if (v15 != 1)
  {
    if (v16 == 1)
    {
      sub_1C09DFFDC(v13);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      long long v21 = *((_OWORD *)v14 + 2);
      long long v20 = *((_OWORD *)v14 + 3);
      long long v22 = *((_OWORD *)v14 + 1);
      *(_OWORD *)(v13 + 57) = *(_OWORD *)(v14 + 57);
      *(_OWORD *)(v13 + 32) = v21;
      *(_OWORD *)(v13 + 48) = v20;
      *(_OWORD *)(v13 + 16) = v22;
      goto LABEL_18;
    }
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = *((void *)v14 + 1);
    *(unsigned char *)(v13 + 16) = v14[16];
    uint64_t v25 = (uint64_t *)(v14 + 24);
    unint64_t v26 = *((void *)v14 + 4);
    if (*(void *)(v13 + 32) >> 60 == 15)
    {
      if (v26 >> 60 != 15)
      {
        uint64_t v27 = *v25;
        sub_1BFE95820(*v25, *((void *)v14 + 4));
        *(void *)(v13 + 24) = v27;
        *(void *)(v13 + 32) = v26;
LABEL_17:
        uint64_t v33 = *((void *)v14 + 5);
        *(unsigned char *)(v13 + 48) = v14[48];
        *(void *)(v13 + 40) = v33;
        *(void *)(v13 + 56) = *((void *)v14 + 7);
        *(void *)(v13 + 64) = *((void *)v14 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v13 + 72) = v14[72];
        goto LABEL_18;
      }
    }
    else
    {
      if (v26 >> 60 != 15)
      {
        uint64_t v30 = *v25;
        sub_1BFE95820(*v25, *((void *)v14 + 4));
        uint64_t v31 = *(void *)(v13 + 24);
        unint64_t v32 = *(void *)(v13 + 32);
        *(void *)(v13 + 24) = v30;
        *(void *)(v13 + 32) = v26;
        sub_1BFE95664(v31, v32);
        goto LABEL_17;
      }
      sub_1C01D91B8(v13 + 24);
    }
    *(_OWORD *)(v13 + 24) = *(_OWORD *)v25;
    goto LABEL_17;
  }
  if (v16 == 1)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    long long v17 = *((_OWORD *)v14 + 1);
    long long v18 = *((_OWORD *)v14 + 2);
    long long v19 = *((_OWORD *)v14 + 3);
    *(_OWORD *)(v13 + 57) = *(_OWORD *)(v14 + 57);
    *(_OWORD *)(v13 + 32) = v18;
    *(_OWORD *)(v13 + 48) = v19;
    *(_OWORD *)(v13 + 16) = v17;
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = *((void *)v14 + 1);
    *(unsigned char *)(v13 + 16) = v14[16];
    uint64_t v23 = (uint64_t *)(v14 + 24);
    unint64_t v24 = *((void *)v14 + 4);
    if (v24 >> 60 == 15)
    {
      *(_OWORD *)(v13 + 24) = *(_OWORD *)v23;
    }
    else
    {
      uint64_t v28 = *v23;
      sub_1BFE95820(*v23, *((void *)v14 + 4));
      *(void *)(v13 + 24) = v28;
      *(void *)(v13 + 32) = v24;
    }
    uint64_t v29 = *((void *)v14 + 5);
    *(unsigned char *)(v13 + 48) = v14[48];
    *(void *)(v13 + 40) = v29;
    *(void *)(v13 + 56) = *((void *)v14 + 7);
    *(void *)(v13 + 64) = *((void *)v14 + 8);
    *(unsigned char *)(v13 + 72) = v14[72];
    swift_bridgeObjectRetain();
  }
LABEL_18:
  uint64_t v34 = a3[8];
  uint64_t v35 = (uint64_t)&a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *(void *)&a1[v34 + 8];
  uint64_t v38 = *(void *)&a2[v34 + 8];
  if (v37 == 1)
  {
    if (v38 == 1)
    {
      long long v39 = *(_OWORD *)v36;
      *(_WORD *)(v35 + 16) = *((_WORD *)v36 + 8);
      *(_OWORD *)uint64_t v35 = v39;
    }
    else
    {
      *(void *)uint64_t v35 = *(void *)v36;
      *(void *)(v35 + 8) = *((void *)v36 + 1);
      *(unsigned char *)(v35 + 16) = v36[16];
      *(unsigned char *)(v35 + 17) = v36[17];
      swift_bridgeObjectRetain();
    }
  }
  else if (v38 == 1)
  {
    sub_1C09E17A8(v35);
    __int16 v40 = *((_WORD *)v36 + 8);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *(_WORD *)(v35 + 16) = v40;
  }
  else
  {
    *(void *)uint64_t v35 = *(void *)v36;
    *(void *)(v35 + 8) = *((void *)v36 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v35 + 16) = v36[16];
    *(unsigned char *)(v35 + 17) = v36[17];
  }
  uint64_t v41 = a3[9];
  uint64_t v42 = (uint64_t *)&a1[v41];
  uint64_t v43 = (uint64_t *)&a2[v41];
  unint64_t v44 = *(void *)&a2[v41 + 8];
  if (*(void *)&a1[v41 + 8] >> 60 == 15)
  {
    if (v44 >> 60 != 15)
    {
      uint64_t v45 = *v43;
      sub_1BFE95820(v45, v44);
      *uint64_t v42 = v45;
      v42[1] = v44;
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  if (v44 >> 60 == 15)
  {
    sub_1C01D91B8((uint64_t)v42);
LABEL_30:
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    goto LABEL_32;
  }
  uint64_t v46 = *v43;
  sub_1BFE95820(v46, v44);
  uint64_t v47 = *v42;
  unint64_t v48 = v42[1];
  *uint64_t v42 = v46;
  v42[1] = v44;
  sub_1BFE95664(v47, v48);
LABEL_32:
  uint64_t v49 = a3[10];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  *(void *)uint64_t v50 = *(void *)v51;
  *((void *)v50 + 1) = *((void *)v51 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_retain();
  swift_release();
  uint64_t v52 = a3[12];
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  uint64_t v55 = type metadata accessor for PuzzleHistoryInfo();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (!v58)
  {
    if (v59)
    {
      sub_1C09DF984((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for PuzzleHistoryInfo);
      goto LABEL_38;
    }
    uint64_t v64 = sub_1C151631C();
    uint64_t v92 = *(void *)(v64 - 8);
    uint64_t v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
    int v66 = v65(v53, 1, v64);
    int v67 = v65(v54, 1, v64);
    if (v66)
    {
      if (!v67)
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v53, v54, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v53, 0, 1, v64);
LABEL_47:
        uint64_t v77 = *(int *)(v55 + 20);
        char v78 = &v53[v77];
        uint64_t v79 = &v54[v77];
        uint64_t v80 = *(void *)v79;
        v78[8] = v79[8];
        *(void *)char v78 = v80;
        uint64_t v81 = *(int *)(v55 + 24);
        uint64_t v82 = &v53[v81];
        uint64_t v83 = &v54[v81];
        uint64_t v84 = *(void *)v83;
        v82[8] = v83[8];
        *(void *)uint64_t v82 = v84;
        goto LABEL_48;
      }
    }
    else
    {
      if (!v67)
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 24))(v53, v54, v64);
        goto LABEL_47;
      }
      (*(void (**)(char *, uint64_t))(v92 + 8))(v53, v64);
    }
    sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v53, v54, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_47;
  }
  if (v59)
  {
LABEL_38:
    sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
    memcpy(v53, v54, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v60 = sub_1C151631C();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v54, 1, v60))
  {
    sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v53, v54, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v53, v54, v60);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v53, 0, 1, v60);
  }
  uint64_t v68 = *(int *)(v55 + 20);
  uint64_t v69 = &v53[v68];
  char v70 = &v54[v68];
  uint64_t v71 = *(void *)v70;
  v69[8] = v70[8];
  *(void *)uint64_t v69 = v71;
  uint64_t v72 = *(int *)(v55 + 24);
  uint64_t v73 = &v53[v72];
  char v74 = &v54[v72];
  uint64_t v75 = *(void *)v74;
  v73[8] = v74[8];
  *(void *)uint64_t v73 = v75;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
LABEL_48:
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  uint64_t v85 = a3[15];
  char v86 = &a1[v85];
  char v87 = &a2[v85];
  *(void *)char v86 = *(void *)v87;
  *((void *)v86 + 1) = *((void *)v87 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = a3[16];
  uint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  *(void *)uint64_t v89 = *(void *)v90;
  *((void *)v89 + 1) = *((void *)v90 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C09E17A8(uint64_t a1)
{
  return a1;
}

char *sub_1C09E17FC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = type metadata accessor for PuzzleResource();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = &a1[v7];
  unint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C1515FDC();
  unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 24)], &a2[*(int *)(v6 + 24)], v10);
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(_OWORD *)(v15 + 57) = *(_OWORD *)(v16 + 57);
  long long v17 = *((_OWORD *)v16 + 3);
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  *((_OWORD *)v15 + 3) = v17;
  long long v18 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v18;
  long long v19 = &a1[v14];
  long long v20 = &a2[v14];
  *(_OWORD *)long long v19 = *(_OWORD *)v20;
  *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
  uint64_t v21 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  uint64_t v22 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  uint64_t v23 = &a1[v22];
  unint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for PuzzleHistoryInfo();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = sub_1C151631C();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
    {
      sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v23, v24, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
    }
    uint64_t v31 = *(int *)(v25 + 20);
    unint64_t v32 = &v23[v31];
    uint64_t v33 = &v24[v31];
    *(void *)unint64_t v32 = *(void *)v33;
    v32[8] = v33[8];
    uint64_t v34 = *(int *)(v25 + 24);
    uint64_t v35 = &v23[v34];
    uint64_t v36 = &v24[v34];
    v35[8] = v36[8];
    *(void *)uint64_t v35 = *(void *)v36;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v37 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v37] = a2[v37];
  uint64_t v38 = a3[16];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  *(_OWORD *)&a1[v38] = *(_OWORD *)&a2[v38];
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  return a1;
}

char *sub_1C09E1B8C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for PuzzleResource();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = &a1[v7];
  unint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C1515FDC();
  unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 24)], &a2[*(int *)(v6 + 24)], v10);
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[7];
  uint64_t v14 = (uint64_t)&a1[v13];
  uint64_t v15 = &a2[v13];
  if (*(void *)&a1[v13 + 64] == 1) {
    goto LABEL_4;
  }
  if (*((void *)v15 + 8) == 1)
  {
    sub_1C09DFFDC(v14);
LABEL_4:
    long long v16 = *((_OWORD *)v15 + 3);
    *(_OWORD *)(v14 + 32) = *((_OWORD *)v15 + 2);
    *(_OWORD *)(v14 + 48) = v16;
    *(_OWORD *)(v14 + 57) = *(_OWORD *)(v15 + 57);
    long long v17 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v17;
    goto LABEL_11;
  }
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(unsigned char *)(v14 + 16) = v15[16];
  long long v18 = v15 + 24;
  unint64_t v19 = *(void *)(v14 + 32);
  if (v19 >> 60 != 15)
  {
    unint64_t v20 = *((void *)v15 + 4);
    if (v20 >> 60 != 15)
    {
      uint64_t v21 = *(void *)(v14 + 24);
      *(void *)(v14 + 24) = *v18;
      *(void *)(v14 + 32) = v20;
      sub_1BFE95664(v21, v19);
      goto LABEL_10;
    }
    sub_1C01D91B8(v14 + 24);
  }
  *(_OWORD *)(v14 + 24) = *(_OWORD *)v18;
LABEL_10:
  *(void *)(v14 + 40) = *((void *)v15 + 5);
  *(unsigned char *)(v14 + 48) = v15[48];
  uint64_t v22 = *((void *)v15 + 8);
  *(void *)(v14 + 56) = *((void *)v15 + 7);
  *(void *)(v14 + 64) = v22;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 72) = v15[72];
LABEL_11:
  uint64_t v23 = a3[8];
  uint64_t v24 = (uint64_t)&a1[v23];
  uint64_t v25 = &a2[v23];
  if (*(void *)&a1[v23 + 8] == 1)
  {
LABEL_14:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_16;
  }
  uint64_t v26 = *((void *)v25 + 1);
  if (v26 == 1)
  {
    sub_1C09E17A8(v24);
    goto LABEL_14;
  }
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
LABEL_16:
  *(_WORD *)(v24 + 16) = *((_WORD *)v25 + 8);
  uint64_t v27 = a3[9];
  uint64_t v28 = (uint64_t)&a1[v27];
  uint64_t v29 = &a2[v27];
  unint64_t v30 = *(void *)&a1[v27 + 8];
  if (v30 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    goto LABEL_21;
  }
  unint64_t v31 = *((void *)v29 + 1);
  if (v31 >> 60 == 15)
  {
    sub_1C01D91B8(v28);
    goto LABEL_19;
  }
  uint64_t v32 = *(void *)v28;
  *(void *)uint64_t v28 = *(void *)v29;
  *(void *)(v28 + 8) = v31;
  sub_1BFE95664(v32, v30);
LABEL_21:
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (uint64_t *)&a2[v33];
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_release();
  uint64_t v38 = a3[12];
  long long v39 = &a1[v38];
  __int16 v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for PuzzleHistoryInfo();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (v45)
    {
      sub_1C09DF984((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for PuzzleHistoryInfo);
      goto LABEL_27;
    }
    uint64_t v50 = sub_1C151631C();
    uint64_t v79 = *(void *)(v50 - 8);
    uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
    int v52 = v51(v39, 1, v50);
    int v53 = v51(v40, 1, v50);
    if (v52)
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v39, v40, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v39, 0, 1, v50);
LABEL_36:
        uint64_t v61 = *(int *)(v41 + 20);
        uint64_t v62 = &v39[v61];
        uint64_t v63 = &v40[v61];
        *(void *)uint64_t v62 = *(void *)v63;
        v62[8] = v63[8];
        uint64_t v64 = *(int *)(v41 + 24);
        uint64_t v65 = &v39[v64];
        int v66 = &v40[v64];
        v65[8] = v66[8];
        *(void *)uint64_t v65 = *(void *)v66;
        goto LABEL_37;
      }
    }
    else
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 40))(v39, v40, v50);
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v79 + 8))(v39, v50);
    }
    sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v39, v40, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_36;
  }
  if (v45)
  {
LABEL_27:
    sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
    memcpy(v39, v40, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_37;
  }
  uint64_t v46 = sub_1C151631C();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v40, 1, v46))
  {
    sub_1C09DFAFC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v39, v40, v46);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v39, 0, 1, v46);
  }
  uint64_t v54 = *(int *)(v41 + 20);
  uint64_t v55 = &v39[v54];
  uint64_t v56 = &v40[v54];
  *(void *)uint64_t v55 = *(void *)v56;
  v55[8] = v56[8];
  uint64_t v57 = *(int *)(v41 + 24);
  int v58 = &v39[v57];
  int v59 = &v40[v57];
  v58[8] = v59[8];
  *(void *)int v58 = *(void *)v59;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_37:
  uint64_t v67 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v67] = a2[v67];
  uint64_t v68 = a3[15];
  uint64_t v69 = &a1[v68];
  char v70 = (uint64_t *)&a2[v68];
  uint64_t v72 = *v70;
  uint64_t v71 = v70[1];
  *(void *)uint64_t v69 = v72;
  *((void *)v69 + 1) = v71;
  swift_bridgeObjectRelease();
  uint64_t v73 = a3[16];
  char v74 = &a1[v73];
  uint64_t v75 = (uint64_t *)&a2[v73];
  uint64_t v77 = *v75;
  uint64_t v76 = v75[1];
  *(void *)char v74 = v77;
  *((void *)v74 + 1) = v76;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C09E2288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C09E229C);
}

uint64_t sub_1C09E229C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PuzzleResource();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 48);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1C09E2408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C09E241C);
}

uint64_t sub_1C09E241C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PuzzleResource();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 40) + 8) = a2;
  }
  else
  {
    sub_1C09DFAFC(0, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 48);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1C09E257C()
{
  type metadata accessor for PuzzleResource();
  if (v0 <= 0x3F)
  {
    sub_1C09DFAFC(319, (unint64_t *)&unk_1EA199008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo, MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1C09E26C4()
{
  unint64_t result = qword_1EA1A2048;
  if (!qword_1EA1A2048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2048);
  }
  return result;
}

void static FormatSourceItemTipTraitsDefaultStrategy.defaultValue.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

BOOL static FormatSourceItemTipTraitsDefaultStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  BOOL v4 = (v3 & 1) != 0 || *(void *)(v1 + 16) != 0;
  sub_1C00F64A4(*(void *)a1, v2, v3);
  sub_1C00F64E0(v1, v2, v3);
  sub_1C00F64E0(MEMORY[0x1E4FBC860], 0, 0);
  return v4;
}

void sub_1C09E27A8(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

BOOL sub_1C09E27BC(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  BOOL v4 = (v3 & 1) != 0 || *(void *)(v1 + 16) != 0;
  sub_1C00F64A4(*(void *)a1, v2, v3);
  sub_1C00F64E0(v1, v2, v3);
  sub_1C00F64E0(MEMORY[0x1E4FBC860], 0, 0);
  return v4;
}

unint64_t sub_1C09E2838(uint64_t a1)
{
  unint64_t result = sub_1C09E2860();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09E2860()
{
  unint64_t result = qword_1EA1A2050;
  if (!qword_1EA1A2050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2050);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceItemTipTraitsDefaultStrategy()
{
  return &type metadata for FormatSourceItemTipTraitsDefaultStrategy;
}

id SharingIssueImageActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage))
  {
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage);
    unint64_t v8 = sub_1BFC3D764();
    *(void *)&long long v7 = v6;
    sub_1BFF993A8(&v7, (_OWORD *)a1);
    char v3 = v6;
  }
  else
  {
    unint64_t v4 = sub_1C09E2960();
    char v3 = 0;
    *(void *)(a1 + 24) = v4;
    *(void *)a1 = MEMORY[0x1E4FBC840] + 8;
  }
  return v3;
}

unint64_t sub_1C09E2960()
{
  unint64_t result = qword_1EA1A2068;
  if (!qword_1EA1A2068)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A2068);
  }
  return result;
}

void SharingIssueImageActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  if (!a1) {
    goto LABEL_9;
  }
  if (sub_1C151E62C() == 0xD000000000000026 && v5 == 0x80000001C160BC20)
  {
    id v6 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v7 = sub_1C1520A9C();
  id v8 = a1;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {

LABEL_9:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
LABEL_6:
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage);
  if (v9)
  {
    unint64_t v14 = sub_1BFC3D764();
    *(void *)&long long v13 = v9;
    id v10 = v9;

    sub_1BFF993A8(&v13, (_OWORD *)a2);
  }
  else
  {
    sub_1BFEFE510();
    uint64_t v12 = v11;
    *(void *)(a2 + 24) = sub_1C09E2B48();

    *(void *)a2 = v12;
  }
}

unint64_t sub_1C09E2B48()
{
  unint64_t result = qword_1EA1A2070;
  if (!qword_1EA1A2070)
  {
    sub_1BFEFE510();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A2070);
  }
  return result;
}

id SharingIssueImageActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingIssueImageActivityItemSource.init()()
{
}

id SharingIssueImageActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SharingIssueImageActivityItemSource()
{
  return self;
}

uint64_t method lookup function for SharingIssueImageActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingIssueImageActivityItemSource);
}

uint64_t FormatPuzzleStatisticBinding.Text.text(from:)(uint64_t a1)
{
  uint64_t v105 = a1;
  uint64_t v102 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v96 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v89 = (uint64_t)&v89 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C09E57C4(0, &qword_1EA1A8710, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v92 = (uint64_t)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v93 = (uint64_t)&v89 - v6;
  sub_1C09E57C4(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, v2);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v100 = (uint64_t)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v101 = (uint64_t)&v89 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v99 = (uint64_t)&v89 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v98 = (uint64_t)&v89 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v97 = (uint64_t)&v89 - v16;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v89 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v89 - v21;
  uint64_t v23 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v103 = *(void *)(v23 - 8);
  uint64_t v104 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v91 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v90 = (char *)&v89 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v89 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v89 - v31;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v89 - v34;
  uint64_t v94 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v94);
  uint64_t v95 = (char *)&v89 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v37 - 8);
  long long v39 = (char *)&v89 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v89 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  int v45 = (char *)&v89 - v44;
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)&v89 - v47;
  switch(*v106)
  {
    case 1:
      type metadata accessor for FeedPuzzleStatistic();
      type metadata accessor for PuzzleStatistic();
      PuzzleStatisticCategory.statisticType.getter((char *)&v107);
      uint64_t v49 = 0x53747365676E6F6CLL;
      switch((char)v107)
      {
        case 1:
          uint64_t v49 = 0x53746E6572727563;
          break;
        case 2:
          uint64_t v49 = 0x5373656C7A7A7570;
          break;
        case 3:
          uint64_t v49 = 0x74615265766C6F73;
          break;
        case 4:
        case 5:
          uint64_t v49 = 0xD00000000000001CLL;
          break;
        case 6:
          uint64_t v49 = 0xD00000000000001DLL;
          break;
        case 7:
          uint64_t v49 = 0x53646570756F7267;
          break;
        case 8:
          uint64_t v49 = 0xD000000000000015;
          break;
        default:
          return v49;
      }
      return v49;
    case 2:
      uint64_t v50 = v105 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v51 = type metadata accessor for PuzzleStatistic();
      sub_1C09E43AC(v50 + *(int *)(v51 + 20), (uint64_t)v48, type metadata accessor for PuzzleStatisticCategory);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) < 2)
      {
        int v53 = type metadata accessor for PuzzleStatisticCategory;
        uint64_t v54 = (uint64_t)v48;
        goto LABEL_34;
      }
      if (EnumCaseMultiPayload)
      {
        long long v39 = v95;
        sub_1C09E4344((uint64_t)v48, (uint64_t)v95, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        uint64_t v49 = PuzzleStatisticValue.primaryDisplayValue.getter();
        uint64_t v73 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      }
      else
      {
        sub_1C09E4344((uint64_t)v48, (uint64_t)v39, type metadata accessor for PuzzleStatisticValue);
        uint64_t v49 = PuzzleStatisticValue.primaryDisplayValue.getter();
        uint64_t v73 = type metadata accessor for PuzzleStatisticValue;
      }
      sub_1BFEEB340((uint64_t)v39, v73);
      return v49;
    case 3:
      uint64_t v55 = v105 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v56 = type metadata accessor for PuzzleStatistic();
      sub_1C09E43AC(v55 + *(int *)(v56 + 20), (uint64_t)v45, type metadata accessor for PuzzleStatisticCategory);
      int v57 = swift_getEnumCaseMultiPayload();
      if ((v57 - 2) < 2 || !v57)
      {
        int v53 = type metadata accessor for PuzzleStatisticCategory;
        uint64_t v54 = (uint64_t)v45;
        goto LABEL_34;
      }
      uint64_t v29 = v95;
      sub_1C09E4344((uint64_t)v45, (uint64_t)v95, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      goto LABEL_42;
    case 4:
      uint64_t v58 = v105 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v59 = type metadata accessor for PuzzleStatistic();
      sub_1C09E43AC(v58 + *(int *)(v59 + 20), (uint64_t)v42, type metadata accessor for PuzzleStatisticCategory);
      int v60 = swift_getEnumCaseMultiPayload();
      if ((v60 - 2) < 2 || !v60)
      {
        uint64_t v61 = type metadata accessor for PuzzleStatisticCategory;
        goto LABEL_33;
      }
      uint64_t v29 = v95;
      sub_1C09E4344((uint64_t)v42, (uint64_t)v95, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
LABEL_42:
      uint64_t v49 = PuzzleStatisticValue.primaryDisplayValue.getter();
      uint64_t v76 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      goto LABEL_43;
    case 5:
      sub_1C09E3D70(v105, (uint64_t)v22);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v22, 1, v104) == 1)
      {
        sub_1C09E42D4((uint64_t)v22, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        return 0;
      }
      sub_1C09E4344((uint64_t)v22, (uint64_t)v35, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      LOBYTE(v107) = 5;
      uint64_t v74 = *(void *)&v35[*(int *)(v102 + 32)];
      type metadata accessor for FeedPuzzleStatistic();
      swift_getObjectType();
      __int16 v75 = FCPuzzleTypeProviding.puzzleTypeTraits.getter();
      uint64_t v49 = sub_1C09E40AC(v74, v75);
      sub_1BFEEB340((uint64_t)v35, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      return v49;
    case 6:
      sub_1C09E3D70(v105, (uint64_t)v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v19, 1, v104) == 1)
      {
        sub_1C09E42D4((uint64_t)v19, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        return 0;
      }
      sub_1C09E4344((uint64_t)v19, (uint64_t)v32, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v107 = *(void *)&v32[*(int *)(v102 + 28)];
      uint64_t v49 = sub_1C152088C();
      sub_1BFEEB340((uint64_t)v32, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      return v49;
    case 7:
      uint64_t v62 = v97;
      sub_1C09E3D70(v105, v97);
      uint64_t v63 = v104;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v62, 1, v104) == 1)
      {
        sub_1C09E42D4(v62, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        return 0;
      }
      sub_1C09E4344(v62, (uint64_t)v29, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v107 = *(void *)&v29[*(int *)(v63 + 24)];
      uint64_t v49 = sub_1C152088C();
      uint64_t v76 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult;
LABEL_43:
      sub_1BFEEB340((uint64_t)v29, v76);
      return v49;
    case 8:
      uint64_t v64 = v98;
      sub_1C09E3D70(v105, v98);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v64, 1, v104) == 1) {
        goto LABEL_23;
      }
      uint64_t v42 = v90;
      sub_1C09E4344(v64, (uint64_t)v90, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v65 = v93;
      sub_1C116B1AC(v93);
      uint64_t v66 = v102;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v65, 1, v102) == 1) {
        goto LABEL_32;
      }
      uint64_t v67 = (uint64_t *)(v65 + *(int *)(v66 + 24));
      uint64_t v49 = *v67;
      uint64_t v68 = v67[2];
      unint64_t v69 = v67[3];
      swift_bridgeObjectRetain();
      sub_1C00C2AC0(v68, v69);
      sub_1BFEEB340(v65, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      sub_1BFEEB340((uint64_t)v42, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1BFE95878(v68, v69);
      return v49;
    case 9:
      uint64_t v64 = v99;
      sub_1C09E3D70(v105, v99);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v64, 1, v104) == 1)
      {
LABEL_23:
        sub_1C09E42D4(v64, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      }
      else
      {
        uint64_t v42 = v91;
        sub_1C09E4344(v64, (uint64_t)v91, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        uint64_t v65 = v92;
        sub_1C116B1AC(v92);
        uint64_t v77 = v102;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v65, 1, v102) != 1)
        {
          uint64_t v81 = v65;
          uint64_t v82 = v89;
          sub_1C09E4344(v81, v89, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v83 = *(int *)(v77 + 32);
          uint64_t v84 = *(void *)(v82 + v83);
          uint64_t v85 = *(void *)&v42[v83];
          uint64_t v86 = v84 - v85;
          if (__OFSUB__(v84, v85))
          {
            __break(1u);
          }
          else if ((v86 & 0x8000000000000000) == 0 || (v87 = __OFSUB__(0, v86), uint64_t v86 = v85 - v84, !v87))
          {
            LOBYTE(v107) = 9;
            type metadata accessor for FeedPuzzleStatistic();
            swift_getObjectType();
            __int16 v88 = FCPuzzleTypeProviding.puzzleTypeTraits.getter();
            uint64_t v49 = sub_1C09E40AC(v86, v88);
            sub_1BFEEB340(v82, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
            sub_1BFEEB340((uint64_t)v42, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            return v49;
          }
          __break(1u);
          JUMPOUT(0x1C09E3D0CLL);
        }
LABEL_32:
        sub_1C09E42D4(v65, &qword_1EA1A8710, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
        uint64_t v61 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult;
LABEL_33:
        int v53 = v61;
        uint64_t v54 = (uint64_t)v42;
LABEL_34:
        sub_1BFEEB340(v54, v53);
      }
      return 0;
    case 0xA:
      uint64_t v70 = v101;
      sub_1C09E3D70(v105, v101);
      uint64_t v71 = v100;
      sub_1C09E4018(v70, v100);
      uint64_t v72 = v104;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v71, 1, v104) == 1)
      {
        sub_1C09E42D4(v71, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      }
      else
      {
        char v78 = (uint64_t *)(v71 + *(int *)(v72 + 28));
        uint64_t v49 = *v78;
        uint64_t v79 = v78[1];
        swift_bridgeObjectRetain();
        sub_1BFEEB340(v71, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        if (v79)
        {
          sub_1C09E42D4(v70, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          return v49;
        }
      }
      sub_1C09E42D4(v70, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      swift_bridgeObjectRelease();
      return 0;
    default:
      type metadata accessor for FeedPuzzleStatistic();
      return PuzzleStatistic.identifier.getter();
  }
}

BOOL static FormatPuzzleStatisticBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C09E3D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09E57C4(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v14 = type metadata accessor for PuzzleStatistic();
  sub_1C09E43AC(v13 + *(int *)(v14 + 20), (uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BFEEB340((uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
    goto LABEL_5;
  }
  sub_1C09E5944((uint64_t)v6, (uint64_t)v12);
  sub_1C09E5944((uint64_t)v12, (uint64_t)v9);
  uint64_t v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_1C09E42D4((uint64_t)v9, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
LABEL_5:
    uint64_t v17 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  sub_1C09E4344((uint64_t)v9, a2, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
}

uint64_t sub_1C09E4018(uint64_t a1, uint64_t a2)
{
  sub_1C09E57C4(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09E40AC(uint64_t a1, __int16 a2)
{
  if ((a2 & 0x4000) != 0) {
    return sub_1C152088C();
  }
  if ((a2 & 0x200) == 0)
  {
    if ((a2 & 0x400) == 0) {
      return 0;
    }
    return sub_1C152088C();
  }
  double v3 = (double)a1;
  if (qword_1EB8613E0 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EB8613D0;
  id v5 = objc_msgSend(v4, sel_stringFromTimeInterval_, v3);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1C151E62C();
  }
  sub_1BFF27ECC();
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  sub_1C151FEBC();
  swift_bridgeObjectRelease();
  sub_1C151FE4C();
  sub_1C09E587C(0, (unint64_t *)&unk_1EB890298, v7, MEMORY[0x1E4FBB908]);
  sub_1C09E58C8();
  uint64_t v2 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C09E42D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C09E57C4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C09E4344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09E43AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FormatPuzzleStatisticBinding.Text.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 11;
  if (v2 < 0xB) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static FormatPuzzleStatisticBinding.Text.CodingType.allCases.getter()
{
  return &unk_1F1B687B0;
}

unint64_t FormatPuzzleStatisticBinding.Text.CodingType.rawValue.getter()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6974736974617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000022;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000021;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    case 9:
      unint64_t result = 0xD000000000000037;
      break;
    case 0xA:
      unint64_t result = 0x6F6272656461656CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C09E45F0(unsigned __int8 *a1, char *a2)
{
  return sub_1C147CCA0(*a1, *a2);
}

uint64_t sub_1C09E45FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09E4644()
{
  return sub_1C0448200();
}

uint64_t sub_1C09E464C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09E4690@<X0>(char *a1@<X8>)
{
  return FormatPuzzleStatisticBinding.Text.CodingType.init(rawValue:)(a1);
}

unint64_t sub_1C09E469C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatPuzzleStatisticBinding.Text.CodingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C09E46C4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09E4724()
{
  return sub_1C151EAEC();
}

void sub_1C09E4774(void *a1@<X8>)
{
  *a1 = &unk_1F1B687B0;
}

uint64_t FormatPuzzleStatisticBinding.Text.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleStatisticBinding.Text.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09E47F8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPuzzleStatisticBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1C09E4810(void *a1)
{
  return FormatPuzzleStatisticBinding.Text.encode(to:)(a1);
}

uint64_t sub_1C09E4828@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*a1)
  {
    case 1:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v16 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      BYTE6(v39) = 1;
      uint64_t v12 = (char *)&v39 + 6;
      uint64_t v13 = (void *)(v11 + v17);
      uint64_t v14 = 0x6974736974617453;
      uint64_t v15 = 0xEE00657079542063;
      break;
    case 2:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v18 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v20 = (void *)(v11 + v19);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      HIBYTE(v39) = 2;
      uint64_t v14 = 0xD000000000000015;
      uint64_t v15 = 0x80000001C1617740;
      uint64_t v12 = (char *)&v39 + 7;
      goto LABEL_14;
    case 3:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v21 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v20 = (void *)(v11 + v22);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v40 = 3;
      uint64_t v14 = 0xD000000000000017;
      uint64_t v15 = 0x80000001C1617720;
      uint64_t v12 = &v40;
      goto LABEL_14;
    case 4:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v23 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v20 = (void *)(v11 + v24);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v41 = 4;
      uint64_t v14 = 0xD000000000000016;
      uint64_t v15 = 0x80000001C1617700;
      uint64_t v12 = &v41;
      goto LABEL_14;
    case 5:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v25 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v20 = (void *)(v11 + v26);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v42 = 5;
      uint64_t v14 = 0xD000000000000026;
      uint64_t v15 = 0x80000001C16176D0;
      uint64_t v12 = &v42;
      goto LABEL_14;
    case 6:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v29 = (void *)(v11 + v28);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v43 = 6;
      uint64_t v15 = 0x80000001C16176A0;
      uint64_t v12 = &v43;
      goto LABEL_10;
    case 7:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v30 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v29 = (void *)(v11 + v31);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v44 = 7;
      uint64_t v15 = 0x80000001C1617670;
      uint64_t v12 = &v44;
LABEL_10:
      uint64_t v13 = v29;
      uint64_t v14 = 0xD000000000000025;
      break;
    case 8:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v36 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v20 = (void *)(v11 + v37);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v45 = 8;
      uint64_t v14 = 0xD000000000000023;
      uint64_t v15 = 0x80000001C1617640;
      uint64_t v12 = &v45;
      goto LABEL_14;
    case 9:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v32 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v20 = (void *)(v11 + v33);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v46 = 9;
      uint64_t v14 = 0xD00000000000003DLL;
      uint64_t v15 = 0x80000001C1617600;
      uint64_t v12 = &v46;
      goto LABEL_14;
    case 0xA:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v34 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v20 = (void *)(v11 + v35);
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      char v47 = 10;
      uint64_t v14 = 0xD000000000000010;
      uint64_t v15 = 0x80000001C16175E0;
      uint64_t v12 = &v47;
LABEL_14:
      uint64_t v13 = v20;
      break;
    default:
      sub_1C09E57C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v9 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1C09E43AC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      BYTE5(v39) = 0;
      uint64_t v12 = (char *)&v39 + 5;
      uint64_t v13 = (void *)(v11 + v10);
      uint64_t v14 = 0x696669746E656449;
      uint64_t v15 = 0xEA00000000007265;
      break;
  }
  uint64_t result = sub_1C09E5408(v14, v15, (uint64_t)v8, v12, v13);
  *a3 = v11;
  return result;
}

uint64_t sub_1C09E5408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, void *a5@<X8>)
{
  LOBYTE(v13) = *a4;
  uint64_t v9 = FormatPuzzleStatisticBinding.Text.text(from:)(a3);
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    *(void *)&long long v13 = v9;
    *((void *)&v13 + 1) = v10;
    *((void *)&v14 + 1) = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_1C042F9B0(a1, a2, (uint64_t)&v13, a5);
  return sub_1BFEEB340(a3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
}

unint64_t sub_1C09E54CC()
{
  unint64_t result = qword_1EA1A2078;
  if (!qword_1EA1A2078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2078);
  }
  return result;
}

unint64_t sub_1C09E5524()
{
  unint64_t result = qword_1EA1A2080;
  if (!qword_1EA1A2080)
  {
    sub_1C09E587C(255, &qword_1EA1A2088, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Text.CodingType, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2080);
  }
  return result;
}

unint64_t sub_1C09E55A4()
{
  unint64_t result = qword_1EA1A2090;
  if (!qword_1EA1A2090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2090);
  }
  return result;
}

unint64_t sub_1C09E55F8(uint64_t a1)
{
  unint64_t result = sub_1C09E5620();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09E5620()
{
  unint64_t result = qword_1EA1A2098;
  if (!qword_1EA1A2098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2098);
  }
  return result;
}

unint64_t sub_1C09E5674(void *a1)
{
  a1[1] = sub_1C0865490();
  a1[2] = sub_1C0905B34();
  unint64_t result = sub_1C09E55A4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Text()
{
  return &type metadata for FormatPuzzleStatisticBinding.Text;
}

unsigned char *_s4TextOwst_6_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09E578CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Text.CodingType()
{
  return &type metadata for FormatPuzzleStatisticBinding.Text.CodingType;
}

void sub_1C09E57C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C09E5828()
{
  unint64_t result = qword_1EB86D410;
  if (!qword_1EB86D410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D410);
  }
  return result;
}

void sub_1C09E587C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C09E58C8()
{
  unint64_t result = qword_1EB890290;
  if (!qword_1EB890290)
  {
    sub_1C09E587C(255, (unint64_t *)&unk_1EB890298, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB908]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890290);
  }
  return result;
}

uint64_t sub_1C09E5944(uint64_t a1, uint64_t a2)
{
  sub_1C09E57C4(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1C09E59D8()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem;
  unint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem];
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    unint64_t v5 = v0;
    uint64_t v6 = (void *)sub_1C151E5EC();
    if (ObjectType)
    {
      uint64_t v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      uint64_t v8 = *(void *)(ObjectType - 8);
      __n128 v9 = MEMORY[0x1F4188790](v7);
      uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      uint64_t v12 = sub_1C1520A7C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      uint64_t v12 = 0;
    }
    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 0, v12, sel_doNext, v18[0]);

    swift_unknownObjectRelease();
    uint64_t v15 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v14;
    id v3 = v14;

    unint64_t v2 = 0;
  }
  id v16 = v2;
  return v3;
}

void sub_1C09E5B94()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8];
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_1C09EB448(v4, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections] = v5;
  swift_bridgeObjectRelease();
  sub_1C09E5D94();
  id v6 = objc_msgSend(v0, sel_navigationItem);
  id v7 = objc_msgSend(v6, sel_searchController);

  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_searchBar);

    objc_msgSend(v8, sel_setEnabled_, *(void *)(*(void *)&v0[v3] + 16) != 0);
  }
}

void sub_1C09E5CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1C09EB448(v6, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections) = v7;
  swift_bridgeObjectRelease();
  sub_1C09E5D94();
}

void sub_1C09E5D94()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView), sel_reloadData);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0CC9EA8(v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C09E5E50();
}

void sub_1C09E5E50()
{
  id v1 = sub_1C09E59D8();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection);
  swift_beginAccess();
  objc_msgSend(v1, sel_setEnabled_, *(void *)(v2[2] + 16) != 0);

  if (*(void *)(*v2 + 16))
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_retain();
    sub_1C151895C();
    swift_release();
  }
}

id sub_1C09E5FC4()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C151CCDC();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x1F4188790](v3);
  int v60 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1C151CCEC();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v58 = (void *)((char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for FormatVersioningModeSelection(0);
  *(void *)&double v7 = MEMORY[0x1F4188790](v6 - 8).n128_u64[0];
  __n128 v9 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65.receiver = v0;
  v65.super_class = ObjectType;
  void v57[2] = ObjectType;
  objc_msgSendSuper2(&v65, sel_viewDidLoad, v7);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView];
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_systemBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v12);

  objc_msgSend(v10, sel_setDelegate_, v1);
  objc_msgSend(v10, sel_setDataSource_, v1);
  objc_msgSend(v10, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(v10, sel_setAllowsMultipleSelectionDuringEditing_, 1);
  id v13 = objc_msgSend(v11, sel_secondaryLabelColor);
  objc_msgSend(v10, sel_setTintColor_, v13);

  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, sel_setTableFooterView_, v14);

  type metadata accessor for SubtitleTableViewCell();
  sub_1C151F26C();
  type metadata accessor for DebugFormatUploadEntryTableViewCell();
  sub_1C151F26C();
  type metadata accessor for DebugFormatUploadHiddenTableViewCell();
  sub_1C151F26C();
  type metadata accessor for DebugJournalHeaderView();
  sub_1C151F25C();
  objc_msgSend(v10, sel_setEditing_animated_, 1, 0);
  objc_msgSend(v10, sel_setAllowsFocusDuringEditing_, 0);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    id v16 = result;
    objc_msgSend(result, sel_addSubview_, v10);

    id v17 = objc_msgSend(v1, sel_navigationItem);
    uint64_t v18 = (void *)sub_1C151E5EC();
    objc_msgSend(v17, sel_setTitle_, v18);

    id v19 = objc_msgSend(v1, sel_navigationItem);
    sub_1BFE4F7D8(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    v57[0] = v20;
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C15320E0;
    unint64_t v22 = (void *)sub_1C151E5EC();
    uint64_t v23 = self;
    id v24 = objc_msgSend(v23, sel_systemImageNamed_, v22);

    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v25 = objc_allocWithZone((Class)sub_1C151BBEC());
    *(void *)(v21 + 32) = sub_1C151BBDC();
    uint64_t v64 = v21;
    sub_1C151EBEC();
    v57[1] = sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    unint64_t v26 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setLeftBarButtonItems_, v26);

    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF8]), sel_initWithSearchResultsController_, 0);
    objc_msgSend(v27, sel_setSearchResultsUpdater_, v1);
    objc_msgSend(v27, sel_setObscuresBackgroundDuringPresentation_, 0);
    objc_msgSend(v27, sel_setHidesNavigationBarDuringPresentation_, 0);
    id v28 = objc_msgSend(v27, sel_searchBar);
    id v29 = objc_msgSend(v11, sel_systemBlueColor);
    objc_msgSend(v28, sel_setTintColor_, v29);

    id v30 = objc_msgSend(v27, sel_searchBar);
    unint64_t v31 = (void *)sub_1C151E5EC();
    objc_msgSend(v30, sel_setPlaceholder_, v31);

    id v32 = objc_msgSend(v27, sel_searchBar);
    id v33 = objc_msgSend(v32, sel_searchTextField);

    objc_msgSend(v33, sel_setAutocorrectionType_, 1);
    id v34 = objc_msgSend(v27, sel_searchBar);
    id v35 = objc_msgSend(v34, sel_searchTextField);

    objc_msgSend(v35, sel_setAutocapitalizationType_, 0);
    id v36 = objc_msgSend(v27, sel_searchBar);
    unint64_t v37 = (void *)sub_1C151E5EC();
    id v38 = objc_msgSend(v23, sel_systemImageNamed_, v37);

    objc_msgSend(v36, sel_setImage_forSearchBarIcon_state_, v38, 0, 0);
    id v39 = objc_msgSend(v27, sel_searchBar);
    objc_msgSend(v39, sel_setShowsCancelButton_, 0);

    id v40 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v40, sel_setSearchController_, v27);

    id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    swift_retain();
    sub_1C151709C();
    swift_release();
    id v42 = sub_1C09EC638((uint64_t)v9);
    sub_1BFF9C8FC((uint64_t)v9, type metadata accessor for FormatVersioningModeSelection);
    objc_msgSend(v41, sel_setAttributedText_, v42);

    objc_msgSend(v41, sel_setNumberOfLines_, 2);
    id v43 = sub_1C09E59D8();
    objc_msgSend(v43, sel_setEnabled_, 0);

    id v44 = sub_1C09E59D8();
    id v45 = objc_msgSend(v11, sel_systemBlueColor);
    objc_msgSend(v44, sel_setTintColor_, v45);

    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1C15847D0;
    char v47 = (void *)sub_1C151E5EC();
    id v48 = objc_msgSend(v23, sel_systemImageNamed_, v47);

    id v49 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v50 = v1;
    id v51 = objc_msgSend(v49, sel_initWithImage_style_target_action_, v48, 0, v50, sel_doTocWithSender_);

    *(void *)(v46 + 32) = v51;
    *(void *)(v46 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(void *)(v46 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v41);
    *(void *)(v46 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(void *)(v46 + 64) = sub_1C09E59D8();
    uint64_t v64 = v46;
    sub_1C151EBEC();
    int v52 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v50, sel_setToolbarItems_, v52);

    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    swift_release();
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    swift_release();
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    swift_release();
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    swift_release();
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    swift_release();
    swift_retain();
    sub_1C151896C();
    swift_release();
    sub_1C151891C();
    swift_release();
    sub_1C151AB8C();
    int v53 = v58;
    static CoverView.loading.getter(v58);
    uint64_t v55 = v62;
    uint64_t v54 = v63;
    uint64_t v56 = v60;
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v60, *MEMORY[0x1E4FAD888], v63);
    sub_1C151AB7C();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
    return (id)(*(uint64_t (**)(uint64_t *, uint64_t))(v59 + 8))(v53, v61);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C09E6C94()
{
  sub_1BFC39268(0, &qword_1EA1A2120);
  sub_1BFE4F7D8(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1540C60;
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C15320F0;
  sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
  swift_retain();
  *(void *)(v1 + 32) = sub_1C151FBBC();
  swift_retain();
  *(void *)(v1 + 40) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v0 + 32) = sub_1C151F8BC();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C15320F0;
  swift_retain();
  *(void *)(v2 + 32) = sub_1C151FBBC();
  swift_retain();
  *(void *)(v2 + 40) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v0 + 40) = sub_1C151F8BC();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320F0;
  swift_retain();
  *(void *)(v3 + 32) = sub_1C151FBBC();
  swift_retain();
  *(void *)(v3 + 40) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v0 + 48) = sub_1C151F8BC();
  sub_1C151EBEC();
  return sub_1C151F8AC();
}

void sub_1C09E70D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    swift_beginAccess();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1BFEF3808(v5);
    swift_endAccess();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1C09E5E50();
  }
}

void sub_1C09E7178(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    swift_beginAccess();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1C0A8BCFC(v5);
    swift_endAccess();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1C09E5E50();
  }
}

void sub_1C09E7230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    swift_beginAccess();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1BFEF3808(v5);
    swift_endAccess();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1C09E5E50();
  }
}

void sub_1C09E72D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    swift_beginAccess();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1C0A8BCFC(v5);
    swift_endAccess();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1C09E5E50();
  }
}

void sub_1C09E7394(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    uint64_t v11 = v5;
    if (*(void *)(v5 + 16))
    {
      uint64_t v7 = qword_1F1B69F20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7)
      {
        uint64_t v8 = &byte_1F1B69F30;
        do
        {
          char v9 = *v8++;
          sub_1C05F12C8(v9, &v10);
          --v7;
        }
        while (v7);
        uint64_t v5 = v11;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C09E5CC4(v6, v5);
  }
}

void sub_1C09E7474(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    uint64_t v11 = v5;
    uint64_t v7 = qword_1F1B69F20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      uint64_t v8 = &byte_1F1B69F30;
      do
      {
        unsigned int v9 = *v8++;
        sub_1C02B9DC4(&v10, v9);
        --v7;
      }
      while (v7);
      uint64_t v5 = v11;
    }
    sub_1C09E5CC4(v6, v5);
  }
}

void sub_1C09E7538()
{
  swift_getObjectType();
  objc_msgSend(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor)+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue), sel_cancelAllOperations);
  *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController)
            + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff) = 0;
  swift_release();
  uint64_t v1 = swift_retain();
  sub_1C022BFBC(v1);
  swift_release();
  sub_1C09EAB2C(MEMORY[0x1E4FBC860]);
  swift_retain();
  sub_1C151894C();
  uint64_t v2 = swift_release();
  if ((v6 & 1) == 0)
  {
    MEMORY[0x1F4188790](v2);
    sub_1C151932C();
    uint64_t v3 = (void *)sub_1C1518E7C();
    sub_1BFE4F7D8(0, (unint64_t *)&unk_1EA1A20F8, (uint64_t)&type metadata for DebugFormatUploadSection, MEMORY[0x1E4FBB320]);
    sub_1C1518FFC();
    swift_release();

    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    uint64_t v4 = (void *)sub_1C151F56C();
    sub_1C151901C();
    swift_release();

    uint64_t v5 = (void *)sub_1C151F56C();
    sub_1C151904C();
    swift_release();
    swift_release();
  }
}

void sub_1C09E778C()
{
}

void sub_1C09E7894()
{
  uint64_t v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v23, sel_viewWillLayoutSubviews);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView];
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_bounds);
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    sub_1C151AB5C();
    id v13 = objc_msgSend(v1, sel_splitViewController);
    if (v13)
    {
      id v14 = v13;
      if (sub_1C151F4AC())
      {
        id v15 = objc_msgSend(v1, sel_navigationItem);
        sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
        id v16 = (void *)sub_1C151EBAC();
        objc_msgSend(v15, sel_setRightBarButtonItems_, v16);

LABEL_8:
        return;
      }
    }
    id v15 = objc_msgSend(v1, sel_navigationItem);
    sub_1BFE4F7D8(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C15320E0;
    uint64_t v18 = (void *)sub_1C151E5EC();
    id v19 = objc_msgSend(self, sel_systemImageNamed_, v18);

    if (v19)
    {
      id v20 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
      id v21 = v1;
      id v22 = objc_msgSend(v20, sel_initWithImage_style_target_action_, v19, 0, v21, sel_doDismiss);

      *(void *)(v17 + 32) = v22;
      sub_1C151EBEC();
      sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
      id v16 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_setRightBarButtonItems_, v16);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatUploadViewController()
{
  return self;
}

void sub_1C09E7D20()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections];
  unint64_t v3 = MEMORY[0x1E4FBC860];
  unint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    double v5 = (uint64_t *)(v2 + 56);
    do
    {
      uint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      id v7 = v1;
      unint64_t v8 = sub_1C09EBCB0(v6, (uint64_t)v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      sub_1C104AB18(v8);
      v5 += 4;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    unint64_t v3 = v12;
  }
  objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadConfirmViewController());
  uint64_t v9 = swift_retain();
  double v10 = (char *)sub_1C01DC520(v9, v3);
  swift_release();
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate + 8] = &off_1F1BDFF90;
  swift_unknownObjectWeakAssign();
  id v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v10);
  objc_msgSend(v11, sel_setModalPresentationStyle_, 1);
  objc_msgSend(v11, sel_setModalInPresentation_, 1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v11, 1, 0);
}

void sub_1C09E7F24(uint64_t a1)
{
  unint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C0062994(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0062994(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
  sub_1C0181BEC(0);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 72);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C152C7E0;
  uint64_t v9 = (void *)sub_1C151E5EC();
  id v78 = self;
  id v10 = objc_msgSend(v78, sel_systemImageNamed_, v9);

  if (!v10)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v73 = v1;
  uint64_t v71 = a1;
  uint64_t v72 = v8;
  unint64_t v11 = v8 + v6;
  id v77 = self;
  id v12 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  id v13 = objc_msgSend(v10, sel_imageWithConfiguration_, v12);

  id v76 = self;
  id v14 = objc_msgSend(v76, sel_systemPinkColor);
  uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
  id v16 = (void *)(v11 + *(int *)(v15 + 24));
  void *v16 = v13;
  v16[1] = v14;
  uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  __int16 v75 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v75(v16, 0, 1, v17);
  *(_OWORD *)unint64_t v11 = xmmword_1C15847E0;
  *(void *)(v11 + 16) = 0xD000000000000063;
  *(void *)(v11 + 24) = 0x80000001C1617830;
  unint64_t v18 = v11 + *(int *)(v15 + 28);
  *(void *)unint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = -1;
  id v19 = (void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v74 = *v19;
  (*v19)(v11, 0, 1, v15);
  id v20 = (void *)sub_1C151E5EC();
  id v21 = objc_msgSend(v78, sel_systemImageNamed_, v20);

  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = v11 + v7;
  id v23 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  id v24 = objc_msgSend(v21, sel_imageWithConfiguration_, v23);

  id v25 = objc_msgSend(v76, sel_systemGreenColor);
  unint64_t v26 = (void *)(v11 + v7 + *(int *)(v15 + 24));
  *unint64_t v26 = v24;
  v26[1] = v25;
  swift_storeEnumTagMultiPayload();
  v75(v26, 0, 1, v17);
  *(_OWORD *)uint64_t v22 = xmmword_1C15847F0;
  *(void *)(v22 + 16) = 0xD00000000000005BLL;
  *(void *)(v22 + 24) = 0x80000001C16178A0;
  unint64_t v27 = v11 + v7 + *(int *)(v15 + 28);
  *(void *)unint64_t v27 = 0;
  *(void *)(v27 + 8) = 0;
  *(unsigned char *)(v27 + 16) = -1;
  v74(v11 + v7, 0, 1, v15);
  id v28 = (void *)sub_1C151E5EC();
  id v29 = objc_msgSend(v78, sel_systemImageNamed_, v28);

  if (!v29)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v30 = v11 + 2 * v7;
  id v31 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  id v32 = objc_msgSend(v29, sel_imageWithConfiguration_, v31);

  id v33 = objc_msgSend(v76, sel_systemBlueColor);
  id v34 = (void *)(v30 + *(int *)(v15 + 24));
  void *v34 = v32;
  v34[1] = v33;
  swift_storeEnumTagMultiPayload();
  v75(v34, 0, 1, v17);
  *(_OWORD *)unint64_t v30 = xmmword_1C15556D0;
  *(void *)(v30 + 16) = 0xD00000000000003CLL;
  *(void *)(v30 + 24) = 0x80000001C1617900;
  unint64_t v35 = v30 + *(int *)(v15 + 28);
  *(void *)unint64_t v35 = 0;
  *(void *)(v35 + 8) = 0;
  *(unsigned char *)(v35 + 16) = -1;
  v74(v30, 0, 1, v15);
  id v36 = (void *)sub_1C151E5EC();
  id v37 = objc_msgSend(v78, sel_systemImageNamed_, v36);

  if (!v37)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v38 = v11 + 3 * v7;
  id v39 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  id v40 = objc_msgSend(v37, sel_imageWithConfiguration_, v39);

  id v41 = objc_msgSend(v76, sel_systemPurpleColor);
  id v42 = (void *)(v38 + *(int *)(v15 + 24));
  *id v42 = v40;
  v42[1] = v41;
  swift_storeEnumTagMultiPayload();
  v75(v42, 0, 1, v17);
  *(_OWORD *)unint64_t v38 = xmmword_1C1584800;
  *(void *)(v38 + 16) = 0xD000000000000052;
  *(void *)(v38 + 24) = 0x80000001C1617940;
  unint64_t v43 = v38 + *(int *)(v15 + 28);
  *(void *)unint64_t v43 = 0;
  *(void *)(v43 + 8) = 0;
  *(unsigned char *)(v43 + 16) = -1;
  v74(v38, 0, 1, v15);
  id v44 = (void *)sub_1C151E5EC();
  id v45 = objc_msgSend(v78, sel_systemImageNamed_, v44);

  if (!v45)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v46 = v11 + 4 * v7;
  id v47 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  id v48 = objc_msgSend(v45, sel_imageWithConfiguration_, v47);

  id v49 = objc_msgSend(v76, sel_systemRedColor);
  id v50 = (void *)(v46 + *(int *)(v15 + 24));
  *id v50 = v48;
  v50[1] = v49;
  swift_storeEnumTagMultiPayload();
  v75(v50, 0, 1, v17);
  *(_OWORD *)unint64_t v46 = xmmword_1C1584810;
  *(void *)(v46 + 16) = 0xD000000000000062;
  *(void *)(v46 + 24) = 0x80000001C16179A0;
  unint64_t v51 = v46 + *(int *)(v15 + 28);
  *(void *)unint64_t v51 = 0;
  *(void *)(v51 + 8) = 0;
  *(unsigned char *)(v51 + 16) = -1;
  v74(v46, 0, 1, v15);
  sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, v72, v80);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v52 = swift_allocObject();
  *(void *)(inited + 32) = v52;
  *(void *)(v52 + 48) = v81;
  long long v53 = v80[1];
  *(_OWORD *)(v52 + 16) = v80[0];
  *(_OWORD *)(v52 + 32) = v53;
  uint64_t v54 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  uint64_t v55 = *(void *)&v73[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor];
  swift_retain();
  uint64_t v56 = sub_1C131B4D4((uint64_t)v54);
  swift_bridgeObjectRelease();
  int v57 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  uint64_t v58 = objc_allocWithZone(v57);
  v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  uint64_t v59 = &v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *uint64_t v59 = 0;
  v59[1] = 0xE000000000000000;
  uint64_t v60 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v61 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v62 = v58;
  *(void *)&v58[v60] = objc_msgSend(v61, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v55;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v56;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v56;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
  swift_retain();
  swift_bridgeObjectRetain();

  v79.receiver = v62;
  v79.super_class = v57;
  id v63 = objc_msgSendSuper2(&v79, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v63, sel_setTitle_, 0);
  swift_release();
  id v64 = objc_msgSend(v63, sel_navigationItem);
  objc_super v65 = (void *)sub_1C151E5EC();
  objc_msgSend(v64, sel_setTitle_, v65);

  id v66 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v63);
  objc_msgSend(v66, sel_setModalPresentationStyle_, 7);
  id v67 = objc_msgSend(v66, sel_popoverPresentationController);
  if (v67)
  {
    uint64_t v68 = v67;
    objc_msgSend(v67, sel_setBarButtonItem_, v71);
  }
  id v69 = objc_msgSend(v66, sel_popoverPresentationController);
  if (v69)
  {
    uint64_t v70 = v69;
    objc_msgSend(v69, sel_setPermittedArrowDirections_, 2);
  }
  objc_msgSend(v73, sel_presentViewController_animated_completion_, v66, 1, 0);
}

unint64_t sub_1C09E8B80()
{
  uint64_t v1 = v0;
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (result >= *(void *)(v3 + 16))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v4 = *(void *)(v3 + 32 * result + 56);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (result < *(void *)(v4 + 16))
  {
    uint64_t v5 = v4 + 16 * result;
    unint64_t v6 = *(char **)(v5 + 32);
    int v7 = *(unsigned __int8 *)(v5 + 40);
    sub_1C01A59D8(v6, *(unsigned char *)(v5 + 40));
    swift_bridgeObjectRelease();
    if (v7)
    {
      if (v7 != 1)
      {
        type metadata accessor for SubtitleTableViewCell();
        id v48 = v6;
        id v49 = (void *)sub_1C151F24C();
        id v50 = objc_msgSend(v49, sel_textLabel);
        if (v50)
        {
          unint64_t v51 = v50;
          sub_1C01A9804(v6);
          uint64_t v52 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v51, sel_setText_, v52);
        }
        id v53 = objc_msgSend(v49, sel_textLabel);
        if (v53)
        {
          uint64_t v54 = v53;
          id v55 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
          objc_msgSend(v54, sel_setFont_, v55);
        }
        id v56 = objc_msgSend(v49, sel_textLabel);
        if (v56)
        {
          int v57 = v56;
          id v58 = objc_msgSend(self, sel_labelColor);
          objc_msgSend(v57, sel_setTextColor_, v58);
        }
        id v59 = objc_msgSend(v49, sel_textLabel);
        if (v59)
        {
          uint64_t v60 = v59;
          objc_msgSend(v59, sel_setNumberOfLines_, 0);
        }
        id v61 = objc_msgSend(v49, sel_detailTextLabel);
        if (v61)
        {
          uint64_t v62 = v61;
          objc_msgSend(v61, sel_setText_, 0);
        }
        uint64_t v8 = v49;
        objc_msgSend(v8, sel_setSelectionStyle_, 0);
        sub_1C01A5A10(v6, 2);
        sub_1C01A5A10(v6, 2);

        return (unint64_t)v8;
      }
      type metadata accessor for DebugFormatUploadHiddenTableViewCell();
      swift_bridgeObjectRetain();
      uint64_t v8 = (char *)sub_1C151F24C();
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
      objc_msgSend(v9, sel_setAlignment_, 1);
      sub_1C0062994(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      unint64_t v11 = (void **)MEMORY[0x1E4FB06F8];
      *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
      id v12 = *v11;
      *(void *)(inited + 32) = *v11;
      id v13 = self;
      double v14 = *MEMORY[0x1E4FB09D0];
      id v15 = v12;
      id v16 = objc_msgSend(v13, sel_systemFontOfSize_weight_, 17.0, v14);
      uint64_t v17 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      *(void *)(inited + 40) = v16;
      unint64_t v18 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(inited + 64) = v17;
      *(void *)(inited + 72) = v18;
      id v19 = self;
      id v20 = v18;
      id v21 = objc_msgSend(v19, sel_systemBlueColor);
      uint64_t v22 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      *(void *)(inited + 80) = v21;
      id v23 = (void *)*MEMORY[0x1E4FB0738];
      *(void *)(inited + 104) = v22;
      *(void *)(inited + 112) = v23;
      *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
      *(void *)(inited + 120) = v9;
      id v24 = v23;
      id v25 = v9;
      sub_1BFF991DC(inited);
      id v26 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      unint64_t v27 = (void *)sub_1C151E5EC();
      type metadata accessor for Key(0);
      sub_1BFF9A290();
      id v28 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

      objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button], sel_setAttributedTitle_forState_, v29, 0);
      unint64_t v30 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_onTap];
      uint64_t v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v31;
      *(void *)(v32 + 24) = v6;
      id v33 = v30;
      id v34 = (void *)sub_1C151C83C();

      sub_1C01A5A10(v6, 1);
    }
    else
    {
      type metadata accessor for DebugFormatUploadEntryTableViewCell();
      swift_retain();
      uint64_t v8 = (char *)sub_1C151F24C();
      id v35 = objc_msgSend(v8, sel_textLabel);
      if (v35)
      {
        id v36 = v35;
        id v37 = sub_1C009CF50();
        objc_msgSend(v36, sel_setAttributedText_, v37);
      }
      id v38 = objc_msgSend(v8, sel_textLabel);
      if (v38)
      {
        id v39 = v38;
        objc_msgSend(v38, sel_setNumberOfLines_, 0);
      }
      id v40 = objc_msgSend(v8, sel_detailTextLabel);
      if (v40)
      {
        id v41 = v40;
        objc_msgSend(v40, sel_setNumberOfLines_, 0);
      }
      id v42 = objc_msgSend(v8, sel_detailTextLabel);
      if (v42)
      {
        unint64_t v43 = v42;
        id v44 = sub_1C009D3B8();
        objc_msgSend(v43, sel_setAttributedText_, v44);
      }
      uint64_t v45 = OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff;
      uint64_t v46 = *(void *)&v6[OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff];
      v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_showDiff] = v46 != 0;
      if (v46) {
        id v47 = *(id *)&v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton];
      }
      else {
        id v47 = 0;
      }
      objc_msgSend(v8, sel_setEditingAccessoryView_, v47);

      if (*(void *)(*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController)
                     + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff))
      {
        swift_retain();
        uint64_t v63 = sub_1C00C2734();
        uint64_t v65 = v64;
        if (*(void *)&v6[v45])
        {
          if (v63 == sub_1C00C2734() && v65 == v66) {
            char v68 = 1;
          }
          else {
            char v68 = sub_1C1520A9C();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          char v68 = 0;
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        char v68 = 0;
      }
      v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected] = v68 & 1;
      sub_1C0934EB4();
      id v69 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap];
      uint64_t v70 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 16) = v70;
      *(void *)(v71 + 24) = v6;
      sub_1C01A59D8(v6, 0);
      id v33 = v69;
      uint64_t v72 = (void *)sub_1C151C83C();
      sub_1C01A5A10(v6, 0);
      sub_1C01A5A10(v6, 0);
    }
    swift_release();
    return (unint64_t)v8;
  }
LABEL_48:
  __break(1u);
  return result;
}

void sub_1C09E9428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v42 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0062994(0, &qword_1EB8711A8, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v33 - v8;
  swift_beginAccess();
  unint64_t v43 = (char *)MEMORY[0x1C18C9C60](a1 + 16);
  if (v43)
  {
    uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff);
    if (v10)
    {
      id v40 = v9;
      unint64_t v11 = v43;
      id v12 = *(char **)&v43[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController];
      *(void *)&v12[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff] = v10;
      swift_retain_n();
      id v13 = v12;
      swift_release();
      uint64_t v14 = swift_retain();
      sub_1C022BFBC(v14);

      swift_release();
      swift_release();
      uint64_t v41 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView;
      id v15 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_indexPathsForSelectedRows);
      uint64_t v35 = v10;
      if (v15)
      {
        id v16 = v15;
        uint64_t v17 = sub_1C151EBCC();
      }
      else
      {
        uint64_t v17 = MEMORY[0x1E4FBC860];
      }
      unint64_t v18 = v40;
      objc_msgSend(*(id *)&v43[v41], sel_reloadData);
      uint64_t v19 = *(void *)(v17 + 16);
      uint64_t v34 = v17;
      if (v19)
      {
        id v21 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        uint64_t v20 = v5 + 16;
        unint64_t v22 = v17 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
        uint64_t v23 = *(void *)(v20 + 56);
        id v24 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
        id v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
        id v39 = v21;
        id v36 = (void (**)(char *, char *, uint64_t))(v20 + 16);
        uint64_t v37 = v23;
        id v25 = (void (**)(char *, uint64_t))(v20 - 8);
        unint64_t v33 = (v20 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        id v26 = v42;
        while (1)
        {
          v39(v18, v22, v4);
          unint64_t v27 = *v24;
          (*v24)(v18, 0, 1, v4);
          if ((*v38)(v18, 1, v4) == 1) {
            break;
          }
          (*v36)(v26, v18, v4);
          uint64_t v28 = v4;
          uint64_t v29 = v20;
          unint64_t v30 = *(void **)&v43[v41];
          uint64_t v31 = (void *)sub_1C151670C();
          uint64_t v32 = v30;
          uint64_t v20 = v29;
          uint64_t v4 = v28;
          unint64_t v18 = v40;
          objc_msgSend(v32, sel_selectRowAtIndexPath_animated_scrollPosition_, v31, 0, 0, v33, v34, v35);

          (*v25)(v26, v4);
          v22 += v37;
          if (!--v19) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_12:
        v27(v18, 1, 1, v4);
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C09E97EC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor);
    objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadHiddenContainerController());
    swift_retain();
    swift_bridgeObjectRetain();
    id v7 = sub_1C11E3540(v6, a2);
    swift_release();
    id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v7);

    objc_msgSend(v8, sel_setModalPresentationStyle_, 1);
    objc_msgSend(v5, sel_presentViewController_animated_completion_, v8, 1, 0);
  }
}

char *sub_1C09E99FC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for DebugJournalHeaderView();
  uint64_t v5 = (void *)sub_1C151F23C();
  uint64_t v6 = self;
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_systemBlueColor);
  objc_msgSend(v7, sel_setTintColor_, v8);

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (*(void *)(v9 + 16) <= a2)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x1C09E9DA4);
  }
  char v10 = *(unsigned char *)(v9 + 32 * a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = objc_msgSend(v7, sel_textLabel);
  if (v11)
  {
    id v12 = v11;
    sub_1C151E6DC();
    swift_bridgeObjectRelease();
    id v13 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setText_, v13);
  }
  if ((v10 - 7) > 1u)
  {
    uint64_t v14 = OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel;
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    id v16 = *(id *)&v7[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel];
    swift_bridgeObjectRetain();
    sub_1C0453864(v10, v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setText_, v17);

    objc_msgSend(*(id *)&v7[v14], sel_setHidden_, 0);
    unint64_t v18 = (void *)sub_1C151A49C();
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v19;
    *(unsigned char *)(v20 + 24) = v10;

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel], sel_setHidden_, 1);
  }
  return v7;
}

void sub_1C09E9DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1C0453864(a2, v8)) {
      sub_1C05F12C8(a2, &v7);
    }
    else {
      sub_1C02B9DC4(&v7, a2);
    }
    sub_1C09E5CC4(v6, v8);
  }
}

unint64_t sub_1C09EA094@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (result >= *(void *)(v7 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v7 + 32 * result + 56);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (result >= *(void *)(v8 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v9 = v8 + 16 * result;
  char v10 = *(void **)(v9 + 32);
  int v11 = *(unsigned __int8 *)(v9 + 40);
  sub_1C01A59D8(v10, *(unsigned char *)(v9 + 40));
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_1C01A5A10(v10, v11);
    uint64_t v12 = sub_1C151677C();
    id v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  else
  {
    sub_1C01A5A10(v10, 0);
    uint64_t v17 = sub_1C151677C();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a2, a1, v17);
    id v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v14 = v17;
  }
  return v13(v15, v16, 1, v14);
}

void sub_1C09EA424(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1C151676C();
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (v6 >= *(void *)(v7 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = *(void *)(v7 + 32 * v6 + 56);
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1C151675C();
  if ((v9 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v9 >= *(void *)(v8 + 16))
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v10 = v8 + 16 * v9;
  int v11 = *(void **)(v10 + 32);
  int v12 = *(unsigned __int8 *)(v10 + 40);
  sub_1C01A59D8(v11, *(unsigned char *)(v10 + 40));
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (v12 == 1) {
      char v13 = 1;
    }
    else {
      char v13 = 2;
    }
    sub_1C01A5A10(v11, v13);
  }
  else
  {
    uint64_t v14 = v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection;
    swift_beginAccess();
    uint64_t v15 = *(void *)(v14 + 16);
    swift_retain();
    uint64_t v16 = sub_1C1144F00();
    char v18 = sub_1BFF896B4(v16, v17, v15);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1C1144F00();
    if (v18)
    {
      sub_1C05F078C(v19, v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFEFFC1C(&v26, v19, v20);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1C0062994(0, &qword_1EA1A20F0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBBE00]);
    uint64_t v21 = sub_1C151677C();
    uint64_t v22 = *(void *)(v21 - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 16))(v24 + v23, a2, v21);
    id v25 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_reloadRowsAtIndexPaths_withRowAnimation_, v25, 5);

    sub_1C09E5E50();
    sub_1C01A5A10(v11, 0);
    sub_1C01A5A10(v11, 0);
  }
}

uint64_t sub_1C09EA714(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8 = sub_1C151677C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151672C();
  id v12 = a3;
  id v13 = a1;
  a5(v12, v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C09EA920(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C15154CC();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x1F4188790](v4).n128_u64[0];
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_searchBar, v6);
  id v10 = objc_msgSend(v9, sel_text);

  if (v10)
  {
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;

    v17[0] = v11;
    v17[1] = v13;
    sub_1C15153DC();
    sub_1BFF27ECC();
    sub_1C151FE9C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
  swift_bridgeObjectRetain();
  sub_1C04000F0();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1C09E5CC4(v15, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09EAB2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151CCDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151CCEC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v34 = v12;
  if (v12)
  {
    uint64_t v27 = v2;
    uint64_t v28 = (void *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v29 = v9;
    unint64_t v30 = v7;
    uint64_t v31 = v8;
    uint64_t v32 = v5;
    uint64_t v33 = v4;
    swift_bridgeObjectRetain();
    v26[1] = a1;
    uint64_t v13 = (uint64_t *)(a1 + 56);
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t v15 = v12;
    do
    {
      uint64_t v19 = *v13;
      if (*(void *)(*v13 + 16))
      {
        char v20 = *((unsigned char *)v13 - 24);
        uint64_t v21 = *(v13 - 2);
        uint64_t v22 = *(v13 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C05F6C38(0, *(void *)(v14 + 16) + 1, 1);
          uint64_t v14 = v36;
        }
        unint64_t v17 = *(void *)(v14 + 16);
        unint64_t v16 = *(void *)(v14 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C05F6C38(v16 > 1, v17 + 1, 1);
          uint64_t v14 = v36;
        }
        *(void *)(v14 + 16) = v17 + 1;
        uint64_t v18 = v14 + 32 * v17;
        *(unsigned char *)(v18 + 32) = v20;
        *(void *)(v18 + 40) = v21;
        *(void *)(v18 + 48) = v22;
        *(void *)(v18 + 56) = v19;
      }
      v13 += 4;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    uint64_t v5 = v32;
    uint64_t v4 = v33;
    uint64_t v7 = v30;
    uint64_t v8 = v31;
    uint64_t v11 = v28;
    uint64_t v9 = v29;
    uint64_t v2 = v27;
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  swift_retain();
  sub_1C151894C();
  swift_release();
  if (v35)
  {
    swift_release();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections) = v14;
  swift_bridgeObjectRelease();
  sub_1C09E5B94();
  if (v34)
  {
    (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAD860], v8);
    uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAD880];
  }
  else
  {
    static CoverView.loading.getter(v11);
    uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAD888];
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v24, v4);
  sub_1C151AB7C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C09EAE8C()
{
  swift_retain();
  sub_1C151894C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C151709C();
  swift_release();
  unint64_t v0 = sub_1C10CB658(v5);
  uint64_t v3 = sub_1C10C2768(v0, v2, v1 & 1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C09EAF80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  char v20 = (void *)MEMORY[0x1E4FBC860];
  if (*(void *)(*(void *)(a1 + 8) + 16))
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1C0CCAA40(v3, (uint64_t)v21);
    unsigned __int8 v4 = v21[0];
    uint64_t v5 = v22;
    uint64_t v6 = v23;
    uint64_t v7 = v24;
    uint64_t v8 = sub_1C0EE6954(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_1C0EE6954((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    v8[2] = v10 + 1;
    uint64_t v11 = &v8[4 * v10];
    *((unsigned char *)v11 + 32) = v4;
    v11[5] = v5;
    v11[6] = v6;
    v11[7] = v7;
    char v20 = v8;
  }
  sub_1BFE4F7D8(0, &qword_1EA19C8E0, (uint64_t)&type metadata for DebugFormatUploadSection, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C15445C0;
  v21[0] = 0;
  unint64_t v13 = swift_bridgeObjectRetain();
  sub_1C0CCAB44(v13, v21, inited + 32);
  v21[0] = 1;
  unint64_t v14 = swift_bridgeObjectRetain();
  sub_1C0CCAB44(v14, v21, inited + 64);
  v21[0] = 2;
  unint64_t v15 = swift_bridgeObjectRetain();
  sub_1C0CCAB44(v15, v21, inited + 96);
  v21[0] = 3;
  unint64_t v16 = swift_bridgeObjectRetain();
  sub_1C0CCAB44(v16, v21, inited + 128);
  v21[0] = 6;
  unint64_t v17 = swift_bridgeObjectRetain();
  sub_1C0CCAB44(v17, v21, inited + 160);
  v21[0] = 4;
  unint64_t v18 = swift_bridgeObjectRetain();
  sub_1C0CCAB44(v18, v21, inited + 192);
  uint64_t result = sub_1C104AB30(inited);
  *a2 = v20;
  return result;
}

uint64_t sub_1C09EB1A0(uint64_t *a1)
{
  return sub_1C09EAB2C(*a1);
}

uint64_t sub_1C09EB1D0(void *a1)
{
  sub_1C09ED344(0);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned __int8 v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = a1;
  id v5 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v6 = sub_1C15189DC();
  int v7 = swift_dynamicCast();
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  if (!v7)
  {
    v8(v4, 1, 1, v6);
    sub_1BFF9C8FC((uint64_t)v4, (uint64_t (*)(void))sub_1C09ED344);
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  v8(v4, 0, 1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v4, v6);
  int v11 = *MEMORY[0x1E4FAACB0];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v4, v6);
  if (v10 != v11)
  {
LABEL_5:
    unint64_t v13 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFE4F7D8(0, &qword_1EA19C8E0, (uint64_t)&type metadata for DebugFormatUploadSection, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    long long v17 = xmmword_1C1529AE0;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFE4F7D8(0, (unint64_t *)&qword_1EA1A2110, (uint64_t)&type metadata for DebugFormatUploadItem, v13);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v17;
    *(void *)(v15 + 32) = a1;
    *(unsigned char *)(v15 + 40) = 2;
    *(unsigned char *)(inited + 32) = 7;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = v15;
    id v16 = a1;
    sub_1C09EAB2C(inited);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  return result;
}

unint64_t sub_1C09EB448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v45 = *(void *)(a1 + 16);
  unint64_t v66 = MEMORY[0x1E4FBC860];
  sub_1C05F6C38(0, v4, 0);
  uint64_t v8 = 0;
  unint64_t result = v66;
  uint64_t v46 = a1 + 32;
  uint64_t v64 = a3 + 56;
  id v58 = (uint64_t *)(a2 + 32);
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  do
  {
    unint64_t v49 = result;
    uint64_t v50 = v8;
    int v10 = (char *)(v46 + 32 * v8);
    char v48 = *v10;
    uint64_t v11 = *((void *)v10 + 2);
    uint64_t v47 = *((void *)v10 + 1);
    uint64_t v12 = *((void *)v10 + 3);
    unint64_t v13 = *(void *)(v12 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v13)
    {
      unint64_t v16 = v5;
      goto LABEL_78;
    }
    unint64_t v14 = v13;
    unint64_t v15 = 0;
    unint64_t v55 = v13;
    uint64_t v56 = v12 + 32;
    unint64_t v16 = v5;
    uint64_t v53 = v11;
LABEL_5:
    if (v15 <= v14) {
      unint64_t v17 = v14;
    }
    else {
      unint64_t v17 = v15;
    }
    unint64_t v61 = v16;
    unint64_t v54 = v17;
    do
    {
      if (v15 == v17)
      {
        __break(1u);
        JUMPOUT(0x1C09EBC5CLL);
      }
      uint64_t v18 = v56 + 16 * v15;
      uint64_t v19 = *(void **)v18;
      uint64_t v62 = *(void **)v18;
      unint64_t v60 = v15 + 1;
      char v57 = *(unsigned char *)(v18 + 8);
      if (v57)
      {
        if (*(unsigned char *)(v18 + 8) == 1) {
          swift_bridgeObjectRetain();
        }
        else {
          uint64_t v41 = v19;
        }
        goto LABEL_67;
      }
      uint64_t v65 = v19[2];
      if (*(void *)(a3 + 16))
      {
        uint64_t v20 = *(unsigned __int8 *)(v19[2] + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
        sub_1C1520DBC();
        sub_1C01A59D8(v19, 0);
        swift_retain();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_1C1520E0C();
        uint64_t v22 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v23 = v21 & ~v22;
        if ((*(void *)(v64 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
        {
          unint64_t v5 = ~v22;
          while (2)
          {
            unint64_t v24 = 0xE600000000000000;
            uint64_t v25 = 0x74756F79616CLL;
            switch(*(unsigned char *)(*(void *)(a3 + 48) + v23))
            {
              case 1:
                uint64_t v25 = 0x726564616568;
                break;
              case 2:
                uint64_t v25 = 0x7265746F6F66;
                break;
              case 3:
                unint64_t v24 = 0xE700000000000000;
                uint64_t v25 = 0x6C6C6177796170;
                break;
              case 4:
                unint64_t v24 = 0xE500000000000000;
                uint64_t v25 = 0x656D656874;
                break;
              case 5:
                unint64_t v24 = 0xE700000000000000;
                uint64_t v25 = 0x7972617262696CLL;
                break;
              case 6:
                uint64_t v25 = 0x756F72676B636162;
                unint64_t v24 = 0xEA0000000000646ELL;
                break;
              default:
                break;
            }
            unint64_t v26 = 0xE600000000000000;
            uint64_t v27 = 0x74756F79616CLL;
            switch(v20)
            {
              case 1:
                uint64_t v28 = 1684104552;
                goto LABEL_26;
              case 2:
                uint64_t v28 = 1953460070;
LABEL_26:
                if (v25 != (v28 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
                  goto LABEL_35;
                }
                goto LABEL_34;
              case 3:
                unint64_t v26 = 0xE700000000000000;
                if (v25 != 0x6C6C6177796170) {
                  goto LABEL_35;
                }
                goto LABEL_34;
              case 4:
                unint64_t v26 = 0xE500000000000000;
                if (v25 != 0x656D656874) {
                  goto LABEL_35;
                }
                goto LABEL_34;
              case 5:
                unint64_t v26 = 0xE700000000000000;
                uint64_t v27 = 0x7972617262696CLL;
                goto LABEL_33;
              case 6:
                unint64_t v26 = 0xEA0000000000646ELL;
                if (v25 != 0x756F72676B636162) {
                  goto LABEL_35;
                }
                goto LABEL_34;
              default:
LABEL_33:
                if (v25 != v27) {
                  goto LABEL_35;
                }
LABEL_34:
                if (v24 == v26)
                {
                  swift_bridgeObjectRelease_n();
                  goto LABEL_62;
                }
LABEL_35:
                char v29 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v29) {
                  goto LABEL_62;
                }
                unint64_t v23 = (v23 + 1) & v5;
                if (((*(void *)(v64 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
                  break;
                }
                continue;
            }
            break;
          }
        }
      }
      else
      {
        sub_1C01A59D8(v19, 0);
        swift_retain();
      }
      uint64_t v59 = *(void *)(a2 + 16);
      if (!v59 || (uint64_t v30 = *v58, (v31 = *(void *)(*v58 + 16)) == 0))
      {
        sub_1C01A5A10(v62, 0);
LABEL_66:
        unint64_t v5 = MEMORY[0x1E4FBC860];
        uint64_t v11 = v53;
LABEL_67:
        unint64_t v16 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F7AE0(0, *(void *)(v61 + 16) + 1, 1);
          unint64_t v16 = v61;
        }
        unint64_t v15 = v60;
        unint64_t v39 = *(void *)(v16 + 16);
        unint64_t v38 = *(void *)(v16 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_1C05F7AE0(v38 > 1, v39 + 1, 1);
          unint64_t v15 = v60;
          unint64_t v16 = v61;
        }
        *(void *)(v16 + 16) = v39 + 1;
        unint64_t v40 = v16 + 16 * v39;
        *(void *)(v40 + 32) = v62;
        *(unsigned char *)(v40 + 40) = v57;
        unint64_t v14 = v55;
        if (v15 == v55) {
          break;
        }
        goto LABEL_5;
      }
      uint64_t v32 = v65 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name;
      swift_bridgeObjectRetain();
      uint64_t v33 = 1;
      while (2)
      {
        uint64_t v63 = v33;
        swift_bridgeObjectRetain();
        swift_beginAccess();
        if (!*(void *)(v30 + 16))
        {
LABEL_82:
          __break(1u);
          return v5;
        }
        unint64_t v5 = 0;
        uint64_t v34 = v30 + 40;
        uint64_t v35 = v31 - 1;
        char v36 = 1;
        while (1)
        {
          if ((v36 & 1) == 0)
          {
            if (v35 == v5) {
              goto LABEL_57;
            }
LABEL_46:
            char v36 = 0;
            goto LABEL_47;
          }
          sub_1BFF27ECC();
          swift_bridgeObjectRetain();
          if (sub_1C151FF0C())
          {
            swift_bridgeObjectRelease();
            goto LABEL_53;
          }
          if (!*(void *)(v32 + 8)) {
            break;
          }
          sub_1C151E6BC();
          char v37 = sub_1C151FF0C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v37 & 1) == 0) {
            goto LABEL_56;
          }
LABEL_53:
          if (v35 == v5)
          {
            a2 = v51;
            swift_bridgeObjectRelease();
LABEL_65:
            swift_bridgeObjectRelease();
            sub_1C01A5A10(v62, 0);
            a3 = v52;
            goto LABEL_66;
          }
          char v36 = 1;
LABEL_47:
          ++v5;
          v34 += 16;
          if (v5 >= *(void *)(v30 + 16)) {
            goto LABEL_82;
          }
        }
        swift_bridgeObjectRelease();
LABEL_56:
        if (v35 != v5) {
          goto LABEL_46;
        }
LABEL_57:
        swift_bridgeObjectRelease();
        if (v63 != v59)
        {
          uint64_t v30 = v58[v63];
          uint64_t v33 = v63 + 1;
          uint64_t v31 = *(void *)(v30 + 16);
          if (!v31)
          {
            a2 = v51;
            goto LABEL_65;
          }
          continue;
        }
        break;
      }
      a2 = v51;
      swift_bridgeObjectRelease();
      a3 = v52;
LABEL_62:
      sub_1C01A5A10(v62, 0);
      sub_1C01A5A10(v62, 0);
      unint64_t v17 = v54;
      unint64_t v15 = v60;
      unint64_t v16 = v61;
      unint64_t v5 = MEMORY[0x1E4FBC860];
      uint64_t v11 = v53;
    }
    while (v60 != v55);
LABEL_78:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = v49;
    unint64_t v43 = *(void *)(v49 + 16);
    unint64_t v42 = *(void *)(v49 + 24);
    if (v43 >= v42 >> 1)
    {
      sub_1C05F6C38(v42 > 1, v43 + 1, 1);
      unint64_t result = v49;
    }
    *(void *)(result + 16) = v43 + 1;
    unint64_t v44 = result + 32 * v43;
    *(unsigned char *)(v44 + 32) = v48;
    uint64_t v8 = v50 + 1;
    *(void *)(v44 + 40) = v47;
    *(void *)(v44 + 48) = v11;
    *(void *)(v44 + 56) = v16;
  }
  while (v50 + 1 != v45);
  return result;
}

uint64_t sub_1C09EBCB0(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v6 = (unsigned char *)(a1 + 40);
    do
    {
      if (!*v6)
      {
        int v7 = (void *)*((void *)v6 - 1);
        uint64_t v8 = *(void *)(v5 + 16);
        sub_1C01A59D8(v7, 0);
        sub_1C01A59D8(v7, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        char v9 = sub_1BFF896B4(0, 0xE000000000000000, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C01A5A10(v7, 0);
        if (v9)
        {
          MEMORY[0x1C18C66D0]();
          if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
        else
        {
          sub_1C01A5A10(v7, 0);
        }
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

id sub_1C09EBF80(uint64_t a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v8 = v2;
  *(void *)&v2[v6] = objc_msgSend(v7, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  *(void *)&v8[v9] = sub_1C151AB9C();
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem] = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections] = MEMORY[0x1E4FBC860];
  uint64_t v11 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter];
  uint64_t v12 = sub_1C04000F0();
  uint64_t v13 = MEMORY[0x1E4FBC870];
  *uint64_t v11 = v12;
  v11[1] = v13;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections] = v10;
  unint64_t v14 = &v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection];
  *(void *)unint64_t v14 = v13;
  *((void *)v14 + 1) = v13;
  *((void *)v14 + 2) = v13;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor] = a1;
  type metadata accessor for DebugNewsroomService();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  type metadata accessor for DebugFormatUploadDataSource();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = v15;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_dataSource] = v16;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController] = a2;
  swift_retain_n();
  id v17 = a2;

  v19.receiver = v8;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
}

void sub_1C09EC12C()
{
  char v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  *(void *)&v1[v3] = sub_1C151AB9C();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem] = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections] = MEMORY[0x1E4FBC860];
  uint64_t v5 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter];
  uint64_t v6 = sub_1C04000F0();
  uint64_t v7 = MEMORY[0x1E4FBC870];
  *uint64_t v5 = v6;
  v5[1] = v7;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections] = v4;
  uint64_t v8 = &v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection];
  *(void *)uint64_t v8 = v7;
  *((void *)v8 + 1) = v7;
  *((void *)v8 + 2) = v7;

  sub_1C152040C();
  __break(1u);
}

id sub_1C09EC25C(uint64_t a1, uint64_t a2, char a3)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v3, sel_setAlignment_, 1);
  sub_1C0062994(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  uint64_t v6 = *v5;
  *(void *)(inited + 32) = *v5;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  id v39 = v6;
  id v40 = v7;
  id v8 = objc_msgSend(v7, sel_systemFontOfSize_, 13.0);
  uint64_t v9 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v8;
  uint64_t v10 = (void *)*MEMORY[0x1E4FB0700];
  uint64_t v38 = v9;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = self;
  id v36 = v10;
  id v37 = v11;
  id v12 = objc_msgSend(v11, sel_secondaryLabelColor);
  uint64_t v13 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v12;
  unint64_t v14 = (void *)*MEMORY[0x1E4FB0738];
  uint64_t v35 = v13;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 112) = v14;
  uint64_t v15 = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 120) = v3;
  id v34 = v14;
  id v16 = v3;
  sub_1BFF991DC(inited);
  id v17 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  uint64_t v18 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  objc_super v19 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  uint64_t v20 = v17;
  uint64_t v21 = v16;
  id v22 = objc_msgSend(v20, sel_initWithString_attributes_, v18, v19);

  if (a3)
  {
    uint64_t v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C152C7F0;
    *(void *)(v23 + 32) = v39;
    double v24 = *MEMORY[0x1E4FB09B8];
    id v25 = v39;
    *(void *)(v23 + 40) = objc_msgSend(v40, sel_systemFontOfSize_weight_, 10.0, v24);
    *(void *)(v23 + 64) = v38;
    *(void *)(v23 + 72) = v36;
    id v26 = v36;
    *(void *)(v23 + 80) = objc_msgSend(v37, sel_systemBlueColor);
    *(void *)(v23 + 104) = v35;
    *(void *)(v23 + 112) = v34;
    *(void *)(v23 + 144) = v15;
    *(void *)(v23 + 120) = v16;
    id v27 = v16;
    id v28 = v34;
    sub_1BFF991DC(v23);
    id v29 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v30 = (void *)sub_1C151E5EC();
    uint64_t v31 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v29, (SEL)&selRef_tableView_titleForHeaderInSection_, v30, v31);

    objc_msgSend(v22, sel_appendAttributedString_, v32);
  }

  return v22;
}

id sub_1C09EC638(uint64_t a1)
{
  uint64_t v87 = a1;
  uint64_t v82 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v82);
  uint64_t v81 = (uint64_t)&v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v80 = (uint64_t)&v78 - v3;
  uint64_t v4 = sub_1C151836C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v84 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0091A24(0);
  MEMORY[0x1F4188790](v6 - 8);
  objc_super v79 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v78 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v83 = (char *)&v78 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v78 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v78 - v17;
  uint64_t v19 = sub_1C151928C();
  uint64_t v85 = *(void *)(v19 - 8);
  uint64_t v86 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  double v24 = (char *)&v78 - v23;
  MEMORY[0x1F4188790](v25);
  id v27 = (char *)&v78 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v78 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v78 - v32;
  uint64_t v34 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v34);
  id v36 = (char *)&v78 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09ED378(v87, (uint64_t)v36);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v44 = v81;
      sub_1C09ED3DC((uint64_t)v36, v81);
      sub_1C151926C();
      uint64_t v45 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v83, 1, 1, v45);
      sub_1C151925C();
      uint64_t v46 = sub_1C151920C();
      uint64_t v48 = v47;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v27, v86);
      id v43 = sub_1C09EC25C(v46, v48, 1);
      swift_bridgeObjectRelease();
      sub_1BFF9C8FC(v44, type metadata accessor for FormatVersioningModeRelease);
      break;
    case 2u:
      uint64_t v50 = v85;
      uint64_t v49 = v86;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v21, v36, v86);
      uint64_t v51 = sub_1C151920C();
      uint64_t v53 = v52;
      uint64_t v54 = (uint64_t)v79;
      sub_1C151927C();
      uint64_t v55 = sub_1C15187BC();
      char v56 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v54, 1, v55) == 1;
      sub_1BFF9C8FC(v54, (uint64_t (*)(void))sub_1C0091A24);
      id v43 = sub_1C09EC25C(v51, v53, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v49);
      break;
    case 3u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v57 = v86;
      uint64_t v58 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB8799C8);
      uint64_t v59 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v33, v58, v57);
      sub_1C151927C();
      uint64_t v60 = sub_1C15187BC();
      char v61 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v18, 1, v60) == 1;
      sub_1BFF9C8FC((uint64_t)v18, (uint64_t (*)(void))sub_1C0091A24);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v33, v57);
      id v43 = sub_1C09EC25C(0xD000000000000010, 0x80000001C1617A70, v61);
      break;
    case 4u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v62 = v86;
      uint64_t v63 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB8799C8);
      uint64_t v64 = sub_1C151920C();
      uint64_t v66 = v65;
      uint64_t v67 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v30, v63, v62);
      sub_1C151927C();
      uint64_t v68 = sub_1C15187BC();
      LOBYTE(v63) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v15, 1, v68) == 1;
      sub_1BFF9C8FC((uint64_t)v15, (uint64_t (*)(void))sub_1C0091A24);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v30, v62);
      id v43 = sub_1C09EC25C(v64, v66, v63);
      goto LABEL_14;
    case 5u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v69 = v86;
      uint64_t v70 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB8799C8);
      uint64_t v71 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v24, v70, v69);
      sub_1C151926C();
      uint64_t v72 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v83, 1, 1, v72);
      sub_1C151925C();
      uint64_t v73 = *(void (**)(char *, uint64_t))(v71 + 8);
      v73(v24, v69);
      uint64_t v74 = sub_1C151920C();
      uint64_t v76 = v75;
      v73(v27, v69);
      id v43 = sub_1C09EC25C(v74, v76, 1);
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v37 = v80;
      sub_1C09ED3DC((uint64_t)v36, v80);
      uint64_t v38 = sub_1C151920C();
      uint64_t v40 = v39;
      sub_1C151927C();
      uint64_t v41 = sub_1C15187BC();
      char v42 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v10, 1, v41) == 1;
      sub_1BFF9C8FC((uint64_t)v10, (uint64_t (*)(void))sub_1C0091A24);
      id v43 = sub_1C09EC25C(v38, v40, v42);
      swift_bridgeObjectRelease();
      sub_1BFF9C8FC(v37, type metadata accessor for FormatVersioningModeRelease);
      break;
  }
  return v43;
}

void sub_1C09ECF70(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = sub_1C151676C();
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (v4 >= *(void *)(v5 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)(v5 + 32 * v4 + 56);
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1C151675C();
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v7 >= *(void *)(v6 + 16))
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v8 = v6 + 16 * v7;
  uint64_t v9 = *(void **)(v8 + 32);
  int v10 = *(unsigned __int8 *)(v8 + 40);
  sub_1C01A59D8(v9, *(unsigned char *)(v8 + 40));
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (v10 == 1) {
      char v11 = 1;
    }
    else {
      char v11 = 2;
    }
    sub_1C01A5A10(v9, v11);
  }
  else
  {
    uint64_t v12 = v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection;
    swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 16);
    sub_1C01A59D8(v9, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C1144F00();
    char v16 = sub_1BFF896B4(v14, v15, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)sub_1C151670C();
    if (v16) {
      objc_msgSend(a1, sel_selectRowAtIndexPath_animated_scrollPosition_, v17, 0, 0);
    }
    else {
      objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v17, 0);
    }
    sub_1C01A5A10(v9, 0);
    sub_1C01A5A10(v9, 0);
  }
}

unint64_t sub_1C09ED164()
{
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (result >= *(void *)(v2 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = *(void *)(v2 + 32 * result + 56);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(void *)(v3 + 16))
  {
    uint64_t v4 = v3 + 16 * result;
    uint64_t v5 = *(void **)(v4 + 32);
    char v6 = *(unsigned char *)(v4 + 40);
    sub_1C01A59D8(v5, v6);
    swift_bridgeObjectRelease();
    sub_1C01A5A10(v5, v6);
    return (v6 & 7) == 0;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1C09ED21C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C09ED254()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C09ED28C()
{
  sub_1C09E9DC8(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1C09ED298()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC898]);
}

void sub_1C09ED2B0()
{
  sub_1C09E97EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C09ED2B8()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1C09ED2D0()
{
  sub_1C09E9428(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C09ED2D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09ED320()
{
  return sub_1C09E6C94();
}

uint64_t sub_1C09ED328()
{
  return sub_1C09EAE8C();
}

void sub_1C09ED344(uint64_t a1)
{
}

uint64_t sub_1C09ED378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersioningModeSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09ED3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersioningModeRelease(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C09ED440(uint64_t a1)
{
  sub_1C09E70D4(a1, v1);
}

void sub_1C09ED448(uint64_t a1)
{
  sub_1C09E7178(a1, v1);
}

void sub_1C09ED450(uint64_t a1)
{
  sub_1C09E7230(a1, v1);
}

void sub_1C09ED458(uint64_t a1)
{
  sub_1C09E72D8(a1, v1);
}

void sub_1C09ED460(uint64_t a1)
{
  sub_1C09E7394(a1, v1);
}

void sub_1C09ED468(uint64_t a1)
{
  sub_1C09E7474(a1, v1);
}

ValueMetadata *type metadata accessor for A12_V12()
{
  return &type metadata for A12_V12;
}

uint64_t sub_1C09ED484(void *a1)
{
  uint64_t v3 = v1;
  sub_1C09F1FCC(0, &qword_1EA1A21D8, (uint64_t (*)(void))sub_1C09F1F78, (uint64_t)&type metadata for A12_V12.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09F1F78();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C09F2034(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C09ED6CC(uint64_t a1)
{
  unint64_t v2 = sub_1C09F1F78();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09ED708(uint64_t a1)
{
  unint64_t v2 = sub_1C09F1F78();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C09ED744@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C09F1CC8(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C09ED78C(void *a1)
{
  return sub_1C09ED484(a1);
}

uint64_t sub_1C09ED7A4()
{
  sub_1C09F18BC();
  return sub_1C151798C();
}

uint64_t sub_1C09ED820@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C09F1FCC(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C09ED8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v74 = a2;
  char v61 = a3;
  uint64_t v5 = sub_1C151635C();
  uint64_t v56 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  *(void *)&long long v70 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v70))
  {
    sub_1C0020AF0();
    swift_allocError();
    *(_OWORD *)uint64_t v19 = 0u;
    *(_OWORD *)(v19 + 16) = 0u;
    *(void *)(v19 + 32) = 0;
    *(unsigned char *)(v19 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v55 = a1;
    uint64_t v52 = v15;
    sub_1BFF1AFA4(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    uint64_t v54 = type metadata accessor for GroupLayoutContext;
    uint64_t v53 = v12;
    sub_1BFF1AFA4(v74, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v21 = v17;
    uint64_t v22 = v17;
    unsigned __int8 v23 = v18;
    sub_1BFFFC7A0(v22, v18);
    sub_1C151634C();
    uint64_t v51 = sub_1C151633C();
    uint64_t v50 = v24;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
    uint64_t v72 = &type metadata for A12_V12;
    unint64_t v25 = sub_1C0186878();
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    type metadata accessor for GroupLayoutKey();
    uint64_t v26 = swift_allocObject();
    sub_1BFFFC7A0(v21, v18);
    uint64_t v64 = sub_1C1520FAC();
    uint64_t v65 = v27;
    uint64_t v68 = 95;
    unint64_t v69 = 0xE100000000000000;
    uint64_t v66 = 45;
    unint64_t v67 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v28 = sub_1C151FEBC();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = v30;
    uint64_t v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v32 = v50;
    *uint64_t v31 = v51;
    v31[1] = v32;
    sub_1BFC66384((uint64_t)&v70, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BFF2389C((uint64_t)v52, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v33, 0, 1, v58);
    uint64_t v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BFF2389C((uint64_t)v53, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v34, 0, 1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    sub_1BFFFC630(v21, v18);
    uint64_t v72 = &type metadata for A12_V12;
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    uint64_t v35 = v62;
    sub_1BFF1AFA4(v74, v62, (uint64_t (*)(void))v54);
    sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v37 = (void *)(v36 + 16);
    swift_beginAccess();
    uint64_t v38 = *(void **)(v36 + 16);
    sub_1BFFFC7A0(v21, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v36 + 16) = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v38 = sub_1BFFB83AC(0, v38[2] + 1, 1, v38);
      void *v37 = v38;
    }
    uint64_t v40 = v61;
    uint64_t v41 = v63;
    unint64_t v43 = v38[2];
    unint64_t v42 = v38[3];
    if (v43 >= v42 >> 1)
    {
      uint64_t v38 = sub_1BFFB83AC((void *)(v42 > 1), v43 + 1, 1, v38);
      void *v37 = v38;
    }
    uint64_t v38[2] = v43 + 1;
    uint64_t v44 = &v38[2 * v43];
    v44[4] = sub_1C064667C;
    v44[5] = 0;
    swift_endAccess();
    uint64_t v45 = sub_1C001E608((uint64_t)&unk_1F1B83558, 0, 0, v36, 4, 0, 0, 0);
    if (v41)
    {
      swift_release();
      swift_release();
      sub_1BFF1F104(v35, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    }
    else
    {
      uint64_t v46 = v45;
      swift_release();
      uint64_t v47 = type metadata accessor for A12_V12.Bound();
      void v40[3] = v47;
      v40[4] = sub_1C09F2034(&qword_1EA1A2138, (void (*)(uint64_t))type metadata accessor for A12_V12.Bound);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
      uint64_t *boxed_opaque_existential_0 = v26;
      sub_1BFC773DC(&v70, (uint64_t)(boxed_opaque_existential_0 + 1));
      uint64_t result = sub_1BFF2389C(v35, (uint64_t)boxed_opaque_existential_0 + *(int *)(v47 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v47 + 28)) = v46;
    }
  }
  return result;
}

double sub_1C09EDFCC@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A12_V12.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v42);
  sub_1BFC66384(v11 + 56, (uint64_t)v41);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v42, v14 + 16);
  sub_1BFC773DC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 0;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v41);
  sub_1BFC66384(v15 + 56, (uint64_t)v40);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v41, v17 + 16);
  sub_1BFC773DC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  uint64_t v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v19 = sub_1BFEB3714((uint64_t)&v42, *(void *)(*(void *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v42 = inited;
  sub_1BFEB37F8(v19);
  uint64_t v20 = v42;
  uint64_t v38[2] = v18;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C06472C0(v21, v20, (void (*)(char *, uint64_t))sub_1C09F1858, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = *MEMORY[0x1E4FAB6D8];
  uint64_t v24 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v22;
  sub_1C09F1974(0, &qword_1EA1A2158, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v42;
  uint64_t v26 = v43;
  uint64_t v27 = v44;
  *(void *)&long long v42 = v22;
  *(void *)&v41[0] = v45;
  MEMORY[0x1F4188790](v25);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v42 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  *uint64_t v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1C09EE570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C09EE640(uint64_t a1, uint64_t a2)
{
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 12;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C09F1974(0, &qword_1EA1A2178, MEMORY[0x1E4FAB6F0]);
  sub_1C09F1930(&qword_1EA1A2180, &qword_1EA1A2178, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C09EE82C(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v15 - v6);
  uint64_t v18 = a1;
  uint64_t v8 = sub_1C151729C();
  uint64_t v9 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, *MEMORY[0x1E4FAB4E8], v8);
  *uint64_t v7 = v9;
  uint64_t v11 = *(void (**)(uint64_t *, void, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E4FAB940], v4);
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v12);
  sub_1C151738C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v13(v7, v4);
  uint64_t v18 = a1;
  v11(v7, *MEMORY[0x1E4FAB9E0], v4);
  uint64_t v17 = v16;
  sub_1C151731C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v7, v4);
}

uint64_t sub_1C09EEAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v27 = a1;
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v24 - v6);
  uint64_t v30 = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 6;
  *uint64_t v7 = v8;
  unsigned int v26 = *MEMORY[0x1E4FABA10];
  uint64_t v25 = *(void (**)(uint64_t *))(v5 + 104);
  v25(v7);
  sub_1C09F1A00();
  sub_1C09F1FCC(0, &qword_1EA1A21A0, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  unint64_t v14 = v13 + v12;
  sub_1C003F3A8();
  uint64_t v16 = (void *)(v14 + *(int *)(v15 + 48));
  uint64_t v17 = *MEMORY[0x1E4FAB7E0];
  uint64_t v18 = sub_1C151789C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v14, v17, v18);
  void *v16 = 0x6C6F437468676972;
  v16[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E4FAB5B0], v10);
  uint64_t v19 = v24;
  uint64_t v29 = v24;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v20);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v21(v7, v4);
  uint64_t v30 = v27;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 6;
  *uint64_t v7 = v22;
  ((void (*)(uint64_t *, void, uint64_t))v25)(v7, v26, v4);
  uint64_t v28 = v19;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v21)(v7, v4);
}

uint64_t sub_1C09EEECC(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x1F4188790](v3);
  long long v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v45 = v44;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v44 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v37 = v5;
  uint64_t v38 = v16;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = unk_1F1B89790;
  if ((unk_1F1B89790 & ~qword_1F1B89788) == 0) {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v21 | qword_1F1B89788;
  uint64_t v23 = (char *)v10 + v8[5];
  uint64_t v24 = *MEMORY[0x1E4FAB8C8];
  uint64_t v25 = sub_1C1517A7C();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  uint64_t v27 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v22;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  uint64_t v28 = *v27;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v28;
  uint64_t v29 = qword_1EB87CC48;
  id v30 = v28;
  if (v29 != -1) {
    goto LABEL_7;
  }
LABEL_5:
  swift_retain();
  sub_1C151709C();
  uint64_t v31 = swift_release();
  __n128 v32 = MEMORY[0x1F4188790](v31);
  *(&v36 - 4) = (uint64_t)v14;
  *(&v36 - 3) = (uint64_t)v10;
  unint64_t v35 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v40 + 104))(v42, *MEMORY[0x1E4FAB8F8], v41, v32);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v37);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v33 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v33);
  unint64_t v35 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v19, v38);
}

uint64_t sub_1C09EF4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v29 = a1;
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (void *)((char *)v28 - v8);
  uint64_t v43 = a1;
  unsigned int v40 = *MEMORY[0x1E4FABA28];
  uint64_t v39 = *(void (**)(char *, __n128))(v6 + 104);
  v39((char *)v28 - v8, v7);
  sub_1C09F1A00();
  uint64_t v38 = v10;
  sub_1C09F1FCC(0, &qword_1EA1A21A0, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v32 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v35 = v15;
  uint64_t v36 = v14 | 7;
  uint64_t v37 = v15 + v13;
  uint64_t v16 = swift_allocObject();
  long long v34 = xmmword_1C1529AE0;
  *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
  unsigned int v31 = *MEMORY[0x1E4FAB638];
  id v30 = *(void (**)(uint64_t))(v12 + 104);
  v30(v16 + v15);
  uint64_t v42 = a2;
  uint64_t v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  uint64_t v19 = v18;
  v28[2] = sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v17);
  v28[1] = v19;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v20(v9, v5);
  uint64_t v21 = v29;
  uint64_t v43 = v29;
  uint64_t v22 = sub_1C151729C();
  uint64_t v23 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FAB4E8], v22);
  *uint64_t v9 = v23;
  uint64_t v25 = v39;
  ((void (*)(uint64_t *, void, uint64_t))v39)(v9, *MEMORY[0x1E4FAB940], v5);
  sub_1C151738C();
  v20(v9, v5);
  uint64_t v43 = v21;
  ((void (*)(uint64_t *, void, uint64_t))v25)(v9, v40, v5);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v34;
  ((void (*)(uint64_t, void, uint64_t))v30)(v26 + v35, v31, v32);
  uint64_t v41 = v33;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v20)(v9, v5);
}

uint64_t sub_1C09EF934(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __n128 v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ *(void *)(v12 + 72)+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B897B8;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C09EFF28(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __n128 v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 2 * *(void *)(v12 + 72), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B897E0;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C09F051C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v21 = a4;
  uint64_t v19 = a2;
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v18 - v9);
  uint64_t v24 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 3;
  *uint64_t v10 = v11;
  uint64_t v12 = *MEMORY[0x1E4FABA10];
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, v12, v7);
  uint64_t v23 = a2;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v14);
  sub_1C151734C();
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v15(v10, v7);
  uint64_t v24 = v20;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 3;
  *uint64_t v10 = v16;
  v13(v10, v12, v7);
  uint64_t v22 = v19;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v15)(v10, v7);
}

uint64_t sub_1C09F07A8(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 3 * *(void *)(v12 + 72), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B89808;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C09F0DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09F1FCC(0, &qword_1EA1A2170, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 5uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 4 * *(void *)(v12 + 72), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B89830;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C09F1974(0, &qword_1EA1A2188, MEMORY[0x1E4FAB4D0]);
  sub_1C09F1930(&qword_1EA1A2190, &qword_1EA1A2188, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C09F1394@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V12.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C09F1484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C09ED8DC(a1, a2, a3);
}

uint64_t sub_1C09F149C()
{
  return sub_1C12BC364();
}

unint64_t sub_1C09F14AC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C09F14DC();
  unint64_t result = sub_1C09F1530();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C09F14DC()
{
  unint64_t result = qword_1EA1A2128;
  if (!qword_1EA1A2128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2128);
  }
  return result;
}

unint64_t sub_1C09F1530()
{
  unint64_t result = qword_1EA1A2130;
  if (!qword_1EA1A2130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2130);
  }
  return result;
}

uint64_t type metadata accessor for A12_V12.Bound()
{
  uint64_t result = qword_1EA1A2140;
  if (!qword_1EA1A2140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09F15D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C09F15E4);
}

uint64_t sub_1C09F15E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C09F1694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C09F16A8);
}

void *sub_1C09F16A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C09F1750()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C09F1800(uint64_t a1)
{
  uint64_t result = sub_1C09F2034(&qword_1EA1A2150, (void (*)(uint64_t))type metadata accessor for A12_V12.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09F1858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C09EE570(a1, a2, a3);
}

uint64_t sub_1C09F1860(uint64_t a1)
{
  return sub_1C09EE640(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C09F1868()
{
  unint64_t result = qword_1EA1A2160;
  if (!qword_1EA1A2160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2160);
  }
  return result;
}

unint64_t sub_1C09F18BC()
{
  unint64_t result = qword_1EA1A2168;
  if (!qword_1EA1A2168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2168);
  }
  return result;
}

uint64_t sub_1C09F1910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C09F1394(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C09F1918()
{
  return swift_deallocObject();
}

uint64_t sub_1C09F1928(uint64_t a1)
{
  return sub_1C09EE82C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09F1930(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C09F1974(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C09F1974(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V12.Layout;
    v8[1] = &type metadata for A12_V12.Layout.Attributes;
    v8[2] = sub_1C09F1868();
    v8[3] = sub_1C09F18BC();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C09F19F8(uint64_t a1)
{
  return sub_1C09EEAB4(a1, *(void *)(v1 + 16));
}

void sub_1C09F1A00()
{
  if (!qword_1EA1A2198)
  {
    sub_1C09F1FCC(255, &qword_1EA1A21A0, (uint64_t (*)(void))sub_1C09F1868, (uint64_t)&type metadata for A12_V12.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2198);
    }
  }
}

uint64_t sub_1C09F1A90(uint64_t a1)
{
  return sub_1C09EEECC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09F1A98(uint64_t a1)
{
  return sub_1C09EF4C0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09F1AA0(uint64_t a1)
{
  return sub_1C09F051C(a1, *(void *)(v1 + 16), (uint64_t)sub_1C09F1B38, (uint64_t)sub_1C09F1B40);
}

uint64_t sub_1C09F1AE4(uint64_t a1)
{
  return sub_1C09F051C(a1, *(void *)(v1 + 16), (uint64_t)sub_1C09F1B28, (uint64_t)sub_1C09F1B30);
}

uint64_t sub_1C09F1B28(uint64_t a1)
{
  return sub_1C09F07A8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09F1B30(uint64_t a1)
{
  return sub_1C09F0DA0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09F1B38(uint64_t a1)
{
  return sub_1C09EF934(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C09F1B40(uint64_t a1)
{
  return sub_1C09EFF28(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V12.Layout.Attributes()
{
  return &type metadata for A12_V12.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V12.Layout()
{
  return &type metadata for A12_V12.Layout;
}

unint64_t sub_1C09F1B6C()
{
  unint64_t result = qword_1EA1A21A8;
  if (!qword_1EA1A21A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21A8);
  }
  return result;
}

unint64_t sub_1C09F1BC4()
{
  unint64_t result = qword_1EA1A21B0;
  if (!qword_1EA1A21B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21B0);
  }
  return result;
}

unint64_t sub_1C09F1C1C()
{
  unint64_t result = qword_1EA1A21B8;
  if (!qword_1EA1A21B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21B8);
  }
  return result;
}

unint64_t sub_1C09F1C74()
{
  unint64_t result = qword_1EA1A21C0;
  if (!qword_1EA1A21C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21C0);
  }
  return result;
}

uint64_t sub_1C09F1CC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C09F1FCC(0, &qword_1EA1A21C8, (uint64_t (*)(void))sub_1C09F1F78, (uint64_t)&type metadata for A12_V12.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09F1F78();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C09F2034(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  _OWORD v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C09F1F78()
{
  unint64_t result = qword_1EA1A21D0;
  if (!qword_1EA1A21D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21D0);
  }
  return result;
}

void sub_1C09F1FCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C09F2034(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V12.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09F2148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V12.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V12.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C09F2184()
{
  unint64_t result = qword_1EA1A21E0;
  if (!qword_1EA1A21E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21E0);
  }
  return result;
}

unint64_t sub_1C09F21DC()
{
  unint64_t result = qword_1EA1A21E8;
  if (!qword_1EA1A21E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21E8);
  }
  return result;
}

unint64_t sub_1C09F2234()
{
  unint64_t result = qword_1EA1A21F0;
  if (!qword_1EA1A21F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21F0);
  }
  return result;
}

void sub_1C09F2288(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    uint64_t v8 = a2[1];
    if (v8)
    {
      uint64_t v14 = *a2;
      id v15 = a3;
      sub_1C017C3D4(v14, v8);
      sub_1C1011968(a5, a6, a7, a8, &v16);
      sub_1C017C418(v14, v8);
      sub_1C09F2384(&v16, a4, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C09F2384(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C151A29C();
  uint64_t v25 = *(void (***)(char *, char *, uint64_t))(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151CE3C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatSourceItemTipSource();
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[2];
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = *a1;
    uint64_t v30 = a1[1];
    uint64_t v31 = v19;
    uint64_t v20 = &v16[*(int *)(v13 + 20)];
    uint64_t v28 = v8;
    id v29 = v20;
    uint64_t v21 = v17 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v22 = *(void *)(v14 + 72);
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v27 = v22;
    v24[1] = v17;
    v25 += 2;
    swift_bridgeObjectRetain();
    do
    {
      sub_1C09F2688(v21, (uint64_t)v16);
      (*v26)(v11, v16, v28);
      (*v25)(v7, v29, v5);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v23 = a3;
      sub_1C09F26EC((uint64_t)v16);
      sub_1C151A2AC();
      swift_allocObject();
      sub_1C151A24C();
      sub_1C1519F9C();
      swift_release();
      v21 += v27;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C09F2688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSourceItemTipSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09F26EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatSourceItemTipSource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatGroupColumnSystemKind.rawValue.getter()
{
  if (*v0) {
    return 0x746C7561666564;
  }
  else {
    return 1685217635;
  }
}

NewsFeed::FormatGroupColumnSystemKind_optional __swiftcall FormatGroupColumnSystemKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C09F27E0(char *a1, char *a2)
{
  return sub_1C147DB24(*a1, *a2);
}

NewsFeed::FormatGroupColumnSystemKind_optional sub_1C09F27EC(Swift::String *a1)
{
  return FormatGroupColumnSystemKind.init(rawValue:)(*a1);
}

void sub_1C09F27F8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1685217635;
  if (*v1) {
    uint64_t v2 = 0x746C7561666564;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C09F2830()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09F28AC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09F2914()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09F298C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09F29EC(void *a1)
{
  return FormatGroupColumnSystemKind.encode(to:)(a1);
}

uint64_t sub_1C09F2A08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatGroupColumnSystem.init(from:)(a1, a2);
}

uint64_t sub_1C09F2A20(void *a1)
{
  return FormatGroupColumnSystem.encode(to:)(a1);
}

BOOL _s8NewsFeed23FormatGroupColumnSystemO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  if (!v3)
  {
    if (!v5)
    {
      sub_1BFFBE2A8(*a1, 0);
      sub_1BFFBE2A8(v4, 0);
      return 1;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2) {
        uint64_t v10 = 0x746C7561666564;
      }
      else {
        uint64_t v10 = 1685217635;
      }
      if (v2) {
        unint64_t v11 = 0xE700000000000000;
      }
      else {
        unint64_t v11 = 0xE400000000000000;
      }
      if (v4) {
        uint64_t v12 = 0x746C7561666564;
      }
      else {
        uint64_t v12 = 1685217635;
      }
      if (v4) {
        unint64_t v13 = 0xE700000000000000;
      }
      else {
        unint64_t v13 = 0xE400000000000000;
      }
      if (v10 == v12 && v11 == v13)
      {
        sub_1C0187DE0(*(void *)a2, *(void *)(a2 + 8));
        sub_1C0187DE0(v2, v3);
        sub_1C0187DE0(v4, v5);
        sub_1C0187DE0(v2, v3);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v15 = sub_1C1520A9C();
        sub_1C0187DE0(v4, v5);
        sub_1C0187DE0(v2, v3);
        sub_1C0187DE0(v4, v5);
        sub_1C0187DE0(v2, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          sub_1BFFBE2A8(v2, v3);
          sub_1BFFBE2A8(v4, v5);
          sub_1BFFBE2A8(v4, v5);
          uint64_t v7 = v2;
          unint64_t v8 = v3;
          goto LABEL_9;
        }
      }
      sub_1C0187DE0(v4, v5);
      sub_1C0187DE0(v2, v3);
      char v16 = sub_1C00F0B14(v3, v5);
      sub_1BFFBE2A8(v4, v5);
      sub_1BFFBE2A8(v2, v3);
      sub_1BFFBE2A8(v2, v3);
      sub_1BFFBE2A8(v4, v5);
      sub_1BFFBE2A8(v4, v5);
      sub_1BFFBE2A8(v2, v3);
      return (v16 & 1) != 0;
    }
LABEL_8:
    sub_1C0187DE0(*(void *)a2, *(void *)(a2 + 8));
    sub_1C0187DE0(v2, v3);
    sub_1BFFBE2A8(v2, v3);
    uint64_t v7 = v4;
    unint64_t v8 = v5;
LABEL_9:
    sub_1BFFBE2A8(v7, v8);
    return 0;
  }
  if (v5 != 1) {
    goto LABEL_8;
  }
  uint64_t v6 = 1;
  sub_1BFFBE2A8(*a1, 1uLL);
  sub_1BFFBE2A8(v4, 1uLL);
  return v6;
}

unint64_t sub_1C09F2C94(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C09F2CC4();
  unint64_t result = sub_1C09F2D18();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C09F2CC4()
{
  unint64_t result = qword_1EA1A21F8;
  if (!qword_1EA1A21F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A21F8);
  }
  return result;
}

unint64_t sub_1C09F2D18()
{
  unint64_t result = qword_1EB88C9B8;
  if (!qword_1EB88C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C9B8);
  }
  return result;
}

unint64_t sub_1C09F2D70()
{
  unint64_t result = qword_1EB8907F0;
  if (!qword_1EB8907F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8907F0);
  }
  return result;
}

unint64_t sub_1C09F2DC4(uint64_t a1)
{
  unint64_t result = sub_1C01D3D48();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09F2DEC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C09F2EE8(a1, a2, a3, (uint64_t (*)(void))sub_1C088C628, (uint64_t (*)(void))sub_1C08F9D84, (uint64_t (*)(void))sub_1C09F2D70);
}

unint64_t sub_1C09F2E2C(uint64_t a1)
{
  unint64_t result = sub_1C09F2E54();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09F2E54()
{
  unint64_t result = qword_1EA1A2200;
  if (!qword_1EA1A2200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2200);
  }
  return result;
}

uint64_t sub_1C09F2EA8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C09F2EE8(a1, a2, a3, (uint64_t (*)(void))sub_1BFDCA124, (uint64_t (*)(void))sub_1BFD8BE70, (uint64_t (*)(void))sub_1C09F2F3C);
}

uint64_t sub_1C09F2EE8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09F2F3C()
{
  unint64_t result = qword_1EA1A2208;
  if (!qword_1EA1A2208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2208);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatGroupColumnSystemKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09F305CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupColumnSystemKind()
{
  return &type metadata for FormatGroupColumnSystemKind;
}

uint64_t sub_1C09F3098(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for FormatGroupColumnSystem(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatGroupColumnSystem(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupColumnSystem()
{
  return &type metadata for FormatGroupColumnSystem;
}

uint64_t type metadata accessor for DebugFormatInspectorMaskViewController()
{
  return self;
}

uint64_t type metadata accessor for DebugFormatInspectorMaskSegmentedViewController()
{
  uint64_t result = qword_1EA1A2258;
  if (!qword_1EA1A2258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09F33D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C09F3440()
{
  return 1802723661;
}

id sub_1C09F3450()
{
  unint64_t v0 = (void *)sub_1C151E5EC();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  return v1;
}

id sub_1C09F34D0()
{
  uint64_t v1 = *(void *)(v0 + qword_1EA1A2230);
  *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = sub_1C09F35F4(0);
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  uint64_t v2 = *(void *)(v0 + qword_1EA1A2238);
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = sub_1C09F35F4(1);
  swift_bridgeObjectRelease();
  return sub_1C0CF0E84();
}

uint64_t sub_1C09F35F4(char a1)
{
  uint64_t v1 = sub_1C09F3F40(a1 & 1);
  uint64_t v2 = sub_1C131B4D4((uint64_t)v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 64;
    uint64_t v5 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = *(void *)v4;
      if (*(void *)(*(void *)v4 + 16))
      {
        uint64_t v11 = *(void *)(v4 - 32);
        uint64_t v10 = *(void *)(v4 - 24);
        uint64_t v12 = *(void *)(v4 - 16);
        uint64_t v13 = *(void *)(v4 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7928(0, *(void *)(v5 + 16) + 1, 1);
        }
        unint64_t v7 = *(void *)(v5 + 16);
        unint64_t v6 = *(void *)(v5 + 24);
        if (v7 >= v6 >> 1) {
          sub_1C05F7928(v6 > 1, v7 + 1, 1);
        }
        *(void *)(v5 + 16) = v7 + 1;
        unint64_t v8 = (void *)(v5 + 40 * v7);
        void v8[4] = v11;
        v8[5] = v10;
        v8[6] = v12;
        v8[7] = v13;
        v8[8] = v9;
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

char *sub_1C09F3774(uint64_t a1, long long *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  long long v5 = a2[9];
  long long v6 = a2[11];
  long long v90 = a2[10];
  long long v7 = v90;
  long long v91 = v6;
  long long v8 = a2[5];
  long long v9 = a2[7];
  long long v86 = a2[6];
  long long v10 = v86;
  long long v87 = v9;
  long long v11 = a2[7];
  long long v12 = a2[9];
  long long v88 = a2[8];
  long long v13 = v88;
  long long v89 = v12;
  long long v14 = a2[1];
  long long v15 = a2[3];
  long long v82 = a2[2];
  long long v16 = v82;
  long long v83 = v15;
  long long v17 = a2[3];
  long long v18 = a2[5];
  long long v84 = a2[4];
  long long v19 = v84;
  long long v85 = v18;
  long long v20 = a2[1];
  long long v80 = *a2;
  long long v21 = v80;
  long long v81 = v20;
  *(void *)&v2[qword_1EA1A2240] = a1;
  uint64_t v22 = &v2[qword_1EA1A2228];
  long long v23 = a2[9];
  long long v24 = a2[11];
  *((_OWORD *)v22 + 10) = a2[10];
  *((_OWORD *)v22 + 11) = v24;
  long long v25 = a2[5];
  long long v26 = a2[7];
  *((_OWORD *)v22 + 6) = a2[6];
  *((_OWORD *)v22 + 7) = v26;
  *((_OWORD *)v22 + 8) = a2[8];
  *((_OWORD *)v22 + 9) = v23;
  long long v27 = a2[1];
  long long v28 = a2[3];
  *((_OWORD *)v22 + 2) = a2[2];
  *((_OWORD *)v22 + 3) = v28;
  *((_OWORD *)v22 + 4) = a2[4];
  *((_OWORD *)v22 + 5) = v25;
  *(_OWORD *)uint64_t v22 = *a2;
  *((_OWORD *)v22 + 1) = v27;
  long long v29 = a2[11];
  long long v77 = v7;
  long long v78 = v29;
  long long v73 = v10;
  long long v74 = v11;
  long long v75 = v13;
  long long v76 = v5;
  long long v69 = v16;
  long long v70 = v17;
  long long v71 = v19;
  long long v72 = v8;
  char v92 = *((unsigned char *)a2 + 192);
  v22[192] = *((unsigned char *)a2 + 192);
  char v79 = *((unsigned char *)a2 + 192);
  long long v67 = v21;
  long long v68 = v14;
  swift_retain_n();
  uint64_t v30 = v2;
  sub_1C09F45A0((uint64_t)&v80);
  uint64_t v31 = sub_1C09F35F4(0);
  uint64_t v32 = (void *)sub_1C151E5EC();
  uint64_t v33 = self;
  id v34 = objc_msgSend(v33, sel_systemImageNamed_, v32);

  uint64_t v35 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  uint64_t v36 = objc_allocWithZone(v35);
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  uint64_t v37 = &v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  void *v37 = 0;
  v37[1] = 0xE000000000000000;
  uint64_t v38 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v39 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v40 = v36;
  *(void *)&v36[v38] = objc_msgSend(v39, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v31;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v31;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v34;
  swift_retain();
  swift_bridgeObjectRetain();
  id v41 = v34;

  v66.receiver = v40;
  v66.super_class = v35;
  id v42 = objc_msgSendSuper2(&v66, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v43 = (void *)sub_1C151E5EC();
  objc_msgSend(v42, sel_setTitle_, v43);

  swift_release();
  *(void *)&v30[qword_1EA1A2230] = v42;
  long long v77 = v90;
  long long v78 = v91;
  char v79 = v92;
  long long v73 = v86;
  long long v74 = v87;
  long long v75 = v88;
  long long v76 = v89;
  long long v69 = v82;
  long long v70 = v83;
  long long v71 = v84;
  long long v72 = v85;
  long long v67 = v80;
  long long v68 = v81;
  swift_retain();
  uint64_t v44 = sub_1C09F35F4(1);
  sub_1C09F4704((uint64_t)&v80);
  uint64_t v45 = (void *)sub_1C151E5EC();
  id v46 = objc_msgSend(v33, sel_systemImageNamed_, v45);

  uint64_t v47 = objc_allocWithZone(v35);
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  uint64_t v48 = &v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *uint64_t v48 = 0;
  v48[1] = 0xE000000000000000;
  uint64_t v49 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v50 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v51 = v47;
  *(void *)&v47[v49] = objc_msgSend(v50, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v44;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v44;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  id v52 = v46;

  v65.receiver = v51;
  v65.super_class = v35;
  id v53 = objc_msgSendSuper2(&v65, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v54 = (void *)sub_1C151E5EC();
  objc_msgSend(v53, sel_setTitle_, v54);

  swift_release();
  *(void *)&v30[qword_1EA1A2238] = v53;

  v64.receiver = v30;
  v64.super_class = ObjectType;
  uint64_t v55 = (char *)objc_msgSendSuper2(&v64, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v56 = *(void **)&v55[qword_1EA1A2230];
  sub_1C09F4868();
  uint64_t v57 = v55;
  id v58 = v56;
  sub_1C151BA2C();

  uint64_t v59 = *(void **)&v57[qword_1EA1A2238];
  uint64_t v60 = v57;
  id v61 = v59;
  sub_1C151BA2C();

  swift_release();
  return v60;
}

void sub_1C09F3D54()
{
}

void sub_1C09F3DB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
}

void sub_1C09F3DC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C09F3DFC()
{
  long long v1 = *(_OWORD *)(v0 + qword_1EA1A2228 + 176);
  v8[10] = *(_OWORD *)(v0 + qword_1EA1A2228 + 160);
  v8[11] = v1;
  char v9 = *(unsigned char *)(v0 + qword_1EA1A2228 + 192);
  long long v2 = *(_OWORD *)(v0 + qword_1EA1A2228 + 112);
  v8[6] = *(_OWORD *)(v0 + qword_1EA1A2228 + 96);
  v8[7] = v2;
  long long v3 = *(_OWORD *)(v0 + qword_1EA1A2228 + 144);
  v8[8] = *(_OWORD *)(v0 + qword_1EA1A2228 + 128);
  v8[9] = v3;
  long long v4 = *(_OWORD *)(v0 + qword_1EA1A2228 + 48);
  v8[2] = *(_OWORD *)(v0 + qword_1EA1A2228 + 32);
  v8[3] = v4;
  long long v5 = *(_OWORD *)(v0 + qword_1EA1A2228 + 80);
  void v8[4] = *(_OWORD *)(v0 + qword_1EA1A2228 + 64);
  v8[5] = v5;
  long long v6 = *(_OWORD *)(v0 + qword_1EA1A2228 + 16);
  v8[0] = *(_OWORD *)(v0 + qword_1EA1A2228);
  v8[1] = v6;
  sub_1C09F4704((uint64_t)v8);

  return swift_release();
}

uint64_t sub_1C09F3E94(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + qword_1EA1A2228 + 176);
  v9[10] = *(_OWORD *)(a1 + qword_1EA1A2228 + 160);
  v9[11] = v2;
  char v10 = *(unsigned char *)(a1 + qword_1EA1A2228 + 192);
  long long v3 = *(_OWORD *)(a1 + qword_1EA1A2228 + 112);
  v9[6] = *(_OWORD *)(a1 + qword_1EA1A2228 + 96);
  v9[7] = v3;
  long long v4 = *(_OWORD *)(a1 + qword_1EA1A2228 + 144);
  v9[8] = *(_OWORD *)(a1 + qword_1EA1A2228 + 128);
  v9[9] = v4;
  long long v5 = *(_OWORD *)(a1 + qword_1EA1A2228 + 48);
  void v9[2] = *(_OWORD *)(a1 + qword_1EA1A2228 + 32);
  v9[3] = v5;
  long long v6 = *(_OWORD *)(a1 + qword_1EA1A2228 + 80);
  v9[4] = *(_OWORD *)(a1 + qword_1EA1A2228 + 64);
  v9[5] = v6;
  long long v7 = *(_OWORD *)(a1 + qword_1EA1A2228 + 16);
  v9[0] = *(_OWORD *)(a1 + qword_1EA1A2228);
  v9[1] = v7;
  sub_1C09F4704((uint64_t)v9);

  return swift_release();
}

uint64_t sub_1C09F3F38()
{
  return type metadata accessor for DebugFormatInspectorMaskSegmentedViewController();
}

void *sub_1C09F3F40(char a1)
{
  if ((a1 & 1) == 0) {
    return sub_1C09F40B4();
  }
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  long long v3 = sub_1C0D49420();
  if (v3)
  {
    long long v4 = &off_1F1C29D30;
    long long v5 = &type metadata for FormatInspection;
  }
  else
  {
    long long v5 = 0;
    long long v4 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = v4;
  long long v1 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v1;
}

void *sub_1C09F40B4()
{
  uint64_t v1 = *v0;
  long long v2 = *(_OWORD *)(v0 + 1);
  long long v3 = *(_OWORD *)(v0 + 3);
  uint64_t v4 = v0[5];
  int v5 = *((unsigned __int8 *)v0 + 48);
  long long v6 = *(_OWORD *)((char *)v0 + 129);
  long long v7 = *(_OWORD *)((char *)v0 + 161);
  long long v58 = *(_OWORD *)((char *)v0 + 145);
  long long v59 = v7;
  long long v60 = *(_OWORD *)((char *)v0 + 177);
  long long v8 = *(_OWORD *)((char *)v0 + 65);
  long long v9 = *(_OWORD *)((char *)v0 + 97);
  long long v54 = *(_OWORD *)((char *)v0 + 81);
  long long v55 = v9;
  long long v56 = *(_OWORD *)((char *)v0 + 113);
  long long v57 = v6;
  long long v52 = *(_OWORD *)((char *)v0 + 49);
  long long v53 = v8;
  if (v5 == 3
    && (((unint64_t)v2 >> 59) & 0x1E | (v2 >> 2) & 1) == 4
    && (uint64_t v10 = *(void *)(*(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 160)) != 0)
  {
    long long v36 = v3;
    long long v37 = v2;
    long long v11 = *(void **)(v10 + 16);
    uint64_t v12 = v11[6];
    uint64_t v13 = v11[7];
    uint64_t v14 = v11[8];
    uint64_t v15 = v11[9];
    sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    sub_1C0181BEC(0);
    unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
    unint64_t v19 = v18 + v17;
    uint64_t v20 = v11[10];
    if (v20)
    {
      uint64_t v21 = *(void *)(v20 + 128);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v21 = 0;
    }
    uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
    unint64_t v29 = v19 + *(int *)(v28 + 24);
    *(void *)unint64_t v29 = v12;
    *(void *)(v29 + 8) = v13;
    *(void *)(v29 + 16) = v14;
    *(void *)(v29 + 24) = v15;
    *(void *)(v29 + 32) = 0;
    *(void *)(v29 + 40) = v21;
    *(unsigned char *)(v29 + 48) = 2;
    uint64_t v30 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
    *(_OWORD *)unint64_t v19 = xmmword_1C157D0F0;
    *(void *)(v19 + 16) = 0;
    *(void *)(v19 + 24) = 0;
    unint64_t v31 = v19 + *(int *)(v28 + 28);
    *(void *)unint64_t v31 = 0;
    *(void *)(v31 + 8) = 0;
    *(unsigned char *)(v31 + 16) = -1;
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v19, 0, 1, v28);
    sub_1C09BCFA4(0x73646E756F42, 0xE600000000000000, 0, 0, v18, v50);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)&v38[24] = &type metadata for FormatInspectionGroup;
    *(void *)&v38[32] = &off_1F1BDEC90;
    uint64_t v32 = swift_allocObject();
    *(void *)uint64_t v38 = v32;
    long long v33 = v50[1];
    *(_OWORD *)(v32 + 16) = v50[0];
    *(_OWORD *)(v32 + 32) = v33;
    *(void *)(v32 + 48) = v51;
    uint64_t v22 = sub_1C0EE30E0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v35 = v22[2];
    unint64_t v34 = v22[3];
    if (v35 >= v34 >> 1) {
      uint64_t v22 = sub_1C0EE30E0((void *)(v34 > 1), v35 + 1, 1, v22);
    }
    v22[2] = v35 + 1;
    sub_1C0186BD0((uint64_t)v38, (uint64_t)&v22[5 * v35 + 4]);
    long long v3 = v36;
    long long v2 = v37;
  }
  else
  {
    uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
  }
  *(_OWORD *)&v38[8] = v2;
  *(_OWORD *)&v38[24] = v3;
  long long v46 = v57;
  long long v47 = v58;
  long long v48 = v59;
  long long v49 = v60;
  long long v42 = v53;
  long long v43 = v54;
  long long v44 = v55;
  *(void *)uint64_t v38 = v1;
  uint64_t v39 = v4;
  char v40 = v5;
  long long v45 = v56;
  long long v41 = v52;
  long long v23 = sub_1C0D49164();
  if (v23)
  {
    *(void *)&v38[24] = &type metadata for FormatInspection;
    *(void *)&v38[32] = &off_1F1C29D30;
    *(void *)uint64_t v38 = v23;
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v22 = sub_1C0EE30E0(0, v22[2] + 1, 1, v22);
  }
  unint64_t v25 = v22[2];
  unint64_t v24 = v22[3];
  if (v25 >= v24 >> 1) {
    uint64_t v22 = sub_1C0EE30E0((void *)(v24 > 1), v25 + 1, 1, v22);
  }
  v22[2] = v25 + 1;
  sub_1C0186BD0((uint64_t)v38, (uint64_t)&v22[5 * v25 + 4]);
  long long v26 = sub_1C131B79C((uint64_t)v22);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1C09F4558()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09F45A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  char v8 = *(unsigned char *)(a1 + 48);
  swift_retain();
  sub_1C09F4644(v2, v3, v4, v5, v6, v8);
  swift_bridgeObjectRetain();
  sub_1C017C3D4(v10, v7);
  return a1;
}

uint64_t sub_1C09F4644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      goto LABEL_4;
    case 5:
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C09F4704(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  char v8 = *(unsigned char *)(a1 + 48);
  swift_release();
  sub_1C09F47A8(v2, v3, v4, v5, v6, v8);
  swift_bridgeObjectRelease();
  sub_1C017C418(v10, v7);
  return a1;
}

uint64_t sub_1C09F47A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_4;
    case 5:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C09F4868()
{
  unint64_t result = qword_1EA1AFF50;
  if (!qword_1EA1AFF50)
  {
    type metadata accessor for DebugFormatInspectorPaneViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AFF50);
  }
  return result;
}

uint64_t FeedDatabaseCommandContext.init(name:database:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

ValueMetadata *type metadata accessor for FeedDatabaseCommandContext()
{
  return &type metadata for FeedDatabaseCommandContext;
}

ValueMetadata *type metadata accessor for FeedDatabaseCommandContext.ExportDatabase()
{
  return &type metadata for FeedDatabaseCommandContext.ExportDatabase;
}

void sub_1C09F48F0(uint64_t a1, char a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  if ((a2 & 1) != 0 || !a1)
  {
    id v2 = objc_msgSend(self, sel_defaultManager);
    uint64_t v3 = (void *)sub_1C1515E9C();
    v9[0] = 0;
    unsigned int v4 = objc_msgSend(v2, sel_removeItemAtURL_error_, v3, v9);

    id v5 = v9[0];
    if (v4)
    {
      id v6 = v5;
    }
    else
    {
      id v7 = v9[0];
      char v8 = (void *)sub_1C1515D3C();

      swift_willThrow();
    }
  }
}

uint64_t sub_1C09F4A18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4) {
    uint64_t v9 = sub_1C151EBCC();
  }
  else {
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09F4AD4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

void sub_1C09F4B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
}

void sub_1C09F4B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFF2E760(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t v10 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v10);
  long long v36 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t v51 = MEMORY[0x1E4FBC860];
  uint64_t v42 = *(void *)(a1 + 16);
  if (v42)
  {
    v29[1] = v4;
    unint64_t v17 = 0;
    uint64_t v39 = v13 + 48;
    long long v46 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    long long v37 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v30 = (uint64_t *)(a4 + 40);
    uint64_t v40 = v13 + 56;
    uint64_t v41 = v13 + 16;
    v29[0] = (v13 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = v13;
    unint64_t v34 = v9;
    uint64_t v35 = a1;
    uint64_t v32 = v10;
    uint64_t v33 = a4;
    uint64_t v31 = v13;
    while (v17 < *(void *)(a1 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      uint64_t v44 = *(void *)(v18 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v18 + 16))(v9, a1 + v19 + v44 * v17, v10, v14);
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v38)(v9, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v10) == 1) {
        goto LABEL_20;
      }
      unint64_t v43 = v19;
      long long v45 = *v46;
      v45(v16, v9, v10);
      uint64_t v20 = *(void *)(a4 + 16);
      if (v20)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = v30;
        while (1)
        {
          uint64_t v23 = *(v21 - 1);
          uint64_t v22 = *v21;
          swift_bridgeObjectRetain();
          uint64_t v49 = sub_1C1515E6C();
          uint64_t v50 = v24;
          uint64_t v47 = v23;
          uint64_t v48 = v22;
          sub_1BFF27ECC();
          char v25 = sub_1C151FF0C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25) {
            break;
          }
          v21 += 2;
          if (!--v20)
          {
            a4 = v33;
            swift_bridgeObjectRelease();
            uint64_t v9 = v34;
            a1 = v35;
            uint64_t v18 = v31;
            uint64_t v10 = v32;
            goto LABEL_3;
          }
        }
        a4 = v33;
        swift_bridgeObjectRelease();
        uint64_t v10 = v32;
        v45(v36, v16, v32);
        uint64_t v26 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F61F8(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v51;
        }
        uint64_t v9 = v34;
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1C05F61F8(v27 > 1, v28 + 1, 1);
          uint64_t v26 = v51;
        }
        *(void *)(v26 + 16) = v28 + 1;
        v45((char *)(v26 + v43 + v28 * v44), v36, v10);
        uint64_t v51 = v26;
        a1 = v35;
        uint64_t v18 = v31;
      }
      else
      {
LABEL_3:
        (*v37)(v16, v10);
      }
      if (++v17 == v42)
      {
        v38(v9, 1, 1, v10, v14);
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v9, 1, 1, v10, v14);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1C002F608((uint64_t)v9);
  }
}

id sub_1C09F4FA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v66 = a3;
  uint64_t v80 = a2;
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  sub_1BFF2E760(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v63 - v7;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v67 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v76 = (char *)&v63 - v13;
  uint64_t v65 = v14;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v63 - v16;
  uint64_t v18 = NSTemporaryDirectory();
  uint64_t v19 = sub_1C151E62C();
  uint64_t v21 = v20;

  id aBlock = a1;
  uint64_t v82 = v80;
  uint64_t v87 = v19;
  uint64_t v88 = v21;
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_1C151E8DC();
  uint64_t v88 = v22;
  sub_1C151E7FC();
  swift_bridgeObjectRelease();
  sub_1C1515E5C();
  swift_bridgeObjectRelease();
  id v77 = self;
  id v23 = objc_msgSend(v77, sel_defaultManager);
  long long v78 = v17;
  uint64_t v24 = (void *)sub_1C1515E9C();
  id aBlock = 0;
  LODWORD(v18) = objc_msgSend(v23, sel_removeItemAtURL_error_, v24, &aBlock);

  if (v18)
  {
    id v25 = aBlock;
  }
  else
  {
    id v26 = aBlock;
    unint64_t v27 = (void *)sub_1C1515D3C();

    swift_willThrow();
    uint64_t v4 = 0;
  }
  id v28 = objc_msgSend(v77, sel_defaultManager);
  unint64_t v29 = (void *)sub_1C1515E9C();
  id aBlock = 0;
  unsigned int v30 = objc_msgSend(v28, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v29, 0, 0, &aBlock);

  if (v30)
  {
    uint64_t v64 = v4;
    id v31 = aBlock;
  }
  else
  {
    id v32 = aBlock;
    uint64_t v33 = (void *)sub_1C1515D3C();

    swift_willThrow();
    uint64_t v64 = 0;
  }
  uint64_t v34 = *(void *)(v66 + 16);
  if (v34)
  {
    long long v74 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v75 = v67 + 16;
    uint64_t v35 = v66 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    uint64_t v69 = *(void *)(v67 + 72);
    unint64_t v36 = v67 + 56;
    long long v71 = (void (**)(char *, char *, uint64_t))(v67 + 32);
    long long v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    long long v37 = (void (**)(char *, uint64_t))(v67 + 8);
    swift_bridgeObjectRetain();
    long long v73 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v36;
    unint64_t v63 = v36 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    long long v70 = v8;
    while (1)
    {
      v74(v8, v35, v9);
      uint64_t v38 = *v73;
      (*v73)(v8, 0, 1, v9);
      if ((*v72)(v8, 1, v9) == 1) {
        break;
      }
      long long v68 = v38;
      uint64_t v79 = v35;
      uint64_t v80 = v34;
      (*v71)(v11, v8, v9);
      id v39 = objc_msgSend(v77, sel_defaultManager, v63);
      uint64_t v40 = (void *)sub_1C1515E9C();
      sub_1C1515E6C();
      uint64_t v41 = v37;
      uint64_t v42 = v76;
      sub_1C1515EDC();
      swift_bridgeObjectRelease();
      unint64_t v43 = (void *)sub_1C1515E9C();
      uint64_t v44 = *v41;
      long long v45 = v42;
      long long v37 = v41;
      (*v41)(v45, v9);
      id aBlock = 0;
      unsigned int v46 = objc_msgSend(v39, sel_copyItemAtURL_toURL_error_, v40, v43, &aBlock);

      id v47 = aBlock;
      if (!v46)
      {
        id v57 = v47;
        sub_1C1515D3C();

        swift_willThrow();
        v44(v11, v9);
        swift_bridgeObjectRelease();
        v44(v78, v9);
        return v57;
      }
      v44(v11, v9);
      uint64_t v8 = v70;
      uint64_t v35 = v79 + v69;
      uint64_t v34 = v80 - 1;
      if (v80 == 1)
      {
        v68(v70, 1, 1, v9);
        break;
      }
    }
  }
  else
  {
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
    swift_bridgeObjectRetain();
    v48(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_1C026990C();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1C1529AE0;
  *(void *)(v49 + 56) = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v49 + 32));
  uint64_t v51 = v67;
  uint64_t v52 = v9;
  long long v53 = *(void (**)(uint64_t *, char *, uint64_t))(v67 + 16);
  long long v54 = v78;
  v53(boxed_opaque_existential_0, v78, v52);
  id v55 = objc_allocWithZone(MEMORY[0x1E4F42718]);
  long long v56 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(v55, sel_initWithActivityItems_applicationActivities_, v56, 0);

  long long v58 = v76;
  v53((uint64_t *)v76, v54, v52);
  unint64_t v59 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v60 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v60 + v59, v58, v52);
  long long v85 = sub_1C09F5CE4;
  uint64_t v86 = v60;
  id aBlock = (id)MEMORY[0x1E4F143A8];
  uint64_t v82 = 1107296256;
  long long v83 = sub_1C09F4A18;
  long long v84 = &block_descriptor_36;
  id v61 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v57, sel_setCompletionWithItemsHandler_, v61);
  _Block_release(v61);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v52);
  return v57;
}

void sub_1C09F5770(uint64_t *a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[1];
  unsigned int v46 = (void *)*a1;
  uint64_t v9 = a1[2];
  id v10 = objc_msgSend(self, sel_defaultManager);
  uint64_t v45 = v2;
  uint64_t v11 = *(void **)(v2 + 56);
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(v11, sel_contentDirectory);
  sub_1C151E62C();

  sub_1C1515E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1C1515E9C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v48 = 0;
  id v14 = objc_msgSend(v10, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v13, 0, 0, &v48);

  id v15 = v48;
  if (v14)
  {
    uint64_t v16 = sub_1C151EBCC();

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v17 = v46;
    sub_1C09F4B40(v16, (uint64_t)v46, v8, v9);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v29 = sub_1C09F4FA0(v17, v8, v19);
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1((void *)(v45 + 16), *(void *)(v45 + 40));
    unsigned int v30 = (void *)sub_1C151AE2C();
    if (v30
      && (id v31 = v30,
          id v32 = objc_msgSend(v30, sel_rootViewController),
          v31,
          v32))
    {
      uint64_t v33 = (void *)sub_1C151F49C();

      id v34 = objc_msgSend(v29, sel_popoverPresentationController);
      uint64_t v35 = v44;
      if (v34)
      {
        unint64_t v36 = v34;
        if (v44) {
          long long v37 = (void *)sub_1C151B71C();
        }
        else {
          long long v37 = 0;
        }
        objc_msgSend(v36, sel_setSourceView_, v37, v44);
      }
      id v38 = objc_msgSend(v29, sel_popoverPresentationController, v44);
      if (v38)
      {
        id v39 = v38;
        if (!v35
          || (sub_1C151B70C(),
              double v40 = *(double *)v47,
              double v41 = *(double *)&v47[1],
              double v42 = *(double *)&v47[2],
              double v43 = *(double *)&v47[3],
              sub_1BFF5984C((uint64_t)v47, (uint64_t)&v48),
              v50 == 1))
        {
          double v40 = *MEMORY[0x1E4F1DB20];
          double v41 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
          double v42 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
          double v43 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
        }
        objc_msgSend(v39, sel_setSourceRect_, v40, v41, v42, v43);
      }
      objc_msgSend(v33, sel_presentViewController_animated_completion_, v29, 1, 0);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v20 = v15;
    uint64_t v21 = (void *)sub_1C1515D3C();

    swift_willThrow();
    uint64_t v22 = (uint64_t)v46;
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
    uint64_t v24 = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v25 = sub_1BFE9C558();
    *(void *)(v23 + 64) = v25;
    *(void *)(v23 + 32) = v22;
    *(void *)(v23 + 40) = v8;
    id v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    v47[0] = v21;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    sub_1C152036C();
    id v26 = v48;
    unint64_t v27 = v49;
    *(void *)(v23 + 96) = v24;
    *(void *)(v23 + 104) = v25;
    *(void *)(v23 + 72) = v26;
    *(void *)(v23 + 80) = v27;
    sub_1BFCCB57C();
    id v28 = (void *)sub_1C151FD3C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C09F5C54()
{
  uint64_t v1 = sub_1C1515FDC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1C09F5CE4(uint64_t a1, char a2)
{
  sub_1C1515FDC();
  sub_1C09F48F0(a1, a2);
}

uint64_t dispatch thunk of FeedSortableItem.publisherID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedSortableItem.score.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedSortableItem.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

int64x2_t static FormatCodingPuzzleTypeOverridesStrategy.defaultValue.getter@<Q0>(int64x2_t *a1@<X8>)
{
  uint64_t v2 = &a1->i8[*(int *)(type metadata accessor for FormatPuzzleType.Overrides(0) + 24)];
  uint64_t v3 = sub_1C1515FDC();
  (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  int64x2_t result = vdupq_n_s64(0xF000000000000007);
  *a1 = result;
  return result;
}

int64x2_t sub_1C09F5E38@<Q0>(int64x2_t *a1@<X8>)
{
  uint64_t v2 = &a1->i8[*(int *)(type metadata accessor for FormatPuzzleType.Overrides(0) + 24)];
  uint64_t v3 = sub_1C1515FDC();
  (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  int64x2_t result = vdupq_n_s64(0xF000000000000007);
  *a1 = result;
  return result;
}

uint64_t _s8NewsFeed39FormatCodingPuzzleTypeOverridesStrategyV12shouldEncode12wrappedValueSbAA0ceF0C0G0V_tFZ_0(uint64_t *a1)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v16 - v9;
  uint64_t v11 = *a1;
  sub_1C09F61F0((uint64_t)a1, (uint64_t)&v16 - v9, type metadata accessor for FormatPuzzleType.Overrides);
  if ((~v11 & 0xF000000000000007) != 0)
  {
    sub_1C09F6258((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
    sub_1C09F61F0((uint64_t)a1, (uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
    goto LABEL_5;
  }
  uint64_t v12 = *((void *)v10 + 1);
  sub_1BFDC11A4(v12);
  sub_1C09F6258((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
  sub_1BFDC11BC(v12);
  sub_1C09F61F0((uint64_t)a1, (uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
  if ((~v12 & 0xF000000000000007) != 0)
  {
LABEL_5:
    sub_1C09F6258((uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
    return 1;
  }
  sub_1C09F61F0((uint64_t)&v7[*(int *)(v5 + 24)], (uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C09F6258((uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
  uint64_t v13 = sub_1C1515FDC();
  BOOL v14 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v4, 1, v13) != 1;
  sub_1C09F6258((uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
  return v14;
}

unint64_t sub_1C09F610C(uint64_t a1)
{
  unint64_t result = sub_1C0153BB4();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09F6134()
{
  return sub_1C09F619C(&qword_1EB86C5B0);
}

uint64_t sub_1C09F6168()
{
  return sub_1C09F619C(&qword_1EA19A218);
}

uint64_t sub_1C09F619C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatPuzzleType.Overrides(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingPuzzleTypeOverridesStrategy()
{
  return &type metadata for FormatCodingPuzzleTypeOverridesStrategy;
}

uint64_t sub_1C09F61F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09F6258(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatOptionsNode.statements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionsNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionsNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionsNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatOptionsNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatOptionsNode.statements.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatOptionsNode.statements.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatOptionsNode.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatOptionsNode.children.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatOptionsNode.__allocating_init(identifier:statements:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  swift_beginAccess();
  void v8[4] = a3;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

void *FormatOptionsNode.init(identifier:statements:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  swift_beginAccess();
  v4[4] = a3;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t FormatOptionsNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatOptionsNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C09F6700(void **a1, void **a2)
{
  return _s8NewsFeed17FormatOptionsNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C09F670C(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a1;
  uint64_t v76 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v76);
  uint64_t v67 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v66 = (uint64_t)&v60 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v60 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v60 - v11;
  uint64_t v75 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v13 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  id v15 = (uint64_t *)((char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v60 - v17;
  swift_beginAccess();
  uint64_t v19 = *(void *)(a2 + 32);
  uint64_t v71 = *(void *)(v19 + 16);
  if (!v71) {
    goto LABEL_45;
  }
  uint64_t v64 = a2 + 32;
  uint64_t v62 = v18;
  uint64_t v63 = a2;
  uint64_t v65 = v2;
  unint64_t v61 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v74 = v19 + v61;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  long long v68 = v12;
  uint64_t v73 = result;
  uint64_t v70 = v13;
  while (1)
  {
    if (v21 >= *(void *)(result + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v69 = *(void *)(v13 + 72);
    sub_1C09F74B0(v74 + v69 * v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    uint64_t v22 = v15[1];
    *(void *)uint64_t v9 = *v15;
    *((void *)v9 + 1) = v22;
    *((void *)v9 + 6) = MEMORY[0x1E4FBC860];
    uint64_t v23 = (uint64_t)&v9[*(int *)(v76 + 28)];
    uint64_t v24 = type metadata accessor for FormatVersionRequirement(0);
    unint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    uint64_t v72 = v23;
    v25(v23, 1, 1, v24);
    uint64_t v26 = v75;
    swift_bridgeObjectRetain();
    sub_1C1002AAC((uint64_t)v80);
    uint64_t v27 = v80[0];
    uint64_t v28 = *(void *)((char *)v15 + *(int *)(v26 + 24));
    if (v81)
    {
      uint64_t v29 = v80[1];
      swift_bridgeObjectRetain();
      sub_1BFF81104((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      char v30 = 1;
      goto LABEL_23;
    }
    uint64_t v27 = LOBYTE(v80[0]);
    uint64_t v31 = *(void *)(v28 + 16);
    if (v31) {
      break;
    }
    swift_bridgeObjectRetain();
LABEL_22:
    uint64_t v12 = v68;
    sub_1BFF81104((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    swift_bridgeObjectRelease();
    uint64_t v29 = 0;
    uint64_t v28 = 0;
    char v30 = 0;
LABEL_23:
    *((void *)v9 + 2) = v27;
    *((void *)v9 + 3) = v29;
    *((void *)v9 + 4) = v28;
    v9[40] = v30;
    sub_1C09F7448((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    uint64_t v41 = swift_allocBox();
    uint64_t v43 = v42;
    sub_1C09F74B0((uint64_t)v12, v42, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    uint64_t v44 = *(void **)(v77 + 48);
    uint64_t v45 = v44[2];
    if (!v45 || v44[v45 + 3] >> 60 != 1) {
      goto LABEL_28;
    }
    uint64_t v46 = swift_projectBox();
    uint64_t v47 = v66;
    sub_1C09F74B0(v46, v66, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    uint64_t v48 = v67;
    sub_1C09F74B0(v43, v67, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    swift_retain();
    swift_retain();
    BOOL v49 = sub_1C0C4C6E0(v47, v48);
    sub_1BFF81104(v48, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    sub_1BFF81104(v47, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    swift_release();
    swift_release();
    if (!v49)
    {
      uint64_t v44 = *(void **)(v77 + 48);
      uint64_t v12 = v68;
LABEL_28:
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v44 = sub_1C0EE23FC(0, v44[2] + 1, 1, v44);
      }
      unint64_t v51 = v44[2];
      unint64_t v50 = v44[3];
      if (v51 >= v50 >> 1) {
        uint64_t v44 = sub_1C0EE23FC((void *)(v50 > 1), v51 + 1, 1, v44);
      }
      v44[2] = v51 + 1;
      v44[v51 + 4] = v41 | 0x1000000000000000;
      swift_release();
      *(void *)(v77 + 48) = v44;
      goto LABEL_33;
    }
    swift_release();
    uint64_t v12 = v68;
LABEL_33:
    ++v21;
    sub_1BFF81104((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    uint64_t v13 = v70;
    uint64_t result = v73;
    if (v21 == v71)
    {
      swift_bridgeObjectRelease();
      uint64_t v54 = *(void *)(*(void *)v64 + 16);
      if (v54)
      {
        uint64_t v55 = *(void *)v64 + v61;
        swift_bridgeObjectRetain();
        uint64_t v56 = v65;
        uint64_t v57 = (uint64_t)v62;
        uint64_t v58 = v69;
        while (1)
        {
          sub_1C09F74B0(v55, v57, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
          sub_1C05B9664(v77);
          if (v56) {
            break;
          }
          sub_1BFF81104(v57, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
          v55 += v58;
          if (!--v54)
          {
            swift_bridgeObjectRelease();
            goto LABEL_44;
          }
        }
        sub_1BFF81104(v57, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
        return swift_bridgeObjectRelease();
      }
LABEL_44:
      a2 = v63;
LABEL_45:
      swift_beginAccess();
      uint64_t v59 = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      sub_1C05550B8(v77, v59);
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v32 = 0;
  while (1)
  {
    unsigned int v35 = *(unsigned __int8 *)(v28 + v32 + 32);
    if (!(v35 >> 6))
    {
      if (v27 != 3)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1C09F7518((unint64_t *)&qword_1EA196B88, 255, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
        swift_allocError();
        char v53 = 3;
        goto LABEL_38;
      }
      char v82 = *(unsigned char *)(v28 + v32 + 32);
      v78[0] = 1.0;
      *(void *)&v78[1] = MEMORY[0x1E4FBC860];
      sub_1C0F8227C(v78, &v79);
      uint64_t v34 = v79;
      goto LABEL_9;
    }
    if (v35 >> 6 != 1) {
      break;
    }
    if (v27 != 5)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1C09F7518((unint64_t *)&qword_1EA196B88, 255, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      char v53 = 5;
      goto LABEL_38;
    }
    if (v35)
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = swift_allocObject();
      *(unsigned char *)(v34 + 16) = 1;
      *(void *)(v34 + 24) = v33;
    }
    else
    {
      uint64_t v36 = swift_allocObject();
      uint64_t v37 = sub_1C151E7AC();
      uint64_t v38 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v36 + 16) = v37;
      *(void *)(v36 + 24) = v38;
      uint64_t v34 = v36 | 0x4000000000000000;
    }
LABEL_9:
    *(void *)&v78[0] = v34;
    FormatOptionValue.type.getter((char *)&v83);
LABEL_10:
    swift_release();
    ++v32;
    uint64_t v27 = v83;
    if (v31 == v32)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  if (v27 == 4)
  {
    uint64_t v39 = swift_allocObject();
    *(void *)&v78[0] = 1;
    sub_1BFF01BC4();
    *(void *)(v39 + 16) = sub_1C151FF2C();
    *(void *)(v39 + 24) = v40;
    *(void *)(v39 + 32) = MEMORY[0x1E4FBC860];
    *(void *)&v78[0] = v39 | 0x5000000000000000;
    FormatOptionValue.type.getter((char *)&v83);
    goto LABEL_10;
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1C09F7518((unint64_t *)&qword_1EA196B88, 255, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
  swift_allocError();
  char v53 = 4;
LABEL_38:
  *uint64_t v52 = v53;
  v52[1] = v27;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1BFF81104((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C09F7174(v72, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09F70DC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v5 = 1;
  long long v6 = 0u;
  long long v7 = 0u;
  int v8 = 0;
  __int16 v9 = -16384;
  swift_retain();
  sub_1C0F4B444((uint64_t)&v5, a1, v3);
  return swift_release();
}

uint64_t sub_1C09F7150(uint64_t a1, uint64_t a2)
{
  return FormatOptionsNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C09F7174(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF1FB38(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C09F71D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C09F7518(&qword_1EA1A2268, a2, (void (*)(uint64_t))type metadata accessor for FormatOptionsNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09F7228(void *a1, uint64_t a2)
{
  a1[1] = sub_1C09F7518(&qword_1EB87E6C0, a2, (void (*)(uint64_t))type metadata accessor for FormatOptionsNode);
  a1[2] = sub_1C09F7518(&qword_1EB8600E8, v3, (void (*)(uint64_t))type metadata accessor for FormatOptionsNode);
  uint64_t result = sub_1C09F7518(&qword_1EA1A2270, v4, (void (*)(uint64_t))type metadata accessor for FormatOptionsNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C09F72D4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C09F7518(&qword_1EA1A2278, a2, (void (*)(uint64_t))type metadata accessor for FormatOptionsNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09F732C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09F737C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09F73CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatOptionsNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatOptionsNode);
}

uint64_t dispatch thunk of FormatOptionsNode.__allocating_init(identifier:statements:children:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C09F7448(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09F74B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09F7518(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C09F7560()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09F75A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1C09F75DC(uint64_t a1)
{
  uint64_t v76 = a1;
  sub_1C09F95B8(0, &qword_1EA1A8710, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v68 = (uint64_t)&v64 - v2;
  uint64_t v73 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v67 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v64 = (uint64_t)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09F95B8(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v72 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v71 = (uint64_t)&v64 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = (uint64_t)&v64 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v64 - v11;
  uint64_t v74 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v13 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v66 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v64 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v64 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v64 - v22;
  uint64_t v65 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v65);
  uint64_t v69 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v28);
  char v30 = (char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v64 - v32;
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v64 - v35;
  switch(*v75)
  {
    case 1:
      uint64_t v40 = v76 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v41 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4(v40 + *(int *)(v41 + 20), (uint64_t)v33, type metadata accessor for PuzzleStatisticCategory);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) < 2 || !EnumCaseMultiPayload)
      {
        sub_1BFEEB340((uint64_t)v33, type metadata accessor for PuzzleStatisticCategory);
        return -1.0;
      }
      uint64_t v57 = (uint64_t)v69;
      sub_1C09E4344((uint64_t)v33, (uint64_t)v69, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      goto LABEL_29;
    case 2:
      uint64_t v43 = v76 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v44 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4(v43 + *(int *)(v44 + 20), (uint64_t)v30, type metadata accessor for PuzzleStatisticCategory);
      int v45 = swift_getEnumCaseMultiPayload();
      if ((v45 - 2) < 2 || !v45)
      {
        sub_1BFEEB340((uint64_t)v30, type metadata accessor for PuzzleStatisticCategory);
        return -1.0;
      }
      uint64_t v57 = (uint64_t)v69;
      sub_1C09E4344((uint64_t)v30, (uint64_t)v69, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
LABEL_29:
      double v50 = PuzzleStatisticValue.primaryValue.getter();
      sub_1BFEEB340(v57, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      return v50;
    case 3:
      sub_1C09F7FDC(v76, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v74) == 1)
      {
        uint64_t v46 = &qword_1EB884BF0;
        uint64_t v47 = (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult;
        uint64_t v48 = (uint64_t)v12;
        goto LABEL_19;
      }
      sub_1C09E4344((uint64_t)v12, (uint64_t)v23, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      double v50 = (double)*(uint64_t *)&v23[*(int *)(v73 + 32)];
      sub_1BFEEB340((uint64_t)v23, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      return v50;
    case 4:
      uint64_t v49 = v70;
      sub_1C09F7FDC(v76, v70);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v49, 1, v74) == 1) {
        goto LABEL_17;
      }
      sub_1C09E4344(v49, (uint64_t)v20, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      double v50 = (double)*(uint64_t *)&v20[*(int *)(v73 + 28)];
      sub_1BFEEB340((uint64_t)v20, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      return v50;
    case 5:
      uint64_t v49 = v71;
      sub_1C09F7FDC(v76, v71);
      uint64_t v51 = v74;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v49, 1, v74) == 1) {
        goto LABEL_17;
      }
      sub_1C09E4344(v49, (uint64_t)v17, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      double v50 = (double)*(uint64_t *)&v17[*(int *)(v51 + 24)];
      sub_1BFEEB340((uint64_t)v17, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      return v50;
    case 6:
      uint64_t v49 = v72;
      sub_1C09F7FDC(v76, v72);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v49, 1, v74) == 1)
      {
LABEL_17:
        uint64_t v46 = &qword_1EB884BF0;
        uint64_t v52 = (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult;
      }
      else
      {
        uint64_t v55 = v66;
        sub_1C09E4344(v49, v66, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        uint64_t v49 = v68;
        sub_1C116B1AC(v68);
        uint64_t v56 = v73;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v49, 1, v73) != 1)
        {
          uint64_t v58 = v64;
          sub_1C09E4344(v49, v64, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v59 = *(int *)(v56 + 32);
          uint64_t v60 = *(void *)(v58 + v59);
          uint64_t v61 = *(void *)(v55 + v59);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v63 = v60 - v61;
          if (v62)
          {
            __break(1u);
            JUMPOUT(0x1C09F7FACLL);
          }
          double v50 = (double)v63;
          sub_1BFEEB340(v58, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          sub_1BFEEB340(v55, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          return v50;
        }
        sub_1BFEEB340(v55, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        uint64_t v46 = &qword_1EA1A8710;
        uint64_t v52 = (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry;
      }
      uint64_t v47 = v52;
      uint64_t v48 = v49;
LABEL_19:
      sub_1C09F960C(v48, v46, v47);
      return -1.0;
    default:
      uint64_t v37 = v76 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v38 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4(v37 + *(int *)(v38 + 20), (uint64_t)v36, type metadata accessor for PuzzleStatisticCategory);
      int v39 = swift_getEnumCaseMultiPayload();
      if ((v39 - 2) >= 2)
      {
        if (v39)
        {
          uint64_t v27 = v69;
          sub_1C09E4344((uint64_t)v36, (uint64_t)v69, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          double v50 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v54 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        }
        else
        {
          sub_1C09E4344((uint64_t)v36, (uint64_t)v27, type metadata accessor for PuzzleStatisticValue);
          double v50 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v54 = type metadata accessor for PuzzleStatisticValue;
        }
        sub_1BFEEB340((uint64_t)v27, v54);
      }
      else
      {
        sub_1BFEEB340((uint64_t)v36, type metadata accessor for PuzzleStatisticCategory);
        return -1.0;
      }
      return v50;
  }
}

BOOL static FormatPuzzleStatisticBinding.Float.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C09F7FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09F95B8(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v14 = type metadata accessor for PuzzleStatistic();
  sub_1C04669D4(v13 + *(int *)(v14 + 20), (uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BFEEB340((uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
    goto LABEL_5;
  }
  sub_1C09E5944((uint64_t)v6, (uint64_t)v12);
  sub_1C09E5944((uint64_t)v12, (uint64_t)v9);
  uint64_t v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_1C09F960C((uint64_t)v9, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
LABEL_5:
    uint64_t v17 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  sub_1C09E4344((uint64_t)v9, a2, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
}

unint64_t sub_1C09F8270(char a1)
{
  unint64_t result = 0x567972616D697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 2:
      unint64_t result = 0x7972616974726574;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0xD00000000000002BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C09F8378(unsigned __int8 *a1, char *a2)
{
  return sub_1C147CA38(*a1, *a2);
}

uint64_t sub_1C09F8384()
{
  return sub_1C044D0F8();
}

uint64_t sub_1C09F8390()
{
  return sub_1C04480C4();
}

uint64_t sub_1C09F8398()
{
  return sub_1C044D0F8();
}

uint64_t sub_1C09F83A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09F956C();
  *a1 = result;
  return result;
}

unint64_t sub_1C09F83D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C09F8270(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C09F83FC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09F845C()
{
  return sub_1C151EAEC();
}

void sub_1C09F84AC(void *a1@<X8>)
{
  *a1 = &unk_1F1B687E0;
}

uint64_t FormatPuzzleStatisticBinding.Float.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleStatisticBinding.Float.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C09F8534()
{
  unint64_t result = qword_1EA1A2280;
  if (!qword_1EA1A2280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2280);
  }
  return result;
}

unint64_t sub_1C09F8588(uint64_t a1)
{
  unint64_t result = sub_1C09F85B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09F85B0()
{
  unint64_t result = qword_1EA1A2288;
  if (!qword_1EA1A2288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2288);
  }
  return result;
}

unint64_t sub_1C09F8604(void *a1)
{
  a1[1] = sub_1C0860194();
  a1[2] = sub_1C08FBDB4();
  unint64_t result = sub_1C09F8534();
  a1[3] = result;
  return result;
}

uint64_t sub_1C09F863C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPuzzleStatisticBinding.Float.init(from:)(a1, a2);
}

uint64_t sub_1C09F8654(void *a1)
{
  return FormatPuzzleStatisticBinding.Float.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Float()
{
  return &type metadata for FormatPuzzleStatisticBinding.Float;
}

unsigned char *_s5FloatOwst_0_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09F874CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5FloatO10CodingTypeOMa()
{
  return &_s5FloatO10CodingTypeON;
}

unint64_t sub_1C09F8788()
{
  unint64_t result = qword_1EA1A2290;
  if (!qword_1EA1A2290)
  {
    sub_1C09F87E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2290);
  }
  return result;
}

void sub_1C09F87E0()
{
  if (!qword_1EA1A2298)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2298);
    }
  }
}

unint64_t sub_1C09F883C()
{
  unint64_t result = qword_1EA1A22A0;
  if (!qword_1EA1A22A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A22A0);
  }
  return result;
}

unint64_t sub_1C09F8890()
{
  unint64_t result = qword_1EB86D430;
  if (!qword_1EB86D430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D430);
  }
  return result;
}

uint64_t sub_1C09F88E4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v107 = a1;
  uint64_t v108 = a3;
  uint64_t v101 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v101);
  uint64_t v106 = (uint64_t)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v105 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v110);
  uint64_t v104 = (uint64_t)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v103 = (uint64_t)&v100 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v102 = (uint64_t)&v100 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v100 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v100 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v100 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v100 - v21;
  uint64_t v23 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v23);
  MEMORY[0x1F4188790](v24);
  MEMORY[0x1F4188790](v25);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v100 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v100 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v100 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v40 = (char *)&v100 - v36;
  switch(*v107)
  {
    case 1:
      sub_1C04669D4(v109, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v45 = *(int *)(v23 + 32);
      uint64_t v46 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4((uint64_t)&v34[v45 + *(int *)(v46 + 20)], (uint64_t)v19, type metadata accessor for PuzzleStatisticCategory);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) >= 2 && EnumCaseMultiPayload)
      {
        uint64_t v87 = v106;
        sub_1C09E4344((uint64_t)v19, v106, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        double v88 = PuzzleStatisticValue.primaryValue.getter();
        sub_1BFEEB340(v87, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        uint64_t v48 = *(void *)&v88;
      }
      else
      {
        sub_1BFEEB340((uint64_t)v19, type metadata accessor for PuzzleStatisticCategory);
        uint64_t v48 = 0xBFF0000000000000;
      }
      uint64_t v89 = v108;
      sub_1C042F1BC(0x7261646E6F636553, 0xEF65756C61562079, v48, 0, v108);
      uint64_t v40 = v34;
      break;
    case 2:
      sub_1C04669D4(v109, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v49 = *(int *)(v23 + 32);
      uint64_t v50 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4((uint64_t)&v31[v49 + *(int *)(v50 + 20)], (uint64_t)v16, type metadata accessor for PuzzleStatisticCategory);
      int v51 = swift_getEnumCaseMultiPayload();
      if ((v51 - 2) >= 2 && v51)
      {
        uint64_t v90 = v106;
        sub_1C09E4344((uint64_t)v16, v106, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        double v91 = PuzzleStatisticValue.primaryValue.getter();
        sub_1BFEEB340(v90, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        uint64_t v52 = *(void *)&v91;
      }
      else
      {
        sub_1BFEEB340((uint64_t)v16, type metadata accessor for PuzzleStatisticCategory);
        uint64_t v52 = 0xBFF0000000000000;
      }
      uint64_t v89 = v108;
      sub_1C042F1BC(0x7972616974726554, 0xEE0065756C615620, v52, 0, v108);
      uint64_t v40 = v31;
      break;
    case 3:
      sub_1C04669D4(v109, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v53 = *(int *)(v23 + 32);
      uint64_t v54 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4((uint64_t)&v28[v53 + *(int *)(v54 + 20)], (uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
      int v55 = swift_getEnumCaseMultiPayload();
      if ((v55 - 2) >= 2)
      {
        if (v55)
        {
          uint64_t v92 = (uint64_t)v13;
          uint64_t v79 = v106;
          sub_1C09E4344(v92, v106, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          double v56 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v80 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        }
        else
        {
          uint64_t v78 = (uint64_t)v13;
          uint64_t v79 = v105;
          sub_1C09E4344(v78, v105, type metadata accessor for PuzzleStatisticValue);
          double v56 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v80 = type metadata accessor for PuzzleStatisticValue;
        }
        sub_1BFEEB340(v79, v80);
      }
      else
      {
        sub_1BFEEB340((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
        double v56 = -1.0;
      }
      uint64_t v89 = v108;
      sub_1C042F1BC(0xD000000000000018, 0x80000001C1617EA0, *(uint64_t *)&v56, 0, v108);
      uint64_t v40 = v28;
      break;
    case 4:
      uint64_t v57 = v39;
      sub_1C04669D4(v109, v39, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v58 = *(int *)(v23 + 32);
      uint64_t v59 = (char *)v57;
      uint64_t v60 = v57 + v58 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v61 = v102;
      sub_1C04669D4(v60, v102, type metadata accessor for PuzzleStatisticCategory);
      int v62 = swift_getEnumCaseMultiPayload();
      if ((v62 - 2) >= 2)
      {
        if (v62)
        {
          uint64_t v81 = v106;
          sub_1C09E4344(v61, v106, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          double v63 = PuzzleStatisticValue.primaryValue.getter();
          char v82 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        }
        else
        {
          uint64_t v81 = v105;
          sub_1C09E4344(v61, v105, type metadata accessor for PuzzleStatisticValue);
          double v63 = PuzzleStatisticValue.primaryValue.getter();
          char v82 = type metadata accessor for PuzzleStatisticValue;
        }
        sub_1BFEEB340(v81, v82);
      }
      else
      {
        sub_1BFEEB340(v61, type metadata accessor for PuzzleStatisticCategory);
        double v63 = -1.0;
      }
      uint64_t v93 = *(void *)&v63;
      uint64_t v94 = "Leaderboard Player Rank";
      goto LABEL_44;
    case 5:
      uint64_t v64 = v38;
      sub_1C04669D4(v109, v38, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v65 = *(int *)(v23 + 32);
      uint64_t v59 = (char *)v64;
      uint64_t v66 = v64 + v65 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v67 = v103;
      sub_1C04669D4(v66, v103, type metadata accessor for PuzzleStatisticCategory);
      int v68 = swift_getEnumCaseMultiPayload();
      if ((v68 - 2) >= 2)
      {
        if (v68)
        {
          uint64_t v83 = v106;
          sub_1C09E4344(v67, v106, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          double v69 = PuzzleStatisticValue.primaryValue.getter();
          long long v84 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        }
        else
        {
          uint64_t v83 = v105;
          sub_1C09E4344(v67, v105, type metadata accessor for PuzzleStatisticValue);
          double v69 = PuzzleStatisticValue.primaryValue.getter();
          long long v84 = type metadata accessor for PuzzleStatisticValue;
        }
        sub_1BFEEB340(v83, v84);
      }
      else
      {
        sub_1BFEEB340(v67, type metadata accessor for PuzzleStatisticCategory);
        double v69 = -1.0;
      }
      uint64_t v93 = *(void *)&v69;
      uint64_t v94 = "Leaderboard Num Entries";
LABEL_44:
      unint64_t v95 = (unint64_t)(v94 - 32) | 0x8000000000000000;
      uint64_t v89 = v108;
      uint64_t v96 = v108;
      uint64_t v97 = 0xD000000000000017;
      goto LABEL_48;
    case 6:
      uint64_t v70 = v37;
      sub_1C04669D4(v109, v37, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v71 = *(int *)(v23 + 32);
      uint64_t v59 = (char *)v70;
      uint64_t v72 = v70 + v71 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v73 = v104;
      sub_1C04669D4(v72, v104, type metadata accessor for PuzzleStatisticCategory);
      int v74 = swift_getEnumCaseMultiPayload();
      if ((v74 - 2) >= 2)
      {
        if (v74)
        {
          uint64_t v85 = v106;
          sub_1C09E4344(v73, v106, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          double v75 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v86 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        }
        else
        {
          uint64_t v85 = v105;
          sub_1C09E4344(v73, v105, type metadata accessor for PuzzleStatisticValue);
          double v75 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v86 = type metadata accessor for PuzzleStatisticValue;
        }
        sub_1BFEEB340(v85, v86);
      }
      else
      {
        sub_1BFEEB340(v73, type metadata accessor for PuzzleStatisticCategory);
        double v75 = -1.0;
      }
      uint64_t v93 = *(void *)&v75;
      uint64_t v97 = 0xD00000000000002FLL;
      unint64_t v95 = 0x80000001C1617E30;
      uint64_t v89 = v108;
      uint64_t v96 = v108;
LABEL_48:
      sub_1C042F1BC(v97, v95, v93, 0, v96);
      uint64_t v40 = v59;
      break;
    default:
      sub_1C04669D4(v109, (uint64_t)&v100 - v36, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v41 = *(int *)(v23 + 32);
      uint64_t v42 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4((uint64_t)&v40[v41 + *(int *)(v42 + 20)], (uint64_t)v22, type metadata accessor for PuzzleStatisticCategory);
      int v43 = swift_getEnumCaseMultiPayload();
      if ((v43 - 2) >= 2)
      {
        if (v43)
        {
          uint64_t v76 = v106;
          sub_1C09E4344((uint64_t)v22, v106, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          double v44 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v77 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        }
        else
        {
          uint64_t v76 = v105;
          sub_1C09E4344((uint64_t)v22, v105, type metadata accessor for PuzzleStatisticValue);
          double v44 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v77 = type metadata accessor for PuzzleStatisticValue;
        }
        sub_1BFEEB340(v76, v77);
      }
      else
      {
        sub_1BFEEB340((uint64_t)v22, type metadata accessor for PuzzleStatisticCategory);
        double v44 = -1.0;
      }
      uint64_t v89 = v108;
      sub_1C042F1BC(0x207972616D697250, 0xED000065756C6156, *(uint64_t *)&v44, 0, v108);
      break;
  }
  sub_1BFEEB340((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v98 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v89, 0, 1, v98);
}

uint64_t sub_1C09F956C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

void sub_1C09F95B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C09F960C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C09F95B8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

NewsFeed::LiveActivityWebEmbedDatastore::SubscriptionState_optional __swiftcall LiveActivityWebEmbedDatastore.SubscriptionState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t LiveActivityWebEmbedDatastore.SubscriptionState.rawValue.getter()
{
  unint64_t v1 = 0x6269726373627573;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1C09F9728()
{
  return sub_1C015EDA8();
}

uint64_t sub_1C09F9730()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09F97C8()
{
  return sub_1C044CDA8();
}

NewsFeed::LiveActivityWebEmbedDatastore::SubscriptionState_optional sub_1C09F97D0(Swift::String *a1)
{
  return LiveActivityWebEmbedDatastore.SubscriptionState.init(rawValue:)(*a1);
}

void sub_1C09F97DC(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0xEA00000000006465;
  unint64_t v4 = 0x6269726373627573;
  if (*v1 != 1)
  {
    unint64_t v4 = 0xD000000000000014;
    unint64_t v3 = 0x80000001C1601CD0;
  }
  if (*v1)
  {
    unint64_t v2 = v4;
    unint64_t v5 = v3;
  }
  else
  {
    unint64_t v5 = 0x80000001C1601CB0;
  }
  *a1 = v2;
  a1[1] = v5;
}

uint64_t sub_1C09F9844()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09F98A4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C09F98F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147BB74(*a1, *a2);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151976C();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.subscription.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity()
{
  uint64_t result = qword_1EB863080;
  if (!qword_1EB863080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.scheduledStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity() + 24);
  return sub_1BFF97B80(v3, a1);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.clientDataTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity() + 28);
  return sub_1BFF97B80(v3, a1);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.debugDescription.getter()
{
  sub_1C151976C();
  sub_1C09FE43C(&qword_1EA1A22A8, MEMORY[0x1E4F81D40]);
  uint64_t v1 = sub_1C152088C();
  sub_1C151E80C();
  type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1C09F9B88()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7069726373627573;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C09F9C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C09FE04C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C09F9C48(uint64_t a1)
{
  unint64_t v2 = sub_1C09FBEF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09F9C84(uint64_t a1)
{
  unint64_t v2 = sub_1C09FBEF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C09FC270(0, &qword_1EA1A22B0, (uint64_t (*)(void))sub_1C09FBEF4, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09FBEF4();
  sub_1C1520F0C();
  char v16 = 0;
  sub_1C151976C();
  sub_1C09FE43C((unint64_t *)&unk_1EB8629A8, MEMORY[0x1E4F81D40]);
  sub_1C152080C();
  if (!v2)
  {
    char v15 = *(unsigned char *)(v3 + *(int *)(type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity() + 20));
    char v14 = 1;
    sub_1C09FBF48();
    sub_1C152080C();
    char v13 = 2;
    sub_1C151631C();
    sub_1C09FE43C((unint64_t *)&unk_1EB871150, MEMORY[0x1E4F27928]);
    sub_1C152078C();
    char v12 = 3;
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v28 = (char *)&v25 - v6;
  uint64_t v7 = sub_1C151976C();
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v31 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09FC270(0, &qword_1EA1A22C8, (uint64_t (*)(void))sub_1C09FBEF4, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v9;
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09FBEF4();
  uint64_t v32 = v11;
  uint64_t v15 = v34;
  sub_1C1520EBC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v30;
  char v39 = 0;
  sub_1C09FE43C(&qword_1EA1A22D0, MEMORY[0x1E4F81D40]);
  uint64_t v17 = v31;
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v17, v7);
  char v37 = 1;
  sub_1C09FBF9C();
  sub_1C15206EC();
  uint64_t v18 = v12;
  v14[*(int *)(v12 + 20)] = v38;
  sub_1C151631C();
  char v36 = 2;
  uint64_t v19 = sub_1C09FE43C(&qword_1EB871168, MEMORY[0x1E4F27928]);
  uint64_t v20 = (uint64_t)v28;
  uint64_t v34 = v19;
  sub_1C152065C();
  sub_1BFCB311C(v20, (uint64_t)&v14[*(int *)(v18 + 24)]);
  char v35 = 3;
  uint64_t v21 = v18;
  uint64_t v22 = (uint64_t)v27;
  uint64_t v23 = v32;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v33);
  sub_1BFCB311C(v22, (uint64_t)&v14[*(int *)(v21 + 28)]);
  sub_1C09FBFF0((uint64_t)v14, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C09FC054((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity);
}

uint64_t sub_1C09FA4DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LiveActivityWebEmbedDatastore.LiveActivity.init(from:)(a1, a2);
}

uint64_t sub_1C09FA4F4(void *a1)
{
  return LiveActivityWebEmbedDatastore.LiveActivity.encode(to:)(a1);
}

uint64_t LiveActivityWebEmbedDatastore.DebugData.followableLiveActivities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static LiveActivityWebEmbedDatastore.DebugData.== infix(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = swift_bridgeObjectRetain();
      char v4 = sub_1C00DEE68(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4) {
        return 1;
      }
    }
  }
  else if (!v2)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1C09FA590()
{
  return 0xD000000000000018;
}

uint64_t sub_1C09FA5AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C09FE1FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C09FA5D8(uint64_t a1)
{
  unint64_t v2 = sub_1C09FC0B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09FA614(uint64_t a1)
{
  unint64_t v2 = sub_1C09FC0B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LiveActivityWebEmbedDatastore.DebugData.encode(to:)(void *a1)
{
  sub_1C09FC270(0, &qword_1EB8635E0, (uint64_t (*)(void))sub_1C09FC0B4, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09FC0B4();
  sub_1C1520F0C();
  v10[3] = v8;
  sub_1BFEE9EC8(0, &qword_1EB8632A8, MEMORY[0x1E4F81D40], MEMORY[0x1E4FBB320]);
  sub_1C09FC108(&qword_1EB8632B0, (unint64_t *)&unk_1EB8629A8);
  sub_1C152078C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LiveActivityWebEmbedDatastore.DebugData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_1C09FC270(0, &qword_1EA1A22E0, (uint64_t (*)(void))sub_1C09FC0B4, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09FC0B4();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v12;
    sub_1BFEE9EC8(0, &qword_1EB8632A8, MEMORY[0x1E4F81D40], MEMORY[0x1E4FBB320]);
    sub_1C09FC108(&qword_1EA1A22E8, &qword_1EA1A22D0);
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C09FAA6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LiveActivityWebEmbedDatastore.DebugData.init(from:)(a1, a2);
}

uint64_t sub_1C09FAA84(void *a1)
{
  return LiveActivityWebEmbedDatastore.DebugData.encode(to:)(a1);
}

uint64_t sub_1C09FAA9C(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = swift_bridgeObjectRetain();
      char v4 = sub_1C00DEE68(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4) {
        return 1;
      }
    }
  }
  else if (!v2)
  {
    return 1;
  }
  return 0;
}

uint64_t LiveActivityWebEmbedDatastore.liveActivities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LiveActivityWebEmbedDatastore.debug.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1BFEF95A8(v2);
}

uint64_t LiveActivityWebEmbedDatastore.init(liveActivities:debug:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a2;
  *a3 = result;
  a3[1] = v3;
  return result;
}

uint64_t static LiveActivityWebEmbedDatastore.empty.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB88D6B0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EB88D6A8;
  *a1 = qword_1EB88D6A0;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return sub_1BFEF95A8(v2);
}

uint64_t sub_1C09FABAC()
{
  if (*v0) {
    return 0x6775626564;
  }
  else {
    return 0x697463416576696CLL;
  }
}

uint64_t sub_1C09FABF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C09FE284(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C09FAC18(uint64_t a1)
{
  unint64_t v2 = sub_1C09FC1C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09FAC54(uint64_t a1)
{
  unint64_t v2 = sub_1C09FC1C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LiveActivityWebEmbedDatastore.encode(to:)(void *a1)
{
  sub_1C09FC270(0, &qword_1EB8635D8, (uint64_t (*)(void))sub_1C09FC1C8, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *v1;
  uint64_t v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09FC1C8();
  sub_1C1520F0C();
  uint64_t v15 = v8;
  char v14 = 0;
  sub_1BFEE9EC8(0, &qword_1EB863348, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, MEMORY[0x1E4FBB320]);
  sub_1C09FC2D8(&qword_1EB863350, &qword_1EB863078);
  uint64_t v9 = v13;
  sub_1C152080C();
  if (!v9)
  {
    uint64_t v15 = v12;
    char v14 = 1;
    sub_1C09FC21C();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LiveActivityWebEmbedDatastore.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v14 = a2;
  sub_1C09FC270(0, &qword_1EA1A22F0, (uint64_t (*)(void))sub_1C09FC1C8, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09FC1C8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v14;
  sub_1BFEE9EC8(0, &qword_1EB863348, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, MEMORY[0x1E4FBB320]);
  char v15 = 0;
  sub_1C09FC2D8(&qword_1EA1A22F8, &qword_1EA1A2300);
  sub_1C15206EC();
  uint64_t v11 = v16;
  char v15 = 1;
  sub_1C09FC398();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v12 = v16;
  swift_bridgeObjectRetain();
  sub_1BFEF95A8(v12);
  swift_bridgeObjectRelease();
  *uint64_t v10 = v11;
  v10[1] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BFEF9514(v12);
}

uint64_t sub_1C09FB1B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LiveActivityWebEmbedDatastore.init(from:)(a1, a2);
}

uint64_t sub_1C09FB1CC(void *a1)
{
  return LiveActivityWebEmbedDatastore.encode(to:)(a1);
}

id sub_1C09FB1E8(uint64_t *a1)
{
  uint64_t v2 = sub_1C15198DC();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v24 - v4;
  uint64_t v6 = sub_1C151E68C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1C15152FC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  sub_1C151536C();
  swift_allocObject();
  sub_1C151535C();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F26D10], v7);
  sub_1C151530C();
  uint64_t v27 = v11;
  uint64_t v28 = v12;
  sub_1C09FE394();
  uint64_t v13 = sub_1C151533C();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  sub_1BFEF9514(v12);
  sub_1C151E67C();
  sub_1C151E64C();
  if (v16)
  {
    id v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v18 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v17, sel_initWithJSONString_, v18);
    sub_1BFE95664(v13, v15);

    swift_release();
  }
  else
  {
    sub_1C151988C();
    uint64_t v21 = sub_1C15198AC();
    os_log_type_t v22 = sub_1C151F36C();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1BFC31000, v21, v22, "Unable to create string from JSON data.", v23, 2u);
      MEMORY[0x1C18C9B00](v23, -1, -1);
    }
    sub_1BFE95664(v13, v15);
    swift_release();

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
    return 0;
  }
  return v19;
}

uint64_t _s8NewsFeed29LiveActivityWebEmbedDatastoreV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1C00DEC78(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v2 == 1)
  {
    if (v3 == 1) {
      return 1;
    }
    goto LABEL_7;
  }
  if (v3 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_7:
    sub_1BFEF95A8(v3);
    sub_1BFEF9514(v2);
    sub_1BFEF9514(v3);
    return 0;
  }
  if (v2)
  {
    if (v3)
    {
      sub_1BFEF95A8(v2);
      sub_1BFEF95A8(v2);
      sub_1BFEF95A8(v3);
      uint64_t v5 = swift_bridgeObjectRetain();
      char v6 = sub_1C00DEE68(v5, v3);
      swift_bridgeObjectRelease();
      sub_1BFEF9514(v3);
      swift_bridgeObjectRelease();
      sub_1BFEF9514(v2);
      if (v6) {
        return 1;
      }
    }
    else
    {
      sub_1BFEF95A8(v2);
      swift_bridgeObjectRelease();
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

BOOL _s8NewsFeed29LiveActivityWebEmbedDatastoreV0cD0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = sub_1C151631C();
  uint64_t v65 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v58 = &v54[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFCD9524();
  uint64_t v64 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = &v54[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v54[-v8];
  sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v54[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v59 = &v54[-v14];
  MEMORY[0x1F4188790](v15);
  uint64_t v60 = &v54[-v16];
  MEMORY[0x1F4188790](v17);
  id v19 = &v54[-v18];
  MEMORY[0x1F4188790](v20);
  os_log_type_t v22 = &v54[-v21];
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = &v54[-v24];
  sub_1C151976C();
  sub_1C09FE43C(&qword_1EA1A2348, MEMORY[0x1E4F81D40]);
  uint64_t v66 = a1;
  sub_1C151EACC();
  sub_1C151EACC();
  if (v69 == v67 && v70 == v68)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v26 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v26 & 1) == 0) {
      return result;
    }
  }
  unint64_t v28 = 0xD000000000000012;
  uint64_t v29 = (int *)type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  uint64_t v30 = v29[5];
  int v31 = *(unsigned __int8 *)(v66 + v30);
  uint64_t v63 = a2;
  int v32 = *(unsigned __int8 *)(a2 + v30);
  unint64_t v33 = 0x80000001C1601CB0;
  if (v31)
  {
    if (v31 == 1)
    {
      unint64_t v34 = 0x6269726373627573;
      unint64_t v35 = 0xEA00000000006465;
      if (!v32) {
        goto LABEL_14;
      }
    }
    else
    {
      unint64_t v34 = 0xD000000000000014;
      unint64_t v35 = 0x80000001C1601CD0;
      if (!v32) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    unint64_t v34 = 0xD000000000000012;
    unint64_t v35 = 0x80000001C1601CB0;
    if (!v32)
    {
LABEL_14:
      if (v34 != v28) {
        goto LABEL_19;
      }
      goto LABEL_17;
    }
  }
  if (v32 == 1)
  {
    unint64_t v28 = 0x6269726373627573;
    unint64_t v33 = 0xEA00000000006465;
    goto LABEL_14;
  }
  unint64_t v33 = 0x80000001C1601CD0;
  if (v34 != 0xD000000000000014) {
    goto LABEL_19;
  }
LABEL_17:
  if (v35 == v33)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v36 = v63;
    goto LABEL_20;
  }
LABEL_19:
  char v37 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  uint64_t v36 = v63;
  if ((v37 & 1) == 0) {
    return result;
  }
LABEL_20:
  sub_1BFF97B80(v66 + v29[6], (uint64_t)v25);
  sub_1BFF97B80(v36 + v29[6], (uint64_t)v22);
  uint64_t v38 = (uint64_t)&v9[*(int *)(v64 + 48)];
  sub_1BFF97B80((uint64_t)v25, (uint64_t)v9);
  sub_1BFF97B80((uint64_t)v22, v38);
  char v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  uint64_t v40 = v62;
  if (v39((uint64_t)v9, 1, v62) == 1)
  {
    sub_1BFF97BE4((uint64_t)v22);
    sub_1BFF97BE4((uint64_t)v25);
    if (v39(v38, 1, v40) == 1)
    {
      uint64_t v41 = v40;
      sub_1BFF97BE4((uint64_t)v9);
      goto LABEL_26;
    }
LABEL_31:
    sub_1C09FC054((uint64_t)v9, (uint64_t (*)(void))sub_1BFCD9524);
    return 0;
  }
  sub_1BFF97B80((uint64_t)v9, (uint64_t)v19);
  if (v39(v38, 1, v40) == 1)
  {
    sub_1BFF97BE4((uint64_t)v22);
    sub_1BFF97BE4((uint64_t)v25);
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v19, v40);
    goto LABEL_31;
  }
  double v56 = v12;
  uint64_t v57 = v19;
  uint64_t v42 = v65;
  int v43 = v58;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 32))(v58, v38, v40);
  sub_1C09FE43C((unint64_t *)&qword_1EB871160, MEMORY[0x1E4F27928]);
  int v55 = sub_1C151E5CC();
  double v44 = *(void (**)(unsigned char *, uint64_t))(v42 + 8);
  uint64_t v45 = v43;
  uint64_t v12 = v56;
  v44(v45, v40);
  sub_1BFF97BE4((uint64_t)v22);
  sub_1BFF97BE4((uint64_t)v25);
  v44(v57, v40);
  sub_1BFF97BE4((uint64_t)v9);
  uint64_t v41 = v40;
  if (v55)
  {
LABEL_26:
    uint64_t v46 = v60;
    sub_1BFF97B80(v66 + v29[7], (uint64_t)v60);
    uint64_t v47 = v59;
    sub_1BFF97B80(v63 + v29[7], (uint64_t)v59);
    uint64_t v9 = v61;
    uint64_t v48 = (uint64_t)&v61[*(int *)(v64 + 48)];
    sub_1BFF97B80((uint64_t)v46, (uint64_t)v61);
    sub_1BFF97B80((uint64_t)v47, v48);
    if (v39((uint64_t)v9, 1, v41) == 1)
    {
      sub_1BFF97BE4((uint64_t)v47);
      sub_1BFF97BE4((uint64_t)v46);
      if (v39(v48, 1, v41) == 1)
      {
        sub_1BFF97BE4((uint64_t)v9);
        return 1;
      }
    }
    else
    {
      sub_1BFF97B80((uint64_t)v9, (uint64_t)v12);
      if (v39(v48, 1, v41) != 1)
      {
        uint64_t v49 = v12;
        uint64_t v50 = v65;
        int v51 = v58;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 32))(v58, v48, v41);
        sub_1C09FE43C((unint64_t *)&qword_1EB871160, MEMORY[0x1E4F27928]);
        char v52 = sub_1C151E5CC();
        uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v50 + 8);
        v53(v51, v41);
        sub_1BFF97BE4((uint64_t)v47);
        sub_1BFF97BE4((uint64_t)v46);
        v53(v49, v41);
        sub_1BFF97BE4((uint64_t)v9);
        return (v52 & 1) != 0;
      }
      sub_1BFF97BE4((uint64_t)v47);
      sub_1BFF97BE4((uint64_t)v46);
      (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v12, v41);
    }
    goto LABEL_31;
  }
  return 0;
}

unint64_t sub_1C09FBEF4()
{
  unint64_t result = qword_1EA1A22B8;
  if (!qword_1EA1A22B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A22B8);
  }
  return result;
}

unint64_t sub_1C09FBF48()
{
  unint64_t result = qword_1EA1A22C0;
  if (!qword_1EA1A22C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A22C0);
  }
  return result;
}

unint64_t sub_1C09FBF9C()
{
  unint64_t result = qword_1EA1A22D8;
  if (!qword_1EA1A22D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A22D8);
  }
  return result;
}

uint64_t sub_1C09FBFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09FC054(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C09FC0B4()
{
  unint64_t result = qword_1EB8630B0;
  if (!qword_1EB8630B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630B0);
  }
  return result;
}

uint64_t sub_1C09FC108(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEE9EC8(255, &qword_1EB8632A8, MEMORY[0x1E4F81D40], MEMORY[0x1E4FBB320]);
    sub_1C09FE43C(a2, MEMORY[0x1E4F81D40]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09FC1C8()
{
  unint64_t result = qword_1EB863090;
  if (!qword_1EB863090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863090);
  }
  return result;
}

unint64_t sub_1C09FC21C()
{
  unint64_t result = qword_1EB8630C0;
  if (!qword_1EB8630C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630C0);
  }
  return result;
}

void sub_1C09FC270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C09FC2D8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEE9EC8(255, &qword_1EB863348, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, MEMORY[0x1E4FBB320]);
    sub_1C09FE43C(a2, (void (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09FC398()
{
  unint64_t result = qword_1EA1A2308;
  if (!qword_1EA1A2308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2308);
  }
  return result;
}

unint64_t sub_1C09FC3F0()
{
  unint64_t result = qword_1EA1A2310;
  if (!qword_1EA1A2310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2310);
  }
  return result;
}

uint64_t destroy for LiveActivityWebEmbedDatastore(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 8);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s8NewsFeed29LiveActivityWebEmbedDatastoreVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v3 != 1) {
    swift_bridgeObjectRetain();
  }
  a1[1] = v3;
  return a1;
}

void *assignWithCopy for LiveActivityWebEmbedDatastore(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 1;
  uint64_t v5 = a2[1];
  if (a1[1] == 1)
  {
    if (v5 != 1)
    {
      *uint64_t v4 = v5;
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v6 = 1;
  }
  else
  {
    if (v5 != 1)
    {
      *uint64_t v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BFCA59C8((uint64_t)(a1 + 1));
    uint64_t v6 = a2[1];
  }
  *uint64_t v4 = v6;
  return a1;
}

void *assignWithTake for LiveActivityWebEmbedDatastore(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 1;
  uint64_t v5 = a2[1];
  if (a1[1] != 1)
  {
    if (v5 != 1)
    {
      *uint64_t v4 = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BFCA59C8((uint64_t)(a1 + 1));
    uint64_t v5 = 1;
  }
  *uint64_t v4 = v5;
  return a1;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore()
{
  return &type metadata for LiveActivityWebEmbedDatastore;
}

unsigned char *storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.SubscriptionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09FC6DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.SubscriptionState()
{
  return &type metadata for LiveActivityWebEmbedDatastore.SubscriptionState;
}

void *initializeBufferWithCopyOfBuffer for LiveActivityWebEmbedDatastore.LiveActivity(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151976C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13(v18, 1, v11))
    {
      sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151976C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1C151631C();
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v6);
  if (!result)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v6);
  }
  return result;
}

uint64_t initializeWithCopy for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151976C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151976C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151976C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151976C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C09FD618);
}

uint64_t sub_1C09FD618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151976C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 253)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C09FD780);
}

uint64_t sub_1C09FD780(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151976C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 253)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  else
  {
    sub_1BFEE9EC8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1C09FD8D8()
{
  sub_1C151976C();
  if (v0 <= 0x3F)
  {
    sub_1BFEE9EC8(319, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *assignWithCopy for LiveActivityWebEmbedDatastore.DebugData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LiveActivityWebEmbedDatastore.DebugData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.DebugData()
{
  return &type metadata for LiveActivityWebEmbedDatastore.DebugData;
}

unsigned char *storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09FDB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.CodingKeys()
{
  return &type metadata for LiveActivityWebEmbedDatastore.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.DebugData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C09FDBF8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.DebugData.CodingKeys()
{
  return &type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09FDCFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys()
{
  return &type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys;
}

unint64_t sub_1C09FDD38()
{
  unint64_t result = qword_1EA1A2318;
  if (!qword_1EA1A2318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2318);
  }
  return result;
}

unint64_t sub_1C09FDD90()
{
  unint64_t result = qword_1EA1A2320;
  if (!qword_1EA1A2320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2320);
  }
  return result;
}

unint64_t sub_1C09FDDE8()
{
  unint64_t result = qword_1EA1A2328;
  if (!qword_1EA1A2328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2328);
  }
  return result;
}

unint64_t sub_1C09FDE40()
{
  unint64_t result = qword_1EB8630A0;
  if (!qword_1EB8630A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630A0);
  }
  return result;
}

unint64_t sub_1C09FDE98()
{
  unint64_t result = qword_1EB863098;
  if (!qword_1EB863098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863098);
  }
  return result;
}

unint64_t sub_1C09FDEF0()
{
  unint64_t result = qword_1EB8630A8;
  if (!qword_1EB8630A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630A8);
  }
  return result;
}

unint64_t sub_1C09FDF48()
{
  unint64_t result = qword_1EB8630B8;
  if (!qword_1EB8630B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630B8);
  }
  return result;
}

unint64_t sub_1C09FDFA0()
{
  unint64_t result = qword_1EA1A2330;
  if (!qword_1EA1A2330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2330);
  }
  return result;
}

unint64_t sub_1C09FDFF8()
{
  unint64_t result = qword_1EA1A2338;
  if (!qword_1EA1A2338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2338);
  }
  return result;
}

uint64_t sub_1C09FE04C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xEC0000006E6F6974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1617EC0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1617EE0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C09FE1FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001C1617F00)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1C09FE284(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463416576696CLL && a2 == 0xEE00736569746976;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6775626564 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C09FE394()
{
  unint64_t result = qword_1EB8630C8;
  if (!qword_1EB8630C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630C8);
  }
  return result;
}

unint64_t sub_1C09FE3E8()
{
  unint64_t result = qword_1EA1A2340;
  if (!qword_1EA1A2340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2340);
  }
  return result;
}

uint64_t sub_1C09FE43C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void PuzzleStatistic.traits.getter(void *a1@<X8>)
{
  *a1 = qword_1F1B89858;
}

id sub_1C09FE498(uint64_t a1, id a2, uint64_t a3, uint64_t a4, char a5)
{
  id v7 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  Class v8 = FormatColor.color.getter((uint64_t)v7);
  id v9 = [(objc_class *)v8 resolvedColorWithTraitCollection:a1];

  if (a5) {
    objc_msgSend(v9, sel_alphaComponent);
  }
  else {
    id v10 = v9;
  }
  uint64_t v11 = sub_1C151FA2C();

  if (v11)
  {

    return (id)v11;
  }
  else
  {
  }
  return v7;
}

uint64_t _s8NewsFeed25FormatColorBlendProcessorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  double v3 = *(double *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  double v5 = *(double *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  unint64_t v9 = *(void *)a2;
  uint64_t v10 = v2;
  if ((static FormatColor.== infix(_:_:)(&v10, &v9) & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v3 == v5) {
      char v8 = v6;
    }
    else {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_1C09FE60C(uint64_t a1)
{
  unint64_t result = sub_1C09FE634();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09FE634()
{
  unint64_t result = qword_1EA1A2350;
  if (!qword_1EA1A2350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2350);
  }
  return result;
}

unint64_t sub_1C09FE688(void *a1)
{
  a1[1] = sub_1BFDF6C84();
  a1[2] = sub_1BFDAFC3C();
  unint64_t result = sub_1C09FE6C0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09FE6C0()
{
  unint64_t result = qword_1EA1A2358;
  if (!qword_1EA1A2358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2358);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatColorBlendProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatColorBlendProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for FormatColorBlendProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorBlendProcessor()
{
  return &type metadata for FormatColorBlendProcessor;
}

void sub_1C09FE810(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)v1;
  unsigned int v4 = *(unsigned __int8 *)(v1 + 8);
  if (!(v4 >> 6))
  {
    char v15 = *(void *)v1;
    uint64_t ObjectType = swift_getObjectType();
    sub_1BFFDCA34(v2, (void (*)(uint64_t))sub_1C01B4D28, 0, &v15, ObjectType);
    return;
  }
  if (v4 >> 6 == 1)
  {
    id v5 = objc_msgSend(*(id *)(a1 + 16), sel_eventLeagueTag);
    char v16 = v3;
    uint64_t v6 = swift_getObjectType();
    id v7 = &v16;
LABEL_13:
    sub_1BFFDCA34(v5, (void (*)(uint64_t))sub_1C01B4D28, 0, v7, v6);
    swift_unknownObjectRelease();
    return;
  }
  id v9 = objc_msgSend(*(id *)(a1 + 16), sel_eventCompetitorTags);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1C017E704();
    unint64_t v11 = sub_1C151EBCC();

    if (!(v11 >> 62)) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v3 < v12) {
      goto LABEL_8;
    }
LABEL_16:
    type metadata accessor for FormatLayoutError();
    sub_1C09FFA2C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t *v14 = v12;
    v14[1] = v3;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  unint64_t v11 = MEMORY[0x1E4FBC860];
  if (MEMORY[0x1E4FBC860] >> 62) {
    goto LABEL_15;
  }
LABEL_7:
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3 >= v12) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x1C18C7CB0](v3, v11);
    goto LABEL_12;
  }
  if (v3 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v3 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v11 + 8 * v3 + 32);
    swift_unknownObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    char v17 = v4 & 0x3F;
    uint64_t v6 = swift_getObjectType();
    id v7 = &v17;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1C09FEAA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09FF92C();
  *a1 = result;
  return result;
}

uint64_t sub_1C09FEAD8()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09FEB38()
{
  return sub_1C151EAEC();
}

void sub_1C09FEB88(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B820;
}

uint64_t sub_1C09FEB98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1C09FEBB0(void *a1)
{
  return FormatSportsEventBinding.Text.encode(to:)(a1);
}

uint64_t sub_1C09FEBC8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (!*a1)
  {
    sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    uint64_t v23 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v8 = swift_allocObject();
    long long v42 = xmmword_1C1529AE0;
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    uint64_t v46 = (void *)(v8 + v24);
    uint64_t v25 = *(void **)(a2 + 16);
    swift_getObjectType();
    id v26 = objc_msgSend(v25, sel_displayName);
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v27;

    sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v42;
    sub_1C1117BF4((uint64_t)v25, (uint64_t)&v43);
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(inited + 64) = &off_1F1BDEC90;
    uint64_t v29 = swift_allocObject();
    *(void *)(inited + 32) = v29;
    *(void *)(v29 + 48) = v45;
    long long v30 = v44;
    *(_OWORD *)(v29 + 16) = v43;
    *(_OWORD *)(v29 + 32) = v30;
    uint64_t v31 = sub_1C0233FC8(inited);
    swift_setDeallocating();
    sub_1C01004D8();
    swift_arrayDestroy();
    int v19 = sub_1C131B79C(v31);
    swift_bridgeObjectRelease();
    int v20 = v46;
    uint64_t v21 = 0x746E657645;
    uint64_t v22 = 0xE500000000000000;
    goto LABEL_5;
  }
  if (*a1 != 1)
  {
    id v34 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags);
    if (v34)
    {
      unint64_t v35 = v34;
      sub_1C017E704();
      unint64_t v36 = sub_1C151EBCC();

      if (v36 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1C15204BC();
        uint64_t v37 = swift_bridgeObjectRelease();
        if (v38) {
          goto LABEL_9;
        }
      }
      else if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        MEMORY[0x1F4188790](v37);
        long long v41[2] = a3;
        uint64_t v8 = sub_1C09FF708(v36, (void (*)(unint64_t, uint64_t))sub_1C09FF978, (uint64_t)v41);
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    uint64_t v39 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
    unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    long long v43 = 0u;
    long long v44 = 0u;
    uint64_t result = sub_1C042FB5C(0x74697465706D6F43, 0xEA0000000000726FLL, (uint64_t)&v43, (uint64_t *)(v8 + v40));
    goto LABEL_13;
  }
  sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  uint64_t v6 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  long long v42 = xmmword_1C1529AE0;
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  uint64_t v46 = (void *)(v8 + v7);
  id v9 = *(void **)(a2 + 16);
  id v10 = objc_msgSend(objc_msgSend(v9, sel_eventLeagueTag), sel_displayName);
  swift_unknownObjectRelease();
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v42;
  id v15 = objc_msgSend(v9, sel_eventLeagueTag);
  swift_getObjectType();
  sub_1C1117BF4((uint64_t)v15, (uint64_t)&v43);
  swift_unknownObjectRelease();
  *(void *)(v14 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v14 + 64) = &off_1F1BDEC90;
  uint64_t v16 = swift_allocObject();
  *(void *)(v14 + 32) = v16;
  *(void *)(v16 + 48) = v45;
  long long v17 = v44;
  *(_OWORD *)(v16 + 16) = v43;
  *(_OWORD *)(v16 + 32) = v17;
  uint64_t v18 = sub_1C0233FC8(v14);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  int v19 = sub_1C131B79C(v18);
  swift_bridgeObjectRelease();
  int v20 = v46;
  uint64_t v21 = 0x65756761654CLL;
  uint64_t v22 = 0xE600000000000000;
LABEL_5:
  uint64_t result = sub_1C042F458(v21, v22, (uint64_t)v19, v11, v13, v20);
LABEL_13:
  *a4 = v8;
  return result;
}

uint64_t sub_1C09FF1D4@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  strcpy((char *)v15, "Competitor [");
  BYTE13(v15[0]) = 0;
  HIWORD(v15[0]) = -5120;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  long long v4 = v15[0];
  swift_getObjectType();
  id v5 = objc_msgSend(a1, sel_displayName);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C1117BF4((uint64_t)a1, (uint64_t)v15);
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v10 = swift_allocObject();
  *(void *)(inited + 32) = v10;
  *(void *)(v10 + 48) = v16;
  long long v11 = v15[1];
  *(_OWORD *)(v10 + 16) = v15[0];
  *(_OWORD *)(v10 + 32) = v11;
  uint64_t v12 = sub_1C0233FC8(inited);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  uint64_t v13 = sub_1C131B79C(v12);
  swift_bridgeObjectRelease();
  return sub_1C042F458(v4, *((uint64_t *)&v4 + 1), (uint64_t)v13, v6, v8, a2);
}

unint64_t sub_1C09FF3A0(uint64_t a1)
{
  unint64_t result = sub_1C09FF3C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09FF3C8()
{
  unint64_t result = qword_1EA1A2360;
  if (!qword_1EA1A2360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2360);
  }
  return result;
}

unint64_t sub_1C09FF41C(void *a1)
{
  a1[1] = sub_1C08653E8();
  a1[2] = sub_1C0905A38();
  unint64_t result = sub_1C09FF454();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09FF454()
{
  unint64_t result = qword_1EA1A2378;
  if (!qword_1EA1A2378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2378);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Text()
{
  return &type metadata for FormatSportsEventBinding.Text;
}

unsigned char *_s4TextO10CodingTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C09FF584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4TextO10CodingTypeOMa()
{
  return &_s4TextO10CodingTypeON;
}

uint64_t sub_1C09FF5BC()
{
  return sub_1C09FFA2C(&qword_1EA1A2380, (void (*)(uint64_t))sub_1C09FF604);
}

void sub_1C09FF604()
{
  if (!qword_1EA1A2388)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2388);
    }
  }
}

unint64_t sub_1C09FF660()
{
  unint64_t result = qword_1EA1A2390;
  if (!qword_1EA1A2390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2390);
  }
  return result;
}

unint64_t sub_1C09FF6B4()
{
  unint64_t result = qword_1EA1A2398;
  if (!qword_1EA1A2398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2398);
  }
  return result;
}

uint64_t sub_1C09FF708(unint64_t a1, void (*a2)(unint64_t, uint64_t), uint64_t a3)
{
  int v19 = a2;
  uint64_t v20 = a3;
  uint64_t v4 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1C05F6874(0, 0, 0);
  uint64_t v7 = v21;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v8)
  {
    while (1)
    {
      unint64_t v9 = 0;
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = a1 & 0xC000000000000001;
      while (v17)
      {
        uint64_t v10 = MEMORY[0x1C18C7CB0](v9, a1);
        unint64_t v11 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        v19(v9, v10);
        swift_unknownObjectRelease();
        uint64_t v21 = v7;
        unint64_t v13 = *(void *)(v7 + 16);
        unint64_t v12 = *(void *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1C05F6874(v12 > 1, v13 + 1, 1);
          uint64_t v7 = v21;
        }
        *(void *)(v7 + 16) = v13 + 1;
        sub_1C09FF9C8((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v13);
        ++v9;
        if (v11 == v8) {
          goto LABEL_17;
        }
      }
      if (v9 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C15204BC();
      if (!v8) {
        goto LABEL_17;
      }
    }
    uint64_t v10 = *(void *)(a1 + 8 * v9 + 32);
    swift_unknownObjectRetain();
    unint64_t v11 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C09FF92C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C09FF978@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  return sub_1C09FF1D4(a1, a2);
}

uint64_t sub_1C09FF980()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09FF9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09FFA2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static VideoDurationFormatter.string(duration:)(double a1)
{
  if (a1 <= 0.0) {
    return 0;
  }
  if (a1 >= 60.0)
  {
    if (qword_1EA194838 != -1) {
      swift_once();
    }
    int v3 = (void *)qword_1EA1A23A0;
    objc_msgSend((id)qword_1EA1A23A0, sel_setAllowedUnits_, 224);
    objc_msgSend(v3, sel_setZeroFormattingBehavior_, 1);
  }
  else
  {
    if (qword_1EA194838 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EA1A23A0;
    objc_msgSend((id)qword_1EA1A23A0, sel_setAllowedUnits_, 192);
    objc_msgSend(v2, sel_setZeroFormattingBehavior_, 8);
  }
  if (qword_1EA194838 != -1) {
    swift_once();
  }
  id v4 = objc_msgSend((id)qword_1EA1A23A0, sel_stringFromTimeInterval_, a1);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C151E62C();

  return v6;
}

id sub_1C09FFBE4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
  id result = objc_msgSend(v0, sel_setUnitsStyle_, 0);
  qword_1EA1A23A0 = (uint64_t)v0;
  return result;
}

uint64_t VideoDurationFormatter.deinit()
{
  return v0;
}

uint64_t VideoDurationFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VideoDurationFormatter()
{
  return self;
}

uint64_t method lookup function for VideoDurationFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VideoDurationFormatter);
}

uint64_t sub_1C09FFC88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v81 = a4;
  uint64_t v82 = a3;
  uint64_t v83 = a1;
  uint64_t v78 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for FormatDerivedDataWarningError();
  v73[2] = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v85 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1F4188790](v86);
  uint64_t v87 = (uint64_t)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v88 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  v73[5] = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v76 = (char *)v73 - v11;
  MEMORY[0x1F4188790](v12);
  v73[4] = (char *)v73 - v13;
  MEMORY[0x1F4188790](v14);
  v73[3] = (char *)v73 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v74 = (uint64_t)v73 - v17;
  MEMORY[0x1F4188790](v18);
  double v75 = (void *)((char *)v73 - v19);
  sub_1C0A02420(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v94 = (char *)v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v95 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v97 = (uint64_t)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v96 = (uint64_t)v73 - v24;
  uint64_t v98 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v25 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v93 = (char *)v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v27 - 8);
  unint64_t v80 = (unint64_t)v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for FormatDerivedDataCompilerSettings();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v79 = (uint64_t)v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v32 = v31 - 8;
  MEMORY[0x1F4188790](v31);
  id v34 = (char *)v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = a2;
  uint64_t v89 = *(void *)(a2 + 16);
  sub_1C0A02454(v89 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, (uint64_t)v34, type metadata accessor for FormatCompilerOptions);
  uint64_t v35 = *(void *)&v34[*(int *)(v32 + 40)];
  swift_bridgeObjectRetain();
  sub_1C0A024BC((uint64_t)v34, type metadata accessor for FormatCompilerOptions);
  if (*(void *)(v35 + 16))
  {
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t v36 = sub_1C1520E0C();
    uint64_t v37 = -1 << *(unsigned char *)(v35 + 32);
    unint64_t v38 = v36 & ~v37;
    if ((*(void *)(v35 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
    {
      uint64_t v39 = ~v37;
      while (!*(unsigned char *)(*(void *)(v35 + 48) + v38) || *(unsigned char *)(*(void *)(v35 + 48) + v38) == 1)
      {
        char v40 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_30;
        }
        unint64_t v38 = (v38 + 1) & v39;
        if (((*(void *)(v35 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v100 = (void *)MEMORY[0x1E4FBC860];
LABEL_31:
      sub_1C0A0251C(0, &qword_1EA1A23A8, (uint64_t (*)(uint64_t))sub_1C097D584, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      return sub_1C151908C();
    }
  }
LABEL_8:
  swift_bridgeObjectRelease();
  double v41 = CACurrentMediaTime();
  uint64_t v42 = *(void *)(v90 + 24);
  uint64_t v43 = *(void *)(v42 + 16);
  if (!v43)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = (void *)MEMORY[0x1E4FBC868];
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v66 = v79;
    sub_1C0A02454(v81, v79, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataCompilerSettings);
    type metadata accessor for FormatDerivedDataCompiler();
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = &unk_1F1B89860;
    *(void *)(v67 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_system) = v82;
    sub_1C0A025E4(v66, v67 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataCompilerSettings);
    swift_retain();
    unint64_t v57 = v80;
    uint64_t v68 = v89;
    sub_1C03AAF78(v89, v47, v83, v80);
    swift_bridgeObjectRelease();
    double v69 = (CACurrentMediaTime() - v41) * 1000.0;
    uint64_t v70 = v87;
    sub_1C0A02454(v57, v87, (uint64_t (*)(void))type metadata accessor for FormatFile);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    uint64_t v71 = sub_1C137F4A8(v57);
    char v52 = v75;
    sub_1C115E488(v68, v70, v71, v75, v69);
    uint64_t v44 = v74;
    sub_1C0A02454((uint64_t)v52, v74, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
    uint64_t v53 = sub_1C0EE6524(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v45 = *(void *)(v53 + 16);
    unint64_t v58 = *(void *)(v53 + 24);
    int v55 = (void *)(v45 + 1);
    if (v45 >= v58 >> 1) {
LABEL_34:
    }
      uint64_t v53 = sub_1C0EE6524(v58 > 1, (int64_t)v55, 1, v53);
    *(void *)(v53 + 16) = v55;
    sub_1C0A025E4(v44, v53+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v45, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
    swift_release();
    sub_1C0A024BC((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
    sub_1C0A024BC(v57, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v100 = (void *)v53;
    goto LABEL_31;
  }
  uint64_t v44 = v42 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  unint64_t v45 = v95 + 48;
  uint64_t v46 = *(void *)(v25 + 72);
  v73[1] = *(void *)(v90 + 24);
  swift_bridgeObjectRetain_n();
  uint64_t v47 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v49 = (uint64_t)v93;
  uint64_t v48 = (uint64_t)v94;
  unint64_t v92 = v45;
  uint64_t v91 = v46;
  while (1)
  {
    sub_1C0A02454(v44, v49, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    sub_1C0A02454(v49 + *(int *)(v98 + 24), v48, (uint64_t (*)(void))sub_1C0A02420);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v45)(v48, 1, v99) != 1) {
      break;
    }
    sub_1C0A024BC(v48, (uint64_t (*)(void))sub_1C0A02420);
LABEL_11:
    sub_1C0A024BC(v49, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    v44 += v46;
    if (!--v43)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  uint64_t v50 = v96;
  sub_1C0A025E4(v48, v96, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
  uint64_t v51 = *(void *)v50;
  char v52 = *(void **)(v50 + 8);
  uint64_t v53 = *(unsigned __int8 *)(v50 + 16);
  sub_1C0A02454(v50, v97, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
  sub_1C024FAC0(v51, (uint64_t)v52, v53);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v100 = v47;
  int v55 = v47;
  unint64_t v57 = sub_1C1052498(v51, (uint64_t)v52, v53);
  unint64_t v58 = v47[2];
  BOOL v59 = (v56 & 1) == 0;
  uint64_t v60 = v58 + v59;
  if (__OFADD__(v58, v59))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v45 = v56;
  if (v47[3] >= v60)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v47 = v100;
      if ((v56 & 1) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      int v55 = &v100;
      sub_1C10714E0();
      uint64_t v47 = v100;
      if ((v45 & 1) == 0) {
        goto LABEL_17;
      }
    }
    goto LABEL_21;
  }
  sub_1C105ECA8(v60, isUniquelyReferenced_nonNull_native);
  int v55 = v100;
  unint64_t v61 = sub_1C1052498(v51, (uint64_t)v52, v53);
  if ((v45 & 1) == (v62 & 1))
  {
    unint64_t v57 = v61;
    uint64_t v47 = v100;
    if ((v45 & 1) == 0)
    {
LABEL_17:
      v47[(v57 >> 6) + 8] |= 1 << v57;
      uint64_t v63 = v47[6] + 24 * v57;
      *(void *)uint64_t v63 = v51;
      *(void *)(v63 + 8) = v52;
      *(unsigned char *)(v63 + 16) = v53;
      sub_1C0A025E4(v97, v47[7] + *(void *)(v95 + 72) * v57, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      uint64_t v64 = v47[2];
      BOOL v65 = __OFADD__(v64, 1);
      unint64_t v58 = v64 + 1;
      if (v65) {
        goto LABEL_33;
      }
      v47[2] = v58;
      sub_1C024FAC0(v51, (uint64_t)v52, v53);
      goto LABEL_22;
    }
LABEL_21:
    sub_1C0A02580(v97, v47[7] + *(void *)(v95 + 72) * v57);
LABEL_22:
    swift_bridgeObjectRelease();
    sub_1C024F49C(v51, (uint64_t)v52, v53);
    sub_1C0A024BC(v96, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    uint64_t v49 = (uint64_t)v93;
    uint64_t v48 = (uint64_t)v94;
    unint64_t v45 = v92;
    uint64_t v46 = v91;
    goto LABEL_11;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0A00F1C(uint64_t a1, const char **a2)
{
  long long v129 = a2;
  sub_1C028A7B0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v123 = (char *)v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void *)((char *)v117 - v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void *)((char *)v117 - v13);
  uint64_t v124 = a1;
  uint64_t v15 = a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  uint64_t v120 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v121 = v15;
  uint64_t v126 = v15 + *(int *)(v120 + 24);
  sub_1C0A02454(v126, (uint64_t)v6, (uint64_t (*)(void))sub_1C028A7B0);
  long long v125 = v6;
  sub_1C0A025E4((uint64_t)v6, (uint64_t)v14, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v17 = *v14;
  uint64_t v16 = v14[1];
  sub_1BFD5A4A4(*v14, v16);
  sub_1C0A024BC((uint64_t)v14, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v122 = v2;
  if (v16 == 1)
  {
    uint64_t v127 = (const char *)MEMORY[0x1E4FBC868];
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v17, v16);
    uint64_t v18 = (const char *)MEMORY[0x1E4FBC868];
    if (v16)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v128 = v18;
      sub_1C1065BB8(24945, 0xE200000000000000, v17, v16, isUniquelyReferenced_nonNull_native);
      uint64_t v127 = v128;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v127 = (const char *)MEMORY[0x1E4FBC868];
    }
  }
  uint64_t v21 = v125;
  uint64_t v20 = v126;
  sub_1C0A02454(v126, (uint64_t)v125, (uint64_t (*)(void))sub_1C028A7B0);
  sub_1C0A025E4((uint64_t)v21, (uint64_t)v11, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v22 = *v11;
  uint64_t v23 = v11[1];
  uint64_t v25 = v11[2];
  uint64_t v24 = v11[3];
  sub_1BFD5A4A4(*v11, v23);
  sub_1C0A024BC((uint64_t)v11, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v23 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v22, v23);
    if (v24)
    {
      uint64_t v26 = v127;
      if (*((void *)v127 + 2))
      {
        swift_bridgeObjectRetain();
        sub_1BFEF2D8C(v25, v24);
        char v28 = v27;
        swift_bridgeObjectRelease();
        if (v28)
        {
          uint64_t v29 = *(void *)(v121 + *(int *)(v120 + 32));
          if (*(void *)(v29 + 16))
          {
            uint64_t v118 = v25;
            sub_1C1520DBC();
            swift_bridgeObjectRetain();
            v117[1] = "ignoreUnusedProperty";
            sub_1C151E77C();
            uint64_t v30 = sub_1C1520E0C();
            uint64_t v31 = -1 << *(unsigned char *)(v29 + 32);
            unint64_t v32 = v30 & ~v31;
            if ((*(void *)(v29 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32))
            {
              uint64_t v33 = ~v31;
              unint64_t v119 = 0xD000000000000014;
              while (!*(unsigned char *)(*(void *)(v29 + 48) + v32) || *(unsigned char *)(*(void *)(v29 + 48) + v32) == 2)
              {
                char v34 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                if (v34) {
                  goto LABEL_20;
                }
                unint64_t v32 = (v32 + 1) & v33;
                if (((*(void *)(v29 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
                  goto LABEL_17;
                }
              }
              swift_bridgeObjectRelease();
LABEL_20:
              swift_bridgeObjectRelease();
              uint64_t v26 = v127;
              uint64_t v21 = v125;
              uint64_t v25 = v118;
              goto LABEL_21;
            }
LABEL_17:
            swift_bridgeObjectRelease();
            uint64_t v25 = v118;
          }
          type metadata accessor for FormatDerivedDataError();
          sub_1C0A0264C((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
          swift_allocError();
          uint64_t v35 = *(void *)(v124 + 16);
          uint64_t v36 = *(void *)(v124 + 24);
          uint64_t *v37 = v25;
          v37[1] = v24;
          v37[2] = 0x676E6967617473;
          v37[3] = 0xE700000000000000;
          v37[4] = v35;
          v37[5] = v36;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          return swift_bridgeObjectRelease();
        }
      }
LABEL_21:
      char v38 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v128 = v26;
      sub_1C1065BB8(0x676E6967617473, 0xE700000000000000, v25, v24, v38);
      uint64_t v127 = v128;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v126;
    }
  }
  sub_1C0A02454(v20, (uint64_t)v21, (uint64_t (*)(void))sub_1C028A7B0);
  uint64_t v39 = (uint64_t *)v123;
  sub_1C0A025E4((uint64_t)v21, (uint64_t)v123, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v40 = *v39;
  uint64_t v41 = v39[1];
  uint64_t v43 = v39[4];
  uint64_t v42 = v39[5];
  sub_1BFD5A4A4(*v39, v41);
  sub_1C0A024BC((uint64_t)v39, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v41 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v40, v41);
    if (v42)
    {
      uint64_t v44 = v127;
      if (*((void *)v127 + 2))
      {
        swift_bridgeObjectRetain();
        sub_1BFEF2D8C(v43, v42);
        char v46 = v45;
        swift_bridgeObjectRelease();
        if (v46)
        {
          uint64_t v47 = *(void *)(v121 + *(int *)(v120 + 32));
          if (*(void *)(v47 + 16))
          {
            sub_1C1520DBC();
            swift_bridgeObjectRetain();
            uint64_t v123 = "ignoreUnusedProperty";
            sub_1C151E77C();
            uint64_t v48 = sub_1C1520E0C();
            uint64_t v49 = -1 << *(unsigned char *)(v47 + 32);
            unint64_t v50 = v48 & ~v49;
            if ((*(void *)(v47 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50))
            {
              uint64_t v51 = ~v49;
              long long v125 = "isolatedThunderstormsNight";
              uint64_t v126 = 0xD000000000000014;
              while (!*(unsigned char *)(*(void *)(v47 + 48) + v50) || *(unsigned char *)(*(void *)(v47 + 48) + v50) == 2)
              {
                char v52 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                if (v52) {
                  goto LABEL_37;
                }
                unint64_t v50 = (v50 + 1) & v51;
                if (((*(void *)(v47 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50) & 1) == 0) {
                  goto LABEL_33;
                }
              }
              swift_bridgeObjectRelease();
LABEL_37:
              swift_bridgeObjectRelease();
              uint64_t v44 = v127;
              goto LABEL_38;
            }
LABEL_33:
            swift_bridgeObjectRelease();
          }
          type metadata accessor for FormatDerivedDataError();
          sub_1C0A0264C((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
          swift_allocError();
          uint64_t v53 = *(void *)(v124 + 16);
          uint64_t v54 = *(void *)(v124 + 24);
          uint64_t *v55 = v43;
          v55[1] = v42;
          long long v55[2] = 0x69746375646F7270;
          v55[3] = 0xEA00000000006E6FLL;
          v55[4] = v53;
          v55[5] = v54;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          return swift_bridgeObjectRelease();
        }
      }
LABEL_38:
      char v57 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v128 = v44;
      sub_1C1065BB8(0x69746375646F7270, 0xEA00000000006E6FLL, v43, v42, v57);
      unint64_t v56 = v128;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
  }
  unint64_t v56 = v127;
LABEL_39:
  uint64_t v58 = *((void *)v56 + 8);
  long long v125 = v56 + 64;
  uint64_t v59 = 1 << v56[32];
  uint64_t v60 = -1;
  if (v59 < 64) {
    uint64_t v60 = ~(-1 << v59);
  }
  unint64_t v61 = v60 & v58;
  int64_t v62 = (unint64_t)(v59 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v63 = 0;
  while (1)
  {
    do
    {
      if (v61)
      {
        unint64_t v64 = __clz(__rbit64(v61));
        v61 &= v61 - 1;
        unint64_t v65 = v64 | (v63 << 6);
        goto LABEL_58;
      }
      int64_t v66 = v63 + 1;
      if (__OFADD__(v63, 1))
      {
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      if (v66 >= v62) {
        goto LABEL_61;
      }
      unint64_t v67 = *(void *)&v125[8 * v66];
      ++v63;
      if (v67) {
        goto LABEL_57;
      }
      int64_t v63 = v66 + 1;
      if (v66 + 1 >= v62) {
        goto LABEL_61;
      }
      unint64_t v67 = *(void *)&v125[8 * v63];
      if (v67) {
        goto LABEL_57;
      }
      int64_t v63 = v66 + 2;
      if (v66 + 2 >= v62) {
        goto LABEL_61;
      }
      unint64_t v67 = *(void *)&v125[8 * v63];
      if (v67) {
        goto LABEL_57;
      }
      int64_t v68 = v66 + 3;
      if (v68 >= v62)
      {
LABEL_61:
        swift_release();
        uint64_t v79 = 1 << v56[32];
        uint64_t v80 = -1;
        if (v79 < 64) {
          uint64_t v80 = ~(-1 << v79);
        }
        unint64_t v81 = v80 & *((void *)v56 + 8);
        uint64_t v123 = (const char *)((unint64_t)(v79 + 63) >> 6);
        swift_bridgeObjectRetain();
        uint64_t v82 = 0;
        while (2)
        {
          if (v81)
          {
            uint64_t v126 = (v81 - 1) & v81;
            uint64_t v127 = v82;
            unint64_t v84 = __clz(__rbit64(v81)) | ((void)v82 << 6);
          }
          else
          {
            uint64_t v85 = v82 + 1;
            if (__OFADD__(v82, 1)) {
              goto LABEL_99;
            }
            if ((uint64_t)v85 >= (uint64_t)v123) {
              goto LABEL_94;
            }
            unint64_t v86 = *(void *)&v125[8 * (void)v85];
            uint64_t v87 = v82 + 1;
            if (!v86)
            {
              uint64_t v87 = v82 + 2;
              if ((uint64_t)(v82 + 2) >= (uint64_t)v123) {
                goto LABEL_94;
              }
              unint64_t v86 = *(void *)&v125[8 * (void)v87];
              if (!v86)
              {
                uint64_t v87 = v82 + 3;
                if ((uint64_t)(v82 + 3) >= (uint64_t)v123) {
                  goto LABEL_94;
                }
                unint64_t v86 = *(void *)&v125[8 * (void)v87];
                if (!v86)
                {
                  uint64_t v88 = v82 + 4;
                  if ((uint64_t)(v82 + 4) >= (uint64_t)v123) {
                    goto LABEL_94;
                  }
                  unint64_t v86 = *(void *)&v125[8 * (void)v88];
                  if (!v86)
                  {
                    while (1)
                    {
                      uint64_t v87 = v88 + 1;
                      if (__OFADD__(v88, 1)) {
                        goto LABEL_101;
                      }
                      if ((uint64_t)v87 >= (uint64_t)v123) {
                        goto LABEL_94;
                      }
                      unint64_t v86 = *(void *)&v125[8 * (void)v87];
                      ++v88;
                      if (v86) {
                        goto LABEL_81;
                      }
                    }
                  }
                  uint64_t v87 = v82 + 4;
                }
              }
            }
LABEL_81:
            uint64_t v126 = (v86 - 1) & v86;
            uint64_t v127 = v87;
            unint64_t v84 = __clz(__rbit64(v86)) + ((void)v87 << 6);
          }
          uint64_t v89 = v56;
          uint64_t v90 = (uint64_t *)(*((void *)v56 + 6) + 16 * v84);
          uint64_t v92 = *v90;
          uint64_t v91 = v90[1];
          uint64_t v93 = *(void *)(v124 + 16);
          uint64_t v94 = *(void *)(v124 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v95 = v129;
          char v96 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v128 = *v95;
          uint64_t v97 = v128;
          char *v95 = (const char *)0x8000000000000000;
          unint64_t v99 = sub_1BFEF2D8C(v92, v91);
          uint64_t v100 = *((void *)v97 + 2);
          BOOL v101 = (v98 & 1) == 0;
          uint64_t v102 = v100 + v101;
          if (__OFADD__(v100, v101))
          {
            __break(1u);
LABEL_97:
            __break(1u);
            goto LABEL_98;
          }
          char v103 = v98;
          if (*((void *)v97 + 3) >= v102)
          {
            if (v96)
            {
              uint64_t v106 = v128;
              if ((v98 & 1) == 0) {
                goto LABEL_89;
              }
            }
            else
            {
              sub_1C106AFB0();
              uint64_t v106 = v128;
              if ((v103 & 1) == 0) {
                goto LABEL_89;
              }
            }
          }
          else
          {
            sub_1C105548C(v102, v96);
            unint64_t v104 = sub_1BFEF2D8C(v92, v91);
            if ((v103 & 1) != (v105 & 1)) {
              goto LABEL_102;
            }
            unint64_t v99 = v104;
            uint64_t v106 = v128;
            if ((v103 & 1) == 0)
            {
LABEL_89:
              *(void *)&v106[8 * (v99 >> 6) + 64] |= 1 << v99;
              uint64_t v107 = (uint64_t *)(*((void *)v106 + 6) + 16 * v99);
              *uint64_t v107 = v92;
              v107[1] = v91;
              uint64_t v108 = (void *)(*((void *)v106 + 7) + 16 * v99);
              *uint64_t v108 = v93;
              v108[1] = v94;
              uint64_t v109 = *((void *)v106 + 2);
              BOOL v110 = __OFADD__(v109, 1);
              uint64_t v111 = v109 + 1;
              if (v110) {
                goto LABEL_97;
              }
              *((void *)v106 + 2) = v111;
              swift_bridgeObjectRetain();
              goto LABEL_65;
            }
          }
          uint64_t v83 = (void *)(*((void *)v106 + 7) + 16 * v99);
          swift_bridgeObjectRelease();
          *uint64_t v83 = v93;
          v83[1] = v94;
LABEL_65:
          *long long v129 = v106;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v56 = v89;
          unint64_t v81 = v126;
          uint64_t v82 = v127;
          continue;
        }
      }
      unint64_t v67 = *(void *)&v125[8 * v68];
      if (!v67)
      {
        while (1)
        {
          int64_t v63 = v68 + 1;
          if (__OFADD__(v68, 1)) {
            goto LABEL_100;
          }
          if (v63 >= v62) {
            goto LABEL_61;
          }
          unint64_t v67 = *(void *)&v125[8 * v63];
          ++v68;
          if (v67) {
            goto LABEL_57;
          }
        }
      }
      int64_t v63 = v68;
LABEL_57:
      unint64_t v61 = (v67 - 1) & v67;
      unint64_t v65 = __clz(__rbit64(v67)) + (v63 << 6);
LABEL_58:
      double v69 = *v129;
    }
    while (!*((void *)*v129 + 2));
    uint64_t v70 = 16 * v65;
    uint64_t v71 = (uint64_t *)(*((void *)v56 + 6) + v70);
    uint64_t v72 = (uint64_t *)(*((void *)v56 + 7) + v70);
    uint64_t v74 = *v72;
    uint64_t v73 = v72[1];
    uint64_t v76 = *v71;
    uint64_t v75 = v71[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v77 = sub_1BFEF2D8C(v76, v75);
    if (v78) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v112 = (uint64_t *)(*((void *)v69 + 7) + 16 * v77);
  uint64_t v114 = *v112;
  uint64_t v113 = v112[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatDerivedDataError();
  sub_1C0A0264C((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
  swift_allocError();
  *uint64_t v115 = v76;
  v115[1] = v75;
  v115[2] = v74;
  v115[3] = v73;
  v115[4] = v114;
  v115[5] = v113;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_94:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A01CB0(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  unint64_t v37 = a3;
  uint64_t v36 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v38 = (char *)&v32 - v8;
  uint64_t v42 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  if (!*(void *)(*a2 + 16)
    || (sub_1C1520DBC(),
        char v45 = "unusedProperties",
        sub_1C151E77C(),
        uint64_t v11 = sub_1C1520E0C(),
        uint64_t v12 = -1 << *(unsigned char *)(v10 + 32),
        unint64_t v13 = v11 & ~v12,
        ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0))
  {
LABEL_8:
    char v46 = (const char *)MEMORY[0x1E4FBC868];
    unint64_t v16 = v37;
    if (v37 >> 62) {
      goto LABEL_36;
    }
    uint64_t v17 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v17)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      uint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_38:
      swift_bridgeObjectRelease();
      uint64_t v47 = v30;
      goto LABEL_39;
    }
LABEL_10:
    unint64_t v18 = 0;
    unint64_t v40 = v16 & 0xC000000000000001;
    uint64_t v33 = v16 & 0xFFFFFFFFFFFFFF8;
    unint64_t v32 = v16 + 32;
    uint64_t v44 = "ignoreUnusedProperty";
    char v45 = "isolatedThunderstormsNight";
    uint64_t v43 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v40)
      {
        uint64_t v19 = MEMORY[0x1C18C7CB0](v18, v37);
        BOOL v20 = __OFADD__(v18++, 1);
        if (v20) {
          goto LABEL_34;
        }
      }
      else
      {
        if (v18 >= *(void *)(v33 + 16)) {
          goto LABEL_35;
        }
        uint64_t v19 = *(void *)(v32 + 8 * v18);
        swift_retain();
        BOOL v20 = __OFADD__(v18++, 1);
        if (v20)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_1C15204BC();
          if (!v17) {
            goto LABEL_37;
          }
          goto LABEL_10;
        }
      }
      uint64_t v21 = v41;
      sub_1C0A02454(*(void *)(v19 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v41, type metadata accessor for FormatCompilerOptions);
      uint64_t v22 = *(void *)(v21 + *(int *)(v42 + 32));
      swift_bridgeObjectRetain();
      sub_1C0A024BC(v21, type metadata accessor for FormatCompilerOptions);
      if (!*(void *)(v22 + 16)
        || (sub_1C1520DBC(),
            sub_1C151E77C(),
            unint64_t v16 = (unint64_t)&v47,
            uint64_t v23 = sub_1C1520E0C(),
            uint64_t v24 = -1 << *(unsigned char *)(v22 + 32),
            unint64_t v25 = v23 & ~v24,
            ((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0))
      {
LABEL_27:
        swift_bridgeObjectRelease();
        unint64_t v16 = *(void *)(v19 + 16);
        uint64_t v29 = swift_retain();
        sub_1C0A00F1C(v29, &v46);
        swift_release();
        swift_release();
        goto LABEL_11;
      }
      uint64_t v26 = ~v24;
      while (!*(unsigned char *)(*(void *)(v22 + 48) + v25))
      {
        char v27 = v45;
LABEL_25:
        unint64_t v16 = (unint64_t)v27 | 0x8000000000000000;
        char v28 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v28)
        {
          swift_release();
          goto LABEL_30;
        }
        unint64_t v25 = (v25 + 1) & v26;
        if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
          goto LABEL_27;
        }
      }
      if (*(unsigned char *)(*(void *)(v22 + 48) + v25) == 1) {
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
LABEL_11:
      if (v18 == v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = v43;
        goto LABEL_38;
      }
    }
    char v27 = v44;
    goto LABEL_25;
  }
  uint64_t v14 = ~v12;
  while (!*(unsigned char *)(*(void *)(v10 + 48) + v13) || *(unsigned char *)(*(void *)(v10 + 48) + v13) == 2)
  {
    char v15 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_33;
    }
    unint64_t v13 = (v13 + 1) & v14;
    if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_33:
  uint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_39:
  sub_1C0A0251C(0, &qword_1EA1A23A8, (uint64_t (*)(uint64_t))sub_1C097D584, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t type metadata accessor for DebugFormatCompiler()
{
  return self;
}

void sub_1C0A02420(uint64_t a1)
{
}

uint64_t sub_1C0A02454(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A024BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0A0251C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0A02580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A025E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A0264C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0A02694(uint64_t a1, uint64_t a2)
{
  if (qword_1EA194508 != -1) {
    swift_once();
  }
  sub_1BFCBD1CC((unint64_t *)&qword_1EA197FA0, a2, (void (*)(uint64_t))type metadata accessor for DebugFormatUploadService);
  sub_1C1516FBC();
  if (qword_1EA194510 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C1515F7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A02838()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    id v3 = objc_msgSend(self, sel_defaultSessionConfiguration);
    sub_1C15184AC();
    swift_allocObject();
    uint64_t v1 = sub_1C151849C();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C0A028E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v5 = a1;
  if (a1 == 1)
  {
    sub_1C0A06E78(0, &qword_1EA1A23B8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FBB320]);
    sub_1C0A06920();
    sub_1C0A0699C();
    sub_1C151E91C();
    sub_1C0A06E78(0, &qword_1EA1A23D0, (uint64_t)&type metadata for DebugFormatUploadTargetResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    sub_1C0A06E78(0, &qword_1EA1A23B8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FBB320]);
    sub_1C151932C();
    uint64_t v6 = (void *)sub_1C1518E7C();
    sub_1C1518FEC();
    swift_release();
  }
  sub_1C0A02B68(v5, a2, a3);
  sub_1C15192FC();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C0A06A00;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = (void *)sub_1C1518E7C();
  uint64_t v10 = sub_1C1518FFC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_1C0A02B68(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  if (a1 - 1 > 1)
  {
    sub_1C0A06E78(0, &qword_1EA1A23B8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FBB320]);
    sub_1C0A06920();
    sub_1C0A0699C();
    sub_1C151E91C();
    sub_1C0A06E78(0, &qword_1EA1A23D0, (uint64_t)&type metadata for DebugFormatUploadTargetResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    sub_1C151932C();
    uint64_t v4 = (void *)sub_1C1518E7C();
    sub_1C151903C();
    swift_release();

    *(void *)(swift_allocObject() + 16) = a3;
    swift_bridgeObjectRetain();
    unsigned __int8 v5 = (void *)sub_1C1518E7C();
    sub_1C0A06E78(0, &qword_1EA1A23B8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FBB320]);
    type metadata accessor for DebugFormatUploadService();
    sub_1C151900C();
    swift_release();
    swift_release();

    uint64_t v6 = (void *)sub_1C1518E7C();
    uint64_t v7 = sub_1C1518FEC();
    swift_release();

    return v7;
  }
}

uint64_t sub_1C0A02DA4(unint64_t a1, uint64_t a2)
{
  sub_1C0A06E78(0, &qword_1EA1A23D8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FAB088]);
  swift_retain();
  sub_1C0A06CAC(a1, a2, (uint64_t)v7, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1C0A02ED4);
  swift_release();
  uint64_t v4 = (void *)sub_1C1518E7C();
  sub_1C0A06BA4();
  sub_1BFCBD1CC(&qword_1EA1A23E8, 255, (void (*)(uint64_t))sub_1C0A06BA4);
  uint64_t v5 = sub_1C1518FAC();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_1C0A02ED4(uint64_t *a1@<X8>)
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8((void *)2, 0, 0, 0xD000000000000022, 0x80000001C1618020);
  uint64_t v2 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v2);
  sub_1C151932C();
  swift_retain();
  id v3 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)sub_1C1518E7C();
  uint64_t v5 = sub_1C15190DC();
  swift_release();
  swift_release();

  *a1 = v5;
}

uint64_t sub_1C0A031C8(uint64_t a1, uint64_t a2)
{
  sub_1C00646E0(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A081C0(a2 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatFile);
  sub_1C0A03330(a2, (uint64_t)v7);
  sub_1C0211130((uint64_t)v10, (uint64_t)v7, v12);
  if (!v2)
  {
    a1 = sub_1C0A03948((uint64_t)v12);
    sub_1C0A06E28((uint64_t)v12);
  }
  return a1;
}

uint64_t sub_1C0A03330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v3 = *v2;
  uint64_t v31 = a2;
  uint64_t v32 = v3;
  uint64_t v28 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00646E0(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v30 = (char *)&v27 - v7;
  uint64_t v8 = sub_1C151836C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v27 - v14;
  uint64_t v16 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA194440 != -1) {
    swift_once();
  }
  sub_1BFCBD1CC((unint64_t *)&qword_1EA197FA0, v17, (void (*)(uint64_t))type metadata accessor for DebugFormatUploadService);
  sub_1C1516FBC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C0A08158((uint64_t)v19, (uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
      sub_1C151926C();
      uint64_t v21 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v30, 1, 1, v21);
      uint64_t v22 = v31;
      sub_1C151925C();
      sub_1C0A07050((uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
      goto LABEL_15;
    case 2u:
      uint64_t v23 = v31;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v31, v19, v9);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      break;
    case 3u:
      sub_1C009CD20((uint64_t)v15);
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v9, (uint64_t)qword_1EB8799C8);
      if (sub_1C151922C())
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v31, 1, 1, v9);
      }
      else
      {
        uint64_t v26 = v31;
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v31, v15, v9);
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
      }
      break;
    case 4u:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v31, 1, 1, v9);
      break;
    case 5u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v24 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB8799C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v24, v9);
      sub_1C151926C();
      uint64_t v25 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v30, 1, 1, v25);
      uint64_t v22 = v31;
      sub_1C151925C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      break;
    default:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v31, 1, 1, v9);
      uint64_t result = sub_1C0A07050((uint64_t)v19, type metadata accessor for FormatVersioningModeSelection);
      break;
  }
  return result;
}

uint64_t sub_1C0A03948(uint64_t a1)
{
  sub_1C00646E0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v15 - v4;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A02694(v10, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C002F608((uint64_t)v5);
    type metadata accessor for DebugFormatServiceError();
    sub_1BFCBD1CC((unint64_t *)&qword_1EA1AF960, 255, (void (*)(uint64_t))type metadata accessor for DebugFormatServiceError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    sub_1C0A06E78(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  else
  {
    uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    MEMORY[0x1F4188790](v13);
    *(&v15 - 4) = (uint64_t)v9;
    *(&v15 - 3) = a1;
    *(&v15 - 2) = v1;
    sub_1C0A06E78(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v12 = sub_1C151911C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v12;
}

uint64_t sub_1C0A03C30()
{
  return sub_1C0A05214();
}

uint64_t sub_1C0A03C48(void *a1)
{
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8(a1, 0, 0, 0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A03D3C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1C0A06E78(0, &qword_1EA1A23D8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FAB088]);
  swift_retain();
  sub_1C0A06CAC(a3, a2, (uint64_t)v8, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1C0A03E6C);
  swift_release();
  uint64_t v5 = (void *)sub_1C1518E7C();
  sub_1C0A06BA4();
  sub_1BFCBD1CC(&qword_1EA1A23E8, 255, (void (*)(uint64_t))sub_1C0A06BA4);
  uint64_t v6 = sub_1C1518FAC();
  swift_bridgeObjectRelease();

  return v6;
}

void sub_1C0A03E6C(uint64_t *a1@<X8>)
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8((void *)2, 0, 0, 0xD000000000000023, 0x80000001C16180B0);
  uint64_t v2 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v2);
  sub_1C151932C();
  swift_retain();
  uint64_t v3 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)sub_1C1518E7C();
  uint64_t v5 = sub_1C15190DC();
  swift_release();
  swift_release();

  *a1 = v5;
}

uint64_t sub_1C0A04160(uint64_t a1)
{
  uint64_t v75 = *v1;
  sub_1C028A7B0();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v76 = (uint64_t (*)())((char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v77 = (uint64_t *)((char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00646E0(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v69 - v8;
  uint64_t v10 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v69 - v14;
  uint64_t v16 = type metadata accessor for FormatPackage();
  uint64_t v74 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v74 + 64);
  MEMORY[0x1F4188790](v16);
  MEMORY[0x1F4188790](v18);
  BOOL v20 = (char *)&v69 - v19;
  uint64_t v21 = a1 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file;
  sub_1C0A081C0(a1 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatFile);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1C0A07050((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatFile);
    int v68 = 0;
    uint64_t v67 = 168;
    goto LABEL_26;
  }
  sub_1C0A08158((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  if (v20[48] != 5)
  {
    uint64_t v73 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = swift_allocObject();
    sub_1C0A081C0(v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v24 = v78;
    sub_1C0A03330(a1, (uint64_t)v9);
    sub_1C0211130((uint64_t)v12, (uint64_t)v9, (uint64_t *)v80);
    long long v25 = v80[1];
    *(_OWORD *)(v23 + 16) = v80[0];
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)(v23 + 48) = v80[2];
    if (qword_1EA194620 != -1) {
      swift_once();
    }
    type metadata accessor for DebugNewsroomService();
    sub_1BFCBD1CC(&qword_1EA199E90, 255, (void (*)(uint64_t))type metadata accessor for DebugNewsroomService);
    sub_1C1516FBC();
    uint64_t v26 = v79;
    uint64_t v27 = *(int *)(v16 + 92);
    uint64_t v28 = (uint64_t)&v20[v27 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 24)];
    uint64_t v29 = v76;
    sub_1C0A081C0(v28, (uint64_t)v76, (uint64_t (*)(void))sub_1C028A7B0);
    uint64_t v30 = (uint64_t)v29;
    uint64_t v31 = v77;
    sub_1C0A08158(v30, (uint64_t)v77, type metadata accessor for FormatCompilerOptions.Newsroom);
    if (v26)
    {
      if (v26 == 1)
      {
        if (v31[1] != 1)
        {
          uint64_t v32 = v31 + 2;
          uint64_t v33 = v31[3];
          goto LABEL_15;
        }
LABEL_13:
        sub_1C0A07050((uint64_t)v31, type metadata accessor for FormatCompilerOptions.Newsroom);
        goto LABEL_19;
      }
      if (v31[1] == 1) {
        goto LABEL_13;
      }
      uint64_t v32 = v31 + 4;
      uint64_t v33 = v31[5];
    }
    else
    {
      uint64_t v33 = v31[1];
      uint64_t v32 = v31;
      if (v33 == 1) {
        goto LABEL_13;
      }
    }
LABEL_15:
    uint64_t v34 = *v32;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C0A07050((uint64_t)v31, type metadata accessor for FormatCompilerOptions.Newsroom);
    if (v33)
    {
      unsigned int v36 = v20[48];
      uint64_t v72 = v20;
      if (v36 >= 4)
      {
        if (v36 == 4)
        {
          MEMORY[0x1F4188790](v35);
          *(&v69 - 4) = v24;
          *(&v69 - 3) = v34;
          uint64_t v67 = v33;
          sub_1C01DDB34();
          unint64_t v77 = (uint64_t *)v37;
          uint64_t v69 = sub_1C151932C();
          uint64_t v76 = type metadata accessor for FormatPackage;
          uint64_t v38 = v73;
          sub_1C0A081C0((uint64_t)v20, v73, (uint64_t (*)(void))type metadata accessor for FormatPackage);
          uint64_t v39 = *(unsigned __int8 *)(v74 + 80);
          uint64_t v40 = (v39 + 24) & ~v39;
          uint64_t v74 = v39 | 7;
          uint64_t v71 = v17 + 7;
          uint64_t v41 = swift_allocObject();
          *(void *)(v41 + 16) = v23;
          uint64_t v70 = type metadata accessor for FormatPackage;
          sub_1C0A08158(v38, v41 + v40, (uint64_t (*)(void))type metadata accessor for FormatPackage);
          uint64_t v42 = (uint64_t *)(v41 + ((v17 + 7 + v40) & 0xFFFFFFFFFFFFFFF8));
          *uint64_t v42 = v34;
          v42[1] = v33;
          uint64_t v43 = v23;
          swift_retain();
          uint64_t v44 = (void *)sub_1C1518E7C();
          sub_1C0A0771C(0, &qword_1EA1A2400, (void (*)(uint64_t))sub_1C01DDB34);
          sub_1C151900C();
          swift_release();
          swift_release();

          uint64_t v45 = (uint64_t)v72;
          sub_1C0A081C0((uint64_t)v72, v38, (uint64_t (*)(void))v76);
          uint64_t v46 = (v39 + 16) & ~v39;
          unint64_t v47 = (v71 + v46) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v48 = swift_allocObject();
          sub_1C0A08158(v38, v48 + v46, (uint64_t (*)(void))v70);
          *(void *)(v48 + v47) = v43;
          swift_retain();
          uint64_t v49 = (void *)sub_1C1518E7C();
          sub_1C151900C();
          swift_release();
          swift_release();

          unint64_t v50 = (void *)sub_1C1518E7C();
LABEL_22:
          uint64_t v22 = sub_1C1518FFC();
          swift_release();

          sub_1C0A07050(v45, (uint64_t (*)(void))type metadata accessor for FormatPackage);
          goto LABEL_23;
        }
        if (v36 != 6)
        {
          while (1)
          {
            int v68 = 0;
            uint64_t v67 = 267;
LABEL_26:
            sub_1C152040C();
            __break(1u);
          }
        }
      }
      MEMORY[0x1F4188790](v35);
      *(&v69 - 4) = v24;
      *(&v69 - 3) = v34;
      uint64_t v67 = v33;
      sub_1C01DDAA0();
      unint64_t v77 = (uint64_t *)v54;
      uint64_t v69 = sub_1C151932C();
      uint64_t v76 = type metadata accessor for FormatPackage;
      uint64_t v55 = v73;
      sub_1C0A081C0((uint64_t)v20, v73, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      uint64_t v56 = *(unsigned __int8 *)(v74 + 80);
      uint64_t v57 = (v56 + 24) & ~v56;
      uint64_t v71 = v56 | 7;
      uint64_t v74 = v17 + 7;
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = v23;
      uint64_t v70 = type metadata accessor for FormatPackage;
      sub_1C0A08158(v55, v58 + v57, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      uint64_t v59 = (uint64_t *)(v58 + ((v17 + 7 + v57) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v59 = v34;
      v59[1] = v33;
      uint64_t v60 = v23;
      swift_retain();
      unint64_t v61 = (void *)sub_1C1518E7C();
      sub_1C0A0771C(0, &qword_1EA1A2408, (void (*)(uint64_t))sub_1C01DDAA0);
      sub_1C151900C();
      swift_release();
      swift_release();

      uint64_t v45 = (uint64_t)v72;
      sub_1C0A081C0((uint64_t)v72, v55, (uint64_t (*)(void))v76);
      uint64_t v62 = (v56 + 16) & ~v56;
      unint64_t v63 = (v74 + v62) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v64 = swift_allocObject();
      sub_1C0A08158(v55, v64 + v62, (uint64_t (*)(void))v70);
      *(void *)(v64 + v63) = v60;
      swift_retain();
      unint64_t v65 = (void *)sub_1C1518E7C();
      sub_1C151900C();
      swift_release();
      swift_release();

      unint64_t v50 = (void *)sub_1C1518E7C();
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v52 = *(void *)(v23 + 16);
    uint64_t v51 = *(void *)(v23 + 24);
    sub_1C0A06F24();
    swift_allocError();
    *(void *)uint64_t v53 = v52;
    *(void *)(v53 + 8) = v51;
    *(void *)(v53 + 16) = v26;
    *(unsigned char *)(v53 + 24) = 4;
    sub_1C0A06E78(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C151906C();
    sub_1C0A07050((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatPackage);
LABEL_23:
    swift_release();
    return v22;
  }
  sub_1C0A06E78(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v22 = sub_1C151908C();
  sub_1C0A07050((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  return v22;
}

uint64_t sub_1C0A04D9C@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8((void *)2, 0, 0, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  *a2 = a1;
  a2[1] = 0;
  return swift_retain();
}

id sub_1C0A04FA8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8((void *)a1, 0, 0, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  *a3 = a2;
  a3[1] = a1 | 0x8000000000000000;
  swift_retain();
  return (id)a1;
}

uint64_t sub_1C0A05214()
{
  return sub_1C151908C();
}

uint64_t sub_1C0A052E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7)
{
  v28[1] = a7;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1C151526C();
  uint64_t v15 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
  swift_retain();
  sub_1C151522C();
  sub_1C15151DC();
  sub_1C151525C();
  sub_1C151536C();
  swift_allocObject();
  sub_1C151535C();
  long long v19 = a6[1];
  long long aBlock = *a6;
  long long v33 = v19;
  long long v34 = a6[2];
  sub_1C0A06ED0();
  sub_1C151533C();
  swift_release();
  sub_1C151524C();
  sub_1C0A02838();
  BOOL v20 = (void *)sub_1C151848C();
  swift_release();
  uint64_t v21 = (void *)sub_1C15151FC();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v30;
  *(void *)(v22 + 16) = v29;
  *(void *)(v22 + 24) = v23;
  long long v24 = a6[1];
  *(_OWORD *)(v22 + 32) = *a6;
  *(_OWORD *)(v22 + 48) = v24;
  *(_OWORD *)(v22 + 64) = a6[2];
  *(void *)(v22 + 80) = sub_1C005A48C;
  *(void *)(v22 + 88) = v18;
  *(void *)&long long v34 = sub_1C0A06FD0;
  *((void *)&v34 + 1) = v22;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v33 = sub_1C0952BF0;
  *((void *)&v33 + 1) = &block_descriptor_37;
  long long v25 = _Block_copy(&aBlock);
  swift_retain();
  sub_1C0A07000((uint64_t)a6);
  swift_release();
  id v26 = objc_msgSend(v20, sel_dataTaskWithRequest_completionHandler_, v21, v25);
  _Block_release(v25);

  objc_msgSend(v26, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v31);
}

void sub_1C0A05720(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, void (*a8)(void))
{
  if (a4)
  {
    uint64_t v12 = *a7;
    uint64_t v11 = a7[1];
    sub_1C0A06F24();
    uint64_t v13 = (void *)swift_allocError();
    *(void *)uint64_t v14 = a4;
    *(void *)(v14 + 8) = v12;
    *(void *)(v14 + 16) = v11;
    *(unsigned char *)(v14 + 24) = 0;
    id v15 = a4;
    id v16 = a4;
    swift_bridgeObjectRetain();
    a5(v13);

    uint64_t v17 = a4;
    goto LABEL_8;
  }
  if (!a3 || (self, (uint64_t v20 = swift_dynamicCastObjCClass()) == 0))
  {
    uint64_t v23 = *a7;
    uint64_t v22 = a7[1];
    sub_1C0A06F24();
    uint64_t v24 = swift_allocError();
    *(void *)uint64_t v25 = a3;
    *(void *)(v25 + 8) = v23;
    *(void *)(v25 + 16) = v22;
    *(unsigned char *)(v25 + 24) = 2;
    id v26 = a3;
    swift_bridgeObjectRetain();
    a5((void *)v24);
    uint64_t v17 = (void *)v24;
LABEL_8:
    goto LABEL_10;
  }
  uint64_t v21 = (void *)v20;
  id v32 = a3;
  if (objc_msgSend(v21, sel_statusCode) == (id)201)
  {
    a8();
  }
  else
  {
    id v27 = objc_msgSend(v21, sel_statusCode);
    uint64_t v29 = *a7;
    uint64_t v28 = a7[1];
    sub_1C0A06F24();
    uint64_t v30 = (void *)swift_allocError();
    *(void *)uint64_t v31 = v27;
    *(void *)(v31 + 8) = v29;
    *(void *)(v31 + 16) = v28;
    *(unsigned char *)(v31 + 24) = 3;
    swift_bridgeObjectRetain();
    a5(v30);
  }
  uint64_t v17 = v32;
LABEL_10:
}

uint64_t sub_1C0A0592C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C01DDB34();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatPackage();
  uint64_t v12 = sub_1C151920C();
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16 && *(void *)(v16 + 16) && (unint64_t v17 = sub_1BFEF2D8C(v12, v13), (v18 & 1) != 0))
  {
    long long v19 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v17);
    v29[1] = a6;
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C0A07FA0(v20, v21, v14);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&v30[0] = v14;
    *((void *)&v30[0] + 1) = v15;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v24 = *((void *)&v30[0] + 1);
    uint64_t v22 = *(void *)&v30[0];
  }
  swift_beginAccess();
  *(void *)(a3 + 16) = v22;
  *(void *)(a3 + 24) = v24;
  swift_bridgeObjectRelease();
  *(void *)&v30[0] = 0;
  *((void *)&v30[0] + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&v30[0] = 0xD000000000000010;
  *((void *)&v30[0] + 1) = 0x80000001C1618230;
  sub_1C151E80C();
  long long v25 = v30[0];
  swift_beginAccess();
  long long v26 = *(_OWORD *)(a3 + 32);
  v30[0] = *(_OWORD *)(a3 + 16);
  v30[1] = v26;
  v30[2] = *(_OWORD *)(a3 + 48);
  sub_1C0A07000((uint64_t)v30);
  sub_1C0331070(v25, *((unint64_t *)&v25 + 1), (uint64_t *)v30);
  sub_1C0A06E28((uint64_t)v30);
  swift_bridgeObjectRelease();
  sub_1C0A081C0(a1, (uint64_t)v11, (uint64_t (*)(void))sub_1C01DDB34);
  sub_1C00646E0(0, &qword_1EA1A2418, (uint64_t (*)(uint64_t))sub_1C01DDB34, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1C151908C();
  uint64_t v27 = sub_1C15192FC();
  swift_release();
  swift_release();
  return v27;
}

uint64_t sub_1C0A05BE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a2;
  uint64_t v40 = a3;
  uint64_t v6 = type metadata accessor for DebugNewsroomThemeData();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (void *)((char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C01DDB34();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A0771C(0, &qword_1EA1A2400, (void (*)(uint64_t))sub_1C01DDB34);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (void *)((char *)v38 - v14);
  uint64_t v16 = *(int *)(v13 + 56);
  uint64_t v17 = (uint64_t)v15 + v16;
  uint64_t v18 = (uint64_t)a1 + v16;
  uint64_t v19 = *a1;
  uint64_t v20 = a1[1];
  v38[1] = a4 + 16;
  uint64_t v39 = v19;
  *uint64_t v15 = v19;
  v15[1] = v20;
  sub_1C0A081C0(v18, v17, (uint64_t (*)(void))sub_1C01DDB34);
  swift_bridgeObjectRetain();
  sub_1C0A07050(v17, (uint64_t (*)(void))sub_1C01DDB34);
  uint64_t v21 = (uint64_t)v15 + *(int *)(v13 + 56);
  uint64_t v22 = (uint64_t)v11;
  uint64_t v23 = v18;
  uint64_t v24 = v40;
  sub_1C0A081C0(v23, v21, (uint64_t (*)(void))sub_1C01DDB34);
  sub_1C0A08158(v21, (uint64_t)v11, (uint64_t (*)(void))sub_1C01DDB34);
  sub_1C0A081C0((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugNewsroomThemeData);
  uint64_t v25 = *(void *)(v24 + 24);
  v8[3] = *(void *)(v24 + 16);
  void v8[4] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8[9] = v39;
  v8[10] = v20;
  swift_beginAccess();
  uint64_t v27 = *(void *)(a4 + 16);
  uint64_t v26 = *(void *)(a4 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[7] = v27;
  unsigned char v8[8] = v26;
  if (v8[11]) {
    unint64_t v28 = v8[11];
  }
  else {
    unint64_t v28 = sub_1C018D9F4(MEMORY[0x1E4FBC860]);
  }
  type metadata accessor for FormatPackage();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C151920C();
  uint64_t v31 = v30;
  swift_beginAccess();
  uint64_t v33 = *(void *)(a4 + 16);
  uint64_t v32 = *(void *)(a4 + 24);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v42 = v28;
  sub_1C1065BB8(v33, v32, v29, v31, isUniquelyReferenced_nonNull_native);
  unint64_t v35 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8[11] = v35;
  uint64_t v36 = sub_1C0332FC0(v22, (uint64_t)v8);
  sub_1C0A07050(v22, (uint64_t (*)(void))sub_1C01DDB34);
  sub_1C0A07050((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugNewsroomThemeData);
  return v36;
}

uint64_t sub_1C0A05F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C01DDAA0();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatPackage();
  uint64_t v12 = sub_1C151920C();
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  uint64_t v16 = *(void *)(a1 + 96);
  if (v16 && *(void *)(v16 + 16) && (unint64_t v17 = sub_1BFEF2D8C(v12, v13), (v18 & 1) != 0))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v17);
    v29[1] = a6;
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C0A07FA0(v20, v21, v14);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&v30[0] = v14;
    *((void *)&v30[0] + 1) = v15;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v24 = *((void *)&v30[0] + 1);
    uint64_t v22 = *(void *)&v30[0];
  }
  swift_beginAccess();
  *(void *)(a3 + 16) = v22;
  *(void *)(a3 + 24) = v24;
  swift_bridgeObjectRelease();
  *(void *)&v30[0] = 0;
  *((void *)&v30[0] + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&v30[0] = 0xD000000000000011;
  *((void *)&v30[0] + 1) = 0x80000001C1618210;
  sub_1C151E80C();
  long long v25 = v30[0];
  swift_beginAccess();
  long long v26 = *(_OWORD *)(a3 + 32);
  v30[0] = *(_OWORD *)(a3 + 16);
  v30[1] = v26;
  v30[2] = *(_OWORD *)(a3 + 48);
  sub_1C0A07000((uint64_t)v30);
  sub_1C0331070(v25, *((unint64_t *)&v25 + 1), (uint64_t *)v30);
  sub_1C0A06E28((uint64_t)v30);
  swift_bridgeObjectRelease();
  sub_1C0A081C0(a1, (uint64_t)v11, (uint64_t (*)(void))sub_1C01DDAA0);
  sub_1C00646E0(0, &qword_1EA1A2410, (uint64_t (*)(uint64_t))sub_1C01DDAA0, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1C151908C();
  uint64_t v27 = sub_1C15192FC();
  swift_release();
  swift_release();
  return v27;
}

uint64_t sub_1C0A061F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a2;
  v47[0] = a4;
  uint64_t v7 = sub_1C151E68C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v49 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DebugNewsroomLayoutData();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01DDAA0();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A0771C(0, &qword_1EA1A2408, (void (*)(uint64_t))sub_1C01DDAA0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  char v18 = (void *)((char *)v47 - v17);
  uint64_t v19 = a4 + 16;
  uint64_t v20 = *(int *)(v16 + 56);
  uint64_t v21 = (uint64_t)v18 + v20;
  uint64_t v22 = (uint64_t)a1 + v20;
  uint64_t v23 = *a1;
  uint64_t v24 = a1[1];
  v47[1] = v19;
  uint64_t v48 = v23;
  *char v18 = v23;
  v18[1] = v24;
  sub_1C0A081C0(v22, v21, (uint64_t (*)(void))sub_1C01DDAA0);
  swift_bridgeObjectRetain();
  sub_1C0A07050(v21, (uint64_t (*)(void))sub_1C01DDAA0);
  uint64_t v25 = (uint64_t)v18 + *(int *)(v16 + 56);
  uint64_t v26 = (uint64_t)v14;
  sub_1C0A081C0(v22, v25, (uint64_t (*)(void))sub_1C01DDAA0);
  sub_1C0A08158(v25, (uint64_t)v14, (uint64_t (*)(void))sub_1C01DDAA0);
  sub_1C0A081C0((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugNewsroomLayoutData);
  uint64_t v27 = *(void *)(a3 + 24);
  *((void *)v11 + 2) = *(void *)(a3 + 16);
  *((void *)v11 + 3) = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = a3;
  char v28 = *(unsigned char *)(a3 + 48);
  uint64_t v29 = (void *)v47[0];
  v11[32] = 0x4050503020001uLL >> (8 * v28);
  swift_beginAccess();
  uint64_t v30 = v29[4];
  unint64_t v31 = v29[5];
  sub_1BFE95820(v30, v31);
  sub_1C151E67C();
  uint64_t v32 = sub_1C151E64C();
  uint64_t v34 = v33;
  sub_1BFE95664(v30, v31);
  swift_bridgeObjectRelease();
  *((void *)v11 + 7) = v32;
  *((void *)v11 + 8) = v34;
  swift_bridgeObjectRelease();
  *((void *)v11 + 5) = v48;
  *((void *)v11 + 6) = v24;
  swift_beginAccess();
  uint64_t v36 = v29[2];
  uint64_t v35 = v29[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 9) = v36;
  *((void *)v11 + 10) = v35;
  if (*((void *)v11 + 12)) {
    unint64_t v37 = *((void *)v11 + 12);
  }
  else {
    unint64_t v37 = sub_1C018D9F4(MEMORY[0x1E4FBC860]);
  }
  type metadata accessor for FormatPackage();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C151920C();
  uint64_t v40 = v39;
  swift_beginAccess();
  uint64_t v42 = v29[2];
  uint64_t v41 = v29[3];
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v52 = v37;
  sub_1C1065BB8(v42, v41, v38, v40, isUniquelyReferenced_nonNull_native);
  unint64_t v44 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)v11 + 12) = v44;
  uint64_t v45 = sub_1C0332288(v26, (uint64_t)v11);
  sub_1C0A07050(v26, (uint64_t (*)(void))sub_1C01DDAA0);
  sub_1C0A07050((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugNewsroomLayoutData);
  return v45;
}

uint64_t sub_1C0A06630()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatUploadService()
{
  return self;
}

void *sub_1C0A0669C()
{
  uint64_t v1 = sub_1C151F55C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151F52C();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v6 - 8);
  type metadata accessor for DebugNewsroomService();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  v0[2] = v7;
  v0[3] = 0;
  sub_1BFE4597C();
  sub_1C151E19C();
  v9[1] = MEMORY[0x1E4FBC860];
  sub_1BFCBD1CC((unint64_t *)&unk_1EB87A1A0, 255, MEMORY[0x1E4FBCC10]);
  sub_1C006480C(0);
  sub_1BFCBD1CC((unint64_t *)&qword_1EB879FC0, 255, sub_1C006480C);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v1);
  v0[4] = sub_1C151F5AC();
  return v0;
}

unint64_t sub_1C0A06920()
{
  unint64_t result = qword_1EA1A23C0;
  if (!qword_1EA1A23C0)
  {
    sub_1C0A06E78(255, &qword_1EA1A23B8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A23C0);
  }
  return result;
}

unint64_t sub_1C0A0699C()
{
  unint64_t result = qword_1EA1A23C8;
  if (!qword_1EA1A23C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A23C8);
  }
  return result;
}

uint64_t sub_1C0A069F0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A06A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = *(unsigned char *)(v3 + 16);
  *(void *)(a3 + 8) = a1;
  *(void *)(a3 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0A06A44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A06A7C(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1C0A06AB4()
{
  return sub_1C0A02DA4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0A06AD0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_1C152020C();
  }
  uint64_t result = sub_1C0A07B78((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

void sub_1C0A06BA4()
{
  if (!qword_1EA1A23E0)
  {
    sub_1C0A06E78(255, &qword_1EA1A23D8, (uint64_t)&type metadata for DebugFormatUploadEntryResult, MEMORY[0x1E4FAB088]);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A23E0);
    }
  }
}

uint64_t sub_1C0A06C20()
{
  return sub_1C0A031C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0A06C3C@<X0>(void *a1@<X8>)
{
  return sub_1C0A04D9C(v1, a1);
}

id sub_1C0A06C74@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0A04FA8(a1, v2, a2);
}

uint64_t sub_1C0A06CAC(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v7) {
      break;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C152028C();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = 0;
    while (v7 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x1C18C7CB0](v9, a1);
      }
      else
      {
        uint64_t v10 = *(void *)(a1 + 8 * v9 + 32);
        swift_retain();
      }
      uint64_t v12 = v10;
      a4(&v13, &v12, a2);
      swift_release();
      if (v4) {
        return swift_release();
      }
      ++v9;
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (v7 == v9) {
        return v14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0A06E28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_1BFE95664(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C0A06E78(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0A06EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A052E8(a1, a2, a3, a4, *(void *)(v4 + 16), *(long long **)(v4 + 24), *(void *)(v4 + 32));
}

unint64_t sub_1C0A06ED0()
{
  unint64_t result = qword_1EA1A23F0;
  if (!qword_1EA1A23F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A23F0);
  }
  return result;
}

unint64_t sub_1C0A06F24()
{
  unint64_t result = qword_1EA1A23F8;
  if (!qword_1EA1A23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A23F8);
  }
  return result;
}

uint64_t sub_1C0A06F78()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFE95664(*(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0A06FD0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1C0A05720(a1, a2, a3, a4, *(void (**)(void *))(v4 + 16), *(void *)(v4 + 24), (uint64_t *)(v4 + 32), *(void (**)(void))(v4 + 80));
}

uint64_t sub_1C0A07000(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1BFE95820(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0A07050(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0A070B0()
{
  return sub_1C032FB70();
}

uint64_t sub_1C0A070DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A07114(uint64_t a1, uint64_t a2)
{
  return sub_1C0A03D3C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C0A07130()
{
  return sub_1C0A04160(*(void *)(v0 + 24));
}

uint64_t sub_1C0A07160@<X0>(void *a1@<X8>)
{
  return sub_1C0A04D9C(v1, a1);
}

id sub_1C0A07198@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0A04FA8(a1, v2, a2);
}

uint64_t sub_1C0A071D0()
{
  swift_bridgeObjectRelease();
  sub_1BFE95664(*(void *)(v0 + 32), *(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A07218()
{
  return sub_1C0A072D0((uint64_t (*)(void, void))sub_1C0331ED4);
}

uint64_t sub_1C0A07248(uint64_t a1, uint64_t a2)
{
  return sub_1C0A07664(a1, a2, sub_1C0A0592C);
}

uint64_t sub_1C0A07278(uint64_t a1, uint64_t a2)
{
  return sub_1C0A07AC8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))sub_1C0A05BE0);
}

uint64_t sub_1C0A072A4()
{
  return sub_1C0A072D0((uint64_t (*)(void, void))sub_1C0331B20);
}

uint64_t sub_1C0A072D0(uint64_t (*a1)(void, void))
{
  return a1(*(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v1 = (int *)type metadata accessor for FormatPackage();
  uint64_t v15 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v15 + 24) & ~v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 168) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v2 + v1[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v5 = v3 + *(int *)(v4 + 24);
  if (*(void *)(v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v5 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v7 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = v3 + *(int *)(v4 + 28);
  if (!v9(v10, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v2 + v1[24];
  uint64_t v12 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v2 + v1[25];
  if (!v9(v13, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A07638(uint64_t a1, uint64_t a2)
{
  return sub_1C0A07664(a1, a2, sub_1C0A05F44);
}

uint64_t sub_1C0A07664(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, uint64_t, void, void))
{
  uint64_t v7 = *(void *)(type metadata accessor for FormatPackage() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = (void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a3(a1, a2, *(void *)(v3 + 16), v9, *v10, v10[1]);
}

void sub_1C0A0771C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t objectdestroy_21Tm_0()
{
  uint64_t v1 = (int *)type metadata accessor for FormatPackage();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 168) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v2 + v1[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v5 = v3 + *(int *)(v4 + 24);
  if (*(void *)(v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v5 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v7 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = v3 + *(int *)(v4 + 28);
  if (!v9(v10, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v2 + v1[24];
  uint64_t v12 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v2 + v1[25];
  if (!v9(v13, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A07A9C(uint64_t a1, uint64_t a2)
{
  return sub_1C0A07AC8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))sub_1C0A061F8);
}

uint64_t sub_1C0A07AC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t v7 = *(void *)(type metadata accessor for FormatPackage() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return a3(a1, a2, v3 + v8, *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C0A07B78(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_1C149BAC0(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  unint64_t result = sub_1C151E85C();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_1C149BAC0(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_1C149BAC0(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unint64_t result = sub_1C151E85C();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        uint64_t v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_1C0A07FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF27ECC();
  uint64_t v4 = (void *)sub_1C151FF1C();
  if (v4[2] != 2
    || (unint64_t v5 = v4[8],
        unint64_t v6 = v4[9],
        unint64_t v8 = v4[10],
        unint64_t v7 = v4[11],
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        !((v6 ^ v5) >> 14)))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v9 = sub_1C0A06AD0(v5, v6, v8, v7, 10);
  if ((v10 & 0x100) != 0)
  {
    uint64_t v11 = sub_1C0B344FC(v5, v6, v8, v7, 10);
    char v14 = v13;
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v16 = a3;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    return v16;
  }
  uint64_t v11 = (unsigned __int8 *)v9;
  char v12 = v10;
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v16 = a3;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C151E80C();
  if (!__OFADD__(v11, 1))
  {
    sub_1C152088C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0A08158(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A081C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_1C0A08228(void *result, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      id v5 = result;
      goto LABEL_3;
    case 3:
    case 4:
LABEL_3:
      uint64_t result = (void *)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for DebugFormatUploadServiceError(uint64_t a1)
{
}

void sub_1C0A082CC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:

      goto LABEL_6;
    case 2:
      swift_bridgeObjectRelease();

      break;
    case 3:
    case 4:
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for DebugFormatUploadServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0A08228(*(void **)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DebugFormatUploadServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0A08228(*(void **)a2, v4, v5, v6);
  unint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C0A082CC(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DebugFormatUploadServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C0A082CC(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatUploadServiceError()
{
  return &type metadata for DebugFormatUploadServiceError;
}

uint64_t dispatch thunk of static FeedGroupAdInsertable.createAdGroup()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t HeadlineViewRendererPipelineProcessor.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return v0;
}

uint64_t HeadlineViewRendererPipelineProcessor.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

unint64_t HeadlineViewRendererPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, NSObject *a3, void (**a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1BFD02AF8(a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1C0A08590@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a3;
  uint64_t v23 = a2;
  uint64_t v24 = a5;
  uint64_t v21 = a6;
  uint64_t v9 = sub_1C151B1CC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v21 - v11;
  uint64_t v13 = sub_1C151677C();
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)&double v15 = MEMORY[0x1F4188790](v13).n128_u64[0];
  unint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_msgSend(*a1, sel_indexPath, v15);
  sub_1C151672C();

  uint64_t v25 = v22;
  uint64_t v26 = a4;
  uint64_t v27 = v21;
  uint64_t v28 = a7;
  sub_1C151A79C();
  sub_1C151A7AC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v19 = v24;
  sub_1C151B1BC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v19, 0, 1, a4);
}

uint64_t method lookup function for HeadlineViewRendererPipelineProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HeadlineViewRendererPipelineProcessor);
}

uint64_t sub_1C0A087D4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0A08590(a1, v2[10], v2[4], v2[5], a2, v2[8], v2[9]);
}

unint64_t sub_1C0A0880C()
{
  unint64_t result = qword_1EA1A2420;
  if (!qword_1EA1A2420)
  {
    sub_1C00BB860(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2420);
  }
  return result;
}

uint64_t sub_1C0A08864(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFE4D23C(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C0A088D4()
{
  return swift_deallocObject();
}

void sub_1C0A0890C()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

BOOL static FormatPublisherLogoSizeBinding.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPublisherLogoSizeBinding.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPublisherLogoSizeBinding.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0A089B8()
{
  unint64_t result = qword_1EA1A2428;
  if (!qword_1EA1A2428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2428);
  }
  return result;
}

unint64_t sub_1C0A08A0C(uint64_t a1)
{
  unint64_t result = sub_1C0A08A34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A08A34()
{
  unint64_t result = qword_1EA1A2430;
  if (!qword_1EA1A2430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2430);
  }
  return result;
}

unint64_t sub_1C0A08A88(void *a1)
{
  a1[1] = sub_1BFD29C1C();
  a1[2] = sub_1BFD61368();
  unint64_t result = sub_1C0A089B8();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatPublisherLogoSizeBinding()
{
  return &type metadata for FormatPublisherLogoSizeBinding;
}

uint64_t sub_1C0A08AF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C0A09418();
    long long v14 = 0uLL;
    sub_1C15206EC();
    if (v13)
    {
      long long v14 = xmmword_1C152C800;
      sub_1C0A0946C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
    else
    {
      long long v13 = xmmword_1C152C800;
      sub_1C0A094C0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v11 = v14;
      uint64_t v12 = *((void *)&v14 + 1);
    }
    *a2 = v11;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0A08D48(void *a1)
{
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = v1[1];
  uint64_t v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  if (v9)
  {
    LOBYTE(v11) = 0;
    sub_1C0A09514();
    long long v12 = 0uLL;
    sub_1C152080C();
    if (!v2)
    {
      LOBYTE(v12) = v13;
      *((void *)&v12 + 1) = v9;
      long long v11 = xmmword_1C152C800;
      sub_1C0A095BC();
LABEL_6:
      sub_1C152080C();
    }
  }
  else
  {
    LOBYTE(v11) = 1;
    sub_1C0A09514();
    long long v12 = 0uLL;
    sub_1C152080C();
    if (!v2)
    {
      long long v12 = xmmword_1C152C800;
      sub_1C0A09568();
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0A08F64(char *a1, char *a2)
{
  return sub_1C147ABA4(*a1, *a2);
}

uint64_t sub_1C0A08F70()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A08FF0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A0905C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A090D8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0A09138(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1970169197;
  if (!*v1) {
    uint64_t v2 = 0x6C65694674786574;
  }
  unint64_t v3 = 0xE900000000000064;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0A09174()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A091D4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0A09224@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0A08AF8(a1, a2);
}

uint64_t sub_1C0A0923C(void *a1)
{
  return sub_1C0A08D48(a1);
}

uint64_t sub_1C0A09258(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = a2[1];
  if (v2)
  {
    if (v3)
    {
      uint64_t v4 = *a2;
      unsigned __int8 v5 = *(unsigned char *)a1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      if (sub_1C147AED0(v5, v4))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v6 = sub_1C00E3118(v2, v3);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if (v6) {
          return 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3) {
    goto LABEL_9;
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t initializeBufferWithCopyOfBuffer for DebugFormatTemplateKeyTextField(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatTemplateKeyTextField(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatTemplateKeyTextField(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyUIElement()
{
  return &type metadata for DebugFormatTemplateKeyUIElement;
}

unint64_t sub_1C0A09418()
{
  unint64_t result = qword_1EA1A2438;
  if (!qword_1EA1A2438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2438);
  }
  return result;
}

unint64_t sub_1C0A0946C()
{
  unint64_t result = qword_1EA1A2440;
  if (!qword_1EA1A2440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2440);
  }
  return result;
}

unint64_t sub_1C0A094C0()
{
  unint64_t result = qword_1EA1A2448;
  if (!qword_1EA1A2448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2448);
  }
  return result;
}

unint64_t sub_1C0A09514()
{
  unint64_t result = qword_1EA1A2450;
  if (!qword_1EA1A2450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2450);
  }
  return result;
}

unint64_t sub_1C0A09568()
{
  unint64_t result = qword_1EA1A2458;
  if (!qword_1EA1A2458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2458);
  }
  return result;
}

unint64_t sub_1C0A095BC()
{
  unint64_t result = qword_1EA1A2460;
  if (!qword_1EA1A2460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2460);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTemplateKeyUIElement.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A096DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyUIElement.CodingType()
{
  return &type metadata for DebugFormatTemplateKeyUIElement.CodingType;
}

unint64_t sub_1C0A09718()
{
  unint64_t result = qword_1EA1A2468;
  if (!qword_1EA1A2468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2468);
  }
  return result;
}

unint64_t sub_1C0A0976C()
{
  unint64_t result = qword_1EA1A2470;
  if (!qword_1EA1A2470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2470);
  }
  return result;
}

char *sub_1C0A097C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap;
  sub_1BFD22278();
  unsigned int v6 = v5;
  id v7 = objc_allocWithZone(v5);
  uint64_t v8 = v1;
  *(void *)&v2[v4] = objc_msgSend(v7, sel_init);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton;
  uint64_t v10 = self;
  *(void *)&v8[v9] = objc_msgSend(v10, sel_buttonWithType_, 0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap;
  *(void *)&v8[v11] = objc_msgSend(objc_allocWithZone(v6), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton;
  *(void *)&v8[v12] = objc_msgSend(v10, sel_buttonWithType_, 0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap;
  *(void *)&v8[v13] = objc_msgSend(objc_allocWithZone(v6), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton;
  *(void *)&v8[v14] = objc_msgSend(v10, sel_buttonWithType_, 0);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap;
  *(void *)&v8[v15] = objc_msgSend(objc_allocWithZone(v6), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton;
  *(void *)&v8[v16] = objc_msgSend(v10, sel_buttonWithType_, 0);
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel;
  *(void *)&v8[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView;
  *(void *)&v8[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1B48]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel;
  *(void *)&v8[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_editor] = a1;
  swift_retain();

  v90.receiver = v8;
  v90.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v90, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = self;
  uint64_t v22 = (char *)v20;
  id v23 = objc_msgSend(v21, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v23);

  objc_msgSend(v22, sel_setClipsToBounds_, 1);
  id v24 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v24, sel_setCornerRadius_, 4.0);

  uint64_t v25 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel;
  id v26 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel];
  id v27 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v26, sel_setTextColor_, v27);

  uint64_t v28 = *(void **)&v22[v25];
  id v88 = self;
  id v29 = v28;
  id v30 = objc_msgSend(v88, sel_systemFontOfSize_, 11.0);
  objc_msgSend(v29, sel_setFont_, v30);

  objc_msgSend(v22, sel_addSubview_, *(void *)&v22[v25]);
  uint64_t v31 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton;
  id v32 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton];
  id v33 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v32, sel_setTintColor_, v33);

  id v34 = *(id *)&v22[v31];
  uint64_t v35 = (void *)sub_1C151E5EC();
  unsigned int v36 = self;
  id v37 = objc_msgSend(v36, sel_systemImageNamed_, v35);

  objc_msgSend(v34, sel_setImage_forState_, v37, 0);
  uint64_t v38 = *(void **)&v22[v31];
  objc_msgSend(v38, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v38);
  id v39 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap];
  id v40 = v38;
  sub_1C151C87C();

  uint64_t v41 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton;
  id v42 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton];
  id v43 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v42, sel_setTintColor_, v43);

  id v44 = *(id *)&v22[v41];
  uint64_t v45 = (void *)sub_1C151E5EC();
  id v46 = objc_msgSend(v36, sel_systemImageNamed_, v45);

  objc_msgSend(v44, sel_setImage_forState_, v46, 0);
  unint64_t v47 = *(void **)&v22[v41];
  objc_msgSend(v47, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v47);
  id v48 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap];
  id v49 = v47;
  sub_1C151C87C();

  uint64_t v50 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton;
  id v51 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton];
  id v52 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v51, sel_setTintColor_, v52);

  id v53 = *(id *)&v22[v50];
  uint64_t v54 = (void *)sub_1C151E5EC();
  id v55 = objc_msgSend(v36, sel_systemImageNamed_, v54);

  objc_msgSend(v53, sel_setImage_forState_, v55, 0);
  uint64_t v56 = *(void **)&v22[v50];
  objc_msgSend(v56, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v56);
  id v57 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap];
  id v58 = v56;
  sub_1C151C87C();

  uint64_t v59 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel;
  uint64_t v60 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel];
  objc_msgSend(v60, sel_setUserInteractionEnabled_, 0);
  id v61 = v60;
  id v62 = objc_msgSend(v88, sel_systemFontOfSize_, 8.0);
  objc_msgSend(v61, sel_setFont_, v62);

  id v63 = *(id *)&v22[v59];
  id v64 = objc_msgSend(v21, sel_whiteColor);
  objc_msgSend(v63, sel_setTextColor_, v64);

  id v65 = *(id *)&v22[v59];
  id v66 = objc_msgSend(v21, sel_systemBlueColor);
  objc_msgSend(v65, sel_setBackgroundColor_, v66);

  uint64_t v67 = *(void **)&v22[v59];
  objc_msgSend(v67, sel_setFrame_, 0.0, 0.0, 16.0, 16.0);
  id v68 = objc_msgSend(v67, sel_layer);
  objc_msgSend(v68, sel_setCornerRadius_, 8.0);

  id v69 = objc_msgSend(*(id *)&v22[v59], sel_layer);
  objc_msgSend(v69, sel_setCornerCurve_, *MEMORY[0x1E4F39EA0]);

  id v70 = objc_msgSend(*(id *)&v22[v59], sel_layer);
  objc_msgSend(v70, sel_setMasksToBounds_, 1);

  uint64_t v71 = *(void **)&v22[v59];
  objc_msgSend(v71, sel_setTextAlignment_, 1);
  objc_msgSend(v71, sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(v22, sel_addSubview_, v71);
  uint64_t v72 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton;
  id v73 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton];
  id v74 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v73, sel_setTintColor_, v74);

  id v75 = *(id *)&v22[v72];
  uint64_t v76 = (void *)sub_1C151E5EC();
  id v77 = objc_msgSend(v36, sel_systemImageNamed_, v76);

  objc_msgSend(v75, sel_setImage_forState_, v77, 0);
  uint64_t v78 = *(void **)&v22[v72];
  objc_msgSend(v78, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v78);
  id v79 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap];
  id v80 = v78;
  sub_1C151C87C();

  uint64_t v81 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView;
  uint64_t v82 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView];
  objc_msgSend(v82, sel_setProgress_, 0.0);
  id v83 = v82;
  id v84 = objc_msgSend(v21, sel_systemBlueColor);
  objc_msgSend(v83, sel_setProgressTintColor_, v84);

  id v85 = *(id *)&v22[v81];
  id v86 = objc_msgSend(v21, sel_clearColor);
  objc_msgSend(v85, sel_setTrackTintColor_, v86);

  objc_msgSend(v22, sel_addSubview_, *(void *)&v22[v81]);
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151891C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151891C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151891C();
  swift_release();

  swift_release();
  return v22;
}

void sub_1C0A0A444(uint64_t a1)
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel);
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  int v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);
  swift_bridgeObjectRelease();
}

id sub_1C0A0A528(uint64_t a1, _DWORD *a2, double a3)
{
  LODWORD(a3) = *a2;
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView), sel_setProgress_animated_, 0, a3);
}

void sub_1C0A0A548(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel);
  uint64_t v7 = v3;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  unsigned int v6 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setText_, v6, v4, v7);
  swift_bridgeObjectRelease();
}

void sub_1C0A0A62C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTintColor_, v5);

  uint64_t v6 = *(void *)(sub_1C0ED13AC(v2) + 16);
  swift_bridgeObjectRelease();
  if (v6)
  {
    id v7 = objc_msgSend(v4, sel_systemYellowColor);
    objc_msgSend(v3, sel_setTintColor_, v7);
  }
  uint64_t v8 = *(void *)(sub_1C0ED0F90(v2) + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = objc_msgSend(v4, sel_systemRedColor);
    objc_msgSend(v3, sel_setTintColor_, v9);
  }
}

void sub_1C0A0A760(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton);
  id v5 = self;
  if (v3) {
    uint64_t v6 = &selRef_systemBlueColor;
  }
  else {
    uint64_t v6 = &selRef_systemRedColor;
  }
  id v7 = [v5 *v6];
  objc_msgSend(v4, sel_setTintColor_, v7);

  uint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel);
  id v9 = [self *v6];
  objc_msgSend(v8, sel_setBackgroundColor_, v9);
}

void sub_1C0A0A848(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel);
  objc_msgSend(v2, sel_setHidden_, *a2 == 0);
  sub_1C152088C();
  int v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);
}

void sub_1C0A0A90C()
{
  v33.receiver = v0;
  v33.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v33, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton];
  objc_msgSend(v0, sel_bounds);
  double Height = CGRectGetHeight(v34);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, 8.0, 0.0, Height, CGRectGetHeight(v35));
  int v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton];
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v36);
  objc_msgSend(v0, sel_bounds);
  double v5 = Width - CGRectGetHeight(v37);
  objc_msgSend(v0, sel_bounds);
  double v6 = CGRectGetHeight(v38);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v3, sel_setFrame_, v5, 0.0, v6, CGRectGetHeight(v39));
  id v7 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton];
  objc_msgSend(v3, sel_frame);
  double MinX = CGRectGetMinX(v40);
  objc_msgSend(v0, sel_bounds);
  double v9 = MinX - CGRectGetHeight(v41);
  objc_msgSend(v0, sel_bounds);
  double v10 = CGRectGetHeight(v42);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v7, sel_setFrame_, v9, 0.0, v10, CGRectGetHeight(v43));
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton];
  objc_msgSend(v7, sel_frame);
  double v12 = CGRectGetMinX(v44);
  objc_msgSend(v0, sel_bounds);
  double v13 = v12 - CGRectGetHeight(v45);
  objc_msgSend(v0, sel_bounds);
  double v14 = CGRectGetHeight(v46);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v11, sel_setFrame_, v13, 0.0, v14, CGRectGetHeight(v47));
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v48);
  sub_1C151F75C();
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  objc_msgSend(v0, sel_bounds);
  CGFloat v24 = CGRectGetHeight(v49);
  objc_msgSend(v15, sel_setFrame_, UIEdgeInsetsInsetRect(v17, v19, v21, v23, 0.0, v24 + 8.0));
  uint64_t v25 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView];
  objc_msgSend(v0, sel_bounds);
  CGFloat v26 = CGRectGetHeight(v50) + -3.0;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v25, sel_setFrame_, 0.0, v26, CGRectGetWidth(v51), 3.0);
  id v27 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel];
  objc_msgSend(v7, sel_frame);
  double MaxX = CGRectGetMaxX(v52);
  objc_msgSend(v27, sel_frame);
  double v29 = MaxX - CGRectGetWidth(v53);
  objc_msgSend(v7, sel_frame);
  double MinY = CGRectGetMinY(v54);
  objc_msgSend(v27, sel_frame);
  double v31 = CGRectGetWidth(v55);
  objc_msgSend(v27, sel_frame);
  objc_msgSend(v27, sel_setFrame_, v29, MinY, v31, CGRectGetHeight(v56));
  id v32 = objc_msgSend(v27, sel_layer);
  objc_msgSend(v27, sel_frame);
  objc_msgSend(v32, sel_setCornerRadius_, CGRectGetHeight(v57) * 0.5);
}

uint64_t type metadata accessor for DebugFormatEditorStatusView()
{
  return self;
}

void sub_1C0A0AE98()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap;
  sub_1BFD22278();
  int v3 = v2;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton;
  double v5 = self;
  *(void *)&v0[v4] = objc_msgSend(v5, sel_buttonWithType_, 0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton;
  *(void *)&v0[v7] = objc_msgSend(v5, sel_buttonWithType_, 0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap;
  *(void *)&v0[v8] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton;
  *(void *)&v0[v9] = objc_msgSend(v5, sel_buttonWithType_, 0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap;
  *(void *)&v0[v10] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton;
  *(void *)&v0[v11] = objc_msgSend(v5, sel_buttonWithType_, 0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel;
  *(void *)&v0[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView;
  *(void *)&v0[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1B48]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel;
  *(void *)&v0[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

void sub_1C0A0B0B0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C09CFC44(a1, (uint64_t)v24);
  id v3 = objc_msgSend(v1, sel_subviews);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v4 = sub_1C151EBCC();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
LABEL_18:
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C18C7CB0](i, v4);
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_removeFromSuperview);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  sub_1C09CFC44((uint64_t)v24, (uint64_t)v22);
  if (sub_1C0263AB8((uint64_t)v22) != 1)
  {
    uint64_t v9 = v23;
    uint64_t v10 = *(void *)(v23 + 16);
    if (v10)
    {
      double v11 = *(double *)&v2[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_breakpointSize];
      sub_1C0A0C01C(v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
      swift_bridgeObjectRetain();
      for (uint64_t j = (uint64_t *)(v9 + 56); ; j += 4)
      {
        uint64_t v13 = *(j - 1);
        if (__OFSUB__(v13, 1)) {
          break;
        }
        uint64_t v14 = *j;
        uint64_t v15 = *(j - 2);
        double v16 = v11 * (double)(v13 - 1);
        *(void *)&long long v19 = *(j - 3);
        *((void *)&v19 + 1) = v15;
        uint64_t v20 = v13;
        uint64_t v21 = v14;
        objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceBreakpointIndicatorView());
        swift_bridgeObjectRetain();
        uint64_t v17 = swift_retain();
        double v18 = sub_1C0A0B4BC(v17, &v19, 0.0, v16, v11, v11);
        objc_msgSend(v2, sel_addSubview_, v18);

        if (!--v10)
        {
          swift_bridgeObjectRelease();
          sub_1C0A0C01C(v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
          return;
        }
      }
      __break(1u);
      goto LABEL_18;
    }
  }
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceBreakpointView()
{
  return self;
}

char *sub_1C0A0B4BC(uint64_t a1, long long *a2, double a3, double a4, double a5, double a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = MEMORY[0x1E4FBC848] + 8;
  sub_1C0A0C080(0, &qword_1EB8851A0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD758]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  double v18 = (void *)((char *)&v34 - v17);
  long long v34 = *a2;
  uint64_t v20 = *((void *)a2 + 2);
  uint64_t v19 = *((void *)a2 + 3);
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_onTap;
  sub_1C0A0C080(0, (unint64_t *)&qword_1EB871600, v13, MEMORY[0x1E4FAD760]);
  id v23 = objc_allocWithZone(v22);
  CGFloat v24 = v6;
  *(void *)&v6[v21] = objc_msgSend(v23, sel_init);
  *(void *)&v24[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_editor] = a1;
  uint64_t v25 = &v24[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap];
  *(_OWORD *)uint64_t v25 = v34;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v19;
  swift_retain();

  v36.receiver = v24;
  v36.super_class = ObjectType;
  CGFloat v26 = (char *)objc_msgSendSuper2(&v36, sel_initWithFrame_, a3, a4, a5, a6);
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151891C();
  swift_release();
  uint64_t v27 = OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_onTap;
  *double v18 = 1;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FAD748], v15);
  uint64_t v28 = v26;

  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  double v29 = *(void **)&v26[v27];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v30 = v29;

  swift_release();
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1AC8]), sel_initWithDelegate_, v28);
  id v32 = v28;
  objc_msgSend(v32, sel_addInteraction_, v31);

  swift_release();
  return v32;
}

void sub_1C0A0B80C(uint64_t a1, uint64_t *a2)
{
}

void sub_1C0A0B834(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v3, sel_setCornerRadius_, CGRectGetHeight(v13) * 0.5);

  id v4 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v4, sel_setBorderWidth_, 1.0);

  LOBYTE(a1) = sub_1C0A0BC64(a1);
  uint64_t v5 = self;
  uint64_t v6 = v5;
  if (a1)
  {
    id v7 = objc_msgSend(v5, sel_systemBlueColor);
    objc_msgSend(v1, sel_setBackgroundColor_, v7);

    id v8 = objc_msgSend(v1, sel_layer);
    id v9 = objc_msgSend(v6, sel_systemBlueColor);
  }
  else
  {
    id v10 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v1, sel_setBackgroundColor_, v10);

    id v8 = objc_msgSend(v1, sel_layer);
    id v9 = objc_msgSend(v6, sel_secondaryLabelColor);
  }
  id v11 = objc_msgSend(v9, sel_CGColor);

  objc_msgSend(v8, sel_setBorderColor_, v11);
}

uint64_t sub_1C0A0BA2C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1);
  if (result)
  {
    id v3 = (char *)result;
    swift_retain();
    swift_retain();
    sub_1C151894C();
    swift_release();
    swift_release();
    id v4 = v14;
    if (sub_1C0A0BC64((uint64_t)v14))
    {
      uint64_t v5 = v3;
      swift_retain();
      uint64_t v6 = (void *)sub_1C0A0CE58((uint64_t)v14, (uint64_t)v5);
      swift_bridgeObjectRelease();

      uint64_t v14 = v6;
      swift_retain();
      sub_1C151895C();

      swift_release();
    }
    else
    {
      uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap];
      uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 8];
      uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 16];
      uint64_t v10 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 24];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v4 = sub_1C0EE6A98(0, v14[2] + 1, 1, v14);
      }
      unint64_t v12 = v4[2];
      unint64_t v11 = v4[3];
      if (v12 >= v11 >> 1) {
        id v4 = sub_1C0EE6A98((void *)(v11 > 1), v12 + 1, 1, v4);
      }
      v4[2] = v12 + 1;
      CGRect v13 = &v4[4 * v12];
      void v13[4] = v8;
      v13[5] = v7;
      v13[6] = v9;
      v13[7] = v10;
      uint64_t v14 = v4;
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1C0A0C10C((uint64_t *)&v14);
      swift_bridgeObjectRelease_n();
      swift_retain();
      sub_1C151895C();

      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0A0BC64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    uint64_t v11 = *(i - 1);
    uint64_t v10 = *i;
    BOOL v12 = *(i - 3) == v4 && *(i - 2) == v5;
    if (v12 || (sub_1C1520A9C()) && v11 == v6 && v10 == v7) {
      break;
    }
    if (!--v2) {
      return 0;
    }
  }
  return 1;
}

void sub_1C0A0BE6C()
{
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceBreakpointIndicatorView()
{
  return self;
}

void sub_1C0A0BF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C09C87E4(a12, a13, a14, a15, a16);
  }
}

void *sub_1C0A0C01C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void sub_1C0A0C080(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0A0C0CC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0A0C104()
{
  return sub_1C0A0BA2C(v0);
}

uint64_t sub_1C0A0C10C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C06365B8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C0A0C178(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C0A0C178(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_158;
    }
    if (v4) {
      return sub_1C0A0C994(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_166;
  }
  uint64_t v125 = v4;
  uint64_t v121 = result;
  unint64_t v119 = a1;
  if (v4 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_124:
      uint64_t v122 = v8;
      if (v13 >= 2)
      {
        uint64_t v113 = *v119;
        do
        {
          unint64_t v114 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_153;
          }
          if (!v113) {
            goto LABEL_165;
          }
          uint64_t v115 = *(void *)&v11[16 * v114 + 32];
          uint64_t v116 = *(void *)&v11[16 * v13 + 24];
          sub_1C0A0CAD8((char *)(v113 + 32 * v115), (char *)(v113 + 32 * *(void *)&v11[16 * v13 + 16]), v113 + 32 * v116, __dst);
          if (v2) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_154;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_1C063604C((uint64_t)v11);
          }
          if (v114 >= *((void *)v11 + 2)) {
            goto LABEL_155;
          }
          uint64_t v117 = &v11[16 * v114 + 32];
          *(void *)uint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v11 + 2);
          if (v13 > v118) {
            goto LABEL_156;
          }
          memmove(&v11[16 * v13 + 16], &v11[16 * v13 + 32], 16 * (v118 - v13));
          *((void *)v11 + 2) = v118 - 1;
          unint64_t v13 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
      *(void *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v122 = v8;
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v120 = *a1 + 48;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v125;
  uint64_t v130 = *a1;
  while (1)
  {
    uint64_t v14 = v9;
    uint64_t v15 = v9 + 1;
    uint64_t v124 = v11;
    uint64_t v126 = v9;
    if (v9 + 1 < v12)
    {
      uint64_t v16 = (uint64_t *)(v10 + 32 * v15);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      uint64_t v19 = v16[2];
      uint64_t v20 = v16[3];
      uint64_t v21 = (void *)(v10 + 32 * v9);
      uint64_t v22 = v21[2];
      uint64_t v23 = v21[3];
      BOOL v24 = v17 == *v21 && v18 == v21[1];
      if (v24 || (v25 = sub_1C1520A9C(), uint64_t v10 = v130, (v25 & 1) != 0))
      {
        BOOL v26 = v19 < v22;
        if (v19 == v22) {
          BOOL v26 = v20 < v23;
        }
        BOOL v132 = v26;
      }
      else
      {
        int v27 = sub_1C1520A9C();
        uint64_t v10 = v130;
        BOOL v132 = v27;
      }
      uint64_t v12 = v125;
      uint64_t v14 = v126;
      uint64_t v15 = v126 + 2;
      uint64_t v11 = v124;
      if (v126 + 2 < v125)
      {
        uint64_t v28 = (uint64_t *)(v120 + 32 * v126);
        while (1)
        {
          uint64_t v134 = v15;
          uint64_t v29 = v28[4];
          uint64_t v30 = v28[5];
          uint64_t v31 = *v28;
          uint64_t v32 = v28[1];
          BOOL v33 = v28[2] == *(v28 - 2) && v28[3] == *(v28 - 1);
          if (v33 || (v34 = sub_1C1520A9C(), uint64_t v10 = v130, (v34 & 1) != 0))
          {
            int v35 = v29 == v31 ? v30 < v32 : v29 < v31;
          }
          else
          {
            int v35 = sub_1C1520A9C();
            uint64_t v10 = v130;
          }
          uint64_t v11 = v124;
          uint64_t v12 = v125;
          uint64_t v15 = v134;
          if ((v132 ^ v35)) {
            break;
          }
          uint64_t v15 = v134 + 1;
          v28 += 4;
          if (v125 == v134 + 1)
          {
            uint64_t v15 = v125;
            break;
          }
        }
        uint64_t v14 = v126;
      }
      if (v132)
      {
        if (v15 < v14) {
          goto LABEL_159;
        }
        if (v14 < v15)
        {
          uint64_t v36 = 32 * v15;
          uint64_t v37 = 32 * v14;
          uint64_t v38 = v15;
          uint64_t v39 = v14;
          do
          {
            if (v39 != --v15)
            {
              if (!v10) {
                goto LABEL_164;
              }
              CGRect v40 = (_OWORD *)(v10 + v37);
              uint64_t v41 = v10 + v36;
              uint64_t v42 = *(void *)(v10 + v37);
              uint64_t v43 = *(void *)(v10 + v37 + 8);
              long long v44 = *(_OWORD *)(v10 + v37 + 16);
              long long v45 = *(_OWORD *)(v10 + v36 - 16);
              _OWORD *v40 = *(_OWORD *)(v10 + v36 - 32);
              v40[1] = v45;
              *(void *)(v41 - 32) = v42;
              *(void *)(v41 - 24) = v43;
              *(_OWORD *)(v41 - 16) = v44;
            }
            ++v39;
            v36 -= 32;
            v37 += 32;
          }
          while (v39 < v15);
          uint64_t v15 = v38;
        }
      }
    }
    if (v15 < v12)
    {
      if (__OFSUB__(v15, v14)) {
        goto LABEL_157;
      }
      if (v15 - v14 < v121) {
        break;
      }
    }
LABEL_75:
    if (v15 < v14) {
      goto LABEL_152;
    }
    uint64_t v136 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v62 = *((void *)v11 + 2);
    unint64_t v61 = *((void *)v11 + 3);
    unint64_t v13 = v62 + 1;
    uint64_t v10 = v130;
    uint64_t v9 = v136;
    uint64_t v63 = v126;
    if (v62 >= v61 >> 1)
    {
      uint64_t v112 = sub_1C0634CC8((char *)(v61 > 1), v62 + 1, 1, v11);
      uint64_t v9 = v136;
      uint64_t v10 = v130;
      uint64_t v11 = v112;
      uint64_t v63 = v126;
    }
    *((void *)v11 + 2) = v13;
    id v64 = v11 + 32;
    id v65 = &v11[16 * v62 + 32];
    *(void *)id v65 = v63;
    *((void *)v65 + 1) = v9;
    if (v62)
    {
      while (1)
      {
        unint64_t v66 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v71 = &v64[16 * v13];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_141;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_142;
          }
          unint64_t v78 = v13 - 2;
          id v79 = &v64[16 * v13 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_144;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_147;
          }
          if (v83 >= v74)
          {
            BOOL v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_151;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_112;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v95 = *((void *)v11 + 4);
            uint64_t v96 = *((void *)v11 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_106;
          }
          uint64_t v68 = *((void *)v11 + 4);
          uint64_t v67 = *((void *)v11 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_143;
        }
        unint64_t v78 = v13 - 2;
        id v84 = &v64[16 * v13 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_146;
        }
        objc_super v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_149;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_150;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_112:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_114;
        }
LABEL_106:
        if (v89) {
          goto LABEL_145;
        }
        uint64_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_148;
        }
        if (v100 < v88)
        {
          uint64_t v9 = v136;
          goto LABEL_14;
        }
LABEL_114:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v13)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        if (!v10) {
          goto LABEL_163;
        }
        uint64_t v106 = v11;
        uint64_t v107 = &v64[16 * v105];
        uint64_t v108 = *(void *)v107;
        uint64_t v109 = &v64[16 * v66];
        uint64_t v110 = *((void *)v109 + 1);
        sub_1C0A0CAD8((char *)(v10 + 32 * *(void *)v107), (char *)(v10 + 32 * *(void *)v109), v10 + 32 * v110, __dst);
        if (v2) {
          goto LABEL_135;
        }
        if (v110 < v108) {
          goto LABEL_138;
        }
        if (v66 > *((void *)v106 + 2)) {
          goto LABEL_139;
        }
        *(void *)uint64_t v107 = v108;
        *(void *)&v64[16 * v105 + 8] = v110;
        unint64_t v111 = *((void *)v106 + 2);
        if (v66 >= v111) {
          goto LABEL_140;
        }
        uint64_t v11 = v106;
        unint64_t v13 = v111 - 1;
        memmove(&v64[16 * v66], v109 + 16, 16 * (v111 - 1 - v66));
        *((void *)v11 + 2) = v111 - 1;
        uint64_t v10 = v130;
        uint64_t v9 = v136;
        if (v111 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v12 = v125;
    uint64_t v8 = v122;
    if (v9 >= v125) {
      goto LABEL_124;
    }
  }
  uint64_t v46 = v14 + v121;
  if (__OFADD__(v14, v121)) {
    goto LABEL_160;
  }
  if (v46 >= v12) {
    uint64_t v46 = v12;
  }
  if (v46 >= v14)
  {
    if (v15 != v46)
    {
      uint64_t v128 = v2;
      CGRect v47 = (void *)(v10 + 32 * v15);
      uint64_t v123 = v46;
      do
      {
        CGRect v48 = (uint64_t *)(v10 + 32 * v15);
        uint64_t v49 = *v48;
        uint64_t v50 = v48[1];
        uint64_t v52 = v48[2];
        uint64_t v51 = v48[3];
        uint64_t v53 = v14;
        uint64_t v127 = v47;
        uint64_t v135 = v15;
        do
        {
          uint64_t v55 = *(v47 - 2);
          uint64_t v54 = *(v47 - 1);
          BOOL v56 = v49 == *(v47 - 4) && v50 == *(v47 - 3);
          if (v56
            || (uint64_t v131 = *(v47 - 2),
                uint64_t v133 = *(v47 - 1),
                char v57 = sub_1C1520A9C(),
                uint64_t v55 = v131,
                uint64_t v54 = v133,
                uint64_t v15 = v135,
                uint64_t v10 = v130,
                (v57 & 1) != 0))
          {
            BOOL v58 = v52 < v55;
            if (v52 == v55) {
              BOOL v58 = v51 < v54;
            }
            if (!v58) {
              break;
            }
          }
          else
          {
            char v59 = sub_1C1520A9C();
            uint64_t v15 = v135;
            uint64_t v10 = v130;
            if ((v59 & 1) == 0) {
              break;
            }
          }
          if (!v10) {
            goto LABEL_162;
          }
          uint64_t v49 = *v47;
          uint64_t v50 = v47[1];
          uint64_t v52 = v47[2];
          uint64_t v51 = v47[3];
          long long v60 = *((_OWORD *)v47 - 1);
          *(_OWORD *)CGRect v47 = *((_OWORD *)v47 - 2);
          *((_OWORD *)v47 + 1) = v60;
          *(v47 - 3) = v50;
          *(v47 - 2) = v52;
          *(v47 - 1) = v51;
          *(v47 - 4) = v49;
          v47 -= 4;
          ++v53;
        }
        while (v15 != v53);
        ++v15;
        uint64_t v14 = v126;
        CGRect v47 = v127 + 4;
      }
      while (v15 != v123);
      uint64_t v15 = v123;
      uint64_t v2 = v128;
      uint64_t v11 = v124;
    }
    goto LABEL_75;
  }
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C0A0C994(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v17 = result;
  if (a3 != a2)
  {
    uint64_t v22 = *a4;
    uint64_t v4 = (void *)(*a4 + 32 * a3);
LABEL_5:
    unint64_t v5 = (uint64_t *)(v22 + 32 * a3);
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    uint64_t v9 = v5[2];
    uint64_t v8 = v5[3];
    uint64_t v10 = v17;
    uint64_t v18 = v4;
    uint64_t v19 = a3;
    while (1)
    {
      uint64_t v12 = *(v4 - 2);
      uint64_t v11 = *(v4 - 1);
      BOOL v13 = v6 == *(v4 - 4) && v7 == *(v4 - 3);
      if (v13
        || (v20 = *(v4 - 2), uint64_t v21 = *(v4 - 1),
                             uint64_t result = sub_1C1520A9C(),
                             uint64_t v12 = v20,
                             uint64_t v11 = v21,
                             a3 = v19,
                             (result & 1) != 0))
      {
        BOOL v14 = v9 < v12;
        if (v9 == v12) {
          BOOL v14 = v8 < v11;
        }
        if (!v14)
        {
LABEL_4:
          ++a3;
          uint64_t v4 = v18 + 4;
          if (a3 == a2) {
            return result;
          }
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t result = sub_1C1520A9C();
        a3 = v19;
        if ((result & 1) == 0) {
          goto LABEL_4;
        }
      }
      if (!v22) {
        break;
      }
      uint64_t v6 = *v4;
      uint64_t v7 = v4[1];
      uint64_t v9 = v4[2];
      uint64_t v8 = v4[3];
      long long v15 = *((_OWORD *)v4 - 1);
      *(_OWORD *)uint64_t v4 = *((_OWORD *)v4 - 2);
      *((_OWORD *)v4 + 1) = v15;
      *(v4 - 3) = v7;
      *(v4 - 2) = v9;
      *(v4 - 1) = v8;
      *(v4 - 4) = v6;
      v4 -= 4;
      if (a3 == ++v10) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0A0CAD8(char *a1, char *__src, unint64_t a3, char *__dst)
{
  uint64_t v4 = __src;
  unint64_t v5 = a1;
  uint64_t v6 = __src - a1;
  uint64_t v7 = __src - a1 + 31;
  if (__src - a1 >= 0) {
    uint64_t v7 = __src - a1;
  }
  uint64_t v8 = v7 >> 5;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 31;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 5;
  uint64_t v53 = a1;
  uint64_t v52 = __dst;
  long long v45 = __dst;
  if (v8 >= v10 >> 5)
  {
    if (v9 < -31) {
      goto LABEL_63;
    }
    if (__dst != __src || &__src[32 * v11] <= __dst)
    {
      memmove(__dst, __src, 32 * v11);
      __dst = v45;
      unint64_t v5 = a1;
    }
    uint64_t v22 = &__dst[32 * v11];
    uint64_t v51 = v22;
    uint64_t v53 = v4;
    if (v5 >= v4 || v9 < 32)
    {
LABEL_62:
      sub_1C0635DAC((void **)&v53, (const void **)&v52, &v51);
      return 1;
    }
    uint64_t v23 = (char *)(a3 - 32);
    BOOL v24 = v4;
    while (1)
    {
      uint64_t v50 = v4;
      char v25 = v23 + 32;
      BOOL v26 = v22 - 32;
      uint64_t v28 = *((void *)v22 - 2);
      uint64_t v27 = *((void *)v22 - 1);
      uint64_t v29 = *((void *)v24 - 4);
      uint64_t v30 = *((void *)v24 - 3);
      v24 -= 32;
      uint64_t v32 = *((void *)v24 + 2);
      uint64_t v31 = *((void *)v24 + 3);
      if (*((void *)v22 - 4) == v29 && *((void *)v22 - 3) == v30) {
        goto LABEL_44;
      }
      long long v44 = v22;
      uint64_t v41 = *((void *)v22 - 1);
      uint64_t v42 = *((void *)v24 + 3);
      char v34 = sub_1C1520A9C();
      uint64_t v27 = v41;
      uint64_t v31 = v42;
      char v25 = v23 + 32;
      uint64_t v22 = v44;
      __dst = v45;
      unint64_t v5 = a1;
      if (v34)
      {
LABEL_44:
        BOOL v35 = v28 < v32;
        if (v28 == v32) {
          BOOL v35 = v27 < v31;
        }
        uint64_t v36 = v50;
        if (!v35)
        {
LABEL_54:
          uint64_t v51 = v26;
          if (v25 < v22 || v23 >= v22 || v25 != v22)
          {
            long long v39 = *((_OWORD *)v26 + 1);
            *(_OWORD *)uint64_t v23 = *(_OWORD *)v26;
            *((_OWORD *)v23 + 1) = v39;
          }
          BOOL v24 = v36;
          uint64_t v22 = v26;
          if (v36 <= v5) {
            goto LABEL_62;
          }
          goto LABEL_59;
        }
      }
      else
      {
        char v38 = sub_1C1520A9C();
        char v25 = v23 + 32;
        uint64_t v22 = v44;
        __dst = v45;
        unint64_t v5 = a1;
        uint64_t v36 = v50;
        if ((v38 & 1) == 0) {
          goto LABEL_54;
        }
      }
      if (v25 != v36 || v23 >= v36)
      {
        long long v37 = *((_OWORD *)v24 + 1);
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v37;
      }
      uint64_t v53 = v24;
      if (v24 <= v5) {
        goto LABEL_62;
      }
LABEL_59:
      v23 -= 32;
      uint64_t v4 = v24;
      if (v22 <= __dst) {
        goto LABEL_62;
      }
    }
  }
  if (v6 >= -31)
  {
    if (__dst != a1 || &a1[32 * v8] <= __dst)
    {
      memmove(__dst, a1, 32 * v8);
      __dst = v45;
      unint64_t v5 = a1;
    }
    uint64_t v43 = &__dst[32 * v8];
    uint64_t v51 = v43;
    if ((unint64_t)v4 < a3 && v6 >= 32)
    {
      while (1)
      {
        uint64_t v12 = *((void *)v4 + 2);
        uint64_t v13 = *((void *)v4 + 3);
        uint64_t v14 = *((void *)__dst + 2);
        uint64_t v15 = *((void *)__dst + 3);
        BOOL v16 = *(void *)v4 == *(void *)__dst && *((void *)v4 + 1) == *((void *)__dst + 1);
        if (v16 || (v46 = __dst, __srcb = v5, v17 = sub_1C1520A9C(), __dst = v46, unint64_t v5 = __srcb, (v17 & 1) != 0))
        {
          if (v12 == v14)
          {
            if (v13 < v15) {
              goto LABEL_23;
            }
          }
          else if (v12 < v14)
          {
            goto LABEL_23;
          }
        }
        else
        {
          char v21 = sub_1C1520A9C();
          __dst = v46;
          unint64_t v5 = __srcb;
          if (v21)
          {
LABEL_23:
            uint64_t v19 = v4 + 32;
            if (v5 < v4 || v5 >= v19 || v5 != v4)
            {
              long long v20 = *((_OWORD *)v4 + 1);
              *(_OWORD *)unint64_t v5 = *(_OWORD *)v4;
              *((_OWORD *)v5 + 1) = v20;
            }
            goto LABEL_27;
          }
        }
        if (v5 != __dst)
        {
          long long v18 = *((_OWORD *)__dst + 1);
          *(_OWORD *)unint64_t v5 = *(_OWORD *)__dst;
          *((_OWORD *)v5 + 1) = v18;
        }
        __dst += 32;
        uint64_t v52 = __dst;
        uint64_t v19 = v4;
LABEL_27:
        v5 += 32;
        if (__dst < v43)
        {
          uint64_t v4 = v19;
          if ((unint64_t)v19 < a3) {
            continue;
          }
        }
        uint64_t v53 = v5;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
LABEL_63:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0A0CE58(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = (void *)(a2 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap);
    uint64_t v30 = -(uint64_t)v2;
    uint64_t v5 = result + 56;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    uint64_t v26 = result + 56;
    unint64_t v27 = *(void *)(result + 16);
    uint64_t v29 = (void *)(a2 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap);
    while (1)
    {
      uint64_t v28 = v6;
      if (v3 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v3;
      }
      uint64_t v8 = -(uint64_t)v7;
      for (uint64_t i = (uint64_t *)(v5 + 32 * v3++); ; i += 4)
      {
        if (v8 + v3 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v11 = *(i - 3);
        uint64_t v12 = *(i - 2);
        uint64_t v13 = *(i - 1);
        uint64_t v14 = *i;
        uint64_t v15 = v4[2];
        uint64_t v16 = v4[3];
        if (v11 == *v4 && v12 == v4[1]) {
          break;
        }
        uint64_t v18 = *(i - 2);
        uint64_t v19 = *(i - 3);
        uint64_t v20 = *(i - 1);
        uint64_t v21 = *i;
        uint64_t v22 = v8;
        uint64_t result = sub_1C1520A9C();
        uint64_t v8 = v22;
        uint64_t v14 = v21;
        uint64_t v13 = v20;
        uint64_t v11 = v19;
        uint64_t v12 = v18;
        uint64_t v4 = v29;
        if ((result & 1) == 0 || v13 != v15 || v14 != v16) {
          goto LABEL_21;
        }
LABEL_12:
        ++v3;
        if (v30 + v3 == 1) {
          return v28;
        }
      }
      if (v13 == v15 && v14 == v16) {
        goto LABEL_12;
      }
LABEL_21:
      swift_bridgeObjectRetain();
      uint64_t v6 = v28;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1C05F7B48(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v6 = v28;
      }
      uint64_t v5 = v26;
      unint64_t v2 = v27;
      unint64_t v24 = *(void *)(v6 + 16);
      unint64_t v23 = *(void *)(v6 + 24);
      if (v24 >= v23 >> 1)
      {
        uint64_t result = sub_1C05F7B48(v23 > 1, v24 + 1, 1);
        uint64_t v5 = v26;
        unint64_t v2 = v27;
        uint64_t v6 = v28;
      }
      *(void *)(v6 + 16) = v24 + 1;
      char v25 = (void *)(v6 + 32 * v24);
      v25[4] = v11;
      v25[5] = v12;
      v25[6] = v13;
      v25[7] = v14;
      if (!(v30 + v3)) {
        return v6;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0A0D038()
{
  uint64_t v1 = v0;
  sub_1C0A0D2D0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1C151CEDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D48]), sel_initWithView_, v1);
  objc_msgSend(v1, sel_bounds);
  double v14 = UIEdgeInsetsInsetRect(v10, v11, v12, v13, -8.0, -8.0);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  id v21 = objc_msgSend(v1, sel_superview);
  objc_msgSend(v1, sel_convertRect_toView_, v21, v14, v16, v18, v20);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;

  sub_1BFC39268(0, &qword_1EA1A2598);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB0E90], v5);
  *uint64_t v4 = v23;
  v4[1] = v25;
  v4[2] = v27;
  v4[3] = v29;
  v4[4] = 0x4010000000000000;
  uint64_t v30 = *MEMORY[0x1E4FB0DC8];
  uint64_t v31 = sub_1C151CE4C();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v32 + 104))(v4, v30, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v4, 0, 1, v31);
  return sub_1C151F3AC();
}

void sub_1C0A0D2D0()
{
  if (!qword_1EA1A2590)
  {
    sub_1C151CE4C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2590);
    }
  }
}

uint64_t sub_1C0A0D328(uint64_t a1, uint64_t a2)
{
  sub_1C0A0D724();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = type metadata accessor for FormatPluginData();
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t refreshed = type metadata accessor for FormatRefreshBlueprintModifier();
  MEMORY[0x1F4188790](refreshed);
  double v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v14);
  double v16 = &v20[-v15 - 8];
  sub_1BFC66384(v2 + 16, (uint64_t)v20);
  sub_1C0A0D77C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  sub_1C0A0D77C(a2, (uint64_t)v7, (uint64_t (*)(void))sub_1C0A0D724);
  sub_1C13CE104((uint64_t)v20, (uint64_t)v10, (uint64_t)v7, v16);
  sub_1C0A0D77C((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatRefreshBlueprintModifier);
  sub_1C0A0D7E4();
  swift_allocObject();
  sub_1C0A0D8D0((unint64_t *)&unk_1EB86F278, (void (*)(uint64_t))type metadata accessor for FormatRefreshBlueprintModifier);
  uint64_t v17 = sub_1C151AC8C();
  sub_1C0A0D918((uint64_t)v16);
  return v17;
}

uint64_t type metadata accessor for FormatBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_1C0A0D570()
{
  return sub_1C0A0D8D0((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
}

uint64_t sub_1C0A0D5B8()
{
  return sub_1C0A0D8D0((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
}

uint64_t sub_1C0A0D600(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatPluginData();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFC66384(*v1 + 16, (uint64_t)v8);
  sub_1C0A0D77C(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  sub_1C00BCC68((uint64_t)v8, (uint64_t)v5, v9);
  sub_1C0A0D974((uint64_t)v9, (uint64_t)v8);
  sub_1C0A0D7E4();
  swift_allocObject();
  sub_1C0A0D9D0();
  uint64_t v6 = sub_1C151AC8C();
  sub_1C0A0DA24((uint64_t)v9);
  return v6;
}

uint64_t sub_1C0A0D700(uint64_t a1, uint64_t a2)
{
  return sub_1C0A0D328(a1, a2);
}

void sub_1C0A0D724()
{
  if (!qword_1EB864250)
  {
    sub_1C151AF6C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864250);
    }
  }
}

uint64_t sub_1C0A0D77C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C0A0D7E4()
{
  if (!qword_1EB8641B0)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1C0A0D8D0((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    sub_1C0A0D8D0((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v0 = sub_1C151AC9C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8641B0);
    }
  }
}

uint64_t sub_1C0A0D8D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0A0D918(uint64_t a1)
{
  uint64_t refreshed = type metadata accessor for FormatRefreshBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(refreshed - 8) + 8))(a1, refreshed);
  return a1;
}

uint64_t sub_1C0A0D974(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C0A0D9D0()
{
  unint64_t result = qword_1EB868FC0;
  if (!qword_1EB868FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868FC0);
  }
  return result;
}

uint64_t sub_1C0A0DA24(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0A0DA78(char a1)
{
  uint64_t result = 1684828002;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x63696C617469;
      break;
    case 2:
      uint64_t result = 0x6E696C7265646E75;
      break;
    case 3:
      uint64_t result = 0x6874656B69727473;
      break;
    case 4:
      uint64_t result = 0x7069726373627573;
      break;
    case 5:
      uint64_t result = 0x7263737265707573;
      break;
    case 6:
      uint64_t result = 1701080931;
      break;
    case 7:
      uint64_t result = 1802398060;
      break;
    case 8:
      uint64_t result = 0x31676E6964616568;
      break;
    case 9:
      uint64_t result = 0x32676E6964616568;
      break;
    case 10:
      uint64_t result = 0x33676E6964616568;
      break;
    case 11:
      uint64_t result = 0x34676E6964616568;
      break;
    case 12:
      uint64_t result = 0x35676E6964616568;
      break;
    case 13:
      uint64_t result = 0x36676E6964616568;
      break;
    case 14:
      uint64_t result = 0x7061726761726170;
      break;
    case 15:
      uint64_t result = 1851879539;
      break;
    case 16:
      uint64_t result = 6648432;
      break;
    case 17:
      uint64_t result = 0x6567616D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A0DC80(void *a1, unsigned __int8 a2)
{
  uint64_t result = sub_1C1515BCC();
  if (a2 - 6 >= 0xC)
  {
    switch(a2)
    {
      case 2u:
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v11 = 1;
        char v12 = 0;
        sub_1C151593C();
        sub_1BFF676C4(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
        uint64_t v5 = (void (*)(unsigned char *, void))sub_1C1515BAC();
        sub_1BFF678F0();
        sub_1BFF67BF4();
        goto LABEL_5;
      case 3u:
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v11 = 1;
        char v12 = 0;
        sub_1C151593C();
        sub_1BFF676C4(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
        uint64_t v5 = (void (*)(unsigned char *, void))sub_1C1515BAC();
        sub_1BFF678F0();
        sub_1BFF67AA4();
LABEL_5:
        sub_1C1515D5C();
        v5(v10, 0);
        goto LABEL_9;
      case 4u:
        swift_getKeyPath();
        swift_getKeyPath();
        objc_msgSend(a1, sel_pointSize);
        double v7 = v6 * -0.125;
        goto LABEL_8;
      case 5u:
        swift_getKeyPath();
        swift_getKeyPath();
        objc_msgSend(a1, sel_pointSize);
        double v7 = v8 / 3.0;
LABEL_8:
        uint64_t v11 = *(void *)&v7;
        char v12 = 0;
        sub_1C151593C();
        sub_1BFF676C4(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
        uint64_t v9 = (void (*)(unsigned char *, void))sub_1C1515BAC();
        sub_1BFF678F0();
        sub_1BFF67CF0();
        sub_1C1515D5C();
        v9(v10, 0);
LABEL_9:
        uint64_t result = swift_release();
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1C0A0DF90(char a1)
{
  uint64_t result = 1684828002;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x63696C617469;
      break;
    case 2:
      uint64_t result = 0x6E696C7265646E75;
      break;
    case 3:
      uint64_t result = 0x6874656B69727473;
      break;
    case 4:
      uint64_t result = 0x7069726373627573;
      break;
    case 5:
      uint64_t result = 0x7263737265707573;
      break;
    case 6:
      uint64_t result = 1701080931;
      break;
    case 7:
      uint64_t result = 1802398060;
      break;
    case 8:
      uint64_t result = 0x31676E6964616568;
      break;
    case 9:
      uint64_t result = 0x32676E6964616568;
      break;
    case 10:
      uint64_t result = 0x33676E6964616568;
      break;
    case 11:
      uint64_t result = 0x34676E6964616568;
      break;
    case 12:
      uint64_t result = 0x35676E6964616568;
      break;
    case 13:
      uint64_t result = 0x36676E6964616568;
      break;
    case 14:
      uint64_t result = 0x7061726761726170;
      break;
    case 15:
      uint64_t result = 1851879539;
      break;
    case 16:
      uint64_t result = 6648432;
      break;
    case 17:
      uint64_t result = 0x6567616D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A0E198@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0A0EF18();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A0E1C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0A0DF90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0A0E1F4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A0E254()
{
  return sub_1C151EAEC();
}

void sub_1C0A0E2A4(void *a1@<X8>)
{
  *a1 = &unk_1F1B6C2C0;
}

uint64_t sub_1C0A0E2B4()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0A0DF90(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0A0E318()
{
  sub_1C0A0DF90(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A0E36C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0A0DF90(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0A0E3CC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C0A0DF90(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0A0DF90(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0A0E458()
{
  uint64_t v0 = sub_1C151E6BC();
  BOOL v2 = v0 == 98 && v1 == 0xE100000000000000;
  if (v2
    || (v3 = v0, uint64_t v4 = v1, (sub_1C1520A9C() & 1) != 0)
    || (v3 == 0x676E6F727473 ? (BOOL v6 = v4 == 0xE600000000000000) : (BOOL v6 = 0), v6 || (sub_1C1520A9C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  else if (v3 == 28005 && v4 == 0xE200000000000000 {
         || (sub_1C1520A9C() & 1) != 0
  }
         || v3 == 105 && v4 == 0xE100000000000000
         || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
  else if (v3 == 112 && v4 == 0xE100000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 14;
  }
  else if (v3 == 7103844 && v4 == 0xE300000000000000 {
         || (sub_1C1520A9C() & 1) != 0
  }
         || v3 == 115 && v4 == 0xE100000000000000
         || (sub_1C1520A9C() & 1) != 0
         || v3 == 0x656B69727473 && v4 == 0xE600000000000000
         || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 3;
  }
  else if (v3 == 117 && v4 == 0xE100000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 2;
  }
  else if (v3 == 97 && v4 == 0xE100000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 7;
  }
  else if (v3 == 6452595 && v4 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 4;
  }
  else if (v3 == 7370099 && v4 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 5;
  }
  else if (v3 == 12648 && v4 == 0xE200000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 8;
  }
  else if (v3 == 12904 && v4 == 0xE200000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 9;
  }
  else if (v3 == 13160 && v4 == 0xE200000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 10;
  }
  else if (v3 == 13416 && v4 == 0xE200000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 11;
  }
  else if (v3 == 13672 && v4 == 0xE200000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 12;
  }
  else if (v3 == 13928 && v4 == 0xE200000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 13;
  }
  else if (v3 == 1701080931 && v4 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 6;
  }
  else if (v3 == 1851879539 && v4 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 15;
  }
  else if (v3 == 6648432 && v4 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 16;
  }
  else if (v3 == 6778217 && v4 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 17;
  }
  else
  {
    char v7 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_release();
    if (v7) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

uint64_t sub_1C0A0EBB8()
{
  uint64_t v0 = sub_1C151E6BC();
  BOOL v2 = v0 == 1819112552 && v1 == 0xE400000000000000;
  if (v2 || (v3 = v0, uint64_t v4 = v1, (sub_1C1520A9C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  else
  {
    BOOL v6 = v3 == 2036625250 && v4 == 0xE400000000000000;
    if (v6 || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 1;
    }
    else if (v3 == 29282 && v4 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 2;
    }
    else
    {
      char v7 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_release();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FormatAttributedStringAnnotation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A0EDE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAttributedStringAnnotation()
{
  return &type metadata for FormatAttributedStringAnnotation;
}

unint64_t sub_1C0A0EE24()
{
  unint64_t result = qword_1EB863158;
  if (!qword_1EB863158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863158);
  }
  return result;
}

uint64_t sub_1C0A0EE78()
{
  return sub_1BFF676C4(&qword_1EA1A25A0, (void (*)(uint64_t))sub_1C0A0EEC0);
}

void sub_1C0A0EEC0()
{
  if (!qword_1EA1A25A8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A25A8);
    }
  }
}

uint64_t sub_1C0A0EF18()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12) {
    return 18;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C0A0EF6C()
{
  unint64_t result = qword_1EB863160;
  if (!qword_1EB863160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863160);
  }
  return result;
}

uint64_t FeedIssueScoringContext.configurationSet.getter()
{
  return qword_1C1586ED8[*v0];
}

id FeedIssueScoringContext.scoringConfiguration(treatment:)(void *a1)
{
  return sub_1C0A0F204(a1, (SEL *)&selRef_defaultScoringConfig, (SEL *)&selRef_curatedIssuesScoringConfig, (SEL *)&selRef_magazineFeedIssueScoringConfig);
}

id FeedIssueScoringContext.topicsConfiguration(treatment:)(void *a1)
{
  return sub_1C0A0F204(a1, (SEL *)&selRef_defaultTopicsConfig, (SEL *)&selRef_curatedIssuesTopicsConfig, (SEL *)&selRef_magazineFeedIssueTopicsConfig);
}

id FeedIssueScoringContext.ontologyLevelConfiguration(treatment:)(void *a1)
{
  return sub_1C0A0F204(a1, (SEL *)&selRef_defaultOntologyLevelConfig, (SEL *)&selRef_curatedIssuesOntologyLevelConfig, (SEL *)&selRef_magazineFeedIssueOntologyLevelConfig);
}

id sub_1C0A0F204(id result, SEL *a2, SEL *a3, SEL *a4)
{
  if (*v4)
  {
    if (*v4 != 1) {
      goto LABEL_7;
    }
    unint64_t result = [result *a3];
    if (result) {
      return result;
    }
    __break(1u);
  }
  unint64_t result = [result *a2];
  if (result) {
    return result;
  }
  __break(1u);
LABEL_7:
  unint64_t result = [result *a4];
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t FeedScoringContext.shadowScoringConfiguration(treatment:)(void *a1)
{
  return sub_1C0A0FFE8(a1, (uint64_t (*)(void))FeedHeadlineScoringContext.shadowScoringConfiguration(treatment:), (SEL *)&selRef_shadowDefaultScoringConfig, (SEL *)&selRef_shadowCuratedIssuesScoringConfig, (SEL *)&selRef_shadowMagazineFeedIssueScoringConfig);
}

uint64_t FeedHeadlineScoringContext.shadowScoringConfiguration(treatment:)(id a1)
{
  switch(*v1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      goto LABEL_6;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_14;
    case 7:
      goto LABEL_16;
    case 8:
      goto LABEL_18;
    case 9:
      goto LABEL_20;
    case 0xA:
      goto LABEL_22;
    case 0xB:
      goto LABEL_24;
    case 0xC:
      goto LABEL_26;
    case 0xD:
      goto LABEL_28;
    case 0xE:
      goto LABEL_30;
    case 0xF:
      goto LABEL_32;
    case 0x10:
      goto LABEL_34;
    case 0x11:
      goto LABEL_36;
    case 0x12:
      goto LABEL_38;
    case 0x13:
      goto LABEL_40;
    case 0x14:
      goto LABEL_42;
    case 0x15:
      goto LABEL_44;
    case 0x16:
      goto LABEL_46;
    case 0x17:
      goto LABEL_48;
    case 0x18:
      goto LABEL_50;
    case 0x19:
      goto LABEL_52;
    case 0x1A:
      goto LABEL_74;
    case 0x1B:
      goto LABEL_54;
    case 0x1C:
      goto LABEL_56;
    case 0x1D:
      goto LABEL_58;
    case 0x1E:
      goto LABEL_60;
    case 0x1F:
      goto LABEL_62;
    case 0x20:
      goto LABEL_64;
    case 0x21:
      goto LABEL_66;
    case 0x22:
      goto LABEL_68;
    case 0x23:
      goto LABEL_70;
    case 0x24:
      goto LABEL_72;
    default:
      a1 = objc_msgSend(a1, sel_shadowDefaultScoringConfig);
      id v2 = a1;
      if (a1) {
        goto LABEL_75;
      }
      __break(1u);
LABEL_4:
      a1 = objc_msgSend(a1, sel_shadowLegacyAudioFeedScoringConfig);
      id v2 = a1;
      if (a1) {
        goto LABEL_75;
      }
      __break(1u);
LABEL_6:
      a1 = objc_msgSend(a1, sel_shadowAudioFeedScoringConfig);
      id v2 = a1;
      if (!a1)
      {
        __break(1u);
LABEL_8:
        a1 = objc_msgSend(a1, sel_shadowArticleRecirculationPrimaryScoringConfig);
        id v2 = a1;
        if (!a1)
        {
          __break(1u);
LABEL_10:
          a1 = objc_msgSend(a1, sel_shadowArticleRecirculationSecondaryScoringConfig);
          id v2 = a1;
          if (!a1)
          {
            __break(1u);
LABEL_12:
            a1 = objc_msgSend(a1, sel_shadowArticleRecirculationTertiaryScoringConfig);
            id v2 = a1;
            if (!a1)
            {
              __break(1u);
LABEL_14:
              a1 = objc_msgSend(a1, sel_shadowArticleRecirculationQuaternaryScoringConfig);
              id v2 = a1;
              if (!a1)
              {
                __break(1u);
LABEL_16:
                a1 = objc_msgSend(a1, sel_shadowBestOfBundleScoringConfig);
                id v2 = a1;
                if (!a1)
                {
                  __break(1u);
LABEL_18:
                  a1 = objc_msgSend(a1, sel_shadowCuratedScoringConfig);
                  id v2 = a1;
                  if (!a1)
                  {
                    __break(1u);
LABEL_20:
                    a1 = objc_msgSend(a1, sel_shadowForYouScoringConfig);
                    id v2 = a1;
                    if (!a1)
                    {
                      __break(1u);
LABEL_22:
                      a1 = objc_msgSend(a1, sel_shadowGreatStoriesYouMissedScoringConfig);
                      id v2 = a1;
                      if (!a1)
                      {
                        __break(1u);
LABEL_24:
                        a1 = objc_msgSend(a1, sel_shadowLatestStoriesScoringConfig);
                        id v2 = a1;
                        if (!a1)
                        {
                          __break(1u);
LABEL_26:
                          a1 = objc_msgSend(a1, sel_shadowLocalNewsScoringConfig);
                          id v2 = a1;
                          if (!a1)
                          {
                            __break(1u);
LABEL_28:
                            a1 = objc_msgSend(a1, sel_shadowMagazineFeedArticleScoringConfig);
                            id v2 = a1;
                            if (!a1)
                            {
                              __break(1u);
LABEL_30:
                              a1 = objc_msgSend(a1, sel_shadowNewspaperMagazineFeedScoringConfig);
                              id v2 = a1;
                              if (!a1)
                              {
                                __break(1u);
LABEL_32:
                                a1 = objc_msgSend(a1, sel_shadowTopicFeedScoringConfig);
                                id v2 = a1;
                                if (!a1)
                                {
                                  __break(1u);
LABEL_34:
                                  a1 = objc_msgSend(a1, sel_shadowMySportsGroupScoringConfig);
                                  id v2 = a1;
                                  if (!a1)
                                  {
                                    __break(1u);
LABEL_36:
                                    a1 = objc_msgSend(a1, sel_shadowMySportsGroupForYouScoringConfig);
                                    id v2 = a1;
                                    if (!a1)
                                    {
                                      __break(1u);
LABEL_38:
                                      a1 = objc_msgSend(a1, sel_shadowMySportsTopicsScoringConfig);
                                      id v2 = a1;
                                      if (!a1)
                                      {
                                        __break(1u);
LABEL_40:
                                        a1 = objc_msgSend(a1, sel_shadowSportsTopStoriesScoringConfig);
                                        id v2 = a1;
                                        if (!a1)
                                        {
                                          __break(1u);
LABEL_42:
                                          a1 = objc_msgSend(a1, sel_shadowIntroToSportsGroupScoringConfig);
                                          id v2 = a1;
                                          if (!a1)
                                          {
                                            __break(1u);
LABEL_44:
                                            a1 = objc_msgSend(a1, sel_shadowIntroToSportsGroupForYouScoringConfig);
                                            id v2 = a1;
                                            if (!a1)
                                            {
                                              __break(1u);
LABEL_46:
                                              a1 = objc_msgSend(a1, sel_shadowArticleListTagFeedGroupScoringConfig);
                                              id v2 = a1;
                                              if (!a1)
                                              {
                                                __break(1u);
LABEL_48:
                                                a1 = objc_msgSend(a1, sel_shadowTagFeedScoringConfig);
                                                id v2 = a1;
                                                if (!a1)
                                                {
                                                  __break(1u);
LABEL_50:
                                                  a1 = objc_msgSend(a1, sel_shadowHighlightsGroupScoringConfig);
                                                  id v2 = a1;
                                                  if (!a1)
                                                  {
                                                    __break(1u);
LABEL_52:
                                                    a1 = objc_msgSend(a1, sel_shadowNewspaperTodayFeedScoringConfig);
                                                    id v2 = a1;
                                                    if (!a1)
                                                    {
                                                      __break(1u);
LABEL_54:
                                                      a1 = objc_msgSend(a1, sel_shadowLocalSectionGroupScoringConfig);
                                                      id v2 = a1;
                                                      if (!a1)
                                                      {
                                                        __break(1u);
LABEL_56:
                                                        a1 = objc_msgSend(a1, sel_shadowNewspaperSectionGroupScoringConfig);
                                                        id v2 = a1;
                                                        if (!a1)
                                                        {
                                                          __break(1u);
LABEL_58:
                                                          a1 = objc_msgSend(a1, sel_shadowSportsEventArticlesGroupScoringConfig);
                                                          id v2 = a1;
                                                          if (!a1)
                                                          {
                                                            __break(1u);
LABEL_60:
                                                            a1 = objc_msgSend(a1, sel_shadowTagForYouGroupScoringConfig);
                                                            id v2 = a1;
                                                            if (!a1)
                                                            {
                                                              __break(1u);
LABEL_62:
                                                              a1 = objc_msgSend(a1, sel_shadowTagRecentStoriesScoringConfig);
                                                              id v2 = a1;
                                                              if (!a1)
                                                              {
                                                                __break(1u);
LABEL_64:
                                                                a1 = objc_msgSend(a1, sel_shadowTagDateRangeScoringConfig);
                                                                id v2 = a1;
                                                                if (!a1)
                                                                {
                                                                  __break(1u);
LABEL_66:
                                                                  a1 = objc_msgSend(a1, sel_shadowSportsEventTopicGroupScoringConfig);
                                                                  id v2 = a1;
                                                                  if (!a1)
                                                                  {
                                                                    __break(1u);
LABEL_68:
                                                                    a1 = objc_msgSend(a1, sel_shadowAffinityGroupScoringConfig);
                                                                    id v2 = a1;
                                                                    if (!a1)
                                                                    {
                                                                      __break(1u);
LABEL_70:
                                                                      a1 = objc_msgSend(a1, sel_shadowTodayWidgetScoringConfig);
                                                                      id v2 = a1;
                                                                      if (!a1)
                                                                      {
                                                                        __break(1u);
LABEL_72:
                                                                        a1 = objc_msgSend(a1, sel_shadowTagWidgetScoringConfig);
                                                                        id v2 = a1;
                                                                        if (!a1)
                                                                        {
                                                                          __break(1u);
LABEL_74:
                                                                          id v2 = objc_msgSend(a1, sel_shadowMoreForYouScoringConfig);
                                                                          if (!v2)
                                                                          {
                                                                            __break(1u);
                                                                            JUMPOUT(0x1C0A0F7B0);
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_75:
      uint64_t v3 = sub_1C151E33C();

      return v3;
  }
}

uint64_t FeedIssueScoringContext.shadowScoringConfiguration(treatment:)(void *a1)
{
  return sub_1C0A106C4(a1, (SEL *)&selRef_shadowDefaultScoringConfig, (SEL *)&selRef_shadowCuratedIssuesScoringConfig, (SEL *)&selRef_shadowMagazineFeedIssueScoringConfig);
}

uint64_t FeedScoringContext.shadowTopicsConfiguration(treatment:)(id a1)
{
  switch((unsigned __int16)*v1 >> 14)
  {
    case 1:
      if (!*v1) {
        goto LABEL_9;
      }
      if (*v1 != 1) {
        goto LABEL_11;
      }
      a1 = objc_msgSend(a1, sel_shadowCuratedIssuesTopicsConfig);
      if (a1) {
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_6;
    case 3:
      a1 = objc_msgSend(a1, sel_shadowDefaultTopicsConfig);
      if (!a1)
      {
        __break(1u);
LABEL_9:
        a1 = objc_msgSend(a1, sel_shadowDefaultTopicsConfig);
        if (!a1)
        {
          __break(1u);
LABEL_11:
          a1 = objc_msgSend(a1, sel_shadowMagazineFeedIssueTopicsConfig);
          if (!a1)
          {
            __break(1u);
            JUMPOUT(0x1C0A0F968);
          }
        }
      }
LABEL_12:
      uint64_t v3 = a1;
      uint64_t v4 = sub_1C151EBCC();

      uint64_t result = v4;
      break;
    default:
LABEL_6:
      uint64_t result = FeedHeadlineScoringContext.shadowTopicsConfiguration(treatment:)(a1);
      break;
  }
  return result;
}

uint64_t FeedHeadlineScoringContext.shadowTopicsConfiguration(treatment:)(id a1)
{
  switch(*v1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      goto LABEL_6;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_14;
    case 7:
      goto LABEL_16;
    case 8:
      goto LABEL_18;
    case 9:
      goto LABEL_20;
    case 0xA:
      goto LABEL_22;
    case 0xB:
      goto LABEL_24;
    case 0xC:
      goto LABEL_26;
    case 0xD:
      goto LABEL_28;
    case 0xE:
      goto LABEL_30;
    case 0xF:
      goto LABEL_32;
    case 0x10:
      goto LABEL_34;
    case 0x11:
      goto LABEL_36;
    case 0x12:
      goto LABEL_38;
    case 0x13:
      goto LABEL_40;
    case 0x14:
      goto LABEL_42;
    case 0x15:
      goto LABEL_44;
    case 0x16:
      goto LABEL_46;
    case 0x17:
      goto LABEL_48;
    case 0x18:
      goto LABEL_50;
    case 0x19:
      goto LABEL_52;
    case 0x1A:
      goto LABEL_74;
    case 0x1B:
      goto LABEL_54;
    case 0x1C:
      goto LABEL_56;
    case 0x1D:
      goto LABEL_58;
    case 0x1E:
      goto LABEL_60;
    case 0x1F:
      goto LABEL_62;
    case 0x20:
      goto LABEL_64;
    case 0x21:
      goto LABEL_66;
    case 0x22:
      goto LABEL_68;
    case 0x23:
      goto LABEL_70;
    case 0x24:
      goto LABEL_72;
    default:
      a1 = objc_msgSend(a1, sel_shadowDefaultTopicsConfig);
      id v2 = a1;
      if (a1) {
        goto LABEL_75;
      }
      __break(1u);
LABEL_4:
      a1 = objc_msgSend(a1, sel_shadowLegacyAudioFeedTopicsConfig);
      id v2 = a1;
      if (a1) {
        goto LABEL_75;
      }
      __break(1u);
LABEL_6:
      a1 = objc_msgSend(a1, sel_shadowAudioFeedTopicsConfig);
      id v2 = a1;
      if (!a1)
      {
        __break(1u);
LABEL_8:
        a1 = objc_msgSend(a1, sel_shadowArticleRecirculationPrimaryTopicsConfig);
        id v2 = a1;
        if (!a1)
        {
          __break(1u);
LABEL_10:
          a1 = objc_msgSend(a1, sel_shadowArticleRecirculationSecondaryTopicsConfig);
          id v2 = a1;
          if (!a1)
          {
            __break(1u);
LABEL_12:
            a1 = objc_msgSend(a1, sel_shadowArticleRecirculationTertiaryTopicsConfig);
            id v2 = a1;
            if (!a1)
            {
              __break(1u);
LABEL_14:
              a1 = objc_msgSend(a1, sel_shadowArticleRecirculationQuaternaryTopicsConfig);
              id v2 = a1;
              if (!a1)
              {
                __break(1u);
LABEL_16:
                a1 = objc_msgSend(a1, sel_shadowBestOfBundleTopicsConfig);
                id v2 = a1;
                if (!a1)
                {
                  __break(1u);
LABEL_18:
                  a1 = objc_msgSend(a1, sel_shadowCuratedTopicsConfig);
                  id v2 = a1;
                  if (!a1)
                  {
                    __break(1u);
LABEL_20:
                    a1 = objc_msgSend(a1, sel_shadowForYouTopicsConfig);
                    id v2 = a1;
                    if (!a1)
                    {
                      __break(1u);
LABEL_22:
                      a1 = objc_msgSend(a1, sel_shadowGreatStoriesYouMissedTopicsConfig);
                      id v2 = a1;
                      if (!a1)
                      {
                        __break(1u);
LABEL_24:
                        a1 = objc_msgSend(a1, sel_shadowLatestStoriesTopicsConfig);
                        id v2 = a1;
                        if (!a1)
                        {
                          __break(1u);
LABEL_26:
                          a1 = objc_msgSend(a1, sel_shadowLocalNewsTopicsConfig);
                          id v2 = a1;
                          if (!a1)
                          {
                            __break(1u);
LABEL_28:
                            a1 = objc_msgSend(a1, sel_shadowMagazineFeedArticleTopicsConfig);
                            id v2 = a1;
                            if (!a1)
                            {
                              __break(1u);
LABEL_30:
                              a1 = objc_msgSend(a1, sel_shadowNewspaperMagazineFeedTopicsConfig);
                              id v2 = a1;
                              if (!a1)
                              {
                                __break(1u);
LABEL_32:
                                a1 = objc_msgSend(a1, sel_shadowTopicFeedTopicsConfig);
                                id v2 = a1;
                                if (!a1)
                                {
                                  __break(1u);
LABEL_34:
                                  a1 = objc_msgSend(a1, sel_shadowMySportsGroupTopicsConfig);
                                  id v2 = a1;
                                  if (!a1)
                                  {
                                    __break(1u);
LABEL_36:
                                    a1 = objc_msgSend(a1, sel_shadowMySportsGroupForYouTopicsConfig);
                                    id v2 = a1;
                                    if (!a1)
                                    {
                                      __break(1u);
LABEL_38:
                                      a1 = objc_msgSend(a1, sel_shadowMySportsTopicsTopicsConfig);
                                      id v2 = a1;
                                      if (!a1)
                                      {
                                        __break(1u);
LABEL_40:
                                        a1 = objc_msgSend(a1, sel_shadowSportsTopStoriesTopicsConfig);
                                        id v2 = a1;
                                        if (!a1)
                                        {
                                          __break(1u);
LABEL_42:
                                          a1 = objc_msgSend(a1, sel_shadowIntroToSportsGroupTopicsConfig);
                                          id v2 = a1;
                                          if (!a1)
                                          {
                                            __break(1u);
LABEL_44:
                                            a1 = objc_msgSend(a1, sel_shadowIntroToSportsGroupForYouTopicsConfig);
                                            id v2 = a1;
                                            if (!a1)
                                            {
                                              __break(1u);
LABEL_46:
                                              a1 = objc_msgSend(a1, sel_shadowArticleListTagFeedGroupTopicsConfig);
                                              id v2 = a1;
                                              if (!a1)
                                              {
                                                __break(1u);
LABEL_48:
                                                a1 = objc_msgSend(a1, sel_shadowTagFeedTopicsConfig);
                                                id v2 = a1;
                                                if (!a1)
                                                {
                                                  __break(1u);
LABEL_50:
                                                  a1 = objc_msgSend(a1, sel_shadowHighlightsGroupTopicsConfig);
                                                  id v2 = a1;
                                                  if (!a1)
                                                  {
                                                    __break(1u);
LABEL_52:
                                                    a1 = objc_msgSend(a1, sel_shadowNewspaperTodayFeedTopicsConfig);
                                                    id v2 = a1;
                                                    if (!a1)
                                                    {
                                                      __break(1u);
LABEL_54:
                                                      a1 = objc_msgSend(a1, sel_shadowLocalSectionGroupTopicsConfig);
                                                      id v2 = a1;
                                                      if (!a1)
                                                      {
                                                        __break(1u);
LABEL_56:
                                                        a1 = objc_msgSend(a1, sel_shadowNewspaperSectionGroupTopicsConfig);
                                                        id v2 = a1;
                                                        if (!a1)
                                                        {
                                                          __break(1u);
LABEL_58:
                                                          a1 = objc_msgSend(a1, sel_shadowSportsEventArticlesGroupTopicsConfig);
                                                          id v2 = a1;
                                                          if (!a1)
                                                          {
                                                            __break(1u);
LABEL_60:
                                                            a1 = objc_msgSend(a1, sel_shadowTagForYouGroupTopicsConfig);
                                                            id v2 = a1;
                                                            if (!a1)
                                                            {
                                                              __break(1u);
LABEL_62:
                                                              a1 = objc_msgSend(a1, sel_shadowTagRecentStoriesTopicsConfig);
                                                              id v2 = a1;
                                                              if (!a1)
                                                              {
                                                                __break(1u);
LABEL_64:
                                                                a1 = objc_msgSend(a1, sel_shadowTagDateRangeTopicsConfig);
                                                                id v2 = a1;
                                                                if (!a1)
                                                                {
                                                                  __break(1u);
LABEL_66:
                                                                  a1 = objc_msgSend(a1, sel_shadowSportsEventTopicGroupTopicsConfig);
                                                                  id v2 = a1;
                                                                  if (!a1)
                                                                  {
                                                                    __break(1u);
LABEL_68:
                                                                    a1 = objc_msgSend(a1, sel_shadowAffinityGroupTopicsConfig);
                                                                    id v2 = a1;
                                                                    if (!a1)
                                                                    {
                                                                      __break(1u);
LABEL_70:
                                                                      a1 = objc_msgSend(a1, sel_shadowTodayWidgetTopicsConfig);
                                                                      id v2 = a1;
                                                                      if (!a1)
                                                                      {
                                                                        __break(1u);
LABEL_72:
                                                                        a1 = objc_msgSend(a1, sel_shadowTagWidgetTopicsConfig);
                                                                        id v2 = a1;
                                                                        if (!a1)
                                                                        {
                                                                          __break(1u);
LABEL_74:
                                                                          id v2 = objc_msgSend(a1, sel_shadowMoreForYouTopicsConfig);
                                                                          if (!v2)
                                                                          {
                                                                            __break(1u);
                                                                            JUMPOUT(0x1C0A0FE78);
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_75:
      uint64_t v3 = sub_1C151EBCC();

      return v3;
  }
}

id FeedIssueScoringContext.shadowTopicsConfiguration(treatment:)(id a1)
{
  if (*v1)
  {
    if (*v1 != 1) {
      goto LABEL_7;
    }
    a1 = objc_msgSend(a1, sel_shadowCuratedIssuesTopicsConfig);
    id v2 = a1;
    if (a1)
    {
LABEL_8:
      uint64_t v4 = sub_1C151EBCC();

      return (id)v4;
    }
    __break(1u);
  }
  a1 = objc_msgSend(a1, sel_shadowDefaultTopicsConfig);
  id v2 = a1;
  if (a1) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_7:
  id result = objc_msgSend(a1, sel_shadowMagazineFeedIssueTopicsConfig);
  id v2 = result;
  if (result) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t FeedScoringContext.shadowOntologyLevelConfiguration(treatment:)(void *a1)
{
  return sub_1C0A0FFE8(a1, (uint64_t (*)(void))FeedHeadlineScoringContext.shadowOntologyLevelConfiguration(treatment:), (SEL *)&selRef_shadowDefaultOntologyLevelConfig, (SEL *)&selRef_shadowCuratedIssuesOntologyLevelConfig, (SEL *)&selRef_shadowMagazineFeedIssueOntologyLevelConfig);
}

uint64_t sub_1C0A0FFE8(id a1, uint64_t (*a2)(void), SEL *a3, SEL *a4, SEL *a5)
{
  switch((unsigned __int16)*v5 >> 14)
  {
    case 1:
      if (!*v5) {
        goto LABEL_9;
      }
      if (*v5 != 1) {
        goto LABEL_11;
      }
      a1 = [a1 *a4];
      if (a1) {
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_6;
    case 3:
      a1 = [a1 *a3];
      if (!a1)
      {
        __break(1u);
LABEL_9:
        a1 = [a1 *a3];
        if (!a1)
        {
          __break(1u);
LABEL_11:
          a1 = [a1 *a5];
          if (!a1)
          {
            __break(1u);
            JUMPOUT(0x1C0A100F4);
          }
        }
      }
LABEL_12:
      char v7 = a1;
      uint64_t v8 = sub_1C151E33C();

      uint64_t result = v8;
      break;
    default:
LABEL_6:
      uint64_t result = a2();
      break;
  }
  return result;
}

uint64_t FeedHeadlineScoringContext.shadowOntologyLevelConfiguration(treatment:)(id a1)
{
  switch(*v1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      goto LABEL_6;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_14;
    case 7:
      goto LABEL_16;
    case 8:
      goto LABEL_18;
    case 9:
      goto LABEL_20;
    case 0xA:
      goto LABEL_22;
    case 0xB:
      goto LABEL_24;
    case 0xC:
      goto LABEL_26;
    case 0xD:
      goto LABEL_28;
    case 0xE:
      goto LABEL_30;
    case 0xF:
      goto LABEL_32;
    case 0x10:
      goto LABEL_34;
    case 0x11:
      goto LABEL_36;
    case 0x12:
      goto LABEL_38;
    case 0x13:
      goto LABEL_40;
    case 0x14:
      goto LABEL_42;
    case 0x15:
      goto LABEL_44;
    case 0x16:
      goto LABEL_46;
    case 0x17:
      goto LABEL_48;
    case 0x18:
      goto LABEL_50;
    case 0x19:
      goto LABEL_52;
    case 0x1A:
      goto LABEL_74;
    case 0x1B:
      goto LABEL_54;
    case 0x1C:
      goto LABEL_56;
    case 0x1D:
      goto LABEL_58;
    case 0x1E:
      goto LABEL_60;
    case 0x1F:
      goto LABEL_62;
    case 0x20:
      goto LABEL_64;
    case 0x21:
      goto LABEL_66;
    case 0x22:
      goto LABEL_68;
    case 0x23:
      goto LABEL_70;
    case 0x24:
      goto LABEL_72;
    default:
      a1 = objc_msgSend(a1, sel_shadowDefaultOntologyLevelConfig);
      id v2 = a1;
      if (a1) {
        goto LABEL_75;
      }
      __break(1u);
LABEL_4:
      a1 = objc_msgSend(a1, sel_shadowLegacyAudioFeedOntologyLevelConfig);
      id v2 = a1;
      if (a1) {
        goto LABEL_75;
      }
      __break(1u);
LABEL_6:
      a1 = objc_msgSend(a1, sel_shadowAudioFeedOntologyLevelConfig);
      id v2 = a1;
      if (!a1)
      {
        __break(1u);
LABEL_8:
        a1 = objc_msgSend(a1, sel_shadowArticleRecirculationPrimaryOntologyLevelConfig);
        id v2 = a1;
        if (!a1)
        {
          __break(1u);
LABEL_10:
          a1 = objc_msgSend(a1, sel_shadowArticleRecirculationSecondaryOntologyLevelConfig);
          id v2 = a1;
          if (!a1)
          {
            __break(1u);
LABEL_12:
            a1 = objc_msgSend(a1, sel_shadowArticleRecirculationTertiaryOntologyLevelConfig);
            id v2 = a1;
            if (!a1)
            {
              __break(1u);
LABEL_14:
              a1 = objc_msgSend(a1, sel_shadowArticleRecirculationQuaternaryOntologyLevelConfig);
              id v2 = a1;
              if (!a1)
              {
                __break(1u);
LABEL_16:
                a1 = objc_msgSend(a1, sel_shadowBestOfBundleOntologyLevelConfig);
                id v2 = a1;
                if (!a1)
                {
                  __break(1u);
LABEL_18:
                  a1 = objc_msgSend(a1, sel_shadowCuratedOntologyLevelConfig);
                  id v2 = a1;
                  if (!a1)
                  {
                    __break(1u);
LABEL_20:
                    a1 = objc_msgSend(a1, sel_shadowForYouOntologyLevelConfig);
                    id v2 = a1;
                    if (!a1)
                    {
                      __break(1u);
LABEL_22:
                      a1 = objc_msgSend(a1, sel_shadowGreatStoriesYouMissedOntologyLevelConfig);
                      id v2 = a1;
                      if (!a1)
                      {
                        __break(1u);
LABEL_24:
                        a1 = objc_msgSend(a1, sel_shadowLatestStoriesOntologyLevelConfig);
                        id v2 = a1;
                        if (!a1)
                        {
                          __break(1u);
LABEL_26:
                          a1 = objc_msgSend(a1, sel_shadowLocalNewsOntologyLevelConfig);
                          id v2 = a1;
                          if (!a1)
                          {
                            __break(1u);
LABEL_28:
                            a1 = objc_msgSend(a1, sel_shadowMagazineFeedArticleOntologyLevelConfig);
                            id v2 = a1;
                            if (!a1)
                            {
                              __break(1u);
LABEL_30:
                              a1 = objc_msgSend(a1, sel_shadowNewspaperMagazineFeedOntologyLevelConfig);
                              id v2 = a1;
                              if (!a1)
                              {
                                __break(1u);
LABEL_32:
                                a1 = objc_msgSend(a1, sel_shadowTopicFeedOntologyLevelConfig);
                                id v2 = a1;
                                if (!a1)
                                {
                                  __break(1u);
LABEL_34:
                                  a1 = objc_msgSend(a1, sel_shadowMySportsGroupOntologyLevelConfig);
                                  id v2 = a1;
                                  if (!a1)
                                  {
                                    __break(1u);
LABEL_36:
                                    a1 = objc_msgSend(a1, sel_shadowMySportsGroupForYouOntologyLevelConfig);
                                    id v2 = a1;
                                    if (!a1)
                                    {
                                      __break(1u);
LABEL_38:
                                      a1 = objc_msgSend(a1, sel_shadowMySportsTopicsOntologyLevelConfig);
                                      id v2 = a1;
                                      if (!a1)
                                      {
                                        __break(1u);
LABEL_40:
                                        a1 = objc_msgSend(a1, sel_shadowSportsTopStoriesOntologyLevelConfig);
                                        id v2 = a1;
                                        if (!a1)
                                        {
                                          __break(1u);
LABEL_42:
                                          a1 = objc_msgSend(a1, sel_shadowIntroToSportsGroupOntologyLevelConfig);
                                          id v2 = a1;
                                          if (!a1)
                                          {
                                            __break(1u);
LABEL_44:
                                            a1 = objc_msgSend(a1, sel_shadowIntroToSportsGroupForYouOntologyLevelConfig);
                                            id v2 = a1;
                                            if (!a1)
                                            {
                                              __break(1u);
LABEL_46:
                                              a1 = objc_msgSend(a1, sel_shadowArticleListTagFeedGroupOntologyLevelConfig);
                                              id v2 = a1;
                                              if (!a1)
                                              {
                                                __break(1u);
LABEL_48:
                                                a1 = objc_msgSend(a1, sel_shadowTagFeedOntologyLevelConfig);
                                                id v2 = a1;
                                                if (!a1)
                                                {
                                                  __break(1u);
LABEL_50:
                                                  a1 = objc_msgSend(a1, sel_shadowHighlightsGroupOntologyLevelConfig);
                                                  id v2 = a1;
                                                  if (!a1)
                                                  {
                                                    __break(1u);
LABEL_52:
                                                    a1 = objc_msgSend(a1, sel_shadowNewspaperTodayFeedOntologyLevelConfig);
                                                    id v2 = a1;
                                                    if (!a1)
                                                    {
                                                      __break(1u);
LABEL_54:
                                                      a1 = objc_msgSend(a1, sel_shadowLocalSectionGroupOntologyLevelConfig);
                                                      id v2 = a1;
                                                      if (!a1)
                                                      {
                                                        __break(1u);
LABEL_56:
                                                        a1 = objc_msgSend(a1, sel_shadowNewspaperSectionGroupOntologyLevelConfig);
                                                        id v2 = a1;
                                                        if (!a1)
                                                        {
                                                          __break(1u);
LABEL_58:
                                                          a1 = objc_msgSend(a1, sel_shadowSportsEventArticlesGroupOntologyLevelConfig);
                                                          id v2 = a1;
                                                          if (!a1)
                                                          {
                                                            __break(1u);
LABEL_60:
                                                            a1 = objc_msgSend(a1, sel_shadowTagForYouGroupOntologyLevelConfig);
                                                            id v2 = a1;
                                                            if (!a1)
                                                            {
                                                              __break(1u);
LABEL_62:
                                                              a1 = objc_msgSend(a1, sel_shadowTagRecentStoriesOntologyLevelConfig);
                                                              id v2 = a1;
                                                              if (!a1)
                                                              {
                                                                __break(1u);
LABEL_64:
                                                                a1 = objc_msgSend(a1, sel_shadowTagDateRangeOntologyLevelConfig);
                                                                id v2 = a1;
                                                                if (!a1)
                                                                {
                                                                  __break(1u);
LABEL_66:
                                                                  a1 = objc_msgSend(a1, sel_shadowSportsEventTopicGroupOntologyLevelConfig);
                                                                  id v2 = a1;
                                                                  if (!a1)
                                                                  {
                                                                    __break(1u);
LABEL_68:
                                                                    a1 = objc_msgSend(a1, sel_shadowAffinityGroupOntologyLevelConfig);
                                                                    id v2 = a1;
                                                                    if (!a1)
                                                                    {
                                                                      __break(1u);
LABEL_70:
                                                                      a1 = objc_msgSend(a1, sel_shadowTodayWidgetOntologyLevelConfig);
                                                                      id v2 = a1;
                                                                      if (!a1)
                                                                      {
                                                                        __break(1u);
LABEL_72:
                                                                        a1 = objc_msgSend(a1, sel_shadowTagWidgetOntologyLevelConfig);
                                                                        id v2 = a1;
                                                                        if (!a1)
                                                                        {
                                                                          __break(1u);
LABEL_74:
                                                                          id v2 = objc_msgSend(a1, sel_shadowMoreForYouOntologyLevelConfig);
                                                                          if (!v2)
                                                                          {
                                                                            __break(1u);
                                                                            JUMPOUT(0x1C0A10614);
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_75:
      uint64_t v3 = sub_1C151E33C();

      return v3;
  }
}

uint64_t FeedIssueScoringContext.shadowOntologyLevelConfiguration(treatment:)(void *a1)
{
  return sub_1C0A106C4(a1, (SEL *)&selRef_shadowDefaultOntologyLevelConfig, (SEL *)&selRef_shadowCuratedIssuesOntologyLevelConfig, (SEL *)&selRef_shadowMagazineFeedIssueOntologyLevelConfig);
}

uint64_t sub_1C0A106C4(id a1, SEL *a2, SEL *a3, SEL *a4)
{
  if (!*v4)
  {
LABEL_5:
    a1 = [a1 *a2];
    id v5 = a1;
    if (a1) {
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_7;
  }
  if (*v4 == 1)
  {
    a1 = [a1 *a3];
    id v5 = a1;
    if (a1) {
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_5;
  }
LABEL_7:
  id v5 = [a1 *a4];
  if (!v5)
  {
    __break(1u);
    JUMPOUT(0x1C0A10774);
  }
LABEL_8:
  uint64_t v6 = sub_1C151E33C();

  return v6;
}

uint64_t FeedIssueScoringContext.description.getter()
{
  uint64_t v1 = 0x64657461727543;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E697A6167614DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E55;
  }
}

uint64_t FeedScoringContext.init(from:)@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v11 = a2;
  sub_1C0A13930(0, &qword_1EA1A25B0, (uint64_t (*)(void))sub_1C0A12A80, (uint64_t)&type metadata for FeedScoringContext.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A12A80();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v11;
    char v18 = 0;
    sub_1C0A12AD4();
    sub_1C15206EC();
    switch(v19)
    {
      case 1:
        char v12 = 1;
        sub_1C0A12BD0();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *uint64_t v9 = v13;
        break;
      case 2:
        char v14 = 1;
        sub_1C0A12B7C();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *uint64_t v9 = v15 | 0x4000;
        break;
      case 3:
        char v16 = 1;
        sub_1C0A12B28();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *uint64_t v9 = v17 | 0x8000;
        break;
      default:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *uint64_t v9 = -16384;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FeedScoringContext.encode(to:)(void *a1)
{
  sub_1C0A13930(0, &qword_1EA1A25E0, (uint64_t (*)(void))sub_1C0A12A80, (uint64_t)&type metadata for FeedScoringContext.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  unsigned int v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A12A80();
  sub_1C1520F0C();
  switch(v8 >> 14)
  {
    case 1u:
      char v19 = 2;
      char v18 = 0;
      sub_1C0A12C24();
      sub_1C152080C();
      if (!v2)
      {
        char v17 = v8;
        char v16 = 1;
        sub_1C0A12CCC();
        goto LABEL_9;
      }
      break;
    case 2u:
      char v23 = 3;
      char v22 = 0;
      sub_1C0A12C24();
      sub_1C152080C();
      if (!v2)
      {
        __int16 v21 = v8 & 0x3FFF;
        char v20 = 1;
        sub_1C0A12C78();
        goto LABEL_9;
      }
      break;
    case 3u:
      __int16 v11 = 0;
      sub_1C0A12C24();
      goto LABEL_9;
    default:
      char v15 = 1;
      char v14 = 0;
      sub_1C0A12C24();
      sub_1C152080C();
      if (!v2)
      {
        char v13 = v8;
        char v12 = 1;
        sub_1C0A12D20();
LABEL_9:
        sub_1C152080C();
      }
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v5);
}

uint64_t sub_1C0A10E98(void *a1)
{
  sub_1C0A13930(0, &qword_1EA1A2670, (uint64_t (*)(void))sub_1C0A138DC, (uint64_t)&type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  char v8 = *v1;
  int v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A138DC();
  sub_1C1520F0C();
  char v16 = v8;
  char v15 = 0;
  sub_1C0A12D20();
  uint64_t v9 = v11[1];
  sub_1C152080C();
  if (!v9)
  {
    char v14 = v12;
    char v13 = 1;
    sub_1C0A12CCC();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0A11064@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v15 = a2;
  sub_1C0A13930(0, &qword_1EA1A2660, (uint64_t (*)(void))sub_1C0A138DC, (uint64_t)&type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A138DC();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v15;
    char v18 = 0;
    sub_1C0A12BD0();
    sub_1C15206EC();
    char v11 = v19;
    char v16 = 1;
    sub_1C0A12B7C();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    char v13 = v17;
    *uint64_t v10 = v11;
    v10[1] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0A11274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C00C2D04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A1129C(uint64_t a1)
{
  unint64_t v2 = sub_1C0A12A80();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A112D8(uint64_t a1)
{
  unint64_t v2 = sub_1C0A12A80();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0A11314(unsigned __int8 *a1, char *a2)
{
  return sub_1C1494970(*a1, *a2);
}

uint64_t sub_1C0A11320()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A113F0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A114A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A11574@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0A1383C();
  *a1 = result;
  return result;
}

void sub_1C0A115A4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656E696C64616568;
      goto LABEL_3;
    case 2:
      *a1 = 0x6575737369;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 1835365481;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C0A11634()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A11694()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0A116E4()
{
  if (*v0) {
    return 0x6575737369;
  }
  else {
    return 0x656E696C64616568;
  }
}

uint64_t sub_1C0A1171C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0A13C4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A11744(uint64_t a1)
{
  unint64_t v2 = sub_1C0A138DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A11780(uint64_t a1)
{
  unint64_t v2 = sub_1C0A138DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0A117BC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C0A11064(a1, a2);
}

uint64_t sub_1C0A117D4(void *a1)
{
  return sub_1C0A10E98(a1);
}

uint64_t sub_1C0A117EC@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return FeedScoringContext.init(from:)(a1, a2);
}

uint64_t sub_1C0A11804(void *a1)
{
  return FeedScoringContext.encode(to:)(a1);
}

uint64_t FeedItemScoringContext.configurationSet.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 0;
  }
}

id FeedItemScoringContext.scoringConfiguration(treatment:)(void *a1)
{
  return sub_1C0A1186C(a1, (SEL *)&selRef_defaultScoringConfig, (SEL *)&selRef_magazineFeedArticleScoringConfig);
}

id FeedItemScoringContext.topicsConfiguration(treatment:)(void *a1)
{
  return sub_1C0A1186C(a1, (SEL *)&selRef_defaultTopicsConfig, (SEL *)&selRef_magazineFeedArticleTopicsConfig);
}

id FeedItemScoringContext.ontologyLevelConfiguration(treatment:)(void *a1)
{
  return sub_1C0A1186C(a1, (SEL *)&selRef_defaultOntologyLevelConfig, (SEL *)&selRef_magazineFeedArticleOntologyLevelConfig);
}

id sub_1C0A1186C(id result, SEL *a2, SEL *a3)
{
  if (*v3)
  {
    uint64_t result = [result *a3];
    if (result) {
      return result;
    }
    __break(1u);
  }
  uint64_t result = [result *a2];
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t FeedItemScoringContext.description.getter()
{
  if (*v0) {
    return 0x656E697A6167614DLL;
  }
  else {
    return 0x6E776F6E6B6E55;
  }
}

BOOL static FeedItemScoringContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedItemScoringContext.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedItemScoringContext.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A1198C()
{
  if (*v0) {
    return 0x656E697A6167614DLL;
  }
  else {
    return 0x6E776F6E6B6E55;
  }
}

NewsFeed::FeedHeadlineScoringContext_optional __swiftcall FeedHeadlineScoringContext.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 19;
  switch(v3)
  {
    case 0:
      goto LABEL_21;
    case 1:
      char v5 = 1;
      goto LABEL_21;
    case 2:
      char v5 = 2;
      goto LABEL_21;
    case 3:
      char v5 = 3;
      goto LABEL_21;
    case 4:
      char v5 = 4;
      goto LABEL_21;
    case 5:
      char v5 = 5;
      goto LABEL_21;
    case 6:
      char v5 = 6;
      goto LABEL_21;
    case 7:
      char v5 = 7;
      goto LABEL_21;
    case 8:
      char v5 = 8;
      goto LABEL_21;
    case 9:
      char v5 = 9;
      goto LABEL_21;
    case 10:
      char v5 = 10;
      goto LABEL_21;
    case 11:
      char v5 = 11;
      goto LABEL_21;
    case 12:
      char v5 = 12;
      goto LABEL_21;
    case 13:
      char v5 = 13;
      goto LABEL_21;
    case 14:
      char v5 = 14;
      goto LABEL_21;
    case 15:
      char v5 = 15;
      goto LABEL_21;
    case 16:
      char v5 = 16;
      goto LABEL_21;
    case 17:
      char v5 = 17;
      goto LABEL_21;
    case 18:
      char v5 = 18;
LABEL_21:
      char v6 = v5;
      break;
    case 19:
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    default:
      char v6 = 37;
      break;
  }
  *unint64_t v2 = v6;
  return result;
}

uint64_t FeedHeadlineScoringContext.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x754179636167656CLL;
      break;
    case 2:
      uint64_t v2 = 0x466F69647561;
      goto LABEL_17;
    case 3:
      uint64_t result = 0xD000000000000020;
      break;
    case 4:
      uint64_t result = 0xD000000000000022;
      break;
    case 5:
      uint64_t result = 0xD000000000000021;
      break;
    case 6:
      uint64_t result = 0xD000000000000023;
      break;
    case 7:
      uint64_t result = 0xD000000000000011;
      break;
    case 8:
      uint64_t result = 0x64657461727563;
      break;
    case 9:
      uint64_t result = 0x7247756F59726F66;
      break;
    case 0xA:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0xB:
      uint64_t result = 0xD000000000000012;
      break;
    case 0xC:
      uint64_t result = 0x77654E6C61636F6CLL;
      break;
    case 0xD:
      uint64_t result = 0x656E697A6167616DLL;
      break;
    case 0xE:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0xF:
      uint64_t v2 = 0x466369706F74;
LABEL_17:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6565000000000000;
      break;
    case 0x10:
      uint64_t result = 0x7374726F7053796DLL;
      break;
    case 0x11:
      uint64_t result = 0xD000000000000013;
      break;
    case 0x12:
      uint64_t result = 0x7374726F7053796DLL;
      break;
    case 0x13:
    case 0x1F:
      uint64_t result = 0xD000000000000010;
      break;
    case 0x14:
      uint64_t result = 0xD000000000000012;
      break;
    case 0x15:
      uint64_t result = 0xD000000000000018;
      break;
    case 0x16:
      uint64_t result = 0xD000000000000017;
      break;
    case 0x17:
      uint64_t result = 0x64656546676174;
      break;
    case 0x18:
      uint64_t result = 0x6867696C68676968;
      break;
    case 0x19:
      uint64_t result = 0xD000000000000017;
      break;
    case 0x1A:
      uint64_t result = 0x59726F4665726F6DLL;
      break;
    case 0x1B:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x1C:
      uint64_t result = 0xD000000000000015;
      break;
    case 0x1D:
      uint64_t result = 0xD000000000000018;
      break;
    case 0x1E:
      uint64_t result = 0x6F59726F46676174;
      break;
    case 0x20:
      uint64_t result = 0x5265746144676174;
      break;
    case 0x21:
      uint64_t result = 0xD000000000000015;
      break;
    case 0x22:
      uint64_t result = 0x7974696E69666661;
      break;
    case 0x23:
      uint64_t result = 0x6469577961646F74;
      break;
    case 0x24:
      uint64_t result = 0x6567646957676174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A120C4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A1212C()
{
  FeedHeadlineScoringContext.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A12190()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedHeadlineScoringContext_optional sub_1C0A121F4(Swift::String *a1)
{
  return FeedHeadlineScoringContext.init(rawValue:)(*a1);
}

uint64_t sub_1C0A12200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedHeadlineScoringContext.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0A12228(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14934C0(*a1, *a2);
}

uint64_t sub_1C0A12234()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A12294()
{
  return sub_1C151EAEC();
}

NewsFeed::FeedIssueScoringContext_optional __swiftcall FeedIssueScoringContext.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FeedIssueScoringContext.rawValue.getter()
{
  uint64_t v1 = 0x64657461727563;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E697A6167616DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1C0A123A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A12454()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A124EC()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedIssueScoringContext_optional sub_1C0A12594(Swift::String *a1)
{
  return FeedIssueScoringContext.init(rawValue:)(*a1);
}

void sub_1C0A125A0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x64657461727563;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656E697A6167616DLL;
    unint64_t v4 = 0xEC00000064656546;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0A12608(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1493CB0(*a1, *a2);
}

uint64_t sub_1C0A12614()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A12674()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0A126C4()
{
  uint64_t v1 = 0x64657461727543;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E697A6167614DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E55;
  }
}

uint64_t _s8NewsFeed0B14ScoringContextO2eeoiySbAC_ACtFZ_0(_WORD *a1, _WORD *a2)
{
  unsigned int v2 = (unsigned __int16)*a1;
  unsigned int v3 = (unsigned __int16)*a2;
  switch(v2 >> 14)
  {
    case 1u:
      if ((v3 & 0xC000) != 0x4000) {
        goto LABEL_15;
      }
      if (*a1)
      {
        if (*a1 == 1)
        {
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x64657461727563;
        }
        else
        {
          uint64_t v10 = 0x656E697A6167616DLL;
          unint64_t v9 = 0xEC00000064656546;
        }
      }
      else
      {
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x6E776F6E6B6E75;
      }
      unint64_t v20 = 0xE700000000000000;
      uint64_t v21 = 0x64657461727563;
      if (*a2 != 1)
      {
        uint64_t v21 = 0x656E697A6167616DLL;
        unint64_t v20 = 0xEC00000064656546;
      }
      if (*a2) {
        uint64_t v18 = v21;
      }
      else {
        uint64_t v18 = 0x6E776F6E6B6E75;
      }
      if (*a2) {
        unint64_t v19 = v20;
      }
      else {
        unint64_t v19 = 0xE700000000000000;
      }
      goto LABEL_39;
    case 2u:
      if ((v3 & 0xC000) != 0x8000) {
        goto LABEL_15;
      }
      uint64_t v11 = FeedHeadlineScoringContext.rawValue.getter();
      uint64_t v13 = v12;
      if (v11 == FeedHeadlineScoringContext.rawValue.getter() && v13 == v14)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v15 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v8 = 0;
        if ((v15 & 1) == 0) {
          return v8 & 1;
        }
      }
      int v16 = (v2 >> 8) & 0x3F;
      int v17 = (v3 >> 8) & 0x3F;
      uint64_t v18 = 0x6E776F6E6B6E75;
      if (v16)
      {
        if (v16 == 1)
        {
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x64657461727563;
          if (v17) {
            goto LABEL_22;
          }
LABEL_37:
          unint64_t v19 = 0xE700000000000000;
          goto LABEL_39;
        }
        uint64_t v10 = 0x656E697A6167616DLL;
        unint64_t v9 = 0xEC00000064656546;
        if (!v17) {
          goto LABEL_37;
        }
      }
      else
      {
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x6E776F6E6B6E75;
        if (!v17) {
          goto LABEL_37;
        }
      }
LABEL_22:
      if (v17 == 1)
      {
        unint64_t v19 = 0xE700000000000000;
        uint64_t v18 = 0x64657461727563;
      }
      else
      {
        uint64_t v18 = 0x656E697A6167616DLL;
        unint64_t v19 = 0xEC00000064656546;
      }
LABEL_39:
      if (v10 == v18 && v9 == v19)
      {
        swift_bridgeObjectRelease_n();
LABEL_42:
        char v8 = 1;
        return v8 & 1;
      }
      char v23 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v23 & 1;
    case 3u:
      if (v3 != 49152) {
        goto LABEL_15;
      }
      goto LABEL_42;
    default:
      if (v3 >= 0x4000)
      {
LABEL_15:
        char v8 = 0;
      }
      else
      {
        uint64_t v4 = FeedHeadlineScoringContext.rawValue.getter();
        uint64_t v6 = v5;
        if (v4 == FeedHeadlineScoringContext.rawValue.getter() && v6 == v7) {
          char v8 = 1;
        }
        else {
          char v8 = sub_1C1520A9C();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return v8 & 1;
  }
}

unint64_t sub_1C0A12A80()
{
  unint64_t result = qword_1EA1A25B8;
  if (!qword_1EA1A25B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25B8);
  }
  return result;
}

unint64_t sub_1C0A12AD4()
{
  unint64_t result = qword_1EA1A25C0;
  if (!qword_1EA1A25C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25C0);
  }
  return result;
}

unint64_t sub_1C0A12B28()
{
  unint64_t result = qword_1EA1A25C8;
  if (!qword_1EA1A25C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25C8);
  }
  return result;
}

unint64_t sub_1C0A12B7C()
{
  unint64_t result = qword_1EA1A25D0;
  if (!qword_1EA1A25D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25D0);
  }
  return result;
}

unint64_t sub_1C0A12BD0()
{
  unint64_t result = qword_1EA1A25D8;
  if (!qword_1EA1A25D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25D8);
  }
  return result;
}

unint64_t sub_1C0A12C24()
{
  unint64_t result = qword_1EA1A25E8;
  if (!qword_1EA1A25E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25E8);
  }
  return result;
}

unint64_t sub_1C0A12C78()
{
  unint64_t result = qword_1EA1A25F0;
  if (!qword_1EA1A25F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25F0);
  }
  return result;
}

unint64_t sub_1C0A12CCC()
{
  unint64_t result = qword_1EA1A25F8;
  if (!qword_1EA1A25F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A25F8);
  }
  return result;
}

unint64_t sub_1C0A12D20()
{
  unint64_t result = qword_1EA1A2600;
  if (!qword_1EA1A2600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2600);
  }
  return result;
}

unint64_t sub_1C0A12D78()
{
  unint64_t result = qword_1EA1A2608;
  if (!qword_1EA1A2608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2608);
  }
  return result;
}

unint64_t sub_1C0A12DCC(uint64_t a1)
{
  unint64_t result = sub_1C0A12DF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A12DF4()
{
  unint64_t result = qword_1EA1A2610;
  if (!qword_1EA1A2610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2610);
  }
  return result;
}

unint64_t sub_1C0A12E4C()
{
  unint64_t result = qword_1EA1A2618;
  if (!qword_1EA1A2618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2618);
  }
  return result;
}

unint64_t sub_1C0A12EA0(uint64_t a1)
{
  unint64_t result = sub_1C0A12EC8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A12EC8()
{
  unint64_t result = qword_1EA1A2620;
  if (!qword_1EA1A2620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2620);
  }
  return result;
}

unint64_t sub_1C0A12F20()
{
  unint64_t result = qword_1EA1A2628;
  if (!qword_1EA1A2628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2628);
  }
  return result;
}

unint64_t sub_1C0A12F74(uint64_t a1)
{
  unint64_t result = sub_1C0A12F9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A12F9C()
{
  unint64_t result = qword_1EA1A2630;
  if (!qword_1EA1A2630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2630);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedScoringContext(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 65283 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65283 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65283;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 14) | (4 * (HIBYTE(*a1) & 0x3C | (*a1 >> 6)))) ^ 0xFF;
  if (v6 >= 0xFC) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for FeedScoringContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A1317CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(_WORD *)unint64_t result = (((-(__int16)a2 & 0xF0) << 6) - ((_WORD)a2 << 14)) & 0xFF3F | (((-a2 >> 2) & 3) << 6);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemScoringContext()
{
  return &type metadata for FeedItemScoringContext;
}

uint64_t getEnumTagSinglePayload for FeedHeadlineScoringContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDC) {
    goto LABEL_17;
  }
  if (a2 + 36 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 36) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 36;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x25;
  int v8 = v6 - 37;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeedHeadlineScoringContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 36 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 36) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDB)
  {
    unsigned int v6 = ((a2 - 220) >> 8) + 1;
    *unint64_t result = a2 + 36;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A13314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 36;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedIssueScoringContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A13408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedScoringContext.FeedItemScoringContext(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedScoringContext.FeedItemScoringContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A13590);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedScoringContext.FeedItemScoringContext()
{
  return &type metadata for FeedScoringContext.FeedItemScoringContext;
}

unsigned char *storeEnumTagSinglePayload for FeedScoringContext.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A13694);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedScoringContext.CodingType()
{
  return &type metadata for FeedScoringContext.CodingType;
}

ValueMetadata *type metadata accessor for FeedScoringContext.CodingKeys()
{
  return &type metadata for FeedScoringContext.CodingKeys;
}

unint64_t sub_1C0A136E0()
{
  unint64_t result = qword_1EA1A2638;
  if (!qword_1EA1A2638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2638);
  }
  return result;
}

unint64_t sub_1C0A13738()
{
  unint64_t result = qword_1EA1A2640;
  if (!qword_1EA1A2640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2640);
  }
  return result;
}

unint64_t sub_1C0A13790()
{
  unint64_t result = qword_1EA1A2648;
  if (!qword_1EA1A2648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2648);
  }
  return result;
}

unint64_t sub_1C0A137E8()
{
  unint64_t result = qword_1EA1A2650;
  if (!qword_1EA1A2650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2650);
  }
  return result;
}

uint64_t sub_1C0A1383C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C0A13888()
{
  unint64_t result = qword_1EA1A2658;
  if (!qword_1EA1A2658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2658);
  }
  return result;
}

unint64_t sub_1C0A138DC()
{
  unint64_t result = qword_1EA1A2668;
  if (!qword_1EA1A2668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2668);
  }
  return result;
}

void sub_1C0A13930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0A13998()
{
  unint64_t result = qword_1EA1A2678;
  if (!qword_1EA1A2678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2678);
  }
  return result;
}

unint64_t sub_1C0A139EC()
{
  unint64_t result = qword_1EA1A2680;
  if (!qword_1EA1A2680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2680);
  }
  return result;
}

unsigned char *_s8NewsFeed22FeedItemScoringContextOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A13B0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedScoringContext.FeedItemScoringContext.CodingKeys()
{
  return &type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys;
}

unint64_t sub_1C0A13B48()
{
  unint64_t result = qword_1EA1A2688;
  if (!qword_1EA1A2688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2688);
  }
  return result;
}

unint64_t sub_1C0A13BA0()
{
  unint64_t result = qword_1EA1A2690;
  if (!qword_1EA1A2690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2690);
  }
  return result;
}

unint64_t sub_1C0A13BF8()
{
  unint64_t result = qword_1EA1A2698;
  if (!qword_1EA1A2698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2698);
  }
  return result;
}

uint64_t sub_1C0A13C4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E696C64616568 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6575737369 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t FormatSupplementaryNodePinEdge.rawValue.getter()
{
  if (*v0) {
    return 0x676E696C69617274;
  }
  else {
    return 0x676E696461656CLL;
  }
}

NewsFeed::FormatSupplementaryNodePinEdge_optional __swiftcall FormatSupplementaryNodePinEdge.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t sub_1C0A13DD8(char *a1, char *a2)
{
  return sub_1C147B1C0(*a1, *a2);
}

unint64_t sub_1C0A13DE8()
{
  unint64_t result = qword_1EB86D598;
  if (!qword_1EB86D598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D598);
  }
  return result;
}

uint64_t sub_1C0A13E3C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0A13EC0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A13F30()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatSupplementaryNodePinEdge_optional sub_1C0A13FB0(Swift::String *a1)
{
  return FormatSupplementaryNodePinEdge.init(rawValue:)(*a1);
}

void sub_1C0A13FBC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x676E696461656CLL;
  if (*v1) {
    uint64_t v2 = 0x676E696C69617274;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1C0A13FFC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0A1402C();
  unint64_t result = sub_1C0A14080();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0A1402C()
{
  unint64_t result = qword_1EA1A26A0;
  if (!qword_1EA1A26A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A26A0);
  }
  return result;
}

unint64_t sub_1C0A14080()
{
  unint64_t result = qword_1EB86D5A0;
  if (!qword_1EB86D5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D5A0);
  }
  return result;
}

unint64_t sub_1C0A140D4(uint64_t a1)
{
  unint64_t result = sub_1C08688B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A140FC(void *a1)
{
  a1[1] = sub_1C0A14134();
  a1[2] = sub_1C0A14188();
  unint64_t result = sub_1C0A13DE8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A14134()
{
  unint64_t result = qword_1EB86D5A8;
  if (!qword_1EB86D5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D5A8);
  }
  return result;
}

unint64_t sub_1C0A14188()
{
  unint64_t result = qword_1EB86D590;
  if (!qword_1EB86D590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D590);
  }
  return result;
}

uint64_t sub_1C0A141DC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0A1423C(void *a1)
{
  return FormatSupplementaryNodePinEdge.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatSupplementaryNodePinEdge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A14320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinEdge()
{
  return &type metadata for FormatSupplementaryNodePinEdge;
}

uint64_t PaidBundleConfigManager.__allocating_init(configurationManager:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t PaidBundleConfigManager.init(configurationManager:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t PaidBundleConfigManager.currentConfiguration.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_paidBundleConfig))
  {
    id v2 = objc_msgSend(v1, sel_paidBundleConfig);
    swift_unknownObjectRelease();
    return (uint64_t)v2;
  }
  else
  {
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t PaidBundleConfigManager.fetchConfiguration()()
{
  sub_1BFCF7C30();
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C0A14538();
  uint64_t v1 = sub_1C1518FEC();
  swift_release();

  return v1;
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C0A14598, 0, 0);
}

uint64_t sub_1C0A144B0(id *a1)
{
  id v1 = *a1;
  uint64_t result = (uint64_t)objc_msgSend(*a1, sel_respondsToSelector_, sel_paidBundleConfig);
  if (result)
  {
    objc_msgSend(v1, sel_paidBundleConfig);
    sub_1C0A14D20();
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1C0A14538()
{
  unint64_t result = qword_1EB85DFE0;
  if (!qword_1EB85DFE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB85DFE0);
  }
  return result;
}

uint64_t sub_1C0A14598()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *id v2 = v0;
  v2[1] = sub_1C0A14644;
  return FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)(0, ObjectType);
}

uint64_t sub_1C0A14644(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 32) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C0A14778, 0, 0);
  }
}

uint64_t sub_1C0A14778()
{
  if (objc_msgSend(*(id *)(v0 + 32), sel_respondsToSelector_, sel_paidBundleConfig))
  {
    id v1 = objc_msgSend(*(id *)(v0 + 32), sel_paidBundleConfig);
    swift_unknownObjectRelease();
    id v2 = *(uint64_t (**)(id))(v0 + 8);
    return v2(v1);
  }
  else
  {
    sub_1C0A14890();
    swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

unint64_t sub_1C0A14890()
{
  unint64_t result = qword_1EA1A26B8;
  if (!qword_1EA1A26B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A26B8);
  }
  return result;
}

uint64_t PaidBundleConfigManager.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PaidBundleConfigManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A1493C()
{
  sub_1BFCF7C30();
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C0A14538();
  uint64_t v1 = sub_1C1518FEC();
  swift_release();

  return v1;
}

uint64_t sub_1C0A149D8()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C0125AF8;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1C0A14598, 0, 0);
}

uint64_t dispatch thunk of PaidBundleConfigManagerType.currentConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PaidBundleConfigManagerType.fetchConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

{
  uint64_t v2;
  void *v5;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C014AF5C;
  return v7(a1, a2);
}

uint64_t method lookup function for PaidBundleConfigManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PaidBundleConfigManager);
}

uint64_t dispatch thunk of PaidBundleConfigManager.__allocating_init(configurationManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unsigned char *storeEnumTagSinglePayload for PaidBundleConfigManager.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A14C90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleConfigManager.Errors()
{
  return &type metadata for PaidBundleConfigManager.Errors;
}

unint64_t sub_1C0A14CCC()
{
  unint64_t result = qword_1EA1A26D0;
  if (!qword_1EA1A26D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A26D0);
  }
  return result;
}

void sub_1C0A14D20()
{
  if (!qword_1EB85C8A8)
  {
    sub_1C0A14538();
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C8A8);
    }
  }
}

uint64_t sub_1C0A14D78()
{
  return sub_1C093658C();
}

id sub_1C0A14EB4(void *a1, CGFloat a2)
{
  CATransform3DMakeScale(&v4, a2, a2, 1.0);
  return objc_msgSend(a1, sel_setTransform_, &v4);
}

id sub_1C0A14F20(void *a1, CGFloat a2, CGFloat a3)
{
  CATransform3DMakeTranslation(&v5, a2, a3, 0.0);
  return objc_msgSend(a1, sel_setTransform_, &v5);
}

id sub_1C0A14F88(void *a1, void (*a2)(long long *__return_ptr, __n128, __n128, double), __n128 a3, __n128 a4)
{
  a2(&v6, a3, a4, a4.n128_f64[0]);
  return objc_msgSend(a1, sel_setTransform_, &v6);
}

id sub_1C0A14FF4(void *a1, void (*a2)(long long *__return_ptr, double, double), double a3, double a4)
{
  a2(&v6, a4, a3);
  return objc_msgSend(a1, sel_setTransform_, &v6);
}

id sub_1C0A15068(void *a1, void (*a2)(long long *__return_ptr, double, __n128, double), double a3, __n128 a4)
{
  a2(&v6, a4.n128_f64[0], a4, a3);
  return objc_msgSend(a1, sel_setTransform_, &v6);
}

id sub_1C0A150D8(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CATransform3DMakeRotation(&v7, a2, a3, a4, a5);
  return objc_msgSend(a1, sel_setTransform_, &v7);
}

uint64_t sub_1C0A1513C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    if (!a4) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = sub_1C00DE998(a1, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (a4)
  {
    return 0;
  }
  if (a2)
  {
    if (!a5) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v13 = sub_1C00DE998(a2, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (a5)
  {
    return 0;
  }
  if (a3)
  {
    if (a6)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = sub_1C00DE998(a3, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        return 1;
      }
    }
  }
  else if (!a6)
  {
    return 1;
  }
  return 0;
}

BOOL sub_1C0A15258(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  if (*a1)
  {
    uint64_t v8 = *a1;
    if (!v7)
    {
LABEL_12:
      sub_1BFDB3920(v8);
      goto LABEL_13;
    }
    sub_1BFDB3920(v8);
    sub_1BFDB3920(v5);
    sub_1BFDB3920(v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v9 = sub_1C00DE998(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
LABEL_14:
      sub_1BFDB3960(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v5;
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v10 = sub_1C00DE998(v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDB3960(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDB3960(v5);
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    goto LABEL_13;
  }
  uint64_t v5 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v7 = a2[2];
  uint64_t v12 = a2[3];
  if (!v5)
  {
    if (!v7) {
      goto LABEL_18;
    }
LABEL_13:
    sub_1BFDB3920(v7);
    sub_1BFDB3960(v5);
    uint64_t v15 = v7;
    goto LABEL_15;
  }
  uint64_t v8 = a1[2];
  if (!v7) {
    goto LABEL_12;
  }
  sub_1BFDB3920(v8);
  sub_1BFDB3920(v5);
  sub_1BFDB3920(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00DE998(v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1C00DE998(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDB3960(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDB3960(v5);
  if ((v14 & 1) == 0) {
    return 0;
  }
LABEL_18:
  uint64_t v18 = a1[4];
  uint64_t v17 = a1[5];
  uint64_t v20 = a2[4];
  uint64_t v19 = a2[5];
  if (v18)
  {
    if (v20)
    {
      sub_1BFDB3920(v18);
      sub_1BFDB3920(v18);
      sub_1BFDB3920(v20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v21 = sub_1C00DE998(v18, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v22 = sub_1C00DE998(v17, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDB3960(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDB3960(v18);
        return (v22 & 1) != 0;
      }
      sub_1BFDB3960(v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v18;
LABEL_15:
      sub_1BFDB3960(v15);
      return 0;
    }
    sub_1BFDB3920(v18);
LABEL_26:
    sub_1BFDB3920(v20);
    sub_1BFDB3960(v18);
    uint64_t v15 = v20;
    goto LABEL_15;
  }
  if (v20) {
    goto LABEL_26;
  }
  return 1;
}

uint64_t sub_1C0A155A4(void *a1)
{
  return FormatAnimationNodeKeyPath.encode(to:)(a1);
}

uint64_t sub_1C0A155C0()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
      sub_1C0605BA8(0);
      uint64_t v12 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v12 + 72);
      unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v13);
      char v14 = "Transform Scale X";
      goto LABEL_6;
    case 2:
      sub_1C0605BA8(0);
      uint64_t v15 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v15 + 72);
      unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v16);
      char v14 = "Transform Scale Y";
      goto LABEL_6;
    case 3:
      sub_1C0605BA8(0);
      uint64_t v17 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v17 + 72);
      unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v18);
      char v14 = "Transform Scale Z";
LABEL_6:
      unint64_t v11 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      char v9 = v8;
      uint64_t v10 = 0xD000000000000011;
      break;
    case 4:
      uint64_t v20 = *(void *)(v0 + 32);
      uint64_t v19 = *(void *)(v0 + 40);
      uint64_t v21 = *(void *)(v0 + 24);
      sub_1C0605BA8(0);
      uint64_t v22 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v23 = *(void *)(v22 + 72);
      unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      sub_1C0433600(0x687461502079654BLL, 0xE800000000000000, 0xD000000000000013, 0x80000001C1618C70, (void *)(v7 + v24));
      sub_1BFDB3920(v1);
      sub_1C0437C30(0x6C6156206D6F7246, 0xEA00000000006575, v1, v2, (void *)(v7 + v24 + v23));
      sub_1BFDB3920(v3);
      sub_1C0437C30(0x65756C6156206F54, 0xE800000000000000, v3, v21, (void *)(v7 + v24 + 2 * v23));
      sub_1BFDB3920(v20);
      sub_1C0437C30(0x65756C6156207942, 0xE800000000000000, v20, v19, (void *)(v7 + v24 + 3 * v23));
      return v7;
    case 5:
      sub_1C0605BA8(0);
      uint64_t v25 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v25 + 72);
      unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v26);
      uint64_t v10 = 0xD000000000000015;
      uint64_t v27 = "Transform Translate X";
      goto LABEL_15;
    case 6:
      sub_1C0605BA8(0);
      uint64_t v28 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v28 + 72);
      unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v29);
      uint64_t v10 = 0xD000000000000015;
      uint64_t v27 = "Transform Translate Y";
      goto LABEL_15;
    case 7:
      sub_1C0605BA8(0);
      uint64_t v30 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v30 + 72);
      unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v31);
      uint64_t v10 = 0xD000000000000015;
      uint64_t v27 = "Transform Translate Z";
      goto LABEL_15;
    case 8:
      sub_1C0605BA8(0);
      uint64_t v32 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v32 + 72);
      unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v33);
      uint64_t v10 = 0xD000000000000012;
      uint64_t v27 = "Transform Rotation";
      goto LABEL_15;
    case 9:
      sub_1C0605BA8(0);
      uint64_t v34 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v34 + 72);
      unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v35);
      uint64_t v10 = 0xD000000000000014;
      uint64_t v27 = "Transform Rotation X";
      goto LABEL_15;
    case 0xA:
      sub_1C0605BA8(0);
      uint64_t v36 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v36 + 72);
      unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v37);
      uint64_t v10 = 0xD000000000000014;
      uint64_t v27 = "Transform Rotation Y";
      goto LABEL_15;
    case 0xB:
      sub_1C0605BA8(0);
      uint64_t v38 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v38 + 72);
      unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v39);
      uint64_t v10 = 0xD000000000000014;
      uint64_t v27 = "Transform Rotation Z";
LABEL_15:
      unint64_t v11 = (unint64_t)(v27 - 32) | 0x8000000000000000;
      char v9 = v8;
      break;
    default:
      sub_1C0605BA8(0);
      uint64_t v4 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v5 = *(void *)(v4 + 72);
      unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
      uint64_t v8 = (void *)(v7 + v6);
      char v9 = (void *)(v7 + v6);
      uint64_t v10 = 0x726F66736E617254;
      unint64_t v11 = 0xEF656C616353206DLL;
      break;
  }
  sub_1C0433600(0x687461502079654BLL, 0xE800000000000000, v10, v11, v9);
  swift_bridgeObjectRetain();
  sub_1C042F6B0(0x6C6156206D6F7246, 0xEA00000000006575, v1, (void *)((char *)v8 + v5));
  swift_bridgeObjectRetain();
  sub_1C042F6B0(0x65756C6156206F54, 0xE800000000000000, v2, (void *)((char *)v8 + 2 * v5));
  swift_bridgeObjectRetain();
  sub_1C042F6B0(0x65756C6156207942, 0xE800000000000000, v3, (void *)((char *)v8 + 3 * v5));
  return v7;
}

BOOL _s8NewsFeed26FormatAnimationNodeKeyPathO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  uint64_t v10 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  int v15 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v116 = v4;
  uint64_t v117 = v5;
  switch(v8)
  {
    case 1:
      if (v15 != 1) {
        goto LABEL_27;
      }
      uint64_t v27 = *(void *)(a1 + 24);
      uint64_t v28 = *(void *)(a2 + 24);
      uint64_t v91 = *(void *)(a2 + 8);
      uint64_t v29 = *(void *)(a2 + 32);
      uint64_t v106 = *(void *)(a2 + 40);
      uint64_t v30 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 1);
      sub_1BFCCE6B0(v3, v30, v5, v27, v7, v6, 1);
      sub_1BFCCE6B0(v3, v30, v5, v27, v7, v6, 1);
      sub_1BFCCE6B0(v10, v91, v12, v28, v29, v106, 1);
      char v88 = sub_1C0A1513C(v3, v30, v5, v10, v91, v12);
      sub_1BFCCE780(v3, v30, v5, v116, v7, v6, 1);
      sub_1BFCCE780(v10, v91, v12, v28, v29, v106, 1);
      sub_1BFCCE780(v10, v91, v12, v28, v29, v106, 1);
      uint64_t v20 = v3;
      uint64_t v21 = v30;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 1;
      goto LABEL_26;
    case 2:
      if (v15 != 2) {
        goto LABEL_27;
      }
      uint64_t v31 = *(void *)(a1 + 24);
      uint64_t v32 = *(void *)(a2 + 24);
      uint64_t v92 = *(void *)(a2 + 8);
      uint64_t v33 = *(void *)(a2 + 32);
      uint64_t v107 = *(void *)(a2 + 40);
      uint64_t v34 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 2);
      sub_1BFCCE6B0(v3, v34, v5, v31, v7, v6, 2);
      sub_1BFCCE6B0(v3, v34, v5, v31, v7, v6, 2);
      sub_1BFCCE6B0(v10, v92, v12, v32, v33, v107, 2);
      char v88 = sub_1C0A1513C(v3, v34, v5, v10, v92, v12);
      sub_1BFCCE780(v3, v34, v5, v116, v7, v6, 2);
      sub_1BFCCE780(v10, v92, v12, v32, v33, v107, 2);
      sub_1BFCCE780(v10, v92, v12, v32, v33, v107, 2);
      uint64_t v20 = v3;
      uint64_t v21 = v34;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 2;
      goto LABEL_26;
    case 3:
      if (v15 != 3) {
        goto LABEL_27;
      }
      uint64_t v35 = *(void *)(a1 + 24);
      uint64_t v36 = *(void *)(a2 + 24);
      uint64_t v93 = *(void *)(a2 + 8);
      uint64_t v37 = *(void *)(a2 + 32);
      uint64_t v108 = *(void *)(a2 + 40);
      uint64_t v38 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 3);
      sub_1BFCCE6B0(v3, v38, v5, v35, v7, v6, 3);
      sub_1BFCCE6B0(v3, v38, v5, v35, v7, v6, 3);
      sub_1BFCCE6B0(v10, v93, v12, v36, v37, v108, 3);
      char v88 = sub_1C0A1513C(v3, v38, v5, v10, v93, v12);
      sub_1BFCCE780(v3, v38, v5, v116, v7, v6, 3);
      sub_1BFCCE780(v10, v93, v12, v36, v37, v108, 3);
      sub_1BFCCE780(v10, v93, v12, v36, v37, v108, 3);
      uint64_t v20 = v3;
      uint64_t v21 = v38;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 3;
      goto LABEL_26;
    case 4:
      v118[0] = *(void *)a1;
      v118[1] = v2;
      v118[2] = v5;
      v118[3] = v4;
      v118[4] = v7;
      v118[5] = v6;
      if (v15 != 4) {
        goto LABEL_27;
      }
      v119[0] = v10;
      v119[1] = v9;
      v119[2] = v12;
      v119[3] = v11;
      uint64_t v39 = v11;
      uint64_t v40 = v14;
      v119[4] = v14;
      v119[5] = v13;
      uint64_t v41 = v13;
      uint64_t v86 = v10;
      uint64_t v89 = v12;
      uint64_t v94 = v9;
      uint64_t v42 = v12;
      uint64_t v43 = v2;
      uint64_t v103 = v2;
      sub_1BFCCE6B0(v10, v9, v42, v11, v14, v13, 4);
      uint64_t v44 = v7;
      uint64_t v45 = v7;
      uint64_t v46 = v6;
      uint64_t v85 = v6;
      sub_1BFCCE6B0(v3, v43, v5, v4, v45, v6, 4);
      uint64_t v47 = v44;
      uint64_t v87 = v44;
      sub_1BFCCE6B0(v3, v43, v5, v4, v44, v46, 4);
      sub_1BFCCE6B0(v86, v94, v89, v39, v40, v41, 4);
      BOOL v48 = sub_1C0A15258(v118, v119);
      sub_1BFCCE780(v3, v103, v5, v4, v47, v85, 4);
      sub_1BFCCE780(v86, v94, v89, v39, v40, v41, 4);
      sub_1BFCCE780(v86, v94, v89, v39, v40, v41, 4);
      sub_1BFCCE780(v3, v103, v5, v4, v87, v85, 4);
      return v48;
    case 5:
      if (v15 != 5) {
        goto LABEL_27;
      }
      uint64_t v49 = *(void *)(a1 + 24);
      uint64_t v50 = *(void *)(a2 + 24);
      uint64_t v95 = *(void *)(a2 + 8);
      uint64_t v51 = *(void *)(a2 + 32);
      uint64_t v109 = *(void *)(a2 + 40);
      uint64_t v52 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 5);
      sub_1BFCCE6B0(v3, v52, v5, v49, v7, v6, 5);
      sub_1BFCCE6B0(v3, v52, v5, v49, v7, v6, 5);
      sub_1BFCCE6B0(v10, v95, v12, v50, v51, v109, 5);
      char v88 = sub_1C0A1513C(v3, v52, v5, v10, v95, v12);
      sub_1BFCCE780(v3, v52, v5, v116, v7, v6, 5);
      sub_1BFCCE780(v10, v95, v12, v50, v51, v109, 5);
      sub_1BFCCE780(v10, v95, v12, v50, v51, v109, 5);
      uint64_t v20 = v3;
      uint64_t v21 = v52;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 5;
      goto LABEL_26;
    case 6:
      if (v15 != 6) {
        goto LABEL_27;
      }
      uint64_t v53 = *(void *)(a1 + 24);
      uint64_t v54 = *(void *)(a2 + 24);
      uint64_t v96 = *(void *)(a2 + 8);
      uint64_t v55 = *(void *)(a2 + 32);
      uint64_t v110 = *(void *)(a2 + 40);
      uint64_t v56 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 6);
      sub_1BFCCE6B0(v3, v56, v5, v53, v7, v6, 6);
      sub_1BFCCE6B0(v3, v56, v5, v53, v7, v6, 6);
      sub_1BFCCE6B0(v10, v96, v12, v54, v55, v110, 6);
      char v88 = sub_1C0A1513C(v3, v56, v5, v10, v96, v12);
      sub_1BFCCE780(v3, v56, v5, v116, v7, v6, 6);
      sub_1BFCCE780(v10, v96, v12, v54, v55, v110, 6);
      sub_1BFCCE780(v10, v96, v12, v54, v55, v110, 6);
      uint64_t v20 = v3;
      uint64_t v21 = v56;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 6;
      goto LABEL_26;
    case 7:
      if (v15 != 7) {
        goto LABEL_27;
      }
      uint64_t v57 = *(void *)(a1 + 24);
      uint64_t v58 = *(void *)(a2 + 24);
      uint64_t v97 = *(void *)(a2 + 8);
      uint64_t v59 = *(void *)(a2 + 32);
      uint64_t v111 = *(void *)(a2 + 40);
      uint64_t v60 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 7);
      sub_1BFCCE6B0(v3, v60, v5, v57, v7, v6, 7);
      sub_1BFCCE6B0(v3, v60, v5, v57, v7, v6, 7);
      sub_1BFCCE6B0(v10, v97, v12, v58, v59, v111, 7);
      char v88 = sub_1C0A1513C(v3, v60, v5, v10, v97, v12);
      sub_1BFCCE780(v3, v60, v5, v116, v7, v6, 7);
      sub_1BFCCE780(v10, v97, v12, v58, v59, v111, 7);
      sub_1BFCCE780(v10, v97, v12, v58, v59, v111, 7);
      uint64_t v20 = v3;
      uint64_t v21 = v60;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 7;
      goto LABEL_26;
    case 8:
      if (v15 != 8) {
        goto LABEL_27;
      }
      uint64_t v61 = *(void *)(a1 + 24);
      uint64_t v62 = *(void *)(a2 + 24);
      uint64_t v98 = *(void *)(a2 + 8);
      uint64_t v63 = *(void *)(a2 + 32);
      uint64_t v112 = *(void *)(a2 + 40);
      uint64_t v64 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 8);
      sub_1BFCCE6B0(v3, v64, v5, v61, v7, v6, 8);
      sub_1BFCCE6B0(v3, v64, v5, v61, v7, v6, 8);
      sub_1BFCCE6B0(v10, v98, v12, v62, v63, v112, 8);
      char v88 = sub_1C0A1513C(v3, v64, v5, v10, v98, v12);
      sub_1BFCCE780(v3, v64, v5, v116, v7, v6, 8);
      sub_1BFCCE780(v10, v98, v12, v62, v63, v112, 8);
      sub_1BFCCE780(v10, v98, v12, v62, v63, v112, 8);
      uint64_t v20 = v3;
      uint64_t v21 = v64;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 8;
      goto LABEL_26;
    case 9:
      if (v15 != 9) {
        goto LABEL_27;
      }
      uint64_t v65 = *(void *)(a1 + 24);
      uint64_t v66 = *(void *)(a2 + 24);
      uint64_t v99 = *(void *)(a2 + 8);
      uint64_t v67 = *(void *)(a2 + 32);
      uint64_t v113 = *(void *)(a2 + 40);
      uint64_t v68 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 9);
      sub_1BFCCE6B0(v3, v68, v5, v65, v7, v6, 9);
      sub_1BFCCE6B0(v3, v68, v5, v65, v7, v6, 9);
      sub_1BFCCE6B0(v10, v99, v12, v66, v67, v113, 9);
      char v88 = sub_1C0A1513C(v3, v68, v5, v10, v99, v12);
      sub_1BFCCE780(v3, v68, v5, v116, v7, v6, 9);
      sub_1BFCCE780(v10, v99, v12, v66, v67, v113, 9);
      sub_1BFCCE780(v10, v99, v12, v66, v67, v113, 9);
      uint64_t v20 = v3;
      uint64_t v21 = v68;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 9;
      goto LABEL_26;
    case 10:
      if (v15 != 10) {
        goto LABEL_27;
      }
      uint64_t v69 = *(void *)(a1 + 24);
      uint64_t v70 = *(void *)(a2 + 24);
      uint64_t v100 = *(void *)(a2 + 8);
      uint64_t v71 = *(void *)(a2 + 32);
      uint64_t v114 = *(void *)(a2 + 40);
      uint64_t v72 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 10);
      sub_1BFCCE6B0(v3, v72, v5, v69, v7, v6, 10);
      sub_1BFCCE6B0(v3, v72, v5, v69, v7, v6, 10);
      sub_1BFCCE6B0(v10, v100, v12, v70, v71, v114, 10);
      char v88 = sub_1C0A1513C(v3, v72, v5, v10, v100, v12);
      sub_1BFCCE780(v3, v72, v5, v116, v7, v6, 10);
      sub_1BFCCE780(v10, v100, v12, v70, v71, v114, 10);
      sub_1BFCCE780(v10, v100, v12, v70, v71, v114, 10);
      uint64_t v20 = v3;
      uint64_t v21 = v72;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 10;
      goto LABEL_26;
    case 11:
      if (v15 != 11) {
        goto LABEL_27;
      }
      uint64_t v73 = *(void *)(a1 + 24);
      uint64_t v74 = *(void *)(a2 + 24);
      uint64_t v101 = *(void *)(a2 + 8);
      uint64_t v75 = *(void *)(a2 + 32);
      uint64_t v115 = *(void *)(a2 + 40);
      uint64_t v76 = *(void *)(a1 + 8);
      sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 11);
      sub_1BFCCE6B0(v3, v76, v5, v73, v7, v6, 11);
      sub_1BFCCE6B0(v3, v76, v5, v73, v7, v6, 11);
      sub_1BFCCE6B0(v10, v101, v12, v74, v75, v115, 11);
      char v88 = sub_1C0A1513C(v3, v76, v5, v10, v101, v12);
      sub_1BFCCE780(v3, v76, v5, v116, v7, v6, 11);
      sub_1BFCCE780(v10, v101, v12, v74, v75, v115, 11);
      sub_1BFCCE780(v10, v101, v12, v74, v75, v115, 11);
      uint64_t v20 = v3;
      uint64_t v21 = v76;
      uint64_t v23 = v116;
      uint64_t v22 = v5;
      uint64_t v24 = v7;
      uint64_t v25 = v6;
      char v26 = 11;
      goto LABEL_26;
    default:
      if (*(unsigned char *)(a2 + 48))
      {
LABEL_27:
        uint64_t v78 = v3;
        uint64_t v79 = v5;
        uint64_t v80 = v4;
        uint64_t v81 = v9;
        uint64_t v102 = v3;
        uint64_t v104 = v2;
        uint64_t v82 = v13;
        uint64_t v83 = v14;
        uint64_t v84 = v11;
        sub_1BFCCE6B0(v78, v2, v79, v80, v7, v6, v8);
        sub_1BFCCE6B0(v10, v81, v12, v84, v83, v82, v15);
        sub_1BFCCE780(v102, v104, v117, v116, v7, v6, v8);
        sub_1BFCCE780(v10, v81, v12, v84, v83, v82, v15);
        return 0;
      }
      else
      {
        uint64_t v16 = *(void *)(a1 + 24);
        uint64_t v17 = *(void *)(a2 + 24);
        uint64_t v90 = *(void *)(a2 + 8);
        uint64_t v18 = *(void *)(a2 + 32);
        uint64_t v105 = *(void *)(a2 + 40);
        uint64_t v19 = *(void *)(a1 + 8);
        sub_1BFCCE6B0(v10, v9, v12, v11, v14, v13, 0);
        sub_1BFCCE6B0(v3, v19, v5, v16, v7, v6, 0);
        sub_1BFCCE6B0(v3, v19, v5, v16, v7, v6, 0);
        sub_1BFCCE6B0(v10, v90, v12, v17, v18, v105, 0);
        char v88 = sub_1C0A1513C(v3, v19, v5, v10, v90, v12);
        sub_1BFCCE780(v3, v19, v5, v116, v7, v6, 0);
        sub_1BFCCE780(v10, v90, v12, v17, v18, v105, 0);
        sub_1BFCCE780(v10, v90, v12, v17, v18, v105, 0);
        uint64_t v20 = v3;
        uint64_t v21 = v19;
        uint64_t v23 = v116;
        uint64_t v22 = v5;
        uint64_t v24 = v7;
        uint64_t v25 = v6;
        char v26 = 0;
LABEL_26:
        sub_1BFCCE780(v20, v21, v22, v23, v24, v25, v26);
        return v88 & 1;
      }
  }
}

unint64_t sub_1C0A170A0(uint64_t a1)
{
  unint64_t result = sub_1C0A170C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A170C8()
{
  unint64_t result = qword_1EA1A26D8;
  if (!qword_1EA1A26D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A26D8);
  }
  return result;
}

unint64_t sub_1C0A1711C(void *a1)
{
  a1[1] = sub_1BFCB1F40();
  a1[2] = sub_1C0900C98();
  unint64_t result = sub_1C0A17154();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0A17154()
{
  unint64_t result = qword_1EA1A26E0;
  if (!qword_1EA1A26E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A26E0);
  }
  return result;
}

uint64_t destroy for FormatAnimationNodeKeyPath(uint64_t a1)
{
  return sub_1BFCCE780(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for FormatAnimationNodeKeyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1BFCCE6B0(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatAnimationNodeKeyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1BFCCE6B0(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1BFCCE780(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for FormatAnimationNodeKeyPath(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1BFCCE780(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAnimationNodeKeyPath()
{
  return &type metadata for FormatAnimationNodeKeyPath;
}

uint64_t sub_1C0A17334()
{
  return swift_deallocObject();
}

id sub_1C0A17344(void *a1)
{
  return sub_1C0A150D8(a1, *(CGFloat *)(v1 + 16), 0.0, 0.0, 1.0);
}

uint64_t sub_1C0A1736C()
{
  return swift_deallocObject();
}

id sub_1C0A1737C(void *a1)
{
  return sub_1C0A150D8(a1, *(CGFloat *)(v1 + 16), 0.0, 1.0, 0.0);
}

uint64_t sub_1C0A173A4()
{
  return swift_deallocObject();
}

id sub_1C0A173B4(void *a1)
{
  return sub_1C0A150D8(a1, *(CGFloat *)(v1 + 16), 1.0, 0.0, 0.0);
}

uint64_t sub_1C0A173DC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A173EC()
{
  return swift_deallocObject();
}

id sub_1C0A173FC(void *a1, double a2, __n128 a3)
{
  a3.n128_u64[0] = 0;
  return sub_1C0A15068(a1, MEMORY[0x1E4F39B20], *(double *)(v3 + 16), a3);
}

uint64_t sub_1C0A17430()
{
  return swift_deallocObject();
}

id sub_1C0A17440(void *a1)
{
  return sub_1C0A14FF4(a1, MEMORY[0x1E4F39B20], *(double *)(v1 + 16), 0.0);
}

uint64_t sub_1C0A17474()
{
  return swift_deallocObject();
}

id sub_1C0A17484(void *a1, __n128 a2, __n128 a3)
{
  a2.n128_u64[0] = *(void *)(v3 + 16);
  a3.n128_u64[0] = 0;
  return sub_1C0A14F88(a1, MEMORY[0x1E4F39B20], a2, a3);
}

uint64_t sub_1C0A174B8()
{
  return swift_deallocObject();
}

id sub_1C0A174C8(void *a1)
{
  return sub_1C0A14F20(a1, *(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24));
}

uint64_t sub_1C0A174E4()
{
  return swift_deallocObject();
}

id sub_1C0A174F4(void *a1, double a2, __n128 a3)
{
  a3.n128_u64[0] = 1.0;
  return sub_1C0A15068(a1, MEMORY[0x1E4F39B18], *(double *)(v3 + 16), a3);
}

uint64_t sub_1C0A17528()
{
  return swift_deallocObject();
}

id sub_1C0A17538(void *a1)
{
  return sub_1C0A14FF4(a1, MEMORY[0x1E4F39B18], *(double *)(v1 + 16), 1.0);
}

uint64_t sub_1C0A1756C()
{
  return swift_deallocObject();
}

id sub_1C0A1757C(void *a1, __n128 a2, __n128 a3)
{
  a2.n128_u64[0] = *(void *)(v3 + 16);
  a3.n128_u64[0] = 1.0;
  return sub_1C0A14F88(a1, MEMORY[0x1E4F39B18], a2, a3);
}

uint64_t sub_1C0A175B0()
{
  return swift_deallocObject();
}

id sub_1C0A175C0(void *a1)
{
  return sub_1C0A14EB4(a1, *(CGFloat *)(v1 + 16));
}

uint64_t sub_1C0A175DC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A175EC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A175FC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1760C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1761C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1762C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1763C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1764C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1765C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1766C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1767C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0A1768C()
{
  return swift_deallocObject();
}

unint64_t sub_1C0A1769C()
{
  unint64_t result = qword_1EA1A26E8;
  if (!qword_1EA1A26E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A26E8);
  }
  return result;
}

uint64_t sub_1C0A17708(void *a1)
{
  sub_1C0A17C94(0, &qword_1EA1A26F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A178A4();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C15207CC();
  if (!v1)
  {
    v9[14] = 1;
    sub_1C152074C();
    v9[13] = 2;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0A178A4()
{
  unint64_t result = qword_1EB86AB78;
  if (!qword_1EB86AB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AB78);
  }
  return result;
}

uint64_t sub_1C0A178F8()
{
  uint64_t v1 = 0x6449636D75;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E65646469487369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6449676174;
  }
}

uint64_t sub_1C0A1794C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0A18024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A17974(uint64_t a1)
{
  unint64_t v2 = sub_1C0A178A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A179B0(uint64_t a1)
{
  unint64_t v2 = sub_1C0A178A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0A179EC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A17A4C(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0A17A34(void *a1)
{
  return sub_1C0A17708(a1);
}

uint64_t sub_1C0A17A4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A17C94(0, &qword_1EB86B7E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A178A4();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v20 = 1;
  uint64_t v17 = sub_1C152060C();
  uint64_t v18 = v13;
  char v19 = 2;
  char v14 = sub_1C152061C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  uint64_t v16 = v18;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v14 & 1;
  return result;
}

void sub_1C0A17C94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A178A4();
    unint64_t v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A17DC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys;
}

uint64_t initializeWithCopy for SportsTaxonomyGraphResourceLeafEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsTaxonomyGraphResourceLeafEntityNode(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for SportsTaxonomyGraphResourceLeafEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceLeafEntityNode()
{
  return &type metadata for SportsTaxonomyGraphResourceLeafEntityNode;
}

unint64_t sub_1C0A17F20()
{
  unint64_t result = qword_1EA1A26F8;
  if (!qword_1EA1A26F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A26F8);
  }
  return result;
}

unint64_t sub_1C0A17F78()
{
  unint64_t result = qword_1EB86AB88;
  if (!qword_1EB86AB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AB88);
  }
  return result;
}

unint64_t sub_1C0A17FD0()
{
  unint64_t result = qword_1EB86AB80;
  if (!qword_1EB86AB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AB80);
  }
  return result;
}

uint64_t sub_1C0A18024(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449636D75 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65646469487369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t SportsSyncingConfigV2Resource.sportsFavoritesSyncMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsSyncingConfigV2Resource.umcIDs.getter()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = sub_1C0A181F0();
    uint64_t v3 = sub_1C0A18260();
    uint64_t v1 = sub_1BFEF3988(v3, v2);
    *(void *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.umcIDs.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A181F0()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v1 = sub_1C0A188A8(v0, 0x736D616574, 0xE500000000000000);
    *(void *)(v0 + 56) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0A18260()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 72);
  }
  else
  {
    uint64_t v1 = sub_1C0A188A8(v0, 0x7365756761656CLL, 0xE700000000000000);
    *(void *)(v0 + 72) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*SportsSyncingConfigV2Resource.umcIDs.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.umcIDs.getter();
  return sub_1C0A1831C;
}

uint64_t sub_1C0A1831C(void *a1)
{
  *(void *)(a1[1] + 24) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t SportsSyncingConfigV2Resource.tagIDs.getter()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = sub_1C0A183A8();
    uint64_t v3 = sub_1C0A18418();
    uint64_t v1 = sub_1BFEF3988(v3, v2);
    *(void *)(v0 + 32) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.tagIDs.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A183A8()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 64);
  }
  else
  {
    uint64_t v1 = sub_1C0A189F8(v0, 0x736D616574, 0xE500000000000000);
    *(void *)(v0 + 64) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0A18418()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void *)(v0 + 80);
  }
  else
  {
    uint64_t v1 = sub_1C0A189F8(v0, 0x7365756761656CLL, 0xE700000000000000);
    *(void *)(v0 + 80) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*SportsSyncingConfigV2Resource.tagIDs.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.tagIDs.getter();
  return sub_1C0A184D4;
}

uint64_t sub_1C0A184D4(void *a1)
{
  *(void *)(a1[1] + 32) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v1 = sub_1C0A18640(v0, 0x736D616574, 0xE500000000000000);
    *(void *)(v0 + 40) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter();
  return sub_1C0A185AC;
}

uint64_t sub_1C0A185AC(void *a1)
{
  *(void *)(a1[1] + 40) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v1 = sub_1C0A18640(v0, 0x7365756761656CLL, 0xE700000000000000);
    *(void *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A18640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(*(void *)(a1 + 16) + 16) && (sub_1BFEF2D8C(a2, a3), (v3 & 1) != 0)) {
    uint64_t v4 = swift_bridgeObjectRetain();
  }
  else {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    unint64_t v7 = (void *)MEMORY[0x1E4FBC868];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  char v6 = (uint64_t *)(v4 + 56);
  unint64_t v7 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v10 = *(v6 - 3);
    uint64_t v9 = *(v6 - 2);
    uint64_t v11 = *(v6 - 1);
    uint64_t v12 = *v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = sub_1BFEF2D8C(v10, v9);
    uint64_t v16 = v7[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (v7[3] >= v18)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v14) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1C106AFB0();
        if (v19) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1C105548C(v18, isUniquelyReferenced_nonNull_native);
      unint64_t v20 = sub_1BFEF2D8C(v10, v9);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_24;
      }
      unint64_t v15 = v20;
      if (v19)
      {
LABEL_7:
        uint64_t v8 = (void *)(v7[7] + 16 * v15);
        swift_bridgeObjectRelease();
        *uint64_t v8 = v11;
        v8[1] = v12;
        goto LABEL_8;
      }
    }
    v7[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v22 = (uint64_t *)(v7[6] + 16 * v15);
    uint64_t *v22 = v10;
    v22[1] = v9;
    uint64_t v23 = (void *)(v7[7] + 16 * v15);
    *uint64_t v23 = v11;
    v23[1] = v12;
    uint64_t v24 = v7[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_23;
    }
    v7[2] = v26;
    swift_bridgeObjectRetain();
LABEL_8:
    v6 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v5) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t (*SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter();
  return sub_1C0A18898;
}

uint64_t sub_1C0A18898(void *a1)
{
  *(void *)(a1[1] + 48) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A188A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!*(void *)(v3 + 16))
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    int64_t v8 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v8) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  unint64_t v5 = sub_1BFEF2D8C(a2, a3);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    int64_t v8 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(*(void *)(v3 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  int64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    goto LABEL_12;
  }
LABEL_6:
  sub_1BFF661B8(0, v8, 0);
  uint64_t v9 = v4;
  uint64_t v10 = (uint64_t *)(v7 + 40);
  do
  {
    uint64_t v12 = *(v10 - 1);
    uint64_t v11 = *v10;
    unint64_t v13 = *(void *)(v9 + 16);
    unint64_t v14 = *(void *)(v9 + 24);
    swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1) {
      sub_1BFF661B8(v14 > 1, v13 + 1, 1);
    }
    v10 += 4;
    *(void *)(v9 + 16) = v13 + 1;
    uint64_t v15 = v9 + 16 * v13;
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v11;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v16 = sub_1BFEF4060(v9);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C0A189F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!*(void *)(v3 + 16))
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    int64_t v8 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v8) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  unint64_t v5 = sub_1BFEF2D8C(a2, a3);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    int64_t v8 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(*(void *)(v3 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  int64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    goto LABEL_12;
  }
LABEL_6:
  sub_1BFF661B8(0, v8, 0);
  uint64_t v9 = v4;
  uint64_t v10 = (uint64_t *)(v7 + 56);
  do
  {
    uint64_t v12 = *(v10 - 1);
    uint64_t v11 = *v10;
    unint64_t v13 = *(void *)(v9 + 16);
    unint64_t v14 = *(void *)(v9 + 24);
    swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1) {
      sub_1BFF661B8(v14 > 1, v13 + 1, 1);
    }
    *(void *)(v9 + 16) = v13 + 1;
    uint64_t v15 = v9 + 16 * v13;
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v11;
    v10 += 4;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v16 = sub_1BFEF4060(v9);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_1C0A18B48()
{
  return 0xD000000000000016;
}

uint64_t sub_1C0A18B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0A19970(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0A18B90(uint64_t a1)
{
  unint64_t v2 = sub_1C0A18E00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A18BCC(uint64_t a1)
{
  unint64_t v2 = sub_1C0A18E00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsSyncingConfigV2Resource.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsSyncingConfigV2Resource.__deallocating_deinit()
{
  SportsSyncingConfigV2Resource.deinit();
  return swift_deallocClassInstance();
}

uint64_t SportsSyncingConfigV2Resource.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0A19298(0, &qword_1EA1A2700, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A18E00();
  sub_1C1520F0C();
  v10[1] = *(void *)(v2 + 16);
  sub_1C0A18E54();
  sub_1C0A18F14();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C0A18E00()
{
  unint64_t result = qword_1EA1A2708;
  if (!qword_1EA1A2708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2708);
  }
  return result;
}

void sub_1C0A18E54()
{
  if (!qword_1EA1A2710)
  {
    sub_1C0A18EBC();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2710);
    }
  }
}

void sub_1C0A18EBC()
{
  if (!qword_1EA1A2718)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2718);
    }
  }
}

unint64_t sub_1C0A18F14()
{
  unint64_t result = qword_1EA1A2720;
  if (!qword_1EA1A2720)
  {
    sub_1C0A18E54();
    sub_1C0A193A4(&qword_1EA1A2728, (void (*)(void))sub_1C0A18FBC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2720);
  }
  return result;
}

unint64_t sub_1C0A18FBC()
{
  unint64_t result = qword_1EA1A2730;
  if (!qword_1EA1A2730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2730);
  }
  return result;
}

uint64_t SportsSyncingConfigV2Resource.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsSyncingConfigV2Resource.init(from:)(a1);
  return v2;
}

uint64_t SportsSyncingConfigV2Resource.init(from:)(void *a1)
{
  v10[1] = *(void *)v1;
  sub_1C0A19298(0, &qword_1EA1A2738, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v8 = (char *)v10 - v7;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A18E00();
  sub_1C1520EBC();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1C0A18E54();
    sub_1C0A192FC();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v1 + 16) = v10[3];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0A19298(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A18E00();
    unint64_t v7 = a3(a1, &type metadata for SportsSyncingConfigV2Resource.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0A192FC()
{
  unint64_t result = qword_1EA1A2740;
  if (!qword_1EA1A2740)
  {
    sub_1C0A18E54();
    sub_1C0A193A4(&qword_1EA1A2748, (void (*)(void))sub_1C0A19410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2740);
  }
  return result;
}

uint64_t sub_1C0A193A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0A18EBC();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0A19410()
{
  unint64_t result = qword_1EA1A2750;
  if (!qword_1EA1A2750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2750);
  }
  return result;
}

uint64_t sub_1C0A19464@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsSyncingConfigV2Resource.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0A194BC(void *a1)
{
  return SportsSyncingConfigV2Resource.encode(to:)(a1);
}

uint64_t sub_1C0A194E0()
{
  return SportsSyncingConfigV2Resource.umcIDs.getter();
}

uint64_t sub_1C0A19504()
{
  return SportsSyncingConfigV2Resource.tagIDs.getter();
}

uint64_t sub_1C0A19528()
{
  return SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter();
}

uint64_t sub_1C0A1954C()
{
  return SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter();
}

uint64_t sub_1C0A19570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SportsSyncingConfigV2Resource.umcIDs.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A1959C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 24) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A195E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SportsSyncingConfigV2Resource.tagIDs.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A1960C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 32) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A19650@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A1967C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 40) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A196C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A196EC(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 48) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SportsSyncingConfigV2Resource()
{
  return self;
}

uint64_t method lookup function for SportsSyncingConfigV2Resource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsSyncingConfigV2Resource);
}

uint64_t dispatch thunk of SportsSyncingConfigV2Resource.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for SportsSyncingConfigV2Resource.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0A19830);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsSyncingConfigV2Resource.CodingKeys()
{
  return &type metadata for SportsSyncingConfigV2Resource.CodingKeys;
}

unint64_t sub_1C0A1986C()
{
  unint64_t result = qword_1EA1A2758;
  if (!qword_1EA1A2758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2758);
  }
  return result;
}

unint64_t sub_1C0A198C4()
{
  unint64_t result = qword_1EA1A2760;
  if (!qword_1EA1A2760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2760);
  }
  return result;
}

unint64_t sub_1C0A1991C()
{
  unint64_t result = qword_1EA1A2768;
  if (!qword_1EA1A2768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2768);
  }
  return result;
}

uint64_t sub_1C0A19970(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001C1618D20)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1C0A199F8(void *a1)
{
  sub_1C0A1FE44(0, &qword_1EA1A27A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0A1FDF0();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v1)
  {
    type metadata accessor for DebugInspectionWebEmbed();
    char v14 = 1;
    sub_1C1515FDC();
    sub_1C0A1FEA8((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    sub_1C152080C();
    char v13 = 2;
    sub_1C152078C();
    char v12 = 3;
    sub_1C152078C();
    char v11 = 4;
    type metadata accessor for DebugInspectionHeadline(0);
    sub_1C0A1FEA8(&qword_1EA1A27B0, (void (*)(uint64_t))type metadata accessor for DebugInspectionHeadline);
    sub_1C152078C();
    char v10 = 5;
    type metadata accessor for WebEmbedDataVisualization();
    sub_1C0A1FEA8((unint64_t *)&unk_1EB867C90, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0A19D28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v31 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A1B250(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v32 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v33 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v29 - v10;
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v34 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A1FE44(0, &qword_1EA1A2790, MEMORY[0x1E4FBBDC0]);
  uint64_t v37 = v15;
  uint64_t v35 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  BOOL v17 = (char *)v29 - v16;
  uint64_t v18 = (int *)type metadata accessor for DebugInspectionWebEmbed();
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (void *)((char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = a1[3];
  uint64_t v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1C0A1FDF0();
  uint64_t v36 = v17;
  uint64_t v22 = v39;
  sub_1C1520EBC();
  if (v22) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  uint64_t v23 = v35;
  char v45 = 0;
  *unint64_t v20 = sub_1C152069C();
  v20[1] = v24;
  char v44 = 1;
  sub_1C0A1FEA8((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v20 + v18[5], v14, v12);
  char v43 = 2;
  sub_1C152065C();
  v29[1] = v12;
  sub_1C0A1B38C((uint64_t)v11, (uint64_t)v20 + v18[6], (uint64_t (*)(void))sub_1BFF00BEC);
  char v42 = 3;
  uint64_t v25 = (uint64_t)v33;
  uint64_t v39 = 0;
  sub_1C152065C();
  sub_1C0A1B38C(v25, (uint64_t)v20 + v18[7], (uint64_t (*)(void))sub_1BFF00BEC);
  type metadata accessor for DebugInspectionHeadline(0);
  char v41 = 4;
  sub_1C0A1FEA8(&qword_1EA1A27A0, (void (*)(uint64_t))type metadata accessor for DebugInspectionHeadline);
  uint64_t v26 = (uint64_t)v32;
  sub_1C152065C();
  sub_1C0A1B38C(v26, (uint64_t)v20 + v18[8], (uint64_t (*)(void))sub_1C0A1B250);
  type metadata accessor for WebEmbedDataVisualization();
  char v40 = 5;
  sub_1C0A1FEA8(&qword_1EB867CB0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v27 = (uint64_t)v31;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v36, v37);
  sub_1C0A1B38C(v27, (uint64_t)v20 + v18[9], (uint64_t (*)(void))sub_1BFECFC20);
  sub_1BFE0BEB8((uint64_t)v20, v30, (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_1BFF51104((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed);
}

uint64_t sub_1C0A1A480()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 5001813;
      break;
    case 2:
      uint64_t result = 0x6C69467865646E69;
      break;
    case 3:
      uint64_t result = 0x4C525561746164;
      break;
    case 4:
      uint64_t result = 0x656E696C64616568;
      break;
    case 5:
      uint64_t result = 0x7A696C6175736976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0A1A558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0A200FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A1A580(uint64_t a1)
{
  unint64_t v2 = sub_1C0A1FDF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0A1A5BC(uint64_t a1)
{
  unint64_t v2 = sub_1C0A1FDF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0A1A5F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0A19D28(a1, a2);
}

uint64_t sub_1C0A1A610(void *a1)
{
  return sub_1C0A199F8(a1);
}

uint64_t sub_1C0A1A628@<X0>(uint64_t *a1@<X8>)
{
  BOOL v77 = a1;
  uint64_t v95 = *MEMORY[0x1E4F143B8];
  sub_1C0A1B250(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v76 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v80 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v79 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v73 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v75 = (uint64_t)&v71 - v9;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v78 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v71 - v13;
  sub_1C0A1B284(0, &qword_1EA1A2778, (uint64_t (*)(uint64_t))sub_1C03A1444, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0A1B2E8();
  uint64_t v74 = v15;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C152A660;
  *(void *)(v16 + 32) = 0x696669746E656449;
  *(void *)(v16 + 40) = 0xEA00000000007265;
  uint64_t v17 = *v1;
  uint64_t v18 = v1[1];
  uint64_t v19 = MEMORY[0x1E4FBB208];
  *(void *)(v16 + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 80) = v19;
  *(void *)(v16 + 48) = v17;
  *(void *)(v16 + 56) = v18;
  *(unsigned char *)(v16 + 88) = 0;
  *(void *)(v16 + 96) = 5001813;
  *(void *)(v16 + 104) = 0xE300000000000000;
  uint64_t v20 = type metadata accessor for DebugInspectionWebEmbed();
  uint64_t v21 = (char *)v1 + *(int *)(v20 + 20);
  uint64_t v22 = sub_1C1515FDC();
  *(void *)(v16 + 136) = v22;
  uint64_t v23 = sub_1C0A1FEA8((unint64_t *)&qword_1EB861120, MEMORY[0x1E4F276F0]);
  *(void *)(v16 + 144) = v23;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v16 + 112));
  uint64_t v25 = *(void *)(v22 - 8);
  uint64_t v26 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v86 = v25 + 16;
  uint64_t v85 = v26;
  v26(boxed_opaque_existential_0, (uint64_t)v21, v22);
  *(unsigned char *)(v16 + 152) = 0;
  strcpy((char *)(v16 + 160), "Index File URL");
  *(unsigned char *)(v16 + 175) = -18;
  uint64_t v82 = v20;
  uint64_t v27 = *(int *)(v20 + 24);
  uint64_t v84 = v1;
  sub_1BFE0BEB8((uint64_t)v1 + v27, (uint64_t)v14, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v29 = v28(v14, 1, v22);
  uint64_t v87 = v23;
  if (v29 == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFF51104((uint64_t)v14, (uint64_t (*)(void))sub_1BFF00BEC);
    *(_OWORD *)(v16 + 176) = 0u;
    *(_OWORD *)(v16 + 192) = 0u;
    *(void *)(v16 + 208) = 0;
  }
  else
  {
    *(void *)(v16 + 200) = v22;
    *(void *)(v16 + 208) = v23;
    uint64_t v30 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v16 + 176));
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 32))(v30, v14, v22);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v16 + 216) = 0;
  *(void *)(v16 + 224) = 0x4C52552061746144;
  *(void *)(v16 + 232) = 0xE800000000000000;
  uint64_t v31 = v82;
  uint64_t v32 = v84;
  uint64_t v33 = v78;
  sub_1BFE0BEB8((uint64_t)v84 + *(int *)(v82 + 28), v78, (uint64_t (*)(void))sub_1BFF00BEC);
  int v34 = v28((char *)v33, 1, v22);
  uint64_t v35 = (uint64_t)v80;
  if (v34 == 1)
  {
    sub_1BFF51104(v33, (uint64_t (*)(void))sub_1BFF00BEC);
    *(_OWORD *)(v16 + 240) = 0u;
    *(_OWORD *)(v16 + 256) = 0u;
    *(void *)(v16 + 272) = 0;
  }
  else
  {
    uint64_t v36 = v87;
    *(void *)(v16 + 264) = v22;
    *(void *)(v16 + 272) = v36;
    uint64_t v37 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v16 + 240));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 32))(v37, v33, v22);
  }
  uint64_t v38 = (void *)inited;
  *(unsigned char *)(v16 + 280) = 0;
  v38[7] = &type metadata for DebugInspectionDataSection;
  v38[8] = &off_1F1B9F170;
  v38[4] = 0x6465626D45626557;
  v38[5] = 0xE800000000000000;
  void v38[6] = v16;
  uint64_t v39 = v32;
  sub_1BFE0BEB8((uint64_t)v32 + *(int *)(v31 + 36), v35, (uint64_t (*)(void))sub_1BFECFC20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v35, 1, v81) == 1)
  {
    sub_1BFF51104(v35, (uint64_t (*)(void))sub_1BFECFC20);
    char v40 = v77;
    uint64_t v41 = (uint64_t)v76;
    goto LABEL_30;
  }
  uint64_t v42 = v75;
  sub_1C0A1B38C(v35, v75, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1C1527210;
  *(void *)(v43 + 32) = 0x696669746E656449;
  *(void *)(v43 + 40) = 0xEA00000000007265;
  uint64_t v44 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v45 = MEMORY[0x1E4FBB1A0];
  *(void *)(v43 + 72) = MEMORY[0x1E4FBB1A0];
  uint64_t v46 = MEMORY[0x1E4FBB208];
  *(void *)(v43 + 80) = MEMORY[0x1E4FBB208];
  *(void *)(v43 + 48) = v44;
  *(void *)(v43 + 56) = v47;
  *(unsigned char *)(v43 + 88) = 0;
  *(void *)(v43 + 96) = 1684957515;
  *(void *)(v43 + 104) = 0xE400000000000000;
  uint64_t v48 = WebEmbedDataVisualization.kind.getter();
  *(void *)(v43 + 136) = v45;
  *(void *)(v43 + 144) = v46;
  *(void *)(v43 + 112) = v48;
  *(void *)(v43 + 120) = v49;
  *(unsigned char *)(v43 + 152) = 0;
  *((void *)&v90 + 1) = &type metadata for DebugInspectionDataSection;
  uint64_t v91 = &off_1F1B9F170;
  strcpy((char *)&v89, "Visualization");
  HIWORD(v89) = -4864;
  *(void *)&long long v90 = v43;
  unint64_t v51 = v38[2];
  unint64_t v50 = v38[3];
  if (v51 >= v50 >> 1) {
    uint64_t v38 = sub_1C0EE6BC8((void *)(v50 > 1), v51 + 1, 1, v38);
  }
  uint64_t v52 = v73;
  void v38[2] = v51 + 1;
  sub_1C0A1B38C((uint64_t)&v89, (uint64_t)&v38[5 * v51 + 4], (uint64_t (*)(void))sub_1C03A1444);
  sub_1BFE0BEB8(v42, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v39 = v84;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v54 = v71;
    sub_1C0A1B38C((uint64_t)v52, v71, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    unint64_t v55 = *(void *)(v54 + *(int *)(v72 + 24));
    swift_bridgeObjectRetain();
    sub_1BFF51104(v54, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    *(void *)&long long v89 = *v52;
    unint64_t v55 = SportsDataVisualization.urlDataSources.getter();
    swift_release();
  }
  if (v55 >> 62)
  {
    uint64_t v56 = sub_1C15204BC();
    if (v56) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v56)
    {
LABEL_16:
      uint64_t v88 = MEMORY[0x1E4FBC860];
      sub_1C05F7B68(0, v56 & ~(v56 >> 63), 0);
      if (v56 < 0) {
        __break(1u);
      }
      uint64_t inited = (uint64_t)v38;
      uint64_t v57 = 0;
      uint64_t v58 = v88;
      do
      {
        if ((v55 & 0xC000000000000001) != 0)
        {
          uint64_t v59 = MEMORY[0x1C18C7CB0](v57, v55);
        }
        else
        {
          uint64_t v59 = *(void *)(v55 + 8 * v57 + 32);
          swift_retain();
        }
        uint64_t v60 = *(void *)(v59 + 40);
        *(void *)&long long v89 = *(void *)(v59 + 32);
        *((void *)&v89 + 1) = v60;
        uint64_t v61 = v59 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
        uint64_t v92 = v22;
        uint64_t v93 = v87;
        uint64_t v62 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v90);
        v85(v62, v61, v22);
        char v94 = 0;
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v88 = v58;
        unint64_t v64 = *(void *)(v58 + 16);
        unint64_t v63 = *(void *)(v58 + 24);
        if (v64 >= v63 >> 1)
        {
          sub_1C05F7B68(v63 > 1, v64 + 1, 1);
          uint64_t v58 = v88;
        }
        ++v57;
        *(void *)(v58 + 16) = v64 + 1;
        sub_1C0A1B3F4((uint64_t)&v89, v58 + (v64 << 6) + 32);
      }
      while (v56 != v57);
      swift_bridgeObjectRelease();
      uint64_t v39 = v84;
      uint64_t v38 = (void *)inited;
      uint64_t v42 = v75;
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v58 = MEMORY[0x1E4FBC860];
LABEL_27:
  *((void *)&v90 + 1) = &type metadata for DebugInspectionDataSection;
  uint64_t v91 = &off_1F1B9F170;
  strcpy((char *)&v89, "Data Sources");
  BYTE13(v89) = 0;
  HIWORD(v89) = -5120;
  *(void *)&long long v90 = v58;
  unint64_t v66 = v38[2];
  unint64_t v65 = v38[3];
  char v40 = v77;
  if (v66 >= v65 >> 1) {
    uint64_t v38 = sub_1C0EE6BC8((void *)(v65 > 1), v66 + 1, 1, v38);
  }
  void v38[2] = v66 + 1;
  sub_1C0A1B38C((uint64_t)&v89, (uint64_t)&v38[5 * v66 + 4], (uint64_t (*)(void))sub_1C03A1444);
  sub_1BFF51104(v42, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v41 = (uint64_t)v76;
  uint64_t v31 = v82;
LABEL_30:
  sub_1BFE0BEB8((uint64_t)v39 + *(int *)(v31 + 32), v41, (uint64_t (*)(void))sub_1C0A1B250);
  uint64_t v67 = type metadata accessor for DebugInspectionHeadline(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v41, 1, v67) == 1)
  {
    sub_1BFF51104(v41, (uint64_t (*)(void))sub_1C0A1B250);
    long long v89 = 0u;
    long long v90 = 0u;
    uint64_t v91 = 0;
  }
  else
  {
    sub_1C108C744((uint64_t *)&v89);
    sub_1BFF51104(v41, type metadata accessor for DebugInspectionHeadline);
  }
  unint64_t v69 = v38[2];
  unint64_t v68 = v38[3];
  if (v69 >= v68 >> 1) {
    uint64_t v38 = sub_1C0EE6BC8((void *)(v68 > 1), v69 + 1, 1, v38);
  }
  void v38[2] = v69 + 1;
  sub_1C0A1B38C((uint64_t)&v89, (uint64_t)&v38[5 * v69 + 4], (uint64_t (*)(void))sub_1C03A1444);
  uint64_t result = sub_1C03A101C((uint64_t)v38);
  void v40[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  v40[4] = (uint64_t)&off_1F1B9F238;
  uint64_t *v40 = result;
  return result;
}

void sub_1C0A1B250(uint64_t a1)
{
}

void sub_1C0A1B284(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0A1B2E8()
{
  if (!qword_1EA198210)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198210);
    }
  }
}

uint64_t type metadata accessor for DebugInspectionWebEmbed()
{
  uint64_t result = qword_1EA1A2780;
  if (!qword_1EA1A2780) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0A1B38C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0A1B3F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t *sub_1C0A1B450(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a3[5];
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    v12(v8, v9, v10);
    uint64_t v115 = a3;
    uint64_t v13 = a3[6];
    char v14 = (char *)v3 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v16((char *)a2 + v13, 1, v10))
    {
      sub_1BFF00BEC();
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)v3 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v16((char *)a2 + v19, 1, v10))
    {
      sub_1BFF00BEC();
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v12(v20, v21, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
    }
    uint64_t v114 = v12;
    uint64_t v23 = a3;
    uint64_t v24 = a3[8];
    uint64_t v25 = (uint64_t *)((char *)v3 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for DebugInspectionHeadline(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1C0A1B250(0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v111 = v28;
      uint64_t v112 = v10;
      uint64_t v113 = v27;
      uint64_t v106 = v3;
      uint64_t v30 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v30;
      uint64_t v31 = v26[3];
      v25[2] = v26[2];
      v25[3] = v31;
      *((unsigned char *)v25 + 32) = *((unsigned char *)v26 + 32);
      uint64_t v32 = v26[6];
      v25[5] = v26[5];
      v25[6] = v32;
      v25[7] = v26[7];
      uint64_t v33 = (int *)type metadata accessor for DebugInspectionArticleData(0);
      uint64_t v34 = v33[9];
      __dst = (char *)v25 + v34;
      uint64_t v108 = (char *)v26 + v34;
      uint64_t v35 = sub_1C151631C();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v109(v108, 1, v35))
      {
        sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        memcpy(__dst, v108, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v108, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
      }
      uint64_t v38 = v33[10];
      uint64_t v39 = (char *)v25 + v38;
      char v40 = (char *)v26 + v38;
      unint64_t v41 = *((void *)v40 + 1);
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v42 = *(void *)v40;
        sub_1BFE95820(*(void *)v40, *((void *)v40 + 1));
        *(void *)uint64_t v39 = v42;
        *((void *)v39 + 1) = v41;
      }
      *(void *)((char *)v25 + v33[11]) = *(void *)((char *)v26 + v33[11]);
      uint64_t v43 = v33[12];
      uint64_t v44 = (char *)v25 + v43;
      uint64_t v45 = (char *)v26 + v43;
      *(void *)uint64_t v44 = *(void *)v45;
      v44[8] = v45[8];
      *((unsigned char *)v25 + v33[13]) = *((unsigned char *)v26 + v33[13]);
      *((unsigned char *)v25 + v33[14]) = *((unsigned char *)v26 + v33[14]);
      uint64_t v46 = v33[15];
      uint64_t v47 = (void *)((char *)v25 + v46);
      uint64_t v48 = (void *)((char *)v26 + v46);
      uint64_t v49 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v49;
      *((unsigned char *)v25 + v33[16]) = *((unsigned char *)v26 + v33[16]);
      *((unsigned char *)v25 + v33[17]) = *((unsigned char *)v26 + v33[17]);
      *((unsigned char *)v25 + v33[18]) = *((unsigned char *)v26 + v33[18]);
      *((unsigned char *)v25 + v33[19]) = *((unsigned char *)v26 + v33[19]);
      *((unsigned char *)v25 + v33[20]) = *((unsigned char *)v26 + v33[20]);
      *((unsigned char *)v25 + v33[21]) = *((unsigned char *)v26 + v33[21]);
      *((unsigned char *)v25 + v33[22]) = *((unsigned char *)v26 + v33[22]);
      *((unsigned char *)v25 + v33[23]) = *((unsigned char *)v26 + v33[23]);
      *((unsigned char *)v25 + v33[24]) = *((unsigned char *)v26 + v33[24]);
      uint64_t v50 = v33[25];
      unint64_t v51 = (char *)v25 + v50;
      uint64_t v52 = (char *)v26 + v50;
      v51[8] = v52[8];
      *(void *)unint64_t v51 = *(void *)v52;
      uint64_t v53 = v33[26];
      uint64_t v54 = (char *)v25 + v53;
      unint64_t v55 = (char *)v26 + v53;
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v55[8];
      uint64_t v56 = v33[27];
      uint64_t v57 = (void *)((char *)v25 + v56);
      uint64_t v58 = (void *)((char *)v26 + v56);
      uint64_t v59 = v58[1];
      *uint64_t v57 = *v58;
      v57[1] = v59;
      uint64_t v60 = v58[3];
      void v57[2] = v58[2];
      void v57[3] = v60;
      uint64_t v61 = v33[28];
      uint64_t v62 = (void *)((char *)v25 + v61);
      unint64_t v63 = (void *)((char *)v26 + v61);
      uint64_t v64 = v63[1];
      void *v62 = *v63;
      v62[1] = v64;
      *(void *)((char *)v25 + v33[29]) = *(void *)((char *)v26 + v33[29]);
      uint64_t v65 = v33[30];
      unint64_t v66 = (void *)((char *)v25 + v65);
      uint64_t v67 = (void *)((char *)v26 + v65);
      uint64_t v68 = v67[1];
      *unint64_t v66 = *v67;
      v66[1] = v68;
      uint64_t v69 = v33[31];
      uint64_t v110 = (char *)v25 + v69;
      uint64_t v70 = (void *)((char *)v26 + v69);
      unint64_t v71 = *(void *)((char *)v26 + v69 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v110 = *(_OWORD *)v70;
      }
      else
      {
        uint64_t v72 = *v70;
        sub_1BFE95820(*v70, v71);
        *(void *)uint64_t v110 = v72;
        *((void *)v110 + 1) = v71;
      }
      uint64_t v3 = v106;
      *(void *)((char *)v25 + v33[32]) = *(void *)((char *)v26 + v33[32]);
      uint64_t v73 = *(int *)(v113 + 20);
      uint64_t v74 = (char *)v25 + v73;
      uint64_t v75 = (char *)v26 + v73;
      char *v74 = *((unsigned char *)v26 + v73);
      uint64_t v76 = *(void *)((char *)v26 + v73 + 16);
      *((void *)v74 + 1) = *(void *)((char *)v26 + v73 + 8);
      *((void *)v74 + 2) = v76;
      uint64_t v77 = *(void *)((char *)v26 + v73 + 32);
      *((void *)v74 + 3) = *(void *)((char *)v26 + v73 + 24);
      *((void *)v74 + 4) = v77;
      *((void *)v74 + 5) = *(void *)((char *)v26 + v73 + 40);
      v74[48] = *((unsigned char *)v26 + v73 + 48);
      uint64_t v78 = *(void *)((char *)v26 + v73 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v78)
      {
        *(_OWORD *)(v74 + 56) = *(_OWORD *)(v75 + 56);
        long long v79 = *(_OWORD *)(v75 + 88);
        *(_OWORD *)(v74 + 72) = *(_OWORD *)(v75 + 72);
        *(_OWORD *)(v74 + 88) = v79;
        long long v80 = *(_OWORD *)(v75 + 120);
        *(_OWORD *)(v74 + 104) = *(_OWORD *)(v75 + 104);
        *(_OWORD *)(v74 + 120) = v80;
        long long v81 = *(_OWORD *)(v75 + 152);
        *(_OWORD *)(v74 + 136) = *(_OWORD *)(v75 + 136);
        *(_OWORD *)(v74 + 152) = v81;
        long long v82 = *(_OWORD *)(v75 + 184);
        *(_OWORD *)(v74 + 168) = *(_OWORD *)(v75 + 168);
        *(_OWORD *)(v74 + 184) = v82;
        long long v83 = *(_OWORD *)(v75 + 216);
        *(_OWORD *)(v74 + 200) = *(_OWORD *)(v75 + 200);
        *(_OWORD *)(v74 + 216) = v83;
        long long v84 = *(_OWORD *)(v75 + 248);
        *(_OWORD *)(v74 + 232) = *(_OWORD *)(v75 + 232);
        *(_OWORD *)(v74 + 248) = v84;
        *((void *)v74 + 33) = *((void *)v75 + 33);
        *((_OWORD *)v74 + 17) = *((_OWORD *)v75 + 17);
        *((_OWORD *)v74 + 18) = *((_OWORD *)v75 + 18);
        *((_OWORD *)v74 + 19) = *((_OWORD *)v75 + 19);
        *((_OWORD *)v74 + 20) = *((_OWORD *)v75 + 20);
        *((_OWORD *)v74 + 21) = *((_OWORD *)v75 + 21);
        uint64_t v85 = *((void *)v75 + 45);
        *((void *)v74 + 44) = *((void *)v75 + 44);
        *((void *)v74 + 45) = v85;
        *((_OWORD *)v74 + 23) = *((_OWORD *)v75 + 23);
        *((void *)v74 + 48) = *((void *)v75 + 48);
        long long v86 = *(_OWORD *)(v75 + 392);
        long long v87 = *(_OWORD *)(v75 + 408);
        long long v88 = *(_OWORD *)(v75 + 440);
        *(_OWORD *)(v74 + 424) = *(_OWORD *)(v75 + 424);
        *(_OWORD *)(v74 + 440) = v88;
        *(_OWORD *)(v74 + 392) = v86;
        *(_OWORD *)(v74 + 408) = v87;
        uint64_t v89 = *((void *)v75 + 58);
        *((void *)v74 + 57) = *((void *)v75 + 57);
        *((void *)v74 + 58) = v89;
        *((void *)v74 + 59) = *((void *)v75 + 59);
        *((_OWORD *)v74 + 30) = *((_OWORD *)v75 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v74 + 56, v75 + 56, 0x1B8uLL);
      }
      uint64_t v90 = *((void *)v75 + 63);
      *((void *)v74 + 62) = *((void *)v75 + 62);
      *((void *)v74 + 63) = v90;
      *((void *)v74 + 64) = *((void *)v75 + 64);
      *((void *)v74 + 65) = *((void *)v75 + 65);
      v74[528] = v75[528];
      *((void *)v74 + 67) = *((void *)v75 + 67);
      *((void *)v74 + 68) = *((void *)v75 + 68);
      *((void *)v74 + 69) = *((void *)v75 + 69);
      *((void *)v74 + 70) = *((void *)v75 + 70);
      *((void *)v74 + 71) = *((void *)v75 + 71);
      *(_WORD *)((char *)v25 + *(int *)(v113 + 24)) = *(_WORD *)((char *)v26 + *(int *)(v113 + 24));
      uint64_t v91 = *(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v91(v25, 0, 1, v113);
      uint64_t v10 = v112;
      uint64_t v23 = v115;
    }
    uint64_t v92 = v23[9];
    uint64_t v93 = (uint64_t *)((char *)v3 + v92);
    char v94 = (uint64_t *)((char *)a2 + v92);
    uint64_t v95 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v96 = *(void *)(v95 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
    {
      sub_1BFECFC20(0);
      memcpy(v93, v94, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v99 = *v94;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v100 = v94[1];
        *uint64_t v93 = v99;
        v93[1] = v100;
        uint64_t v101 = type metadata accessor for GenericDataVisualization();
        uint64_t v102 = *(int *)(v101 + 20);
        uint64_t v103 = (char *)v93 + v102;
        uint64_t v104 = (char *)v94 + v102;
        swift_bridgeObjectRetain();
        v114(v103, v104, v10);
        *(void *)((char *)v93 + *(int *)(v101 + 24)) = *(uint64_t *)((char *)v94 + *(int *)(v101 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *uint64_t v93 = v99;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    }
  }
  return v3;
}

uint64_t sub_1C0A1BE34(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v9(v8, 1, v5)) {
    v7(v8, v5);
  }
  uint64_t v10 = a1 + a2[7];
  if (!v9(v10, 1, v5)) {
    v7(v10, v5);
  }
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = type metadata accessor for DebugInspectionHeadline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v26 = v7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    uint64_t v14 = v11 + v13[9];
    uint64_t v15 = sub_1C151631C();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    uint64_t v17 = (uint64_t *)(v11 + v13[10]);
    unint64_t v18 = v17[1];
    if (v18 >> 60 != 15) {
      sub_1BFE95664(*v17, v18);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t *)(v11 + v13[31]);
    unint64_t v20 = v19[1];
    if (v20 >> 60 != 15) {
      sub_1BFE95664(*v19, v20);
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v11 + *(int *)(v12 + 20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v26;
    if (*(void *)(v21 + 360))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = a1 + a2[9];
  uint64_t v23 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23);
  if (!result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for GenericDataVisualization();
      v7(v22 + *(int *)(v25 + 20), v5);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void *sub_1C0A1C25C(void *a1, char *a2, int *a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  uint64_t v114 = a3;
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)v5 + v13;
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v16(&a2[v13], 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v18 = v114[7];
  uint64_t v19 = (char *)v5 + v18;
  unint64_t v20 = &a2[v18];
  if (v16(&a2[v18], 1, v10))
  {
    sub_1BFF00BEC();
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v112 = v12;
  uint64_t v22 = v114[8];
  uint64_t v23 = (void *)((char *)v5 + v22);
  uint64_t v113 = a2;
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for DebugInspectionHeadline(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1C0A1B250(0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v109 = v26;
    uint64_t v110 = v10;
    uint64_t v111 = v25;
    uint64_t v104 = v5;
    uint64_t v28 = *((void *)v24 + 1);
    *uint64_t v23 = *(void *)v24;
    v23[1] = v28;
    uint64_t v29 = *((void *)v24 + 3);
    unint64_t v23[2] = *((void *)v24 + 2);
    v23[3] = v29;
    *((unsigned char *)v23 + 32) = v24[32];
    uint64_t v30 = *((void *)v24 + 6);
    v23[5] = *((void *)v24 + 5);
    v23[6] = v30;
    v23[7] = *((void *)v24 + 7);
    uint64_t v31 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    uint64_t v32 = v31[9];
    uint64_t v106 = &v24[v32];
    __dst = (char *)v23 + v32;
    uint64_t v33 = sub_1C151631C();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v105(v106, 1, v33))
    {
      sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v106, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v106, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    uint64_t v36 = v31[10];
    uint64_t v37 = (char *)v23 + v36;
    uint64_t v38 = &v24[v36];
    unint64_t v39 = *((void *)v38 + 1);
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    }
    else
    {
      uint64_t v40 = *(void *)v38;
      sub_1BFE95820(*(void *)v38, *((void *)v38 + 1));
      *(void *)uint64_t v37 = v40;
      *((void *)v37 + 1) = v39;
    }
    *(void *)((char *)v23 + v31[11]) = *(void *)&v24[v31[11]];
    uint64_t v41 = v31[12];
    uint64_t v42 = (char *)v23 + v41;
    uint64_t v43 = &v24[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    *((unsigned char *)v23 + v31[13]) = v24[v31[13]];
    *((unsigned char *)v23 + v31[14]) = v24[v31[14]];
    uint64_t v44 = v31[15];
    uint64_t v45 = (void *)((char *)v23 + v44);
    uint64_t v46 = &v24[v44];
    uint64_t v47 = *((void *)v46 + 1);
    *uint64_t v45 = *(void *)v46;
    v45[1] = v47;
    *((unsigned char *)v23 + v31[16]) = v24[v31[16]];
    *((unsigned char *)v23 + v31[17]) = v24[v31[17]];
    *((unsigned char *)v23 + v31[18]) = v24[v31[18]];
    *((unsigned char *)v23 + v31[19]) = v24[v31[19]];
    *((unsigned char *)v23 + v31[20]) = v24[v31[20]];
    *((unsigned char *)v23 + v31[21]) = v24[v31[21]];
    *((unsigned char *)v23 + v31[22]) = v24[v31[22]];
    *((unsigned char *)v23 + v31[23]) = v24[v31[23]];
    *((unsigned char *)v23 + v31[24]) = v24[v31[24]];
    uint64_t v48 = v31[25];
    uint64_t v49 = (char *)v23 + v48;
    uint64_t v50 = &v24[v48];
    v49[8] = v50[8];
    *(void *)uint64_t v49 = *(void *)v50;
    uint64_t v51 = v31[26];
    uint64_t v52 = (char *)v23 + v51;
    uint64_t v53 = &v24[v51];
    *(void *)uint64_t v52 = *(void *)v53;
    v52[8] = v53[8];
    uint64_t v54 = v31[27];
    unint64_t v55 = (void *)((char *)v23 + v54);
    uint64_t v56 = &v24[v54];
    uint64_t v57 = *((void *)v56 + 1);
    void *v55 = *(void *)v56;
    v55[1] = v57;
    uint64_t v58 = *((void *)v56 + 3);
    long long v55[2] = *((void *)v56 + 2);
    v55[3] = v58;
    uint64_t v59 = v31[28];
    uint64_t v60 = (void *)((char *)v23 + v59);
    uint64_t v61 = &v24[v59];
    uint64_t v62 = *((void *)v61 + 1);
    *uint64_t v60 = *(void *)v61;
    v60[1] = v62;
    *(void *)((char *)v23 + v31[29]) = *(void *)&v24[v31[29]];
    uint64_t v63 = v31[30];
    uint64_t v64 = (void *)((char *)v23 + v63);
    uint64_t v65 = &v24[v63];
    uint64_t v66 = *((void *)v65 + 1);
    *uint64_t v64 = *(void *)v65;
    v64[1] = v66;
    uint64_t v67 = v31[31];
    __dsta = (void *)((char *)v23 + v67);
    uint64_t v68 = (uint64_t *)&v24[v67];
    unint64_t v69 = *(void *)&v24[v67 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69 >> 60 == 15)
    {
      *(_OWORD *)__dsta = *(_OWORD *)v68;
    }
    else
    {
      uint64_t v70 = *v68;
      sub_1BFE95820(*v68, v69);
      uint64_t *__dsta = v70;
      __dsta[1] = v69;
    }
    uint64_t v5 = v104;
    *(void *)((char *)v23 + v31[32]) = *(void *)&v24[v31[32]];
    uint64_t v71 = *(int *)(v111 + 20);
    uint64_t v72 = (char *)v23 + v71;
    uint64_t v73 = &v24[v71];
    char *v72 = v24[v71];
    uint64_t v74 = *(void *)&v24[v71 + 16];
    *((void *)v72 + 1) = *(void *)&v24[v71 + 8];
    *((void *)v72 + 2) = v74;
    uint64_t v75 = *(void *)&v24[v71 + 32];
    *((void *)v72 + 3) = *(void *)&v24[v71 + 24];
    *((void *)v72 + 4) = v75;
    *((void *)v72 + 5) = *(void *)&v24[v71 + 40];
    v72[48] = v24[v71 + 48];
    uint64_t v76 = *(void *)&v24[v71 + 360];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *(_OWORD *)(v72 + 56) = *(_OWORD *)(v73 + 56);
      long long v77 = *(_OWORD *)(v73 + 88);
      *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
      *(_OWORD *)(v72 + 88) = v77;
      long long v78 = *(_OWORD *)(v73 + 120);
      *(_OWORD *)(v72 + 104) = *(_OWORD *)(v73 + 104);
      *(_OWORD *)(v72 + 120) = v78;
      long long v79 = *(_OWORD *)(v73 + 152);
      *(_OWORD *)(v72 + 136) = *(_OWORD *)(v73 + 136);
      *(_OWORD *)(v72 + 152) = v79;
      long long v80 = *(_OWORD *)(v73 + 184);
      *(_OWORD *)(v72 + 168) = *(_OWORD *)(v73 + 168);
      *(_OWORD *)(v72 + 184) = v80;
      long long v81 = *(_OWORD *)(v73 + 216);
      *(_OWORD *)(v72 + 200) = *(_OWORD *)(v73 + 200);
      *(_OWORD *)(v72 + 216) = v81;
      long long v82 = *(_OWORD *)(v73 + 248);
      *(_OWORD *)(v72 + 232) = *(_OWORD *)(v73 + 232);
      *(_OWORD *)(v72 + 248) = v82;
      *((void *)v72 + 33) = *((void *)v73 + 33);
      *((_OWORD *)v72 + 17) = *((_OWORD *)v73 + 17);
      *((_OWORD *)v72 + 18) = *((_OWORD *)v73 + 18);
      *((_OWORD *)v72 + 19) = *((_OWORD *)v73 + 19);
      *((_OWORD *)v72 + 20) = *((_OWORD *)v73 + 20);
      *((_OWORD *)v72 + 21) = *((_OWORD *)v73 + 21);
      uint64_t v83 = *((void *)v73 + 45);
      *((void *)v72 + 44) = *((void *)v73 + 44);
      *((void *)v72 + 45) = v83;
      *((_OWORD *)v72 + 23) = *((_OWORD *)v73 + 23);
      *((void *)v72 + 48) = *((void *)v73 + 48);
      long long v84 = *(_OWORD *)(v73 + 392);
      long long v85 = *(_OWORD *)(v73 + 408);
      long long v86 = *(_OWORD *)(v73 + 440);
      *(_OWORD *)(v72 + 424) = *(_OWORD *)(v73 + 424);
      *(_OWORD *)(v72 + 440) = v86;
      *(_OWORD *)(v72 + 392) = v84;
      *(_OWORD *)(v72 + 408) = v85;
      uint64_t v87 = *((void *)v73 + 58);
      *((void *)v72 + 57) = *((void *)v73 + 57);
      *((void *)v72 + 58) = v87;
      *((void *)v72 + 59) = *((void *)v73 + 59);
      *((_OWORD *)v72 + 30) = *((_OWORD *)v73 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v72 + 56, v73 + 56, 0x1B8uLL);
    }
    uint64_t v88 = *((void *)v73 + 63);
    *((void *)v72 + 62) = *((void *)v73 + 62);
    *((void *)v72 + 63) = v88;
    *((void *)v72 + 64) = *((void *)v73 + 64);
    *((void *)v72 + 65) = *((void *)v73 + 65);
    v72[528] = v73[528];
    *((void *)v72 + 67) = *((void *)v73 + 67);
    *((void *)v72 + 68) = *((void *)v73 + 68);
    *((void *)v72 + 69) = *((void *)v73 + 69);
    *((void *)v72 + 70) = *((void *)v73 + 70);
    *((void *)v72 + 71) = *((void *)v73 + 71);
    *(_WORD *)((char *)v23 + *(int *)(v111 + 24)) = *(_WORD *)&v24[*(int *)(v111 + 24)];
    uint64_t v89 = *(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v89(v23, 0, 1, v111);
    uint64_t v10 = v110;
  }
  uint64_t v90 = v114[9];
  uint64_t v91 = (void *)((char *)v5 + v90);
  uint64_t v92 = (void *)((char *)v113 + v90);
  uint64_t v93 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v94 = *(void *)(v93 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
  {
    sub_1BFECFC20(0);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v97 = *v92;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v98 = v92[1];
      *uint64_t v91 = v97;
      v91[1] = v98;
      uint64_t v99 = type metadata accessor for GenericDataVisualization();
      uint64_t v100 = *(int *)(v99 + 20);
      uint64_t v101 = (char *)v91 + v100;
      uint64_t v102 = (char *)v92 + v100;
      swift_bridgeObjectRetain();
      v112(v101, v102, v10);
      *(void *)((char *)v91 + *(int *)(v99 + 24)) = *(uint64_t *)((char *)v92 + *(int *)(v99 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *uint64_t v91 = v97;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
  }
  return v5;
}

char *sub_1C0A1CBE4(char *a1, char *a2, int *a3)
{
  uint64_t v5 = a1;
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &v5[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  long long v171 = a2;
  long long v173 = a3;
  uint64_t v12 = a3[6];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v15(&v5[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v11(v13, v14, v9);
LABEL_7:
  uint64_t v18 = v173[7];
  uint64_t v19 = &v5[v18];
  unint64_t v20 = &a2[v18];
  int v21 = v15(&v5[v18], 1, v9);
  int v22 = v15(v20, 1, v9);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
LABEL_12:
    sub_1BFF00BEC();
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  v11(v19, v20, v9);
LABEL_13:
  uint64_t v24 = a2;
  uint64_t v25 = v173[8];
  uint64_t v26 = (uint64_t)&v5[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = type metadata accessor for DebugInspectionHeadline(0);
  __src = *(void **)(v28 - 8);
  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__src[6];
  int v30 = v29(v26, 1, v28);
  int v31 = v29((uint64_t)v27, 1, v28);
  uint64_t v169 = v10;
  if (!v30)
  {
    if (v31)
    {
      sub_1BFF51104(v26, type metadata accessor for DebugInspectionHeadline);
      goto LABEL_19;
    }
    long long v167 = v5;
    uint64_t v168 = v28;
    uint64_t v165 = v9;
    *(void *)uint64_t v26 = *(void *)v27;
    *(void *)(v26 + 8) = *((void *)v27 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = *((void *)v27 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = *((void *)v27 + 3);
    *(unsigned char *)(v26 + 32) = v27[32];
    *(void *)(v26 + 24) = v39;
    *(void *)(v26 + 40) = *((void *)v27 + 5);
    *(void *)(v26 + 48) = *((void *)v27 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v26 + 56) = *((void *)v27 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v40 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    uint64_t v41 = v40[9];
    uint64_t v42 = (void *)(v26 + v41);
    uint64_t v43 = &v27[v41];
    uint64_t v44 = sub_1C151631C();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
    int v47 = v46(v42, 1, v44);
    int v48 = v46(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
LABEL_39:
        uint64_t v91 = v40[10];
        uint64_t v92 = (uint64_t *)(v26 + v91);
        uint64_t v93 = (uint64_t *)&v27[v91];
        unint64_t v94 = *(void *)&v27[v91 + 8];
        if (*(void *)(v26 + v91 + 8) >> 60 == 15)
        {
          if (v94 >> 60 != 15)
          {
            uint64_t v95 = *v93;
            sub_1BFE95820(*v93, v94);
            *uint64_t v92 = v95;
            v92[1] = v94;
            goto LABEL_46;
          }
        }
        else
        {
          if (v94 >> 60 != 15)
          {
            uint64_t v96 = *v93;
            sub_1BFE95820(*v93, v94);
            uint64_t v97 = *v92;
            unint64_t v98 = v92[1];
            *uint64_t v92 = v96;
            v92[1] = v94;
            sub_1BFE95664(v97, v98);
LABEL_46:
            *(void *)(v26 + v40[11]) = *(void *)&v27[v40[11]];
            uint64_t v99 = v40[12];
            uint64_t v100 = v26 + v99;
            uint64_t v101 = &v27[v99];
            uint64_t v102 = *(void *)v101;
            *(unsigned char *)(v100 + 8) = v101[8];
            *(void *)uint64_t v100 = v102;
            *(unsigned char *)(v26 + v40[13]) = v27[v40[13]];
            *(unsigned char *)(v26 + v40[14]) = v27[v40[14]];
            uint64_t v103 = v40[15];
            uint64_t v104 = (void *)(v26 + v103);
            uint64_t v105 = &v27[v103];
            *uint64_t v104 = *(void *)v105;
            v104[1] = *((void *)v105 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(unsigned char *)(v26 + v40[16]) = v27[v40[16]];
            *(unsigned char *)(v26 + v40[17]) = v27[v40[17]];
            *(unsigned char *)(v26 + v40[18]) = v27[v40[18]];
            *(unsigned char *)(v26 + v40[19]) = v27[v40[19]];
            *(unsigned char *)(v26 + v40[20]) = v27[v40[20]];
            *(unsigned char *)(v26 + v40[21]) = v27[v40[21]];
            *(unsigned char *)(v26 + v40[22]) = v27[v40[22]];
            *(unsigned char *)(v26 + v40[23]) = v27[v40[23]];
            *(unsigned char *)(v26 + v40[24]) = v27[v40[24]];
            uint64_t v106 = v40[25];
            uint64_t v107 = v26 + v106;
            uint64_t v108 = &v27[v106];
            uint64_t v109 = *(void *)v108;
            *(unsigned char *)(v107 + 8) = v108[8];
            *(void *)uint64_t v107 = v109;
            uint64_t v110 = v40[26];
            uint64_t v111 = v26 + v110;
            uint64_t v112 = &v27[v110];
            uint64_t v113 = *(void *)v112;
            *(unsigned char *)(v111 + 8) = v112[8];
            *(void *)uint64_t v111 = v113;
            uint64_t v114 = v40[27];
            uint64_t v115 = (void *)(v26 + v114);
            uint64_t v116 = &v27[v114];
            *uint64_t v115 = *(void *)&v27[v114];
            v115[1] = *(void *)&v27[v114 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v115[2] = *((void *)v116 + 2);
            v115[3] = *((void *)v116 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v117 = v40[28];
            unint64_t v118 = (void *)(v26 + v117);
            unint64_t v119 = &v27[v117];
            *unint64_t v118 = *(void *)v119;
            v118[1] = *((void *)v119 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v26 + v40[29]) = *(void *)&v27[v40[29]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v120 = v40[30];
            uint64_t v121 = (void *)(v26 + v120);
            uint64_t v122 = &v27[v120];
            void *v121 = *(void *)v122;
            v121[1] = *((void *)v122 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v123 = v40[31];
            uint64_t v124 = (uint64_t *)(v26 + v123);
            uint64_t v125 = (uint64_t *)&v27[v123];
            unint64_t v126 = *(void *)&v27[v123 + 8];
            if (*(void *)(v26 + v123 + 8) >> 60 == 15)
            {
              if (v126 >> 60 != 15)
              {
                uint64_t v127 = *v125;
                sub_1BFE95820(*v125, v126);
                *uint64_t v124 = v127;
                v124[1] = v126;
                goto LABEL_53;
              }
            }
            else
            {
              if (v126 >> 60 != 15)
              {
                uint64_t v128 = *v125;
                sub_1BFE95820(*v125, v126);
                uint64_t v129 = *v124;
                unint64_t v130 = v124[1];
                *uint64_t v124 = v128;
                v124[1] = v126;
                sub_1BFE95664(v129, v130);
LABEL_53:
                uint64_t v9 = v165;
                uint64_t v5 = v167;
                *(void *)(v26 + v40[32]) = *(void *)&v27[v40[32]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v131 = *(int *)(v168 + 20);
                uint64_t v132 = v26 + v131;
                uint64_t v133 = &v27[v131];
                *(unsigned char *)uint64_t v132 = v27[v131];
                *(void *)(v132 + 8) = *(void *)&v27[v131 + 8];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)(v132 + 16) = *((void *)v133 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)(v132 + 24) = *((void *)v133 + 3);
                *(void *)(v132 + 32) = *((void *)v133 + 4);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)(v132 + 40) = *((void *)v133 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(unsigned char *)(v132 + 48) = v133[48];
                uint64_t v134 = *((void *)v133 + 45);
                uint64_t v24 = v171;
                if (*(void *)(v132 + 360))
                {
                  if (v134)
                  {
                    *(void *)(v132 + 56) = *((void *)v133 + 7);
                    *(void *)(v132 + 64) = *((void *)v133 + 8);
                    *(void *)(v132 + 72) = *((void *)v133 + 9);
                    *(void *)(v132 + 80) = *((void *)v133 + 10);
                    *(void *)(v132 + 88) = *((void *)v133 + 11);
                    *(void *)(v132 + 96) = *((void *)v133 + 12);
                    *(void *)(v132 + 104) = *((void *)v133 + 13);
                    *(void *)(v132 + 112) = *((void *)v133 + 14);
                    *(void *)(v132 + 120) = *((void *)v133 + 15);
                    *(void *)(v132 + 128) = *((void *)v133 + 16);
                    *(void *)(v132 + 136) = *((void *)v133 + 17);
                    *(void *)(v132 + 144) = *((void *)v133 + 18);
                    *(void *)(v132 + 152) = *((void *)v133 + 19);
                    *(void *)(v132 + 160) = *((void *)v133 + 20);
                    *(void *)(v132 + 168) = *((void *)v133 + 21);
                    *(void *)(v132 + 176) = *((void *)v133 + 22);
                    *(void *)(v132 + 184) = *((void *)v133 + 23);
                    *(void *)(v132 + 192) = *((void *)v133 + 24);
                    *(void *)(v132 + 200) = *((void *)v133 + 25);
                    *(void *)(v132 + 208) = *((void *)v133 + 26);
                    *(void *)(v132 + 216) = *((void *)v133 + 27);
                    *(void *)(v132 + 224) = *((void *)v133 + 28);
                    *(void *)(v132 + 232) = *((void *)v133 + 29);
                    *(void *)(v132 + 240) = *((void *)v133 + 30);
                    *(void *)(v132 + 248) = *((void *)v133 + 31);
                    *(void *)(v132 + 256) = *((void *)v133 + 32);
                    *(void *)(v132 + 264) = *((void *)v133 + 33);
                    *(void *)(v132 + 272) = *((void *)v133 + 34);
                    *(void *)(v132 + 280) = *((void *)v133 + 35);
                    *(void *)(v132 + 288) = *((void *)v133 + 36);
                    *(void *)(v132 + 296) = *((void *)v133 + 37);
                    *(void *)(v132 + 304) = *((void *)v133 + 38);
                    *(void *)(v132 + 312) = *((void *)v133 + 39);
                    *(void *)(v132 + 320) = *((void *)v133 + 40);
                    *(void *)(v132 + 328) = *((void *)v133 + 41);
                    *(void *)(v132 + 336) = *((void *)v133 + 42);
                    *(void *)(v132 + 344) = *((void *)v133 + 43);
                    *(void *)(v132 + 352) = *((void *)v133 + 44);
                    *(void *)(v132 + 360) = *((void *)v133 + 45);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v132 + 368) = *((void *)v133 + 46);
                    *(void *)(v132 + 376) = *((void *)v133 + 47);
                    *(void *)(v132 + 384) = *((void *)v133 + 48);
                    *(void *)(v132 + 392) = *((void *)v133 + 49);
                    *(void *)(v132 + 400) = *((void *)v133 + 50);
                    *(void *)(v132 + 408) = *((void *)v133 + 51);
                    *(void *)(v132 + 416) = *((void *)v133 + 52);
                    *(void *)(v132 + 424) = *((void *)v133 + 53);
                    *(void *)(v132 + 432) = *((void *)v133 + 54);
                    *(void *)(v132 + 440) = *((void *)v133 + 55);
                    *(void *)(v132 + 448) = *((void *)v133 + 56);
                    *(void *)(v132 + 456) = *((void *)v133 + 57);
                    *(void *)(v132 + 464) = *((void *)v133 + 58);
                    *(void *)(v132 + 472) = *((void *)v133 + 59);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v132 + 480) = *((void *)v133 + 60);
                    *(void *)(v132 + 488) = *((void *)v133 + 61);
LABEL_60:
                    *(void *)(v132 + 496) = *((void *)v133 + 62);
                    *(void *)(v132 + 504) = *((void *)v133 + 63);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v132 + 512) = *((void *)v133 + 64);
                    *(void *)(v132 + 520) = *((void *)v133 + 65);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(unsigned char *)(v132 + 528) = v133[528];
                    *(void *)(v132 + 536) = *((void *)v133 + 67);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v132 + 544) = *((void *)v133 + 68);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v132 + 552) = *((void *)v133 + 69);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v132 + 560) = *((void *)v133 + 70);
                    *(void *)(v132 + 568) = *((void *)v133 + 71);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v138 = *(int *)(v168 + 24);
                    long long v139 = (char *)(v26 + v138);
                    long long v140 = &v27[v138];
                    *long long v139 = *v140;
                    v139[1] = v140[1];
                    goto LABEL_61;
                  }
                  sub_1C0A1E2A8(v132 + 56);
                }
                else if (v134)
                {
                  *(void *)(v132 + 56) = *((void *)v133 + 7);
                  *(void *)(v132 + 64) = *((void *)v133 + 8);
                  *(void *)(v132 + 72) = *((void *)v133 + 9);
                  *(void *)(v132 + 80) = *((void *)v133 + 10);
                  *(void *)(v132 + 88) = *((void *)v133 + 11);
                  *(void *)(v132 + 96) = *((void *)v133 + 12);
                  *(void *)(v132 + 104) = *((void *)v133 + 13);
                  *(void *)(v132 + 112) = *((void *)v133 + 14);
                  *(void *)(v132 + 120) = *((void *)v133 + 15);
                  *(void *)(v132 + 128) = *((void *)v133 + 16);
                  *(void *)(v132 + 136) = *((void *)v133 + 17);
                  *(void *)(v132 + 144) = *((void *)v133 + 18);
                  *(void *)(v132 + 152) = *((void *)v133 + 19);
                  *(void *)(v132 + 160) = *((void *)v133 + 20);
                  *(void *)(v132 + 168) = *((void *)v133 + 21);
                  *(void *)(v132 + 176) = *((void *)v133 + 22);
                  *(void *)(v132 + 184) = *((void *)v133 + 23);
                  *(void *)(v132 + 192) = *((void *)v133 + 24);
                  *(void *)(v132 + 200) = *((void *)v133 + 25);
                  *(void *)(v132 + 208) = *((void *)v133 + 26);
                  *(void *)(v132 + 216) = *((void *)v133 + 27);
                  *(void *)(v132 + 224) = *((void *)v133 + 28);
                  *(void *)(v132 + 232) = *((void *)v133 + 29);
                  *(void *)(v132 + 240) = *((void *)v133 + 30);
                  *(void *)(v132 + 248) = *((void *)v133 + 31);
                  *(void *)(v132 + 256) = *((void *)v133 + 32);
                  *(void *)(v132 + 264) = *((void *)v133 + 33);
                  *(void *)(v132 + 272) = *((void *)v133 + 34);
                  *(void *)(v132 + 280) = *((void *)v133 + 35);
                  *(void *)(v132 + 288) = *((void *)v133 + 36);
                  *(void *)(v132 + 296) = *((void *)v133 + 37);
                  *(void *)(v132 + 304) = *((void *)v133 + 38);
                  *(void *)(v132 + 312) = *((void *)v133 + 39);
                  *(void *)(v132 + 320) = *((void *)v133 + 40);
                  *(void *)(v132 + 328) = *((void *)v133 + 41);
                  *(void *)(v132 + 336) = *((void *)v133 + 42);
                  *(void *)(v132 + 344) = *((void *)v133 + 43);
                  *(void *)(v132 + 352) = *((void *)v133 + 44);
                  *(void *)(v132 + 360) = *((void *)v133 + 45);
                  *(void *)(v132 + 368) = *((void *)v133 + 46);
                  *(void *)(v132 + 376) = *((void *)v133 + 47);
                  *(void *)(v132 + 384) = *((void *)v133 + 48);
                  long long v135 = *(_OWORD *)(v133 + 392);
                  long long v136 = *(_OWORD *)(v133 + 408);
                  long long v137 = *(_OWORD *)(v133 + 440);
                  *(_OWORD *)(v132 + 424) = *(_OWORD *)(v133 + 424);
                  *(_OWORD *)(v132 + 440) = v137;
                  *(_OWORD *)(v132 + 392) = v135;
                  *(_OWORD *)(v132 + 408) = v136;
                  *(void *)(v132 + 456) = *((void *)v133 + 57);
                  *(void *)(v132 + 464) = *((void *)v133 + 58);
                  *(void *)(v132 + 472) = *((void *)v133 + 59);
                  *(void *)(v132 + 480) = *((void *)v133 + 60);
                  *(void *)(v132 + 488) = *((void *)v133 + 61);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_60;
                }
                memcpy((void *)(v132 + 56), v133 + 56, 0x1B8uLL);
                goto LABEL_60;
              }
              sub_1C01D91B8((uint64_t)v124);
            }
            *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
            goto LABEL_53;
          }
          sub_1C01D91B8((uint64_t)v92);
        }
        *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
        goto LABEL_46;
      }
      (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
    }
    sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v42, v43, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_39;
  }
  if (v31)
  {
LABEL_19:
    sub_1C0A1B250(0);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_61;
  }
  long long v166 = v5;
  uint64_t v164 = v9;
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = *((void *)v27 + 1);
  *(void *)(v26 + 16) = *((void *)v27 + 2);
  uint64_t v32 = *((void *)v27 + 3);
  *(unsigned char *)(v26 + 32) = v27[32];
  *(void *)(v26 + 24) = v32;
  *(void *)(v26 + 40) = *((void *)v27 + 5);
  *(void *)(v26 + 48) = *((void *)v27 + 6);
  *(void *)(v26 + 56) = *((void *)v27 + 7);
  uint64_t v33 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v34 = v33[9];
  long long v161 = &v27[v34];
  __dst = (void *)(v26 + v34);
  uint64_t v35 = sub_1C151631C();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v160 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v160(v161, 1, v35))
  {
    sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v161, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 16))(__dst, v161, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
  }
  uint64_t v49 = v33[10];
  uint64_t v50 = v26 + v49;
  uint64_t v51 = &v27[v49];
  unint64_t v52 = *((void *)v51 + 1);
  if (v52 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  }
  else
  {
    uint64_t v53 = *(void *)v51;
    sub_1BFE95820(*(void *)v51, *((void *)v51 + 1));
    *(void *)uint64_t v50 = v53;
    *(void *)(v50 + 8) = v52;
  }
  *(void *)(v26 + v33[11]) = *(void *)&v27[v33[11]];
  uint64_t v54 = v33[12];
  uint64_t v55 = v26 + v54;
  uint64_t v56 = &v27[v54];
  uint64_t v57 = *(void *)v56;
  *(unsigned char *)(v55 + 8) = v56[8];
  *(void *)uint64_t v55 = v57;
  *(unsigned char *)(v26 + v33[13]) = v27[v33[13]];
  *(unsigned char *)(v26 + v33[14]) = v27[v33[14]];
  uint64_t v58 = v33[15];
  uint64_t v59 = (void *)(v26 + v58);
  uint64_t v60 = &v27[v58];
  *uint64_t v59 = *(void *)v60;
  v59[1] = *((void *)v60 + 1);
  *(unsigned char *)(v26 + v33[16]) = v27[v33[16]];
  *(unsigned char *)(v26 + v33[17]) = v27[v33[17]];
  *(unsigned char *)(v26 + v33[18]) = v27[v33[18]];
  *(unsigned char *)(v26 + v33[19]) = v27[v33[19]];
  *(unsigned char *)(v26 + v33[20]) = v27[v33[20]];
  *(unsigned char *)(v26 + v33[21]) = v27[v33[21]];
  *(unsigned char *)(v26 + v33[22]) = v27[v33[22]];
  *(unsigned char *)(v26 + v33[23]) = v27[v33[23]];
  *(unsigned char *)(v26 + v33[24]) = v27[v33[24]];
  uint64_t v61 = v33[25];
  uint64_t v62 = v26 + v61;
  uint64_t v63 = &v27[v61];
  uint64_t v64 = *(void *)v63;
  *(unsigned char *)(v62 + 8) = v63[8];
  *(void *)uint64_t v62 = v64;
  uint64_t v65 = v33[26];
  uint64_t v66 = v26 + v65;
  uint64_t v67 = &v27[v65];
  uint64_t v68 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = v67[8];
  *(void *)uint64_t v66 = v68;
  uint64_t v69 = v33[27];
  uint64_t v70 = (void *)(v26 + v69);
  uint64_t v71 = &v27[v69];
  *uint64_t v70 = *(void *)v71;
  v70[1] = *((void *)v71 + 1);
  _OWORD v70[2] = *((void *)v71 + 2);
  v70[3] = *((void *)v71 + 3);
  uint64_t v72 = v33[28];
  uint64_t v73 = (void *)(v26 + v72);
  uint64_t v74 = &v27[v72];
  *uint64_t v73 = *(void *)v74;
  v73[1] = *((void *)v74 + 1);
  *(void *)(v26 + v33[29]) = *(void *)&v27[v33[29]];
  uint64_t v75 = v33[30];
  uint64_t v76 = (void *)(v26 + v75);
  long long v77 = &v27[v75];
  void *v76 = *(void *)v77;
  v76[1] = *((void *)v77 + 1);
  uint64_t v78 = v33[31];
  __dsta = (uint64_t *)(v26 + v78);
  long long v79 = (uint64_t *)&v27[v78];
  unint64_t v80 = *(void *)&v27[v78 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v80 >> 60 == 15)
  {
    *(_OWORD *)__dsta = *(_OWORD *)v79;
  }
  else
  {
    uint64_t v81 = *v79;
    sub_1BFE95820(*v79, v80);
    uint64_t *__dsta = v81;
    __dsta[1] = v80;
  }
  *(void *)(v26 + v33[32]) = *(void *)&v27[v33[32]];
  uint64_t v82 = *(int *)(v28 + 20);
  uint64_t v83 = v26 + v82;
  long long v84 = &v27[v82];
  *(unsigned char *)uint64_t v83 = v27[v82];
  *(void *)(v83 + 8) = *(void *)&v27[v82 + 8];
  *(void *)(v83 + 16) = *(void *)&v27[v82 + 16];
  *(void *)(v83 + 24) = *(void *)&v27[v82 + 24];
  *(void *)(v83 + 32) = *(void *)&v27[v82 + 32];
  *(void *)(v83 + 40) = *(void *)&v27[v82 + 40];
  *(unsigned char *)(v83 + 48) = v27[v82 + 48];
  uint64_t v85 = *(void *)&v27[v82 + 360];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = v166;
  if (v85)
  {
    *(void *)(v83 + 56) = *((void *)v84 + 7);
    *(void *)(v83 + 64) = *((void *)v84 + 8);
    *(void *)(v83 + 72) = *((void *)v84 + 9);
    *(void *)(v83 + 80) = *((void *)v84 + 10);
    *(void *)(v83 + 88) = *((void *)v84 + 11);
    *(void *)(v83 + 96) = *((void *)v84 + 12);
    *(void *)(v83 + 104) = *((void *)v84 + 13);
    *(void *)(v83 + 112) = *((void *)v84 + 14);
    *(void *)(v83 + 120) = *((void *)v84 + 15);
    *(void *)(v83 + 128) = *((void *)v84 + 16);
    *(void *)(v83 + 136) = *((void *)v84 + 17);
    *(void *)(v83 + 144) = *((void *)v84 + 18);
    *(void *)(v83 + 152) = *((void *)v84 + 19);
    *(void *)(v83 + 160) = *((void *)v84 + 20);
    *(void *)(v83 + 168) = *((void *)v84 + 21);
    *(void *)(v83 + 176) = *((void *)v84 + 22);
    *(void *)(v83 + 184) = *((void *)v84 + 23);
    *(void *)(v83 + 192) = *((void *)v84 + 24);
    *(void *)(v83 + 200) = *((void *)v84 + 25);
    *(void *)(v83 + 208) = *((void *)v84 + 26);
    *(void *)(v83 + 216) = *((void *)v84 + 27);
    *(void *)(v83 + 224) = *((void *)v84 + 28);
    *(void *)(v83 + 232) = *((void *)v84 + 29);
    *(void *)(v83 + 240) = *((void *)v84 + 30);
    *(void *)(v83 + 248) = *((void *)v84 + 31);
    *(void *)(v83 + 256) = *((void *)v84 + 32);
    *(void *)(v83 + 264) = *((void *)v84 + 33);
    *(void *)(v83 + 272) = *((void *)v84 + 34);
    *(void *)(v83 + 280) = *((void *)v84 + 35);
    *(void *)(v83 + 288) = *((void *)v84 + 36);
    *(void *)(v83 + 296) = *((void *)v84 + 37);
    *(void *)(v83 + 304) = *((void *)v84 + 38);
    *(void *)(v83 + 312) = *((void *)v84 + 39);
    *(void *)(v83 + 320) = *((void *)v84 + 40);
    *(void *)(v83 + 328) = *((void *)v84 + 41);
    *(void *)(v83 + 336) = *((void *)v84 + 42);
    *(void *)(v83 + 344) = *((void *)v84 + 43);
    *(void *)(v83 + 352) = *((void *)v84 + 44);
    *(void *)(v83 + 360) = *((void *)v84 + 45);
    *(void *)(v83 + 368) = *((void *)v84 + 46);
    *(void *)(v83 + 376) = *((void *)v84 + 47);
    *(void *)(v83 + 384) = *((void *)v84 + 48);
    long long v86 = *(_OWORD *)(v84 + 392);
    long long v87 = *(_OWORD *)(v84 + 408);
    long long v88 = *(_OWORD *)(v84 + 440);
    *(_OWORD *)(v83 + 424) = *(_OWORD *)(v84 + 424);
    *(_OWORD *)(v83 + 440) = v88;
    *(_OWORD *)(v83 + 392) = v86;
    *(_OWORD *)(v83 + 408) = v87;
    *(void *)(v83 + 456) = *((void *)v84 + 57);
    *(void *)(v83 + 464) = *((void *)v84 + 58);
    *(void *)(v83 + 472) = *((void *)v84 + 59);
    *(void *)(v83 + 480) = *((void *)v84 + 60);
    *(void *)(v83 + 488) = *((void *)v84 + 61);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(v83 + 56), v84 + 56, 0x1B8uLL);
  }
  *(void *)(v83 + 496) = *((void *)v84 + 62);
  *(void *)(v83 + 504) = *((void *)v84 + 63);
  *(void *)(v83 + 512) = *((void *)v84 + 64);
  *(void *)(v83 + 520) = *((void *)v84 + 65);
  *(unsigned char *)(v83 + 528) = v84[528];
  *(void *)(v83 + 536) = *((void *)v84 + 67);
  *(void *)(v83 + 544) = *((void *)v84 + 68);
  *(void *)(v83 + 552) = *((void *)v84 + 69);
  *(void *)(v83 + 560) = *((void *)v84 + 70);
  *(void *)(v83 + 568) = *((void *)v84 + 71);
  *(_WORD *)(v26 + *(int *)(v28 + 24)) = *(_WORD *)&v27[*(int *)(v28 + 24)];
  uint64_t v89 = (void (*)(uint64_t, void, uint64_t, uint64_t))__src[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v89(v26, 0, 1, v28);
  uint64_t v9 = v164;
  uint64_t v24 = v171;
LABEL_61:
  uint64_t v141 = v173[9];
  uint64_t v142 = &v5[v141];
  uint64_t v143 = &v24[v141];
  uint64_t v144 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v145 = *(void *)(v144 - 8);
  long long v146 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 48);
  int v147 = v146(v142, 1, v144);
  int v148 = v146(v143, 1, v144);
  if (v147)
  {
    if (!v148)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(void *)uint64_t v142 = *(void *)v143;
      if (EnumCaseMultiPayload == 1)
      {
        *((void *)v142 + 1) = *((void *)v143 + 1);
        uint64_t v150 = type metadata accessor for GenericDataVisualization();
        uint64_t v151 = *(int *)(v150 + 20);
        long long v152 = &v143[v151];
        long long v172 = *(void (**)(char *, char *, uint64_t))(v169 + 16);
        long long v174 = &v142[v151];
        swift_bridgeObjectRetain();
        v172(v174, v152, v9);
        *(void *)&v142[*(int *)(v150 + 24)] = *(void *)&v143[*(int *)(v150 + 24)];
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
      return v5;
    }
LABEL_67:
    sub_1BFECFC20(0);
    memcpy(v142, v143, *(void *)(*(void *)(v153 - 8) + 64));
    return v5;
  }
  if (v148)
  {
    sub_1BFF51104((uint64_t)v142, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_67;
  }
  if (v5 != v24)
  {
    sub_1BFF51104((uint64_t)v142, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    int v154 = swift_getEnumCaseMultiPayload();
    *(void *)uint64_t v142 = *(void *)v143;
    if (v154 == 1)
    {
      *((void *)v142 + 1) = *((void *)v143 + 1);
      uint64_t v155 = type metadata accessor for GenericDataVisualization();
      uint64_t v156 = *(int *)(v155 + 20);
      long long v157 = &v142[v156];
      long long v158 = &v143[v156];
      long long v175 = *(void (**)(char *, char *, uint64_t))(v169 + 16);
      swift_bridgeObjectRetain();
      v175(v157, v158, v9);
      *(void *)&v142[*(int *)(v155 + 24)] = *(void *)&v143[*(int *)(v155 + 24)];
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_1C0A1E2A8(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1C0A1E2FC(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v58 = a3;
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v15(&a2[v12], 1, v9))
  {
    sub_1BFF00BEC();
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = &a2[v17];
  if (v15(&a2[v17], 1, v9))
  {
    sub_1BFF00BEC();
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v11(v18, v19, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  uint64_t v21 = a3[8];
  int v22 = (_OWORD *)((char *)a1 + v21);
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for DebugInspectionHeadline(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v57 = v11;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1C0A1B250(0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v55 = v25;
    _OWORD *v22 = *(_OWORD *)v23;
    uint64_t v27 = *((void *)v23 + 3);
    *((void *)v22 + 2) = *((void *)v23 + 2);
    *((void *)v22 + 3) = v27;
    *((unsigned char *)v22 + 32) = v23[32];
    *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)(v23 + 40);
    *((void *)v22 + 7) = *((void *)v23 + 7);
    uint64_t v28 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    uint64_t v29 = v28[9];
    __dst = (char *)v22 + v29;
    int v30 = &v23[v29];
    uint64_t v31 = sub_1C151631C();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dst, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    }
    *(_OWORD *)((char *)v22 + v28[10]) = *(_OWORD *)&v23[v28[10]];
    *(void *)((char *)v22 + v28[11]) = *(void *)&v23[v28[11]];
    uint64_t v34 = v28[12];
    uint64_t v35 = (char *)v22 + v34;
    uint64_t v36 = &v23[v34];
    v35[8] = v36[8];
    *(void *)uint64_t v35 = *(void *)v36;
    *((unsigned char *)v22 + v28[13]) = v23[v28[13]];
    *((unsigned char *)v22 + v28[14]) = v23[v28[14]];
    *(_OWORD *)((char *)v22 + v28[15]) = *(_OWORD *)&v23[v28[15]];
    *((unsigned char *)v22 + v28[16]) = v23[v28[16]];
    *((unsigned char *)v22 + v28[17]) = v23[v28[17]];
    *((unsigned char *)v22 + v28[18]) = v23[v28[18]];
    *((unsigned char *)v22 + v28[19]) = v23[v28[19]];
    *((unsigned char *)v22 + v28[20]) = v23[v28[20]];
    *((unsigned char *)v22 + v28[21]) = v23[v28[21]];
    *((unsigned char *)v22 + v28[22]) = v23[v28[22]];
    *((unsigned char *)v22 + v28[23]) = v23[v28[23]];
    *((unsigned char *)v22 + v28[24]) = v23[v28[24]];
    uint64_t v37 = v28[25];
    uint64_t v38 = (char *)v22 + v37;
    uint64_t v39 = &v23[v37];
    v38[8] = v39[8];
    *(void *)uint64_t v38 = *(void *)v39;
    uint64_t v40 = v28[26];
    uint64_t v41 = (char *)v22 + v40;
    uint64_t v42 = &v23[v40];
    v41[8] = v42[8];
    *(void *)uint64_t v41 = *(void *)v42;
    uint64_t v43 = v28[27];
    uint64_t v44 = (_OWORD *)((char *)v22 + v43);
    uint64_t v45 = &v23[v43];
    long long v46 = *((_OWORD *)v45 + 1);
    *uint64_t v44 = *(_OWORD *)v45;
    v44[1] = v46;
    *(_OWORD *)((char *)v22 + v28[28]) = *(_OWORD *)&v23[v28[28]];
    *(void *)((char *)v22 + v28[29]) = *(void *)&v23[v28[29]];
    *(_OWORD *)((char *)v22 + v28[30]) = *(_OWORD *)&v23[v28[30]];
    *(_OWORD *)((char *)v22 + v28[31]) = *(_OWORD *)&v23[v28[31]];
    *(void *)((char *)v22 + v28[32]) = *(void *)&v23[v28[32]];
    memcpy((char *)v22 + *(int *)(v24 + 20), &v23[*(int *)(v24 + 20)], 0x240uLL);
    *(_WORD *)((char *)v22 + *(int *)(v24 + 24)) = *(_WORD *)&v23[*(int *)(v24 + 24)];
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v55 + 56))(v22, 0, 1, v24);
  }
  uint64_t v47 = v58[9];
  int v48 = (_OWORD *)((char *)a1 + v47);
  uint64_t v49 = &a2[v47];
  uint64_t v50 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    sub_1BFECFC20(0);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *int v48 = *(_OWORD *)v49;
      uint64_t v53 = type metadata accessor for GenericDataVisualization();
      v57((char *)v48 + *(int *)(v53 + 20), &v49[*(int *)(v53 + 20)], v9);
      *(void *)((char *)v48 + *(int *)(v53 + 24)) = *(void *)&v49[*(int *)(v53 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(void *)(v51 + 64));
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  return a1;
}

char *sub_1C0A1E9B0(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &v4[v7];
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v142 = v11;
  uint64_t v143 = a3;
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &v4[v13];
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v16(&a1[v13], 1, v10);
  int v17 = v16(v15, 1, v10);
  if (v8)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  uint64_t v19 = v143[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &v4[v19];
  int v22 = v16(&a1[v19], 1, v10);
  int v23 = v16(v21, 1, v10);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v21, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
LABEL_12:
    sub_1BFF00BEC();
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  v12(v20, v21, v10);
LABEL_13:
  uint64_t v25 = v143[8];
  uint64_t v26 = (uint64_t)&a1[v25];
  uint64_t v27 = &v4[v25];
  uint64_t v28 = type metadata accessor for DebugInspectionHeadline(0);
  uint64_t v29 = *(void *)(v28 - 8);
  int v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30((uint64_t)v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_1BFF51104(v26, type metadata accessor for DebugInspectionHeadline);
      goto LABEL_19;
    }
    long long v137 = v4;
    uint64_t v141 = v28;
    uint64_t v41 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *(void *)(v26 + 8) = v41;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = *((void *)v27 + 2);
    swift_bridgeObjectRelease();
    *(void *)(v26 + 24) = *((void *)v27 + 3);
    *(unsigned char *)(v26 + 32) = v27[32];
    uint64_t v42 = *((void *)v27 + 6);
    *(void *)(v26 + 40) = *((void *)v27 + 5);
    *(void *)(v26 + 48) = v42;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 56) = *((void *)v27 + 7);
    swift_bridgeObjectRelease();
    uint64_t v43 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    uint64_t v44 = v43[9];
    uint64_t v45 = (void *)(v26 + v44);
    long long v46 = &v27[v44];
    uint64_t v47 = sub_1C151631C();
    uint64_t v136 = *(void *)(v47 - 8);
    int v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v136 + 48);
    __dsta = v45;
    LODWORD(v45) = v48(v45, 1, v47);
    int v49 = v48(v46, 1, v47);
    if (v45)
    {
      if (v49)
      {
        sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        size_t v51 = *(void *)(*(void *)(v50 - 8) + 64);
        uint64_t v52 = __dsta;
LABEL_29:
        memcpy(v52, v46, v51);
        goto LABEL_32;
      }
      (*(void (**)(void *, char *, uint64_t))(v136 + 32))(__dsta, v46, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(__dsta, 0, 1, v47);
    }
    else
    {
      if (v49)
      {
        (*(void (**)(void *, uint64_t))(v136 + 8))(__dsta, v47);
        sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        size_t v51 = *(void *)(*(void *)(v66 - 8) + 64);
        uint64_t v52 = __dsta;
        goto LABEL_29;
      }
      (*(void (**)(void *, char *, uint64_t))(v136 + 40))(__dsta, v46, v47);
    }
LABEL_32:
    uint64_t v4 = v137;
    uint64_t v67 = v43[10];
    uint64_t v68 = (uint64_t *)(v26 + v67);
    uint64_t v69 = (uint64_t *)&v27[v67];
    unint64_t v70 = *(void *)(v26 + v67 + 8);
    if (v70 >> 60 != 15)
    {
      unint64_t v71 = v69[1];
      if (v71 >> 60 != 15)
      {
        uint64_t v72 = *v68;
        *uint64_t v68 = *v69;
        v68[1] = v71;
        sub_1BFE95664(v72, v70);
LABEL_37:
        *(void *)(v26 + v43[11]) = *(void *)&v27[v43[11]];
        uint64_t v73 = v43[12];
        uint64_t v74 = v26 + v73;
        uint64_t v75 = &v27[v73];
        *(void *)uint64_t v74 = *(void *)v75;
        *(unsigned char *)(v74 + 8) = v75[8];
        *(unsigned char *)(v26 + v43[13]) = v27[v43[13]];
        *(unsigned char *)(v26 + v43[14]) = v27[v43[14]];
        uint64_t v76 = v43[15];
        long long v77 = (void *)(v26 + v76);
        uint64_t v78 = &v27[v76];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        *long long v77 = v80;
        v77[1] = v79;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v26 + v43[16]) = v27[v43[16]];
        *(unsigned char *)(v26 + v43[17]) = v27[v43[17]];
        *(unsigned char *)(v26 + v43[18]) = v27[v43[18]];
        *(unsigned char *)(v26 + v43[19]) = v27[v43[19]];
        *(unsigned char *)(v26 + v43[20]) = v27[v43[20]];
        *(unsigned char *)(v26 + v43[21]) = v27[v43[21]];
        *(unsigned char *)(v26 + v43[22]) = v27[v43[22]];
        *(unsigned char *)(v26 + v43[23]) = v27[v43[23]];
        *(unsigned char *)(v26 + v43[24]) = v27[v43[24]];
        uint64_t v81 = v43[25];
        uint64_t v82 = v26 + v81;
        uint64_t v83 = &v27[v81];
        *(void *)uint64_t v82 = *(void *)v83;
        *(unsigned char *)(v82 + 8) = v83[8];
        uint64_t v84 = v43[26];
        uint64_t v85 = v26 + v84;
        long long v86 = &v27[v84];
        *(void *)uint64_t v85 = *(void *)v86;
        *(unsigned char *)(v85 + 8) = v86[8];
        uint64_t v87 = v43[27];
        long long v88 = (void *)(v26 + v87);
        uint64_t v89 = &v27[v87];
        uint64_t v90 = *(void *)&v27[v87 + 8];
        void *v88 = *(void *)&v27[v87];
        v88[1] = v90;
        swift_bridgeObjectRelease();
        uint64_t v91 = *((void *)v89 + 3);
        v88[2] = *((void *)v89 + 2);
        v88[3] = v91;
        swift_bridgeObjectRelease();
        uint64_t v92 = v43[28];
        uint64_t v93 = (void *)(v26 + v92);
        unint64_t v94 = &v27[v92];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        *uint64_t v93 = v96;
        v93[1] = v95;
        swift_bridgeObjectRelease();
        *(void *)(v26 + v43[29]) = *(void *)&v27[v43[29]];
        swift_bridgeObjectRelease();
        uint64_t v97 = v43[30];
        unint64_t v98 = (void *)(v26 + v97);
        uint64_t v99 = &v27[v97];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        void *v98 = v101;
        v98[1] = v100;
        swift_bridgeObjectRelease();
        uint64_t v102 = v43[31];
        uint64_t v103 = (uint64_t *)(v26 + v102);
        uint64_t v104 = (uint64_t *)&v27[v102];
        unint64_t v105 = *(void *)(v26 + v102 + 8);
        if (v105 >> 60 != 15)
        {
          unint64_t v106 = v104[1];
          if (v106 >> 60 != 15)
          {
            uint64_t v107 = *v103;
            *uint64_t v103 = *v104;
            v103[1] = v106;
            sub_1BFE95664(v107, v105);
LABEL_42:
            *(void *)(v26 + v43[32]) = *(void *)&v27[v43[32]];
            swift_bridgeObjectRelease();
            uint64_t v108 = *(int *)(v141 + 20);
            uint64_t v109 = v26 + v108;
            uint64_t v110 = &v27[v108];
            *(unsigned char *)uint64_t v109 = v27[v108];
            *(void *)(v109 + 8) = *(void *)&v27[v108 + 8];
            swift_bridgeObjectRelease();
            *(void *)(v109 + 16) = *((void *)v110 + 2);
            swift_bridgeObjectRelease();
            uint64_t v111 = *((void *)v110 + 4);
            *(void *)(v109 + 24) = *((void *)v110 + 3);
            *(void *)(v109 + 32) = v111;
            swift_bridgeObjectRelease();
            *(void *)(v109 + 40) = *((void *)v110 + 5);
            swift_bridgeObjectRelease();
            *(unsigned char *)(v109 + 48) = v110[48];
            if (*(void *)(v109 + 360))
            {
              if (*((void *)v110 + 45))
              {
                *(_OWORD *)(v109 + 56) = *(_OWORD *)(v110 + 56);
                long long v112 = *(_OWORD *)(v110 + 88);
                *(_OWORD *)(v109 + 72) = *(_OWORD *)(v110 + 72);
                *(_OWORD *)(v109 + 88) = v112;
                long long v113 = *(_OWORD *)(v110 + 120);
                *(_OWORD *)(v109 + 104) = *(_OWORD *)(v110 + 104);
                *(_OWORD *)(v109 + 120) = v113;
                long long v114 = *(_OWORD *)(v110 + 152);
                *(_OWORD *)(v109 + 136) = *(_OWORD *)(v110 + 136);
                *(_OWORD *)(v109 + 152) = v114;
                long long v115 = *(_OWORD *)(v110 + 184);
                *(_OWORD *)(v109 + 168) = *(_OWORD *)(v110 + 168);
                *(_OWORD *)(v109 + 184) = v115;
                long long v116 = *(_OWORD *)(v110 + 216);
                *(_OWORD *)(v109 + 200) = *(_OWORD *)(v110 + 200);
                *(_OWORD *)(v109 + 216) = v116;
                long long v117 = *(_OWORD *)(v110 + 248);
                *(_OWORD *)(v109 + 232) = *(_OWORD *)(v110 + 232);
                *(_OWORD *)(v109 + 248) = v117;
                *(void *)(v109 + 264) = *((void *)v110 + 33);
                *(_OWORD *)(v109 + 272) = *((_OWORD *)v110 + 17);
                *(_OWORD *)(v109 + 288) = *((_OWORD *)v110 + 18);
                *(_OWORD *)(v109 + 304) = *((_OWORD *)v110 + 19);
                *(_OWORD *)(v109 + 320) = *((_OWORD *)v110 + 20);
                *(_OWORD *)(v109 + 336) = *((_OWORD *)v110 + 21);
                uint64_t v118 = *((void *)v110 + 45);
                *(void *)(v109 + 352) = *((void *)v110 + 44);
                *(void *)(v109 + 360) = v118;
                swift_bridgeObjectRelease();
                *(_OWORD *)(v109 + 368) = *((_OWORD *)v110 + 23);
                *(_OWORD *)(v109 + 384) = *((_OWORD *)v110 + 24);
                *(_OWORD *)(v109 + 400) = *((_OWORD *)v110 + 25);
                *(_OWORD *)(v109 + 416) = *((_OWORD *)v110 + 26);
                *(_OWORD *)(v109 + 432) = *((_OWORD *)v110 + 27);
                *(void *)(v109 + 448) = *((void *)v110 + 56);
                *(_OWORD *)(v109 + 456) = *(_OWORD *)(v110 + 456);
                *(void *)(v109 + 472) = *((void *)v110 + 59);
                swift_bridgeObjectRelease();
                *(_OWORD *)(v109 + 480) = *((_OWORD *)v110 + 30);
LABEL_47:
                uint64_t v119 = *((void *)v110 + 63);
                *(void *)(v109 + 496) = *((void *)v110 + 62);
                *(void *)(v109 + 504) = v119;
                swift_bridgeObjectRelease();
                *(void *)(v109 + 512) = *((void *)v110 + 64);
                *(void *)(v109 + 520) = *((void *)v110 + 65);
                swift_bridgeObjectRelease();
                *(unsigned char *)(v109 + 528) = v110[528];
                *(void *)(v109 + 536) = *((void *)v110 + 67);
                swift_bridgeObjectRelease();
                *(void *)(v109 + 544) = *((void *)v110 + 68);
                swift_bridgeObjectRelease();
                *(void *)(v109 + 552) = *((void *)v110 + 69);
                swift_bridgeObjectRelease();
                *(void *)(v109 + 560) = *((void *)v110 + 70);
                *(void *)(v109 + 568) = *((void *)v110 + 71);
                swift_bridgeObjectRelease();
                uint64_t v120 = *(int *)(v141 + 24);
                uint64_t v121 = (char *)(v26 + v120);
                uint64_t v122 = &v27[v120];
                char *v121 = *v122;
                v121[1] = v122[1];
                goto LABEL_48;
              }
              sub_1C0A1E2A8(v109 + 56);
            }
            memcpy((void *)(v109 + 56), v110 + 56, 0x1B8uLL);
            goto LABEL_47;
          }
          sub_1C01D91B8((uint64_t)v103);
        }
        *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
        goto LABEL_42;
      }
      sub_1C01D91B8((uint64_t)v68);
    }
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    goto LABEL_37;
  }
  if (v32)
  {
LABEL_19:
    sub_1C0A1B250(0);
    memcpy((void *)v26, v27, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v140 = v28;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  uint64_t v33 = *((void *)v27 + 3);
  *(void *)(v26 + 16) = *((void *)v27 + 2);
  *(void *)(v26 + 24) = v33;
  *(unsigned char *)(v26 + 32) = v27[32];
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  *(void *)(v26 + 56) = *((void *)v27 + 7);
  uint64_t v34 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v35 = v34[9];
  __dst = (void *)(v26 + v35);
  uint64_t v36 = &v27[v35];
  uint64_t v37 = sub_1C151631C();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    sub_1C0A1B284(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(__dst, v36, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
  }
  *(_OWORD *)(v26 + v34[10]) = *(_OWORD *)&v27[v34[10]];
  *(void *)(v26 + v34[11]) = *(void *)&v27[v34[11]];
  uint64_t v53 = v34[12];
  uint64_t v54 = v26 + v53;
  uint64_t v55 = &v27[v53];
  *(unsigned char *)(v54 + 8) = v55[8];
  *(void *)uint64_t v54 = *(void *)v55;
  *(unsigned char *)(v26 + v34[13]) = v27[v34[13]];
  *(unsigned char *)(v26 + v34[14]) = v27[v34[14]];
  *(_OWORD *)(v26 + v34[15]) = *(_OWORD *)&v27[v34[15]];
  *(unsigned char *)(v26 + v34[16]) = v27[v34[16]];
  *(unsigned char *)(v26 + v34[17]) = v27[v34[17]];
  *(unsigned char *)(v26 + v34[18]) = v27[v34[18]];
  *(unsigned char *)(v26 + v34[19]) = v27[v34[19]];
  *(unsigned char *)(v26 + v34[20]) = v27[v34[20]];
  *(unsigned char *)(v26 + v34[21]) = v27[v34[21]];
  *(unsigned char *)(v26 + v34[22]) = v27[v34[22]];
  *(unsigned char *)(v26 + v34[23]) = v27[v34[23]];
  *(unsigned char *)(v26 + v34[24]) = v27[v34[24]];
  uint64_t v56 = v34[25];
  uint64_t v57 = v26 + v56;
  uint64_t v58 = &v27[v56];
  *(unsigned char *)(v57 + 8) = v58[8];
  *(void *)uint64_t v57 = *(void *)v58;
  uint64_t v59 = v34[26];
  uint64_t v60 = v26 + v59;
  uint64_t v61 = &v27[v59];
  *(unsigned char *)(v60 + 8) = v61[8];
  *(void *)uint64_t v60 = *(void *)v61;
  uint64_t v62 = v34[27];
  uint64_t v63 = (_OWORD *)(v26 + v62);
  uint64_t v64 = &v27[v62];
  long long v65 = *((_OWORD *)v64 + 1);
  *uint64_t v63 = *(_OWORD *)v64;
  v63[1] = v65;
  *(_OWORD *)(v26 + v34[28]) = *(_OWORD *)&v27[v34[28]];
  *(void *)(v26 + v34[29]) = *(void *)&v27[v34[29]];
  *(_OWORD *)(v26 + v34[30]) = *(_OWORD *)&v27[v34[30]];
  *(_OWORD *)(v26 + v34[31]) = *(_OWORD *)&v27[v34[31]];
  *(void *)(v26 + v34[32]) = *(void *)&v27[v34[32]];
  memcpy((void *)(v26 + *(int *)(v140 + 20)), &v27[*(int *)(v140 + 20)], 0x240uLL);
  *(_WORD *)(v26 + *(int *)(v140 + 24)) = *(_WORD *)&v27[*(int *)(v140 + 24)];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v140);
LABEL_48:
  uint64_t v123 = v143[9];
  uint64_t v124 = &a1[v123];
  uint64_t v125 = &v4[v123];
  uint64_t v126 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v127 = *(void *)(v126 - 8);
  uint64_t v128 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v127 + 48);
  int v129 = v128(v124, 1, v126);
  int v130 = v128(v125, 1, v126);
  if (!v129)
  {
    if (!v130)
    {
      if (a1 == v4) {
        return a1;
      }
      sub_1BFF51104((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
        uint64_t v134 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v142 + 32))(&v124[*(int *)(v134 + 20)], &v125[*(int *)(v134 + 20)], v10);
        *(void *)&v124[*(int *)(v134 + 24)] = *(void *)&v125[*(int *)(v134 + 24)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v133 = *(void *)(v127 + 64);
      goto LABEL_55;
    }
    sub_1BFF51104((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_54:
    sub_1BFECFC20(0);
    size_t v133 = *(void *)(*(void *)(v132 - 8) + 64);
LABEL_55:
    memcpy(v124, v125, v133);
    return a1;
  }
  if (v130) {
    goto LABEL_54;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
    uint64_t v131 = type metadata accessor for GenericDataVisualization();
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))(&v124[*(int *)(v131 + 20)], &v125[*(int *)(v131 + 20)], v10);
    *(void *)&v124[*(int *)(v131 + 24)] = *(void *)&v125[*(int *)(v131 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v124, v125, *(void *)(v127 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
  return a1;
}

uint64_t sub_1C0A1F8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0A1F908);
}

uint64_t sub_1C0A1F908(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1C1515FDC();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  sub_1BFF00BEC();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  sub_1C0A1B250(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_11;
  }
  sub_1BFECFC20(0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[9];
  return v16(v18, a2, v17);
}

uint64_t sub_1C0A1FACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0A1FAE0);
}

uint64_t sub_1C0A1FAE0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1C1515FDC();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  sub_1BFF00BEC();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  sub_1C0A1B250(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  sub_1BFECFC20(0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[9];
  return v16(v18, a2, a2, v17);
}

void sub_1C0A1FCA4()
{
  sub_1C1515FDC();
  if (v0 <= 0x3F)
  {
    sub_1BFF00BEC();
    if (v1 <= 0x3F)
    {
      sub_1C0A1B250(319);
      if (v2 <= 0x3F)
      {
        sub_1BFECFC20(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

unint64_t sub_1C0A1FDF0()
{
  unint64_t result = qword_1EA1A2798;
  if (!qword_1EA1A2798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2798);
  }
  return result;
}

void sub_1C0A1FE44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0A1FDF0();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionWebEmbed.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0A1FEA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionWebEmbed.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0A1FFBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionWebEmbed.CodingKeys()
{
  return &type metadata for DebugInspectionWebEmbed.CodingKeys;
}

unint64_t sub_1C0A1FFF8()
{
  unint64_t result = qword_1EA1A27B8;
  if (!qword_1EA1A27B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27B8);
  }
  return result;
}

unint64_t sub_1C0A20050()
{
  unint64_t result = qword_1EA1A27C0;
  if (!qword_1EA1A27C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27C0);
  }
  return result;
}

unint64_t sub_1C0A200A8()
{
  unint64_t result = qword_1EA1A27C8;
  if (!qword_1EA1A27C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27C8);
  }
  return result;
}

uint64_t sub_1C0A200FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 5001813 && a2 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C69467865646E69 && a2 == 0xEC0000004C525565 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C525561746164 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E696C64616568 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7A696C6175736976 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1C0A203B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1BFFD930C(0, (unint64_t *)&unk_1EB882D18, (void (*)(uint64_t))type metadata accessor for FormatContent);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v24 - v6;
  sub_1BFFD930C(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = type metadata accessor for FormatContent(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v24 - v16;
  uint64_t v18 = sub_1C0A20E78(v3, a1);
  uint64_t v19 = sub_1C0A21044(v3, a1);
  if (v19 | v18)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_1C151D6DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
    uint64_t v25 = 0;
    FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, v17, 0, 0, (uint64_t)v10, 0, &v25, v20, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0A22C88((uint64_t)v10, (uint64_t)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], (uint64_t (*)(void))sub_1BFFD930C);
  }
  else
  {
    sub_1C0078E68(a1, (uint64_t)v17, type metadata accessor for FormatContent);
  }
  if (*(void *)(v3 + *(int *)(type metadata accessor for FormatServiceOptions() + 60)))
  {
    sub_1C0C63A4C((uint64_t)v17, v7);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, v22, 1, v11);
  sub_1C0A24388((uint64_t)v17, (uint64_t)v14, type metadata accessor for FormatContent);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_1C0A24388((uint64_t)v14, v24, type metadata accessor for FormatContent);
    return sub_1C0A22C88((uint64_t)v7, (uint64_t)&unk_1EB882D18, (uint64_t)type metadata accessor for FormatContent, (uint64_t (*)(void))sub_1BFFD930C);
  }
  else
  {
    sub_1BFE386B8((uint64_t)v14, type metadata accessor for FormatContent);
    return sub_1C0A24388((uint64_t)v7, v24, type metadata accessor for FormatContent);
  }
}

uint64_t FormatServiceOptions.groupContext.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A21254(v1, a1, (unint64_t *)&qword_1EB88D5E0, (void (*)(uint64_t))sub_1C0A212C0);
}

void FormatServiceOptions.cachePolicy.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 40);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatServiceOptions.filterOptions.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t FormatServiceOptions.tagFilterOptions.getter()
{
  return *(void *)(v0 + 64);
}

double FormatServiceOptions.tagFeedFetchWindow.getter()
{
  return *(double *)(v0 + 72);
}

uint64_t FormatServiceOptions.tagFeedFetchCount.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t FormatServiceOptions.transformData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatServiceOptions();
  return sub_1C0078E68(v1 + *(int *)(v3 + 40), a1, (uint64_t (*)(void))type metadata accessor for FormatTransformData);
}

uint64_t FormatServiceOptions.otherArticleIDs.getter()
{
  type metadata accessor for FormatServiceOptions();
  return swift_bridgeObjectRetain();
}

id FormatServiceOptions.purpose.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FormatServiceOptions() + 48));
  return v1;
}

id FormatServiceOptions.log.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  return v1;
}

uint64_t FormatServiceOptions.isPrefetching.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatServiceOptions() + 56));
}

uint64_t FormatServiceOptions.init<A>(groupContext:mergeContext:filterOptions:tagFilterOptions:tagFeedFetchWindow:tagFeedFetchCount:transformData:otherArticleIDs:purpose:log:)@<X0>(uint64_t a1@<X0>, double a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, double a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, double a15)
{
  LODWORD(v52) = a8;
  uint64_t v49 = a5;
  int v45 = a4;
  uint64_t v46 = a3;
  uint64_t v53 = a13;
  uint64_t v50 = a10;
  double v51 = a7;
  int v47 = a11;
  int v48 = a6;
  sub_1BFFD930C(0, &qword_1EB87F118, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v44 = (uint64_t)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v54 = (uint64_t)&v44 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = type metadata accessor for FormatTransformData();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a9 + 24) = type metadata accessor for FormatServiceGroupContext();
  *(void *)(a9 + 32) = &protocol witness table for FormatServiceGroupContext<A>;
  *(void *)a9 = a1;
  uint64_t v29 = (int *)type metadata accessor for FormatServiceOptions();
  *(double *)(a9 + v29[15]) = a2;
  char v30 = *(unsigned char *)(a1 + 24);
  *(void *)(a9 + 40) = *(void *)(a1 + 16);
  *(unsigned char *)(a9 + 48) = v30;
  uint64_t v31 = 0x200000118;
  if ((v45 & 1) == 0) {
    uint64_t v31 = v46;
  }
  uint64_t v32 = v49;
  if (v48) {
    uint64_t v32 = 1;
  }
  *(void *)(a9 + 56) = v31;
  *(void *)(a9 + 64) = v32;
  double v33 = v51;
  if (v52) {
    double v33 = 86400.0;
  }
  *(double *)(a9 + 72) = v33;
  uint64_t v34 = 30;
  if ((v47 & 1) == 0) {
    uint64_t v34 = v50;
  }
  *(void *)(a9 + 80) = v34;
  uint64_t v52 = a12;
  sub_1C0A21254(a12, (uint64_t)v24, &qword_1EB87F118, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v35(v24, 1, v25) == 1)
  {
    uint64_t v36 = qword_1EB87F110;
    swift_retain();
    double v51 = a2;
    swift_retain();
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v37 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93C758);
    sub_1C0078E68(v37, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FormatTransformData);
    sub_1C0A22C88((uint64_t)v24, (uint64_t)&qword_1EB87F118, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(void))sub_1BFFD930C);
  }
  else
  {
    sub_1C0A24388((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FormatTransformData);
    swift_retain();
    swift_retain();
  }
  uint64_t v38 = v54;
  double v51 = a15;
  sub_1C0A24388((uint64_t)v28, a9 + v29[10], (uint64_t (*)(void))type metadata accessor for FormatTransformData);
  uint64_t v39 = v52;
  sub_1C0A21254(v52, v38, &qword_1EB87F118, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
  if (v53)
  {
    swift_release();
    swift_release();
    uint64_t v40 = v53;
  }
  else
  {
    uint64_t v41 = v38;
    uint64_t v42 = v44;
    sub_1C0A21254(v41, v44, &qword_1EB87F118, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
    if (v35((char *)v42, 1, v25) == 1)
    {
      sub_1C0A22C88(v42, (uint64_t)&qword_1EB87F118, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(void))sub_1BFFD930C);
      swift_release();
      swift_release();
      uint64_t v40 = MEMORY[0x1E4FBC870];
    }
    else
    {
      uint64_t v40 = *(void *)(v42 + *(int *)(v25 + 24));
      swift_bridgeObjectRetain();
      sub_1BFE386B8(v42, (uint64_t (*)(void))type metadata accessor for FormatTransformData);
      swift_release();
      swift_release();
    }
  }
  sub_1C0A22C88(v39, (uint64_t)&qword_1EB87F118, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(void))sub_1BFFD930C);
  uint64_t result = sub_1C0A22C88(v54, (uint64_t)&qword_1EB87F118, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(void))sub_1BFFD930C);
  *(void *)(a9 + v29[11]) = v40;
  *(void *)(a9 + v29[12]) = a14;
  *(double *)(a9 + v29[13]) = v51;
  *(unsigned char *)(a9 + v29[14]) = 0;
  return result;
}

uint64_t sub_1C0A20E78(uint64_t a1, uint64_t a2)
{
  sub_1C0A21254(a1, (uint64_t)&v12, (unint64_t *)&qword_1EB88D5E0, (void (*)(uint64_t))sub_1C0A212C0);
  uint64_t v3 = v14;
  if (v14)
  {
    uint64_t v4 = v15;
    __swift_project_boxed_opaque_existential_1(&v12, v14);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a2, v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    uint64_t v6 = *(void *)(a2 + *(int *)(type metadata accessor for FormatContent(0) + 68));
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BFEF3988(v5, v6);
    sub_1BFFF7C50(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v12 = 0x2D746E65746E6F63;
    unint64_t v13 = 0xEB000000002D6469;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    unint64_t v9 = v13;
    *(void *)(inited + 32) = v12;
    *(void *)(inited + 40) = v9;
    uint64_t v10 = sub_1BFFB9A98(inited, v7);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    sub_1C0A22C88((uint64_t)&v12, (uint64_t)&qword_1EB88D5E0, (uint64_t)sub_1C0A212C0, (uint64_t (*)(void))sub_1BFFD930C);
    return 0;
  }
  return v10;
}

uint64_t sub_1C0A21044(uint64_t a1, uint64_t a2)
{
  sub_1C0A21254(a1, (uint64_t)v7, (unint64_t *)&qword_1EB88D5E0, (void (*)(uint64_t))sub_1C0A212C0);
  uint64_t v3 = v8;
  if (!v8)
  {
    sub_1C0A22C88((uint64_t)v7, (uint64_t)&qword_1EB88D5E0, (uint64_t)sub_1C0A212C0, (uint64_t (*)(void))sub_1BFFD930C);
    return 0;
  }
  uint64_t v4 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a2, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!*(void *)(v5 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

double static FormatServiceOptions.default(purpose:log:)@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = qword_1EB87F110;
  id v6 = a1;
  id v7 = a2;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for FormatTransformData();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB93C758);
  uint64_t v10 = (int *)type metadata accessor for FormatServiceOptions();
  sub_1C0078E68(v9, a3 + v10[10], (uint64_t (*)(void))type metadata accessor for FormatTransformData);
  *(void *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 48) = 1;
  *(void *)(a3 + v10[12]) = v6;
  *(void *)(a3 + v10[13]) = v7;
  *(_OWORD *)(a3 + 56) = xmmword_1C15335A0;
  *(void *)(a3 + 72) = 0x40F5180000000000;
  *(void *)(a3 + 80) = 30;
  *(void *)(a3 + v10[11]) = MEMORY[0x1E4FBC870];
  *(void *)(a3 + v10[15]) = 0;
  *(void *)(a3 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(unsigned char *)(a3 + v10[14]) = 0;
  return result;
}

uint64_t sub_1C0A21254(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFFD930C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C0A212C0()
{
  unint64_t result = qword_1EB88D5D8;
  if (!qword_1EB88D5D8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB88D5D8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatServiceOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(void *)(a1 + 32) = a2[4];
    }
    *(void *)(v4 + 40) = a2[5];
    *(unsigned char *)(v4 + 48) = *((unsigned char *)a2 + 48);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
    unint64_t v98 = a3;
    uint64_t v11 = a3[10];
    uint64_t v12 = (void **)(v4 + v11);
    unint64_t v13 = (void **)((char *)a2 + v11);
    uint64_t v14 = type metadata accessor for FormatTransformKnobs();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v99 = a2;
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1BFFD930C(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v94 = v15;
      uint64_t v96 = v14;
      uint64_t v17 = *v13;
      *uint64_t v12 = *v13;
      uint64_t v18 = (int *)type metadata accessor for FeedContext();
      uint64_t v19 = v18[5];
      __dst = (void **)((char *)v12 + v19);
      uint64_t v20 = (void **)((char *)v13 + v19);
      uint64_t v21 = (int *)type metadata accessor for BundleSession();
      uint64_t v90 = *((void *)v21 - 1);
      uint64_t v22 = *(unsigned int (**)(void *, uint64_t, int *))(v90 + 48);
      id v23 = v17;
      if (v22(v20, 1, v21))
      {
        sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        void *__dst = *v20;
        uint64_t v25 = v21[5];
        uint64_t v26 = (char *)__dst + v25;
        uint64_t v27 = (char *)v20 + v25;
        uint64_t v28 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        *((unsigned char *)__dst + v21[6]) = *((unsigned char *)v20 + v21[6]);
        *((unsigned char *)__dst + v21[7]) = *((unsigned char *)v20 + v21[7]);
        *(_OWORD *)((char *)__dst + v21[8]) = *(_OWORD *)((char *)v20 + v21[8]);
        *(void *)((char *)__dst + v21[9]) = *(void *)((char *)v20 + v21[9]);
        *((unsigned char *)__dst + v21[10]) = *((unsigned char *)v20 + v21[10]);
        *((unsigned char *)__dst + v21[11]) = *((unsigned char *)v20 + v21[11]);
        uint64_t v29 = *(void (**)(void *, void, uint64_t, int *))(v90 + 56);
        swift_bridgeObjectRetain();
        v29(__dst, 0, 1, v21);
      }
      *((unsigned char *)v12 + v18[6]) = *((unsigned char *)v13 + v18[6]);
      *((unsigned char *)v12 + v18[7]) = *((unsigned char *)v13 + v18[7]);
      *((unsigned char *)v12 + v18[8]) = *((unsigned char *)v13 + v18[8]);
      *((unsigned char *)v12 + v18[9]) = *((unsigned char *)v13 + v18[9]);
      *(void **)((char *)v12 + v18[10]) = *(void **)((char *)v13 + v18[10]);
      *(void **)((char *)v12 + v18[11]) = *(void **)((char *)v13 + v18[11]);
      uint64_t v30 = v18[12];
      uint64_t v31 = (void **)((char *)v12 + v30);
      uint64_t v32 = (void **)((char *)v13 + v30);
      uint64_t v33 = *(uint64_t *)((char *)v13 + v30 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((unint64_t)(v33 - 1) >= 3)
      {
        *uint64_t v31 = *v32;
        v31[1] = v33;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      }
      *((unsigned char *)v12 + v18[13]) = *((unsigned char *)v13 + v18[13]);
      uint64_t v34 = v18[14];
      uint64_t v35 = *(void **)((char *)v13 + v34);
      *(void **)((char *)v12 + v34) = v35;
      uint64_t v36 = v18[15];
      uint64_t v37 = (void **)((char *)v12 + v36);
      uint64_t v38 = (void **)((char *)v13 + v36);
      uint64_t v39 = v38[1];
      void *v37 = *v38;
      v37[1] = v39;
      uint64_t v40 = *(int *)(v96 + 20);
      uint64_t v41 = (char *)v12 + v40;
      uint64_t v42 = (char *)v13 + v40;
      long long v43 = *(_OWORD *)((char *)v13 + v40 + 24);
      *(_OWORD *)((char *)v12 + v40 + 24) = v43;
      uint64_t v44 = v43;
      __dsta = **(void (***)(char *, char *, uint64_t))(v43 - 8);
      id v45 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dsta(v41, v42, v44);
      (*(void (**)(void **, void, uint64_t, uint64_t))(v94 + 56))(v12, 0, 1, v96);
    }
    uint64_t v46 = (int *)type metadata accessor for FormatTransformData();
    *(void **)((char *)v12 + v46[5]) = *(void **)((char *)v13 + v46[5]);
    *(void **)((char *)v12 + v46[6]) = *(void **)((char *)v13 + v46[6]);
    *(void **)((char *)v12 + v46[7]) = *(void **)((char *)v13 + v46[7]);
    *((unsigned char *)v12 + v46[8]) = *((unsigned char *)v13 + v46[8]);
    *((unsigned char *)v12 + v46[9]) = *((unsigned char *)v13 + v46[9]);
    uint64_t v47 = v46[10];
    int v48 = (void **)((char *)v12 + v47);
    uint64_t v49 = (void **)((char *)v13 + v47);
    uint64_t v50 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
    uint64_t v51 = *((void *)v50 - 1);
    uint64_t v52 = *(unsigned int (**)(void *, uint64_t, int *))(v51 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52(v49, 1, v50))
    {
      sub_1BFFD930C(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
      uint64_t v55 = v98;
      uint64_t v54 = v99;
    }
    else
    {
      uint64_t v97 = v51;
      *int v48 = *v49;
      *((unsigned char *)v48 + 8) = *((unsigned char *)v49 + 8);
      _OWORD v48[2] = v49[2];
      *((unsigned char *)v48 + 24) = *((unsigned char *)v49 + 24);
      uint64_t v56 = v50[6];
      uint64_t v57 = (void *)((char *)v48 + v56);
      uint64_t v58 = (void *)((char *)v49 + v56);
      uint64_t v59 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v61 = v48;
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        uint64_t v63 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v63;
        uint64_t v64 = *(int *)(v59 + 24);
        __dstb = (char *)v58 + v64;
        uint64_t v95 = (char *)v57 + v64;
        uint64_t v65 = sub_1C1516D9C();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v95, __dstb, v65);
        *(void *)((char *)v57 + *(int *)(v59 + 28)) = *(void *)((char *)v58 + *(int *)(v59 + 28));
        uint64_t v67 = *(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56);
        swift_bridgeObjectRetain();
        v67(v57, 0, 1, v59);
        uint64_t v61 = v48;
      }
      uint64_t v68 = v50[7];
      uint64_t v69 = (char *)v61 + v68;
      unint64_t v70 = (char *)v49 + v68;
      *(void *)uint64_t v69 = *(void *)v70;
      v69[8] = v70[8];
      uint64_t v71 = v50[8];
      uint64_t v72 = (char *)v61 + v71;
      uint64_t v73 = (char *)v49 + v71;
      v72[8] = v73[8];
      *(void *)uint64_t v72 = *(void *)v73;
      uint64_t v74 = v50[9];
      uint64_t v75 = (char *)v61 + v74;
      uint64_t v76 = (char *)v49 + v74;
      *(void *)uint64_t v75 = *(void *)v76;
      v75[8] = v76[8];
      uint64_t v77 = v50[10];
      uint64_t v78 = (char *)v61 + v77;
      uint64_t v79 = (char *)v49 + v77;
      uint64_t v80 = *((void *)v79 + 4);
      uint64_t v54 = v99;
      if (v80 == 1)
      {
        long long v81 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v81;
        *((void *)v78 + 4) = *((void *)v79 + 4);
      }
      else
      {
        *(void *)uint64_t v78 = *(void *)v79;
        v78[8] = v79[8];
        *((void *)v78 + 2) = *((void *)v79 + 2);
        v78[24] = v79[24];
        *((void *)v78 + 4) = v80;
        swift_bridgeObjectRetain();
      }
      uint64_t v55 = v98;
      (*(void (**)(void *, void, uint64_t, int *))(v97 + 56))(v61, 0, 1, v50);
    }
    uint64_t v82 = v55[12];
    *(void *)(v4 + v55[11]) = *(uint64_t *)((char *)v54 + v55[11]);
    uint64_t v83 = *(void **)((char *)v54 + v82);
    *(void *)(v4 + v82) = v83;
    uint64_t v84 = v55[13];
    uint64_t v85 = v55[14];
    long long v86 = *(void **)((char *)v54 + v84);
    *(void *)(v4 + v84) = v86;
    *(unsigned char *)(v4 + v85) = *((unsigned char *)v54 + v85);
    *(void *)(v4 + v55[15]) = *(uint64_t *)((char *)v54 + v55[15]);
    swift_bridgeObjectRetain();
    id v87 = v83;
    id v88 = v86;
  }
  swift_retain();
  return v4;
}

uint64_t assignWithCopy for FormatServiceOptions(uint64_t a1, long long *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  uint64_t v9 = *((void *)a2 + 5);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void **)(a1 + v10);
  uint64_t v12 = (void **)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for FormatTransformKnobs();
  uint64_t v14 = *(void **)(v13 - 8);
  uint64_t v15 = (uint64_t (*)(void **, uint64_t, uint64_t))v14[6];
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_1BFE386B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatTransformKnobs);
      goto LABEL_14;
    }
    uint64_t v186 = v13;
    uint64_t v190 = a3;
    uint64_t v27 = *v12;
    uint64_t v28 = *v11;
    *uint64_t v11 = *v12;
    id v29 = v27;

    uint64_t v30 = (int *)type metadata accessor for FeedContext();
    uint64_t v31 = v30[5];
    uint64_t v32 = (void **)((char *)v11 + v31);
    uint64_t v33 = (void **)((char *)v12 + v31);
    uint64_t v34 = (int *)type metadata accessor for BundleSession();
    uint64_t v175 = *((void *)v34 - 1);
    __dsta = v32;
    uint64_t v35 = *(uint64_t (**)(void *, uint64_t, int *))(v175 + 48);
    LODWORD(v32) = v35(v32, 1, v34);
    __srca = v33;
    int v36 = v35(v33, 1, v34);
    if (v32)
    {
      if (v36)
      {
        sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v38 = *(void *)(*(void *)(v37 - 8) + 64);
        uint64_t v39 = __dsta;
LABEL_25:
        memcpy(v39, v33, v38);
        goto LABEL_28;
      }
      void *__dsta = *v33;
      uint64_t v60 = v34[5];
      uint64_t v61 = (char *)__dsta + v60;
      uint64_t v62 = (char *)v33 + v60;
      uint64_t v63 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
      *((unsigned char *)__dsta + v34[6]) = __srca[v34[6]];
      *((unsigned char *)__dsta + v34[7]) = __srca[v34[7]];
      *(_OWORD *)((char *)__dsta + v34[8]) = *(_OWORD *)&__srca[v34[8]];
      *(void *)((char *)__dsta + v34[9]) = *(void *)&__srca[v34[9]];
      *((unsigned char *)__dsta + v34[10]) = __srca[v34[10]];
      *((unsigned char *)__dsta + v34[11]) = __srca[v34[11]];
      uint64_t v64 = *(void (**)(void *, void, uint64_t, int *))(v175 + 56);
      swift_bridgeObjectRetain();
      v64(__dsta, 0, 1, v34);
    }
    else
    {
      if (v36)
      {
        sub_1BFE386B8((uint64_t)__dsta, (uint64_t (*)(void))type metadata accessor for BundleSession);
        sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v38 = *(void *)(*(void *)(v59 - 8) + 64);
        uint64_t v39 = __dsta;
        goto LABEL_25;
      }
      void *__dsta = *v33;
      uint64_t v65 = v34[5];
      uint64_t v66 = (char *)__dsta + v65;
      uint64_t v67 = (char *)v33 + v65;
      uint64_t v68 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 24))(v66, v67, v68);
      *((unsigned char *)__dsta + v34[6]) = __srca[v34[6]];
      *((unsigned char *)__dsta + v34[7]) = __srca[v34[7]];
      *(_OWORD *)((char *)__dsta + v34[8]) = *(_OWORD *)&__srca[v34[8]];
      *(void *)((char *)__dsta + v34[9]) = *(void *)&__srca[v34[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)__dsta + v34[10]) = __srca[v34[10]];
      *((unsigned char *)__dsta + v34[11]) = __srca[v34[11]];
    }
LABEL_28:
    *((unsigned char *)v11 + v30[6]) = *((unsigned char *)v12 + v30[6]);
    *((unsigned char *)v11 + v30[7]) = *((unsigned char *)v12 + v30[7]);
    *((unsigned char *)v11 + v30[8]) = *((unsigned char *)v12 + v30[8]);
    *((unsigned char *)v11 + v30[9]) = *((unsigned char *)v12 + v30[9]);
    *(void **)((char *)v11 + v30[10]) = *(void **)((char *)v12 + v30[10]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void **)((char *)v11 + v30[11]) = *(void **)((char *)v12 + v30[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v69 = v30[12];
    unint64_t v70 = (void **)((char *)v11 + v69);
    uint64_t v71 = (void **)((char *)v12 + v69);
    uint64_t v72 = *(uint64_t *)((char *)v11 + v69 + 8);
    unint64_t v73 = *(unint64_t *)((char *)v12 + v69 + 8) - 1;
    if ((unint64_t)(v72 - 1) >= 3)
    {
      if (v73 >= 3)
      {
        *unint64_t v70 = *v71;
        v70[1] = v71[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      sub_1C0A22C88((uint64_t)v70, (uint64_t)&qword_1EB879C00, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFFF7C50);
    }
    else if (v73 >= 3)
    {
      *unint64_t v70 = *v71;
      v70[1] = v71[1];
      swift_bridgeObjectRetain();
LABEL_35:
      a3 = v190;
      *((unsigned char *)v11 + v30[13]) = *((unsigned char *)v12 + v30[13]);
      uint64_t v74 = v30[14];
      uint64_t v75 = *(void **)((char *)v11 + v74);
      uint64_t v76 = *(void **)((char *)v12 + v74);
      *(void **)((char *)v11 + v74) = v76;
      id v77 = v76;

      uint64_t v78 = v30[15];
      uint64_t v79 = (char *)v11 + v78;
      uint64_t v80 = (char *)v12 + v78;
      *(void **)((char *)v11 + v78) = *(void **)((char *)v12 + v78);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v79 + 1) = *((void *)v80 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)v11 + *(int *)(v186 + 20)), (uint64_t *)((char *)v12 + *(int *)(v186 + 20)));
      goto LABEL_36;
    }
    *(_OWORD *)unint64_t v70 = *(_OWORD *)v71;
    goto LABEL_35;
  }
  if (v17)
  {
LABEL_14:
    sub_1BFFD930C(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(v11, v12, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_36;
  }
  __src = (void (**)(void **, void, uint64_t, uint64_t))v14;
  uint64_t v185 = v13;
  uint64_t v189 = a3;
  uint64_t v18 = *v12;
  *uint64_t v11 = *v12;
  uint64_t v19 = (int *)type metadata accessor for FeedContext();
  uint64_t v20 = v19[5];
  __dst = (void **)((char *)v11 + v20);
  uint64_t v21 = (void **)((char *)v12 + v20);
  uint64_t v22 = (int *)type metadata accessor for BundleSession();
  uint64_t v174 = *((void *)v22 - 1);
  id v23 = *(unsigned int (**)(void *, uint64_t, int *))(v174 + 48);
  id v24 = v18;
  if (v23(v21, 1, v22))
  {
    sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
    memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    void *__dst = *v21;
    uint64_t v40 = v22[5];
    uint64_t v41 = (char *)__dst + v40;
    uint64_t v42 = (char *)v21 + v40;
    uint64_t v43 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    *((unsigned char *)__dst + v22[6]) = *((unsigned char *)v21 + v22[6]);
    *((unsigned char *)__dst + v22[7]) = *((unsigned char *)v21 + v22[7]);
    *(_OWORD *)((char *)__dst + v22[8]) = *(_OWORD *)((char *)v21 + v22[8]);
    *(void *)((char *)__dst + v22[9]) = *(void *)((char *)v21 + v22[9]);
    *((unsigned char *)__dst + v22[10]) = *((unsigned char *)v21 + v22[10]);
    *((unsigned char *)__dst + v22[11]) = *((unsigned char *)v21 + v22[11]);
    uint64_t v44 = *(void (**)(void *, void, uint64_t, int *))(v174 + 56);
    swift_bridgeObjectRetain();
    v44(__dst, 0, 1, v22);
  }
  *((unsigned char *)v11 + v19[6]) = *((unsigned char *)v12 + v19[6]);
  *((unsigned char *)v11 + v19[7]) = *((unsigned char *)v12 + v19[7]);
  *((unsigned char *)v11 + v19[8]) = *((unsigned char *)v12 + v19[8]);
  *((unsigned char *)v11 + v19[9]) = *((unsigned char *)v12 + v19[9]);
  *(void **)((char *)v11 + v19[10]) = *(void **)((char *)v12 + v19[10]);
  *(void **)((char *)v11 + v19[11]) = *(void **)((char *)v12 + v19[11]);
  uint64_t v45 = v19[12];
  uint64_t v46 = (void **)((char *)v11 + v45);
  uint64_t v47 = (void **)((char *)v12 + v45);
  unint64_t v48 = *(unint64_t *)((char *)v12 + v45 + 8) - 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48 >= 3)
  {
    *uint64_t v46 = *v47;
    v46[1] = v47[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  *((unsigned char *)v11 + v19[13]) = *((unsigned char *)v12 + v19[13]);
  uint64_t v49 = v19[14];
  uint64_t v50 = *(void **)((char *)v12 + v49);
  *(void **)((char *)v11 + v49) = v50;
  uint64_t v51 = v19[15];
  uint64_t v52 = (void **)((char *)v11 + v51);
  uint64_t v53 = (void **)((char *)v12 + v51);
  *uint64_t v52 = *v53;
  v52[1] = v53[1];
  uint64_t v54 = *(int *)(v185 + 20);
  uint64_t v55 = (char *)v11 + v54;
  uint64_t v56 = (char *)v12 + v54;
  uint64_t v57 = *(uint64_t *)((char *)v12 + v54 + 24);
  *((void *)v55 + 3) = v57;
  *((void *)v55 + 4) = *(void **)((char *)v12 + v54 + 32);
  __dstc = **(void (***)(char *, char *, uint64_t))(v57 - 8);
  id v58 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __dstc(v55, v56, v57);
  __src[7](v11, 0, 1, v185);
  a3 = v189;
LABEL_36:
  long long v81 = (int *)type metadata accessor for FormatTransformData();
  *(void **)((char *)v11 + v81[5]) = *(void **)((char *)v12 + v81[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v11 + v81[6]) = *(void **)((char *)v12 + v81[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v11 + v81[7]) = *(void **)((char *)v12 + v81[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v11 + v81[8]) = *((unsigned char *)v12 + v81[8]);
  *((unsigned char *)v11 + v81[9]) = *((unsigned char *)v12 + v81[9]);
  uint64_t v82 = v81[10];
  uint64_t v83 = (uint64_t)v11 + v82;
  uint64_t v84 = (char *)v12 + v82;
  uint64_t v85 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v86 = *((void *)v85 - 1);
  id v87 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v86 + 48);
  LODWORD(v81) = v87(v83, 1, v85);
  int v88 = v87((uint64_t)v84, 1, v85);
  if (!v81)
  {
    if (v88)
    {
      sub_1BFE386B8(v83, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
      goto LABEL_42;
    }
    uint64_t v192 = a3;
    uint64_t v98 = *(void *)v84;
    *(unsigned char *)(v83 + 8) = v84[8];
    *(void *)uint64_t v83 = v98;
    uint64_t v99 = *((void *)v84 + 2);
    *(unsigned char *)(v83 + 24) = v84[24];
    *(void *)(v83 + 16) = v99;
    uint64_t v100 = v85[6];
    uint64_t v101 = (void *)(v83 + v100);
    uint64_t v102 = &v84[v100];
    uint64_t v103 = type metadata accessor for FeedGroupBundleArticleQuotas();
    __dstb = *(void **)(v103 - 8);
    uint64_t v104 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstb[6];
    long long v187 = v101;
    LODWORD(v101) = v104((char *)v101, 1, v103);
    int v105 = v104(v102, 1, v103);
    if (v101)
    {
      if (v105)
      {
        sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        size_t v107 = *(void *)(*(void *)(v106 - 8) + 64);
        uint64_t v108 = v187;
LABEL_54:
        memcpy(v108, v102, v107);
        goto LABEL_57;
      }
      void *v187 = *(void *)v102;
      v187[1] = *((void *)v102 + 1);
      uint64_t v140 = *(int *)(v103 + 24);
      long long v173 = &v102[v140];
      long long v177 = (char *)v187 + v140;
      uint64_t v141 = sub_1C1516D9C();
      long long v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16);
      swift_bridgeObjectRetain();
      v171(v177, v173, v141);
      *(void *)((char *)v187 + *(int *)(v103 + 28)) = *(void *)&v102[*(int *)(v103 + 28)];
      uint64_t v142 = (void (*)(void *, void, uint64_t, uint64_t))__dstb[7];
      swift_bridgeObjectRetain();
      v142(v187, 0, 1, v103);
    }
    else
    {
      if (v105)
      {
        sub_1BFE386B8((uint64_t)v187, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
        sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        size_t v107 = *(void *)(*(void *)(v139 - 8) + 64);
        uint64_t v108 = v187;
        goto LABEL_54;
      }
      void *v187 = *(void *)v102;
      v187[1] = *((void *)v102 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v143 = *(int *)(v103 + 24);
      uint64_t v144 = (char *)v187 + v143;
      uint64_t v145 = &v102[v143];
      uint64_t v146 = sub_1C1516D9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 24))(v144, v145, v146);
      *(void *)((char *)v187 + *(int *)(v103 + 28)) = *(void *)&v102[*(int *)(v103 + 28)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_57:
    a3 = v192;
    uint64_t v147 = v85[7];
    uint64_t v148 = v83 + v147;
    long long v149 = &v84[v147];
    uint64_t v150 = *(void *)v149;
    *(unsigned char *)(v148 + 8) = v149[8];
    *(void *)uint64_t v148 = v150;
    uint64_t v151 = v85[8];
    uint64_t v152 = v83 + v151;
    uint64_t v153 = &v84[v151];
    uint64_t v154 = *(void *)v153;
    *(unsigned char *)(v152 + 8) = v153[8];
    *(void *)uint64_t v152 = v154;
    uint64_t v155 = v85[9];
    uint64_t v156 = v83 + v155;
    long long v157 = &v84[v155];
    uint64_t v158 = *(void *)v157;
    *(unsigned char *)(v156 + 8) = v157[8];
    *(void *)uint64_t v156 = v158;
    uint64_t v159 = v85[10];
    uint64_t v160 = v83 + v159;
    long long v161 = &v84[v159];
    uint64_t v162 = *(void *)&v84[v159 + 32];
    if (*(void *)(v160 + 32) == 1)
    {
      if (v162 == 1)
      {
        long long v163 = *(_OWORD *)v161;
        long long v164 = *((_OWORD *)v161 + 1);
        *(void *)(v160 + 32) = *((void *)v161 + 4);
        *(_OWORD *)uint64_t v160 = v163;
        *(_OWORD *)(v160 + 16) = v164;
      }
      else
      {
        uint64_t v167 = *(void *)v161;
        *(unsigned char *)(v160 + 8) = v161[8];
        *(void *)uint64_t v160 = v167;
        uint64_t v168 = *((void *)v161 + 2);
        *(unsigned char *)(v160 + 24) = v161[24];
        *(void *)(v160 + 16) = v168;
        *(void *)(v160 + 32) = *((void *)v161 + 4);
        swift_bridgeObjectRetain();
      }
    }
    else if (v162 == 1)
    {
      sub_1C0921044(v160);
      uint64_t v165 = *((void *)v161 + 4);
      long long v166 = *((_OWORD *)v161 + 1);
      *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
      *(_OWORD *)(v160 + 16) = v166;
      *(void *)(v160 + 32) = v165;
    }
    else
    {
      uint64_t v169 = *(void *)v161;
      *(unsigned char *)(v160 + 8) = v161[8];
      *(void *)uint64_t v160 = v169;
      uint64_t v170 = *((void *)v161 + 2);
      *(unsigned char *)(v160 + 24) = v161[24];
      *(void *)(v160 + 16) = v170;
      *(void *)(v160 + 32) = *((void *)v161 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    goto LABEL_51;
  }
  if (v88)
  {
LABEL_42:
    sub_1BFFD930C(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy((void *)v83, v84, *(void *)(*(void *)(v97 - 8) + 64));
    goto LABEL_51;
  }
  uint64_t v191 = a3;
  uint64_t v89 = *(void *)v84;
  *(unsigned char *)(v83 + 8) = v84[8];
  *(void *)uint64_t v83 = v89;
  uint64_t v90 = *((void *)v84 + 2);
  *(unsigned char *)(v83 + 24) = v84[24];
  *(void *)(v83 + 16) = v90;
  uint64_t v91 = v85[6];
  uint64_t v92 = (void *)(v83 + v91);
  uint64_t v93 = &v84[v91];
  uint64_t v94 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v95 = *(void *)(v94 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
  {
    sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
  }
  else
  {
    *uint64_t v92 = *(void *)v93;
    v92[1] = *((void *)v93 + 1);
    uint64_t v109 = *(int *)(v94 + 24);
    __srcb = &v93[v109];
    long long v188 = (char *)v92 + v109;
    uint64_t v176 = sub_1C1516D9C();
    long long v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
    swift_bridgeObjectRetain();
    v172(v188, __srcb, v176);
    *(void *)((char *)v92 + *(int *)(v94 + 28)) = *(void *)&v93[*(int *)(v94 + 28)];
    uint64_t v110 = *(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56);
    swift_bridgeObjectRetain();
    v110(v92, 0, 1, v94);
  }
  uint64_t v111 = v85[7];
  uint64_t v112 = v83 + v111;
  long long v113 = &v84[v111];
  uint64_t v114 = *(void *)v113;
  *(unsigned char *)(v112 + 8) = v113[8];
  *(void *)uint64_t v112 = v114;
  uint64_t v115 = v85[8];
  uint64_t v116 = v83 + v115;
  long long v117 = &v84[v115];
  uint64_t v118 = *(void *)v117;
  *(unsigned char *)(v116 + 8) = v117[8];
  *(void *)uint64_t v116 = v118;
  uint64_t v119 = v85[9];
  uint64_t v120 = v83 + v119;
  uint64_t v121 = &v84[v119];
  uint64_t v122 = *(void *)v121;
  *(unsigned char *)(v120 + 8) = v121[8];
  *(void *)uint64_t v120 = v122;
  uint64_t v123 = v85[10];
  uint64_t v124 = v83 + v123;
  uint64_t v125 = &v84[v123];
  a3 = v191;
  if (*((void *)v125 + 4) == 1)
  {
    long long v126 = *(_OWORD *)v125;
    long long v127 = *((_OWORD *)v125 + 1);
    *(void *)(v124 + 32) = *((void *)v125 + 4);
    *(_OWORD *)uint64_t v124 = v126;
    *(_OWORD *)(v124 + 16) = v127;
  }
  else
  {
    uint64_t v128 = *(void *)v125;
    *(unsigned char *)(v124 + 8) = v125[8];
    *(void *)uint64_t v124 = v128;
    uint64_t v129 = *((void *)v125 + 2);
    *(unsigned char *)(v124 + 24) = v125[24];
    *(void *)(v124 + 16) = v129;
    *(void *)(v124 + 32) = *((void *)v125 + 4);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
LABEL_51:
  *(void *)(a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v130 = a3[12];
  uint64_t v131 = *(void **)((char *)a2 + v130);
  uint64_t v132 = *(void **)(a1 + v130);
  *(void *)(a1 + v130) = v131;
  id v133 = v131;

  uint64_t v134 = a3[13];
  long long v135 = *(void **)((char *)a2 + v134);
  uint64_t v136 = *(void **)(a1 + v134);
  *(void *)(a1 + v134) = v135;
  id v137 = v135;

  *(unsigned char *)(a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)(a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C0A22C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t initializeWithTake for FormatServiceOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = a3[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v11 = type metadata accessor for FormatTransformKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BFFD930C(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v62 = v3;
    *uint64_t v9 = *v10;
    uint64_t v14 = (int *)type metadata accessor for FeedContext();
    uint64_t v15 = v14[5];
    int v16 = (void *)((char *)v9 + v15);
    int v17 = (void *)((char *)v10 + v15);
    uint64_t v18 = (int *)type metadata accessor for BundleSession();
    uint64_t v60 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v60 + 48))(v17, 1, v18))
    {
      sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      void *v16 = *v17;
      uint64_t v20 = v18[5];
      uint64_t v57 = (char *)v17 + v20;
      id v58 = (char *)v16 + v20;
      uint64_t v21 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v58, v57, v21);
      *((unsigned char *)v16 + v18[6]) = *((unsigned char *)v17 + v18[6]);
      *((unsigned char *)v16 + v18[7]) = *((unsigned char *)v17 + v18[7]);
      *(_OWORD *)((char *)v16 + v18[8]) = *(_OWORD *)((char *)v17 + v18[8]);
      *(void *)((char *)v16 + v18[9]) = *(void *)((char *)v17 + v18[9]);
      *((unsigned char *)v16 + v18[10]) = *((unsigned char *)v17 + v18[10]);
      *((unsigned char *)v16 + v18[11]) = *((unsigned char *)v17 + v18[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v60 + 56))(v16, 0, 1, v18);
    }
    *((unsigned char *)v9 + v14[6]) = *((unsigned char *)v10 + v14[6]);
    *((unsigned char *)v9 + v14[7]) = *((unsigned char *)v10 + v14[7]);
    *((unsigned char *)v9 + v14[8]) = *((unsigned char *)v10 + v14[8]);
    *((unsigned char *)v9 + v14[9]) = *((unsigned char *)v10 + v14[9]);
    *(void *)((char *)v9 + v14[10]) = *(void *)((char *)v10 + v14[10]);
    *(void *)((char *)v9 + v14[11]) = *(void *)((char *)v10 + v14[11]);
    *(_OWORD *)((char *)v9 + v14[12]) = *(_OWORD *)((char *)v10 + v14[12]);
    *((unsigned char *)v9 + v14[13]) = *((unsigned char *)v10 + v14[13]);
    *(void *)((char *)v9 + v14[14]) = *(void *)((char *)v10 + v14[14]);
    *(_OWORD *)((char *)v9 + v14[15]) = *(_OWORD *)((char *)v10 + v14[15]);
    uint64_t v22 = *(int *)(v11 + 20);
    id v23 = (char *)v9 + v22;
    id v24 = (char *)v10 + v22;
    long long v25 = *((_OWORD *)v24 + 1);
    *(_OWORD *)id v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    *((void *)v23 + 4) = *((void *)v24 + 4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    uint64_t v3 = v62;
  }
  uint64_t v26 = (int *)type metadata accessor for FormatTransformData();
  *(void *)((char *)v9 + v26[5]) = *(void *)((char *)v10 + v26[5]);
  *(void *)((char *)v9 + v26[6]) = *(void *)((char *)v10 + v26[6]);
  *(void *)((char *)v9 + v26[7]) = *(void *)((char *)v10 + v26[7]);
  *((unsigned char *)v9 + v26[8]) = *((unsigned char *)v10 + v26[8]);
  *((unsigned char *)v9 + v26[9]) = *((unsigned char *)v10 + v26[9]);
  uint64_t v27 = v26[10];
  uint64_t v28 = (void *)((char *)v9 + v27);
  id v29 = (void *)((char *)v10 + v27);
  uint64_t v30 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v31 = *((void *)v30 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    sub_1BFFD930C(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v63 = v3;
    void *v28 = *v29;
    *((unsigned char *)v28 + 8) = *((unsigned char *)v29 + 8);
    void v28[2] = v29[2];
    *((unsigned char *)v28 + 24) = *((unsigned char *)v29 + 24);
    uint64_t v33 = v30[6];
    uint64_t v34 = (_OWORD *)((char *)v28 + v33);
    uint64_t v35 = (_OWORD *)((char *)v29 + v33);
    uint64_t v36 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      _OWORD *v34 = *v35;
      uint64_t v39 = *(int *)(v36 + 24);
      uint64_t v59 = (char *)v35 + v39;
      uint64_t v61 = (char *)v34 + v39;
      uint64_t v40 = sub_1C1516D9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v61, v59, v40);
      *(void *)((char *)v34 + *(int *)(v36 + 28)) = *(void *)((char *)v35 + *(int *)(v36 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    uint64_t v41 = v30[7];
    uint64_t v42 = (char *)v28 + v41;
    uint64_t v43 = (char *)v29 + v41;
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = v30[8];
    uint64_t v45 = (char *)v28 + v44;
    uint64_t v46 = (char *)v29 + v44;
    v45[8] = v46[8];
    *(void *)uint64_t v45 = *(void *)v46;
    uint64_t v47 = v30[9];
    unint64_t v48 = (char *)v28 + v47;
    uint64_t v49 = (char *)v29 + v47;
    *(void *)unint64_t v48 = *(void *)v49;
    v48[8] = v49[8];
    uint64_t v50 = v30[10];
    uint64_t v51 = (char *)v28 + v50;
    uint64_t v52 = (char *)v29 + v50;
    long long v53 = *((_OWORD *)v52 + 1);
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    *((_OWORD *)v51 + 1) = v53;
    *((void *)v51 + 4) = *((void *)v52 + 4);
    (*(void (**)(void *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
    uint64_t v3 = v63;
  }
  uint64_t v54 = v3[12];
  *(void *)(a1 + v3[11]) = *(void *)(a2 + v3[11]);
  *(void *)(a1 + v54) = *(void *)(a2 + v54);
  uint64_t v55 = v3[14];
  *(void *)(a1 + v3[13]) = *(void *)(a2 + v3[13]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  *(void *)(a1 + v3[15]) = *(void *)(a2 + v3[15]);
  return a1;
}

uint64_t assignWithTake for FormatServiceOptions(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v9 = a3[10];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(void *)(a1 + 72) = v8;
  uint64_t v12 = type metadata accessor for FormatTransformKnobs();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1BFE386B8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatTransformKnobs);
      goto LABEL_9;
    }
    uint64_t v143 = a3;
    id v24 = (void *)*v10;
    *uint64_t v10 = *v11;

    uint64_t v139 = (int *)type metadata accessor for FeedContext();
    uint64_t v25 = v139[5];
    uint64_t v26 = (void *)((char *)v10 + v25);
    uint64_t v27 = (void *)((char *)v11 + v25);
    uint64_t v28 = (int *)type metadata accessor for BundleSession();
    uint64_t v131 = *((void *)v28 - 1);
    id v29 = *(uint64_t (**)(void *, uint64_t, int *))(v131 + 48);
    uint64_t v134 = v26;
    LODWORD(v26) = v29(v26, 1, v28);
    int v30 = v29(v27, 1, v28);
    if (v26)
    {
      if (v30)
      {
        sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v32 = *(void *)(*(void *)(v31 - 8) + 64);
        uint64_t v33 = v134;
LABEL_17:
        memcpy(v33, v27, v32);
        goto LABEL_20;
      }
      *uint64_t v134 = *v27;
      uint64_t v41 = v28[5];
      uint64_t v42 = (char *)v134 + v41;
      uint64_t v43 = (char *)v27 + v41;
      uint64_t v44 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      *((unsigned char *)v134 + v28[6]) = *((unsigned char *)v27 + v28[6]);
      *((unsigned char *)v134 + v28[7]) = *((unsigned char *)v27 + v28[7]);
      *(_OWORD *)((char *)v134 + v28[8]) = *(_OWORD *)((char *)v27 + v28[8]);
      *(void *)((char *)v134 + v28[9]) = *(void *)((char *)v27 + v28[9]);
      *((unsigned char *)v134 + v28[10]) = *((unsigned char *)v27 + v28[10]);
      *((unsigned char *)v134 + v28[11]) = *((unsigned char *)v27 + v28[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v131 + 56))(v134, 0, 1, v28);
    }
    else
    {
      if (v30)
      {
        sub_1BFE386B8((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for BundleSession);
        sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v32 = *(void *)(*(void *)(v40 - 8) + 64);
        uint64_t v33 = v134;
        goto LABEL_17;
      }
      *uint64_t v134 = *v27;
      uint64_t v45 = v28[5];
      uint64_t v46 = (char *)v134 + v45;
      uint64_t v47 = (char *)v27 + v45;
      uint64_t v48 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
      *((unsigned char *)v134 + v28[6]) = *((unsigned char *)v27 + v28[6]);
      *((unsigned char *)v134 + v28[7]) = *((unsigned char *)v27 + v28[7]);
      *(_OWORD *)((char *)v134 + v28[8]) = *(_OWORD *)((char *)v27 + v28[8]);
      *(void *)((char *)v134 + v28[9]) = *(void *)((char *)v27 + v28[9]);
      swift_bridgeObjectRelease();
      *((unsigned char *)v134 + v28[10]) = *((unsigned char *)v27 + v28[10]);
      *((unsigned char *)v134 + v28[11]) = *((unsigned char *)v27 + v28[11]);
    }
LABEL_20:
    a3 = v143;
    *((unsigned char *)v10 + v139[6]) = *((unsigned char *)v11 + v139[6]);
    *((unsigned char *)v10 + v139[7]) = *((unsigned char *)v11 + v139[7]);
    *((unsigned char *)v10 + v139[8]) = *((unsigned char *)v11 + v139[8]);
    *((unsigned char *)v10 + v139[9]) = *((unsigned char *)v11 + v139[9]);
    *(void *)((char *)v10 + v139[10]) = *(void *)((char *)v11 + v139[10]);
    swift_bridgeObjectRelease();
    *(void *)((char *)v10 + v139[11]) = *(void *)((char *)v11 + v139[11]);
    swift_bridgeObjectRelease();
    uint64_t v49 = v139[12];
    uint64_t v50 = (void *)((char *)v10 + v49);
    uint64_t v51 = (void *)((char *)v11 + v49);
    if ((unint64_t)(*(void *)((char *)v10 + v49 + 8) - 1) >= 3)
    {
      uint64_t v52 = v51[1];
      if ((unint64_t)(v52 - 1) >= 3)
      {
        *uint64_t v50 = *v51;
        v50[1] = v52;
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      sub_1C0A22C88((uint64_t)v50, (uint64_t)&qword_1EB879C00, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFFF7C50);
    }
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
LABEL_25:
    *((unsigned char *)v10 + v139[13]) = *((unsigned char *)v11 + v139[13]);
    uint64_t v53 = v139[14];
    uint64_t v54 = *(void **)((char *)v10 + v53);
    *(void *)((char *)v10 + v53) = *(void *)((char *)v11 + v53);

    uint64_t v55 = v139[15];
    uint64_t v56 = (char *)v10 + v55;
    uint64_t v57 = (char *)v11 + v55;
    *(void *)((char *)v10 + v55) = *(void *)((char *)v11 + v55);
    swift_bridgeObjectRelease();
    *((void *)v56 + 1) = *((void *)v57 + 1);
    swift_bridgeObjectRelease();
    uint64_t v58 = *(int *)(v12 + 20);
    uint64_t v59 = (char *)v10 + v58;
    uint64_t v60 = (char *)v11 + v58;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10 + v58);
    long long v61 = *((_OWORD *)v60 + 1);
    *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
    *((_OWORD *)v59 + 1) = v61;
    *((void *)v59 + 4) = *((void *)v60 + 4);
    goto LABEL_26;
  }
  if (v16)
  {
LABEL_9:
    sub_1BFFD930C(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(v10, v11, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_26;
  }
  uint64_t v142 = a3;
  *uint64_t v10 = *v11;
  int v17 = (int *)type metadata accessor for FeedContext();
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)((char *)v10 + v18);
  uint64_t v20 = (void *)((char *)v11 + v18);
  uint64_t v21 = (int *)type metadata accessor for BundleSession();
  uint64_t v138 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v138 + 48))(v20, 1, v21))
  {
    sub_1BFFD930C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    uint64_t v34 = v21[5];
    __srca = (char *)v20 + v34;
    long long v135 = (char *)v19 + v34;
    uint64_t v35 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v135, __srca, v35);
    *((unsigned char *)v19 + v21[6]) = *((unsigned char *)v20 + v21[6]);
    *((unsigned char *)v19 + v21[7]) = *((unsigned char *)v20 + v21[7]);
    *(_OWORD *)((char *)v19 + v21[8]) = *(_OWORD *)((char *)v20 + v21[8]);
    *(void *)((char *)v19 + v21[9]) = *(void *)((char *)v20 + v21[9]);
    *((unsigned char *)v19 + v21[10]) = *((unsigned char *)v20 + v21[10]);
    *((unsigned char *)v19 + v21[11]) = *((unsigned char *)v20 + v21[11]);
    (*(void (**)(void *, void, uint64_t, int *))(v138 + 56))(v19, 0, 1, v21);
  }
  *((unsigned char *)v10 + v17[6]) = *((unsigned char *)v11 + v17[6]);
  *((unsigned char *)v10 + v17[7]) = *((unsigned char *)v11 + v17[7]);
  *((unsigned char *)v10 + v17[8]) = *((unsigned char *)v11 + v17[8]);
  *((unsigned char *)v10 + v17[9]) = *((unsigned char *)v11 + v17[9]);
  *(void *)((char *)v10 + v17[10]) = *(void *)((char *)v11 + v17[10]);
  *(void *)((char *)v10 + v17[11]) = *(void *)((char *)v11 + v17[11]);
  *(_OWORD *)((char *)v10 + v17[12]) = *(_OWORD *)((char *)v11 + v17[12]);
  *((unsigned char *)v10 + v17[13]) = *((unsigned char *)v11 + v17[13]);
  *(void *)((char *)v10 + v17[14]) = *(void *)((char *)v11 + v17[14]);
  *(_OWORD *)((char *)v10 + v17[15]) = *(_OWORD *)((char *)v11 + v17[15]);
  uint64_t v36 = *(int *)(v12 + 20);
  uint64_t v37 = (char *)v10 + v36;
  uint64_t v38 = (char *)v11 + v36;
  long long v39 = *((_OWORD *)v38 + 1);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v39;
  *((void *)v37 + 4) = *((void *)v38 + 4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  a3 = v142;
LABEL_26:
  uint64_t v62 = (int *)type metadata accessor for FormatTransformData();
  *(void *)((char *)v10 + v62[5]) = *(void *)((char *)v11 + v62[5]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v62[6]) = *(void *)((char *)v11 + v62[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v62[7]) = *(void *)((char *)v11 + v62[7]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v10 + v62[8]) = *((unsigned char *)v11 + v62[8]);
  *((unsigned char *)v10 + v62[9]) = *((unsigned char *)v11 + v62[9]);
  uint64_t v63 = v62[10];
  uint64_t v64 = (uint64_t)v10 + v63;
  uint64_t v65 = (char *)v11 + v63;
  uint64_t v66 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v67 = *((void *)v66 - 1);
  uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v67 + 48);
  int v69 = v68(v64, 1, v66);
  int v70 = v68((uint64_t)v65, 1, v66);
  if (v69)
  {
    if (!v70)
    {
      uint64_t v144 = a3;
      *(void *)uint64_t v64 = *(void *)v65;
      *(unsigned char *)(v64 + 8) = v65[8];
      *(void *)(v64 + 16) = *((void *)v65 + 2);
      *(unsigned char *)(v64 + 24) = v65[24];
      uint64_t v71 = v66[6];
      uint64_t v72 = (_OWORD *)(v64 + v71);
      unint64_t v73 = &v65[v71];
      uint64_t v74 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v75 = *(void *)(v74 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
      {
        sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        _OWORD *v72 = *(_OWORD *)v73;
        uint64_t v87 = *(int *)(v74 + 24);
        id v137 = &v73[v87];
        uint64_t v141 = (char *)v72 + v87;
        uint64_t v88 = sub_1C1516D9C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v141, v137, v88);
        *(void *)((char *)v72 + *(int *)(v74 + 28)) = *(void *)&v73[*(int *)(v74 + 28)];
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      a3 = v144;
      uint64_t v89 = v66[7];
      uint64_t v90 = v64 + v89;
      uint64_t v91 = &v65[v89];
      *(void *)uint64_t v90 = *(void *)v91;
      *(unsigned char *)(v90 + 8) = v91[8];
      uint64_t v92 = v66[8];
      uint64_t v93 = v64 + v92;
      uint64_t v94 = &v65[v92];
      *(unsigned char *)(v93 + 8) = v94[8];
      *(void *)uint64_t v93 = *(void *)v94;
      uint64_t v95 = v66[9];
      uint64_t v96 = v64 + v95;
      uint64_t v97 = &v65[v95];
      *(void *)uint64_t v96 = *(void *)v97;
      *(unsigned char *)(v96 + 8) = v97[8];
      uint64_t v98 = v66[10];
      uint64_t v99 = v64 + v98;
      uint64_t v100 = &v65[v98];
      long long v101 = *((_OWORD *)v100 + 1);
      *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
      *(_OWORD *)(v99 + 16) = v101;
      *(void *)(v99 + 32) = *((void *)v100 + 4);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v67 + 56))(v64, 0, 1, v66);
      goto LABEL_48;
    }
LABEL_32:
    sub_1BFFD930C(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy((void *)v64, v65, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_48;
  }
  if (v70)
  {
    sub_1BFE386B8(v64, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
    goto LABEL_32;
  }
  uint64_t v145 = a3;
  *(void *)uint64_t v64 = *(void *)v65;
  *(unsigned char *)(v64 + 8) = v65[8];
  *(void *)(v64 + 16) = *((void *)v65 + 2);
  *(unsigned char *)(v64 + 24) = v65[24];
  uint64_t v78 = v66[6];
  uint64_t v79 = v64 + v78;
  uint64_t v80 = &v65[v78];
  uint64_t v81 = type metadata accessor for FeedGroupBundleArticleQuotas();
  __src = *(void **)(v81 - 8);
  uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__src[6];
  uint64_t v140 = v79;
  LODWORD(v79) = v82(v79, 1, v81);
  uint64_t v136 = v80;
  int v83 = v82((uint64_t)v80, 1, v81);
  if (v79)
  {
    if (!v83)
    {
      *(_OWORD *)uint64_t v140 = *(_OWORD *)v80;
      uint64_t v103 = *(int *)(v81 + 24);
      uint64_t v104 = v140 + v103;
      int v105 = &v80[v103];
      uint64_t v106 = sub_1C1516D9C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
      *(void *)(v140 + *(int *)(v81 + 28)) = *(void *)&v136[*(int *)(v81 + 28)];
      ((void (*)(uint64_t, void, uint64_t, uint64_t))__src[7])(v140, 0, 1, v81);
      goto LABEL_43;
    }
    sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    size_t v85 = *(void *)(*(void *)(v84 - 8) + 64);
    uint64_t v86 = (void *)v140;
  }
  else
  {
    if (!v83)
    {
      *(void *)uint64_t v140 = *(void *)v80;
      *(void *)(v140 + 8) = *((void *)v80 + 1);
      swift_bridgeObjectRelease();
      uint64_t v107 = *(int *)(v81 + 24);
      uint64_t v108 = v140 + v107;
      uint64_t v109 = &v80[v107];
      uint64_t v110 = sub_1C1516D9C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v110 - 8) + 40))(v108, v109, v110);
      *(void *)(v140 + *(int *)(v81 + 28)) = *(void *)&v136[*(int *)(v81 + 28)];
      swift_bridgeObjectRelease();
      goto LABEL_43;
    }
    sub_1BFE386B8(v140, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    sub_1BFFD930C(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    size_t v85 = *(void *)(*(void *)(v102 - 8) + 64);
    uint64_t v86 = (void *)v140;
  }
  memcpy(v86, v80, v85);
LABEL_43:
  uint64_t v111 = v66[7];
  uint64_t v112 = v64 + v111;
  long long v113 = &v65[v111];
  *(void *)uint64_t v112 = *(void *)v113;
  *(unsigned char *)(v112 + 8) = v113[8];
  uint64_t v114 = v66[8];
  uint64_t v115 = v64 + v114;
  uint64_t v116 = &v65[v114];
  *(unsigned char *)(v115 + 8) = v116[8];
  *(void *)uint64_t v115 = *(void *)v116;
  uint64_t v117 = v66[9];
  uint64_t v118 = v64 + v117;
  uint64_t v119 = &v65[v117];
  *(void *)uint64_t v118 = *(void *)v119;
  *(unsigned char *)(v118 + 8) = v119[8];
  uint64_t v120 = v66[10];
  uint64_t v121 = v64 + v120;
  uint64_t v122 = &v65[v120];
  a3 = v145;
  if (*(void *)(v121 + 32) != 1)
  {
    uint64_t v123 = *((void *)v122 + 4);
    if (v123 != 1)
    {
      *(void *)uint64_t v121 = *(void *)v122;
      *(unsigned char *)(v121 + 8) = v122[8];
      *(void *)(v121 + 16) = *((void *)v122 + 2);
      *(unsigned char *)(v121 + 24) = v122[24];
      *(void *)(v121 + 32) = v123;
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    sub_1C0921044(v121);
  }
  long long v124 = *((_OWORD *)v122 + 1);
  *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
  *(_OWORD *)(v121 + 16) = v124;
  *(void *)(v121 + 32) = *((void *)v122 + 4);
LABEL_48:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v125 = a3[12];
  long long v126 = *(void **)(a1 + v125);
  *(void *)(a1 + v125) = *(void *)(a2 + v125);

  uint64_t v127 = a3[13];
  uint64_t v128 = *(void **)(a1 + v127);
  *(void *)(a1 + v127) = *(void *)(a2 + v127);

  uint64_t v129 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(void *)(a1 + v129) = *(void *)(a2 + v129);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatServiceOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0A241F0);
}

uint64_t sub_1C0A241F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatTransformData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FormatServiceOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0A242C8);
}

uint64_t sub_1C0A242C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatTransformData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 40);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C0A24388(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t ResourceServiceType.fetchResources(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A25CDC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v10 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, char *, void, void, void, void, uint64_t, uint64_t))(a3 + 8))(a1, v9, v8, *MEMORY[0x1E4F7E028], 0, 0, 0, a2, a3);
  sub_1C0A248C0((uint64_t)v8);
  return v11;
}

uint64_t ResourceServiceType.fetchResource(identifier:)(uint64_t a1, uint64_t a2)
{
  sub_1C0A25CDC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  FCCurrentQoSOrUtilityIfMain();
  uint64_t v7 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(a1, a2);
  sub_1C0A248C0((uint64_t)v6);
  return v8;
}

uint64_t ResourceServiceType.fetchResources(identifiers:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = FCCurrentQoSOrUtilityIfMain();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(a4 + 8))(a1, v8, a2, *MEMORY[0x1E4F7E028], 0, 0, 0, a3, a4);
}

uint64_t ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:)(uint64_t a1, uint64_t a2)
{
  return ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(a1, a2);
}

uint64_t ResourceServiceType.fetchAllResources(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A25CDC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v10 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, char *, void, void, void, uint64_t, uint64_t, uint64_t))(a3 + 8))(a1, v9, v8, *MEMORY[0x1E4F7E028], 0, 0, 1, a2, a3);
  sub_1C0A248C0((uint64_t)v8);
  return v11;
}

uint64_t ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(a6 + 8))(a1, a2, a3, a4, 0, 0, 0, a5, a6);
}

uint64_t sub_1C0A248C0(uint64_t a1)
{
  sub_1C0A25CDC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ResourceServiceType.fetchResources(identifiers:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0A25CDC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, char *, void, void, void, void, uint64_t, uint64_t))(a4 + 8))(a1, a2, v10, *MEMORY[0x1E4F7E028], 0, 0, 0, a3, a4);
  sub_1C0A248C0((uint64_t)v10);
  return v12;
}

uint64_t ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a8 + 8))(a1, a2, a3, a4, a5, a6 & 1, 0, a7, a8);
}

uint64_t ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(uint64_t a1, uint64_t a2)
{
  sub_1C0153314();
  sub_1C151932C();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C1518E7C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A0B0);
  uint64_t v6 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1C0A24BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = a8 & 1;
  sub_1BFEF9A78();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a10 + 8);
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(v15, a4, a5, a6, a7, v14, 0, a9, a10);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C0A24CB4()
{
  return sub_1C0A24BD8(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0A24CF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  if (*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(a2, a3);
    if (v9)
    {
      id v10 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
      uint64_t result = swift_bridgeObjectRelease();
      *a4 = v10;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1C0A25E6C();
  swift_allocError();
  *(void *)uint64_t v12 = a2;
  *(void *)(v12 + 8) = a3;
  *(unsigned char *)(v12 + 16) = 0;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1C0A24DB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A24DEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0A24CF0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t ResourceServiceType.fetchResource(identifier:qualityOfService:)(uint64_t a1, uint64_t a2)
{
  sub_1C0A25CDC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(a1, a2);
  sub_1C0A248C0((uint64_t)v6);
  return v8;
}

uint64_t sub_1C0A24F48()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 2) {
    return v1 & 1;
  }
  if (qword_1EB884D48 != -1) {
    swift_once();
  }
  sub_1C0A25F28();
  sub_1C1516FBC();
  uint64_t result = v3;
  *(unsigned char *)(v0 + 24) = v3;
  return result;
}

uint64_t ResourceService.__allocating_init(cloudContext:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 24) = 2;
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ResourceService.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:shouldFailOnMissingObjects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  sub_1C0A25CDC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = sub_1C1517F3C();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  MEMORY[0x1F4188790](v20);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v53 = sub_1C018D788(MEMORY[0x1E4FBC860]);
    sub_1C0A25CDC(0, (unint64_t *)&unk_1EB871488, (uint64_t (*)(uint64_t))sub_1C0153314, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  uint64_t v46 = v23;
  uint64_t v47 = (char *)&v46 - v22;
  uint64_t v51 = v19;
  uint64_t v52 = v7;
  uint64_t v50 = v21;
  uint64_t v24 = a5;
  uint64_t v25 = *(void *)(v7 + 16);
  id v26 = objc_allocWithZone(MEMORY[0x1E4F7E788]);
  int v49 = a7;
  id v27 = v26;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151EBAC();
  uint64_t v48 = a3;
  id v29 = (void *)v28;
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v27, sel_initWithContext_resourceIDs_downloadAssets_, v25, v29, 1);

  swift_unknownObjectRelease();
  objc_msgSend(v30, sel_setQualityOfService_, a2);
  objc_msgSend(v30, sel_setPurpose_, a4);
  if (a6) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = v24;
  }
  uint64_t v33 = v50;
  uint64_t v32 = v51;
  objc_msgSend(v30, sel_setCacheLifetimeHint_, v31);
  id v34 = v30;
  objc_msgSend(v34, sel_setRelativePriority_, FCInferRelativePriorityFromQualityOfService());

  objc_msgSend(v34, sel_setCanSendFetchCompletionSynchronously_, 1);
  objc_msgSend(v34, sel_setShouldFailOnMissingObjects_, v49 & 1);
  sub_1C0255390(v48, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v17, 1, v33) != 1)
  {
    uint64_t v36 = v47;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v47, v17, v33);
    uint64_t v37 = v46;
    (*(void (**)(double *, char *, uint64_t))(v32 + 16))(v46, v36, v33);
    int v38 = (*(uint64_t (**)(double *, uint64_t))(v32 + 88))(v37, v33);
    if (v38 == *MEMORY[0x1E4FAA8B8])
    {
      (*(void (**)(double *, uint64_t))(v32 + 96))(v37, v33);
      double v39 = *v37;
      objc_msgSend(v34, sel_setCachePolicy_, 3);
    }
    else
    {
      if (v38 != *MEMORY[0x1E4FAA8C0])
      {
        if (v38 == *MEMORY[0x1E4FAA8A0])
        {
          objc_msgSend(v34, sel_setCachePolicy_, 1);
        }
        else
        {
          if (v38 != *MEMORY[0x1E4FAA8B0])
          {
            uint64_t v44 = (void (**)(char *, uint64_t))(v32 + 8);
            if (v38 == *MEMORY[0x1E4FAA8A8])
            {
              objc_msgSend(v34, sel_setCachePolicy_, 2);
              (*v44)(v36, v33);
            }
            else
            {
              objc_msgSend(v34, sel_setCachePolicy_, 0);
              uint64_t v45 = *v44;
              (*v44)(v36, v33);
              v45((char *)v37, v33);
            }
            goto LABEL_18;
          }
          objc_msgSend(v34, sel_setCachePolicy_, 3);
        }
        goto LABEL_17;
      }
      (*(void (**)(double *, uint64_t))(v32 + 96))(v37, v33);
      double v39 = *v37;
      objc_msgSend(v34, sel_setCachePolicy_, 4);
    }
    objc_msgSend(v34, sel_setMaximumCachedAge_, v39);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v33);
    goto LABEL_18;
  }
  sub_1C0A248C0((uint64_t)v17);
LABEL_18:
  uint64_t v40 = sub_1C0A24F48();
  if (v40) {
    uint64_t v40 = (uint64_t)objc_msgSend(v34, sel_setCachePolicy_, 1);
  }
  MEMORY[0x1F4188790](v40);
  *(&v46 - 2) = (double *)v34;
  sub_1C0A25CDC(0, (unint64_t *)&unk_1EB871488, (uint64_t (*)(uint64_t))sub_1C0153314, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1C151911C();
  *(void *)(swift_allocObject() + 16) = v34;
  id v41 = v34;
  uint64_t v42 = (void *)sub_1C1518E7C();
  uint64_t v35 = sub_1C151912C();

  swift_release();
  swift_release();

  return v35;
}

id sub_1C0A2568C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a3;
  v11[3] = a4;
  v11[4] = sub_1BFD35658;
  v11[5] = v10;
  v14[4] = sub_1C0A25E60;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1BFD34E78;
  v14[3] = &block_descriptor_38;
  uint64_t v12 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_setFetchCompletionBlock_, v12);
  _Block_release(v12);
  return objc_msgSend(a5, sel_start);
}

void sub_1C0A257C8(void *a1, void (*a2)(void *), uint64_t a3, uint64_t isUniquelyReferenced_nonNull_native, void *a5)
{
  if (!objc_msgSend(a1, sel_status)
    && (uint64_t v16 = objc_msgSend(a1, sel_fetchedObject)) != 0
    && (uint64_t v48 = v16, sub_1C0A25EC0(), (swift_dynamicCast() & 1) != 0))
  {
    unint64_t v17 = v47;
    if (v47 >> 62)
    {
LABEL_32:
      swift_bridgeObjectRetain_n();
      uint64_t v18 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      uint64_t v42 = a5;
      uint64_t v43 = (void (*)(void *))isUniquelyReferenced_nonNull_native;
      if (v18) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v42 = a5;
      uint64_t v43 = (void (*)(void *))isUniquelyReferenced_nonNull_native;
      if (v18)
      {
LABEL_10:
        unint64_t v45 = v17 & 0xC000000000000001;
        a5 = (void *)MEMORY[0x1E4FBC868];
        uint64_t v19 = 4;
        uint64_t v44 = (void *)v17;
        while (1)
        {
          uint64_t v21 = v19 - 4;
          if (v45)
          {
            id v22 = (id)MEMORY[0x1C18C7CB0](v19 - 4, v17);
            uint64_t v23 = v19 - 3;
            if (__OFADD__(v21, 1)) {
              goto LABEL_29;
            }
          }
          else
          {
            id v22 = *(id *)(v17 + 8 * v19);
            uint64_t v23 = v19 - 3;
            if (__OFADD__(v21, 1))
            {
LABEL_29:
              __break(1u);
LABEL_30:
              __break(1u);
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
          }
          uint64_t v46 = v23;
          uint64_t v24 = v18;
          id v25 = v22;
          id v26 = objc_msgSend(v22, sel_resourceID, v42, v43);
          uint64_t v27 = sub_1C151E62C();
          uint64_t v29 = v28;

          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v48 = a5;
          unint64_t v17 = (unint64_t)a5;
          unint64_t v31 = sub_1BFEF2D8C(v27, v29);
          uint64_t v32 = a5[2];
          BOOL v33 = (v30 & 1) == 0;
          uint64_t v34 = v32 + v33;
          if (__OFADD__(v32, v33)) {
            goto LABEL_30;
          }
          char v35 = v30;
          if (a5[3] >= v34)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              a5 = v48;
              if (v30) {
                goto LABEL_11;
              }
            }
            else
            {
              unint64_t v17 = (unint64_t)&v48;
              sub_1C10717B4();
              a5 = v48;
              if (v35) {
                goto LABEL_11;
              }
            }
          }
          else
          {
            sub_1C105F0E8(v34, isUniquelyReferenced_nonNull_native);
            unint64_t v17 = (unint64_t)v48;
            unint64_t v36 = sub_1BFEF2D8C(v27, v29);
            if ((v35 & 1) != (v37 & 1))
            {
              sub_1C1520CFC();
              __break(1u);
              return;
            }
            unint64_t v31 = v36;
            a5 = v48;
            if (v35)
            {
LABEL_11:
              uint64_t v20 = a5[7];

              *(void *)(v20 + 8 * v31) = v25;
              goto LABEL_12;
            }
          }
          a5[(v31 >> 6) + 8] |= 1 << v31;
          int v38 = (uint64_t *)(a5[6] + 16 * v31);
          *int v38 = v27;
          v38[1] = v29;
          *(void *)(a5[7] + 8 * v31) = v25;
          uint64_t v39 = a5[2];
          BOOL v40 = __OFADD__(v39, 1);
          uint64_t v41 = v39 + 1;
          if (v40) {
            goto LABEL_31;
          }
          a5[2] = v41;
          swift_bridgeObjectRetain();
LABEL_12:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v19;
          uint64_t v18 = v24;
          unint64_t v17 = (unint64_t)v44;
          if (v46 == v24) {
            goto LABEL_34;
          }
        }
      }
    }
    a5 = (void *)MEMORY[0x1E4FBC868];
LABEL_34:
    swift_bridgeObjectRelease_n();
    v43(a5);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = objc_msgSend(a1, sel_error);
    if (!v9)
    {
      sub_1C0A25E6C();
      id v9 = (id)swift_allocError();
      *(void *)uint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      *(unsigned char *)(v10 + 16) = 3;
    }
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = sub_1BFE9C558();
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 40) = 0xE000000000000000;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    uint64_t v12 = (void *)sub_1C151FD3C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();

    sub_1C0A25E6C();
    uint64_t v13 = (void *)swift_allocError();
    *(void *)uint64_t v14 = v9;
    *(void *)(v14 + 8) = 0;
    *(unsigned char *)(v14 + 16) = 2;
    id v15 = v9;
    a2(v13);
  }
}

uint64_t ResourceService.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ResourceService.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A25CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  return ResourceService.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:shouldFailOnMissingObjects:)(a1, a2, a3, a4, a5, a6 & 1, a7);
}

id sub_1C0A25CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0A2568C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1C0A25CDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0A25D40()
{
  return swift_deallocObject();
}

id sub_1C0A25D78()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

uint64_t dispatch thunk of ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:shouldFailOnMissingObjects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a9 + 8))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t method lookup function for ResourceService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ResourceService);
}

uint64_t dispatch thunk of ResourceService.__allocating_init(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ResourceService.__allocating_init(cloudContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C0A25DE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A25E20()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0A25E60(void *a1)
{
  sub_1C0A257C8(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

unint64_t sub_1C0A25E6C()
{
  unint64_t result = qword_1EA1A27D0;
  if (!qword_1EA1A27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A27D0);
  }
  return result;
}

void sub_1C0A25EC0()
{
  if (!qword_1EB871020)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A0B0);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871020);
    }
  }
}

unint64_t sub_1C0A25F28()
{
  unint64_t result = qword_1EB881AA8;
  if (!qword_1EB881AA8)
  {
    type metadata accessor for ResourceService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB881AA8);
  }
  return result;
}

id sub_1C0A25F80(id result, id a2, unsigned __int8 a3)
{
  if (a3 == 2) {
    return result;
  }
  if (a3 <= 1u) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for ResourceServiceErrors(uint64_t a1)
{
}

void sub_1C0A25FB8(void *a1, id a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {
  }
  else if (a3 <= 1u)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s8NewsFeed21ResourceServiceErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C0A25F80(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ResourceServiceErrors(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C0A25F80(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0A25FB8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResourceServiceErrors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  unsigned __int8 v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0A25FB8(v4, v5, v6);
  return a1;
}

uint64_t sub_1C0A260CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1C0A260E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ResourceServiceErrors()
{
  return &type metadata for ResourceServiceErrors;
}

void *FormatGroupNodeMaskRenderer.render<A, B>(context:contextLayoutOptions:layoutAttributes:maskLayoutAttributes:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0A26C70(a2, a4, a5);
}

uint64_t FormatGroupNodeMaskRenderer.deinit()
{
  return v0;
}

uint64_t FormatGroupNodeMaskRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C0A2615C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v135 = a2;
  uint64_t v5 = sub_1C151B0DC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned __int8 v8 = (uint64_t *)((char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1C151B10C();
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(void **)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  switch(*(unsigned char *)(a1 + 88))
  {
    case 1:
      uint64_t v47 = *(void *)(a1 + 40);
      uint64_t v48 = *(void *)(a1 + 48);
      uint64_t v136 = *(void *)(a1 + 72);
      uint64_t v137 = v20;
      id v49 = objc_allocWithZone((Class)type metadata accessor for FormatGroupNodeMaskShapeLayer());
      id v50 = v15;
      id v51 = objc_msgSend(v49, sel_init);
      id v52 = v51;
      if (a3) {
        id v53 = objc_msgSend(a3, sel_CGColor);
      }
      else {
        id v53 = 0;
      }
      objc_msgSend(v51, sel_setBackgroundColor_, v53);

      id v102 = v51;
      id v103 = objc_msgSend(v50, sel_CGPath);
      objc_msgSend(v102, sel_setPath_, v103);

      id v75 = v102;
      id v104 = objc_msgSend(v75, sel_path);
      objc_msgSend(v75, sel_setShadowPath_, v104);
      sub_1C0036570(v15, v14, v47, v48, v18, v19, v136, v137, 1);

      return v75;
    case 2:
      uint64_t v132 = v11;
      uint64_t v133 = v10;
      uint64_t v130 = v13;
      uint64_t v134 = v5;
      uint64_t v31 = v14;
      uint64_t v136 = v21;
      uint64_t v137 = v20;
      uint64_t v128 = v19;
      uint64_t v127 = v18;
      uint64_t v32 = v16;
      uint64_t v33 = v17;
      uint64_t v34 = v6;
      id v35 = objc_allocWithZone((Class)type metadata accessor for FormatGroupNodeMaskGradientLayer());
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFDB3920(v21);
      id v129 = objc_msgSend(v35, sel_init);
      uint64_t v36 = swift_bridgeObjectRetain();
      sub_1C024C2BC(v36);
      swift_bridgeObjectRelease();
      *unsigned __int8 v8 = v33;
      v8[1] = v32;
      uint64_t v37 = v127;
      uint64_t v38 = v128;
      v8[2] = v127;
      v8[3] = v38;
      uint64_t v39 = *MEMORY[0x1E4FAC408];
      uint64_t v131 = v34;
      BOOL v40 = *(void (**)(void *, uint64_t, uint64_t))(v34 + 104);
      uint64_t v41 = v130;
      v40(v8, v39, v134);
      swift_bridgeObjectRetain();
      sub_1C151B09C();
      sub_1C0036570(v15, v31, v33, v32, v37, v38, v136, v137, 2);
      id v42 = v129;
      unint64_t v43 = sub_1C151B08C();
      sub_1C023571C(v43);
      swift_bridgeObjectRelease();
      uint64_t v44 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      objc_msgSend(v42, sel_setColors_, v44);

      id v45 = v42;
      if (sub_1C151B07C())
      {
        sub_1BFFBE2BC();
        uint64_t v46 = (void *)sub_1C151EBAC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v46 = 0;
      }
      objc_msgSend(v45, sel_setLocations_, v46);

      id v57 = v45;
      sub_1C151B0EC();
      sub_1C151B0BC();
      double v59 = v58;
      double v61 = v60;
      uint64_t v62 = *(void (**)(void *, uint64_t))(v131 + 8);
      uint64_t v63 = v134;
      v62(v8, v134);
      objc_msgSend(v57, sel_setStartPoint_, v59, v61);

      id v64 = v57;
      sub_1C151B0EC();
      sub_1C151B0CC();
      double v66 = v65;
      double v68 = v67;
      v62(v8, v63);
      objc_msgSend(v64, sel_setEndPoint_, v66, v68);

      int v69 = *(double **)(a1 + 16);
      double v70 = v69[6];
      double v71 = v69[7];
      double v72 = v69[8];
      double v73 = v69[9];
      objc_msgSend(v64, sel_setFrame_, v70, v71, v72, v73);
      uint64_t v74 = self;
      id v75 = v64;
      id v76 = objc_msgSend(v74, sel_bezierPathWithRect_, v70, v71, v72, v73);
      id v77 = objc_msgSend(v76, sel_CGPath);

      objc_msgSend(v75, sel_setShadowPath_, v77);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v41, v133);
      return v75;
    case 3:
      id v54 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatGroupNodeMaskBasicLayer()), sel_init);
      id v55 = v54;
      if (a3) {
        id v56 = objc_msgSend(a3, sel_CGColor);
      }
      else {
        id v56 = 0;
      }
      objc_msgSend(v54, sel_setBackgroundColor_, v56);

      int v105 = *(double **)(a1 + 16);
      double v106 = v105[6];
      double v107 = v105[7];
      double v108 = v105[8];
      double v109 = v105[9];
      objc_msgSend(v54, sel_setFrame_, v106, v107, v108, v109);
      uint64_t v110 = self;
      id v75 = v54;
      id v100 = objc_msgSend(v110, sel_bezierPathWithRect_, v106, v107, v108, v109);
      id v101 = objc_msgSend(v100, sel_CGPath);
      goto LABEL_22;
    default:
      uint64_t v22 = *(void *)(a1 + 48);
      uint64_t v23 = *(void *)(a1 + 64);
      uint64_t v136 = *(void *)(a1 + 72);
      uint64_t v137 = v20;
      char v24 = v17;
      id v25 = objc_allocWithZone((Class)type metadata accessor for FormatGroupNodeMaskBasicLayer());
      char v26 = v24;
      sub_1BFF046A0((uint64_t)v15, v14, v24);
      id v27 = objc_msgSend(v25, sel_init);
      uint64_t v28 = *(double **)(a1 + 16);
      objc_msgSend(v27, sel_setFrame_, v28[6], v28[7], v28[8], v28[9]);
      id v29 = v27;
      if (a3) {
        id v30 = objc_msgSend(a3, sel_CGColor);
      }
      else {
        id v30 = 0;
      }
      objc_msgSend(v27, sel_setBackgroundColor_, v30);

      CGFloat v78 = v28[6];
      CGFloat v79 = v28[7];
      CGFloat v80 = v28[8];
      CGFloat v81 = v28[9];
      v138[0] = v15;
      v138[1] = v14;
      char v139 = v26;
      sub_1BFE6A0C8(v27, (uint64_t)v138, v78, v79, v80, v81);
      sub_1C0036570(v15, v14, v26, v22, v18, v23, v136, v137, 0);
      id v82 = objc_msgSend(v27, sel_cornerCurve);
      uint64_t v83 = sub_1C151E62C();
      uint64_t v85 = v84;
      if (v83 == sub_1C151E62C() && v85 == v86)
      {
        swift_bridgeObjectRelease_n();
LABEL_17:

        id v75 = v27;
        objc_msgSend(v75, sel_bounds);
        double v89 = v88;
        double v91 = v90;
        double v93 = v92;
        double v95 = v94;
        objc_msgSend(v75, sel_maskedCorners);
        uint64_t v96 = sub_1C151F31C();
        objc_msgSend(v75, sel_cornerRadius);
        double v98 = v97;
        objc_msgSend(v75, sel_cornerRadius);
        id v100 = objc_msgSend(self, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, v96, v89, v91, v93, v95, v98, v99);
        id v101 = objc_msgSend(v100, sel_CGPath);
        goto LABEL_22;
      }
      char v87 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v87) {
        goto LABEL_17;
      }
      uint64_t v113 = sub_1C151E62C();
      uint64_t v115 = v114;
      if (v113 == sub_1C151E62C() && v115 == v116)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1C1520A9C();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      id v75 = v27;
      objc_msgSend(v75, sel_bounds);
      double v118 = v117;
      double v120 = v119;
      double v122 = v121;
      double v124 = v123;
      objc_msgSend(v75, sel_cornerRadius);
      id v100 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v118, v120, v122, v124, v125);
      id v101 = objc_msgSend(v100, sel_CGPath);
LABEL_22:
      id v111 = v101;

      objc_msgSend(v75, sel_setShadowPath_, v111);
      return v75;
  }
}

void *sub_1C0A26C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_whiteColor);
  id v7 = sub_1C0A2615C(a2, a3, v6);
  uint64_t v9 = v8;

  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(v10 + 80);
  if (!v11)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v11 + 128);
  uint64_t v47 = v9;
  id v48 = v7;
  if (!v12)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
LABEL_11:
    int v23 = *(unsigned __int8 *)(v11 + 216);
    if (v23 != 254)
    {
      uint64_t v24 = *(void *)(v11 + 160);
      uint64_t v25 = *(void *)(v11 + 168);
      uint64_t v41 = *(void *)(v11 + 184);
      uint64_t v42 = *(void *)(v11 + 176);
      uint64_t v44 = *(void *)(v11 + 144);
      uint64_t v46 = *(void *)(v11 + 136);
      uint64_t v39 = *(void *)(v11 + 200);
      uint64_t v40 = *(void *)(v11 + 192);
      uint64_t v38 = *(void *)(v11 + 208);
      uint64_t v43 = *(void *)(v11 + 152);
      swift_retain();
      id v26 = sub_1C0A2615C(a2, a3, 0);
      uint64_t v28 = v27;
      objc_msgSend(v26, sel_setShadowRadius_, *(double *)&v46);
      objc_msgSend(v26, sel_setShadowOffset_, *(double *)&v24, *(double *)&v43);
      LODWORD(v29) = v44;
      objc_msgSend(v26, sel_setShadowOpacity_, v29);
      v49[0] = v25;
      id v30 = v26;
      Class v31 = FormatColor.color.getter((uint64_t)v30);
      id v32 = [(objc_class *)v31 CGColor];

      objc_msgSend(v30, sel_setShadowColor_, v32);
      id v33 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = sub_1C0EE5C90(0, v18[2] + 1, 1, v18);
      }
      unint64_t v35 = v18[2];
      unint64_t v34 = v18[3];
      if (v35 >= v34 >> 1) {
        uint64_t v18 = sub_1C0EE5C90((void *)(v34 > 1), v35 + 1, 1, v18);
      }
      void v18[2] = v35 + 1;
      uint64_t v36 = &v18[2 * v35];
      v36[4] = v33;
      v36[5] = v28;

      sub_1BFEF8738(v46, v44, v43, v24, v25, v42, v41, v40, v39, v38, v23);
      uint64_t v9 = v47;
      id v7 = v48;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  id v13 = sub_1C0A2615C(a2, a3, 0);
  uint64_t v45 = v14;
  if (*(unsigned char *)(a2 + 88))
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = -2;
  }
  else
  {
    uint64_t v15 = *(void *)(a2 + 24);
    uint64_t v16 = *(void *)(a2 + 32);
    char v17 = *(unsigned char *)(a2 + 40);
    sub_1BFF046A0(v15, v16, v17);
  }
  v49[0] = v15;
  v49[1] = v16;
  char v50 = v17;
  sub_1BFE69BFC(a1, v13, a3, v12, v49);
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v15, v16, v17);
  id v19 = v13;
  uint64_t v18 = sub_1C0EE5C90(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v21 = v18[2];
  unint64_t v20 = v18[3];
  if (v21 >= v20 >> 1) {
    uint64_t v18 = sub_1C0EE5C90((void *)(v20 > 1), v21 + 1, 1, v18);
  }
  void v18[2] = v21 + 1;
  uint64_t v22 = &v18[2 * v21];
  v22[4] = v19;
  v22[5] = v45 | 0x8000000000000000;

  uint64_t v11 = *(void *)(v10 + 80);
  uint64_t v9 = v47;
  id v7 = v48;
  if (v11) {
    goto LABEL_11;
  }
LABEL_17:
  type metadata accessor for FormatGroupNodeMaskRendererResult();
  unint64_t result = (void *)swift_allocObject();
  result[2] = v7;
  result[3] = v9;
  result[4] = v18;
  return result;
}

uint64_t method lookup function for FormatGroupNodeMaskRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeMaskRenderer);
}

ValueMetadata *type metadata accessor for WebEmbedCacheSize()
{
  return &type metadata for WebEmbedCacheSize;
}

void *sub_1C0A27044(uint64_t a1, void (*a2)(void *, void, uint64_t, uint64_t))
{
  id v77 = a2;
  uint64_t v3 = type metadata accessor for FormatOption();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  id v6 = (void *)((char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v68 - v8;
  sub_1C0181BEC(0);
  uint64_t v72 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  double v70 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v68 - v14);
  sub_1C01B2D70();
  uint64_t inited = swift_initStackObject();
  long long v78 = xmmword_1C1529AE0;
  uint64_t v73 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0A28C24(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = *(void *)(v11 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v83 = v17;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  uint64_t v71 = v19;
  unint64_t v82 = v18;
  uint64_t v74 = (void *)(v19 + v18);
  sub_1BFEE7E48(0, (unint64_t *)&qword_1EA1974C0, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBBE00]);
  uint64_t v76 = v20;
  uint64_t v21 = swift_initStackObject();
  uint64_t v22 = (void *)v21;
  *(_OWORD *)(v21 + 16) = v78;
  uint64_t v81 = v21 + 32;
  int64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (v23)
  {
    CGFloat v80 = (void *)v21;
    *(void *)&v88[0] = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v23, 0);
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v26 = *(void *)(v4 + 72);
    do
    {
      sub_1C0A28B5C(v25, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1C0A28B5C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1C0AF5D04(v6, v15);
      uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 0, 1, v27);
      sub_1C0A28BC4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v24 = *(void *)&v88[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F62D0(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = *(void *)&v88[0];
      }
      unint64_t v29 = *(void *)(v24 + 16);
      unint64_t v28 = *(void *)(v24 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1C05F62D0(v28 > 1, v29 + 1, 1);
        uint64_t v24 = *(void *)&v88[0];
      }
      *(void *)(v24 + 16) = v29 + 1;
      sub_1BFEEFA18((uint64_t)v15, v24 + v82 + v29 * v83, (uint64_t (*)(void))sub_1C0181BEC);
      v25 += v26;
      --v23;
    }
    while (v23);
    uint64_t v22 = v80;
  }
  sub_1C09BCFA4(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v24, v84);
  swift_bridgeObjectRelease();
  v22[7] = &type metadata for FormatInspectionGroup;
  v22[8] = &off_1F1BDEC90;
  uint64_t v30 = swift_allocObject();
  v22[4] = v30;
  *(void *)(v30 + 48) = v85;
  long long v31 = v84[1];
  *(_OWORD *)(v30 + 16) = v84[0];
  *(_OWORD *)(v30 + 32) = v31;
  uint64_t v32 = sub_1C0233FC8((uint64_t)v22);
  swift_setDeallocating();
  uint64_t v33 = sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  unint64_t v34 = sub_1C131B79C(v32);
  swift_bridgeObjectRelease();
  unint64_t v35 = v74;
  sub_1C042F458(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v34, 0, 0, v74);
  uint64_t v36 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v37 = *(void *)(v36 - 8);
  CGFloat v80 = *(void **)(v37 + 56);
  uint64_t v81 = v36;
  uint64_t v79 = v37 + 56;
  ((void (*)(void *, void, uint64_t))v80)(v35, 0, 1);
  uint64_t v38 = swift_initStackObject();
  *(_OWORD *)(v38 + 16) = v78;
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_1BFE71F8C(v39);
  swift_bridgeObjectRelease();
  *(void *)&v88[0] = v40;
  swift_retain();
  sub_1BFFCDDC4((uint64_t *)v88);
  uint64_t v41 = v70;
  uint64_t v69 = v38;
  swift_release();
  uint64_t v42 = *(void *)&v88[0];
  int64_t v43 = *(void *)(*(void *)&v88[0] + 16);
  if (v43)
  {
    v68[1] = v33;
    *(void *)&v88[0] = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v43, 0);
    uint64_t v44 = *(void *)&v88[0];
    *(void *)&long long v78 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t v45 = *(void *)(v78 - 8);
    uint64_t v46 = *(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56);
    uint64_t v76 = v45 + 56;
    id v77 = v46;
    uint64_t v47 = v41 + 1;
    v68[0] = v42;
    id v48 = (uint64_t *)(v42 + 40);
    long long v75 = xmmword_1C157D0F0;
    do
    {
      uint64_t v49 = *v48;
      uint64_t v50 = v81;
      id v51 = (void *)((char *)v41 + *(int *)(v81 + 24));
      *id v51 = *(v48 - 1);
      v51[1] = v49;
      uint64_t v52 = v78;
      swift_storeEnumTagMultiPayload();
      v77(v51, 0, 1, v52);
      *uint64_t v41 = v75;
      *uint64_t v47 = 0;
      v47[1] = 0;
      id v53 = (char *)v41 + *(int *)(v50 + 28);
      *(void *)id v53 = 0;
      *((void *)v53 + 1) = 0;
      v53[16] = -1;
      ((void (*)(_OWORD *, void, uint64_t, uint64_t))v80)(v41, 0, 1, v50);
      *(void *)&v88[0] = v44;
      uint64_t v54 = (uint64_t)v41;
      unint64_t v55 = *(void *)(v44 + 16);
      unint64_t v56 = *(void *)(v44 + 24);
      swift_bridgeObjectRetain();
      if (v55 >= v56 >> 1)
      {
        sub_1C05F62D0(v56 > 1, v55 + 1, 1);
        uint64_t v44 = *(void *)&v88[0];
      }
      v48 += 2;
      *(void *)(v44 + 16) = v55 + 1;
      sub_1BFEEFA18(v54, v44 + v82 + v55 * v83, (uint64_t (*)(void))sub_1C0181BEC);
      --v43;
      uint64_t v41 = (_OWORD *)v54;
    }
    while (v43);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v44 = MEMORY[0x1E4FBC860];
  }
  id v57 = (void *)((char *)v74 + v83);
  sub_1C09BCFA4(0x726F7463656C6553, 0xE900000000000073, 0, 0, v44, v86);
  swift_bridgeObjectRelease();
  uint64_t v58 = v69;
  *(void *)(v69 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v58 + 64) = &off_1F1BDEC90;
  uint64_t v59 = swift_allocObject();
  *(void *)(v58 + 32) = v59;
  *(void *)(v59 + 48) = v87;
  long long v60 = v86[1];
  *(_OWORD *)(v59 + 16) = v86[0];
  *(_OWORD *)(v59 + 32) = v60;
  uint64_t v61 = sub_1C0233FC8(v58);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v62 = sub_1C131B79C(v61);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v62, 0, 0, v57);
  ((void (*)(void *, void, uint64_t, uint64_t))v80)(v57, 0, 1, v81);
  sub_1C09BCFA4(0xD000000000000010, 0x80000001C1618F00, 0, 0, v71, v88);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v63 = v73;
  *(void *)(v73 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v63 + 64) = &off_1F1BDEC90;
  uint64_t v64 = swift_allocObject();
  *(void *)(v63 + 32) = v64;
  *(void *)(v64 + 48) = v89;
  long long v65 = v88[1];
  *(_OWORD *)(v64 + 16) = v88[0];
  *(_OWORD *)(v64 + 32) = v65;
  double v66 = sub_1C131B79C(v63);
  swift_setDeallocating();
  sub_1BFEE7E48(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  return v66;
}

void *sub_1C0A27970(void *a1, uint64_t a2)
{
  double v124 = a1;
  *(void *)&long long v125 = a2;
  sub_1C01F08BC(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v121 = (uint64_t)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v123 = (uint64_t)&v107 - v5;
  uint64_t v6 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v118 = *(void *)(v6 - 8);
  uint64_t v119 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v108 = (uint64_t)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v122 = (uint64_t)&v107 - v9;
  sub_1C0A28A60(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v116 = (uint64_t)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v120 = (uint64_t)&v107 - v13;
  uint64_t v14 = type metadata accessor for FeedCustomItem();
  uint64_t v113 = *(void *)(v14 - 8);
  uint64_t v114 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v107 = (uint64_t)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v117 = (uint64_t)&v107 - v17;
  sub_1C01F08F0(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v111 = (uint64_t)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v115 = (uint64_t)&v107 - v21;
  uint64_t v22 = type metadata accessor for FeedWebEmbed();
  uint64_t v110 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v112 = (uint64_t)&v107 - v26;
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v27 - 8);
  unint64_t v29 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v107 - v31;
  uint64_t v33 = type metadata accessor for FeedHeadline(0);
  uint64_t v109 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v35 = (uint64_t *)((char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v107 - v37;
  uint64_t v39 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v107 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1985C(v125, (uint64_t)&v147);
  if (*((void *)&v148 + 1))
  {
    sub_1BFC773DC(&v147, (uint64_t)v162);
    sub_1BFC66384((uint64_t)v162, (uint64_t)&v147);
    sub_1BFFF4D94(&v147, (uint64_t)v41);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v45 = *((void *)v41 + 9);
        unint64_t v46 = *((void *)v41 + 10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v45, v46);
        goto LABEL_4;
      case 2u:
      case 6u:
      case 9u:
      case 0xAu:
        sub_1C0A28BC4((uint64_t)v41, type metadata accessor for FeedItem);
        goto LABEL_4;
      case 3u:
        sub_1BFEEFA18((uint64_t)v41, (uint64_t)v38, type metadata accessor for FeedHeadline);
        sub_1C0A28B5C((uint64_t)v38, (uint64_t)v32, type metadata accessor for FeedHeadline);
        uint64_t v47 = v109;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v32, 0, 1, v33);
        sub_1C0A28B5C((uint64_t)v32, (uint64_t)v29, (uint64_t (*)(void))sub_1BFFFCF8C);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v29, 1, v33) == 1)
        {
          sub_1C0A28BC4((uint64_t)v29, (uint64_t (*)(void))sub_1BFFFCF8C);
          uint64_t v42 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
        }
        else
        {
          sub_1BFEEFA18((uint64_t)v29, (uint64_t)v35, type metadata accessor for FeedHeadline);
          uint64_t v42 = sub_1C00FF850(v124, v35);
          sub_1C0A28BC4((uint64_t)v35, type metadata accessor for FeedHeadline);
        }
        sub_1C0A28BC4((uint64_t)v32, (uint64_t (*)(void))sub_1BFFFCF8C);
        id v101 = type metadata accessor for FeedHeadline;
        uint64_t v102 = (uint64_t)v38;
        goto LABEL_33;
      case 4u:
        uint64_t v48 = v112;
        sub_1BFEEFA18((uint64_t)v41, v112, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        uint64_t v49 = v115;
        sub_1C0A28B5C(v48, v115, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        uint64_t v50 = v110;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v49, 0, 1, v22);
        uint64_t v51 = v111;
        sub_1C0A28B5C(v49, v111, (uint64_t (*)(void))sub_1C01F08F0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v22) == 1)
        {
          sub_1C0A28BC4(v51, (uint64_t (*)(void))sub_1C01F08F0);
          uint64_t v42 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
        }
        else
        {
          sub_1BFEEFA18(v51, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          uint64_t v42 = (uint64_t)sub_1C1034278(v124, (uint64_t)v24);
          sub_1C0A28BC4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        }
        sub_1C0A28BC4(v49, (uint64_t (*)(void))sub_1C01F08F0);
        id v103 = type metadata accessor for FeedWebEmbed;
        goto LABEL_32;
      case 5u:
        long long v52 = *((_OWORD *)v41 + 5);
        long long v53 = *((_OWORD *)v41 + 7);
        long long v153 = *((_OWORD *)v41 + 6);
        v154[0] = v53;
        *(_OWORD *)((char *)v154 + 9) = *(_OWORD *)(v41 + 121);
        long long v54 = *((_OWORD *)v41 + 1);
        long long v55 = *((_OWORD *)v41 + 3);
        long long v149 = *((_OWORD *)v41 + 2);
        long long v150 = v55;
        long long v56 = *((_OWORD *)v41 + 3);
        long long v57 = *((_OWORD *)v41 + 5);
        long long v151 = *((_OWORD *)v41 + 4);
        long long v152 = v57;
        long long v58 = *((_OWORD *)v41 + 1);
        long long v147 = *(_OWORD *)v41;
        long long v148 = v58;
        long long v59 = *((_OWORD *)v41 + 7);
        long long v144 = v153;
        v145[0] = v59;
        *(_OWORD *)((char *)v145 + 9) = *(_OWORD *)(v41 + 121);
        long long v140 = v149;
        long long v141 = v56;
        long long v142 = v151;
        long long v143 = v52;
        long long v138 = v147;
        long long v139 = v54;
        sub_1C0187FB0((uint64_t)&v147);
        uint64_t v42 = sub_1C0FE5F00((uint64_t)v124, &v138);
        sub_1C01880A4((uint64_t)&v147);
        sub_1C01880A4((uint64_t)&v147);
        goto LABEL_34;
      case 7u:
        long long v60 = *((_OWORD *)v41 + 7);
        long long v153 = *((_OWORD *)v41 + 6);
        v154[0] = v60;
        v154[1] = *((_OWORD *)v41 + 8);
        LOBYTE(v155) = v41[144];
        long long v61 = *((_OWORD *)v41 + 3);
        long long v149 = *((_OWORD *)v41 + 2);
        long long v150 = v61;
        long long v62 = *((_OWORD *)v41 + 5);
        long long v151 = *((_OWORD *)v41 + 4);
        long long v152 = v62;
        long long v63 = *((_OWORD *)v41 + 1);
        long long v147 = *(_OWORD *)v41;
        long long v148 = v63;
        sub_1BFEA435C((uint64_t)&v147, (uint64_t)&v138);
        uint64_t v42 = (uint64_t)sub_1C01B27B8((uint64_t)v124, (uint64_t)&v138);
        sub_1C0A28B00((uint64_t)&v138, &qword_1EB8819D8);
        sub_1BFEA4290((uint64_t)&v147);
        goto LABEL_34;
      case 8u:
        uint64_t v48 = v117;
        sub_1BFEEFA18((uint64_t)v41, v117, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
        uint64_t v64 = v120;
        sub_1C0A28B5C(v48, v120, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
        uint64_t v66 = v113;
        uint64_t v65 = v114;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v64, 0, 1, v114);
        uint64_t v67 = v116;
        sub_1C0A28B5C(v64, v116, (uint64_t (*)(void))sub_1C0A28A60);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v67, 1, v65) == 1)
        {
          sub_1C0A28BC4(v67, (uint64_t (*)(void))sub_1C0A28A60);
          uint64_t v42 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
        }
        else
        {
          uint64_t v104 = v107;
          sub_1BFEEFA18(v67, v107, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
          uint64_t v42 = (uint64_t)sub_1C128E968(v104);
          sub_1C0A28BC4(v104, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
        }
        sub_1C0A28BC4(v64, (uint64_t (*)(void))sub_1C0A28A60);
        id v103 = type metadata accessor for FeedCustomItem;
        goto LABEL_32;
      case 0xBu:
        swift_release();
        goto LABEL_4;
      case 0xCu:
        uint64_t v68 = *((void *)v41 + 1);
        uint64_t v70 = *((void *)v41 + 2);
        uint64_t v69 = *((void *)v41 + 3);
        char v71 = v41[32];
        *(void *)&long long v147 = *(void *)v41;
        *((void *)&v147 + 1) = v68;
        *(void *)&long long v148 = v70;
        *((void *)&v148 + 1) = v69;
        LOBYTE(v149) = v71;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v42 = (uint64_t)sub_1C0DBCFA0((uint64_t)v124, &v147);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_34;
      case 0xDu:
        long long v72 = *((_OWORD *)v41 + 11);
        long long v156 = *((_OWORD *)v41 + 10);
        long long v157 = v72;
        long long v158 = *((_OWORD *)v41 + 12);
        long long v73 = *((_OWORD *)v41 + 7);
        long long v153 = *((_OWORD *)v41 + 6);
        v154[0] = v73;
        long long v74 = *((_OWORD *)v41 + 9);
        v154[1] = *((_OWORD *)v41 + 8);
        long long v155 = v74;
        long long v75 = *((_OWORD *)v41 + 3);
        long long v149 = *((_OWORD *)v41 + 2);
        long long v150 = v75;
        long long v76 = *((_OWORD *)v41 + 5);
        long long v151 = *((_OWORD *)v41 + 4);
        long long v152 = v76;
        long long v77 = *((_OWORD *)v41 + 1);
        long long v147 = *(_OWORD *)v41;
        long long v148 = v77;
        sub_1C01F09C0((uint64_t)&v147, (uint64_t)&v138);
        sub_1C0A28A94((uint64_t)&v138, (uint64_t)v126, (unint64_t *)&qword_1EB861728);
        if ((void)v127)
        {
          v137[10] = v134;
          v137[11] = v135;
          v137[12] = v136;
          v137[6] = v130;
          v137[7] = v131;
          v137[8] = v132;
          v137[9] = v133;
          v137[2] = v126[2];
          uint64_t v137[3] = v127;
          v137[4] = v128;
          v137[5] = v129;
          v137[0] = v126[0];
          v137[1] = v126[1];
          uint64_t v42 = (uint64_t)sub_1C0C2DA88((uint64_t)v137);
          sub_1C01F0A74((uint64_t)v137);
        }
        else
        {
          sub_1C0A28B00((uint64_t)v126, (unint64_t *)&qword_1EB861728);
          uint64_t v42 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
        }
        sub_1C0A28B00((uint64_t)&v138, (unint64_t *)&qword_1EB861728);
        sub_1C01F0A74((uint64_t)&v147);
        goto LABEL_34;
      case 0xEu:
        char v78 = v41[16];
        uint64_t v79 = *((void *)v41 + 3);
        uint64_t v80 = *((void *)v41 + 6);
        uint64_t v81 = *((void *)v41 + 7);
        long long v147 = *(_OWORD *)v41;
        LOBYTE(v148) = v78;
        *((void *)&v148 + 1) = v79;
        long long v125 = *((_OWORD *)v41 + 2);
        long long v149 = v125;
        *(void *)&long long v150 = v80;
        *((void *)&v150 + 1) = v81;
        uint64_t v42 = (uint64_t)sub_1C0BFC31C((uint64_t *)&v147);
        sub_1BFEEFC20(v79, v125);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_34;
      case 0xFu:
        uint64_t v48 = v122;
        sub_1BFEEFA18((uint64_t)v41, v122, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
        uint64_t v82 = v123;
        sub_1C0A28B5C(v48, v123, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
        uint64_t v84 = v118;
        uint64_t v83 = v119;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56))(v82, 0, 1, v119);
        uint64_t v85 = v121;
        sub_1C0A28B5C(v82, v121, (uint64_t (*)(void))sub_1C01F08BC);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v85, 1, v83) == 1)
        {
          sub_1C0A28BC4(v85, (uint64_t (*)(void))sub_1C01F08BC);
          uint64_t v42 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
        }
        else
        {
          uint64_t v105 = v108;
          sub_1BFEEFA18(v85, v108, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          uint64_t v42 = (uint64_t)sub_1C0CDDC44(v105);
          sub_1C0A28BC4(v105, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
        }
        sub_1C0A28BC4(v82, (uint64_t (*)(void))sub_1C01F08BC);
        id v103 = type metadata accessor for FeedPuzzleStatistic;
LABEL_32:
        id v101 = (uint64_t (*)(uint64_t))v103;
        uint64_t v102 = v48;
LABEL_33:
        sub_1C0A28BC4(v102, v101);
        goto LABEL_34;
      case 0x10u:
        long long v86 = *((_OWORD *)v41 + 13);
        long long v87 = *((_OWORD *)v41 + 11);
        long long v158 = *((_OWORD *)v41 + 12);
        long long v159 = v86;
        long long v88 = *((_OWORD *)v41 + 13);
        long long v160 = *((_OWORD *)v41 + 14);
        long long v89 = *((_OWORD *)v41 + 9);
        long long v90 = *((_OWORD *)v41 + 7);
        v154[1] = *((_OWORD *)v41 + 8);
        long long v155 = v89;
        long long v91 = *((_OWORD *)v41 + 9);
        long long v92 = *((_OWORD *)v41 + 11);
        long long v156 = *((_OWORD *)v41 + 10);
        long long v157 = v92;
        long long v93 = *((_OWORD *)v41 + 5);
        long long v94 = *((_OWORD *)v41 + 3);
        long long v151 = *((_OWORD *)v41 + 4);
        long long v152 = v93;
        long long v95 = *((_OWORD *)v41 + 5);
        long long v96 = *((_OWORD *)v41 + 7);
        long long v153 = *((_OWORD *)v41 + 6);
        v154[0] = v96;
        long long v97 = *((_OWORD *)v41 + 1);
        long long v147 = *(_OWORD *)v41;
        long long v148 = v97;
        long long v98 = *((_OWORD *)v41 + 3);
        long long v100 = *(_OWORD *)v41;
        long long v99 = *((_OWORD *)v41 + 1);
        long long v149 = *((_OWORD *)v41 + 2);
        long long v150 = v98;
        v145[5] = v158;
        v145[6] = v88;
        v145[7] = *((_OWORD *)v41 + 14);
        v145[1] = v154[1];
        v145[2] = v91;
        v145[3] = v156;
        v145[4] = v87;
        long long v142 = v151;
        long long v143 = v95;
        long long v144 = v153;
        v145[0] = v90;
        long long v138 = v100;
        long long v139 = v99;
        uint64_t v161 = *((void *)v41 + 30);
        uint64_t v146 = *((void *)v41 + 30);
        long long v140 = v149;
        long long v141 = v94;
        uint64_t v42 = (uint64_t)sub_1C0CC1278((uint64_t)&v138);
        sub_1C01F0AC8((uint64_t)&v147);
        goto LABEL_34;
      case 0x11u:
        goto LABEL_4;
      default:
        uint64_t v43 = *((void *)v41 + 5);
        unint64_t v44 = *((void *)v41 + 6);
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v43, v44);
LABEL_4:
        uint64_t v42 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
LABEL_34:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v162);
        break;
    }
  }
  else
  {
    sub_1BFF19770((uint64_t)&v147);
    return sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  return (void *)v42;
}